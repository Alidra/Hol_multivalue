Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import INT_REM_EQ_SELF_term_abbrevs.
Require Import INT_DIV_EQ_0_spec.
Require Import INT_ENTIRE_spec.
Require Import INT_REM_DIV_spec.
Require Import thm0_spec.
Require Import thm1008952_spec.
Require Import thm1009824_spec.
Require Import thm1013352_spec.
Require Import thm1013364_spec.
Require Import thm1365106_spec.
Require Import thm1365406_spec.
Require Import thm1365720_spec.
Require Import thm1365721_spec.
Require Import thm1367111_spec.
Require Import thm1367247_spec.
Require Import thm1367248_spec.
Require Import thm1367254_spec.
Require Import thm1367303_spec.
Require Import thm1386578_spec.
Require Import thm1396750_spec.
Require Import thm1482679_spec.
Require Import thm1482981_spec.
Require Import thm16451_spec.
Require Import thm16452_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17646_spec.
Require Import thm18392_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm19158_spec.
Require Import thm19367_spec.
Require Import thm1980010_spec.
Require Import thm1980011_spec.
Require Import thm1980026_spec.
Require Import thm1980255_spec.
Require Import thm1980259_spec.
Require Import thm1980260_spec.
Require Import thm1980265_spec.
Require Import thm1980266_spec.
Require Import thm1981473_spec.
Require Import thm1981474_spec.
Require Import thm1981475_spec.
Require Import thm1981613_spec.
Require Import thm1982627_spec.
Require Import thm1982628_spec.
Require Import thm1982709_spec.
Require Import thm1982713_spec.
Require Import thm1982715_spec.
Require Import thm1982719_spec.
Require Import thm1982721_spec.
Require Import thm1982723_spec.
Require Import thm1982733_spec.
Require Import thm1982749_spec.
Require Import thm1982753_spec.
Require Import thm1982755_spec.
Require Import thm1982757_spec.
Require Import thm1982759_spec.
Require Import thm1982761_spec.
Require Import thm1982763_spec.
Require Import thm1982781_spec.
Require Import thm1982785_spec.
Require Import thm1982792_spec.
Require Import thm1988287_spec.
Require Import thm1988289_spec.
Require Import thm1988291_spec.
Require Import thm1988293_spec.
Require Import thm1988332_spec.
Require Import thm1988336_spec.
Require Import thm1988342_spec.
Require Import thm1988348_spec.
Require Import thm2318495_spec.
Require Import thm2318496_spec.
Require Import thm2318497_spec.
Require Import thm2318514_spec.
Require Import thm2318515_spec.
Require Import thm2318526_spec.
Require Import thm2318527_spec.
Require Import thm2318538_spec.
Require Import thm2318539_spec.
Require Import thm2318544_spec.
Require Import thm2318545_spec.
Require Import thm2318568_spec.
Require Import thm2318569_spec.
Require Import thm2318574_spec.
Require Import thm2318575_spec.
Require Import thm2318604_spec.
Require Import thm7_spec.
Require Import thm912739_spec.
Require Import thm940073_spec.
Lemma lem2626070 (x : int) : term0 x.
Proof. exact (@lem2301483 x). Qed.
Lemma lem2626071 (x : int) : (term0 x) = (term1 x).
Proof. exact (eq_refl (term0 x)). Qed.
Lemma lem2626072 (x : int) : term1 x.
Proof. exact (EQ_MP (@lem2626071 x) (@lem2626070 x)). Qed.
Lemma lem2626073 (x : int) (y : int) : term2 x y.
Proof. exact (@lem2626072 x y). Qed.
Lemma lem2626074 (x : int) (y : int) : (term2 x y) = (((int_mul x y) = term3) = (term4 x y)).
Proof. exact (eq_refl (term2 x y)). Qed.
Lemma lem2626076 (m : int) : term5 m.
Proof. exact (@lem2626069 m). Qed.
Lemma lem2626077 (m : int) : (term5 m) = (term6 m).
Proof. exact (eq_refl (term5 m)). Qed.
Lemma lem2626078 (m : int) : term6 m.
Proof. exact (EQ_MP (@lem2626077 m) (@lem2626076 m)). Qed.
Lemma lem2626079 (m : int) (n : int) : term7 m n.
Proof. exact (@lem2626078 m n). Qed.
Lemma lem2626080 (m : int) (n : int) : (term7 m n) = (((div m n) = term3) = (term8 m n)).
Proof. exact (eq_refl (term7 m n)). Qed.
Lemma lem2626082 (m : int) (x : int) : (term9 m x) = (((int_sub m x) = m) = (x = term3)).
Proof. exact (@lem2318604 (((int_sub m x) = m) = (x = term3))). Qed.
Lemma lem2626121 (m : int) (x : int) : (term10 m x) = (term11 m x).
Proof. exact (@lem17646 ((int_sub m x) = m) (x = term3)). Qed.
Lemma lem2626124 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem2626125 (x : int) (m : int) : ((int_sub m x) = m) = ((term12 m x) = (real_of_int m)).
Proof. exact (@lem2626124 (int_sub m x) m). Qed.
Lemma lem2626129 (x : int) (y : int) : (term12 x y) = (term13 x y).
Proof. exact (EQ_MP (@lem2318527 x y) (@lem2318526 x y)). Qed.
Lemma lem2626130 (m : int) (x : int) : (term12 m x) = (term13 m x).
Proof. exact (@lem2626129 m x). Qed.
Lemma lem2626131 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2626132 (m : int) (x : int) : (term14 m x) = (term15 m x).
Proof. exact (MK_COMB (@lem2626131) (@lem2626130 m x)). Qed.
Lemma lem2626133 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2626134 (x : int) (m : int) : ((term12 m x) = (real_of_int m)) = ((term13 m x) = (real_of_int m)).
Proof. exact (MK_COMB (@lem2626132 m x) (@lem2626133 m)). Qed.
Lemma lem2626136 (x : int) (m : int) : ((int_sub m x) = m) = ((term13 m x) = (real_of_int m)).
Proof. exact (TRANS (@lem2626125 x m) (@lem2626134 x m)). Qed.
Lemma lem2626138 (y : int) (x : int) : (term16 x y) = (term17 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem2626139 (x : int) : (term18 x) = (term19 x).
Proof. exact (@lem2626138 term3 x). Qed.
Lemma lem2626141 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2626142 (x : int) : (term21 x) = (term22 x).
Proof. exact (@lem2626141 (term23 x) term3). Qed.
Lemma lem2626144 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2626145 (x : int) : (term26 x) = (term27 x).
Proof. exact (@lem2626144 x term28). Qed.
Lemma lem2626147 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626148 : term30 = term31.
Proof. exact (@lem2626147 term32). Qed.
Lemma lem2626149 (x : int) : (term33 x) = (term33 x).
Proof. exact (eq_refl (term33 x)). Qed.
Lemma lem2626150 (x : int) : (term27 x) = (term34 x).
Proof. exact (MK_COMB (@lem2626149 x) (@lem2626148)). Qed.
Lemma lem2626151 (x : int) : (term26 x) = (term34 x).
Proof. exact (TRANS (@lem2626145 x) (@lem2626150 x)). Qed.
Lemma lem2626152 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2626153 (x : int) : (term35 x) = (term36 x).
Proof. exact (MK_COMB (@lem2626152) (@lem2626151 x)). Qed.
Lemma lem2626155 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626156 : term37 = term38.
Proof. exact (@lem2626155 (NUMERAL 0)). Qed.
Lemma lem2626157 (x : int) : (term22 x) = (term39 x).
Proof. exact (MK_COMB (@lem2626153 x) (@lem2626156)). Qed.
Lemma lem2626158 (x : int) : (term21 x) = (term39 x).
Proof. exact (TRANS (@lem2626142 x) (@lem2626157 x)). Qed.
Lemma lem2626159 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2626160 (x : int) : (term40 x) = (term41 x).
Proof. exact (MK_COMB (@lem2626159) (@lem2626158 x)). Qed.
Lemma lem2626162 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2626163 (x : int) : (term42 x) = (term43 x).
Proof. exact (@lem2626162 term44 x). Qed.
Lemma lem2626165 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2626166 : term45 = term46.
Proof. exact (@lem2626165 term3 term28). Qed.
Lemma lem2626168 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626169 : term37 = term38.
Proof. exact (@lem2626168 (NUMERAL 0)). Qed.
Lemma lem2626170 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626171 : term47 = term48.
Proof. exact (MK_COMB (@lem2626170) (@lem2626169)). Qed.
Lemma lem2626173 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626174 : term30 = term31.
Proof. exact (@lem2626173 term32). Qed.
Lemma lem2626175 : term46 = term49.
Proof. exact (MK_COMB (@lem2626171) (@lem2626174)). Qed.
Lemma lem2626176 : term45 = term49.
Proof. exact (TRANS (@lem2626166) (@lem2626175)). Qed.
Lemma lem2626177 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2626178 : term50 = term51.
Proof. exact (MK_COMB (@lem2626177) (@lem2626176)). Qed.
Lemma lem2626179 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2626180 (x : int) : (term43 x) = (term52 x).
Proof. exact (MK_COMB (@lem2626178) (@lem2626179 x)). Qed.
Lemma lem2626181 (x : int) : (term42 x) = (term52 x).
Proof. exact (TRANS (@lem2626163 x) (@lem2626180 x)). Qed.
Lemma lem2626182 (x : int) : (term19 x) = (term53 x).
Proof. exact (MK_COMB (@lem2626160 x) (@lem2626181 x)). Qed.
Lemma lem2626183 (x : int) : (term18 x) = (term53 x).
Proof. exact (TRANS (@lem2626139 x) (@lem2626182 x)). Qed.
Lemma lem2626184 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2626185 (x : int) (m : int) : (term54 x m) = (term55 x m).
Proof. exact (MK_COMB (@lem2626184) (@lem2626136 x m)). Qed.
Lemma lem2626186 (m : int) (x : int) : (term56 m x) = (term57 m x).
Proof. exact (MK_COMB (@lem2626185 x m) (@lem2626183 x)). Qed.
Lemma lem2626188 (y : int) (x : int) : (term16 x y) = (term17 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem2626189 (m : int) (x : int) : (term58 x m) = (term59 m x).
Proof. exact (@lem2626188 m (int_sub m x)). Qed.
Lemma lem2626191 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2626192 (x : int) (m : int) : (term60 x m) = (term61 x m).
Proof. exact (@lem2626191 (term62 m x) m). Qed.
Lemma lem2626194 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2626195 (m : int) (x : int) : (term63 m x) = (term64 m x).
Proof. exact (@lem2626194 (int_sub m x) term28). Qed.
Lemma lem2626197 (x : int) (y : int) : (term12 x y) = (term13 x y).
Proof. exact (EQ_MP (@lem2318527 x y) (@lem2318526 x y)). Qed.
Lemma lem2626198 (m : int) (x : int) : (term12 m x) = (term13 m x).
Proof. exact (@lem2626197 m x). Qed.
Lemma lem2626199 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626200 (m : int) (x : int) : (term65 m x) = (term66 m x).
Proof. exact (MK_COMB (@lem2626199) (@lem2626198 m x)). Qed.
Lemma lem2626202 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626203 : term30 = term31.
Proof. exact (@lem2626202 term32). Qed.
Lemma lem2626204 (m : int) (x : int) : (term64 m x) = (term67 m x).
Proof. exact (MK_COMB (@lem2626200 m x) (@lem2626203)). Qed.
Lemma lem2626205 (m : int) (x : int) : (term63 m x) = (term67 m x).
Proof. exact (TRANS (@lem2626195 m x) (@lem2626204 m x)). Qed.
Lemma lem2626206 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2626207 (m : int) (x : int) : (term68 m x) = (term69 m x).
Proof. exact (MK_COMB (@lem2626206) (@lem2626205 m x)). Qed.
Lemma lem2626208 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2626209 (x : int) (m : int) : (term61 x m) = (term70 x m).
Proof. exact (MK_COMB (@lem2626207 m x) (@lem2626208 m)). Qed.
Lemma lem2626210 (x : int) (m : int) : (term60 x m) = (term70 x m).
Proof. exact (TRANS (@lem2626192 x m) (@lem2626209 x m)). Qed.
Lemma lem2626211 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2626212 (x : int) (m : int) : (term71 x m) = (term72 x m).
Proof. exact (MK_COMB (@lem2626211) (@lem2626210 x m)). Qed.
Lemma lem2626214 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2626215 (m : int) (x : int) : (term73 m x) = (term74 m x).
Proof. exact (@lem2626214 (term23 m) (int_sub m x)). Qed.
Lemma lem2626217 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2626218 (m : int) : (term26 m) = (term27 m).
Proof. exact (@lem2626217 m term28). Qed.
Lemma lem2626220 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626221 : term30 = term31.
Proof. exact (@lem2626220 term32). Qed.
Lemma lem2626222 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2626223 (m : int) : (term27 m) = (term34 m).
Proof. exact (MK_COMB (@lem2626222 m) (@lem2626221)). Qed.
Lemma lem2626224 (m : int) : (term26 m) = (term34 m).
Proof. exact (TRANS (@lem2626218 m) (@lem2626223 m)). Qed.
Lemma lem2626225 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2626226 (m : int) : (term35 m) = (term36 m).
Proof. exact (MK_COMB (@lem2626225) (@lem2626224 m)). Qed.
Lemma lem2626228 (x : int) (y : int) : (term12 x y) = (term13 x y).
Proof. exact (EQ_MP (@lem2318527 x y) (@lem2318526 x y)). Qed.
Lemma lem2626229 (m : int) (x : int) : (term12 m x) = (term13 m x).
Proof. exact (@lem2626228 m x). Qed.
Lemma lem2626230 (m : int) (x : int) : (term74 m x) = (term75 m x).
Proof. exact (MK_COMB (@lem2626226 m) (@lem2626229 m x)). Qed.
Lemma lem2626231 (m : int) (x : int) : (term73 m x) = (term75 m x).
Proof. exact (TRANS (@lem2626215 m x) (@lem2626230 m x)). Qed.
Lemma lem2626232 (m : int) (x : int) : (term59 m x) = (term76 m x).
Proof. exact (MK_COMB (@lem2626212 x m) (@lem2626231 m x)). Qed.
Lemma lem2626233 (m : int) (x : int) : (term58 x m) = (term76 m x).
Proof. exact (TRANS (@lem2626189 m x) (@lem2626232 m x)). Qed.
Lemma lem2626236 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem2626237 (x : int) : (x = term3) = ((real_of_int x) = term37).
Proof. exact (@lem2626236 x term3). Qed.
Lemma lem2626241 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2626242 : term37 = term38.
Proof. exact (@lem2626241 (NUMERAL 0)). Qed.
Lemma lem2626243 (x : int) : (term77 x) = (term77 x).
Proof. exact (eq_refl (term77 x)). Qed.
Lemma lem2626244 (x : int) : ((real_of_int x) = term37) = ((real_of_int x) = term38).
Proof. exact (MK_COMB (@lem2626243 x) (@lem2626242)). Qed.
Lemma lem2626246 (x : int) : (x = term3) = ((real_of_int x) = term38).
Proof. exact (TRANS (@lem2626237 x) (@lem2626244 x)). Qed.
Lemma lem2626247 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2626248 (m : int) (x : int) : (term78 x m) = (term79 m x).
Proof. exact (MK_COMB (@lem2626247) (@lem2626233 m x)). Qed.
Lemma lem2626249 (m : int) (x : int) : (term80 m x) = (term81 m x).
Proof. exact (MK_COMB (@lem2626248 m x) (@lem2626246 x)). Qed.
Lemma lem2626250 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2626251 (m : int) (x : int) : (term82 m x) = (term83 m x).
Proof. exact (MK_COMB (@lem2626250) (@lem2626186 m x)). Qed.
Lemma lem2626252 (m : int) (x : int) : (term11 m x) = (term84 m x).
Proof. exact (MK_COMB (@lem2626251 m x) (@lem2626249 m x)). Qed.
Lemma lem2626253 (m : int) (x : int) : (term10 m x) = (term84 m x).
Proof. exact (TRANS (@lem2626121 m x) (@lem2626252 m x)). Qed.
Lemma lem2626257 (t : Prop) : (term85 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem2626313 (m : int) (x : int) : (term86 m x) = (term84 m x).
Proof. exact (@lem2626257 (term84 m x)). Qed.
Lemma lem2626314 (x : int) (m : int) : ((term13 m x) = (real_of_int m)) = ((term87 x m) = term38).
Proof. exact (@lem1988293 (term13 m x) (real_of_int m)). Qed.
Lemma lem2626315 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2626328 (m : int) (x : int) : (term13 m x) = (term88 m x).
Proof. exact (@lem1982792 (real_of_int m) (real_of_int x)). Qed.
Lemma lem2626329 : real_sub = real_sub.
Proof. exact (eq_refl real_sub). Qed.
Lemma lem2626330 (m : int) (x : int) : (term89 m x) = (term90 m x).
Proof. exact (MK_COMB (@lem2626329) (@lem2626328 m x)). Qed.
Lemma lem2626331 (x : int) (m : int) : (term87 x m) = (term91 x m).
Proof. exact (MK_COMB (@lem2626330 m x) (@lem2626315 m)). Qed.
Lemma lem2626332 (x : int) (m : int) : (term91 x m) = (term92 x m).
Proof. exact (@lem1982792 (term88 m x) (real_of_int m)). Qed.
Lemma lem2626336 (m : int) (x : int) : (term92 x m) = (term93 m x).
Proof. exact (@lem1982759 (real_of_int m) (term94 m) (term94 x)). Qed.
Lemma lem2626337 (m : int) : (term95 m) = (term96 m).
Proof. exact (@lem1982715 term97 (real_of_int m)). Qed.
Lemma lem2626339 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626340 : term31 = term99.
Proof. exact (@lem2626339 term32). Qed.
Lemma lem2626342 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626343 : term97 = term102.
Proof. exact (@lem2626342 term32). Qed.
Lemma lem2626344 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626345 : term103 = term104.
Proof. exact (MK_COMB (@lem2626344) (@lem2626343)). Qed.
Lemma lem2626346 : term105 = term106.
Proof. exact (MK_COMB (@lem2626345) (@lem2626340)). Qed.
Lemma lem2626347 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2626349 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626350 : term109 = term110.
Proof. exact (@lem2626349 (NUMERAL 0) term32). Qed.
Lemma lem2626351 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626352 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626353 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626352 h1) (fun h1 : term110 = True => @lem2626351)). Qed.
Lemma lem2626354 : term110 = True.
Proof. exact (EQ_MP (@lem2626353) (@lem2626351)). Qed.
Lemma lem2626355 : term109 = True.
Proof. exact (TRANS (@lem2626350) (@lem2626354)). Qed.
Lemma lem2626356 : True = term109.
Proof. exact (SYM (@lem2626355)). Qed.
Lemma lem2626357 : term109.
Proof. exact (EQ_MP (@lem2626356) (@lem0)). Qed.
Lemma lem2626358 : term112.
Proof. exact (@lem2626347 (@lem2626357)). Qed.
Lemma lem2626360 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626361 : term109 = term110.
Proof. exact (@lem2626360 (NUMERAL 0) term32). Qed.
Lemma lem2626362 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626363 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626364 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626363 h1) (fun h1 : term110 = True => @lem2626362)). Qed.
Lemma lem2626365 : term110 = True.
Proof. exact (EQ_MP (@lem2626364) (@lem2626362)). Qed.
Lemma lem2626366 : term109 = True.
Proof. exact (TRANS (@lem2626361) (@lem2626365)). Qed.
Lemma lem2626367 : True = term109.
Proof. exact (SYM (@lem2626366)). Qed.
Lemma lem2626368 : term109.
Proof. exact (EQ_MP (@lem2626367) (@lem0)). Qed.
Lemma lem2626369 : term113.
Proof. exact (@lem2626358 (@lem2626368)). Qed.
Lemma lem2626371 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626372 : term109 = term110.
Proof. exact (@lem2626371 (NUMERAL 0) term32). Qed.
Lemma lem2626373 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626374 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626375 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626374 h1) (fun h1 : term110 = True => @lem2626373)). Qed.
Lemma lem2626376 : term110 = True.
Proof. exact (EQ_MP (@lem2626375) (@lem2626373)). Qed.
Lemma lem2626377 : term109 = True.
Proof. exact (TRANS (@lem2626372) (@lem2626376)). Qed.
Lemma lem2626378 : True = term109.
Proof. exact (SYM (@lem2626377)). Qed.
Lemma lem2626379 : term109.
Proof. exact (EQ_MP (@lem2626378) (@lem0)). Qed.
Lemma lem2626380 : term114.
Proof. exact (@lem2626369 (@lem2626379)). Qed.
Lemma lem2626382 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626383 : term117 = term118.
Proof. exact (@lem2626382 term32 term32). Qed.
Lemma lem2626384 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626385 : term120 = term32.
Proof. exact (EQ_MP (@lem2626384) (@lem940073)). Qed.
Lemma lem2626386 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626387 : term118 = term31.
Proof. exact (MK_COMB (@lem2626386) (@lem2626385)). Qed.
Lemma lem2626388 : term117 = term31.
Proof. exact (TRANS (@lem2626383) (@lem2626387)). Qed.
Lemma lem2626390 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626391 : term123 = term124.
Proof. exact (@lem2626390 term32 term32). Qed.
Lemma lem2626392 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626393 : term120 = term32.
Proof. exact (EQ_MP (@lem2626392) (@lem940073)). Qed.
Lemma lem2626394 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626395 : term118 = term31.
Proof. exact (MK_COMB (@lem2626394) (@lem2626393)). Qed.
Lemma lem2626396 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626397 : term124 = term97.
Proof. exact (MK_COMB (@lem2626396) (@lem2626395)). Qed.
Lemma lem2626398 : term123 = term97.
Proof. exact (TRANS (@lem2626391) (@lem2626397)). Qed.
Lemma lem2626399 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626400 : term125 = term103.
Proof. exact (MK_COMB (@lem2626399) (@lem2626398)). Qed.
Lemma lem2626401 : term126 = term105.
Proof. exact (MK_COMB (@lem2626400) (@lem2626388)). Qed.
Lemma lem2626403 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2626404 : term105 = term38.
Proof. exact (@lem2626403 term32). Qed.
Lemma lem2626405 : term126 = term38.
Proof. exact (TRANS (@lem2626401) (@lem2626404)). Qed.
Lemma lem2626406 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626407 : term128 = term129.
Proof. exact (MK_COMB (@lem2626406) (@lem2626405)). Qed.
Lemma lem2626408 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2626409 : term130 = term131.
Proof. exact (MK_COMB (@lem2626407) (@lem2626408)). Qed.
Lemma lem2626411 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626412 : term131 = term38.
Proof. exact (@lem2626411 term32). Qed.
Lemma lem2626413 : term130 = term38.
Proof. exact (TRANS (@lem2626409) (@lem2626412)). Qed.
Lemma lem2626415 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626416 : term117 = term118.
Proof. exact (@lem2626415 term32 term32). Qed.
Lemma lem2626417 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626418 : term120 = term32.
Proof. exact (EQ_MP (@lem2626417) (@lem940073)). Qed.
Lemma lem2626419 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626420 : term118 = term31.
Proof. exact (MK_COMB (@lem2626419) (@lem2626418)). Qed.
Lemma lem2626421 : term117 = term31.
Proof. exact (TRANS (@lem2626416) (@lem2626420)). Qed.
Lemma lem2626422 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2626423 : term133 = term131.
Proof. exact (MK_COMB (@lem2626422) (@lem2626421)). Qed.
Lemma lem2626425 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626426 : term131 = term38.
Proof. exact (@lem2626425 term32). Qed.
Lemma lem2626427 : term133 = term38.
Proof. exact (TRANS (@lem2626423) (@lem2626426)). Qed.
Lemma lem2626428 : term38 = term133.
Proof. exact (SYM (@lem2626427)). Qed.
Lemma lem2626429 : term130 = term133.
Proof. exact (TRANS (@lem2626413) (@lem2626428)). Qed.
Lemma lem2626430 : term106 = term134.
Proof. exact (@lem2626380 (@lem2626429)). Qed.
Lemma lem2626431 : term105 = term134.
Proof. exact (TRANS (@lem2626346) (@lem2626430)). Qed.
Lemma lem2626433 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2626434 : term134 = term38.
Proof. exact (@lem2626433 term38). Qed.
Lemma lem2626435 : term105 = term38.
Proof. exact (TRANS (@lem2626431) (@lem2626434)). Qed.
Lemma lem2626436 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626437 : term136 = term129.
Proof. exact (MK_COMB (@lem2626436) (@lem2626435)). Qed.
Lemma lem2626438 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2626439 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2626437) (@lem2626438 m)). Qed.
Lemma lem2626440 (m : int) : (term95 m) = (term137 m).
Proof. exact (TRANS (@lem2626337 m) (@lem2626439 m)). Qed.
Lemma lem2626441 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2626442 (m : int) : (term95 m) = term38.
Proof. exact (TRANS (@lem2626440 m) (@lem2626441 m)). Qed.
Lemma lem2626443 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626444 (m : int) : (term138 m) = term48.
Proof. exact (MK_COMB (@lem2626443) (@lem2626442 m)). Qed.
Lemma lem2626445 (x : int) : (term94 x) = (term94 x).
Proof. exact (eq_refl (term94 x)). Qed.
Lemma lem2626446 (m : int) (x : int) : (term93 m x) = (term139 x).
Proof. exact (MK_COMB (@lem2626444 m) (@lem2626445 x)). Qed.
Lemma lem2626447 (m : int) (x : int) : (term92 x m) = (term139 x).
Proof. exact (TRANS (@lem2626336 m x) (@lem2626446 m x)). Qed.
Lemma lem2626448 (x : int) : (term139 x) = (term94 x).
Proof. exact (@lem1982721 (term94 x)). Qed.
Lemma lem2626450 (m : int) (x : int) : (term92 x m) = (term94 x).
Proof. exact (TRANS (@lem2626447 m x) (@lem2626448 x)). Qed.
Lemma lem2626451 (m : int) (x : int) : (term91 x m) = (term94 x).
Proof. exact (TRANS (@lem2626332 x m) (@lem2626450 m x)). Qed.
Lemma lem2626452 (m : int) (x : int) : (term87 x m) = (term94 x).
Proof. exact (TRANS (@lem2626331 x m) (@lem2626451 m x)). Qed.
Lemma lem2626453 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2626454 (m : int) (x : int) : (term140 x m) = (term141 x).
Proof. exact (MK_COMB (@lem2626453) (@lem2626452 m x)). Qed.
Lemma lem2626455 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2626456 (m : int) (x : int) : ((term87 x m) = term38) = ((term94 x) = term38).
Proof. exact (MK_COMB (@lem2626454 m x) (@lem2626455)). Qed.
Lemma lem2626457 (m : int) (x : int) : ((term13 m x) = (real_of_int m)) = ((term94 x) = term38).
Proof. exact (TRANS (@lem2626314 x m) (@lem2626456 m x)). Qed.
Lemma lem2626458 (x : int) : (term39 x) = (term142 x).
Proof. exact (@lem1988287 term38 (term34 x)). Qed.
Lemma lem2626470 (x : int) : (term143 x) = (term144 x).
Proof. exact (@lem1982792 term38 (term34 x)). Qed.
Lemma lem2626471 (x : int) : (term145 x) = (term146 x).
Proof. exact (@lem1982781 (real_of_int x) term97 term31). Qed.
Lemma lem2626473 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626474 : term31 = term99.
Proof. exact (@lem2626473 term32). Qed.
Lemma lem2626476 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626477 : term97 = term102.
Proof. exact (@lem2626476 term32). Qed.
Lemma lem2626478 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626479 : term147 = term148.
Proof. exact (MK_COMB (@lem2626478) (@lem2626477)). Qed.
Lemma lem2626480 : term123 = term149.
Proof. exact (MK_COMB (@lem2626479) (@lem2626474)). Qed.
Lemma lem2626481 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2626483 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626484 : term117 = term118.
Proof. exact (@lem2626483 term32 term32). Qed.
Lemma lem2626485 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626486 : term120 = term32.
Proof. exact (EQ_MP (@lem2626485) (@lem940073)). Qed.
Lemma lem2626487 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626488 : term118 = term31.
Proof. exact (MK_COMB (@lem2626487) (@lem2626486)). Qed.
Lemma lem2626489 : term117 = term31.
Proof. exact (TRANS (@lem2626484) (@lem2626488)). Qed.
Lemma lem2626491 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626492 : term123 = term124.
Proof. exact (@lem2626491 term32 term32). Qed.
Lemma lem2626493 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626494 : term120 = term32.
Proof. exact (EQ_MP (@lem2626493) (@lem940073)). Qed.
Lemma lem2626495 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626496 : term118 = term31.
Proof. exact (MK_COMB (@lem2626495) (@lem2626494)). Qed.
Lemma lem2626497 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626498 : term124 = term97.
Proof. exact (MK_COMB (@lem2626497) (@lem2626496)). Qed.
Lemma lem2626499 : term123 = term97.
Proof. exact (TRANS (@lem2626492) (@lem2626498)). Qed.
Lemma lem2626500 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2626501 : term151 = term152.
Proof. exact (MK_COMB (@lem2626500) (@lem2626499)). Qed.
Lemma lem2626502 : term150 = term102.
Proof. exact (MK_COMB (@lem2626501) (@lem2626489)). Qed.
Lemma lem2626503 : term149 = term102.
Proof. exact (TRANS (@lem2626481) (@lem2626502)). Qed.
Lemma lem2626504 : term123 = term102.
Proof. exact (TRANS (@lem2626480) (@lem2626503)). Qed.
Lemma lem2626506 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2626507 : term102 = term97.
Proof. exact (@lem2626506 term97). Qed.
Lemma lem2626508 : term123 = term97.
Proof. exact (TRANS (@lem2626504) (@lem2626507)). Qed.
Lemma lem2626511 (x : int) : (term153 x) = (term153 x).
Proof. exact (eq_refl (term153 x)). Qed.
Lemma lem2626512 (x : int) : (term146 x) = (term154 x).
Proof. exact (MK_COMB (@lem2626511 x) (@lem2626508)). Qed.
Lemma lem2626513 (x : int) : (term145 x) = (term154 x).
Proof. exact (TRANS (@lem2626471 x) (@lem2626512 x)). Qed.
Lemma lem2626514 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2626515 (x : int) : (term144 x) = (term155 x).
Proof. exact (MK_COMB (@lem2626514) (@lem2626513 x)). Qed.
Lemma lem2626516 (x : int) : (term155 x) = (term154 x).
Proof. exact (@lem1982721 (term154 x)). Qed.
Lemma lem2626517 (x : int) : (term144 x) = (term154 x).
Proof. exact (TRANS (@lem2626515 x) (@lem2626516 x)). Qed.
Lemma lem2626519 (x : int) : (term143 x) = (term154 x).
Proof. exact (TRANS (@lem2626470 x) (@lem2626517 x)). Qed.
Lemma lem2626520 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2626521 (x : int) : (term156 x) = (term157 x).
Proof. exact (MK_COMB (@lem2626520) (@lem2626519 x)). Qed.
Lemma lem2626522 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2626523 (x : int) : (term142 x) = (term158 x).
Proof. exact (MK_COMB (@lem2626521 x) (@lem2626522)). Qed.
Lemma lem2626524 (x : int) : (term39 x) = (term158 x).
Proof. exact (TRANS (@lem2626458 x) (@lem2626523 x)). Qed.
Lemma lem2626525 (x : int) : (term52 x) = (term159 x).
Proof. exact (@lem1988287 (real_of_int x) term49). Qed.
Lemma lem2626532 : term49 = term31.
Proof. exact (@lem1982721 term31). Qed.
Lemma lem2626535 (x : int) : (term160 x) = (term160 x).
Proof. exact (eq_refl (term160 x)). Qed.
Lemma lem2626536 (x : int) : (term161 x) = (term162 x).
Proof. exact (MK_COMB (@lem2626535 x) (@lem2626532)). Qed.
Lemma lem2626537 (x : int) : (term162 x) = (term163 x).
Proof. exact (@lem1982792 (real_of_int x) term31). Qed.
Lemma lem2626539 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626540 : term31 = term99.
Proof. exact (@lem2626539 term32). Qed.
Lemma lem2626542 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626543 : term97 = term102.
Proof. exact (@lem2626542 term32). Qed.
Lemma lem2626544 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626545 : term147 = term148.
Proof. exact (MK_COMB (@lem2626544) (@lem2626543)). Qed.
Lemma lem2626546 : term123 = term149.
Proof. exact (MK_COMB (@lem2626545) (@lem2626540)). Qed.
Lemma lem2626547 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2626549 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626550 : term117 = term118.
Proof. exact (@lem2626549 term32 term32). Qed.
Lemma lem2626551 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626552 : term120 = term32.
Proof. exact (EQ_MP (@lem2626551) (@lem940073)). Qed.
Lemma lem2626553 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626554 : term118 = term31.
Proof. exact (MK_COMB (@lem2626553) (@lem2626552)). Qed.
Lemma lem2626555 : term117 = term31.
Proof. exact (TRANS (@lem2626550) (@lem2626554)). Qed.
Lemma lem2626557 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626558 : term123 = term124.
Proof. exact (@lem2626557 term32 term32). Qed.
Lemma lem2626559 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626560 : term120 = term32.
Proof. exact (EQ_MP (@lem2626559) (@lem940073)). Qed.
Lemma lem2626561 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626562 : term118 = term31.
Proof. exact (MK_COMB (@lem2626561) (@lem2626560)). Qed.
Lemma lem2626563 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626564 : term124 = term97.
Proof. exact (MK_COMB (@lem2626563) (@lem2626562)). Qed.
Lemma lem2626565 : term123 = term97.
Proof. exact (TRANS (@lem2626558) (@lem2626564)). Qed.
Lemma lem2626566 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2626567 : term151 = term152.
Proof. exact (MK_COMB (@lem2626566) (@lem2626565)). Qed.
Lemma lem2626568 : term150 = term102.
Proof. exact (MK_COMB (@lem2626567) (@lem2626555)). Qed.
Lemma lem2626569 : term149 = term102.
Proof. exact (TRANS (@lem2626547) (@lem2626568)). Qed.
Lemma lem2626570 : term123 = term102.
Proof. exact (TRANS (@lem2626546) (@lem2626569)). Qed.
Lemma lem2626572 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2626573 : term102 = term97.
Proof. exact (@lem2626572 term97). Qed.
Lemma lem2626574 : term123 = term97.
Proof. exact (TRANS (@lem2626570) (@lem2626573)). Qed.
Lemma lem2626575 (x : int) : (term33 x) = (term33 x).
Proof. exact (eq_refl (term33 x)). Qed.
Lemma lem2626578 (x : int) : (term163 x) = (term164 x).
Proof. exact (MK_COMB (@lem2626575 x) (@lem2626574)). Qed.
Lemma lem2626579 (x : int) : (term162 x) = (term164 x).
Proof. exact (TRANS (@lem2626537 x) (@lem2626578 x)). Qed.
Lemma lem2626580 (x : int) : (term161 x) = (term164 x).
Proof. exact (TRANS (@lem2626536 x) (@lem2626579 x)). Qed.
Lemma lem2626581 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2626582 (x : int) : (term165 x) = (term166 x).
Proof. exact (MK_COMB (@lem2626581) (@lem2626580 x)). Qed.
Lemma lem2626583 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2626584 (x : int) : (term159 x) = (term167 x).
Proof. exact (MK_COMB (@lem2626582 x) (@lem2626583)). Qed.
Lemma lem2626585 (x : int) : (term52 x) = (term167 x).
Proof. exact (TRANS (@lem2626525 x) (@lem2626584 x)). Qed.
Lemma lem2626586 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2626587 (x : int) : (term41 x) = (term168 x).
Proof. exact (MK_COMB (@lem2626586) (@lem2626524 x)). Qed.
Lemma lem2626588 (x : int) : (term53 x) = (term169 x).
Proof. exact (MK_COMB (@lem2626587 x) (@lem2626585 x)). Qed.
Lemma lem2626589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2626590 (m : int) (x : int) : (term55 x m) = (term170 x).
Proof. exact (MK_COMB (@lem2626589) (@lem2626457 m x)). Qed.
Lemma lem2626591 (m : int) (x : int) : (term57 m x) = (term171 x).
Proof. exact (MK_COMB (@lem2626590 m x) (@lem2626588 x)). Qed.
Lemma lem2626592 (m : int) (x : int) : (term70 x m) = (term172 m x).
Proof. exact (@lem1988287 (real_of_int m) (term67 m x)). Qed.
Lemma lem2626593 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2626606 (m : int) (x : int) : (term13 m x) = (term88 m x).
Proof. exact (@lem1982792 (real_of_int m) (real_of_int x)). Qed.
Lemma lem2626607 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626608 (m : int) (x : int) : (term66 m x) = (term173 m x).
Proof. exact (MK_COMB (@lem2626607) (@lem2626606 m x)). Qed.
Lemma lem2626609 (m : int) (x : int) : (term67 m x) = (term174 m x).
Proof. exact (MK_COMB (@lem2626608 m x) (@lem2626593)). Qed.
Lemma lem2626614 (m : int) (x : int) : (term174 m x) = (term175 m x).
Proof. exact (@lem1982755 (real_of_int m) (term94 x) term31). Qed.
Lemma lem2626615 (m : int) (x : int) : (term67 m x) = (term175 m x).
Proof. exact (TRANS (@lem2626609 m x) (@lem2626614 m x)). Qed.
Lemma lem2626618 (m : int) : (term160 m) = (term160 m).
Proof. exact (eq_refl (term160 m)). Qed.
Lemma lem2626619 (m : int) (x : int) : (term176 m x) = (term177 m x).
Proof. exact (MK_COMB (@lem2626618 m) (@lem2626615 m x)). Qed.
Lemma lem2626620 (m : int) (x : int) : (term177 m x) = (term178 m x).
Proof. exact (@lem1982792 (real_of_int m) (term175 m x)). Qed.
Lemma lem2626621 (m : int) (x : int) : (term179 m x) = (term180 m x).
Proof. exact (@lem1982781 (real_of_int m) term97 (term181 x)). Qed.
Lemma lem2626622 (x : int) : (term182 x) = (term183 x).
Proof. exact (@lem1982781 (term94 x) term97 term31). Qed.
Lemma lem2626624 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626625 : term31 = term99.
Proof. exact (@lem2626624 term32). Qed.
Lemma lem2626627 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626628 : term97 = term102.
Proof. exact (@lem2626627 term32). Qed.
Lemma lem2626629 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626630 : term147 = term148.
Proof. exact (MK_COMB (@lem2626629) (@lem2626628)). Qed.
Lemma lem2626631 : term123 = term149.
Proof. exact (MK_COMB (@lem2626630) (@lem2626625)). Qed.
Lemma lem2626632 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2626634 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626635 : term117 = term118.
Proof. exact (@lem2626634 term32 term32). Qed.
Lemma lem2626636 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626637 : term120 = term32.
Proof. exact (EQ_MP (@lem2626636) (@lem940073)). Qed.
Lemma lem2626638 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626639 : term118 = term31.
Proof. exact (MK_COMB (@lem2626638) (@lem2626637)). Qed.
Lemma lem2626640 : term117 = term31.
Proof. exact (TRANS (@lem2626635) (@lem2626639)). Qed.
Lemma lem2626642 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626643 : term123 = term124.
Proof. exact (@lem2626642 term32 term32). Qed.
Lemma lem2626644 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626645 : term120 = term32.
Proof. exact (EQ_MP (@lem2626644) (@lem940073)). Qed.
Lemma lem2626646 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626647 : term118 = term31.
Proof. exact (MK_COMB (@lem2626646) (@lem2626645)). Qed.
Lemma lem2626648 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626649 : term124 = term97.
Proof. exact (MK_COMB (@lem2626648) (@lem2626647)). Qed.
Lemma lem2626650 : term123 = term97.
Proof. exact (TRANS (@lem2626643) (@lem2626649)). Qed.
Lemma lem2626651 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2626652 : term151 = term152.
Proof. exact (MK_COMB (@lem2626651) (@lem2626650)). Qed.
Lemma lem2626653 : term150 = term102.
Proof. exact (MK_COMB (@lem2626652) (@lem2626640)). Qed.
Lemma lem2626654 : term149 = term102.
Proof. exact (TRANS (@lem2626632) (@lem2626653)). Qed.
Lemma lem2626655 : term123 = term102.
Proof. exact (TRANS (@lem2626631) (@lem2626654)). Qed.
Lemma lem2626657 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2626658 : term102 = term97.
Proof. exact (@lem2626657 term97). Qed.
Lemma lem2626659 : term123 = term97.
Proof. exact (TRANS (@lem2626655) (@lem2626658)). Qed.
Lemma lem2626660 (x : int) : (term184 x) = (term185 x).
Proof. exact (@lem1982749 term97 term97 (real_of_int x)). Qed.
Lemma lem2626662 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626663 : term97 = term102.
Proof. exact (@lem2626662 term32). Qed.
Lemma lem2626665 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626666 : term97 = term102.
Proof. exact (@lem2626665 term32). Qed.
Lemma lem2626667 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626668 : term147 = term148.
Proof. exact (MK_COMB (@lem2626667) (@lem2626666)). Qed.
Lemma lem2626669 : term186 = term187.
Proof. exact (MK_COMB (@lem2626668) (@lem2626663)). Qed.
Lemma lem2626670 : term187 = term188.
Proof. exact (@lem1981613 term97 term97 term31 term31). Qed.
Lemma lem2626672 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626673 : term117 = term118.
Proof. exact (@lem2626672 term32 term32). Qed.
Lemma lem2626674 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626675 : term120 = term32.
Proof. exact (EQ_MP (@lem2626674) (@lem940073)). Qed.
Lemma lem2626676 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626677 : term118 = term31.
Proof. exact (MK_COMB (@lem2626676) (@lem2626675)). Qed.
Lemma lem2626678 : term117 = term31.
Proof. exact (TRANS (@lem2626673) (@lem2626677)). Qed.
Lemma lem2626680 (m : nat) (n : nat) : (term189 m n) = (term116 m n).
Proof. exact (proj2 (@lem1367248 m n)). Qed.
Lemma lem2626681 : term186 = term118.
Proof. exact (@lem2626680 term32 term32). Qed.
Lemma lem2626682 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626683 : term120 = term32.
Proof. exact (EQ_MP (@lem2626682) (@lem940073)). Qed.
Lemma lem2626684 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626685 : term118 = term31.
Proof. exact (MK_COMB (@lem2626684) (@lem2626683)). Qed.
Lemma lem2626686 : term186 = term31.
Proof. exact (TRANS (@lem2626681) (@lem2626685)). Qed.
Lemma lem2626687 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2626688 : term190 = term191.
Proof. exact (MK_COMB (@lem2626687) (@lem2626686)). Qed.
Lemma lem2626689 : term188 = term99.
Proof. exact (MK_COMB (@lem2626688) (@lem2626678)). Qed.
Lemma lem2626690 : term187 = term99.
Proof. exact (TRANS (@lem2626670) (@lem2626689)). Qed.
Lemma lem2626691 : term186 = term99.
Proof. exact (TRANS (@lem2626669) (@lem2626690)). Qed.
Lemma lem2626693 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2626694 : term99 = term31.
Proof. exact (@lem2626693 term31). Qed.
Lemma lem2626695 : term186 = term31.
Proof. exact (TRANS (@lem2626691) (@lem2626694)). Qed.
Lemma lem2626696 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626697 : term192 = term193.
Proof. exact (MK_COMB (@lem2626696) (@lem2626695)). Qed.
Lemma lem2626698 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2626699 (x : int) : (term185 x) = (term194 x).
Proof. exact (MK_COMB (@lem2626697) (@lem2626698 x)). Qed.
Lemma lem2626700 (x : int) : (term184 x) = (term194 x).
Proof. exact (TRANS (@lem2626660 x) (@lem2626699 x)). Qed.
Lemma lem2626701 (x : int) : (term194 x) = (real_of_int x).
Proof. exact (@lem1982709 (real_of_int x)). Qed.
Lemma lem2626702 (x : int) : (term184 x) = (real_of_int x).
Proof. exact (TRANS (@lem2626700 x) (@lem2626701 x)). Qed.
Lemma lem2626703 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626704 (x : int) : (term195 x) = (term33 x).
Proof. exact (MK_COMB (@lem2626703) (@lem2626702 x)). Qed.
Lemma lem2626705 (x : int) : (term183 x) = (term164 x).
Proof. exact (MK_COMB (@lem2626704 x) (@lem2626659)). Qed.
Lemma lem2626706 (x : int) : (term182 x) = (term164 x).
Proof. exact (TRANS (@lem2626622 x) (@lem2626705 x)). Qed.
Lemma lem2626709 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2626710 (m : int) (x : int) : (term180 m x) = (term196 m x).
Proof. exact (MK_COMB (@lem2626709 m) (@lem2626706 x)). Qed.
Lemma lem2626711 (m : int) (x : int) : (term179 m x) = (term196 m x).
Proof. exact (TRANS (@lem2626621 m x) (@lem2626710 m x)). Qed.
Lemma lem2626712 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2626713 (m : int) (x : int) : (term178 m x) = (term197 m x).
Proof. exact (MK_COMB (@lem2626712 m) (@lem2626711 m x)). Qed.
Lemma lem2626714 (m : int) (x : int) : (term197 m x) = (term198 m x).
Proof. exact (@lem1982763 (real_of_int m) (term94 m) (term164 x)). Qed.
Lemma lem2626715 (m : int) : (term95 m) = (term96 m).
Proof. exact (@lem1982715 term97 (real_of_int m)). Qed.
Lemma lem2626717 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626718 : term31 = term99.
Proof. exact (@lem2626717 term32). Qed.
Lemma lem2626720 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626721 : term97 = term102.
Proof. exact (@lem2626720 term32). Qed.
Lemma lem2626722 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626723 : term103 = term104.
Proof. exact (MK_COMB (@lem2626722) (@lem2626721)). Qed.
Lemma lem2626724 : term105 = term106.
Proof. exact (MK_COMB (@lem2626723) (@lem2626718)). Qed.
Lemma lem2626725 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2626727 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626728 : term109 = term110.
Proof. exact (@lem2626727 (NUMERAL 0) term32). Qed.
Lemma lem2626729 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626730 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626731 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626730 h1) (fun h1 : term110 = True => @lem2626729)). Qed.
Lemma lem2626732 : term110 = True.
Proof. exact (EQ_MP (@lem2626731) (@lem2626729)). Qed.
Lemma lem2626733 : term109 = True.
Proof. exact (TRANS (@lem2626728) (@lem2626732)). Qed.
Lemma lem2626734 : True = term109.
Proof. exact (SYM (@lem2626733)). Qed.
Lemma lem2626735 : term109.
Proof. exact (EQ_MP (@lem2626734) (@lem0)). Qed.
Lemma lem2626736 : term112.
Proof. exact (@lem2626725 (@lem2626735)). Qed.
Lemma lem2626738 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626739 : term109 = term110.
Proof. exact (@lem2626738 (NUMERAL 0) term32). Qed.
Lemma lem2626740 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626741 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626742 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626741 h1) (fun h1 : term110 = True => @lem2626740)). Qed.
Lemma lem2626743 : term110 = True.
Proof. exact (EQ_MP (@lem2626742) (@lem2626740)). Qed.
Lemma lem2626744 : term109 = True.
Proof. exact (TRANS (@lem2626739) (@lem2626743)). Qed.
Lemma lem2626745 : True = term109.
Proof. exact (SYM (@lem2626744)). Qed.
Lemma lem2626746 : term109.
Proof. exact (EQ_MP (@lem2626745) (@lem0)). Qed.
Lemma lem2626747 : term113.
Proof. exact (@lem2626736 (@lem2626746)). Qed.
Lemma lem2626749 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626750 : term109 = term110.
Proof. exact (@lem2626749 (NUMERAL 0) term32). Qed.
Lemma lem2626751 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626752 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626753 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626752 h1) (fun h1 : term110 = True => @lem2626751)). Qed.
Lemma lem2626754 : term110 = True.
Proof. exact (EQ_MP (@lem2626753) (@lem2626751)). Qed.
Lemma lem2626755 : term109 = True.
Proof. exact (TRANS (@lem2626750) (@lem2626754)). Qed.
Lemma lem2626756 : True = term109.
Proof. exact (SYM (@lem2626755)). Qed.
Lemma lem2626757 : term109.
Proof. exact (EQ_MP (@lem2626756) (@lem0)). Qed.
Lemma lem2626758 : term114.
Proof. exact (@lem2626747 (@lem2626757)). Qed.
Lemma lem2626760 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626761 : term117 = term118.
Proof. exact (@lem2626760 term32 term32). Qed.
Lemma lem2626762 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626763 : term120 = term32.
Proof. exact (EQ_MP (@lem2626762) (@lem940073)). Qed.
Lemma lem2626764 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626765 : term118 = term31.
Proof. exact (MK_COMB (@lem2626764) (@lem2626763)). Qed.
Lemma lem2626766 : term117 = term31.
Proof. exact (TRANS (@lem2626761) (@lem2626765)). Qed.
Lemma lem2626768 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626769 : term123 = term124.
Proof. exact (@lem2626768 term32 term32). Qed.
Lemma lem2626770 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626771 : term120 = term32.
Proof. exact (EQ_MP (@lem2626770) (@lem940073)). Qed.
Lemma lem2626772 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626773 : term118 = term31.
Proof. exact (MK_COMB (@lem2626772) (@lem2626771)). Qed.
Lemma lem2626774 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626775 : term124 = term97.
Proof. exact (MK_COMB (@lem2626774) (@lem2626773)). Qed.
Lemma lem2626776 : term123 = term97.
Proof. exact (TRANS (@lem2626769) (@lem2626775)). Qed.
Lemma lem2626777 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626778 : term125 = term103.
Proof. exact (MK_COMB (@lem2626777) (@lem2626776)). Qed.
Lemma lem2626779 : term126 = term105.
Proof. exact (MK_COMB (@lem2626778) (@lem2626766)). Qed.
Lemma lem2626781 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2626782 : term105 = term38.
Proof. exact (@lem2626781 term32). Qed.
Lemma lem2626783 : term126 = term38.
Proof. exact (TRANS (@lem2626779) (@lem2626782)). Qed.
Lemma lem2626784 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626785 : term128 = term129.
Proof. exact (MK_COMB (@lem2626784) (@lem2626783)). Qed.
Lemma lem2626786 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2626787 : term130 = term131.
Proof. exact (MK_COMB (@lem2626785) (@lem2626786)). Qed.
Lemma lem2626789 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626790 : term131 = term38.
Proof. exact (@lem2626789 term32). Qed.
Lemma lem2626791 : term130 = term38.
Proof. exact (TRANS (@lem2626787) (@lem2626790)). Qed.
Lemma lem2626793 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626794 : term117 = term118.
Proof. exact (@lem2626793 term32 term32). Qed.
Lemma lem2626795 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626796 : term120 = term32.
Proof. exact (EQ_MP (@lem2626795) (@lem940073)). Qed.
Lemma lem2626797 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626798 : term118 = term31.
Proof. exact (MK_COMB (@lem2626797) (@lem2626796)). Qed.
Lemma lem2626799 : term117 = term31.
Proof. exact (TRANS (@lem2626794) (@lem2626798)). Qed.
Lemma lem2626800 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2626801 : term133 = term131.
Proof. exact (MK_COMB (@lem2626800) (@lem2626799)). Qed.
Lemma lem2626803 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626804 : term131 = term38.
Proof. exact (@lem2626803 term32). Qed.
Lemma lem2626805 : term133 = term38.
Proof. exact (TRANS (@lem2626801) (@lem2626804)). Qed.
Lemma lem2626806 : term38 = term133.
Proof. exact (SYM (@lem2626805)). Qed.
Lemma lem2626807 : term130 = term133.
Proof. exact (TRANS (@lem2626791) (@lem2626806)). Qed.
Lemma lem2626808 : term106 = term134.
Proof. exact (@lem2626758 (@lem2626807)). Qed.
Lemma lem2626809 : term105 = term134.
Proof. exact (TRANS (@lem2626724) (@lem2626808)). Qed.
Lemma lem2626811 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2626812 : term134 = term38.
Proof. exact (@lem2626811 term38). Qed.
Lemma lem2626813 : term105 = term38.
Proof. exact (TRANS (@lem2626809) (@lem2626812)). Qed.
Lemma lem2626814 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626815 : term136 = term129.
Proof. exact (MK_COMB (@lem2626814) (@lem2626813)). Qed.
Lemma lem2626816 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2626817 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2626815) (@lem2626816 m)). Qed.
Lemma lem2626818 (m : int) : (term95 m) = (term137 m).
Proof. exact (TRANS (@lem2626715 m) (@lem2626817 m)). Qed.
Lemma lem2626819 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2626820 (m : int) : (term95 m) = term38.
Proof. exact (TRANS (@lem2626818 m) (@lem2626819 m)). Qed.
Lemma lem2626821 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626822 (m : int) : (term138 m) = term48.
Proof. exact (MK_COMB (@lem2626821) (@lem2626820 m)). Qed.
Lemma lem2626823 (x : int) : (term164 x) = (term164 x).
Proof. exact (eq_refl (term164 x)). Qed.
Lemma lem2626824 (m : int) (x : int) : (term198 m x) = (term199 x).
Proof. exact (MK_COMB (@lem2626822 m) (@lem2626823 x)). Qed.
Lemma lem2626825 (m : int) (x : int) : (term197 m x) = (term199 x).
Proof. exact (TRANS (@lem2626714 m x) (@lem2626824 m x)). Qed.
Lemma lem2626826 (x : int) : (term199 x) = (term164 x).
Proof. exact (@lem1982721 (term164 x)). Qed.
Lemma lem2626827 (m : int) (x : int) : (term197 m x) = (term164 x).
Proof. exact (TRANS (@lem2626825 m x) (@lem2626826 x)). Qed.
Lemma lem2626828 (m : int) (x : int) : (term178 m x) = (term164 x).
Proof. exact (TRANS (@lem2626713 m x) (@lem2626827 m x)). Qed.
Lemma lem2626829 (m : int) (x : int) : (term177 m x) = (term164 x).
Proof. exact (TRANS (@lem2626620 m x) (@lem2626828 m x)). Qed.
Lemma lem2626830 (m : int) (x : int) : (term176 m x) = (term164 x).
Proof. exact (TRANS (@lem2626619 m x) (@lem2626829 m x)). Qed.
Lemma lem2626831 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2626832 (m : int) (x : int) : (term200 m x) = (term166 x).
Proof. exact (MK_COMB (@lem2626831) (@lem2626830 m x)). Qed.
Lemma lem2626833 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2626834 (m : int) (x : int) : (term172 m x) = (term167 x).
Proof. exact (MK_COMB (@lem2626832 m x) (@lem2626833)). Qed.
Lemma lem2626835 (m : int) (x : int) : (term70 x m) = (term167 x).
Proof. exact (TRANS (@lem2626592 m x) (@lem2626834 m x)). Qed.
Lemma lem2626836 (x : int) (m : int) : (term75 m x) = (term201 x m).
Proof. exact (@lem1988287 (term13 m x) (term34 m)). Qed.
Lemma lem2626843 (m : int) : (term34 m) = (term34 m).
Proof. exact (eq_refl (term34 m)). Qed.
Lemma lem2626856 (m : int) (x : int) : (term13 m x) = (term88 m x).
Proof. exact (@lem1982792 (real_of_int m) (real_of_int x)). Qed.
Lemma lem2626857 : real_sub = real_sub.
Proof. exact (eq_refl real_sub). Qed.
Lemma lem2626858 (m : int) (x : int) : (term89 m x) = (term90 m x).
Proof. exact (MK_COMB (@lem2626857) (@lem2626856 m x)). Qed.
Lemma lem2626859 (x : int) (m : int) : (term202 x m) = (term203 x m).
Proof. exact (MK_COMB (@lem2626858 m x) (@lem2626843 m)). Qed.
Lemma lem2626860 (x : int) (m : int) : (term203 x m) = (term204 x m).
Proof. exact (@lem1982792 (term88 m x) (term34 m)). Qed.
Lemma lem2626861 (m : int) : (term145 m) = (term146 m).
Proof. exact (@lem1982781 (real_of_int m) term97 term31). Qed.
Lemma lem2626863 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626864 : term31 = term99.
Proof. exact (@lem2626863 term32). Qed.
Lemma lem2626866 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626867 : term97 = term102.
Proof. exact (@lem2626866 term32). Qed.
Lemma lem2626868 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626869 : term147 = term148.
Proof. exact (MK_COMB (@lem2626868) (@lem2626867)). Qed.
Lemma lem2626870 : term123 = term149.
Proof. exact (MK_COMB (@lem2626869) (@lem2626864)). Qed.
Lemma lem2626871 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2626873 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626874 : term117 = term118.
Proof. exact (@lem2626873 term32 term32). Qed.
Lemma lem2626875 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626876 : term120 = term32.
Proof. exact (EQ_MP (@lem2626875) (@lem940073)). Qed.
Lemma lem2626877 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626878 : term118 = term31.
Proof. exact (MK_COMB (@lem2626877) (@lem2626876)). Qed.
Lemma lem2626879 : term117 = term31.
Proof. exact (TRANS (@lem2626874) (@lem2626878)). Qed.
Lemma lem2626881 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626882 : term123 = term124.
Proof. exact (@lem2626881 term32 term32). Qed.
Lemma lem2626883 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626884 : term120 = term32.
Proof. exact (EQ_MP (@lem2626883) (@lem940073)). Qed.
Lemma lem2626885 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626886 : term118 = term31.
Proof. exact (MK_COMB (@lem2626885) (@lem2626884)). Qed.
Lemma lem2626887 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626888 : term124 = term97.
Proof. exact (MK_COMB (@lem2626887) (@lem2626886)). Qed.
Lemma lem2626889 : term123 = term97.
Proof. exact (TRANS (@lem2626882) (@lem2626888)). Qed.
Lemma lem2626890 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2626891 : term151 = term152.
Proof. exact (MK_COMB (@lem2626890) (@lem2626889)). Qed.
Lemma lem2626892 : term150 = term102.
Proof. exact (MK_COMB (@lem2626891) (@lem2626879)). Qed.
Lemma lem2626893 : term149 = term102.
Proof. exact (TRANS (@lem2626871) (@lem2626892)). Qed.
Lemma lem2626894 : term123 = term102.
Proof. exact (TRANS (@lem2626870) (@lem2626893)). Qed.
Lemma lem2626896 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2626897 : term102 = term97.
Proof. exact (@lem2626896 term97). Qed.
Lemma lem2626898 : term123 = term97.
Proof. exact (TRANS (@lem2626894) (@lem2626897)). Qed.
Lemma lem2626901 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2626902 (m : int) : (term146 m) = (term154 m).
Proof. exact (MK_COMB (@lem2626901 m) (@lem2626898)). Qed.
Lemma lem2626903 (m : int) : (term145 m) = (term154 m).
Proof. exact (TRANS (@lem2626861 m) (@lem2626902 m)). Qed.
Lemma lem2626904 (m : int) (x : int) : (term173 m x) = (term173 m x).
Proof. exact (eq_refl (term173 m x)). Qed.
Lemma lem2626905 (x : int) (m : int) : (term204 x m) = (term205 x m).
Proof. exact (MK_COMB (@lem2626904 m x) (@lem2626903 m)). Qed.
Lemma lem2626906 (m : int) (x : int) : (term205 x m) = (term206 m x).
Proof. exact (@lem1982753 (real_of_int m) (term94 m) (term94 x) term97). Qed.
Lemma lem2626907 (m : int) : (term95 m) = (term96 m).
Proof. exact (@lem1982715 term97 (real_of_int m)). Qed.
Lemma lem2626909 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2626910 : term31 = term99.
Proof. exact (@lem2626909 term32). Qed.
Lemma lem2626912 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2626913 : term97 = term102.
Proof. exact (@lem2626912 term32). Qed.
Lemma lem2626914 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626915 : term103 = term104.
Proof. exact (MK_COMB (@lem2626914) (@lem2626913)). Qed.
Lemma lem2626916 : term105 = term106.
Proof. exact (MK_COMB (@lem2626915) (@lem2626910)). Qed.
Lemma lem2626917 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2626919 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626920 : term109 = term110.
Proof. exact (@lem2626919 (NUMERAL 0) term32). Qed.
Lemma lem2626921 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626922 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626923 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626922 h1) (fun h1 : term110 = True => @lem2626921)). Qed.
Lemma lem2626924 : term110 = True.
Proof. exact (EQ_MP (@lem2626923) (@lem2626921)). Qed.
Lemma lem2626925 : term109 = True.
Proof. exact (TRANS (@lem2626920) (@lem2626924)). Qed.
Lemma lem2626926 : True = term109.
Proof. exact (SYM (@lem2626925)). Qed.
Lemma lem2626927 : term109.
Proof. exact (EQ_MP (@lem2626926) (@lem0)). Qed.
Lemma lem2626928 : term112.
Proof. exact (@lem2626917 (@lem2626927)). Qed.
Lemma lem2626930 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626931 : term109 = term110.
Proof. exact (@lem2626930 (NUMERAL 0) term32). Qed.
Lemma lem2626932 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626933 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626934 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626933 h1) (fun h1 : term110 = True => @lem2626932)). Qed.
Lemma lem2626935 : term110 = True.
Proof. exact (EQ_MP (@lem2626934) (@lem2626932)). Qed.
Lemma lem2626936 : term109 = True.
Proof. exact (TRANS (@lem2626931) (@lem2626935)). Qed.
Lemma lem2626937 : True = term109.
Proof. exact (SYM (@lem2626936)). Qed.
Lemma lem2626938 : term109.
Proof. exact (EQ_MP (@lem2626937) (@lem0)). Qed.
Lemma lem2626939 : term113.
Proof. exact (@lem2626928 (@lem2626938)). Qed.
Lemma lem2626941 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2626942 : term109 = term110.
Proof. exact (@lem2626941 (NUMERAL 0) term32). Qed.
Lemma lem2626943 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2626944 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2626945 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2626944 h1) (fun h1 : term110 = True => @lem2626943)). Qed.
Lemma lem2626946 : term110 = True.
Proof. exact (EQ_MP (@lem2626945) (@lem2626943)). Qed.
Lemma lem2626947 : term109 = True.
Proof. exact (TRANS (@lem2626942) (@lem2626946)). Qed.
Lemma lem2626948 : True = term109.
Proof. exact (SYM (@lem2626947)). Qed.
Lemma lem2626949 : term109.
Proof. exact (EQ_MP (@lem2626948) (@lem0)). Qed.
Lemma lem2626950 : term114.
Proof. exact (@lem2626939 (@lem2626949)). Qed.
Lemma lem2626952 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626953 : term117 = term118.
Proof. exact (@lem2626952 term32 term32). Qed.
Lemma lem2626954 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626955 : term120 = term32.
Proof. exact (EQ_MP (@lem2626954) (@lem940073)). Qed.
Lemma lem2626956 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626957 : term118 = term31.
Proof. exact (MK_COMB (@lem2626956) (@lem2626955)). Qed.
Lemma lem2626958 : term117 = term31.
Proof. exact (TRANS (@lem2626953) (@lem2626957)). Qed.
Lemma lem2626960 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2626961 : term123 = term124.
Proof. exact (@lem2626960 term32 term32). Qed.
Lemma lem2626962 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626963 : term120 = term32.
Proof. exact (EQ_MP (@lem2626962) (@lem940073)). Qed.
Lemma lem2626964 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626965 : term118 = term31.
Proof. exact (MK_COMB (@lem2626964) (@lem2626963)). Qed.
Lemma lem2626966 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2626967 : term124 = term97.
Proof. exact (MK_COMB (@lem2626966) (@lem2626965)). Qed.
Lemma lem2626968 : term123 = term97.
Proof. exact (TRANS (@lem2626961) (@lem2626967)). Qed.
Lemma lem2626969 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2626970 : term125 = term103.
Proof. exact (MK_COMB (@lem2626969) (@lem2626968)). Qed.
Lemma lem2626971 : term126 = term105.
Proof. exact (MK_COMB (@lem2626970) (@lem2626958)). Qed.
Lemma lem2626973 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2626974 : term105 = term38.
Proof. exact (@lem2626973 term32). Qed.
Lemma lem2626975 : term126 = term38.
Proof. exact (TRANS (@lem2626971) (@lem2626974)). Qed.
Lemma lem2626976 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2626977 : term128 = term129.
Proof. exact (MK_COMB (@lem2626976) (@lem2626975)). Qed.
Lemma lem2626978 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2626979 : term130 = term131.
Proof. exact (MK_COMB (@lem2626977) (@lem2626978)). Qed.
Lemma lem2626981 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626982 : term131 = term38.
Proof. exact (@lem2626981 term32). Qed.
Lemma lem2626983 : term130 = term38.
Proof. exact (TRANS (@lem2626979) (@lem2626982)). Qed.
Lemma lem2626985 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2626986 : term117 = term118.
Proof. exact (@lem2626985 term32 term32). Qed.
Lemma lem2626987 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2626988 : term120 = term32.
Proof. exact (EQ_MP (@lem2626987) (@lem940073)). Qed.
Lemma lem2626989 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2626990 : term118 = term31.
Proof. exact (MK_COMB (@lem2626989) (@lem2626988)). Qed.
Lemma lem2626991 : term117 = term31.
Proof. exact (TRANS (@lem2626986) (@lem2626990)). Qed.
Lemma lem2626992 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2626993 : term133 = term131.
Proof. exact (MK_COMB (@lem2626992) (@lem2626991)). Qed.
Lemma lem2626995 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2626996 : term131 = term38.
Proof. exact (@lem2626995 term32). Qed.
Lemma lem2626997 : term133 = term38.
Proof. exact (TRANS (@lem2626993) (@lem2626996)). Qed.
Lemma lem2626998 : term38 = term133.
Proof. exact (SYM (@lem2626997)). Qed.
Lemma lem2626999 : term130 = term133.
Proof. exact (TRANS (@lem2626983) (@lem2626998)). Qed.
Lemma lem2627000 : term106 = term134.
Proof. exact (@lem2626950 (@lem2626999)). Qed.
Lemma lem2627001 : term105 = term134.
Proof. exact (TRANS (@lem2626916) (@lem2627000)). Qed.
Lemma lem2627003 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2627004 : term134 = term38.
Proof. exact (@lem2627003 term38). Qed.
Lemma lem2627005 : term105 = term38.
Proof. exact (TRANS (@lem2627001) (@lem2627004)). Qed.
Lemma lem2627006 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627007 : term136 = term129.
Proof. exact (MK_COMB (@lem2627006) (@lem2627005)). Qed.
Lemma lem2627008 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2627009 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2627007) (@lem2627008 m)). Qed.
Lemma lem2627010 (m : int) : (term95 m) = (term137 m).
Proof. exact (TRANS (@lem2626907 m) (@lem2627009 m)). Qed.
Lemma lem2627011 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2627012 (m : int) : (term95 m) = term38.
Proof. exact (TRANS (@lem2627010 m) (@lem2627011 m)). Qed.
Lemma lem2627013 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627014 (m : int) : (term138 m) = term48.
Proof. exact (MK_COMB (@lem2627013) (@lem2627012 m)). Qed.
Lemma lem2627015 (x : int) : (term154 x) = (term154 x).
Proof. exact (eq_refl (term154 x)). Qed.
Lemma lem2627016 (m : int) (x : int) : (term206 m x) = (term155 x).
Proof. exact (MK_COMB (@lem2627014 m) (@lem2627015 x)). Qed.
Lemma lem2627017 (m : int) (x : int) : (term205 x m) = (term155 x).
Proof. exact (TRANS (@lem2626906 m x) (@lem2627016 m x)). Qed.
Lemma lem2627018 (x : int) : (term155 x) = (term154 x).
Proof. exact (@lem1982721 (term154 x)). Qed.
Lemma lem2627019 (m : int) (x : int) : (term205 x m) = (term154 x).
Proof. exact (TRANS (@lem2627017 m x) (@lem2627018 x)). Qed.
Lemma lem2627020 (m : int) (x : int) : (term204 x m) = (term154 x).
Proof. exact (TRANS (@lem2626905 x m) (@lem2627019 m x)). Qed.
Lemma lem2627021 (m : int) (x : int) : (term203 x m) = (term154 x).
Proof. exact (TRANS (@lem2626860 x m) (@lem2627020 m x)). Qed.
Lemma lem2627022 (m : int) (x : int) : (term202 x m) = (term154 x).
Proof. exact (TRANS (@lem2626859 x m) (@lem2627021 m x)). Qed.
Lemma lem2627023 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627024 (m : int) (x : int) : (term207 x m) = (term157 x).
Proof. exact (MK_COMB (@lem2627023) (@lem2627022 m x)). Qed.
Lemma lem2627025 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627026 (m : int) (x : int) : (term201 x m) = (term158 x).
Proof. exact (MK_COMB (@lem2627024 m x) (@lem2627025)). Qed.
Lemma lem2627027 (m : int) (x : int) : (term75 m x) = (term158 x).
Proof. exact (TRANS (@lem2626836 x m) (@lem2627026 m x)). Qed.
Lemma lem2627028 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2627029 (m : int) (x : int) : (term72 x m) = (term208 x).
Proof. exact (MK_COMB (@lem2627028) (@lem2626835 m x)). Qed.
Lemma lem2627030 (m : int) (x : int) : (term76 m x) = (term209 x).
Proof. exact (MK_COMB (@lem2627029 m x) (@lem2627027 m x)). Qed.
Lemma lem2627031 (x : int) : ((real_of_int x) = term38) = ((term210 x) = term38).
Proof. exact (@lem1988293 (real_of_int x) term38). Qed.
Lemma lem2627037 (x : int) : (term210 x) = (term211 x).
Proof. exact (@lem1982792 (real_of_int x) term38). Qed.
Lemma lem2627039 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627040 : term38 = term134.
Proof. exact (@lem2627039 (NUMERAL 0)). Qed.
Lemma lem2627042 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627043 : term97 = term102.
Proof. exact (@lem2627042 term32). Qed.
Lemma lem2627044 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627045 : term147 = term148.
Proof. exact (MK_COMB (@lem2627044) (@lem2627043)). Qed.
Lemma lem2627046 : term212 = term213.
Proof. exact (MK_COMB (@lem2627045) (@lem2627040)). Qed.
Lemma lem2627047 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2627049 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627050 : term117 = term118.
Proof. exact (@lem2627049 term32 term32). Qed.
Lemma lem2627051 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627052 : term120 = term32.
Proof. exact (EQ_MP (@lem2627051) (@lem940073)). Qed.
Lemma lem2627053 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627054 : term118 = term31.
Proof. exact (MK_COMB (@lem2627053) (@lem2627052)). Qed.
Lemma lem2627055 : term117 = term31.
Proof. exact (TRANS (@lem2627050) (@lem2627054)). Qed.
Lemma lem2627057 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2627058 : term212 = term38.
Proof. exact (@lem2627057 term32). Qed.
Lemma lem2627059 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2627060 : term216 = term217.
Proof. exact (MK_COMB (@lem2627059) (@lem2627058)). Qed.
Lemma lem2627061 : term214 = term134.
Proof. exact (MK_COMB (@lem2627060) (@lem2627055)). Qed.
Lemma lem2627062 : term213 = term134.
Proof. exact (TRANS (@lem2627047) (@lem2627061)). Qed.
Lemma lem2627063 : term212 = term134.
Proof. exact (TRANS (@lem2627046) (@lem2627062)). Qed.
Lemma lem2627065 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2627066 : term134 = term38.
Proof. exact (@lem2627065 term38). Qed.
Lemma lem2627067 : term212 = term38.
Proof. exact (TRANS (@lem2627063) (@lem2627066)). Qed.
Lemma lem2627068 (x : int) : (term33 x) = (term33 x).
Proof. exact (eq_refl (term33 x)). Qed.
Lemma lem2627069 (x : int) : (term211 x) = (term218 x).
Proof. exact (MK_COMB (@lem2627068 x) (@lem2627067)). Qed.
Lemma lem2627070 (x : int) : (term218 x) = (real_of_int x).
Proof. exact (@lem1982723 (real_of_int x)). Qed.
Lemma lem2627071 (x : int) : (term211 x) = (real_of_int x).
Proof. exact (TRANS (@lem2627069 x) (@lem2627070 x)). Qed.
Lemma lem2627073 (x : int) : (term210 x) = (real_of_int x).
Proof. exact (TRANS (@lem2627037 x) (@lem2627071 x)). Qed.
Lemma lem2627074 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2627075 (x : int) : (term219 x) = (term77 x).
Proof. exact (MK_COMB (@lem2627074) (@lem2627073 x)). Qed.
Lemma lem2627076 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627077 (x : int) : ((term210 x) = term38) = ((real_of_int x) = term38).
Proof. exact (MK_COMB (@lem2627075 x) (@lem2627076)). Qed.
Lemma lem2627078 (x : int) : ((real_of_int x) = term38) = ((real_of_int x) = term38).
Proof. exact (TRANS (@lem2627031 x) (@lem2627077 x)). Qed.
Lemma lem2627079 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2627080 (m : int) (x : int) : (term79 m x) = (term220 x).
Proof. exact (MK_COMB (@lem2627079) (@lem2627030 m x)). Qed.
Lemma lem2627081 (m : int) (x : int) : (term81 m x) = (term221 x).
Proof. exact (MK_COMB (@lem2627080 m x) (@lem2627078 x)). Qed.
Lemma lem2627082 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2627083 (m : int) (x : int) : (term83 m x) = (term222 x).
Proof. exact (MK_COMB (@lem2627082) (@lem2626591 m x)). Qed.
Lemma lem2627084 (m : int) (x : int) : (term84 m x) = (term223 x).
Proof. exact (MK_COMB (@lem2627083 m x) (@lem2627081 m x)). Qed.
Lemma lem2627091 (m : int) (x : int) : (term86 m x) = (term223 x).
Proof. exact (TRANS (@lem2626313 m x) (@lem2627084 m x)). Qed.
Lemma lem2627108 (x : int) : (term221 x) = (term224 x).
Proof. exact (@lem19367 (term167 x) (term158 x) ((real_of_int x) = term38)). Qed.
Lemma lem2627125 (x : int) : (term171 x) = (term225 x).
Proof. exact (@lem19158 (term158 x) ((term94 x) = term38) (term167 x)). Qed.
Lemma lem2627126 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2627127 (x : int) : (term222 x) = (term226 x).
Proof. exact (MK_COMB (@lem2627126) (@lem2627125 x)). Qed.
Lemma lem2627128 (x : int) : (term223 x) = (term227 x).
Proof. exact (MK_COMB (@lem2627127 x) (@lem2627108 x)). Qed.
Lemma lem2627129 (m : int) (x : int) : (term86 m x) = (term227 x).
Proof. exact (TRANS (@lem2627091 m x) (@lem2627128 x)). Qed.
Lemma lem2627151 (x : int) (h1 : term227 x) : term227 x.
Proof. exact (h1). Qed.
Lemma lem2627152 (x : int) (h1 : term225 x) : term225 x.
Proof. exact (h1). Qed.
Lemma lem2627153 (x : int) (h1 : term228 x) : term228 x.
Proof. exact (h1). Qed.
Lemma lem2627154 (x : int) (h1 : term228 x) : term158 x.
Proof. exact (proj2 (@lem2627153 x h1)). Qed.
Lemma lem2627155 (x : int) (h1 : term228 x) : (term94 x) = term38.
Proof. exact (proj1 (@lem2627153 x h1)). Qed.
Lemma lem2627157 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2627158 : term229 = term109.
Proof. exact (@lem2627157 term38 term31). Qed.
Lemma lem2627160 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627161 : term31 = term99.
Proof. exact (@lem2627160 term32). Qed.
Lemma lem2627163 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627164 : term38 = term134.
Proof. exact (@lem2627163 (NUMERAL 0)). Qed.
Lemma lem2627165 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627166 : term230 = term231.
Proof. exact (MK_COMB (@lem2627165) (@lem2627164)). Qed.
Lemma lem2627167 : term109 = term232.
Proof. exact (MK_COMB (@lem2627166) (@lem2627161)). Qed.
Lemma lem2627168 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2627170 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627171 : term109 = term110.
Proof. exact (@lem2627170 (NUMERAL 0) term32). Qed.
Lemma lem2627172 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627173 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627174 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627173 h1) (fun h1 : term110 = True => @lem2627172)). Qed.
Lemma lem2627175 : term110 = True.
Proof. exact (EQ_MP (@lem2627174) (@lem2627172)). Qed.
Lemma lem2627176 : term109 = True.
Proof. exact (TRANS (@lem2627171) (@lem2627175)). Qed.
Lemma lem2627177 : True = term109.
Proof. exact (SYM (@lem2627176)). Qed.
Lemma lem2627178 : term109.
Proof. exact (EQ_MP (@lem2627177) (@lem0)). Qed.
Lemma lem2627179 : term234.
Proof. exact (@lem2627168 (@lem2627178)). Qed.
Lemma lem2627181 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627182 : term109 = term110.
Proof. exact (@lem2627181 (NUMERAL 0) term32). Qed.
Lemma lem2627183 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627184 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627185 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627184 h1) (fun h1 : term110 = True => @lem2627183)). Qed.
Lemma lem2627186 : term110 = True.
Proof. exact (EQ_MP (@lem2627185) (@lem2627183)). Qed.
Lemma lem2627187 : term109 = True.
Proof. exact (TRANS (@lem2627182) (@lem2627186)). Qed.
Lemma lem2627188 : True = term109.
Proof. exact (SYM (@lem2627187)). Qed.
Lemma lem2627189 : term109.
Proof. exact (EQ_MP (@lem2627188) (@lem0)). Qed.
Lemma lem2627190 : term232 = term235.
Proof. exact (@lem2627179 (@lem2627189)). Qed.
Lemma lem2627192 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627193 : term117 = term118.
Proof. exact (@lem2627192 term32 term32). Qed.
Lemma lem2627194 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627195 : term120 = term32.
Proof. exact (EQ_MP (@lem2627194) (@lem940073)). Qed.
Lemma lem2627196 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627197 : term118 = term31.
Proof. exact (MK_COMB (@lem2627196) (@lem2627195)). Qed.
Lemma lem2627198 : term117 = term31.
Proof. exact (TRANS (@lem2627193) (@lem2627197)). Qed.
Lemma lem2627200 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627201 : term131 = term38.
Proof. exact (@lem2627200 term32). Qed.
Lemma lem2627202 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627203 : term236 = term230.
Proof. exact (MK_COMB (@lem2627202) (@lem2627201)). Qed.
Lemma lem2627204 : term235 = term109.
Proof. exact (MK_COMB (@lem2627203) (@lem2627198)). Qed.
Lemma lem2627206 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627207 : term109 = term110.
Proof. exact (@lem2627206 (NUMERAL 0) term32). Qed.
Lemma lem2627208 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627209 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627210 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627209 h1) (fun h1 : term110 = True => @lem2627208)). Qed.
Lemma lem2627211 : term110 = True.
Proof. exact (EQ_MP (@lem2627210) (@lem2627208)). Qed.
Lemma lem2627212 : term109 = True.
Proof. exact (TRANS (@lem2627207) (@lem2627211)). Qed.
Lemma lem2627213 : term235 = True.
Proof. exact (TRANS (@lem2627204) (@lem2627212)). Qed.
Lemma lem2627214 : term232 = True.
Proof. exact (TRANS (@lem2627190) (@lem2627213)). Qed.
Lemma lem2627215 : term109 = True.
Proof. exact (TRANS (@lem2627167) (@lem2627214)). Qed.
Lemma lem2627216 : term229 = True.
Proof. exact (TRANS (@lem2627158) (@lem2627215)). Qed.
Lemma lem2627217 : True = term229.
Proof. exact (SYM (@lem2627216)). Qed.
Lemma lem2627218 : term229.
Proof. exact (EQ_MP (@lem2627217) (@lem0)). Qed.
Lemma lem2627219 (x : int) (h1 : term228 x) : term237 x.
Proof. exact (conj (@lem2627218) (@lem2627154 x h1)). Qed.
Lemma lem2627221 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2627222 (x : int) : term239 x.
Proof. exact (@lem2627221 term31 (term154 x)). Qed.
Lemma lem2627223 (x : int) (h1 : term228 x) : term240 x.
Proof. exact (@lem2627222 x (@lem2627219 x h1)). Qed.
Lemma lem2627224 (x : int) : (term241 x) = (term154 x).
Proof. exact (@lem1982733 (term154 x)). Qed.
Lemma lem2627225 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627226 (x : int) : (term242 x) = (term157 x).
Proof. exact (MK_COMB (@lem2627225) (@lem2627224 x)). Qed.
Lemma lem2627227 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627228 (x : int) : (term240 x) = (term158 x).
Proof. exact (MK_COMB (@lem2627226 x) (@lem2627227)). Qed.
Lemma lem2627229 (x : int) (h1 : term228 x) : term158 x.
Proof. exact (EQ_MP (@lem2627228 x) (@lem2627223 x h1)). Qed.
Lemma lem2627231 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2627232 (x : int) : term244 x.
Proof. exact (@lem2627231 (term94 x)). Qed.
Lemma lem2627233 (x : int) (h1 : term228 x) : term245 x.
Proof. exact (@lem2627232 x (@lem2627155 x h1)). Qed.
Lemma lem2627234 (x : int) (h1 : term228 x) : term246 x.
Proof. exact (@lem2627233 x h1 term97). Qed.
Lemma lem2627235 (x : int) : (term246 x) = ((term184 x) = term38).
Proof. exact (eq_refl (term246 x)). Qed.
Lemma lem2627236 (x : int) (h1 : term228 x) : (term184 x) = term38.
Proof. exact (EQ_MP (@lem2627235 x) (@lem2627234 x h1)). Qed.
Lemma lem2627237 (x : int) : (term184 x) = (term185 x).
Proof. exact (@lem1982749 term97 term97 (real_of_int x)). Qed.
Lemma lem2627239 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627240 : term97 = term102.
Proof. exact (@lem2627239 term32). Qed.
Lemma lem2627242 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627243 : term97 = term102.
Proof. exact (@lem2627242 term32). Qed.
Lemma lem2627244 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627245 : term147 = term148.
Proof. exact (MK_COMB (@lem2627244) (@lem2627243)). Qed.
Lemma lem2627246 : term186 = term187.
Proof. exact (MK_COMB (@lem2627245) (@lem2627240)). Qed.
Lemma lem2627247 : term187 = term188.
Proof. exact (@lem1981613 term97 term97 term31 term31). Qed.
Lemma lem2627249 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627250 : term117 = term118.
Proof. exact (@lem2627249 term32 term32). Qed.
Lemma lem2627251 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627252 : term120 = term32.
Proof. exact (EQ_MP (@lem2627251) (@lem940073)). Qed.
Lemma lem2627253 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627254 : term118 = term31.
Proof. exact (MK_COMB (@lem2627253) (@lem2627252)). Qed.
Lemma lem2627255 : term117 = term31.
Proof. exact (TRANS (@lem2627250) (@lem2627254)). Qed.
Lemma lem2627257 (m : nat) (n : nat) : (term189 m n) = (term116 m n).
Proof. exact (proj2 (@lem1367248 m n)). Qed.
Lemma lem2627258 : term186 = term118.
Proof. exact (@lem2627257 term32 term32). Qed.
Lemma lem2627259 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627260 : term120 = term32.
Proof. exact (EQ_MP (@lem2627259) (@lem940073)). Qed.
Lemma lem2627261 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627262 : term118 = term31.
Proof. exact (MK_COMB (@lem2627261) (@lem2627260)). Qed.
Lemma lem2627263 : term186 = term31.
Proof. exact (TRANS (@lem2627258) (@lem2627262)). Qed.
Lemma lem2627264 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2627265 : term190 = term191.
Proof. exact (MK_COMB (@lem2627264) (@lem2627263)). Qed.
Lemma lem2627266 : term188 = term99.
Proof. exact (MK_COMB (@lem2627265) (@lem2627255)). Qed.
Lemma lem2627267 : term187 = term99.
Proof. exact (TRANS (@lem2627247) (@lem2627266)). Qed.
Lemma lem2627268 : term186 = term99.
Proof. exact (TRANS (@lem2627246) (@lem2627267)). Qed.
Lemma lem2627270 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2627271 : term99 = term31.
Proof. exact (@lem2627270 term31). Qed.
Lemma lem2627272 : term186 = term31.
Proof. exact (TRANS (@lem2627268) (@lem2627271)). Qed.
Lemma lem2627273 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627274 : term192 = term193.
Proof. exact (MK_COMB (@lem2627273) (@lem2627272)). Qed.
Lemma lem2627275 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2627276 (x : int) : (term185 x) = (term194 x).
Proof. exact (MK_COMB (@lem2627274) (@lem2627275 x)). Qed.
Lemma lem2627277 (x : int) : (term184 x) = (term194 x).
Proof. exact (TRANS (@lem2627237 x) (@lem2627276 x)). Qed.
Lemma lem2627278 (x : int) : (term194 x) = (real_of_int x).
Proof. exact (@lem1982709 (real_of_int x)). Qed.
Lemma lem2627279 (x : int) : (term184 x) = (real_of_int x).
Proof. exact (TRANS (@lem2627277 x) (@lem2627278 x)). Qed.
Lemma lem2627280 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2627281 (x : int) : (term247 x) = (term77 x).
Proof. exact (MK_COMB (@lem2627280) (@lem2627279 x)). Qed.
Lemma lem2627282 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627283 (x : int) : ((term184 x) = term38) = ((real_of_int x) = term38).
Proof. exact (MK_COMB (@lem2627281 x) (@lem2627282)). Qed.
Lemma lem2627284 (x : int) (h1 : term228 x) : (real_of_int x) = term38.
Proof. exact (EQ_MP (@lem2627283 x) (@lem2627236 x h1)). Qed.
Lemma lem2627285 (x : int) (h1 : term228 x) : term248 x.
Proof. exact (conj (@lem2627284 x h1) (@lem2627229 x h1)). Qed.
Lemma lem2627287 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2627288 (x : int) : term250 x.
Proof. exact (@lem2627287 (real_of_int x) (term154 x)). Qed.
Lemma lem2627289 (x : int) (h1 : term228 x) : term251 x.
Proof. exact (@lem2627288 x (@lem2627285 x h1)). Qed.
Lemma lem2627290 (x : int) : (term252 x) = (term253 x).
Proof. exact (@lem1982763 (real_of_int x) (term94 x) term97). Qed.
Lemma lem2627291 (x : int) : (term95 x) = (term96 x).
Proof. exact (@lem1982715 term97 (real_of_int x)). Qed.
Lemma lem2627293 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627294 : term31 = term99.
Proof. exact (@lem2627293 term32). Qed.
Lemma lem2627296 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627297 : term97 = term102.
Proof. exact (@lem2627296 term32). Qed.
Lemma lem2627298 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627299 : term103 = term104.
Proof. exact (MK_COMB (@lem2627298) (@lem2627297)). Qed.
Lemma lem2627300 : term105 = term106.
Proof. exact (MK_COMB (@lem2627299) (@lem2627294)). Qed.
Lemma lem2627301 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2627303 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627304 : term109 = term110.
Proof. exact (@lem2627303 (NUMERAL 0) term32). Qed.
Lemma lem2627305 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627306 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627307 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627306 h1) (fun h1 : term110 = True => @lem2627305)). Qed.
Lemma lem2627308 : term110 = True.
Proof. exact (EQ_MP (@lem2627307) (@lem2627305)). Qed.
Lemma lem2627309 : term109 = True.
Proof. exact (TRANS (@lem2627304) (@lem2627308)). Qed.
Lemma lem2627310 : True = term109.
Proof. exact (SYM (@lem2627309)). Qed.
Lemma lem2627311 : term109.
Proof. exact (EQ_MP (@lem2627310) (@lem0)). Qed.
Lemma lem2627312 : term112.
Proof. exact (@lem2627301 (@lem2627311)). Qed.
Lemma lem2627314 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627315 : term109 = term110.
Proof. exact (@lem2627314 (NUMERAL 0) term32). Qed.
Lemma lem2627316 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627317 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627318 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627317 h1) (fun h1 : term110 = True => @lem2627316)). Qed.
Lemma lem2627319 : term110 = True.
Proof. exact (EQ_MP (@lem2627318) (@lem2627316)). Qed.
Lemma lem2627320 : term109 = True.
Proof. exact (TRANS (@lem2627315) (@lem2627319)). Qed.
Lemma lem2627321 : True = term109.
Proof. exact (SYM (@lem2627320)). Qed.
Lemma lem2627322 : term109.
Proof. exact (EQ_MP (@lem2627321) (@lem0)). Qed.
Lemma lem2627323 : term113.
Proof. exact (@lem2627312 (@lem2627322)). Qed.
Lemma lem2627325 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627326 : term109 = term110.
Proof. exact (@lem2627325 (NUMERAL 0) term32). Qed.
Lemma lem2627327 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627328 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627329 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627328 h1) (fun h1 : term110 = True => @lem2627327)). Qed.
Lemma lem2627330 : term110 = True.
Proof. exact (EQ_MP (@lem2627329) (@lem2627327)). Qed.
Lemma lem2627331 : term109 = True.
Proof. exact (TRANS (@lem2627326) (@lem2627330)). Qed.
Lemma lem2627332 : True = term109.
Proof. exact (SYM (@lem2627331)). Qed.
Lemma lem2627333 : term109.
Proof. exact (EQ_MP (@lem2627332) (@lem0)). Qed.
Lemma lem2627334 : term114.
Proof. exact (@lem2627323 (@lem2627333)). Qed.
Lemma lem2627336 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627337 : term117 = term118.
Proof. exact (@lem2627336 term32 term32). Qed.
Lemma lem2627338 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627339 : term120 = term32.
Proof. exact (EQ_MP (@lem2627338) (@lem940073)). Qed.
Lemma lem2627340 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627341 : term118 = term31.
Proof. exact (MK_COMB (@lem2627340) (@lem2627339)). Qed.
Lemma lem2627342 : term117 = term31.
Proof. exact (TRANS (@lem2627337) (@lem2627341)). Qed.
Lemma lem2627344 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2627345 : term123 = term124.
Proof. exact (@lem2627344 term32 term32). Qed.
Lemma lem2627346 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627347 : term120 = term32.
Proof. exact (EQ_MP (@lem2627346) (@lem940073)). Qed.
Lemma lem2627348 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627349 : term118 = term31.
Proof. exact (MK_COMB (@lem2627348) (@lem2627347)). Qed.
Lemma lem2627350 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2627351 : term124 = term97.
Proof. exact (MK_COMB (@lem2627350) (@lem2627349)). Qed.
Lemma lem2627352 : term123 = term97.
Proof. exact (TRANS (@lem2627345) (@lem2627351)). Qed.
Lemma lem2627353 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627354 : term125 = term103.
Proof. exact (MK_COMB (@lem2627353) (@lem2627352)). Qed.
Lemma lem2627355 : term126 = term105.
Proof. exact (MK_COMB (@lem2627354) (@lem2627342)). Qed.
Lemma lem2627357 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2627358 : term105 = term38.
Proof. exact (@lem2627357 term32). Qed.
Lemma lem2627359 : term126 = term38.
Proof. exact (TRANS (@lem2627355) (@lem2627358)). Qed.
Lemma lem2627360 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627361 : term128 = term129.
Proof. exact (MK_COMB (@lem2627360) (@lem2627359)). Qed.
Lemma lem2627362 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2627363 : term130 = term131.
Proof. exact (MK_COMB (@lem2627361) (@lem2627362)). Qed.
Lemma lem2627365 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627366 : term131 = term38.
Proof. exact (@lem2627365 term32). Qed.
Lemma lem2627367 : term130 = term38.
Proof. exact (TRANS (@lem2627363) (@lem2627366)). Qed.
Lemma lem2627369 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627370 : term117 = term118.
Proof. exact (@lem2627369 term32 term32). Qed.
Lemma lem2627371 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627372 : term120 = term32.
Proof. exact (EQ_MP (@lem2627371) (@lem940073)). Qed.
Lemma lem2627373 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627374 : term118 = term31.
Proof. exact (MK_COMB (@lem2627373) (@lem2627372)). Qed.
Lemma lem2627375 : term117 = term31.
Proof. exact (TRANS (@lem2627370) (@lem2627374)). Qed.
Lemma lem2627376 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2627377 : term133 = term131.
Proof. exact (MK_COMB (@lem2627376) (@lem2627375)). Qed.
Lemma lem2627379 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627380 : term131 = term38.
Proof. exact (@lem2627379 term32). Qed.
Lemma lem2627381 : term133 = term38.
Proof. exact (TRANS (@lem2627377) (@lem2627380)). Qed.
Lemma lem2627382 : term38 = term133.
Proof. exact (SYM (@lem2627381)). Qed.
Lemma lem2627383 : term130 = term133.
Proof. exact (TRANS (@lem2627367) (@lem2627382)). Qed.
Lemma lem2627384 : term106 = term134.
Proof. exact (@lem2627334 (@lem2627383)). Qed.
Lemma lem2627385 : term105 = term134.
Proof. exact (TRANS (@lem2627300) (@lem2627384)). Qed.
Lemma lem2627387 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2627388 : term134 = term38.
Proof. exact (@lem2627387 term38). Qed.
Lemma lem2627389 : term105 = term38.
Proof. exact (TRANS (@lem2627385) (@lem2627388)). Qed.
Lemma lem2627390 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627391 : term136 = term129.
Proof. exact (MK_COMB (@lem2627390) (@lem2627389)). Qed.
Lemma lem2627392 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2627393 (x : int) : (term96 x) = (term137 x).
Proof. exact (MK_COMB (@lem2627391) (@lem2627392 x)). Qed.
Lemma lem2627394 (x : int) : (term95 x) = (term137 x).
Proof. exact (TRANS (@lem2627291 x) (@lem2627393 x)). Qed.
Lemma lem2627395 (x : int) : (term137 x) = term38.
Proof. exact (@lem1982719 (real_of_int x)). Qed.
Lemma lem2627396 (x : int) : (term95 x) = term38.
Proof. exact (TRANS (@lem2627394 x) (@lem2627395 x)). Qed.
Lemma lem2627397 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627398 (x : int) : (term138 x) = term48.
Proof. exact (MK_COMB (@lem2627397) (@lem2627396 x)). Qed.
Lemma lem2627399 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2627400 (x : int) : (term253 x) = term254.
Proof. exact (MK_COMB (@lem2627398 x) (@lem2627399)). Qed.
Lemma lem2627401 (x : int) : (term252 x) = term254.
Proof. exact (TRANS (@lem2627290 x) (@lem2627400 x)). Qed.
Lemma lem2627402 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2627403 (x : int) : (term252 x) = term97.
Proof. exact (TRANS (@lem2627401 x) (@lem2627402)). Qed.
Lemma lem2627404 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627405 (x : int) : (term255 x) = term256.
Proof. exact (MK_COMB (@lem2627404) (@lem2627403 x)). Qed.
Lemma lem2627406 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627407 (x : int) : (term251 x) = term257.
Proof. exact (MK_COMB (@lem2627405 x) (@lem2627406)). Qed.
Lemma lem2627408 (x : int) (h1 : term228 x) : term257.
Proof. exact (EQ_MP (@lem2627407 x) (@lem2627289 x h1)). Qed.
Lemma lem2627410 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2627411 : term257 = term258.
Proof. exact (@lem2627410 term38 term97). Qed.
Lemma lem2627413 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627414 : term97 = term102.
Proof. exact (@lem2627413 term32). Qed.
Lemma lem2627416 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627417 : term38 = term134.
Proof. exact (@lem2627416 (NUMERAL 0)). Qed.
Lemma lem2627418 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2627419 : term259 = term260.
Proof. exact (MK_COMB (@lem2627418) (@lem2627417)). Qed.
Lemma lem2627420 : term258 = term261.
Proof. exact (MK_COMB (@lem2627419) (@lem2627414)). Qed.
Lemma lem2627421 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2627423 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627424 : term109 = term110.
Proof. exact (@lem2627423 (NUMERAL 0) term32). Qed.
Lemma lem2627425 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627426 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627427 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627426 h1) (fun h1 : term110 = True => @lem2627425)). Qed.
Lemma lem2627428 : term110 = True.
Proof. exact (EQ_MP (@lem2627427) (@lem2627425)). Qed.
Lemma lem2627429 : term109 = True.
Proof. exact (TRANS (@lem2627424) (@lem2627428)). Qed.
Lemma lem2627430 : True = term109.
Proof. exact (SYM (@lem2627429)). Qed.
Lemma lem2627431 : term109.
Proof. exact (EQ_MP (@lem2627430) (@lem0)). Qed.
Lemma lem2627432 : term263.
Proof. exact (@lem2627421 (@lem2627431)). Qed.
Lemma lem2627434 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627435 : term109 = term110.
Proof. exact (@lem2627434 (NUMERAL 0) term32). Qed.
Lemma lem2627436 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627437 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627438 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627437 h1) (fun h1 : term110 = True => @lem2627436)). Qed.
Lemma lem2627439 : term110 = True.
Proof. exact (EQ_MP (@lem2627438) (@lem2627436)). Qed.
Lemma lem2627440 : term109 = True.
Proof. exact (TRANS (@lem2627435) (@lem2627439)). Qed.
Lemma lem2627441 : True = term109.
Proof. exact (SYM (@lem2627440)). Qed.
Lemma lem2627442 : term109.
Proof. exact (EQ_MP (@lem2627441) (@lem0)). Qed.
Lemma lem2627443 : term261 = term264.
Proof. exact (@lem2627432 (@lem2627442)). Qed.
Lemma lem2627445 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2627446 : term123 = term124.
Proof. exact (@lem2627445 term32 term32). Qed.
Lemma lem2627447 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627448 : term120 = term32.
Proof. exact (EQ_MP (@lem2627447) (@lem940073)). Qed.
Lemma lem2627449 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627450 : term118 = term31.
Proof. exact (MK_COMB (@lem2627449) (@lem2627448)). Qed.
Lemma lem2627451 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2627452 : term124 = term97.
Proof. exact (MK_COMB (@lem2627451) (@lem2627450)). Qed.
Lemma lem2627453 : term123 = term97.
Proof. exact (TRANS (@lem2627446) (@lem2627452)). Qed.
Lemma lem2627455 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627456 : term131 = term38.
Proof. exact (@lem2627455 term32). Qed.
Lemma lem2627457 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2627458 : term265 = term259.
Proof. exact (MK_COMB (@lem2627457) (@lem2627456)). Qed.
Lemma lem2627459 : term264 = term258.
Proof. exact (MK_COMB (@lem2627458) (@lem2627453)). Qed.
Lemma lem2627461 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2627462 : term258 = term268.
Proof. exact (@lem2627461 (NUMERAL 0) term32). Qed.
Lemma lem2627463 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627464 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2627465 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627464 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2627463)). Qed.
Lemma lem2627466 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2627465) (@lem2627463)). Qed.
Lemma lem2627467 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2627468 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2627469 : term269 = (and True).
Proof. exact (MK_COMB (@lem2627468) (@lem2627467)). Qed.
Lemma lem2627470 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2627469) (@lem2627466)). Qed.
Lemma lem2627472 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2627473 : term268 = False.
Proof. exact (TRANS (@lem2627470) (@lem2627472)). Qed.
Lemma lem2627474 : term258 = False.
Proof. exact (TRANS (@lem2627462) (@lem2627473)). Qed.
Lemma lem2627475 : term264 = False.
Proof. exact (TRANS (@lem2627459) (@lem2627474)). Qed.
Lemma lem2627476 : term261 = False.
Proof. exact (TRANS (@lem2627443) (@lem2627475)). Qed.
Lemma lem2627477 : term258 = False.
Proof. exact (TRANS (@lem2627420) (@lem2627476)). Qed.
Lemma lem2627478 : term257 = False.
Proof. exact (TRANS (@lem2627411) (@lem2627477)). Qed.
Lemma lem2627479 (x : int) (h1 : term228 x) : False.
Proof. exact (EQ_MP (@lem2627478) (@lem2627408 x h1)). Qed.
Lemma lem2627480 (x : int) (h1 : term270 x) : term270 x.
Proof. exact (h1). Qed.
Lemma lem2627481 (x : int) (h1 : term270 x) : term167 x.
Proof. exact (proj2 (@lem2627480 x h1)). Qed.
Lemma lem2627482 (x : int) (h1 : term270 x) : (term94 x) = term38.
Proof. exact (proj1 (@lem2627480 x h1)). Qed.
Lemma lem2627484 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2627485 : term229 = term109.
Proof. exact (@lem2627484 term38 term31). Qed.
Lemma lem2627487 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627488 : term31 = term99.
Proof. exact (@lem2627487 term32). Qed.
Lemma lem2627490 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627491 : term38 = term134.
Proof. exact (@lem2627490 (NUMERAL 0)). Qed.
Lemma lem2627492 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627493 : term230 = term231.
Proof. exact (MK_COMB (@lem2627492) (@lem2627491)). Qed.
Lemma lem2627494 : term109 = term232.
Proof. exact (MK_COMB (@lem2627493) (@lem2627488)). Qed.
Lemma lem2627495 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2627497 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627498 : term109 = term110.
Proof. exact (@lem2627497 (NUMERAL 0) term32). Qed.
Lemma lem2627499 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627500 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627501 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627500 h1) (fun h1 : term110 = True => @lem2627499)). Qed.
Lemma lem2627502 : term110 = True.
Proof. exact (EQ_MP (@lem2627501) (@lem2627499)). Qed.
Lemma lem2627503 : term109 = True.
Proof. exact (TRANS (@lem2627498) (@lem2627502)). Qed.
Lemma lem2627504 : True = term109.
Proof. exact (SYM (@lem2627503)). Qed.
Lemma lem2627505 : term109.
Proof. exact (EQ_MP (@lem2627504) (@lem0)). Qed.
Lemma lem2627506 : term234.
Proof. exact (@lem2627495 (@lem2627505)). Qed.
Lemma lem2627508 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627509 : term109 = term110.
Proof. exact (@lem2627508 (NUMERAL 0) term32). Qed.
Lemma lem2627510 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627511 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627512 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627511 h1) (fun h1 : term110 = True => @lem2627510)). Qed.
Lemma lem2627513 : term110 = True.
Proof. exact (EQ_MP (@lem2627512) (@lem2627510)). Qed.
Lemma lem2627514 : term109 = True.
Proof. exact (TRANS (@lem2627509) (@lem2627513)). Qed.
Lemma lem2627515 : True = term109.
Proof. exact (SYM (@lem2627514)). Qed.
Lemma lem2627516 : term109.
Proof. exact (EQ_MP (@lem2627515) (@lem0)). Qed.
Lemma lem2627517 : term232 = term235.
Proof. exact (@lem2627506 (@lem2627516)). Qed.
Lemma lem2627519 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627520 : term117 = term118.
Proof. exact (@lem2627519 term32 term32). Qed.
Lemma lem2627521 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627522 : term120 = term32.
Proof. exact (EQ_MP (@lem2627521) (@lem940073)). Qed.
Lemma lem2627523 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627524 : term118 = term31.
Proof. exact (MK_COMB (@lem2627523) (@lem2627522)). Qed.
Lemma lem2627525 : term117 = term31.
Proof. exact (TRANS (@lem2627520) (@lem2627524)). Qed.
Lemma lem2627527 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627528 : term131 = term38.
Proof. exact (@lem2627527 term32). Qed.
Lemma lem2627529 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627530 : term236 = term230.
Proof. exact (MK_COMB (@lem2627529) (@lem2627528)). Qed.
Lemma lem2627531 : term235 = term109.
Proof. exact (MK_COMB (@lem2627530) (@lem2627525)). Qed.
Lemma lem2627533 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627534 : term109 = term110.
Proof. exact (@lem2627533 (NUMERAL 0) term32). Qed.
Lemma lem2627535 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627536 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627537 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627536 h1) (fun h1 : term110 = True => @lem2627535)). Qed.
Lemma lem2627538 : term110 = True.
Proof. exact (EQ_MP (@lem2627537) (@lem2627535)). Qed.
Lemma lem2627539 : term109 = True.
Proof. exact (TRANS (@lem2627534) (@lem2627538)). Qed.
Lemma lem2627540 : term235 = True.
Proof. exact (TRANS (@lem2627531) (@lem2627539)). Qed.
Lemma lem2627541 : term232 = True.
Proof. exact (TRANS (@lem2627517) (@lem2627540)). Qed.
Lemma lem2627542 : term109 = True.
Proof. exact (TRANS (@lem2627494) (@lem2627541)). Qed.
Lemma lem2627543 : term229 = True.
Proof. exact (TRANS (@lem2627485) (@lem2627542)). Qed.
Lemma lem2627544 : True = term229.
Proof. exact (SYM (@lem2627543)). Qed.
Lemma lem2627545 : term229.
Proof. exact (EQ_MP (@lem2627544) (@lem0)). Qed.
Lemma lem2627546 (x : int) (h1 : term270 x) : term271 x.
Proof. exact (conj (@lem2627545) (@lem2627481 x h1)). Qed.
Lemma lem2627548 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2627549 (x : int) : term272 x.
Proof. exact (@lem2627548 term31 (term164 x)). Qed.
Lemma lem2627550 (x : int) (h1 : term270 x) : term273 x.
Proof. exact (@lem2627549 x (@lem2627546 x h1)). Qed.
Lemma lem2627551 (x : int) : (term274 x) = (term164 x).
Proof. exact (@lem1982733 (term164 x)). Qed.
Lemma lem2627552 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627553 (x : int) : (term275 x) = (term166 x).
Proof. exact (MK_COMB (@lem2627552) (@lem2627551 x)). Qed.
Lemma lem2627554 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627555 (x : int) : (term273 x) = (term167 x).
Proof. exact (MK_COMB (@lem2627553 x) (@lem2627554)). Qed.
Lemma lem2627556 (x : int) (h1 : term270 x) : term167 x.
Proof. exact (EQ_MP (@lem2627555 x) (@lem2627550 x h1)). Qed.
Lemma lem2627558 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2627559 (x : int) : term244 x.
Proof. exact (@lem2627558 (term94 x)). Qed.
Lemma lem2627560 (x : int) (h1 : term270 x) : term245 x.
Proof. exact (@lem2627559 x (@lem2627482 x h1)). Qed.
Lemma lem2627561 (x : int) (h1 : term270 x) : term276 x.
Proof. exact (@lem2627560 x h1 term31). Qed.
Lemma lem2627562 (x : int) : (term276 x) = ((term277 x) = term38).
Proof. exact (eq_refl (term276 x)). Qed.
Lemma lem2627563 (x : int) (h1 : term270 x) : (term277 x) = term38.
Proof. exact (EQ_MP (@lem2627562 x) (@lem2627561 x h1)). Qed.
Lemma lem2627564 (x : int) : (term277 x) = (term94 x).
Proof. exact (@lem1982733 (term94 x)). Qed.
Lemma lem2627565 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2627566 (x : int) : (term278 x) = (term141 x).
Proof. exact (MK_COMB (@lem2627565) (@lem2627564 x)). Qed.
Lemma lem2627567 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627568 (x : int) : ((term277 x) = term38) = ((term94 x) = term38).
Proof. exact (MK_COMB (@lem2627566 x) (@lem2627567)). Qed.
Lemma lem2627569 (x : int) (h1 : term270 x) : (term94 x) = term38.
Proof. exact (EQ_MP (@lem2627568 x) (@lem2627563 x h1)). Qed.
Lemma lem2627570 (x : int) (h1 : term270 x) : term270 x.
Proof. exact (conj (@lem2627569 x h1) (@lem2627556 x h1)). Qed.
Lemma lem2627572 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2627573 (x : int) : term279 x.
Proof. exact (@lem2627572 (term94 x) (term164 x)). Qed.
Lemma lem2627574 (x : int) (h1 : term270 x) : term280 x.
Proof. exact (@lem2627573 x (@lem2627570 x h1)). Qed.
Lemma lem2627575 (x : int) : (term281 x) = (term282 x).
Proof. exact (@lem1982763 (term94 x) (real_of_int x) term97). Qed.
Lemma lem2627576 (x : int) : (term283 x) = (term96 x).
Proof. exact (@lem1982713 term97 (real_of_int x)). Qed.
Lemma lem2627578 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627579 : term31 = term99.
Proof. exact (@lem2627578 term32). Qed.
Lemma lem2627581 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627582 : term97 = term102.
Proof. exact (@lem2627581 term32). Qed.
Lemma lem2627583 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627584 : term103 = term104.
Proof. exact (MK_COMB (@lem2627583) (@lem2627582)). Qed.
Lemma lem2627585 : term105 = term106.
Proof. exact (MK_COMB (@lem2627584) (@lem2627579)). Qed.
Lemma lem2627586 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2627588 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627589 : term109 = term110.
Proof. exact (@lem2627588 (NUMERAL 0) term32). Qed.
Lemma lem2627590 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627591 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627592 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627591 h1) (fun h1 : term110 = True => @lem2627590)). Qed.
Lemma lem2627593 : term110 = True.
Proof. exact (EQ_MP (@lem2627592) (@lem2627590)). Qed.
Lemma lem2627594 : term109 = True.
Proof. exact (TRANS (@lem2627589) (@lem2627593)). Qed.
Lemma lem2627595 : True = term109.
Proof. exact (SYM (@lem2627594)). Qed.
Lemma lem2627596 : term109.
Proof. exact (EQ_MP (@lem2627595) (@lem0)). Qed.
Lemma lem2627597 : term112.
Proof. exact (@lem2627586 (@lem2627596)). Qed.
Lemma lem2627599 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627600 : term109 = term110.
Proof. exact (@lem2627599 (NUMERAL 0) term32). Qed.
Lemma lem2627601 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627602 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627603 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627602 h1) (fun h1 : term110 = True => @lem2627601)). Qed.
Lemma lem2627604 : term110 = True.
Proof. exact (EQ_MP (@lem2627603) (@lem2627601)). Qed.
Lemma lem2627605 : term109 = True.
Proof. exact (TRANS (@lem2627600) (@lem2627604)). Qed.
Lemma lem2627606 : True = term109.
Proof. exact (SYM (@lem2627605)). Qed.
Lemma lem2627607 : term109.
Proof. exact (EQ_MP (@lem2627606) (@lem0)). Qed.
Lemma lem2627608 : term113.
Proof. exact (@lem2627597 (@lem2627607)). Qed.
Lemma lem2627610 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627611 : term109 = term110.
Proof. exact (@lem2627610 (NUMERAL 0) term32). Qed.
Lemma lem2627612 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627613 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627614 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627613 h1) (fun h1 : term110 = True => @lem2627612)). Qed.
Lemma lem2627615 : term110 = True.
Proof. exact (EQ_MP (@lem2627614) (@lem2627612)). Qed.
Lemma lem2627616 : term109 = True.
Proof. exact (TRANS (@lem2627611) (@lem2627615)). Qed.
Lemma lem2627617 : True = term109.
Proof. exact (SYM (@lem2627616)). Qed.
Lemma lem2627618 : term109.
Proof. exact (EQ_MP (@lem2627617) (@lem0)). Qed.
Lemma lem2627619 : term114.
Proof. exact (@lem2627608 (@lem2627618)). Qed.
Lemma lem2627621 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627622 : term117 = term118.
Proof. exact (@lem2627621 term32 term32). Qed.
Lemma lem2627623 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627624 : term120 = term32.
Proof. exact (EQ_MP (@lem2627623) (@lem940073)). Qed.
Lemma lem2627625 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627626 : term118 = term31.
Proof. exact (MK_COMB (@lem2627625) (@lem2627624)). Qed.
Lemma lem2627627 : term117 = term31.
Proof. exact (TRANS (@lem2627622) (@lem2627626)). Qed.
Lemma lem2627629 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2627630 : term123 = term124.
Proof. exact (@lem2627629 term32 term32). Qed.
Lemma lem2627631 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627632 : term120 = term32.
Proof. exact (EQ_MP (@lem2627631) (@lem940073)). Qed.
Lemma lem2627633 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627634 : term118 = term31.
Proof. exact (MK_COMB (@lem2627633) (@lem2627632)). Qed.
Lemma lem2627635 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2627636 : term124 = term97.
Proof. exact (MK_COMB (@lem2627635) (@lem2627634)). Qed.
Lemma lem2627637 : term123 = term97.
Proof. exact (TRANS (@lem2627630) (@lem2627636)). Qed.
Lemma lem2627638 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627639 : term125 = term103.
Proof. exact (MK_COMB (@lem2627638) (@lem2627637)). Qed.
Lemma lem2627640 : term126 = term105.
Proof. exact (MK_COMB (@lem2627639) (@lem2627627)). Qed.
Lemma lem2627642 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2627643 : term105 = term38.
Proof. exact (@lem2627642 term32). Qed.
Lemma lem2627644 : term126 = term38.
Proof. exact (TRANS (@lem2627640) (@lem2627643)). Qed.
Lemma lem2627645 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627646 : term128 = term129.
Proof. exact (MK_COMB (@lem2627645) (@lem2627644)). Qed.
Lemma lem2627647 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2627648 : term130 = term131.
Proof. exact (MK_COMB (@lem2627646) (@lem2627647)). Qed.
Lemma lem2627650 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627651 : term131 = term38.
Proof. exact (@lem2627650 term32). Qed.
Lemma lem2627652 : term130 = term38.
Proof. exact (TRANS (@lem2627648) (@lem2627651)). Qed.
Lemma lem2627654 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627655 : term117 = term118.
Proof. exact (@lem2627654 term32 term32). Qed.
Lemma lem2627656 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627657 : term120 = term32.
Proof. exact (EQ_MP (@lem2627656) (@lem940073)). Qed.
Lemma lem2627658 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627659 : term118 = term31.
Proof. exact (MK_COMB (@lem2627658) (@lem2627657)). Qed.
Lemma lem2627660 : term117 = term31.
Proof. exact (TRANS (@lem2627655) (@lem2627659)). Qed.
Lemma lem2627661 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2627662 : term133 = term131.
Proof. exact (MK_COMB (@lem2627661) (@lem2627660)). Qed.
Lemma lem2627664 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627665 : term131 = term38.
Proof. exact (@lem2627664 term32). Qed.
Lemma lem2627666 : term133 = term38.
Proof. exact (TRANS (@lem2627662) (@lem2627665)). Qed.
Lemma lem2627667 : term38 = term133.
Proof. exact (SYM (@lem2627666)). Qed.
Lemma lem2627668 : term130 = term133.
Proof. exact (TRANS (@lem2627652) (@lem2627667)). Qed.
Lemma lem2627669 : term106 = term134.
Proof. exact (@lem2627619 (@lem2627668)). Qed.
Lemma lem2627670 : term105 = term134.
Proof. exact (TRANS (@lem2627585) (@lem2627669)). Qed.
Lemma lem2627672 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2627673 : term134 = term38.
Proof. exact (@lem2627672 term38). Qed.
Lemma lem2627674 : term105 = term38.
Proof. exact (TRANS (@lem2627670) (@lem2627673)). Qed.
Lemma lem2627675 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627676 : term136 = term129.
Proof. exact (MK_COMB (@lem2627675) (@lem2627674)). Qed.
Lemma lem2627677 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2627678 (x : int) : (term96 x) = (term137 x).
Proof. exact (MK_COMB (@lem2627676) (@lem2627677 x)). Qed.
Lemma lem2627679 (x : int) : (term283 x) = (term137 x).
Proof. exact (TRANS (@lem2627576 x) (@lem2627678 x)). Qed.
Lemma lem2627680 (x : int) : (term137 x) = term38.
Proof. exact (@lem1982719 (real_of_int x)). Qed.
Lemma lem2627681 (x : int) : (term283 x) = term38.
Proof. exact (TRANS (@lem2627679 x) (@lem2627680 x)). Qed.
Lemma lem2627682 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627683 (x : int) : (term284 x) = term48.
Proof. exact (MK_COMB (@lem2627682) (@lem2627681 x)). Qed.
Lemma lem2627684 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2627685 (x : int) : (term282 x) = term254.
Proof. exact (MK_COMB (@lem2627683 x) (@lem2627684)). Qed.
Lemma lem2627686 (x : int) : (term281 x) = term254.
Proof. exact (TRANS (@lem2627575 x) (@lem2627685 x)). Qed.
Lemma lem2627687 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2627688 (x : int) : (term281 x) = term97.
Proof. exact (TRANS (@lem2627686 x) (@lem2627687)). Qed.
Lemma lem2627689 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627690 (x : int) : (term285 x) = term256.
Proof. exact (MK_COMB (@lem2627689) (@lem2627688 x)). Qed.
Lemma lem2627691 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627692 (x : int) : (term280 x) = term257.
Proof. exact (MK_COMB (@lem2627690 x) (@lem2627691)). Qed.
Lemma lem2627693 (x : int) (h1 : term270 x) : term257.
Proof. exact (EQ_MP (@lem2627692 x) (@lem2627574 x h1)). Qed.
Lemma lem2627695 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2627696 : term257 = term258.
Proof. exact (@lem2627695 term38 term97). Qed.
Lemma lem2627698 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627699 : term97 = term102.
Proof. exact (@lem2627698 term32). Qed.
Lemma lem2627701 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627702 : term38 = term134.
Proof. exact (@lem2627701 (NUMERAL 0)). Qed.
Lemma lem2627703 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2627704 : term259 = term260.
Proof. exact (MK_COMB (@lem2627703) (@lem2627702)). Qed.
Lemma lem2627705 : term258 = term261.
Proof. exact (MK_COMB (@lem2627704) (@lem2627699)). Qed.
Lemma lem2627706 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2627708 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627709 : term109 = term110.
Proof. exact (@lem2627708 (NUMERAL 0) term32). Qed.
Lemma lem2627710 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627711 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627712 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627711 h1) (fun h1 : term110 = True => @lem2627710)). Qed.
Lemma lem2627713 : term110 = True.
Proof. exact (EQ_MP (@lem2627712) (@lem2627710)). Qed.
Lemma lem2627714 : term109 = True.
Proof. exact (TRANS (@lem2627709) (@lem2627713)). Qed.
Lemma lem2627715 : True = term109.
Proof. exact (SYM (@lem2627714)). Qed.
Lemma lem2627716 : term109.
Proof. exact (EQ_MP (@lem2627715) (@lem0)). Qed.
Lemma lem2627717 : term263.
Proof. exact (@lem2627706 (@lem2627716)). Qed.
Lemma lem2627719 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627720 : term109 = term110.
Proof. exact (@lem2627719 (NUMERAL 0) term32). Qed.
Lemma lem2627721 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627722 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627723 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627722 h1) (fun h1 : term110 = True => @lem2627721)). Qed.
Lemma lem2627724 : term110 = True.
Proof. exact (EQ_MP (@lem2627723) (@lem2627721)). Qed.
Lemma lem2627725 : term109 = True.
Proof. exact (TRANS (@lem2627720) (@lem2627724)). Qed.
Lemma lem2627726 : True = term109.
Proof. exact (SYM (@lem2627725)). Qed.
Lemma lem2627727 : term109.
Proof. exact (EQ_MP (@lem2627726) (@lem0)). Qed.
Lemma lem2627728 : term261 = term264.
Proof. exact (@lem2627717 (@lem2627727)). Qed.
Lemma lem2627730 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2627731 : term123 = term124.
Proof. exact (@lem2627730 term32 term32). Qed.
Lemma lem2627732 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627733 : term120 = term32.
Proof. exact (EQ_MP (@lem2627732) (@lem940073)). Qed.
Lemma lem2627734 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627735 : term118 = term31.
Proof. exact (MK_COMB (@lem2627734) (@lem2627733)). Qed.
Lemma lem2627736 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2627737 : term124 = term97.
Proof. exact (MK_COMB (@lem2627736) (@lem2627735)). Qed.
Lemma lem2627738 : term123 = term97.
Proof. exact (TRANS (@lem2627731) (@lem2627737)). Qed.
Lemma lem2627740 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627741 : term131 = term38.
Proof. exact (@lem2627740 term32). Qed.
Lemma lem2627742 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2627743 : term265 = term259.
Proof. exact (MK_COMB (@lem2627742) (@lem2627741)). Qed.
Lemma lem2627744 : term264 = term258.
Proof. exact (MK_COMB (@lem2627743) (@lem2627738)). Qed.
Lemma lem2627746 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2627747 : term258 = term268.
Proof. exact (@lem2627746 (NUMERAL 0) term32). Qed.
Lemma lem2627748 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627749 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2627750 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627749 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2627748)). Qed.
Lemma lem2627751 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2627750) (@lem2627748)). Qed.
Lemma lem2627752 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2627753 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2627754 : term269 = (and True).
Proof. exact (MK_COMB (@lem2627753) (@lem2627752)). Qed.
Lemma lem2627755 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2627754) (@lem2627751)). Qed.
Lemma lem2627757 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2627758 : term268 = False.
Proof. exact (TRANS (@lem2627755) (@lem2627757)). Qed.
Lemma lem2627759 : term258 = False.
Proof. exact (TRANS (@lem2627747) (@lem2627758)). Qed.
Lemma lem2627760 : term264 = False.
Proof. exact (TRANS (@lem2627744) (@lem2627759)). Qed.
Lemma lem2627761 : term261 = False.
Proof. exact (TRANS (@lem2627728) (@lem2627760)). Qed.
Lemma lem2627762 : term258 = False.
Proof. exact (TRANS (@lem2627705) (@lem2627761)). Qed.
Lemma lem2627763 : term257 = False.
Proof. exact (TRANS (@lem2627696) (@lem2627762)). Qed.
Lemma lem2627764 (x : int) (h1 : term270 x) : False.
Proof. exact (EQ_MP (@lem2627763) (@lem2627693 x h1)). Qed.
Lemma lem2627765 (x : int) (h1 : term225 x) : False.
Proof. exact (or_elim (@lem2627152 x h1) (fun h0 : term228 x => @lem2627479 x h0) (fun h0 : term270 x => @lem2627764 x h0)). Qed.
Lemma lem2627766 (x : int) (h1 : term224 x) : term224 x.
Proof. exact (h1). Qed.
Lemma lem2627767 (x : int) (h1 : term286 x) : term286 x.
Proof. exact (h1). Qed.
Lemma lem2627768 (x : int) (h1 : term286 x) : (real_of_int x) = term38.
Proof. exact (proj2 (@lem2627767 x h1)). Qed.
Lemma lem2627769 (x : int) (h1 : term286 x) : term167 x.
Proof. exact (proj1 (@lem2627767 x h1)). Qed.
Lemma lem2627771 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2627772 : term229 = term109.
Proof. exact (@lem2627771 term38 term31). Qed.
Lemma lem2627774 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627775 : term31 = term99.
Proof. exact (@lem2627774 term32). Qed.
Lemma lem2627777 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627778 : term38 = term134.
Proof. exact (@lem2627777 (NUMERAL 0)). Qed.
Lemma lem2627779 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627780 : term230 = term231.
Proof. exact (MK_COMB (@lem2627779) (@lem2627778)). Qed.
Lemma lem2627781 : term109 = term232.
Proof. exact (MK_COMB (@lem2627780) (@lem2627775)). Qed.
Lemma lem2627782 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2627784 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627785 : term109 = term110.
Proof. exact (@lem2627784 (NUMERAL 0) term32). Qed.
Lemma lem2627786 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627787 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627788 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627787 h1) (fun h1 : term110 = True => @lem2627786)). Qed.
Lemma lem2627789 : term110 = True.
Proof. exact (EQ_MP (@lem2627788) (@lem2627786)). Qed.
Lemma lem2627790 : term109 = True.
Proof. exact (TRANS (@lem2627785) (@lem2627789)). Qed.
Lemma lem2627791 : True = term109.
Proof. exact (SYM (@lem2627790)). Qed.
Lemma lem2627792 : term109.
Proof. exact (EQ_MP (@lem2627791) (@lem0)). Qed.
Lemma lem2627793 : term234.
Proof. exact (@lem2627782 (@lem2627792)). Qed.
Lemma lem2627795 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627796 : term109 = term110.
Proof. exact (@lem2627795 (NUMERAL 0) term32). Qed.
Lemma lem2627797 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627798 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627799 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627798 h1) (fun h1 : term110 = True => @lem2627797)). Qed.
Lemma lem2627800 : term110 = True.
Proof. exact (EQ_MP (@lem2627799) (@lem2627797)). Qed.
Lemma lem2627801 : term109 = True.
Proof. exact (TRANS (@lem2627796) (@lem2627800)). Qed.
Lemma lem2627802 : True = term109.
Proof. exact (SYM (@lem2627801)). Qed.
Lemma lem2627803 : term109.
Proof. exact (EQ_MP (@lem2627802) (@lem0)). Qed.
Lemma lem2627804 : term232 = term235.
Proof. exact (@lem2627793 (@lem2627803)). Qed.
Lemma lem2627806 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627807 : term117 = term118.
Proof. exact (@lem2627806 term32 term32). Qed.
Lemma lem2627808 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627809 : term120 = term32.
Proof. exact (EQ_MP (@lem2627808) (@lem940073)). Qed.
Lemma lem2627810 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627811 : term118 = term31.
Proof. exact (MK_COMB (@lem2627810) (@lem2627809)). Qed.
Lemma lem2627812 : term117 = term31.
Proof. exact (TRANS (@lem2627807) (@lem2627811)). Qed.
Lemma lem2627814 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627815 : term131 = term38.
Proof. exact (@lem2627814 term32). Qed.
Lemma lem2627816 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2627817 : term236 = term230.
Proof. exact (MK_COMB (@lem2627816) (@lem2627815)). Qed.
Lemma lem2627818 : term235 = term109.
Proof. exact (MK_COMB (@lem2627817) (@lem2627812)). Qed.
Lemma lem2627820 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627821 : term109 = term110.
Proof. exact (@lem2627820 (NUMERAL 0) term32). Qed.
Lemma lem2627822 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627823 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627824 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627823 h1) (fun h1 : term110 = True => @lem2627822)). Qed.
Lemma lem2627825 : term110 = True.
Proof. exact (EQ_MP (@lem2627824) (@lem2627822)). Qed.
Lemma lem2627826 : term109 = True.
Proof. exact (TRANS (@lem2627821) (@lem2627825)). Qed.
Lemma lem2627827 : term235 = True.
Proof. exact (TRANS (@lem2627818) (@lem2627826)). Qed.
Lemma lem2627828 : term232 = True.
Proof. exact (TRANS (@lem2627804) (@lem2627827)). Qed.
Lemma lem2627829 : term109 = True.
Proof. exact (TRANS (@lem2627781) (@lem2627828)). Qed.
Lemma lem2627830 : term229 = True.
Proof. exact (TRANS (@lem2627772) (@lem2627829)). Qed.
Lemma lem2627831 : True = term229.
Proof. exact (SYM (@lem2627830)). Qed.
Lemma lem2627832 : term229.
Proof. exact (EQ_MP (@lem2627831) (@lem0)). Qed.
Lemma lem2627833 (x : int) (h1 : term286 x) : term271 x.
Proof. exact (conj (@lem2627832) (@lem2627769 x h1)). Qed.
Lemma lem2627835 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2627836 (x : int) : term272 x.
Proof. exact (@lem2627835 term31 (term164 x)). Qed.
Lemma lem2627837 (x : int) (h1 : term286 x) : term273 x.
Proof. exact (@lem2627836 x (@lem2627833 x h1)). Qed.
Lemma lem2627838 (x : int) : (term274 x) = (term164 x).
Proof. exact (@lem1982733 (term164 x)). Qed.
Lemma lem2627839 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627840 (x : int) : (term275 x) = (term166 x).
Proof. exact (MK_COMB (@lem2627839) (@lem2627838 x)). Qed.
Lemma lem2627841 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627842 (x : int) : (term273 x) = (term167 x).
Proof. exact (MK_COMB (@lem2627840 x) (@lem2627841)). Qed.
Lemma lem2627843 (x : int) (h1 : term286 x) : term167 x.
Proof. exact (EQ_MP (@lem2627842 x) (@lem2627837 x h1)). Qed.
Lemma lem2627845 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2627846 (x : int) : term287 x.
Proof. exact (@lem2627845 (real_of_int x)). Qed.
Lemma lem2627847 (x : int) (h1 : term286 x) : term288 x.
Proof. exact (@lem2627846 x (@lem2627768 x h1)). Qed.
Lemma lem2627848 (x : int) (h1 : term286 x) : term289 x.
Proof. exact (@lem2627847 x h1 term97). Qed.
Lemma lem2627849 (x : int) : (term289 x) = ((term94 x) = term38).
Proof. exact (eq_refl (term289 x)). Qed.
Lemma lem2627856 (x : int) (h1 : term286 x) : (term94 x) = term38.
Proof. exact (EQ_MP (@lem2627849 x) (@lem2627848 x h1)). Qed.
Lemma lem2627857 (x : int) (h1 : term286 x) : term270 x.
Proof. exact (conj (@lem2627856 x h1) (@lem2627843 x h1)). Qed.
Lemma lem2627859 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2627860 (x : int) : term279 x.
Proof. exact (@lem2627859 (term94 x) (term164 x)). Qed.
Lemma lem2627861 (x : int) (h1 : term286 x) : term280 x.
Proof. exact (@lem2627860 x (@lem2627857 x h1)). Qed.
Lemma lem2627862 (x : int) : (term281 x) = (term282 x).
Proof. exact (@lem1982763 (term94 x) (real_of_int x) term97). Qed.
Lemma lem2627863 (x : int) : (term283 x) = (term96 x).
Proof. exact (@lem1982713 term97 (real_of_int x)). Qed.
Lemma lem2627865 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627866 : term31 = term99.
Proof. exact (@lem2627865 term32). Qed.
Lemma lem2627868 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627869 : term97 = term102.
Proof. exact (@lem2627868 term32). Qed.
Lemma lem2627870 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627871 : term103 = term104.
Proof. exact (MK_COMB (@lem2627870) (@lem2627869)). Qed.
Lemma lem2627872 : term105 = term106.
Proof. exact (MK_COMB (@lem2627871) (@lem2627866)). Qed.
Lemma lem2627873 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2627875 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627876 : term109 = term110.
Proof. exact (@lem2627875 (NUMERAL 0) term32). Qed.
Lemma lem2627877 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627878 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627879 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627878 h1) (fun h1 : term110 = True => @lem2627877)). Qed.
Lemma lem2627880 : term110 = True.
Proof. exact (EQ_MP (@lem2627879) (@lem2627877)). Qed.
Lemma lem2627881 : term109 = True.
Proof. exact (TRANS (@lem2627876) (@lem2627880)). Qed.
Lemma lem2627882 : True = term109.
Proof. exact (SYM (@lem2627881)). Qed.
Lemma lem2627883 : term109.
Proof. exact (EQ_MP (@lem2627882) (@lem0)). Qed.
Lemma lem2627884 : term112.
Proof. exact (@lem2627873 (@lem2627883)). Qed.
Lemma lem2627886 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627887 : term109 = term110.
Proof. exact (@lem2627886 (NUMERAL 0) term32). Qed.
Lemma lem2627888 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627889 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627890 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627889 h1) (fun h1 : term110 = True => @lem2627888)). Qed.
Lemma lem2627891 : term110 = True.
Proof. exact (EQ_MP (@lem2627890) (@lem2627888)). Qed.
Lemma lem2627892 : term109 = True.
Proof. exact (TRANS (@lem2627887) (@lem2627891)). Qed.
Lemma lem2627893 : True = term109.
Proof. exact (SYM (@lem2627892)). Qed.
Lemma lem2627894 : term109.
Proof. exact (EQ_MP (@lem2627893) (@lem0)). Qed.
Lemma lem2627895 : term113.
Proof. exact (@lem2627884 (@lem2627894)). Qed.
Lemma lem2627897 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627898 : term109 = term110.
Proof. exact (@lem2627897 (NUMERAL 0) term32). Qed.
Lemma lem2627899 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627900 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627901 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627900 h1) (fun h1 : term110 = True => @lem2627899)). Qed.
Lemma lem2627902 : term110 = True.
Proof. exact (EQ_MP (@lem2627901) (@lem2627899)). Qed.
Lemma lem2627903 : term109 = True.
Proof. exact (TRANS (@lem2627898) (@lem2627902)). Qed.
Lemma lem2627904 : True = term109.
Proof. exact (SYM (@lem2627903)). Qed.
Lemma lem2627905 : term109.
Proof. exact (EQ_MP (@lem2627904) (@lem0)). Qed.
Lemma lem2627906 : term114.
Proof. exact (@lem2627895 (@lem2627905)). Qed.
Lemma lem2627908 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627909 : term117 = term118.
Proof. exact (@lem2627908 term32 term32). Qed.
Lemma lem2627910 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627911 : term120 = term32.
Proof. exact (EQ_MP (@lem2627910) (@lem940073)). Qed.
Lemma lem2627912 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627913 : term118 = term31.
Proof. exact (MK_COMB (@lem2627912) (@lem2627911)). Qed.
Lemma lem2627914 : term117 = term31.
Proof. exact (TRANS (@lem2627909) (@lem2627913)). Qed.
Lemma lem2627916 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2627917 : term123 = term124.
Proof. exact (@lem2627916 term32 term32). Qed.
Lemma lem2627918 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627919 : term120 = term32.
Proof. exact (EQ_MP (@lem2627918) (@lem940073)). Qed.
Lemma lem2627920 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627921 : term118 = term31.
Proof. exact (MK_COMB (@lem2627920) (@lem2627919)). Qed.
Lemma lem2627922 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2627923 : term124 = term97.
Proof. exact (MK_COMB (@lem2627922) (@lem2627921)). Qed.
Lemma lem2627924 : term123 = term97.
Proof. exact (TRANS (@lem2627917) (@lem2627923)). Qed.
Lemma lem2627925 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627926 : term125 = term103.
Proof. exact (MK_COMB (@lem2627925) (@lem2627924)). Qed.
Lemma lem2627927 : term126 = term105.
Proof. exact (MK_COMB (@lem2627926) (@lem2627914)). Qed.
Lemma lem2627929 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2627930 : term105 = term38.
Proof. exact (@lem2627929 term32). Qed.
Lemma lem2627931 : term126 = term38.
Proof. exact (TRANS (@lem2627927) (@lem2627930)). Qed.
Lemma lem2627932 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627933 : term128 = term129.
Proof. exact (MK_COMB (@lem2627932) (@lem2627931)). Qed.
Lemma lem2627934 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2627935 : term130 = term131.
Proof. exact (MK_COMB (@lem2627933) (@lem2627934)). Qed.
Lemma lem2627937 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627938 : term131 = term38.
Proof. exact (@lem2627937 term32). Qed.
Lemma lem2627939 : term130 = term38.
Proof. exact (TRANS (@lem2627935) (@lem2627938)). Qed.
Lemma lem2627941 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2627942 : term117 = term118.
Proof. exact (@lem2627941 term32 term32). Qed.
Lemma lem2627943 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2627944 : term120 = term32.
Proof. exact (EQ_MP (@lem2627943) (@lem940073)). Qed.
Lemma lem2627945 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2627946 : term118 = term31.
Proof. exact (MK_COMB (@lem2627945) (@lem2627944)). Qed.
Lemma lem2627947 : term117 = term31.
Proof. exact (TRANS (@lem2627942) (@lem2627946)). Qed.
Lemma lem2627948 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2627949 : term133 = term131.
Proof. exact (MK_COMB (@lem2627948) (@lem2627947)). Qed.
Lemma lem2627951 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2627952 : term131 = term38.
Proof. exact (@lem2627951 term32). Qed.
Lemma lem2627953 : term133 = term38.
Proof. exact (TRANS (@lem2627949) (@lem2627952)). Qed.
Lemma lem2627954 : term38 = term133.
Proof. exact (SYM (@lem2627953)). Qed.
Lemma lem2627955 : term130 = term133.
Proof. exact (TRANS (@lem2627939) (@lem2627954)). Qed.
Lemma lem2627956 : term106 = term134.
Proof. exact (@lem2627906 (@lem2627955)). Qed.
Lemma lem2627957 : term105 = term134.
Proof. exact (TRANS (@lem2627872) (@lem2627956)). Qed.
Lemma lem2627959 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2627960 : term134 = term38.
Proof. exact (@lem2627959 term38). Qed.
Lemma lem2627961 : term105 = term38.
Proof. exact (TRANS (@lem2627957) (@lem2627960)). Qed.
Lemma lem2627962 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2627963 : term136 = term129.
Proof. exact (MK_COMB (@lem2627962) (@lem2627961)). Qed.
Lemma lem2627964 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2627965 (x : int) : (term96 x) = (term137 x).
Proof. exact (MK_COMB (@lem2627963) (@lem2627964 x)). Qed.
Lemma lem2627966 (x : int) : (term283 x) = (term137 x).
Proof. exact (TRANS (@lem2627863 x) (@lem2627965 x)). Qed.
Lemma lem2627967 (x : int) : (term137 x) = term38.
Proof. exact (@lem1982719 (real_of_int x)). Qed.
Lemma lem2627968 (x : int) : (term283 x) = term38.
Proof. exact (TRANS (@lem2627966 x) (@lem2627967 x)). Qed.
Lemma lem2627969 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2627970 (x : int) : (term284 x) = term48.
Proof. exact (MK_COMB (@lem2627969) (@lem2627968 x)). Qed.
Lemma lem2627971 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2627972 (x : int) : (term282 x) = term254.
Proof. exact (MK_COMB (@lem2627970 x) (@lem2627971)). Qed.
Lemma lem2627973 (x : int) : (term281 x) = term254.
Proof. exact (TRANS (@lem2627862 x) (@lem2627972 x)). Qed.
Lemma lem2627974 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2627975 (x : int) : (term281 x) = term97.
Proof. exact (TRANS (@lem2627973 x) (@lem2627974)). Qed.
Lemma lem2627976 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2627977 (x : int) : (term285 x) = term256.
Proof. exact (MK_COMB (@lem2627976) (@lem2627975 x)). Qed.
Lemma lem2627978 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2627979 (x : int) : (term280 x) = term257.
Proof. exact (MK_COMB (@lem2627977 x) (@lem2627978)). Qed.
Lemma lem2627980 (x : int) (h1 : term286 x) : term257.
Proof. exact (EQ_MP (@lem2627979 x) (@lem2627861 x h1)). Qed.
Lemma lem2627982 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2627983 : term257 = term258.
Proof. exact (@lem2627982 term38 term97). Qed.
Lemma lem2627985 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2627986 : term97 = term102.
Proof. exact (@lem2627985 term32). Qed.
Lemma lem2627988 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2627989 : term38 = term134.
Proof. exact (@lem2627988 (NUMERAL 0)). Qed.
Lemma lem2627990 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2627991 : term259 = term260.
Proof. exact (MK_COMB (@lem2627990) (@lem2627989)). Qed.
Lemma lem2627992 : term258 = term261.
Proof. exact (MK_COMB (@lem2627991) (@lem2627986)). Qed.
Lemma lem2627993 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2627995 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2627996 : term109 = term110.
Proof. exact (@lem2627995 (NUMERAL 0) term32). Qed.
Lemma lem2627997 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2627998 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2627999 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2627998 h1) (fun h1 : term110 = True => @lem2627997)). Qed.
Lemma lem2628000 : term110 = True.
Proof. exact (EQ_MP (@lem2627999) (@lem2627997)). Qed.
Lemma lem2628001 : term109 = True.
Proof. exact (TRANS (@lem2627996) (@lem2628000)). Qed.
Lemma lem2628002 : True = term109.
Proof. exact (SYM (@lem2628001)). Qed.
Lemma lem2628003 : term109.
Proof. exact (EQ_MP (@lem2628002) (@lem0)). Qed.
Lemma lem2628004 : term263.
Proof. exact (@lem2627993 (@lem2628003)). Qed.
Lemma lem2628006 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628007 : term109 = term110.
Proof. exact (@lem2628006 (NUMERAL 0) term32). Qed.
Lemma lem2628008 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628009 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628010 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628009 h1) (fun h1 : term110 = True => @lem2628008)). Qed.
Lemma lem2628011 : term110 = True.
Proof. exact (EQ_MP (@lem2628010) (@lem2628008)). Qed.
Lemma lem2628012 : term109 = True.
Proof. exact (TRANS (@lem2628007) (@lem2628011)). Qed.
Lemma lem2628013 : True = term109.
Proof. exact (SYM (@lem2628012)). Qed.
Lemma lem2628014 : term109.
Proof. exact (EQ_MP (@lem2628013) (@lem0)). Qed.
Lemma lem2628015 : term261 = term264.
Proof. exact (@lem2628004 (@lem2628014)). Qed.
Lemma lem2628017 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2628018 : term123 = term124.
Proof. exact (@lem2628017 term32 term32). Qed.
Lemma lem2628019 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628020 : term120 = term32.
Proof. exact (EQ_MP (@lem2628019) (@lem940073)). Qed.
Lemma lem2628021 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628022 : term118 = term31.
Proof. exact (MK_COMB (@lem2628021) (@lem2628020)). Qed.
Lemma lem2628023 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2628024 : term124 = term97.
Proof. exact (MK_COMB (@lem2628023) (@lem2628022)). Qed.
Lemma lem2628025 : term123 = term97.
Proof. exact (TRANS (@lem2628018) (@lem2628024)). Qed.
Lemma lem2628027 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2628028 : term131 = term38.
Proof. exact (@lem2628027 term32). Qed.
Lemma lem2628029 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628030 : term265 = term259.
Proof. exact (MK_COMB (@lem2628029) (@lem2628028)). Qed.
Lemma lem2628031 : term264 = term258.
Proof. exact (MK_COMB (@lem2628030) (@lem2628025)). Qed.
Lemma lem2628033 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2628034 : term258 = term268.
Proof. exact (@lem2628033 (NUMERAL 0) term32). Qed.
Lemma lem2628035 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628036 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2628037 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628036 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2628035)). Qed.
Lemma lem2628038 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2628037) (@lem2628035)). Qed.
Lemma lem2628039 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2628040 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628041 : term269 = (and True).
Proof. exact (MK_COMB (@lem2628040) (@lem2628039)). Qed.
Lemma lem2628042 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2628041) (@lem2628038)). Qed.
Lemma lem2628044 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2628045 : term268 = False.
Proof. exact (TRANS (@lem2628042) (@lem2628044)). Qed.
Lemma lem2628046 : term258 = False.
Proof. exact (TRANS (@lem2628034) (@lem2628045)). Qed.
Lemma lem2628047 : term264 = False.
Proof. exact (TRANS (@lem2628031) (@lem2628046)). Qed.
Lemma lem2628048 : term261 = False.
Proof. exact (TRANS (@lem2628015) (@lem2628047)). Qed.
Lemma lem2628049 : term258 = False.
Proof. exact (TRANS (@lem2627992) (@lem2628048)). Qed.
Lemma lem2628050 : term257 = False.
Proof. exact (TRANS (@lem2627983) (@lem2628049)). Qed.
Lemma lem2628051 (x : int) (h1 : term286 x) : False.
Proof. exact (EQ_MP (@lem2628050) (@lem2627980 x h1)). Qed.
Lemma lem2628052 (x : int) (h1 : term290 x) : term290 x.
Proof. exact (h1). Qed.
Lemma lem2628053 (x : int) (h1 : term290 x) : (real_of_int x) = term38.
Proof. exact (proj2 (@lem2628052 x h1)). Qed.
Lemma lem2628054 (x : int) (h1 : term290 x) : term158 x.
Proof. exact (proj1 (@lem2628052 x h1)). Qed.
Lemma lem2628056 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2628057 : term229 = term109.
Proof. exact (@lem2628056 term38 term31). Qed.
Lemma lem2628059 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2628060 : term31 = term99.
Proof. exact (@lem2628059 term32). Qed.
Lemma lem2628062 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2628063 : term38 = term134.
Proof. exact (@lem2628062 (NUMERAL 0)). Qed.
Lemma lem2628064 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2628065 : term230 = term231.
Proof. exact (MK_COMB (@lem2628064) (@lem2628063)). Qed.
Lemma lem2628066 : term109 = term232.
Proof. exact (MK_COMB (@lem2628065) (@lem2628060)). Qed.
Lemma lem2628067 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2628069 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628070 : term109 = term110.
Proof. exact (@lem2628069 (NUMERAL 0) term32). Qed.
Lemma lem2628071 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628072 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628073 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628072 h1) (fun h1 : term110 = True => @lem2628071)). Qed.
Lemma lem2628074 : term110 = True.
Proof. exact (EQ_MP (@lem2628073) (@lem2628071)). Qed.
Lemma lem2628075 : term109 = True.
Proof. exact (TRANS (@lem2628070) (@lem2628074)). Qed.
Lemma lem2628076 : True = term109.
Proof. exact (SYM (@lem2628075)). Qed.
Lemma lem2628077 : term109.
Proof. exact (EQ_MP (@lem2628076) (@lem0)). Qed.
Lemma lem2628078 : term234.
Proof. exact (@lem2628067 (@lem2628077)). Qed.
Lemma lem2628080 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628081 : term109 = term110.
Proof. exact (@lem2628080 (NUMERAL 0) term32). Qed.
Lemma lem2628082 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628083 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628084 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628083 h1) (fun h1 : term110 = True => @lem2628082)). Qed.
Lemma lem2628085 : term110 = True.
Proof. exact (EQ_MP (@lem2628084) (@lem2628082)). Qed.
Lemma lem2628086 : term109 = True.
Proof. exact (TRANS (@lem2628081) (@lem2628085)). Qed.
Lemma lem2628087 : True = term109.
Proof. exact (SYM (@lem2628086)). Qed.
Lemma lem2628088 : term109.
Proof. exact (EQ_MP (@lem2628087) (@lem0)). Qed.
Lemma lem2628089 : term232 = term235.
Proof. exact (@lem2628078 (@lem2628088)). Qed.
Lemma lem2628091 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2628092 : term117 = term118.
Proof. exact (@lem2628091 term32 term32). Qed.
Lemma lem2628093 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628094 : term120 = term32.
Proof. exact (EQ_MP (@lem2628093) (@lem940073)). Qed.
Lemma lem2628095 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628096 : term118 = term31.
Proof. exact (MK_COMB (@lem2628095) (@lem2628094)). Qed.
Lemma lem2628097 : term117 = term31.
Proof. exact (TRANS (@lem2628092) (@lem2628096)). Qed.
Lemma lem2628099 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2628100 : term131 = term38.
Proof. exact (@lem2628099 term32). Qed.
Lemma lem2628101 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2628102 : term236 = term230.
Proof. exact (MK_COMB (@lem2628101) (@lem2628100)). Qed.
Lemma lem2628103 : term235 = term109.
Proof. exact (MK_COMB (@lem2628102) (@lem2628097)). Qed.
Lemma lem2628105 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628106 : term109 = term110.
Proof. exact (@lem2628105 (NUMERAL 0) term32). Qed.
Lemma lem2628107 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628108 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628109 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628108 h1) (fun h1 : term110 = True => @lem2628107)). Qed.
Lemma lem2628110 : term110 = True.
Proof. exact (EQ_MP (@lem2628109) (@lem2628107)). Qed.
Lemma lem2628111 : term109 = True.
Proof. exact (TRANS (@lem2628106) (@lem2628110)). Qed.
Lemma lem2628112 : term235 = True.
Proof. exact (TRANS (@lem2628103) (@lem2628111)). Qed.
Lemma lem2628113 : term232 = True.
Proof. exact (TRANS (@lem2628089) (@lem2628112)). Qed.
Lemma lem2628114 : term109 = True.
Proof. exact (TRANS (@lem2628066) (@lem2628113)). Qed.
Lemma lem2628115 : term229 = True.
Proof. exact (TRANS (@lem2628057) (@lem2628114)). Qed.
Lemma lem2628116 : True = term229.
Proof. exact (SYM (@lem2628115)). Qed.
Lemma lem2628117 : term229.
Proof. exact (EQ_MP (@lem2628116) (@lem0)). Qed.
Lemma lem2628118 (x : int) (h1 : term290 x) : term237 x.
Proof. exact (conj (@lem2628117) (@lem2628054 x h1)). Qed.
Lemma lem2628120 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2628121 (x : int) : term239 x.
Proof. exact (@lem2628120 term31 (term154 x)). Qed.
Lemma lem2628122 (x : int) (h1 : term290 x) : term240 x.
Proof. exact (@lem2628121 x (@lem2628118 x h1)). Qed.
Lemma lem2628123 (x : int) : (term241 x) = (term154 x).
Proof. exact (@lem1982733 (term154 x)). Qed.
Lemma lem2628124 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2628125 (x : int) : (term242 x) = (term157 x).
Proof. exact (MK_COMB (@lem2628124) (@lem2628123 x)). Qed.
Lemma lem2628126 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2628127 (x : int) : (term240 x) = (term158 x).
Proof. exact (MK_COMB (@lem2628125 x) (@lem2628126)). Qed.
Lemma lem2628128 (x : int) (h1 : term290 x) : term158 x.
Proof. exact (EQ_MP (@lem2628127 x) (@lem2628122 x h1)). Qed.
Lemma lem2628130 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2628131 (x : int) : term287 x.
Proof. exact (@lem2628130 (real_of_int x)). Qed.
Lemma lem2628132 (x : int) (h1 : term290 x) : term288 x.
Proof. exact (@lem2628131 x (@lem2628053 x h1)). Qed.
Lemma lem2628133 (x : int) (h1 : term290 x) : term291 x.
Proof. exact (@lem2628132 x h1 term31). Qed.
Lemma lem2628134 (x : int) : (term291 x) = ((term194 x) = term38).
Proof. exact (eq_refl (term291 x)). Qed.
Lemma lem2628135 (x : int) (h1 : term290 x) : (term194 x) = term38.
Proof. exact (EQ_MP (@lem2628134 x) (@lem2628133 x h1)). Qed.
Lemma lem2628136 (x : int) : (term194 x) = (real_of_int x).
Proof. exact (@lem1982733 (real_of_int x)). Qed.
Lemma lem2628137 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2628138 (x : int) : (term292 x) = (term77 x).
Proof. exact (MK_COMB (@lem2628137) (@lem2628136 x)). Qed.
Lemma lem2628139 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2628140 (x : int) : ((term194 x) = term38) = ((real_of_int x) = term38).
Proof. exact (MK_COMB (@lem2628138 x) (@lem2628139)). Qed.
Lemma lem2628141 (x : int) (h1 : term290 x) : (real_of_int x) = term38.
Proof. exact (EQ_MP (@lem2628140 x) (@lem2628135 x h1)). Qed.
Lemma lem2628142 (x : int) (h1 : term290 x) : term248 x.
Proof. exact (conj (@lem2628141 x h1) (@lem2628128 x h1)). Qed.
Lemma lem2628144 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2628145 (x : int) : term250 x.
Proof. exact (@lem2628144 (real_of_int x) (term154 x)). Qed.
Lemma lem2628146 (x : int) (h1 : term290 x) : term251 x.
Proof. exact (@lem2628145 x (@lem2628142 x h1)). Qed.
Lemma lem2628147 (x : int) : (term252 x) = (term253 x).
Proof. exact (@lem1982763 (real_of_int x) (term94 x) term97). Qed.
Lemma lem2628148 (x : int) : (term95 x) = (term96 x).
Proof. exact (@lem1982715 term97 (real_of_int x)). Qed.
Lemma lem2628150 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2628151 : term31 = term99.
Proof. exact (@lem2628150 term32). Qed.
Lemma lem2628153 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2628154 : term97 = term102.
Proof. exact (@lem2628153 term32). Qed.
Lemma lem2628155 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628156 : term103 = term104.
Proof. exact (MK_COMB (@lem2628155) (@lem2628154)). Qed.
Lemma lem2628157 : term105 = term106.
Proof. exact (MK_COMB (@lem2628156) (@lem2628151)). Qed.
Lemma lem2628158 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2628160 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628161 : term109 = term110.
Proof. exact (@lem2628160 (NUMERAL 0) term32). Qed.
Lemma lem2628162 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628163 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628164 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628163 h1) (fun h1 : term110 = True => @lem2628162)). Qed.
Lemma lem2628165 : term110 = True.
Proof. exact (EQ_MP (@lem2628164) (@lem2628162)). Qed.
Lemma lem2628166 : term109 = True.
Proof. exact (TRANS (@lem2628161) (@lem2628165)). Qed.
Lemma lem2628167 : True = term109.
Proof. exact (SYM (@lem2628166)). Qed.
Lemma lem2628168 : term109.
Proof. exact (EQ_MP (@lem2628167) (@lem0)). Qed.
Lemma lem2628169 : term112.
Proof. exact (@lem2628158 (@lem2628168)). Qed.
Lemma lem2628171 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628172 : term109 = term110.
Proof. exact (@lem2628171 (NUMERAL 0) term32). Qed.
Lemma lem2628173 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628174 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628175 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628174 h1) (fun h1 : term110 = True => @lem2628173)). Qed.
Lemma lem2628176 : term110 = True.
Proof. exact (EQ_MP (@lem2628175) (@lem2628173)). Qed.
Lemma lem2628177 : term109 = True.
Proof. exact (TRANS (@lem2628172) (@lem2628176)). Qed.
Lemma lem2628178 : True = term109.
Proof. exact (SYM (@lem2628177)). Qed.
Lemma lem2628179 : term109.
Proof. exact (EQ_MP (@lem2628178) (@lem0)). Qed.
Lemma lem2628180 : term113.
Proof. exact (@lem2628169 (@lem2628179)). Qed.
Lemma lem2628182 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628183 : term109 = term110.
Proof. exact (@lem2628182 (NUMERAL 0) term32). Qed.
Lemma lem2628184 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628185 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628186 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628185 h1) (fun h1 : term110 = True => @lem2628184)). Qed.
Lemma lem2628187 : term110 = True.
Proof. exact (EQ_MP (@lem2628186) (@lem2628184)). Qed.
Lemma lem2628188 : term109 = True.
Proof. exact (TRANS (@lem2628183) (@lem2628187)). Qed.
Lemma lem2628189 : True = term109.
Proof. exact (SYM (@lem2628188)). Qed.
Lemma lem2628190 : term109.
Proof. exact (EQ_MP (@lem2628189) (@lem0)). Qed.
Lemma lem2628191 : term114.
Proof. exact (@lem2628180 (@lem2628190)). Qed.
Lemma lem2628193 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2628194 : term117 = term118.
Proof. exact (@lem2628193 term32 term32). Qed.
Lemma lem2628195 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628196 : term120 = term32.
Proof. exact (EQ_MP (@lem2628195) (@lem940073)). Qed.
Lemma lem2628197 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628198 : term118 = term31.
Proof. exact (MK_COMB (@lem2628197) (@lem2628196)). Qed.
Lemma lem2628199 : term117 = term31.
Proof. exact (TRANS (@lem2628194) (@lem2628198)). Qed.
Lemma lem2628201 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2628202 : term123 = term124.
Proof. exact (@lem2628201 term32 term32). Qed.
Lemma lem2628203 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628204 : term120 = term32.
Proof. exact (EQ_MP (@lem2628203) (@lem940073)). Qed.
Lemma lem2628205 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628206 : term118 = term31.
Proof. exact (MK_COMB (@lem2628205) (@lem2628204)). Qed.
Lemma lem2628207 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2628208 : term124 = term97.
Proof. exact (MK_COMB (@lem2628207) (@lem2628206)). Qed.
Lemma lem2628209 : term123 = term97.
Proof. exact (TRANS (@lem2628202) (@lem2628208)). Qed.
Lemma lem2628210 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628211 : term125 = term103.
Proof. exact (MK_COMB (@lem2628210) (@lem2628209)). Qed.
Lemma lem2628212 : term126 = term105.
Proof. exact (MK_COMB (@lem2628211) (@lem2628199)). Qed.
Lemma lem2628214 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2628215 : term105 = term38.
Proof. exact (@lem2628214 term32). Qed.
Lemma lem2628216 : term126 = term38.
Proof. exact (TRANS (@lem2628212) (@lem2628215)). Qed.
Lemma lem2628217 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2628218 : term128 = term129.
Proof. exact (MK_COMB (@lem2628217) (@lem2628216)). Qed.
Lemma lem2628219 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2628220 : term130 = term131.
Proof. exact (MK_COMB (@lem2628218) (@lem2628219)). Qed.
Lemma lem2628222 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2628223 : term131 = term38.
Proof. exact (@lem2628222 term32). Qed.
Lemma lem2628224 : term130 = term38.
Proof. exact (TRANS (@lem2628220) (@lem2628223)). Qed.
Lemma lem2628226 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2628227 : term117 = term118.
Proof. exact (@lem2628226 term32 term32). Qed.
Lemma lem2628228 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628229 : term120 = term32.
Proof. exact (EQ_MP (@lem2628228) (@lem940073)). Qed.
Lemma lem2628230 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628231 : term118 = term31.
Proof. exact (MK_COMB (@lem2628230) (@lem2628229)). Qed.
Lemma lem2628232 : term117 = term31.
Proof. exact (TRANS (@lem2628227) (@lem2628231)). Qed.
Lemma lem2628233 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2628234 : term133 = term131.
Proof. exact (MK_COMB (@lem2628233) (@lem2628232)). Qed.
Lemma lem2628236 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2628237 : term131 = term38.
Proof. exact (@lem2628236 term32). Qed.
Lemma lem2628238 : term133 = term38.
Proof. exact (TRANS (@lem2628234) (@lem2628237)). Qed.
Lemma lem2628239 : term38 = term133.
Proof. exact (SYM (@lem2628238)). Qed.
Lemma lem2628240 : term130 = term133.
Proof. exact (TRANS (@lem2628224) (@lem2628239)). Qed.
Lemma lem2628241 : term106 = term134.
Proof. exact (@lem2628191 (@lem2628240)). Qed.
Lemma lem2628242 : term105 = term134.
Proof. exact (TRANS (@lem2628157) (@lem2628241)). Qed.
Lemma lem2628244 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2628245 : term134 = term38.
Proof. exact (@lem2628244 term38). Qed.
Lemma lem2628246 : term105 = term38.
Proof. exact (TRANS (@lem2628242) (@lem2628245)). Qed.
Lemma lem2628247 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2628248 : term136 = term129.
Proof. exact (MK_COMB (@lem2628247) (@lem2628246)). Qed.
Lemma lem2628249 (x : int) : (real_of_int x) = (real_of_int x).
Proof. exact (eq_refl (real_of_int x)). Qed.
Lemma lem2628250 (x : int) : (term96 x) = (term137 x).
Proof. exact (MK_COMB (@lem2628248) (@lem2628249 x)). Qed.
Lemma lem2628251 (x : int) : (term95 x) = (term137 x).
Proof. exact (TRANS (@lem2628148 x) (@lem2628250 x)). Qed.
Lemma lem2628252 (x : int) : (term137 x) = term38.
Proof. exact (@lem1982719 (real_of_int x)). Qed.
Lemma lem2628253 (x : int) : (term95 x) = term38.
Proof. exact (TRANS (@lem2628251 x) (@lem2628252 x)). Qed.
Lemma lem2628254 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628255 (x : int) : (term138 x) = term48.
Proof. exact (MK_COMB (@lem2628254) (@lem2628253 x)). Qed.
Lemma lem2628256 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2628257 (x : int) : (term253 x) = term254.
Proof. exact (MK_COMB (@lem2628255 x) (@lem2628256)). Qed.
Lemma lem2628258 (x : int) : (term252 x) = term254.
Proof. exact (TRANS (@lem2628147 x) (@lem2628257 x)). Qed.
Lemma lem2628259 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2628260 (x : int) : (term252 x) = term97.
Proof. exact (TRANS (@lem2628258 x) (@lem2628259)). Qed.
Lemma lem2628261 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2628262 (x : int) : (term255 x) = term256.
Proof. exact (MK_COMB (@lem2628261) (@lem2628260 x)). Qed.
Lemma lem2628263 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2628264 (x : int) : (term251 x) = term257.
Proof. exact (MK_COMB (@lem2628262 x) (@lem2628263)). Qed.
Lemma lem2628265 (x : int) (h1 : term290 x) : term257.
Proof. exact (EQ_MP (@lem2628264 x) (@lem2628146 x h1)). Qed.
Lemma lem2628267 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2628268 : term257 = term258.
Proof. exact (@lem2628267 term38 term97). Qed.
Lemma lem2628270 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2628271 : term97 = term102.
Proof. exact (@lem2628270 term32). Qed.
Lemma lem2628273 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2628274 : term38 = term134.
Proof. exact (@lem2628273 (NUMERAL 0)). Qed.
Lemma lem2628275 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628276 : term259 = term260.
Proof. exact (MK_COMB (@lem2628275) (@lem2628274)). Qed.
Lemma lem2628277 : term258 = term261.
Proof. exact (MK_COMB (@lem2628276) (@lem2628271)). Qed.
Lemma lem2628278 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2628280 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628281 : term109 = term110.
Proof. exact (@lem2628280 (NUMERAL 0) term32). Qed.
Lemma lem2628282 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628283 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628284 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628283 h1) (fun h1 : term110 = True => @lem2628282)). Qed.
Lemma lem2628285 : term110 = True.
Proof. exact (EQ_MP (@lem2628284) (@lem2628282)). Qed.
Lemma lem2628286 : term109 = True.
Proof. exact (TRANS (@lem2628281) (@lem2628285)). Qed.
Lemma lem2628287 : True = term109.
Proof. exact (SYM (@lem2628286)). Qed.
Lemma lem2628288 : term109.
Proof. exact (EQ_MP (@lem2628287) (@lem0)). Qed.
Lemma lem2628289 : term263.
Proof. exact (@lem2628278 (@lem2628288)). Qed.
Lemma lem2628291 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2628292 : term109 = term110.
Proof. exact (@lem2628291 (NUMERAL 0) term32). Qed.
Lemma lem2628293 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628294 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2628295 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628294 h1) (fun h1 : term110 = True => @lem2628293)). Qed.
Lemma lem2628296 : term110 = True.
Proof. exact (EQ_MP (@lem2628295) (@lem2628293)). Qed.
Lemma lem2628297 : term109 = True.
Proof. exact (TRANS (@lem2628292) (@lem2628296)). Qed.
Lemma lem2628298 : True = term109.
Proof. exact (SYM (@lem2628297)). Qed.
Lemma lem2628299 : term109.
Proof. exact (EQ_MP (@lem2628298) (@lem0)). Qed.
Lemma lem2628300 : term261 = term264.
Proof. exact (@lem2628289 (@lem2628299)). Qed.
Lemma lem2628302 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2628303 : term123 = term124.
Proof. exact (@lem2628302 term32 term32). Qed.
Lemma lem2628304 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2628305 : term120 = term32.
Proof. exact (EQ_MP (@lem2628304) (@lem940073)). Qed.
Lemma lem2628306 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2628307 : term118 = term31.
Proof. exact (MK_COMB (@lem2628306) (@lem2628305)). Qed.
Lemma lem2628308 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2628309 : term124 = term97.
Proof. exact (MK_COMB (@lem2628308) (@lem2628307)). Qed.
Lemma lem2628310 : term123 = term97.
Proof. exact (TRANS (@lem2628303) (@lem2628309)). Qed.
Lemma lem2628312 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2628313 : term131 = term38.
Proof. exact (@lem2628312 term32). Qed.
Lemma lem2628314 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628315 : term265 = term259.
Proof. exact (MK_COMB (@lem2628314) (@lem2628313)). Qed.
Lemma lem2628316 : term264 = term258.
Proof. exact (MK_COMB (@lem2628315) (@lem2628310)). Qed.
Lemma lem2628318 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2628319 : term258 = term268.
Proof. exact (@lem2628318 (NUMERAL 0) term32). Qed.
Lemma lem2628320 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2628321 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2628322 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2628321 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2628320)). Qed.
Lemma lem2628323 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2628322) (@lem2628320)). Qed.
Lemma lem2628324 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2628325 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628326 : term269 = (and True).
Proof. exact (MK_COMB (@lem2628325) (@lem2628324)). Qed.
Lemma lem2628327 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2628326) (@lem2628323)). Qed.
Lemma lem2628329 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2628330 : term268 = False.
Proof. exact (TRANS (@lem2628327) (@lem2628329)). Qed.
Lemma lem2628331 : term258 = False.
Proof. exact (TRANS (@lem2628319) (@lem2628330)). Qed.
Lemma lem2628332 : term264 = False.
Proof. exact (TRANS (@lem2628316) (@lem2628331)). Qed.
Lemma lem2628333 : term261 = False.
Proof. exact (TRANS (@lem2628300) (@lem2628332)). Qed.
Lemma lem2628334 : term258 = False.
Proof. exact (TRANS (@lem2628277) (@lem2628333)). Qed.
Lemma lem2628335 : term257 = False.
Proof. exact (TRANS (@lem2628268) (@lem2628334)). Qed.
Lemma lem2628336 (x : int) (h1 : term290 x) : False.
Proof. exact (EQ_MP (@lem2628335) (@lem2628265 x h1)). Qed.
Lemma lem2628337 (x : int) (h1 : term224 x) : False.
Proof. exact (or_elim (@lem2627766 x h1) (fun h0 : term286 x => @lem2628051 x h0) (fun h0 : term290 x => @lem2628336 x h0)). Qed.
Lemma lem2628338 (x : int) (h1 : term227 x) : False.
Proof. exact (or_elim (@lem2627151 x h1) (fun h0 : term225 x => @lem2627765 x h0) (fun h0 : term224 x => @lem2628337 x h0)). Qed.
Lemma lem2628340 (x : int) (h1 : term227 x) : term227 x.
Proof. exact (h1). Qed.
Lemma lem2628341 (x : int) (h1 : term227 x) : (term227 x) = False.
Proof. exact (prop_ext (fun h2 : term227 x => @lem2628338 x h1) (fun h2 : False => @lem2628340 x h1)). Qed.
Lemma lem2628342 (x : int) (h1 : term227 x) : False.
Proof. exact (EQ_MP (@lem2628341 x h1) (@lem2628340 x h1)). Qed.
Lemma lem2628343 (m : int) (x : int) (h1 : term86 m x) : term86 m x.
Proof. exact (h1). Qed.
Lemma lem2628344 (m : int) (x : int) (h1 : term86 m x) : term227 x.
Proof. exact (EQ_MP (@lem2627129 m x) (@lem2628343 m x h1)). Qed.
Lemma lem2628345 (m : int) (x : int) (h1 : term86 m x) : (term227 x) = False.
Proof. exact (prop_ext (fun h2 : term227 x => @lem2628342 x h2) (fun h2 : False => @lem2628344 m x h1)). Qed.
Lemma lem2628346 (m : int) (x : int) (h1 : term86 m x) : False.
Proof. exact (EQ_MP (@lem2628345 m x h1) (@lem2628344 m x h1)). Qed.
Lemma lem2628347 (m : int) (x : int) : term293 m x.
Proof. exact (fun h0 : term86 m x => @lem2628346 m x h0). Qed.
Lemma lem2628348 (m : int) (x : int) : term294 m x.
Proof. exact (@lem1386578 (term295 m x)). Qed.
Lemma lem2628351 (m : int) (x : int) : term295 m x.
Proof. exact (@lem2628348 m x (@lem2628347 m x)). Qed.
Lemma lem2628352 (m : int) (x : int) : (term84 m x) = (term10 m x).
Proof. exact (SYM (@lem2626253 m x)). Qed.
Lemma lem2628353 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem2628354 (m : int) (x : int) : (term295 m x) = (term9 m x).
Proof. exact (MK_COMB (@lem2628353) (@lem2628352 m x)). Qed.
Lemma lem2628355 (m : int) (x : int) : term9 m x.
Proof. exact (EQ_MP (@lem2628354 m x) (@lem2628351 m x)). Qed.
Lemma lem2628357 (m : int) : term296 m.
Proof. exact (@lem2400155 m). Qed.
Lemma lem2628358 (m : int) : (term296 m) = (term297 m).
Proof. exact (eq_refl (term296 m)). Qed.
Lemma lem2628359 (m : int) : term297 m.
Proof. exact (EQ_MP (@lem2628358 m) (@lem2628357 m)). Qed.
Lemma lem2628360 (m : int) (n : int) : term298 m n.
Proof. exact (@lem2628359 m n). Qed.
Lemma lem2628361 (m : int) (n : int) : (term298 m n) = ((rem m n) = (term299 m n)).
Proof. exact (eq_refl (term298 m n)). Qed.
Lemma lem2628376 (m : int) (n : int) : (rem m n) = (term299 m n).
Proof. exact (EQ_MP (@lem2628361 m n) (@lem2628360 m n)). Qed.
Lemma lem2628377 : (@eq int) = (@eq int).
Proof. exact (eq_refl (@eq int)). Qed.
Lemma lem2628378 (m : int) (n : int) : (term300 m n) = (term301 m n).
Proof. exact (MK_COMB (@lem2628377) (@lem2628376 m n)). Qed.
Lemma lem2628379 (m : int) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem2628380 (n : int) (m : int) : ((rem m n) = m) = ((term299 m n) = m).
Proof. exact (MK_COMB (@lem2628378 m n) (@lem2628379 m)). Qed.
Lemma lem2628382 (m : int) (x : int) : ((int_sub m x) = m) = (x = term3).
Proof. exact (EQ_MP (@lem2626082 m x) (@lem2628355 m x)). Qed.
Lemma lem2628383 (m : int) (n : int) : ((term299 m n) = m) = ((term302 m n) = term3).
Proof. exact (@lem2628382 m (term302 m n)). Qed.
Lemma lem2628386 (m : int) (n : int) : ((rem m n) = m) = ((term302 m n) = term3).
Proof. exact (TRANS (@lem2628380 n m) (@lem2628383 m n)). Qed.
Lemma lem2628387 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2628388 (m : int) (n : int) : (term303 n m) = (term304 m n).
Proof. exact (MK_COMB (@lem2628387) (@lem2628386 m n)). Qed.
Lemma lem2628395 (m : int) (n : int) : (term8 m n) = (term8 m n).
Proof. exact (eq_refl (term8 m n)). Qed.
Lemma lem2628396 (m : int) (n : int) : (((rem m n) = m) = (term8 m n)) = (((term302 m n) = term3) = (term8 m n)).
Proof. exact (MK_COMB (@lem2628388 m n) (@lem2628395 m n)). Qed.
Lemma lem2628399 (m : int) : (term305 m) = (term306 m).
Proof. exact (fun_ext (fun n : int => @lem2628396 m n)). Qed.
Lemma lem2628400 : (@all int) = (@all int).
Proof. exact (eq_refl (@all int)). Qed.
Lemma lem2628401 (m : int) : (term307 m) = (term308 m).
Proof. exact (MK_COMB (@lem2628400) (@lem2628399 m)). Qed.
Lemma lem2628406 : term309 = term310.
Proof. exact (fun_ext (fun m : int => @lem2628401 m)). Qed.
Lemma lem2628407 : (@all int) = (@all int).
Proof. exact (eq_refl (@all int)). Qed.
Lemma lem2628408 : term311 = term312.
Proof. exact (MK_COMB (@lem2628407) (@lem2628406)). Qed.
Lemma lem2628413 : term312 = term311.
Proof. exact (SYM (@lem2628408)). Qed.
Lemma lem2628425 (x : int) (y : int) : ((int_mul x y) = term3) = (term4 x y).
Proof. exact (EQ_MP (@lem2626074 x y) (@lem2626073 x y)). Qed.
Lemma lem2628426 (m : int) (n : int) : ((term302 m n) = term3) = (term313 m n).
Proof. exact (@lem2628425 (div m n) n). Qed.
Lemma lem2628430 (m : int) (n : int) : ((div m n) = term3) = (term8 m n).
Proof. exact (EQ_MP (@lem2626080 m n) (@lem2626079 m n)). Qed.
Lemma lem2628437 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628438 (m : int) (n : int) : (term314 m n) = (term315 m n).
Proof. exact (MK_COMB (@lem2628437) (@lem2628430 m n)). Qed.
Lemma lem2628441 (n : int) : (n = term3) = (n = term3).
Proof. exact (eq_refl (n = term3)). Qed.
Lemma lem2628442 (m : int) (n : int) : (term313 m n) = (term316 m n).
Proof. exact (MK_COMB (@lem2628438 m n) (@lem2628441 n)). Qed.
Lemma lem2628445 (m : int) (n : int) : ((term302 m n) = term3) = (term316 m n).
Proof. exact (TRANS (@lem2628426 m n) (@lem2628442 m n)). Qed.
Lemma lem2628446 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2628447 (m : int) (n : int) : (term304 m n) = (term317 m n).
Proof. exact (MK_COMB (@lem2628446) (@lem2628445 m n)). Qed.
Lemma lem2628454 (m : int) (n : int) : (term8 m n) = (term8 m n).
Proof. exact (eq_refl (term8 m n)). Qed.
Lemma lem2628455 (m : int) (n : int) : (((term302 m n) = term3) = (term8 m n)) = ((term316 m n) = (term8 m n)).
Proof. exact (MK_COMB (@lem2628447 m n) (@lem2628454 m n)). Qed.
Lemma lem2628458 (m : int) : (term306 m) = (term318 m).
Proof. exact (fun_ext (fun n : int => @lem2628455 m n)). Qed.
Lemma lem2628459 : (@all int) = (@all int).
Proof. exact (eq_refl (@all int)). Qed.
Lemma lem2628460 (m : int) : (term308 m) = (term319 m).
Proof. exact (MK_COMB (@lem2628459) (@lem2628458 m)). Qed.
Lemma lem2628465 : term310 = term320.
Proof. exact (fun_ext (fun m : int => @lem2628460 m)). Qed.
Lemma lem2628466 : (@all int) = (@all int).
Proof. exact (eq_refl (@all int)). Qed.
Lemma lem2628467 : term312 = term321.
Proof. exact (MK_COMB (@lem2628466) (@lem2628465)). Qed.
Lemma lem2628472 : term321 = term312.
Proof. exact (SYM (@lem2628467)). Qed.
Lemma lem2628473 : term322 = term321.
Proof. exact (@lem2318604 term321). Qed.
Lemma lem2628507 (m : int) (n : int) : (term323 m n) = (term324 m n).
Proof. exact (@lem17045 (term325 m) (term326 m n)). Qed.
Lemma lem2628512 (n : int) : (term327 n) = (term327 n).
Proof. exact (eq_refl (term327 n)). Qed.
Lemma lem2628513 (m : int) (n : int) : (term328 m n) = (term329 m n).
Proof. exact (MK_COMB (@lem2628512 n) (@lem2628507 m n)). Qed.
Lemma lem2628514 (m : int) (n : int) : (term330 m n) = (term328 m n).
Proof. exact (@lem17160 (n = term3) (term331 m n)). Qed.
Lemma lem2628515 (m : int) (n : int) : (term330 m n) = (term329 m n).
Proof. exact (TRANS (@lem2628514 m n) (@lem2628513 m n)). Qed.
Lemma lem2628519 (n : int) : (term18 n) = (term18 n).
Proof. exact (eq_refl (term18 n)). Qed.
Lemma lem2628521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628522 (m : int) (n : int) : (term332 m n) = (term333 m n).
Proof. exact (MK_COMB (@lem2628521) (@lem2628515 m n)). Qed.
Lemma lem2628523 (m : int) (n : int) : (term334 m n) = (term335 m n).
Proof. exact (MK_COMB (@lem2628522 m n) (@lem2628519 n)). Qed.
Lemma lem2628524 (m : int) (n : int) : (term336 m n) = (term334 m n).
Proof. exact (@lem17160 (term8 m n) (n = term3)). Qed.
Lemma lem2628525 (m : int) (n : int) : (term336 m n) = (term335 m n).
Proof. exact (TRANS (@lem2628524 m n) (@lem2628523 m n)). Qed.
Lemma lem2628539 (m : int) (n : int) : (term323 m n) = (term324 m n).
Proof. exact (@lem17045 (term325 m) (term326 m n)). Qed.
Lemma lem2628544 (n : int) : (term327 n) = (term327 n).
Proof. exact (eq_refl (term327 n)). Qed.
Lemma lem2628545 (m : int) (n : int) : (term328 m n) = (term329 m n).
Proof. exact (MK_COMB (@lem2628544 n) (@lem2628539 m n)). Qed.
Lemma lem2628546 (m : int) (n : int) : (term330 m n) = (term328 m n).
Proof. exact (@lem17160 (n = term3) (term331 m n)). Qed.
Lemma lem2628547 (m : int) (n : int) : (term330 m n) = (term329 m n).
Proof. exact (TRANS (@lem2628546 m n) (@lem2628545 m n)). Qed.
Lemma lem2628550 (m : int) (n : int) : (term8 m n) = (term8 m n).
Proof. exact (eq_refl (term8 m n)). Qed.
Lemma lem2628551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628552 (m : int) (n : int) : (term337 m n) = (term338 m n).
Proof. exact (MK_COMB (@lem2628551) (@lem2628525 m n)). Qed.
Lemma lem2628553 (m : int) (n : int) : (term339 m n) = (term340 m n).
Proof. exact (MK_COMB (@lem2628552 m n) (@lem2628550 m n)). Qed.
Lemma lem2628555 (m : int) (n : int) : (term341 m n) = (term341 m n).
Proof. exact (eq_refl (term341 m n)). Qed.
Lemma lem2628556 (m : int) (n : int) : (term342 m n) = (term343 m n).
Proof. exact (MK_COMB (@lem2628555 m n) (@lem2628547 m n)). Qed.
Lemma lem2628557 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628558 (m : int) (n : int) : (term344 m n) = (term345 m n).
Proof. exact (MK_COMB (@lem2628557) (@lem2628556 m n)). Qed.
Lemma lem2628559 (m : int) (n : int) : (term346 m n) = (term347 m n).
Proof. exact (MK_COMB (@lem2628558 m n) (@lem2628553 m n)). Qed.
Lemma lem2628560 (m : int) (n : int) : (term348 m n) = (term346 m n).
Proof. exact (@lem17646 (term316 m n) (term8 m n)). Qed.
Lemma lem2628561 (m : int) (n : int) : (term348 m n) = (term347 m n).
Proof. exact (TRANS (@lem2628560 m n) (@lem2628559 m n)). Qed.
Lemma lem2628562 (P : int -> Prop) : (term349 P) = (term350 P).
Proof. exact (@lem18392 int P). Qed.
Lemma lem2628563 (m : int) : (term351 m) = (term352 m).
Proof. exact (@lem2628562 (term318 m)). Qed.
Lemma lem2628564 (m : int) (n : int) : (term353 m n) = ((term316 m n) = (term8 m n)).
Proof. exact (eq_refl (term353 m n)). Qed.
Lemma lem2628565 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem2628566 (m : int) (n : int) : (term354 m n) = (term348 m n).
Proof. exact (MK_COMB (@lem2628565) (@lem2628564 m n)). Qed.
Lemma lem2628567 (m : int) (n : int) : (term354 m n) = (term347 m n).
Proof. exact (TRANS (@lem2628566 m n) (@lem2628561 m n)). Qed.
Lemma lem2628568 (m : int) : (term355 m) = (term356 m).
Proof. exact (fun_ext (fun n : int => @lem2628567 m n)). Qed.
Lemma lem2628569 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2628570 (m : int) : (term352 m) = (term357 m).
Proof. exact (MK_COMB (@lem2628569) (@lem2628568 m)). Qed.
Lemma lem2628571 (m : int) : (term351 m) = (term357 m).
Proof. exact (TRANS (@lem2628563 m) (@lem2628570 m)). Qed.
Lemma lem2628572 (P : int -> Prop) : (term349 P) = (term350 P).
Proof. exact (@lem18392 int P). Qed.
Lemma lem2628573 : term358 = term359.
Proof. exact (@lem2628572 term320). Qed.
Lemma lem2628574 (m : int) : (term360 m) = (term319 m).
Proof. exact (eq_refl (term360 m)). Qed.
Lemma lem2628575 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem2628576 (m : int) : (term361 m) = (term351 m).
Proof. exact (MK_COMB (@lem2628575) (@lem2628574 m)). Qed.
Lemma lem2628577 (m : int) : (term361 m) = (term357 m).
Proof. exact (TRANS (@lem2628576 m) (@lem2628571 m)). Qed.
Lemma lem2628578 : term362 = term363.
Proof. exact (fun_ext (fun m : int => @lem2628577 m)). Qed.
Lemma lem2628579 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2628580 : term359 = term364.
Proof. exact (MK_COMB (@lem2628579) (@lem2628578)). Qed.
Lemma lem2628582 : term358 = term364.
Proof. exact (TRANS (@lem2628573) (@lem2628580)). Qed.
Lemma lem2628649 (m : int) (n : int) : (term347 m n) = (term347 m n).
Proof. exact (eq_refl (term347 m n)). Qed.
Lemma lem2628650 (m : int) : (term356 m) = (term356 m).
Proof. exact (fun_ext (fun n : int => @lem2628649 m n)). Qed.
Lemma lem2628651 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2628652 (m : int) : (term357 m) = (term357 m).
Proof. exact (MK_COMB (@lem2628651) (@lem2628650 m)). Qed.
Lemma lem2628653 : term363 = term363.
Proof. exact (fun_ext (fun m : int => @lem2628652 m)). Qed.
Lemma lem2628654 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2628655 : term364 = term364.
Proof. exact (MK_COMB (@lem2628654) (@lem2628653)). Qed.
Lemma lem2628656 : term358 = term364.
Proof. exact (TRANS (@lem2628582) (@lem2628655)). Qed.
Lemma lem2628659 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem2628660 (n : int) : (n = term3) = ((real_of_int n) = term37).
Proof. exact (@lem2628659 n term3). Qed.
Lemma lem2628664 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628665 : term37 = term38.
Proof. exact (@lem2628664 (NUMERAL 0)). Qed.
Lemma lem2628666 (n : int) : (term77 n) = (term77 n).
Proof. exact (eq_refl (term77 n)). Qed.
Lemma lem2628667 (n : int) : ((real_of_int n) = term37) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2628666 n) (@lem2628665)). Qed.
Lemma lem2628669 (n : int) : (n = term3) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2628660 n) (@lem2628667 n)). Qed.
Lemma lem2628672 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628673 (m : int) : (term325 m) = (term365 m).
Proof. exact (@lem2628672 term3 m). Qed.
Lemma lem2628675 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628676 : term37 = term38.
Proof. exact (@lem2628675 (NUMERAL 0)). Qed.
Lemma lem2628677 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628678 : term366 = term259.
Proof. exact (MK_COMB (@lem2628677) (@lem2628676)). Qed.
Lemma lem2628679 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2628680 (m : int) : (term365 m) = (term367 m).
Proof. exact (MK_COMB (@lem2628678) (@lem2628679 m)). Qed.
Lemma lem2628682 (m : int) : (term325 m) = (term367 m).
Proof. exact (TRANS (@lem2628673 m) (@lem2628680 m)). Qed.
Lemma lem2628684 (x : int) (y : int) : (int_lt x y) = (term368 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem2628685 (m : int) (n : int) : (term326 m n) = (term369 m n).
Proof. exact (@lem2628684 m (int_abs n)). Qed.
Lemma lem2628687 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628688 (m : int) (n : int) : (term369 m n) = (term370 m n).
Proof. exact (@lem2628687 (term23 m) (int_abs n)). Qed.
Lemma lem2628690 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628691 (m : int) : (term26 m) = (term27 m).
Proof. exact (@lem2628690 m term28). Qed.
Lemma lem2628693 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628694 : term30 = term31.
Proof. exact (@lem2628693 term32). Qed.
Lemma lem2628695 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2628696 (m : int) : (term27 m) = (term34 m).
Proof. exact (MK_COMB (@lem2628695 m) (@lem2628694)). Qed.
Lemma lem2628697 (m : int) : (term26 m) = (term34 m).
Proof. exact (TRANS (@lem2628691 m) (@lem2628696 m)). Qed.
Lemma lem2628698 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628699 (m : int) : (term35 m) = (term36 m).
Proof. exact (MK_COMB (@lem2628698) (@lem2628697 m)). Qed.
Lemma lem2628701 (x : int) : (term371 x) = (term372 x).
Proof. exact (EQ_MP (@lem2318515 x) (@lem2318514 x)). Qed.
Lemma lem2628702 (n : int) : (term371 n) = (term372 n).
Proof. exact (@lem2628701 n). Qed.
Lemma lem2628703 (m : int) (n : int) : (term370 m n) = (term373 m n).
Proof. exact (MK_COMB (@lem2628699 m) (@lem2628702 n)). Qed.
Lemma lem2628704 (m : int) (n : int) : (term369 m n) = (term373 m n).
Proof. exact (TRANS (@lem2628688 m n) (@lem2628703 m n)). Qed.
Lemma lem2628705 (m : int) (n : int) : (term326 m n) = (term373 m n).
Proof. exact (TRANS (@lem2628685 m n) (@lem2628704 m n)). Qed.
Lemma lem2628706 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628707 (m : int) : (term374 m) = (term375 m).
Proof. exact (MK_COMB (@lem2628706) (@lem2628682 m)). Qed.
Lemma lem2628708 (m : int) (n : int) : (term331 m n) = (term376 m n).
Proof. exact (MK_COMB (@lem2628707 m) (@lem2628705 m n)). Qed.
Lemma lem2628709 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628710 (n : int) : (term377 n) = (term378 n).
Proof. exact (MK_COMB (@lem2628709) (@lem2628669 n)). Qed.
Lemma lem2628711 (m : int) (n : int) : (term8 m n) = (term379 m n).
Proof. exact (MK_COMB (@lem2628710 n) (@lem2628708 m n)). Qed.
Lemma lem2628714 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem2628715 (n : int) : (n = term3) = ((real_of_int n) = term37).
Proof. exact (@lem2628714 n term3). Qed.
Lemma lem2628719 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628720 : term37 = term38.
Proof. exact (@lem2628719 (NUMERAL 0)). Qed.
Lemma lem2628721 (n : int) : (term77 n) = (term77 n).
Proof. exact (eq_refl (term77 n)). Qed.
Lemma lem2628722 (n : int) : ((real_of_int n) = term37) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2628721 n) (@lem2628720)). Qed.
Lemma lem2628724 (n : int) : (n = term3) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2628715 n) (@lem2628722 n)). Qed.
Lemma lem2628725 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628726 (m : int) (n : int) : (term315 m n) = (term380 m n).
Proof. exact (MK_COMB (@lem2628725) (@lem2628711 m n)). Qed.
Lemma lem2628727 (m : int) (n : int) : (term316 m n) = (term381 m n).
Proof. exact (MK_COMB (@lem2628726 m n) (@lem2628724 n)). Qed.
Lemma lem2628729 (y : int) (x : int) : (term16 x y) = (term17 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem2628730 (n : int) : (term18 n) = (term19 n).
Proof. exact (@lem2628729 term3 n). Qed.
Lemma lem2628732 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628733 (n : int) : (term21 n) = (term22 n).
Proof. exact (@lem2628732 (term23 n) term3). Qed.
Lemma lem2628735 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628736 (n : int) : (term26 n) = (term27 n).
Proof. exact (@lem2628735 n term28). Qed.
Lemma lem2628738 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628739 : term30 = term31.
Proof. exact (@lem2628738 term32). Qed.
Lemma lem2628740 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2628741 (n : int) : (term27 n) = (term34 n).
Proof. exact (MK_COMB (@lem2628740 n) (@lem2628739)). Qed.
Lemma lem2628742 (n : int) : (term26 n) = (term34 n).
Proof. exact (TRANS (@lem2628736 n) (@lem2628741 n)). Qed.
Lemma lem2628743 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628744 (n : int) : (term35 n) = (term36 n).
Proof. exact (MK_COMB (@lem2628743) (@lem2628742 n)). Qed.
Lemma lem2628746 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628747 : term37 = term38.
Proof. exact (@lem2628746 (NUMERAL 0)). Qed.
Lemma lem2628748 (n : int) : (term22 n) = (term39 n).
Proof. exact (MK_COMB (@lem2628744 n) (@lem2628747)). Qed.
Lemma lem2628749 (n : int) : (term21 n) = (term39 n).
Proof. exact (TRANS (@lem2628733 n) (@lem2628748 n)). Qed.
Lemma lem2628750 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628751 (n : int) : (term40 n) = (term41 n).
Proof. exact (MK_COMB (@lem2628750) (@lem2628749 n)). Qed.
Lemma lem2628753 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628754 (n : int) : (term42 n) = (term43 n).
Proof. exact (@lem2628753 term44 n). Qed.
Lemma lem2628756 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628757 : term45 = term46.
Proof. exact (@lem2628756 term3 term28). Qed.
Lemma lem2628759 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628760 : term37 = term38.
Proof. exact (@lem2628759 (NUMERAL 0)). Qed.
Lemma lem2628761 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628762 : term47 = term48.
Proof. exact (MK_COMB (@lem2628761) (@lem2628760)). Qed.
Lemma lem2628764 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628765 : term30 = term31.
Proof. exact (@lem2628764 term32). Qed.
Lemma lem2628766 : term46 = term49.
Proof. exact (MK_COMB (@lem2628762) (@lem2628765)). Qed.
Lemma lem2628767 : term45 = term49.
Proof. exact (TRANS (@lem2628757) (@lem2628766)). Qed.
Lemma lem2628768 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628769 : term50 = term51.
Proof. exact (MK_COMB (@lem2628768) (@lem2628767)). Qed.
Lemma lem2628770 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2628771 (n : int) : (term43 n) = (term52 n).
Proof. exact (MK_COMB (@lem2628769) (@lem2628770 n)). Qed.
Lemma lem2628772 (n : int) : (term42 n) = (term52 n).
Proof. exact (TRANS (@lem2628754 n) (@lem2628771 n)). Qed.
Lemma lem2628773 (n : int) : (term19 n) = (term53 n).
Proof. exact (MK_COMB (@lem2628751 n) (@lem2628772 n)). Qed.
Lemma lem2628774 (n : int) : (term18 n) = (term53 n).
Proof. exact (TRANS (@lem2628730 n) (@lem2628773 n)). Qed.
Lemma lem2628776 (y : int) (x : int) : (term382 x y) = (term368 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem2628777 (m : int) : (term383 m) = (term21 m).
Proof. exact (@lem2628776 m term3). Qed.
Lemma lem2628779 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628780 (m : int) : (term21 m) = (term22 m).
Proof. exact (@lem2628779 (term23 m) term3). Qed.
Lemma lem2628782 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628783 (m : int) : (term26 m) = (term27 m).
Proof. exact (@lem2628782 m term28). Qed.
Lemma lem2628785 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628786 : term30 = term31.
Proof. exact (@lem2628785 term32). Qed.
Lemma lem2628787 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2628788 (m : int) : (term27 m) = (term34 m).
Proof. exact (MK_COMB (@lem2628787 m) (@lem2628786)). Qed.
Lemma lem2628789 (m : int) : (term26 m) = (term34 m).
Proof. exact (TRANS (@lem2628783 m) (@lem2628788 m)). Qed.
Lemma lem2628790 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628791 (m : int) : (term35 m) = (term36 m).
Proof. exact (MK_COMB (@lem2628790) (@lem2628789 m)). Qed.
Lemma lem2628793 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628794 : term37 = term38.
Proof. exact (@lem2628793 (NUMERAL 0)). Qed.
Lemma lem2628795 (m : int) : (term22 m) = (term39 m).
Proof. exact (MK_COMB (@lem2628791 m) (@lem2628794)). Qed.
Lemma lem2628796 (m : int) : (term21 m) = (term39 m).
Proof. exact (TRANS (@lem2628780 m) (@lem2628795 m)). Qed.
Lemma lem2628797 (m : int) : (term383 m) = (term39 m).
Proof. exact (TRANS (@lem2628777 m) (@lem2628796 m)). Qed.
Lemma lem2628799 (y : int) (x : int) : (term384 x y) = (int_le y x).
Proof. exact (proj1 (@lem2318496 x y)). Qed.
Lemma lem2628800 (n : int) (m : int) : (term385 m n) = (term386 n m).
Proof. exact (@lem2628799 (int_abs n) m). Qed.
Lemma lem2628802 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628803 (n : int) (m : int) : (term386 n m) = (term387 n m).
Proof. exact (@lem2628802 (int_abs n) m). Qed.
Lemma lem2628805 (x : int) : (term371 x) = (term372 x).
Proof. exact (EQ_MP (@lem2318515 x) (@lem2318514 x)). Qed.
Lemma lem2628806 (n : int) : (term371 n) = (term372 n).
Proof. exact (@lem2628805 n). Qed.
Lemma lem2628807 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628808 (n : int) : (term388 n) = (term389 n).
Proof. exact (MK_COMB (@lem2628807) (@lem2628806 n)). Qed.
Lemma lem2628809 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2628810 (n : int) (m : int) : (term387 n m) = (term390 n m).
Proof. exact (MK_COMB (@lem2628808 n) (@lem2628809 m)). Qed.
Lemma lem2628811 (n : int) (m : int) : (term386 n m) = (term390 n m).
Proof. exact (TRANS (@lem2628803 n m) (@lem2628810 n m)). Qed.
Lemma lem2628812 (n : int) (m : int) : (term385 m n) = (term390 n m).
Proof. exact (TRANS (@lem2628800 n m) (@lem2628811 n m)). Qed.
Lemma lem2628813 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628814 (m : int) : (term391 m) = (term41 m).
Proof. exact (MK_COMB (@lem2628813) (@lem2628797 m)). Qed.
Lemma lem2628815 (n : int) (m : int) : (term324 m n) = (term392 n m).
Proof. exact (MK_COMB (@lem2628814 m) (@lem2628812 n m)). Qed.
Lemma lem2628816 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628817 (n : int) : (term327 n) = (term393 n).
Proof. exact (MK_COMB (@lem2628816) (@lem2628774 n)). Qed.
Lemma lem2628818 (n : int) (m : int) : (term329 m n) = (term394 n m).
Proof. exact (MK_COMB (@lem2628817 n) (@lem2628815 n m)). Qed.
Lemma lem2628819 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628820 (m : int) (n : int) : (term341 m n) = (term395 m n).
Proof. exact (MK_COMB (@lem2628819) (@lem2628727 m n)). Qed.
Lemma lem2628821 (n : int) (m : int) : (term343 m n) = (term396 n m).
Proof. exact (MK_COMB (@lem2628820 m n) (@lem2628818 n m)). Qed.
Lemma lem2628823 (y : int) (x : int) : (term16 x y) = (term17 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem2628824 (n : int) : (term18 n) = (term19 n).
Proof. exact (@lem2628823 term3 n). Qed.
Lemma lem2628826 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628827 (n : int) : (term21 n) = (term22 n).
Proof. exact (@lem2628826 (term23 n) term3). Qed.
Lemma lem2628829 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628830 (n : int) : (term26 n) = (term27 n).
Proof. exact (@lem2628829 n term28). Qed.
Lemma lem2628832 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628833 : term30 = term31.
Proof. exact (@lem2628832 term32). Qed.
Lemma lem2628834 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2628835 (n : int) : (term27 n) = (term34 n).
Proof. exact (MK_COMB (@lem2628834 n) (@lem2628833)). Qed.
Lemma lem2628836 (n : int) : (term26 n) = (term34 n).
Proof. exact (TRANS (@lem2628830 n) (@lem2628835 n)). Qed.
Lemma lem2628837 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628838 (n : int) : (term35 n) = (term36 n).
Proof. exact (MK_COMB (@lem2628837) (@lem2628836 n)). Qed.
Lemma lem2628840 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628841 : term37 = term38.
Proof. exact (@lem2628840 (NUMERAL 0)). Qed.
Lemma lem2628842 (n : int) : (term22 n) = (term39 n).
Proof. exact (MK_COMB (@lem2628838 n) (@lem2628841)). Qed.
Lemma lem2628843 (n : int) : (term21 n) = (term39 n).
Proof. exact (TRANS (@lem2628827 n) (@lem2628842 n)). Qed.
Lemma lem2628844 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628845 (n : int) : (term40 n) = (term41 n).
Proof. exact (MK_COMB (@lem2628844) (@lem2628843 n)). Qed.
Lemma lem2628847 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628848 (n : int) : (term42 n) = (term43 n).
Proof. exact (@lem2628847 term44 n). Qed.
Lemma lem2628850 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628851 : term45 = term46.
Proof. exact (@lem2628850 term3 term28). Qed.
Lemma lem2628853 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628854 : term37 = term38.
Proof. exact (@lem2628853 (NUMERAL 0)). Qed.
Lemma lem2628855 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628856 : term47 = term48.
Proof. exact (MK_COMB (@lem2628855) (@lem2628854)). Qed.
Lemma lem2628858 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628859 : term30 = term31.
Proof. exact (@lem2628858 term32). Qed.
Lemma lem2628860 : term46 = term49.
Proof. exact (MK_COMB (@lem2628856) (@lem2628859)). Qed.
Lemma lem2628861 : term45 = term49.
Proof. exact (TRANS (@lem2628851) (@lem2628860)). Qed.
Lemma lem2628862 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628863 : term50 = term51.
Proof. exact (MK_COMB (@lem2628862) (@lem2628861)). Qed.
Lemma lem2628864 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2628865 (n : int) : (term43 n) = (term52 n).
Proof. exact (MK_COMB (@lem2628863) (@lem2628864 n)). Qed.
Lemma lem2628866 (n : int) : (term42 n) = (term52 n).
Proof. exact (TRANS (@lem2628848 n) (@lem2628865 n)). Qed.
Lemma lem2628867 (n : int) : (term19 n) = (term53 n).
Proof. exact (MK_COMB (@lem2628845 n) (@lem2628866 n)). Qed.
Lemma lem2628868 (n : int) : (term18 n) = (term53 n).
Proof. exact (TRANS (@lem2628824 n) (@lem2628867 n)). Qed.
Lemma lem2628870 (y : int) (x : int) : (term382 x y) = (term368 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem2628871 (m : int) : (term383 m) = (term21 m).
Proof. exact (@lem2628870 m term3). Qed.
Lemma lem2628873 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628874 (m : int) : (term21 m) = (term22 m).
Proof. exact (@lem2628873 (term23 m) term3). Qed.
Lemma lem2628876 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628877 (m : int) : (term26 m) = (term27 m).
Proof. exact (@lem2628876 m term28). Qed.
Lemma lem2628879 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628880 : term30 = term31.
Proof. exact (@lem2628879 term32). Qed.
Lemma lem2628881 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2628882 (m : int) : (term27 m) = (term34 m).
Proof. exact (MK_COMB (@lem2628881 m) (@lem2628880)). Qed.
Lemma lem2628883 (m : int) : (term26 m) = (term34 m).
Proof. exact (TRANS (@lem2628877 m) (@lem2628882 m)). Qed.
Lemma lem2628884 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628885 (m : int) : (term35 m) = (term36 m).
Proof. exact (MK_COMB (@lem2628884) (@lem2628883 m)). Qed.
Lemma lem2628887 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628888 : term37 = term38.
Proof. exact (@lem2628887 (NUMERAL 0)). Qed.
Lemma lem2628889 (m : int) : (term22 m) = (term39 m).
Proof. exact (MK_COMB (@lem2628885 m) (@lem2628888)). Qed.
Lemma lem2628890 (m : int) : (term21 m) = (term39 m).
Proof. exact (TRANS (@lem2628874 m) (@lem2628889 m)). Qed.
Lemma lem2628891 (m : int) : (term383 m) = (term39 m).
Proof. exact (TRANS (@lem2628871 m) (@lem2628890 m)). Qed.
Lemma lem2628893 (y : int) (x : int) : (term384 x y) = (int_le y x).
Proof. exact (proj1 (@lem2318496 x y)). Qed.
Lemma lem2628894 (n : int) (m : int) : (term385 m n) = (term386 n m).
Proof. exact (@lem2628893 (int_abs n) m). Qed.
Lemma lem2628896 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628897 (n : int) (m : int) : (term386 n m) = (term387 n m).
Proof. exact (@lem2628896 (int_abs n) m). Qed.
Lemma lem2628899 (x : int) : (term371 x) = (term372 x).
Proof. exact (EQ_MP (@lem2318515 x) (@lem2318514 x)). Qed.
Lemma lem2628900 (n : int) : (term371 n) = (term372 n).
Proof. exact (@lem2628899 n). Qed.
Lemma lem2628901 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628902 (n : int) : (term388 n) = (term389 n).
Proof. exact (MK_COMB (@lem2628901) (@lem2628900 n)). Qed.
Lemma lem2628903 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2628904 (n : int) (m : int) : (term387 n m) = (term390 n m).
Proof. exact (MK_COMB (@lem2628902 n) (@lem2628903 m)). Qed.
Lemma lem2628905 (n : int) (m : int) : (term386 n m) = (term390 n m).
Proof. exact (TRANS (@lem2628897 n m) (@lem2628904 n m)). Qed.
Lemma lem2628906 (n : int) (m : int) : (term385 m n) = (term390 n m).
Proof. exact (TRANS (@lem2628894 n m) (@lem2628905 n m)). Qed.
Lemma lem2628907 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628908 (m : int) : (term391 m) = (term41 m).
Proof. exact (MK_COMB (@lem2628907) (@lem2628891 m)). Qed.
Lemma lem2628909 (n : int) (m : int) : (term324 m n) = (term392 n m).
Proof. exact (MK_COMB (@lem2628908 m) (@lem2628906 n m)). Qed.
Lemma lem2628910 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628911 (n : int) : (term327 n) = (term393 n).
Proof. exact (MK_COMB (@lem2628910) (@lem2628868 n)). Qed.
Lemma lem2628912 (n : int) (m : int) : (term329 m n) = (term394 n m).
Proof. exact (MK_COMB (@lem2628911 n) (@lem2628909 n m)). Qed.
Lemma lem2628914 (y : int) (x : int) : (term16 x y) = (term17 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem2628915 (n : int) : (term18 n) = (term19 n).
Proof. exact (@lem2628914 term3 n). Qed.
Lemma lem2628917 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628918 (n : int) : (term21 n) = (term22 n).
Proof. exact (@lem2628917 (term23 n) term3). Qed.
Lemma lem2628920 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628921 (n : int) : (term26 n) = (term27 n).
Proof. exact (@lem2628920 n term28). Qed.
Lemma lem2628923 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628924 : term30 = term31.
Proof. exact (@lem2628923 term32). Qed.
Lemma lem2628925 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2628926 (n : int) : (term27 n) = (term34 n).
Proof. exact (MK_COMB (@lem2628925 n) (@lem2628924)). Qed.
Lemma lem2628927 (n : int) : (term26 n) = (term34 n).
Proof. exact (TRANS (@lem2628921 n) (@lem2628926 n)). Qed.
Lemma lem2628928 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628929 (n : int) : (term35 n) = (term36 n).
Proof. exact (MK_COMB (@lem2628928) (@lem2628927 n)). Qed.
Lemma lem2628931 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628932 : term37 = term38.
Proof. exact (@lem2628931 (NUMERAL 0)). Qed.
Lemma lem2628933 (n : int) : (term22 n) = (term39 n).
Proof. exact (MK_COMB (@lem2628929 n) (@lem2628932)). Qed.
Lemma lem2628934 (n : int) : (term21 n) = (term39 n).
Proof. exact (TRANS (@lem2628918 n) (@lem2628933 n)). Qed.
Lemma lem2628935 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2628936 (n : int) : (term40 n) = (term41 n).
Proof. exact (MK_COMB (@lem2628935) (@lem2628934 n)). Qed.
Lemma lem2628938 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628939 (n : int) : (term42 n) = (term43 n).
Proof. exact (@lem2628938 term44 n). Qed.
Lemma lem2628941 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628942 : term45 = term46.
Proof. exact (@lem2628941 term3 term28). Qed.
Lemma lem2628944 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628945 : term37 = term38.
Proof. exact (@lem2628944 (NUMERAL 0)). Qed.
Lemma lem2628946 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2628947 : term47 = term48.
Proof. exact (MK_COMB (@lem2628946) (@lem2628945)). Qed.
Lemma lem2628949 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628950 : term30 = term31.
Proof. exact (@lem2628949 term32). Qed.
Lemma lem2628951 : term46 = term49.
Proof. exact (MK_COMB (@lem2628947) (@lem2628950)). Qed.
Lemma lem2628952 : term45 = term49.
Proof. exact (TRANS (@lem2628942) (@lem2628951)). Qed.
Lemma lem2628953 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628954 : term50 = term51.
Proof. exact (MK_COMB (@lem2628953) (@lem2628952)). Qed.
Lemma lem2628955 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2628956 (n : int) : (term43 n) = (term52 n).
Proof. exact (MK_COMB (@lem2628954) (@lem2628955 n)). Qed.
Lemma lem2628957 (n : int) : (term42 n) = (term52 n).
Proof. exact (TRANS (@lem2628939 n) (@lem2628956 n)). Qed.
Lemma lem2628958 (n : int) : (term19 n) = (term53 n).
Proof. exact (MK_COMB (@lem2628936 n) (@lem2628957 n)). Qed.
Lemma lem2628959 (n : int) : (term18 n) = (term53 n).
Proof. exact (TRANS (@lem2628915 n) (@lem2628958 n)). Qed.
Lemma lem2628960 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2628961 (n : int) (m : int) : (term333 m n) = (term397 n m).
Proof. exact (MK_COMB (@lem2628960) (@lem2628912 n m)). Qed.
Lemma lem2628962 (m : int) (n : int) : (term335 m n) = (term398 m n).
Proof. exact (MK_COMB (@lem2628961 n m) (@lem2628959 n)). Qed.
Lemma lem2628965 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem2628966 (n : int) : (n = term3) = ((real_of_int n) = term37).
Proof. exact (@lem2628965 n term3). Qed.
Lemma lem2628970 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628971 : term37 = term38.
Proof. exact (@lem2628970 (NUMERAL 0)). Qed.
Lemma lem2628972 (n : int) : (term77 n) = (term77 n).
Proof. exact (eq_refl (term77 n)). Qed.
Lemma lem2628973 (n : int) : ((real_of_int n) = term37) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2628972 n) (@lem2628971)). Qed.
Lemma lem2628975 (n : int) : (n = term3) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2628966 n) (@lem2628973 n)). Qed.
Lemma lem2628978 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628979 (m : int) : (term325 m) = (term365 m).
Proof. exact (@lem2628978 term3 m). Qed.
Lemma lem2628981 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2628982 : term37 = term38.
Proof. exact (@lem2628981 (NUMERAL 0)). Qed.
Lemma lem2628983 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2628984 : term366 = term259.
Proof. exact (MK_COMB (@lem2628983) (@lem2628982)). Qed.
Lemma lem2628985 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2628986 (m : int) : (term365 m) = (term367 m).
Proof. exact (MK_COMB (@lem2628984) (@lem2628985 m)). Qed.
Lemma lem2628988 (m : int) : (term325 m) = (term367 m).
Proof. exact (TRANS (@lem2628979 m) (@lem2628986 m)). Qed.
Lemma lem2628990 (x : int) (y : int) : (int_lt x y) = (term368 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem2628991 (m : int) (n : int) : (term326 m n) = (term369 m n).
Proof. exact (@lem2628990 m (int_abs n)). Qed.
Lemma lem2628993 (x : int) (y : int) : (int_le x y) = (term20 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem2628994 (m : int) (n : int) : (term369 m n) = (term370 m n).
Proof. exact (@lem2628993 (term23 m) (int_abs n)). Qed.
Lemma lem2628996 (x : int) (y : int) : (term24 x y) = (term25 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem2628997 (m : int) : (term26 m) = (term27 m).
Proof. exact (@lem2628996 m term28). Qed.
Lemma lem2628999 (n : nat) : (term29 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem2629000 : term30 = term31.
Proof. exact (@lem2628999 term32). Qed.
Lemma lem2629001 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2629002 (m : int) : (term27 m) = (term34 m).
Proof. exact (MK_COMB (@lem2629001 m) (@lem2629000)). Qed.
Lemma lem2629003 (m : int) : (term26 m) = (term34 m).
Proof. exact (TRANS (@lem2628997 m) (@lem2629002 m)). Qed.
Lemma lem2629004 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2629005 (m : int) : (term35 m) = (term36 m).
Proof. exact (MK_COMB (@lem2629004) (@lem2629003 m)). Qed.
Lemma lem2629007 (x : int) : (term371 x) = (term372 x).
Proof. exact (EQ_MP (@lem2318515 x) (@lem2318514 x)). Qed.
Lemma lem2629008 (n : int) : (term371 n) = (term372 n).
Proof. exact (@lem2629007 n). Qed.
Lemma lem2629009 (m : int) (n : int) : (term370 m n) = (term373 m n).
Proof. exact (MK_COMB (@lem2629005 m) (@lem2629008 n)). Qed.
Lemma lem2629010 (m : int) (n : int) : (term369 m n) = (term373 m n).
Proof. exact (TRANS (@lem2628994 m n) (@lem2629009 m n)). Qed.
Lemma lem2629011 (m : int) (n : int) : (term326 m n) = (term373 m n).
Proof. exact (TRANS (@lem2628991 m n) (@lem2629010 m n)). Qed.
Lemma lem2629012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2629013 (m : int) : (term374 m) = (term375 m).
Proof. exact (MK_COMB (@lem2629012) (@lem2628988 m)). Qed.
Lemma lem2629014 (m : int) (n : int) : (term331 m n) = (term376 m n).
Proof. exact (MK_COMB (@lem2629013 m) (@lem2629011 m n)). Qed.
Lemma lem2629015 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629016 (n : int) : (term377 n) = (term378 n).
Proof. exact (MK_COMB (@lem2629015) (@lem2628975 n)). Qed.
Lemma lem2629017 (m : int) (n : int) : (term8 m n) = (term379 m n).
Proof. exact (MK_COMB (@lem2629016 n) (@lem2629014 m n)). Qed.
Lemma lem2629018 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2629019 (m : int) (n : int) : (term338 m n) = (term399 m n).
Proof. exact (MK_COMB (@lem2629018) (@lem2628962 m n)). Qed.
Lemma lem2629020 (m : int) (n : int) : (term340 m n) = (term400 m n).
Proof. exact (MK_COMB (@lem2629019 m n) (@lem2629017 m n)). Qed.
Lemma lem2629021 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629022 (n : int) (m : int) : (term345 m n) = (term401 n m).
Proof. exact (MK_COMB (@lem2629021) (@lem2628821 n m)). Qed.
Lemma lem2629023 (m : int) (n : int) : (term347 m n) = (term402 m n).
Proof. exact (MK_COMB (@lem2629022 n m) (@lem2629020 m n)). Qed.
Lemma lem2629024 (m : int) : (term356 m) = (term403 m).
Proof. exact (fun_ext (fun n : int => @lem2629023 m n)). Qed.
Lemma lem2629025 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629026 (m : int) : (term357 m) = (term404 m).
Proof. exact (MK_COMB (@lem2629025) (@lem2629024 m)). Qed.
Lemma lem2629027 : term363 = term405.
Proof. exact (fun_ext (fun m : int => @lem2629026 m)). Qed.
Lemma lem2629028 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629029 : term364 = term406.
Proof. exact (MK_COMB (@lem2629028) (@lem2629027)). Qed.
Lemma lem2629030 : term358 = term406.
Proof. exact (TRANS (@lem2628656) (@lem2629029)). Qed.
Lemma lem2629034 (t : Prop) : (term85 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem2629035 : term407 = term406.
Proof. exact (@lem2629034 term406). Qed.
Lemma lem2629041 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term408 A P Q) = (term409 A P Q).
Proof. exact (EQ_MP (@lem16452 A P Q) (@lem16451 A P Q)). Qed.
Lemma lem2629042 (P : int -> Prop) (Q : int -> Prop) : (term410 P Q) = (term411 P Q).
Proof. exact (@lem2629041 int P Q). Qed.
Lemma lem2629043 (m : int) : (term412 m) = (term413 m).
Proof. exact (@lem2629042 (term414 m) (term415 m)). Qed.
Lemma lem2629044 (n : int) (m : int) : (term416 m n) = (term396 n m).
Proof. exact (eq_refl (term416 m n)). Qed.
Lemma lem2629045 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629046 (n : int) (m : int) : (term417 m n) = (term401 n m).
Proof. exact (MK_COMB (@lem2629045) (@lem2629044 n m)). Qed.
Lemma lem2629047 (m : int) (n : int) : (term418 m n) = (term400 m n).
Proof. exact (eq_refl (term418 m n)). Qed.
Lemma lem2629048 (m : int) (n : int) : (term419 m n) = (term402 m n).
Proof. exact (MK_COMB (@lem2629046 n m) (@lem2629047 m n)). Qed.
Lemma lem2629049 (m : int) : (term420 m) = (term403 m).
Proof. exact (fun_ext (fun n : int => @lem2629048 m n)). Qed.
Lemma lem2629050 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629051 (m : int) : (term412 m) = (term404 m).
Proof. exact (MK_COMB (@lem2629050) (@lem2629049 m)). Qed.
Lemma lem2629052 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2629053 (m : int) : (term421 m) = (term422 m).
Proof. exact (MK_COMB (@lem2629052) (@lem2629051 m)). Qed.
Lemma lem2629054 (n : int) (m : int) : (term416 m n) = (term396 n m).
Proof. exact (eq_refl (term416 m n)). Qed.
Lemma lem2629055 (m : int) : (term423 m) = (term414 m).
Proof. exact (fun_ext (fun n : int => @lem2629054 n m)). Qed.
Lemma lem2629056 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629057 (m : int) : (term424 m) = (term425 m).
Proof. exact (MK_COMB (@lem2629056) (@lem2629055 m)). Qed.
Lemma lem2629058 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629059 (m : int) : (term426 m) = (term427 m).
Proof. exact (MK_COMB (@lem2629058) (@lem2629057 m)). Qed.
Lemma lem2629060 (m : int) (n : int) : (term418 m n) = (term400 m n).
Proof. exact (eq_refl (term418 m n)). Qed.
Lemma lem2629061 (m : int) : (term428 m) = (term415 m).
Proof. exact (fun_ext (fun n : int => @lem2629060 m n)). Qed.
Lemma lem2629062 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629063 (m : int) : (term429 m) = (term430 m).
Proof. exact (MK_COMB (@lem2629062) (@lem2629061 m)). Qed.
Lemma lem2629064 (m : int) : (term413 m) = (term431 m).
Proof. exact (MK_COMB (@lem2629059 m) (@lem2629063 m)). Qed.
Lemma lem2629065 (m : int) : ((term412 m) = (term413 m)) = ((term404 m) = (term431 m)).
Proof. exact (MK_COMB (@lem2629053 m) (@lem2629064 m)). Qed.
Lemma lem2629066 (m : int) : (term404 m) = (term431 m).
Proof. exact (EQ_MP (@lem2629065 m) (@lem2629043 m)). Qed.
Lemma lem2629195 : term405 = term432.
Proof. exact (fun_ext (fun m : int => @lem2629066 m)). Qed.
Lemma lem2629196 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629197 : term406 = term433.
Proof. exact (MK_COMB (@lem2629196) (@lem2629195)). Qed.
Lemma lem2629199 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term408 A P Q) = (term409 A P Q).
Proof. exact (EQ_MP (@lem16452 A P Q) (@lem16451 A P Q)). Qed.
Lemma lem2629200 (P : int -> Prop) (Q : int -> Prop) : (term410 P Q) = (term411 P Q).
Proof. exact (@lem2629199 int P Q). Qed.
Lemma lem2629201 : term434 = term435.
Proof. exact (@lem2629200 term436 term437). Qed.
Lemma lem2629202 (m : int) : (term438 m) = (term425 m).
Proof. exact (eq_refl (term438 m)). Qed.
Lemma lem2629203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629204 (m : int) : (term439 m) = (term427 m).
Proof. exact (MK_COMB (@lem2629203) (@lem2629202 m)). Qed.
Lemma lem2629205 (m : int) : (term440 m) = (term430 m).
Proof. exact (eq_refl (term440 m)). Qed.
Lemma lem2629206 (m : int) : (term441 m) = (term431 m).
Proof. exact (MK_COMB (@lem2629204 m) (@lem2629205 m)). Qed.
Lemma lem2629207 : term442 = term432.
Proof. exact (fun_ext (fun m : int => @lem2629206 m)). Qed.
Lemma lem2629208 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629209 : term434 = term433.
Proof. exact (MK_COMB (@lem2629208) (@lem2629207)). Qed.
Lemma lem2629210 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2629211 : term443 = term444.
Proof. exact (MK_COMB (@lem2629210) (@lem2629209)). Qed.
Lemma lem2629212 (m : int) : (term438 m) = (term425 m).
Proof. exact (eq_refl (term438 m)). Qed.
Lemma lem2629213 : term445 = term436.
Proof. exact (fun_ext (fun m : int => @lem2629212 m)). Qed.
Lemma lem2629214 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629215 : term446 = term447.
Proof. exact (MK_COMB (@lem2629214) (@lem2629213)). Qed.
Lemma lem2629216 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629217 : term448 = term449.
Proof. exact (MK_COMB (@lem2629216) (@lem2629215)). Qed.
Lemma lem2629218 (m : int) : (term440 m) = (term430 m).
Proof. exact (eq_refl (term440 m)). Qed.
Lemma lem2629219 : term450 = term437.
Proof. exact (fun_ext (fun m : int => @lem2629218 m)). Qed.
Lemma lem2629220 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629221 : term451 = term452.
Proof. exact (MK_COMB (@lem2629220) (@lem2629219)). Qed.
Lemma lem2629222 : term435 = term453.
Proof. exact (MK_COMB (@lem2629217) (@lem2629221)). Qed.
Lemma lem2629223 : (term434 = term435) = (term433 = term453).
Proof. exact (MK_COMB (@lem2629211) (@lem2629222)). Qed.
Lemma lem2629224 : term433 = term453.
Proof. exact (EQ_MP (@lem2629223) (@lem2629201)). Qed.
Lemma lem2629361 : term406 = term453.
Proof. exact (TRANS (@lem2629197) (@lem2629224)). Qed.
Lemma lem2629363 : term407 = term453.
Proof. exact (TRANS (@lem2629035) (@lem2629361)). Qed.
Lemma lem2629392 (n : int) (m : int) : (term396 n m) = (term396 n m).
Proof. exact (eq_refl (term396 n m)). Qed.
Lemma lem2629393 (m : int) : (term414 m) = (term414 m).
Proof. exact (fun_ext (fun n : int => @lem2629392 n m)). Qed.
Lemma lem2629394 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629395 (m : int) : (term425 m) = (term425 m).
Proof. exact (MK_COMB (@lem2629394) (@lem2629393 m)). Qed.
Lemma lem2629396 : term436 = term436.
Proof. exact (fun_ext (fun m : int => @lem2629395 m)). Qed.
Lemma lem2629397 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629398 : term447 = term447.
Proof. exact (MK_COMB (@lem2629397) (@lem2629396)). Qed.
Lemma lem2629431 (m : int) (n : int) : (term400 m n) = (term400 m n).
Proof. exact (eq_refl (term400 m n)). Qed.
Lemma lem2629432 (m : int) : (term415 m) = (term415 m).
Proof. exact (fun_ext (fun n : int => @lem2629431 m n)). Qed.
Lemma lem2629433 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629434 (m : int) : (term430 m) = (term430 m).
Proof. exact (MK_COMB (@lem2629433) (@lem2629432 m)). Qed.
Lemma lem2629435 : term437 = term437.
Proof. exact (fun_ext (fun m : int => @lem2629434 m)). Qed.
Lemma lem2629436 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629437 : term452 = term452.
Proof. exact (MK_COMB (@lem2629436) (@lem2629435)). Qed.
Lemma lem2629438 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629439 : term449 = term449.
Proof. exact (MK_COMB (@lem2629438) (@lem2629398)). Qed.
Lemma lem2629440 : term453 = term453.
Proof. exact (MK_COMB (@lem2629439) (@lem2629437)). Qed.
Lemma lem2629441 : term407 = term453.
Proof. exact (TRANS (@lem2629363) (@lem2629440)). Qed.
Lemma lem2629470 (n : int) (m : int) : (term396 n m) = (term396 n m).
Proof. exact (eq_refl (term396 n m)). Qed.
Lemma lem2629471 (m : int) : (term414 m) = (term414 m).
Proof. exact (fun_ext (fun n : int => @lem2629470 n m)). Qed.
Lemma lem2629472 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629473 (m : int) : (term425 m) = (term425 m).
Proof. exact (MK_COMB (@lem2629472) (@lem2629471 m)). Qed.
Lemma lem2629474 : term436 = term436.
Proof. exact (fun_ext (fun m : int => @lem2629473 m)). Qed.
Lemma lem2629475 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629476 : term447 = term447.
Proof. exact (MK_COMB (@lem2629475) (@lem2629474)). Qed.
Lemma lem2629509 (m : int) (n : int) : (term400 m n) = (term400 m n).
Proof. exact (eq_refl (term400 m n)). Qed.
Lemma lem2629510 (m : int) : (term415 m) = (term415 m).
Proof. exact (fun_ext (fun n : int => @lem2629509 m n)). Qed.
Lemma lem2629511 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629512 (m : int) : (term430 m) = (term430 m).
Proof. exact (MK_COMB (@lem2629511) (@lem2629510 m)). Qed.
Lemma lem2629513 : term437 = term437.
Proof. exact (fun_ext (fun m : int => @lem2629512 m)). Qed.
Lemma lem2629514 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629515 : term452 = term452.
Proof. exact (MK_COMB (@lem2629514) (@lem2629513)). Qed.
Lemma lem2629516 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629517 : term449 = term449.
Proof. exact (MK_COMB (@lem2629516) (@lem2629476)). Qed.
Lemma lem2629518 : term453 = term453.
Proof. exact (MK_COMB (@lem2629517) (@lem2629515)). Qed.
Lemma lem2629519 : term407 = term453.
Proof. exact (TRANS (@lem2629441) (@lem2629518)). Qed.
Lemma lem2629520 (n : int) : ((real_of_int n) = term38) = ((term210 n) = term38).
Proof. exact (@lem1988293 (real_of_int n) term38). Qed.
Lemma lem2629526 (n : int) : (term210 n) = (term211 n).
Proof. exact (@lem1982792 (real_of_int n) term38). Qed.
Lemma lem2629528 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629529 : term38 = term134.
Proof. exact (@lem2629528 (NUMERAL 0)). Qed.
Lemma lem2629531 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629532 : term97 = term102.
Proof. exact (@lem2629531 term32). Qed.
Lemma lem2629533 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629534 : term147 = term148.
Proof. exact (MK_COMB (@lem2629533) (@lem2629532)). Qed.
Lemma lem2629535 : term212 = term213.
Proof. exact (MK_COMB (@lem2629534) (@lem2629529)). Qed.
Lemma lem2629536 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2629538 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629539 : term117 = term118.
Proof. exact (@lem2629538 term32 term32). Qed.
Lemma lem2629540 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629541 : term120 = term32.
Proof. exact (EQ_MP (@lem2629540) (@lem940073)). Qed.
Lemma lem2629542 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629543 : term118 = term31.
Proof. exact (MK_COMB (@lem2629542) (@lem2629541)). Qed.
Lemma lem2629544 : term117 = term31.
Proof. exact (TRANS (@lem2629539) (@lem2629543)). Qed.
Lemma lem2629546 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2629547 : term212 = term38.
Proof. exact (@lem2629546 term32). Qed.
Lemma lem2629548 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629549 : term216 = term217.
Proof. exact (MK_COMB (@lem2629548) (@lem2629547)). Qed.
Lemma lem2629550 : term214 = term134.
Proof. exact (MK_COMB (@lem2629549) (@lem2629544)). Qed.
Lemma lem2629551 : term213 = term134.
Proof. exact (TRANS (@lem2629536) (@lem2629550)). Qed.
Lemma lem2629552 : term212 = term134.
Proof. exact (TRANS (@lem2629535) (@lem2629551)). Qed.
Lemma lem2629554 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629555 : term134 = term38.
Proof. exact (@lem2629554 term38). Qed.
Lemma lem2629556 : term212 = term38.
Proof. exact (TRANS (@lem2629552) (@lem2629555)). Qed.
Lemma lem2629557 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2629558 (n : int) : (term211 n) = (term218 n).
Proof. exact (MK_COMB (@lem2629557 n) (@lem2629556)). Qed.
Lemma lem2629559 (n : int) : (term218 n) = (real_of_int n).
Proof. exact (@lem1982723 (real_of_int n)). Qed.
Lemma lem2629560 (n : int) : (term211 n) = (real_of_int n).
Proof. exact (TRANS (@lem2629558 n) (@lem2629559 n)). Qed.
Lemma lem2629562 (n : int) : (term210 n) = (real_of_int n).
Proof. exact (TRANS (@lem2629526 n) (@lem2629560 n)). Qed.
Lemma lem2629563 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2629564 (n : int) : (term219 n) = (term77 n).
Proof. exact (MK_COMB (@lem2629563) (@lem2629562 n)). Qed.
Lemma lem2629565 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629566 (n : int) : ((term210 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2629564 n) (@lem2629565)). Qed.
Lemma lem2629567 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2629520 n) (@lem2629566 n)). Qed.
Lemma lem2629568 (m : int) : (term367 m) = (term454 m).
Proof. exact (@lem1988287 (real_of_int m) term38). Qed.
Lemma lem2629574 (m : int) : (term210 m) = (term211 m).
Proof. exact (@lem1982792 (real_of_int m) term38). Qed.
Lemma lem2629576 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629577 : term38 = term134.
Proof. exact (@lem2629576 (NUMERAL 0)). Qed.
Lemma lem2629579 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629580 : term97 = term102.
Proof. exact (@lem2629579 term32). Qed.
Lemma lem2629581 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629582 : term147 = term148.
Proof. exact (MK_COMB (@lem2629581) (@lem2629580)). Qed.
Lemma lem2629583 : term212 = term213.
Proof. exact (MK_COMB (@lem2629582) (@lem2629577)). Qed.
Lemma lem2629584 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2629586 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629587 : term117 = term118.
Proof. exact (@lem2629586 term32 term32). Qed.
Lemma lem2629588 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629589 : term120 = term32.
Proof. exact (EQ_MP (@lem2629588) (@lem940073)). Qed.
Lemma lem2629590 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629591 : term118 = term31.
Proof. exact (MK_COMB (@lem2629590) (@lem2629589)). Qed.
Lemma lem2629592 : term117 = term31.
Proof. exact (TRANS (@lem2629587) (@lem2629591)). Qed.
Lemma lem2629594 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2629595 : term212 = term38.
Proof. exact (@lem2629594 term32). Qed.
Lemma lem2629596 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629597 : term216 = term217.
Proof. exact (MK_COMB (@lem2629596) (@lem2629595)). Qed.
Lemma lem2629598 : term214 = term134.
Proof. exact (MK_COMB (@lem2629597) (@lem2629592)). Qed.
Lemma lem2629599 : term213 = term134.
Proof. exact (TRANS (@lem2629584) (@lem2629598)). Qed.
Lemma lem2629600 : term212 = term134.
Proof. exact (TRANS (@lem2629583) (@lem2629599)). Qed.
Lemma lem2629602 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629603 : term134 = term38.
Proof. exact (@lem2629602 term38). Qed.
Lemma lem2629604 : term212 = term38.
Proof. exact (TRANS (@lem2629600) (@lem2629603)). Qed.
Lemma lem2629605 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2629606 (m : int) : (term211 m) = (term218 m).
Proof. exact (MK_COMB (@lem2629605 m) (@lem2629604)). Qed.
Lemma lem2629607 (m : int) : (term218 m) = (real_of_int m).
Proof. exact (@lem1982723 (real_of_int m)). Qed.
Lemma lem2629608 (m : int) : (term211 m) = (real_of_int m).
Proof. exact (TRANS (@lem2629606 m) (@lem2629607 m)). Qed.
Lemma lem2629610 (m : int) : (term210 m) = (real_of_int m).
Proof. exact (TRANS (@lem2629574 m) (@lem2629608 m)). Qed.
Lemma lem2629611 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629612 (m : int) : (term455 m) = (term456 m).
Proof. exact (MK_COMB (@lem2629611) (@lem2629610 m)). Qed.
Lemma lem2629613 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629614 (m : int) : (term454 m) = (term457 m).
Proof. exact (MK_COMB (@lem2629612 m) (@lem2629613)). Qed.
Lemma lem2629615 (m : int) : (term367 m) = (term457 m).
Proof. exact (TRANS (@lem2629568 m) (@lem2629614 m)). Qed.
Lemma lem2629616 (n : int) (m : int) : (term373 m n) = (term458 n m).
Proof. exact (@lem1988287 (term372 n) (term34 m)). Qed.
Lemma lem2629630 (n : int) (m : int) : (term459 n m) = (term460 n m).
Proof. exact (@lem1982792 (term372 n) (term34 m)). Qed.
Lemma lem2629631 (m : int) : (term145 m) = (term146 m).
Proof. exact (@lem1982781 (real_of_int m) term97 term31). Qed.
Lemma lem2629633 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629634 : term31 = term99.
Proof. exact (@lem2629633 term32). Qed.
Lemma lem2629636 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629637 : term97 = term102.
Proof. exact (@lem2629636 term32). Qed.
Lemma lem2629638 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629639 : term147 = term148.
Proof. exact (MK_COMB (@lem2629638) (@lem2629637)). Qed.
Lemma lem2629640 : term123 = term149.
Proof. exact (MK_COMB (@lem2629639) (@lem2629634)). Qed.
Lemma lem2629641 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2629643 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629644 : term117 = term118.
Proof. exact (@lem2629643 term32 term32). Qed.
Lemma lem2629645 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629646 : term120 = term32.
Proof. exact (EQ_MP (@lem2629645) (@lem940073)). Qed.
Lemma lem2629647 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629648 : term118 = term31.
Proof. exact (MK_COMB (@lem2629647) (@lem2629646)). Qed.
Lemma lem2629649 : term117 = term31.
Proof. exact (TRANS (@lem2629644) (@lem2629648)). Qed.
Lemma lem2629651 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2629652 : term123 = term124.
Proof. exact (@lem2629651 term32 term32). Qed.
Lemma lem2629653 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629654 : term120 = term32.
Proof. exact (EQ_MP (@lem2629653) (@lem940073)). Qed.
Lemma lem2629655 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629656 : term118 = term31.
Proof. exact (MK_COMB (@lem2629655) (@lem2629654)). Qed.
Lemma lem2629657 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2629658 : term124 = term97.
Proof. exact (MK_COMB (@lem2629657) (@lem2629656)). Qed.
Lemma lem2629659 : term123 = term97.
Proof. exact (TRANS (@lem2629652) (@lem2629658)). Qed.
Lemma lem2629660 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629661 : term151 = term152.
Proof. exact (MK_COMB (@lem2629660) (@lem2629659)). Qed.
Lemma lem2629662 : term150 = term102.
Proof. exact (MK_COMB (@lem2629661) (@lem2629649)). Qed.
Lemma lem2629663 : term149 = term102.
Proof. exact (TRANS (@lem2629641) (@lem2629662)). Qed.
Lemma lem2629664 : term123 = term102.
Proof. exact (TRANS (@lem2629640) (@lem2629663)). Qed.
Lemma lem2629666 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629667 : term102 = term97.
Proof. exact (@lem2629666 term97). Qed.
Lemma lem2629668 : term123 = term97.
Proof. exact (TRANS (@lem2629664) (@lem2629667)). Qed.
Lemma lem2629671 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2629672 (m : int) : (term146 m) = (term154 m).
Proof. exact (MK_COMB (@lem2629671 m) (@lem2629668)). Qed.
Lemma lem2629673 (m : int) : (term145 m) = (term154 m).
Proof. exact (TRANS (@lem2629631 m) (@lem2629672 m)). Qed.
Lemma lem2629674 (n : int) : (term461 n) = (term461 n).
Proof. exact (eq_refl (term461 n)). Qed.
Lemma lem2629677 (n : int) (m : int) : (term460 n m) = (term462 n m).
Proof. exact (MK_COMB (@lem2629674 n) (@lem2629673 m)). Qed.
Lemma lem2629679 (n : int) (m : int) : (term459 n m) = (term462 n m).
Proof. exact (TRANS (@lem2629630 n m) (@lem2629677 n m)). Qed.
Lemma lem2629680 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629681 (n : int) (m : int) : (term463 n m) = (term464 n m).
Proof. exact (MK_COMB (@lem2629680) (@lem2629679 n m)). Qed.
Lemma lem2629682 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629683 (n : int) (m : int) : (term458 n m) = (term465 n m).
Proof. exact (MK_COMB (@lem2629681 n m) (@lem2629682)). Qed.
Lemma lem2629684 (n : int) (m : int) : (term373 m n) = (term465 n m).
Proof. exact (TRANS (@lem2629616 n m) (@lem2629683 n m)). Qed.
Lemma lem2629685 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2629686 (m : int) : (term375 m) = (term466 m).
Proof. exact (MK_COMB (@lem2629685) (@lem2629615 m)). Qed.
Lemma lem2629687 (n : int) (m : int) : (term376 m n) = (term467 n m).
Proof. exact (MK_COMB (@lem2629686 m) (@lem2629684 n m)). Qed.
Lemma lem2629688 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629689 (n : int) : (term378 n) = (term378 n).
Proof. exact (MK_COMB (@lem2629688) (@lem2629567 n)). Qed.
Lemma lem2629690 (n : int) (m : int) : (term379 m n) = (term468 n m).
Proof. exact (MK_COMB (@lem2629689 n) (@lem2629687 n m)). Qed.
Lemma lem2629691 (n : int) : ((real_of_int n) = term38) = ((term210 n) = term38).
Proof. exact (@lem1988293 (real_of_int n) term38). Qed.
Lemma lem2629697 (n : int) : (term210 n) = (term211 n).
Proof. exact (@lem1982792 (real_of_int n) term38). Qed.
Lemma lem2629699 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629700 : term38 = term134.
Proof. exact (@lem2629699 (NUMERAL 0)). Qed.
Lemma lem2629702 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629703 : term97 = term102.
Proof. exact (@lem2629702 term32). Qed.
Lemma lem2629704 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629705 : term147 = term148.
Proof. exact (MK_COMB (@lem2629704) (@lem2629703)). Qed.
Lemma lem2629706 : term212 = term213.
Proof. exact (MK_COMB (@lem2629705) (@lem2629700)). Qed.
Lemma lem2629707 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2629709 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629710 : term117 = term118.
Proof. exact (@lem2629709 term32 term32). Qed.
Lemma lem2629711 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629712 : term120 = term32.
Proof. exact (EQ_MP (@lem2629711) (@lem940073)). Qed.
Lemma lem2629713 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629714 : term118 = term31.
Proof. exact (MK_COMB (@lem2629713) (@lem2629712)). Qed.
Lemma lem2629715 : term117 = term31.
Proof. exact (TRANS (@lem2629710) (@lem2629714)). Qed.
Lemma lem2629717 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2629718 : term212 = term38.
Proof. exact (@lem2629717 term32). Qed.
Lemma lem2629719 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629720 : term216 = term217.
Proof. exact (MK_COMB (@lem2629719) (@lem2629718)). Qed.
Lemma lem2629721 : term214 = term134.
Proof. exact (MK_COMB (@lem2629720) (@lem2629715)). Qed.
Lemma lem2629722 : term213 = term134.
Proof. exact (TRANS (@lem2629707) (@lem2629721)). Qed.
Lemma lem2629723 : term212 = term134.
Proof. exact (TRANS (@lem2629706) (@lem2629722)). Qed.
Lemma lem2629725 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629726 : term134 = term38.
Proof. exact (@lem2629725 term38). Qed.
Lemma lem2629727 : term212 = term38.
Proof. exact (TRANS (@lem2629723) (@lem2629726)). Qed.
Lemma lem2629728 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2629729 (n : int) : (term211 n) = (term218 n).
Proof. exact (MK_COMB (@lem2629728 n) (@lem2629727)). Qed.
Lemma lem2629730 (n : int) : (term218 n) = (real_of_int n).
Proof. exact (@lem1982723 (real_of_int n)). Qed.
Lemma lem2629731 (n : int) : (term211 n) = (real_of_int n).
Proof. exact (TRANS (@lem2629729 n) (@lem2629730 n)). Qed.
Lemma lem2629733 (n : int) : (term210 n) = (real_of_int n).
Proof. exact (TRANS (@lem2629697 n) (@lem2629731 n)). Qed.
Lemma lem2629734 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2629735 (n : int) : (term219 n) = (term77 n).
Proof. exact (MK_COMB (@lem2629734) (@lem2629733 n)). Qed.
Lemma lem2629736 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629737 (n : int) : ((term210 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2629735 n) (@lem2629736)). Qed.
Lemma lem2629738 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2629691 n) (@lem2629737 n)). Qed.
Lemma lem2629739 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629740 (n : int) (m : int) : (term380 m n) = (term469 n m).
Proof. exact (MK_COMB (@lem2629739) (@lem2629690 n m)). Qed.
Lemma lem2629741 (m : int) (n : int) : (term381 m n) = (term470 m n).
Proof. exact (MK_COMB (@lem2629740 n m) (@lem2629738 n)). Qed.
Lemma lem2629742 (n : int) : (term39 n) = (term142 n).
Proof. exact (@lem1988287 term38 (term34 n)). Qed.
Lemma lem2629754 (n : int) : (term143 n) = (term144 n).
Proof. exact (@lem1982792 term38 (term34 n)). Qed.
Lemma lem2629755 (n : int) : (term145 n) = (term146 n).
Proof. exact (@lem1982781 (real_of_int n) term97 term31). Qed.
Lemma lem2629757 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629758 : term31 = term99.
Proof. exact (@lem2629757 term32). Qed.
Lemma lem2629760 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629761 : term97 = term102.
Proof. exact (@lem2629760 term32). Qed.
Lemma lem2629762 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629763 : term147 = term148.
Proof. exact (MK_COMB (@lem2629762) (@lem2629761)). Qed.
Lemma lem2629764 : term123 = term149.
Proof. exact (MK_COMB (@lem2629763) (@lem2629758)). Qed.
Lemma lem2629765 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2629767 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629768 : term117 = term118.
Proof. exact (@lem2629767 term32 term32). Qed.
Lemma lem2629769 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629770 : term120 = term32.
Proof. exact (EQ_MP (@lem2629769) (@lem940073)). Qed.
Lemma lem2629771 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629772 : term118 = term31.
Proof. exact (MK_COMB (@lem2629771) (@lem2629770)). Qed.
Lemma lem2629773 : term117 = term31.
Proof. exact (TRANS (@lem2629768) (@lem2629772)). Qed.
Lemma lem2629775 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2629776 : term123 = term124.
Proof. exact (@lem2629775 term32 term32). Qed.
Lemma lem2629777 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629778 : term120 = term32.
Proof. exact (EQ_MP (@lem2629777) (@lem940073)). Qed.
Lemma lem2629779 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629780 : term118 = term31.
Proof. exact (MK_COMB (@lem2629779) (@lem2629778)). Qed.
Lemma lem2629781 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2629782 : term124 = term97.
Proof. exact (MK_COMB (@lem2629781) (@lem2629780)). Qed.
Lemma lem2629783 : term123 = term97.
Proof. exact (TRANS (@lem2629776) (@lem2629782)). Qed.
Lemma lem2629784 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629785 : term151 = term152.
Proof. exact (MK_COMB (@lem2629784) (@lem2629783)). Qed.
Lemma lem2629786 : term150 = term102.
Proof. exact (MK_COMB (@lem2629785) (@lem2629773)). Qed.
Lemma lem2629787 : term149 = term102.
Proof. exact (TRANS (@lem2629765) (@lem2629786)). Qed.
Lemma lem2629788 : term123 = term102.
Proof. exact (TRANS (@lem2629764) (@lem2629787)). Qed.
Lemma lem2629790 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629791 : term102 = term97.
Proof. exact (@lem2629790 term97). Qed.
Lemma lem2629792 : term123 = term97.
Proof. exact (TRANS (@lem2629788) (@lem2629791)). Qed.
Lemma lem2629795 (n : int) : (term153 n) = (term153 n).
Proof. exact (eq_refl (term153 n)). Qed.
Lemma lem2629796 (n : int) : (term146 n) = (term154 n).
Proof. exact (MK_COMB (@lem2629795 n) (@lem2629792)). Qed.
Lemma lem2629797 (n : int) : (term145 n) = (term154 n).
Proof. exact (TRANS (@lem2629755 n) (@lem2629796 n)). Qed.
Lemma lem2629798 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2629799 (n : int) : (term144 n) = (term155 n).
Proof. exact (MK_COMB (@lem2629798) (@lem2629797 n)). Qed.
Lemma lem2629800 (n : int) : (term155 n) = (term154 n).
Proof. exact (@lem1982721 (term154 n)). Qed.
Lemma lem2629801 (n : int) : (term144 n) = (term154 n).
Proof. exact (TRANS (@lem2629799 n) (@lem2629800 n)). Qed.
Lemma lem2629803 (n : int) : (term143 n) = (term154 n).
Proof. exact (TRANS (@lem2629754 n) (@lem2629801 n)). Qed.
Lemma lem2629804 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629805 (n : int) : (term156 n) = (term157 n).
Proof. exact (MK_COMB (@lem2629804) (@lem2629803 n)). Qed.
Lemma lem2629806 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629807 (n : int) : (term142 n) = (term158 n).
Proof. exact (MK_COMB (@lem2629805 n) (@lem2629806)). Qed.
Lemma lem2629808 (n : int) : (term39 n) = (term158 n).
Proof. exact (TRANS (@lem2629742 n) (@lem2629807 n)). Qed.
Lemma lem2629809 (n : int) : (term52 n) = (term159 n).
Proof. exact (@lem1988287 (real_of_int n) term49). Qed.
Lemma lem2629816 : term49 = term31.
Proof. exact (@lem1982721 term31). Qed.
Lemma lem2629819 (n : int) : (term160 n) = (term160 n).
Proof. exact (eq_refl (term160 n)). Qed.
Lemma lem2629820 (n : int) : (term161 n) = (term162 n).
Proof. exact (MK_COMB (@lem2629819 n) (@lem2629816)). Qed.
Lemma lem2629821 (n : int) : (term162 n) = (term163 n).
Proof. exact (@lem1982792 (real_of_int n) term31). Qed.
Lemma lem2629823 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629824 : term31 = term99.
Proof. exact (@lem2629823 term32). Qed.
Lemma lem2629826 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629827 : term97 = term102.
Proof. exact (@lem2629826 term32). Qed.
Lemma lem2629828 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629829 : term147 = term148.
Proof. exact (MK_COMB (@lem2629828) (@lem2629827)). Qed.
Lemma lem2629830 : term123 = term149.
Proof. exact (MK_COMB (@lem2629829) (@lem2629824)). Qed.
Lemma lem2629831 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2629833 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629834 : term117 = term118.
Proof. exact (@lem2629833 term32 term32). Qed.
Lemma lem2629835 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629836 : term120 = term32.
Proof. exact (EQ_MP (@lem2629835) (@lem940073)). Qed.
Lemma lem2629837 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629838 : term118 = term31.
Proof. exact (MK_COMB (@lem2629837) (@lem2629836)). Qed.
Lemma lem2629839 : term117 = term31.
Proof. exact (TRANS (@lem2629834) (@lem2629838)). Qed.
Lemma lem2629841 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2629842 : term123 = term124.
Proof. exact (@lem2629841 term32 term32). Qed.
Lemma lem2629843 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629844 : term120 = term32.
Proof. exact (EQ_MP (@lem2629843) (@lem940073)). Qed.
Lemma lem2629845 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629846 : term118 = term31.
Proof. exact (MK_COMB (@lem2629845) (@lem2629844)). Qed.
Lemma lem2629847 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2629848 : term124 = term97.
Proof. exact (MK_COMB (@lem2629847) (@lem2629846)). Qed.
Lemma lem2629849 : term123 = term97.
Proof. exact (TRANS (@lem2629842) (@lem2629848)). Qed.
Lemma lem2629850 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629851 : term151 = term152.
Proof. exact (MK_COMB (@lem2629850) (@lem2629849)). Qed.
Lemma lem2629852 : term150 = term102.
Proof. exact (MK_COMB (@lem2629851) (@lem2629839)). Qed.
Lemma lem2629853 : term149 = term102.
Proof. exact (TRANS (@lem2629831) (@lem2629852)). Qed.
Lemma lem2629854 : term123 = term102.
Proof. exact (TRANS (@lem2629830) (@lem2629853)). Qed.
Lemma lem2629856 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629857 : term102 = term97.
Proof. exact (@lem2629856 term97). Qed.
Lemma lem2629858 : term123 = term97.
Proof. exact (TRANS (@lem2629854) (@lem2629857)). Qed.
Lemma lem2629859 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2629862 (n : int) : (term163 n) = (term164 n).
Proof. exact (MK_COMB (@lem2629859 n) (@lem2629858)). Qed.
Lemma lem2629863 (n : int) : (term162 n) = (term164 n).
Proof. exact (TRANS (@lem2629821 n) (@lem2629862 n)). Qed.
Lemma lem2629864 (n : int) : (term161 n) = (term164 n).
Proof. exact (TRANS (@lem2629820 n) (@lem2629863 n)). Qed.
Lemma lem2629865 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629866 (n : int) : (term165 n) = (term166 n).
Proof. exact (MK_COMB (@lem2629865) (@lem2629864 n)). Qed.
Lemma lem2629867 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629868 (n : int) : (term159 n) = (term167 n).
Proof. exact (MK_COMB (@lem2629866 n) (@lem2629867)). Qed.
Lemma lem2629869 (n : int) : (term52 n) = (term167 n).
Proof. exact (TRANS (@lem2629809 n) (@lem2629868 n)). Qed.
Lemma lem2629870 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629871 (n : int) : (term41 n) = (term168 n).
Proof. exact (MK_COMB (@lem2629870) (@lem2629808 n)). Qed.
Lemma lem2629872 (n : int) : (term53 n) = (term169 n).
Proof. exact (MK_COMB (@lem2629871 n) (@lem2629869 n)). Qed.
Lemma lem2629873 (m : int) : (term39 m) = (term142 m).
Proof. exact (@lem1988287 term38 (term34 m)). Qed.
Lemma lem2629885 (m : int) : (term143 m) = (term144 m).
Proof. exact (@lem1982792 term38 (term34 m)). Qed.
Lemma lem2629886 (m : int) : (term145 m) = (term146 m).
Proof. exact (@lem1982781 (real_of_int m) term97 term31). Qed.
Lemma lem2629888 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629889 : term31 = term99.
Proof. exact (@lem2629888 term32). Qed.
Lemma lem2629891 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629892 : term97 = term102.
Proof. exact (@lem2629891 term32). Qed.
Lemma lem2629893 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629894 : term147 = term148.
Proof. exact (MK_COMB (@lem2629893) (@lem2629892)). Qed.
Lemma lem2629895 : term123 = term149.
Proof. exact (MK_COMB (@lem2629894) (@lem2629889)). Qed.
Lemma lem2629896 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2629898 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2629899 : term117 = term118.
Proof. exact (@lem2629898 term32 term32). Qed.
Lemma lem2629900 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629901 : term120 = term32.
Proof. exact (EQ_MP (@lem2629900) (@lem940073)). Qed.
Lemma lem2629902 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629903 : term118 = term31.
Proof. exact (MK_COMB (@lem2629902) (@lem2629901)). Qed.
Lemma lem2629904 : term117 = term31.
Proof. exact (TRANS (@lem2629899) (@lem2629903)). Qed.
Lemma lem2629906 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2629907 : term123 = term124.
Proof. exact (@lem2629906 term32 term32). Qed.
Lemma lem2629908 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2629909 : term120 = term32.
Proof. exact (EQ_MP (@lem2629908) (@lem940073)). Qed.
Lemma lem2629910 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2629911 : term118 = term31.
Proof. exact (MK_COMB (@lem2629910) (@lem2629909)). Qed.
Lemma lem2629912 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2629913 : term124 = term97.
Proof. exact (MK_COMB (@lem2629912) (@lem2629911)). Qed.
Lemma lem2629914 : term123 = term97.
Proof. exact (TRANS (@lem2629907) (@lem2629913)). Qed.
Lemma lem2629915 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2629916 : term151 = term152.
Proof. exact (MK_COMB (@lem2629915) (@lem2629914)). Qed.
Lemma lem2629917 : term150 = term102.
Proof. exact (MK_COMB (@lem2629916) (@lem2629904)). Qed.
Lemma lem2629918 : term149 = term102.
Proof. exact (TRANS (@lem2629896) (@lem2629917)). Qed.
Lemma lem2629919 : term123 = term102.
Proof. exact (TRANS (@lem2629895) (@lem2629918)). Qed.
Lemma lem2629921 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2629922 : term102 = term97.
Proof. exact (@lem2629921 term97). Qed.
Lemma lem2629923 : term123 = term97.
Proof. exact (TRANS (@lem2629919) (@lem2629922)). Qed.
Lemma lem2629926 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2629927 (m : int) : (term146 m) = (term154 m).
Proof. exact (MK_COMB (@lem2629926 m) (@lem2629923)). Qed.
Lemma lem2629928 (m : int) : (term145 m) = (term154 m).
Proof. exact (TRANS (@lem2629886 m) (@lem2629927 m)). Qed.
Lemma lem2629929 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2629930 (m : int) : (term144 m) = (term155 m).
Proof. exact (MK_COMB (@lem2629929) (@lem2629928 m)). Qed.
Lemma lem2629931 (m : int) : (term155 m) = (term154 m).
Proof. exact (@lem1982721 (term154 m)). Qed.
Lemma lem2629932 (m : int) : (term144 m) = (term154 m).
Proof. exact (TRANS (@lem2629930 m) (@lem2629931 m)). Qed.
Lemma lem2629934 (m : int) : (term143 m) = (term154 m).
Proof. exact (TRANS (@lem2629885 m) (@lem2629932 m)). Qed.
Lemma lem2629935 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629936 (m : int) : (term156 m) = (term157 m).
Proof. exact (MK_COMB (@lem2629935) (@lem2629934 m)). Qed.
Lemma lem2629937 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629938 (m : int) : (term142 m) = (term158 m).
Proof. exact (MK_COMB (@lem2629936 m) (@lem2629937)). Qed.
Lemma lem2629939 (m : int) : (term39 m) = (term158 m).
Proof. exact (TRANS (@lem2629873 m) (@lem2629938 m)). Qed.
Lemma lem2629940 (m : int) (n : int) : (term390 n m) = (term471 m n).
Proof. exact (@lem1988287 (real_of_int m) (term372 n)). Qed.
Lemma lem2629948 (m : int) (n : int) : (term472 m n) = (term473 m n).
Proof. exact (@lem1982792 (real_of_int m) (term372 n)). Qed.
Lemma lem2629953 (n : int) (m : int) : (term473 m n) = (term474 n m).
Proof. exact (@lem1982761 (term475 n) (real_of_int m)). Qed.
Lemma lem2629955 (n : int) (m : int) : (term472 m n) = (term474 n m).
Proof. exact (TRANS (@lem2629948 m n) (@lem2629953 n m)). Qed.
Lemma lem2629956 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2629957 (n : int) (m : int) : (term476 m n) = (term477 n m).
Proof. exact (MK_COMB (@lem2629956) (@lem2629955 n m)). Qed.
Lemma lem2629958 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2629959 (n : int) (m : int) : (term471 m n) = (term478 n m).
Proof. exact (MK_COMB (@lem2629957 n m) (@lem2629958)). Qed.
Lemma lem2629960 (n : int) (m : int) : (term390 n m) = (term478 n m).
Proof. exact (TRANS (@lem2629940 m n) (@lem2629959 n m)). Qed.
Lemma lem2629961 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2629962 (m : int) : (term41 m) = (term168 m).
Proof. exact (MK_COMB (@lem2629961) (@lem2629939 m)). Qed.
Lemma lem2629963 (n : int) (m : int) : (term392 n m) = (term479 n m).
Proof. exact (MK_COMB (@lem2629962 m) (@lem2629960 n m)). Qed.
Lemma lem2629964 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2629965 (n : int) : (term393 n) = (term480 n).
Proof. exact (MK_COMB (@lem2629964) (@lem2629872 n)). Qed.
Lemma lem2629966 (n : int) (m : int) : (term394 n m) = (term481 n m).
Proof. exact (MK_COMB (@lem2629965 n) (@lem2629963 n m)). Qed.
Lemma lem2629967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2629968 (m : int) (n : int) : (term395 m n) = (term482 m n).
Proof. exact (MK_COMB (@lem2629967) (@lem2629741 m n)). Qed.
Lemma lem2629969 (n : int) (m : int) : (term396 n m) = (term483 n m).
Proof. exact (MK_COMB (@lem2629968 m n) (@lem2629966 n m)). Qed.
Lemma lem2629970 (m : int) : (term414 m) = (term484 m).
Proof. exact (fun_ext (fun n : int => @lem2629969 n m)). Qed.
Lemma lem2629971 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629972 (m : int) : (term425 m) = (term485 m).
Proof. exact (MK_COMB (@lem2629971) (@lem2629970 m)). Qed.
Lemma lem2629973 : term436 = term486.
Proof. exact (fun_ext (fun m : int => @lem2629972 m)). Qed.
Lemma lem2629974 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2629975 : term447 = term487.
Proof. exact (MK_COMB (@lem2629974) (@lem2629973)). Qed.
Lemma lem2629976 (n : int) : (term39 n) = (term142 n).
Proof. exact (@lem1988287 term38 (term34 n)). Qed.
Lemma lem2629988 (n : int) : (term143 n) = (term144 n).
Proof. exact (@lem1982792 term38 (term34 n)). Qed.
Lemma lem2629989 (n : int) : (term145 n) = (term146 n).
Proof. exact (@lem1982781 (real_of_int n) term97 term31). Qed.
Lemma lem2629991 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2629992 : term31 = term99.
Proof. exact (@lem2629991 term32). Qed.
Lemma lem2629994 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2629995 : term97 = term102.
Proof. exact (@lem2629994 term32). Qed.
Lemma lem2629996 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2629997 : term147 = term148.
Proof. exact (MK_COMB (@lem2629996) (@lem2629995)). Qed.
Lemma lem2629998 : term123 = term149.
Proof. exact (MK_COMB (@lem2629997) (@lem2629992)). Qed.
Lemma lem2629999 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630001 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630002 : term117 = term118.
Proof. exact (@lem2630001 term32 term32). Qed.
Lemma lem2630003 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630004 : term120 = term32.
Proof. exact (EQ_MP (@lem2630003) (@lem940073)). Qed.
Lemma lem2630005 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630006 : term118 = term31.
Proof. exact (MK_COMB (@lem2630005) (@lem2630004)). Qed.
Lemma lem2630007 : term117 = term31.
Proof. exact (TRANS (@lem2630002) (@lem2630006)). Qed.
Lemma lem2630009 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630010 : term123 = term124.
Proof. exact (@lem2630009 term32 term32). Qed.
Lemma lem2630011 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630012 : term120 = term32.
Proof. exact (EQ_MP (@lem2630011) (@lem940073)). Qed.
Lemma lem2630013 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630014 : term118 = term31.
Proof. exact (MK_COMB (@lem2630013) (@lem2630012)). Qed.
Lemma lem2630015 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630016 : term124 = term97.
Proof. exact (MK_COMB (@lem2630015) (@lem2630014)). Qed.
Lemma lem2630017 : term123 = term97.
Proof. exact (TRANS (@lem2630010) (@lem2630016)). Qed.
Lemma lem2630018 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630019 : term151 = term152.
Proof. exact (MK_COMB (@lem2630018) (@lem2630017)). Qed.
Lemma lem2630020 : term150 = term102.
Proof. exact (MK_COMB (@lem2630019) (@lem2630007)). Qed.
Lemma lem2630021 : term149 = term102.
Proof. exact (TRANS (@lem2629999) (@lem2630020)). Qed.
Lemma lem2630022 : term123 = term102.
Proof. exact (TRANS (@lem2629998) (@lem2630021)). Qed.
Lemma lem2630024 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630025 : term102 = term97.
Proof. exact (@lem2630024 term97). Qed.
Lemma lem2630026 : term123 = term97.
Proof. exact (TRANS (@lem2630022) (@lem2630025)). Qed.
Lemma lem2630029 (n : int) : (term153 n) = (term153 n).
Proof. exact (eq_refl (term153 n)). Qed.
Lemma lem2630030 (n : int) : (term146 n) = (term154 n).
Proof. exact (MK_COMB (@lem2630029 n) (@lem2630026)). Qed.
Lemma lem2630031 (n : int) : (term145 n) = (term154 n).
Proof. exact (TRANS (@lem2629989 n) (@lem2630030 n)). Qed.
Lemma lem2630032 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2630033 (n : int) : (term144 n) = (term155 n).
Proof. exact (MK_COMB (@lem2630032) (@lem2630031 n)). Qed.
Lemma lem2630034 (n : int) : (term155 n) = (term154 n).
Proof. exact (@lem1982721 (term154 n)). Qed.
Lemma lem2630035 (n : int) : (term144 n) = (term154 n).
Proof. exact (TRANS (@lem2630033 n) (@lem2630034 n)). Qed.
Lemma lem2630037 (n : int) : (term143 n) = (term154 n).
Proof. exact (TRANS (@lem2629988 n) (@lem2630035 n)). Qed.
Lemma lem2630038 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630039 (n : int) : (term156 n) = (term157 n).
Proof. exact (MK_COMB (@lem2630038) (@lem2630037 n)). Qed.
Lemma lem2630040 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630041 (n : int) : (term142 n) = (term158 n).
Proof. exact (MK_COMB (@lem2630039 n) (@lem2630040)). Qed.
Lemma lem2630042 (n : int) : (term39 n) = (term158 n).
Proof. exact (TRANS (@lem2629976 n) (@lem2630041 n)). Qed.
Lemma lem2630043 (n : int) : (term52 n) = (term159 n).
Proof. exact (@lem1988287 (real_of_int n) term49). Qed.
Lemma lem2630050 : term49 = term31.
Proof. exact (@lem1982721 term31). Qed.
Lemma lem2630053 (n : int) : (term160 n) = (term160 n).
Proof. exact (eq_refl (term160 n)). Qed.
Lemma lem2630054 (n : int) : (term161 n) = (term162 n).
Proof. exact (MK_COMB (@lem2630053 n) (@lem2630050)). Qed.
Lemma lem2630055 (n : int) : (term162 n) = (term163 n).
Proof. exact (@lem1982792 (real_of_int n) term31). Qed.
Lemma lem2630057 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630058 : term31 = term99.
Proof. exact (@lem2630057 term32). Qed.
Lemma lem2630060 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630061 : term97 = term102.
Proof. exact (@lem2630060 term32). Qed.
Lemma lem2630062 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630063 : term147 = term148.
Proof. exact (MK_COMB (@lem2630062) (@lem2630061)). Qed.
Lemma lem2630064 : term123 = term149.
Proof. exact (MK_COMB (@lem2630063) (@lem2630058)). Qed.
Lemma lem2630065 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630067 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630068 : term117 = term118.
Proof. exact (@lem2630067 term32 term32). Qed.
Lemma lem2630069 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630070 : term120 = term32.
Proof. exact (EQ_MP (@lem2630069) (@lem940073)). Qed.
Lemma lem2630071 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630072 : term118 = term31.
Proof. exact (MK_COMB (@lem2630071) (@lem2630070)). Qed.
Lemma lem2630073 : term117 = term31.
Proof. exact (TRANS (@lem2630068) (@lem2630072)). Qed.
Lemma lem2630075 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630076 : term123 = term124.
Proof. exact (@lem2630075 term32 term32). Qed.
Lemma lem2630077 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630078 : term120 = term32.
Proof. exact (EQ_MP (@lem2630077) (@lem940073)). Qed.
Lemma lem2630079 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630080 : term118 = term31.
Proof. exact (MK_COMB (@lem2630079) (@lem2630078)). Qed.
Lemma lem2630081 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630082 : term124 = term97.
Proof. exact (MK_COMB (@lem2630081) (@lem2630080)). Qed.
Lemma lem2630083 : term123 = term97.
Proof. exact (TRANS (@lem2630076) (@lem2630082)). Qed.
Lemma lem2630084 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630085 : term151 = term152.
Proof. exact (MK_COMB (@lem2630084) (@lem2630083)). Qed.
Lemma lem2630086 : term150 = term102.
Proof. exact (MK_COMB (@lem2630085) (@lem2630073)). Qed.
Lemma lem2630087 : term149 = term102.
Proof. exact (TRANS (@lem2630065) (@lem2630086)). Qed.
Lemma lem2630088 : term123 = term102.
Proof. exact (TRANS (@lem2630064) (@lem2630087)). Qed.
Lemma lem2630090 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630091 : term102 = term97.
Proof. exact (@lem2630090 term97). Qed.
Lemma lem2630092 : term123 = term97.
Proof. exact (TRANS (@lem2630088) (@lem2630091)). Qed.
Lemma lem2630093 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2630096 (n : int) : (term163 n) = (term164 n).
Proof. exact (MK_COMB (@lem2630093 n) (@lem2630092)). Qed.
Lemma lem2630097 (n : int) : (term162 n) = (term164 n).
Proof. exact (TRANS (@lem2630055 n) (@lem2630096 n)). Qed.
Lemma lem2630098 (n : int) : (term161 n) = (term164 n).
Proof. exact (TRANS (@lem2630054 n) (@lem2630097 n)). Qed.
Lemma lem2630099 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630100 (n : int) : (term165 n) = (term166 n).
Proof. exact (MK_COMB (@lem2630099) (@lem2630098 n)). Qed.
Lemma lem2630101 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630102 (n : int) : (term159 n) = (term167 n).
Proof. exact (MK_COMB (@lem2630100 n) (@lem2630101)). Qed.
Lemma lem2630103 (n : int) : (term52 n) = (term167 n).
Proof. exact (TRANS (@lem2630043 n) (@lem2630102 n)). Qed.
Lemma lem2630104 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630105 (n : int) : (term41 n) = (term168 n).
Proof. exact (MK_COMB (@lem2630104) (@lem2630042 n)). Qed.
Lemma lem2630106 (n : int) : (term53 n) = (term169 n).
Proof. exact (MK_COMB (@lem2630105 n) (@lem2630103 n)). Qed.
Lemma lem2630107 (m : int) : (term39 m) = (term142 m).
Proof. exact (@lem1988287 term38 (term34 m)). Qed.
Lemma lem2630119 (m : int) : (term143 m) = (term144 m).
Proof. exact (@lem1982792 term38 (term34 m)). Qed.
Lemma lem2630120 (m : int) : (term145 m) = (term146 m).
Proof. exact (@lem1982781 (real_of_int m) term97 term31). Qed.
Lemma lem2630122 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630123 : term31 = term99.
Proof. exact (@lem2630122 term32). Qed.
Lemma lem2630125 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630126 : term97 = term102.
Proof. exact (@lem2630125 term32). Qed.
Lemma lem2630127 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630128 : term147 = term148.
Proof. exact (MK_COMB (@lem2630127) (@lem2630126)). Qed.
Lemma lem2630129 : term123 = term149.
Proof. exact (MK_COMB (@lem2630128) (@lem2630123)). Qed.
Lemma lem2630130 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630132 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630133 : term117 = term118.
Proof. exact (@lem2630132 term32 term32). Qed.
Lemma lem2630134 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630135 : term120 = term32.
Proof. exact (EQ_MP (@lem2630134) (@lem940073)). Qed.
Lemma lem2630136 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630137 : term118 = term31.
Proof. exact (MK_COMB (@lem2630136) (@lem2630135)). Qed.
Lemma lem2630138 : term117 = term31.
Proof. exact (TRANS (@lem2630133) (@lem2630137)). Qed.
Lemma lem2630140 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630141 : term123 = term124.
Proof. exact (@lem2630140 term32 term32). Qed.
Lemma lem2630142 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630143 : term120 = term32.
Proof. exact (EQ_MP (@lem2630142) (@lem940073)). Qed.
Lemma lem2630144 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630145 : term118 = term31.
Proof. exact (MK_COMB (@lem2630144) (@lem2630143)). Qed.
Lemma lem2630146 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630147 : term124 = term97.
Proof. exact (MK_COMB (@lem2630146) (@lem2630145)). Qed.
Lemma lem2630148 : term123 = term97.
Proof. exact (TRANS (@lem2630141) (@lem2630147)). Qed.
Lemma lem2630149 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630150 : term151 = term152.
Proof. exact (MK_COMB (@lem2630149) (@lem2630148)). Qed.
Lemma lem2630151 : term150 = term102.
Proof. exact (MK_COMB (@lem2630150) (@lem2630138)). Qed.
Lemma lem2630152 : term149 = term102.
Proof. exact (TRANS (@lem2630130) (@lem2630151)). Qed.
Lemma lem2630153 : term123 = term102.
Proof. exact (TRANS (@lem2630129) (@lem2630152)). Qed.
Lemma lem2630155 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630156 : term102 = term97.
Proof. exact (@lem2630155 term97). Qed.
Lemma lem2630157 : term123 = term97.
Proof. exact (TRANS (@lem2630153) (@lem2630156)). Qed.
Lemma lem2630160 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2630161 (m : int) : (term146 m) = (term154 m).
Proof. exact (MK_COMB (@lem2630160 m) (@lem2630157)). Qed.
Lemma lem2630162 (m : int) : (term145 m) = (term154 m).
Proof. exact (TRANS (@lem2630120 m) (@lem2630161 m)). Qed.
Lemma lem2630163 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2630164 (m : int) : (term144 m) = (term155 m).
Proof. exact (MK_COMB (@lem2630163) (@lem2630162 m)). Qed.
Lemma lem2630165 (m : int) : (term155 m) = (term154 m).
Proof. exact (@lem1982721 (term154 m)). Qed.
Lemma lem2630166 (m : int) : (term144 m) = (term154 m).
Proof. exact (TRANS (@lem2630164 m) (@lem2630165 m)). Qed.
Lemma lem2630168 (m : int) : (term143 m) = (term154 m).
Proof. exact (TRANS (@lem2630119 m) (@lem2630166 m)). Qed.
Lemma lem2630169 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630170 (m : int) : (term156 m) = (term157 m).
Proof. exact (MK_COMB (@lem2630169) (@lem2630168 m)). Qed.
Lemma lem2630171 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630172 (m : int) : (term142 m) = (term158 m).
Proof. exact (MK_COMB (@lem2630170 m) (@lem2630171)). Qed.
Lemma lem2630173 (m : int) : (term39 m) = (term158 m).
Proof. exact (TRANS (@lem2630107 m) (@lem2630172 m)). Qed.
Lemma lem2630174 (m : int) (n : int) : (term390 n m) = (term471 m n).
Proof. exact (@lem1988287 (real_of_int m) (term372 n)). Qed.
Lemma lem2630182 (m : int) (n : int) : (term472 m n) = (term473 m n).
Proof. exact (@lem1982792 (real_of_int m) (term372 n)). Qed.
Lemma lem2630187 (n : int) (m : int) : (term473 m n) = (term474 n m).
Proof. exact (@lem1982761 (term475 n) (real_of_int m)). Qed.
Lemma lem2630189 (n : int) (m : int) : (term472 m n) = (term474 n m).
Proof. exact (TRANS (@lem2630182 m n) (@lem2630187 n m)). Qed.
Lemma lem2630190 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630191 (n : int) (m : int) : (term476 m n) = (term477 n m).
Proof. exact (MK_COMB (@lem2630190) (@lem2630189 n m)). Qed.
Lemma lem2630192 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630193 (n : int) (m : int) : (term471 m n) = (term478 n m).
Proof. exact (MK_COMB (@lem2630191 n m) (@lem2630192)). Qed.
Lemma lem2630194 (n : int) (m : int) : (term390 n m) = (term478 n m).
Proof. exact (TRANS (@lem2630174 m n) (@lem2630193 n m)). Qed.
Lemma lem2630195 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630196 (m : int) : (term41 m) = (term168 m).
Proof. exact (MK_COMB (@lem2630195) (@lem2630173 m)). Qed.
Lemma lem2630197 (n : int) (m : int) : (term392 n m) = (term479 n m).
Proof. exact (MK_COMB (@lem2630196 m) (@lem2630194 n m)). Qed.
Lemma lem2630198 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630199 (n : int) : (term393 n) = (term480 n).
Proof. exact (MK_COMB (@lem2630198) (@lem2630106 n)). Qed.
Lemma lem2630200 (n : int) (m : int) : (term394 n m) = (term481 n m).
Proof. exact (MK_COMB (@lem2630199 n) (@lem2630197 n m)). Qed.
Lemma lem2630201 (n : int) : (term39 n) = (term142 n).
Proof. exact (@lem1988287 term38 (term34 n)). Qed.
Lemma lem2630213 (n : int) : (term143 n) = (term144 n).
Proof. exact (@lem1982792 term38 (term34 n)). Qed.
Lemma lem2630214 (n : int) : (term145 n) = (term146 n).
Proof. exact (@lem1982781 (real_of_int n) term97 term31). Qed.
Lemma lem2630216 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630217 : term31 = term99.
Proof. exact (@lem2630216 term32). Qed.
Lemma lem2630219 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630220 : term97 = term102.
Proof. exact (@lem2630219 term32). Qed.
Lemma lem2630221 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630222 : term147 = term148.
Proof. exact (MK_COMB (@lem2630221) (@lem2630220)). Qed.
Lemma lem2630223 : term123 = term149.
Proof. exact (MK_COMB (@lem2630222) (@lem2630217)). Qed.
Lemma lem2630224 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630226 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630227 : term117 = term118.
Proof. exact (@lem2630226 term32 term32). Qed.
Lemma lem2630228 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630229 : term120 = term32.
Proof. exact (EQ_MP (@lem2630228) (@lem940073)). Qed.
Lemma lem2630230 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630231 : term118 = term31.
Proof. exact (MK_COMB (@lem2630230) (@lem2630229)). Qed.
Lemma lem2630232 : term117 = term31.
Proof. exact (TRANS (@lem2630227) (@lem2630231)). Qed.
Lemma lem2630234 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630235 : term123 = term124.
Proof. exact (@lem2630234 term32 term32). Qed.
Lemma lem2630236 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630237 : term120 = term32.
Proof. exact (EQ_MP (@lem2630236) (@lem940073)). Qed.
Lemma lem2630238 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630239 : term118 = term31.
Proof. exact (MK_COMB (@lem2630238) (@lem2630237)). Qed.
Lemma lem2630240 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630241 : term124 = term97.
Proof. exact (MK_COMB (@lem2630240) (@lem2630239)). Qed.
Lemma lem2630242 : term123 = term97.
Proof. exact (TRANS (@lem2630235) (@lem2630241)). Qed.
Lemma lem2630243 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630244 : term151 = term152.
Proof. exact (MK_COMB (@lem2630243) (@lem2630242)). Qed.
Lemma lem2630245 : term150 = term102.
Proof. exact (MK_COMB (@lem2630244) (@lem2630232)). Qed.
Lemma lem2630246 : term149 = term102.
Proof. exact (TRANS (@lem2630224) (@lem2630245)). Qed.
Lemma lem2630247 : term123 = term102.
Proof. exact (TRANS (@lem2630223) (@lem2630246)). Qed.
Lemma lem2630249 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630250 : term102 = term97.
Proof. exact (@lem2630249 term97). Qed.
Lemma lem2630251 : term123 = term97.
Proof. exact (TRANS (@lem2630247) (@lem2630250)). Qed.
Lemma lem2630254 (n : int) : (term153 n) = (term153 n).
Proof. exact (eq_refl (term153 n)). Qed.
Lemma lem2630255 (n : int) : (term146 n) = (term154 n).
Proof. exact (MK_COMB (@lem2630254 n) (@lem2630251)). Qed.
Lemma lem2630256 (n : int) : (term145 n) = (term154 n).
Proof. exact (TRANS (@lem2630214 n) (@lem2630255 n)). Qed.
Lemma lem2630257 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem2630258 (n : int) : (term144 n) = (term155 n).
Proof. exact (MK_COMB (@lem2630257) (@lem2630256 n)). Qed.
Lemma lem2630259 (n : int) : (term155 n) = (term154 n).
Proof. exact (@lem1982721 (term154 n)). Qed.
Lemma lem2630260 (n : int) : (term144 n) = (term154 n).
Proof. exact (TRANS (@lem2630258 n) (@lem2630259 n)). Qed.
Lemma lem2630262 (n : int) : (term143 n) = (term154 n).
Proof. exact (TRANS (@lem2630213 n) (@lem2630260 n)). Qed.
Lemma lem2630263 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630264 (n : int) : (term156 n) = (term157 n).
Proof. exact (MK_COMB (@lem2630263) (@lem2630262 n)). Qed.
Lemma lem2630265 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630266 (n : int) : (term142 n) = (term158 n).
Proof. exact (MK_COMB (@lem2630264 n) (@lem2630265)). Qed.
Lemma lem2630267 (n : int) : (term39 n) = (term158 n).
Proof. exact (TRANS (@lem2630201 n) (@lem2630266 n)). Qed.
Lemma lem2630268 (n : int) : (term52 n) = (term159 n).
Proof. exact (@lem1988287 (real_of_int n) term49). Qed.
Lemma lem2630275 : term49 = term31.
Proof. exact (@lem1982721 term31). Qed.
Lemma lem2630278 (n : int) : (term160 n) = (term160 n).
Proof. exact (eq_refl (term160 n)). Qed.
Lemma lem2630279 (n : int) : (term161 n) = (term162 n).
Proof. exact (MK_COMB (@lem2630278 n) (@lem2630275)). Qed.
Lemma lem2630280 (n : int) : (term162 n) = (term163 n).
Proof. exact (@lem1982792 (real_of_int n) term31). Qed.
Lemma lem2630282 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630283 : term31 = term99.
Proof. exact (@lem2630282 term32). Qed.
Lemma lem2630285 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630286 : term97 = term102.
Proof. exact (@lem2630285 term32). Qed.
Lemma lem2630287 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630288 : term147 = term148.
Proof. exact (MK_COMB (@lem2630287) (@lem2630286)). Qed.
Lemma lem2630289 : term123 = term149.
Proof. exact (MK_COMB (@lem2630288) (@lem2630283)). Qed.
Lemma lem2630290 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630292 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630293 : term117 = term118.
Proof. exact (@lem2630292 term32 term32). Qed.
Lemma lem2630294 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630295 : term120 = term32.
Proof. exact (EQ_MP (@lem2630294) (@lem940073)). Qed.
Lemma lem2630296 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630297 : term118 = term31.
Proof. exact (MK_COMB (@lem2630296) (@lem2630295)). Qed.
Lemma lem2630298 : term117 = term31.
Proof. exact (TRANS (@lem2630293) (@lem2630297)). Qed.
Lemma lem2630300 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630301 : term123 = term124.
Proof. exact (@lem2630300 term32 term32). Qed.
Lemma lem2630302 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630303 : term120 = term32.
Proof. exact (EQ_MP (@lem2630302) (@lem940073)). Qed.
Lemma lem2630304 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630305 : term118 = term31.
Proof. exact (MK_COMB (@lem2630304) (@lem2630303)). Qed.
Lemma lem2630306 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630307 : term124 = term97.
Proof. exact (MK_COMB (@lem2630306) (@lem2630305)). Qed.
Lemma lem2630308 : term123 = term97.
Proof. exact (TRANS (@lem2630301) (@lem2630307)). Qed.
Lemma lem2630309 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630310 : term151 = term152.
Proof. exact (MK_COMB (@lem2630309) (@lem2630308)). Qed.
Lemma lem2630311 : term150 = term102.
Proof. exact (MK_COMB (@lem2630310) (@lem2630298)). Qed.
Lemma lem2630312 : term149 = term102.
Proof. exact (TRANS (@lem2630290) (@lem2630311)). Qed.
Lemma lem2630313 : term123 = term102.
Proof. exact (TRANS (@lem2630289) (@lem2630312)). Qed.
Lemma lem2630315 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630316 : term102 = term97.
Proof. exact (@lem2630315 term97). Qed.
Lemma lem2630317 : term123 = term97.
Proof. exact (TRANS (@lem2630313) (@lem2630316)). Qed.
Lemma lem2630318 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2630321 (n : int) : (term163 n) = (term164 n).
Proof. exact (MK_COMB (@lem2630318 n) (@lem2630317)). Qed.
Lemma lem2630322 (n : int) : (term162 n) = (term164 n).
Proof. exact (TRANS (@lem2630280 n) (@lem2630321 n)). Qed.
Lemma lem2630323 (n : int) : (term161 n) = (term164 n).
Proof. exact (TRANS (@lem2630279 n) (@lem2630322 n)). Qed.
Lemma lem2630324 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630325 (n : int) : (term165 n) = (term166 n).
Proof. exact (MK_COMB (@lem2630324) (@lem2630323 n)). Qed.
Lemma lem2630326 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630327 (n : int) : (term159 n) = (term167 n).
Proof. exact (MK_COMB (@lem2630325 n) (@lem2630326)). Qed.
Lemma lem2630328 (n : int) : (term52 n) = (term167 n).
Proof. exact (TRANS (@lem2630268 n) (@lem2630327 n)). Qed.
Lemma lem2630329 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630330 (n : int) : (term41 n) = (term168 n).
Proof. exact (MK_COMB (@lem2630329) (@lem2630267 n)). Qed.
Lemma lem2630331 (n : int) : (term53 n) = (term169 n).
Proof. exact (MK_COMB (@lem2630330 n) (@lem2630328 n)). Qed.
Lemma lem2630332 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630333 (n : int) (m : int) : (term397 n m) = (term488 n m).
Proof. exact (MK_COMB (@lem2630332) (@lem2630200 n m)). Qed.
Lemma lem2630334 (m : int) (n : int) : (term398 m n) = (term489 m n).
Proof. exact (MK_COMB (@lem2630333 n m) (@lem2630331 n)). Qed.
Lemma lem2630335 (n : int) : ((real_of_int n) = term38) = ((term210 n) = term38).
Proof. exact (@lem1988293 (real_of_int n) term38). Qed.
Lemma lem2630341 (n : int) : (term210 n) = (term211 n).
Proof. exact (@lem1982792 (real_of_int n) term38). Qed.
Lemma lem2630343 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630344 : term38 = term134.
Proof. exact (@lem2630343 (NUMERAL 0)). Qed.
Lemma lem2630346 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630347 : term97 = term102.
Proof. exact (@lem2630346 term32). Qed.
Lemma lem2630348 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630349 : term147 = term148.
Proof. exact (MK_COMB (@lem2630348) (@lem2630347)). Qed.
Lemma lem2630350 : term212 = term213.
Proof. exact (MK_COMB (@lem2630349) (@lem2630344)). Qed.
Lemma lem2630351 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2630353 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630354 : term117 = term118.
Proof. exact (@lem2630353 term32 term32). Qed.
Lemma lem2630355 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630356 : term120 = term32.
Proof. exact (EQ_MP (@lem2630355) (@lem940073)). Qed.
Lemma lem2630357 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630358 : term118 = term31.
Proof. exact (MK_COMB (@lem2630357) (@lem2630356)). Qed.
Lemma lem2630359 : term117 = term31.
Proof. exact (TRANS (@lem2630354) (@lem2630358)). Qed.
Lemma lem2630361 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2630362 : term212 = term38.
Proof. exact (@lem2630361 term32). Qed.
Lemma lem2630363 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630364 : term216 = term217.
Proof. exact (MK_COMB (@lem2630363) (@lem2630362)). Qed.
Lemma lem2630365 : term214 = term134.
Proof. exact (MK_COMB (@lem2630364) (@lem2630359)). Qed.
Lemma lem2630366 : term213 = term134.
Proof. exact (TRANS (@lem2630351) (@lem2630365)). Qed.
Lemma lem2630367 : term212 = term134.
Proof. exact (TRANS (@lem2630350) (@lem2630366)). Qed.
Lemma lem2630369 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630370 : term134 = term38.
Proof. exact (@lem2630369 term38). Qed.
Lemma lem2630371 : term212 = term38.
Proof. exact (TRANS (@lem2630367) (@lem2630370)). Qed.
Lemma lem2630372 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2630373 (n : int) : (term211 n) = (term218 n).
Proof. exact (MK_COMB (@lem2630372 n) (@lem2630371)). Qed.
Lemma lem2630374 (n : int) : (term218 n) = (real_of_int n).
Proof. exact (@lem1982723 (real_of_int n)). Qed.
Lemma lem2630375 (n : int) : (term211 n) = (real_of_int n).
Proof. exact (TRANS (@lem2630373 n) (@lem2630374 n)). Qed.
Lemma lem2630377 (n : int) : (term210 n) = (real_of_int n).
Proof. exact (TRANS (@lem2630341 n) (@lem2630375 n)). Qed.
Lemma lem2630378 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2630379 (n : int) : (term219 n) = (term77 n).
Proof. exact (MK_COMB (@lem2630378) (@lem2630377 n)). Qed.
Lemma lem2630380 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630381 (n : int) : ((term210 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2630379 n) (@lem2630380)). Qed.
Lemma lem2630382 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (TRANS (@lem2630335 n) (@lem2630381 n)). Qed.
Lemma lem2630383 (m : int) : (term367 m) = (term454 m).
Proof. exact (@lem1988287 (real_of_int m) term38). Qed.
Lemma lem2630389 (m : int) : (term210 m) = (term211 m).
Proof. exact (@lem1982792 (real_of_int m) term38). Qed.
Lemma lem2630391 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630392 : term38 = term134.
Proof. exact (@lem2630391 (NUMERAL 0)). Qed.
Lemma lem2630394 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630395 : term97 = term102.
Proof. exact (@lem2630394 term32). Qed.
Lemma lem2630396 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630397 : term147 = term148.
Proof. exact (MK_COMB (@lem2630396) (@lem2630395)). Qed.
Lemma lem2630398 : term212 = term213.
Proof. exact (MK_COMB (@lem2630397) (@lem2630392)). Qed.
Lemma lem2630399 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2630401 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630402 : term117 = term118.
Proof. exact (@lem2630401 term32 term32). Qed.
Lemma lem2630403 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630404 : term120 = term32.
Proof. exact (EQ_MP (@lem2630403) (@lem940073)). Qed.
Lemma lem2630405 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630406 : term118 = term31.
Proof. exact (MK_COMB (@lem2630405) (@lem2630404)). Qed.
Lemma lem2630407 : term117 = term31.
Proof. exact (TRANS (@lem2630402) (@lem2630406)). Qed.
Lemma lem2630409 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2630410 : term212 = term38.
Proof. exact (@lem2630409 term32). Qed.
Lemma lem2630411 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630412 : term216 = term217.
Proof. exact (MK_COMB (@lem2630411) (@lem2630410)). Qed.
Lemma lem2630413 : term214 = term134.
Proof. exact (MK_COMB (@lem2630412) (@lem2630407)). Qed.
Lemma lem2630414 : term213 = term134.
Proof. exact (TRANS (@lem2630399) (@lem2630413)). Qed.
Lemma lem2630415 : term212 = term134.
Proof. exact (TRANS (@lem2630398) (@lem2630414)). Qed.
Lemma lem2630417 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630418 : term134 = term38.
Proof. exact (@lem2630417 term38). Qed.
Lemma lem2630419 : term212 = term38.
Proof. exact (TRANS (@lem2630415) (@lem2630418)). Qed.
Lemma lem2630420 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2630421 (m : int) : (term211 m) = (term218 m).
Proof. exact (MK_COMB (@lem2630420 m) (@lem2630419)). Qed.
Lemma lem2630422 (m : int) : (term218 m) = (real_of_int m).
Proof. exact (@lem1982723 (real_of_int m)). Qed.
Lemma lem2630423 (m : int) : (term211 m) = (real_of_int m).
Proof. exact (TRANS (@lem2630421 m) (@lem2630422 m)). Qed.
Lemma lem2630425 (m : int) : (term210 m) = (real_of_int m).
Proof. exact (TRANS (@lem2630389 m) (@lem2630423 m)). Qed.
Lemma lem2630426 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630427 (m : int) : (term455 m) = (term456 m).
Proof. exact (MK_COMB (@lem2630426) (@lem2630425 m)). Qed.
Lemma lem2630428 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630429 (m : int) : (term454 m) = (term457 m).
Proof. exact (MK_COMB (@lem2630427 m) (@lem2630428)). Qed.
Lemma lem2630430 (m : int) : (term367 m) = (term457 m).
Proof. exact (TRANS (@lem2630383 m) (@lem2630429 m)). Qed.
Lemma lem2630431 (n : int) (m : int) : (term373 m n) = (term458 n m).
Proof. exact (@lem1988287 (term372 n) (term34 m)). Qed.
Lemma lem2630445 (n : int) (m : int) : (term459 n m) = (term460 n m).
Proof. exact (@lem1982792 (term372 n) (term34 m)). Qed.
Lemma lem2630446 (m : int) : (term145 m) = (term146 m).
Proof. exact (@lem1982781 (real_of_int m) term97 term31). Qed.
Lemma lem2630448 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2630449 : term31 = term99.
Proof. exact (@lem2630448 term32). Qed.
Lemma lem2630451 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2630452 : term97 = term102.
Proof. exact (@lem2630451 term32). Qed.
Lemma lem2630453 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2630454 : term147 = term148.
Proof. exact (MK_COMB (@lem2630453) (@lem2630452)). Qed.
Lemma lem2630455 : term123 = term149.
Proof. exact (MK_COMB (@lem2630454) (@lem2630449)). Qed.
Lemma lem2630456 : term149 = term150.
Proof. exact (@lem1981613 term97 term31 term31 term31). Qed.
Lemma lem2630458 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2630459 : term117 = term118.
Proof. exact (@lem2630458 term32 term32). Qed.
Lemma lem2630460 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630461 : term120 = term32.
Proof. exact (EQ_MP (@lem2630460) (@lem940073)). Qed.
Lemma lem2630462 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630463 : term118 = term31.
Proof. exact (MK_COMB (@lem2630462) (@lem2630461)). Qed.
Lemma lem2630464 : term117 = term31.
Proof. exact (TRANS (@lem2630459) (@lem2630463)). Qed.
Lemma lem2630466 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2630467 : term123 = term124.
Proof. exact (@lem2630466 term32 term32). Qed.
Lemma lem2630468 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2630469 : term120 = term32.
Proof. exact (EQ_MP (@lem2630468) (@lem940073)). Qed.
Lemma lem2630470 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2630471 : term118 = term31.
Proof. exact (MK_COMB (@lem2630470) (@lem2630469)). Qed.
Lemma lem2630472 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2630473 : term124 = term97.
Proof. exact (MK_COMB (@lem2630472) (@lem2630471)). Qed.
Lemma lem2630474 : term123 = term97.
Proof. exact (TRANS (@lem2630467) (@lem2630473)). Qed.
Lemma lem2630475 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2630476 : term151 = term152.
Proof. exact (MK_COMB (@lem2630475) (@lem2630474)). Qed.
Lemma lem2630477 : term150 = term102.
Proof. exact (MK_COMB (@lem2630476) (@lem2630464)). Qed.
Lemma lem2630478 : term149 = term102.
Proof. exact (TRANS (@lem2630456) (@lem2630477)). Qed.
Lemma lem2630479 : term123 = term102.
Proof. exact (TRANS (@lem2630455) (@lem2630478)). Qed.
Lemma lem2630481 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2630482 : term102 = term97.
Proof. exact (@lem2630481 term97). Qed.
Lemma lem2630483 : term123 = term97.
Proof. exact (TRANS (@lem2630479) (@lem2630482)). Qed.
Lemma lem2630486 (m : int) : (term153 m) = (term153 m).
Proof. exact (eq_refl (term153 m)). Qed.
Lemma lem2630487 (m : int) : (term146 m) = (term154 m).
Proof. exact (MK_COMB (@lem2630486 m) (@lem2630483)). Qed.
Lemma lem2630488 (m : int) : (term145 m) = (term154 m).
Proof. exact (TRANS (@lem2630446 m) (@lem2630487 m)). Qed.
Lemma lem2630489 (n : int) : (term461 n) = (term461 n).
Proof. exact (eq_refl (term461 n)). Qed.
Lemma lem2630492 (n : int) (m : int) : (term460 n m) = (term462 n m).
Proof. exact (MK_COMB (@lem2630489 n) (@lem2630488 m)). Qed.
Lemma lem2630494 (n : int) (m : int) : (term459 n m) = (term462 n m).
Proof. exact (TRANS (@lem2630445 n m) (@lem2630492 n m)). Qed.
Lemma lem2630495 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2630496 (n : int) (m : int) : (term463 n m) = (term464 n m).
Proof. exact (MK_COMB (@lem2630495) (@lem2630494 n m)). Qed.
Lemma lem2630497 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2630498 (n : int) (m : int) : (term458 n m) = (term465 n m).
Proof. exact (MK_COMB (@lem2630496 n m) (@lem2630497)). Qed.
Lemma lem2630499 (n : int) (m : int) : (term373 m n) = (term465 n m).
Proof. exact (TRANS (@lem2630431 n m) (@lem2630498 n m)). Qed.
Lemma lem2630500 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630501 (m : int) : (term375 m) = (term466 m).
Proof. exact (MK_COMB (@lem2630500) (@lem2630430 m)). Qed.
Lemma lem2630502 (n : int) (m : int) : (term376 m n) = (term467 n m).
Proof. exact (MK_COMB (@lem2630501 m) (@lem2630499 n m)). Qed.
Lemma lem2630503 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630504 (n : int) : (term378 n) = (term378 n).
Proof. exact (MK_COMB (@lem2630503) (@lem2630382 n)). Qed.
Lemma lem2630505 (n : int) (m : int) : (term379 m n) = (term468 n m).
Proof. exact (MK_COMB (@lem2630504 n) (@lem2630502 n m)). Qed.
Lemma lem2630506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630507 (m : int) (n : int) : (term399 m n) = (term490 m n).
Proof. exact (MK_COMB (@lem2630506) (@lem2630334 m n)). Qed.
Lemma lem2630508 (n : int) (m : int) : (term400 m n) = (term491 n m).
Proof. exact (MK_COMB (@lem2630507 m n) (@lem2630505 n m)). Qed.
Lemma lem2630509 (m : int) : (term415 m) = (term492 m).
Proof. exact (fun_ext (fun n : int => @lem2630508 n m)). Qed.
Lemma lem2630510 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630511 (m : int) : (term430 m) = (term493 m).
Proof. exact (MK_COMB (@lem2630510) (@lem2630509 m)). Qed.
Lemma lem2630512 : term437 = term494.
Proof. exact (fun_ext (fun m : int => @lem2630511 m)). Qed.
Lemma lem2630513 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630514 : term452 = term495.
Proof. exact (MK_COMB (@lem2630513) (@lem2630512)). Qed.
Lemma lem2630515 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630516 : term449 = term496.
Proof. exact (MK_COMB (@lem2630515) (@lem2629975)). Qed.
Lemma lem2630517 : term453 = term497.
Proof. exact (MK_COMB (@lem2630516) (@lem2630514)). Qed.
Lemma lem2630518 : term407 = term497.
Proof. exact (TRANS (@lem2629519) (@lem2630517)). Qed.
Lemma lem2630625 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term409 A P Q) = (term408 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem2630626 (P : int -> Prop) (Q : int -> Prop) : (term411 P Q) = (term410 P Q).
Proof. exact (@lem2630625 int P Q). Qed.
Lemma lem2630627 : term498 = term499.
Proof. exact (@lem2630626 term486 term494). Qed.
Lemma lem2630628 (m : int) : (term500 m) = (term485 m).
Proof. exact (eq_refl (term500 m)). Qed.
Lemma lem2630629 : term501 = term486.
Proof. exact (fun_ext (fun m : int => @lem2630628 m)). Qed.
Lemma lem2630630 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630631 : term502 = term487.
Proof. exact (MK_COMB (@lem2630630) (@lem2630629)). Qed.
Lemma lem2630632 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630633 : term503 = term496.
Proof. exact (MK_COMB (@lem2630632) (@lem2630631)). Qed.
Lemma lem2630634 (m : int) : (term504 m) = (term493 m).
Proof. exact (eq_refl (term504 m)). Qed.
Lemma lem2630635 : term505 = term494.
Proof. exact (fun_ext (fun m : int => @lem2630634 m)). Qed.
Lemma lem2630636 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630637 : term506 = term495.
Proof. exact (MK_COMB (@lem2630636) (@lem2630635)). Qed.
Lemma lem2630638 : term498 = term497.
Proof. exact (MK_COMB (@lem2630633) (@lem2630637)). Qed.
Lemma lem2630639 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2630640 : term507 = term508.
Proof. exact (MK_COMB (@lem2630639) (@lem2630638)). Qed.
Lemma lem2630641 (m : int) : (term500 m) = (term485 m).
Proof. exact (eq_refl (term500 m)). Qed.
Lemma lem2630642 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630643 (m : int) : (term509 m) = (term510 m).
Proof. exact (MK_COMB (@lem2630642) (@lem2630641 m)). Qed.
Lemma lem2630644 (m : int) : (term504 m) = (term493 m).
Proof. exact (eq_refl (term504 m)). Qed.
Lemma lem2630645 (m : int) : (term511 m) = (term512 m).
Proof. exact (MK_COMB (@lem2630643 m) (@lem2630644 m)). Qed.
Lemma lem2630646 : term513 = term514.
Proof. exact (fun_ext (fun m : int => @lem2630645 m)). Qed.
Lemma lem2630647 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630648 : term499 = term515.
Proof. exact (MK_COMB (@lem2630647) (@lem2630646)). Qed.
Lemma lem2630649 : (term498 = term499) = (term497 = term515).
Proof. exact (MK_COMB (@lem2630640) (@lem2630648)). Qed.
Lemma lem2630650 : term497 = term515.
Proof. exact (EQ_MP (@lem2630649) (@lem2630627)). Qed.
Lemma lem2630652 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term409 A P Q) = (term408 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem2630653 (P : int -> Prop) (Q : int -> Prop) : (term411 P Q) = (term410 P Q).
Proof. exact (@lem2630652 int P Q). Qed.
Lemma lem2630654 (m : int) : (term516 m) = (term517 m).
Proof. exact (@lem2630653 (term484 m) (term492 m)). Qed.
Lemma lem2630655 (n : int) (m : int) : (term518 m n) = (term483 n m).
Proof. exact (eq_refl (term518 m n)). Qed.
Lemma lem2630656 (m : int) : (term519 m) = (term484 m).
Proof. exact (fun_ext (fun n : int => @lem2630655 n m)). Qed.
Lemma lem2630657 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630658 (m : int) : (term520 m) = (term485 m).
Proof. exact (MK_COMB (@lem2630657) (@lem2630656 m)). Qed.
Lemma lem2630659 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630660 (m : int) : (term521 m) = (term510 m).
Proof. exact (MK_COMB (@lem2630659) (@lem2630658 m)). Qed.
Lemma lem2630661 (n : int) (m : int) : (term522 m n) = (term491 n m).
Proof. exact (eq_refl (term522 m n)). Qed.
Lemma lem2630662 (m : int) : (term523 m) = (term492 m).
Proof. exact (fun_ext (fun n : int => @lem2630661 n m)). Qed.
Lemma lem2630663 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630664 (m : int) : (term524 m) = (term493 m).
Proof. exact (MK_COMB (@lem2630663) (@lem2630662 m)). Qed.
Lemma lem2630665 (m : int) : (term516 m) = (term512 m).
Proof. exact (MK_COMB (@lem2630660 m) (@lem2630664 m)). Qed.
Lemma lem2630666 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem2630667 (m : int) : (term525 m) = (term526 m).
Proof. exact (MK_COMB (@lem2630666) (@lem2630665 m)). Qed.
Lemma lem2630668 (n : int) (m : int) : (term518 m n) = (term483 n m).
Proof. exact (eq_refl (term518 m n)). Qed.
Lemma lem2630669 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630670 (n : int) (m : int) : (term527 m n) = (term528 n m).
Proof. exact (MK_COMB (@lem2630669) (@lem2630668 n m)). Qed.
Lemma lem2630671 (n : int) (m : int) : (term522 m n) = (term491 n m).
Proof. exact (eq_refl (term522 m n)). Qed.
Lemma lem2630672 (n : int) (m : int) : (term529 m n) = (term530 n m).
Proof. exact (MK_COMB (@lem2630670 n m) (@lem2630671 n m)). Qed.
Lemma lem2630673 (m : int) : (term531 m) = (term532 m).
Proof. exact (fun_ext (fun n : int => @lem2630672 n m)). Qed.
Lemma lem2630674 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630675 (m : int) : (term517 m) = (term533 m).
Proof. exact (MK_COMB (@lem2630674) (@lem2630673 m)). Qed.
Lemma lem2630676 (m : int) : ((term516 m) = (term517 m)) = ((term512 m) = (term533 m)).
Proof. exact (MK_COMB (@lem2630667 m) (@lem2630675 m)). Qed.
Lemma lem2630677 (m : int) : (term512 m) = (term533 m).
Proof. exact (EQ_MP (@lem2630676 m) (@lem2630654 m)). Qed.
Lemma lem2630678 : term514 = term534.
Proof. exact (fun_ext (fun m : int => @lem2630677 m)). Qed.
Lemma lem2630679 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2630680 : term515 = term535.
Proof. exact (MK_COMB (@lem2630679) (@lem2630678)). Qed.
Lemma lem2630682 : term497 = term535.
Proof. exact (TRANS (@lem2630650) (@lem2630680)). Qed.
Lemma lem2630685 : term407 = term535.
Proof. exact (TRANS (@lem2630518) (@lem2630682)). Qed.
Lemma lem2630696 (n : int) (m : int) : (term468 n m) = (term468 n m).
Proof. exact (eq_refl (term468 n m)). Qed.
Lemma lem2630701 (n : int) : (term169 n) = (term169 n).
Proof. exact (eq_refl (term169 n)). Qed.
Lemma lem2630715 (n : int) (m : int) : (term481 n m) = (term536 n m).
Proof. exact (@lem19158 (term158 m) (term169 n) (term478 n m)). Qed.
Lemma lem2630722 (n : int) (m : int) : (term537 n m) = (term538 n m).
Proof. exact (@lem19367 (term158 n) (term167 n) (term478 n m)). Qed.
Lemma lem2630729 (n : int) (m : int) : (term539 n m) = (term540 n m).
Proof. exact (@lem19367 (term158 n) (term167 n) (term158 m)). Qed.
Lemma lem2630730 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630731 (n : int) (m : int) : (term541 n m) = (term542 n m).
Proof. exact (MK_COMB (@lem2630730) (@lem2630729 n m)). Qed.
Lemma lem2630732 (n : int) (m : int) : (term536 n m) = (term543 n m).
Proof. exact (MK_COMB (@lem2630731 n m) (@lem2630722 n m)). Qed.
Lemma lem2630734 (n : int) (m : int) : (term481 n m) = (term543 n m).
Proof. exact (TRANS (@lem2630715 n m) (@lem2630732 n m)). Qed.
Lemma lem2630735 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630736 (n : int) (m : int) : (term488 n m) = (term544 n m).
Proof. exact (MK_COMB (@lem2630735) (@lem2630734 n m)). Qed.
Lemma lem2630737 (m : int) (n : int) : (term489 m n) = (term545 m n).
Proof. exact (MK_COMB (@lem2630736 n m) (@lem2630701 n)). Qed.
Lemma lem2630738 (m : int) (n : int) : (term545 m n) = (term546 m n).
Proof. exact (@lem19158 (term158 n) (term543 n m) (term167 n)). Qed.
Lemma lem2630739 (m : int) (n : int) : (term547 m n) = (term548 m n).
Proof. exact (@lem19367 (term540 n m) (term538 n m) (term167 n)). Qed.
Lemma lem2630746 (m : int) (n : int) : (term549 m n) = (term550 m n).
Proof. exact (@lem19367 (term551 n m) (term552 n m) (term167 n)). Qed.
Lemma lem2630753 (m : int) (n : int) : (term553 m n) = (term554 m n).
Proof. exact (@lem19367 (term555 n m) (term556 n m) (term167 n)). Qed.
Lemma lem2630754 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630755 (m : int) (n : int) : (term557 m n) = (term558 m n).
Proof. exact (MK_COMB (@lem2630754) (@lem2630753 m n)). Qed.
Lemma lem2630756 (m : int) (n : int) : (term548 m n) = (term559 m n).
Proof. exact (MK_COMB (@lem2630755 m n) (@lem2630746 m n)). Qed.
Lemma lem2630757 (m : int) (n : int) : (term547 m n) = (term559 m n).
Proof. exact (TRANS (@lem2630739 m n) (@lem2630756 m n)). Qed.
Lemma lem2630758 (m : int) (n : int) : (term560 m n) = (term561 m n).
Proof. exact (@lem19367 (term540 n m) (term538 n m) (term158 n)). Qed.
Lemma lem2630765 (m : int) (n : int) : (term562 m n) = (term563 m n).
Proof. exact (@lem19367 (term551 n m) (term552 n m) (term158 n)). Qed.
Lemma lem2630772 (m : int) (n : int) : (term564 m n) = (term565 m n).
Proof. exact (@lem19367 (term555 n m) (term556 n m) (term158 n)). Qed.
Lemma lem2630773 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630774 (m : int) (n : int) : (term566 m n) = (term567 m n).
Proof. exact (MK_COMB (@lem2630773) (@lem2630772 m n)). Qed.
Lemma lem2630775 (m : int) (n : int) : (term561 m n) = (term568 m n).
Proof. exact (MK_COMB (@lem2630774 m n) (@lem2630765 m n)). Qed.
Lemma lem2630776 (m : int) (n : int) : (term560 m n) = (term568 m n).
Proof. exact (TRANS (@lem2630758 m n) (@lem2630775 m n)). Qed.
Lemma lem2630777 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630778 (m : int) (n : int) : (term569 m n) = (term570 m n).
Proof. exact (MK_COMB (@lem2630777) (@lem2630776 m n)). Qed.
Lemma lem2630779 (m : int) (n : int) : (term546 m n) = (term571 m n).
Proof. exact (MK_COMB (@lem2630778 m n) (@lem2630757 m n)). Qed.
Lemma lem2630780 (m : int) (n : int) : (term545 m n) = (term571 m n).
Proof. exact (TRANS (@lem2630738 m n) (@lem2630779 m n)). Qed.
Lemma lem2630781 (m : int) (n : int) : (term489 m n) = (term571 m n).
Proof. exact (TRANS (@lem2630737 m n) (@lem2630780 m n)). Qed.
Lemma lem2630782 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2630783 (m : int) (n : int) : (term490 m n) = (term572 m n).
Proof. exact (MK_COMB (@lem2630782) (@lem2630781 m n)). Qed.
Lemma lem2630784 (n : int) (m : int) : (term491 n m) = (term573 n m).
Proof. exact (MK_COMB (@lem2630783 m n) (@lem2630696 n m)). Qed.
Lemma lem2630785 (n : int) (m : int) : (term573 n m) = (term574 n m).
Proof. exact (@lem19158 ((real_of_int n) = term38) (term571 m n) (term467 n m)). Qed.
Lemma lem2630786 (n : int) (m : int) : (term575 n m) = (term576 n m).
Proof. exact (@lem19367 (term568 m n) (term559 m n) (term467 n m)). Qed.
Lemma lem2630787 (n : int) (m : int) : (term577 n m) = (term578 n m).
Proof. exact (@lem19367 (term554 m n) (term550 m n) (term467 n m)). Qed.
Lemma lem2630794 (n : int) (m : int) : (term579 n m) = (term580 n m).
Proof. exact (@lem19367 (term581 m n) (term582 m n) (term467 n m)). Qed.
Lemma lem2630801 (n : int) (m : int) : (term583 n m) = (term584 n m).
Proof. exact (@lem19367 (term585 m n) (term586 m n) (term467 n m)). Qed.
Lemma lem2630802 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630803 (n : int) (m : int) : (term587 n m) = (term588 n m).
Proof. exact (MK_COMB (@lem2630802) (@lem2630801 n m)). Qed.
Lemma lem2630804 (n : int) (m : int) : (term578 n m) = (term589 n m).
Proof. exact (MK_COMB (@lem2630803 n m) (@lem2630794 n m)). Qed.
Lemma lem2630805 (n : int) (m : int) : (term577 n m) = (term589 n m).
Proof. exact (TRANS (@lem2630787 n m) (@lem2630804 n m)). Qed.
Lemma lem2630806 (n : int) (m : int) : (term590 n m) = (term591 n m).
Proof. exact (@lem19367 (term565 m n) (term563 m n) (term467 n m)). Qed.
Lemma lem2630813 (n : int) (m : int) : (term592 n m) = (term593 n m).
Proof. exact (@lem19367 (term594 m n) (term595 m n) (term467 n m)). Qed.
Lemma lem2630820 (n : int) (m : int) : (term596 n m) = (term597 n m).
Proof. exact (@lem19367 (term598 m n) (term599 m n) (term467 n m)). Qed.
Lemma lem2630821 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630822 (n : int) (m : int) : (term600 n m) = (term601 n m).
Proof. exact (MK_COMB (@lem2630821) (@lem2630820 n m)). Qed.
Lemma lem2630823 (n : int) (m : int) : (term591 n m) = (term602 n m).
Proof. exact (MK_COMB (@lem2630822 n m) (@lem2630813 n m)). Qed.
Lemma lem2630824 (n : int) (m : int) : (term590 n m) = (term602 n m).
Proof. exact (TRANS (@lem2630806 n m) (@lem2630823 n m)). Qed.
Lemma lem2630825 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630826 (n : int) (m : int) : (term603 n m) = (term604 n m).
Proof. exact (MK_COMB (@lem2630825) (@lem2630824 n m)). Qed.
Lemma lem2630827 (n : int) (m : int) : (term576 n m) = (term605 n m).
Proof. exact (MK_COMB (@lem2630826 n m) (@lem2630805 n m)). Qed.
Lemma lem2630828 (n : int) (m : int) : (term575 n m) = (term605 n m).
Proof. exact (TRANS (@lem2630786 n m) (@lem2630827 n m)). Qed.
Lemma lem2630829 (m : int) (n : int) : (term606 m n) = (term607 m n).
Proof. exact (@lem19367 (term568 m n) (term559 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630830 (m : int) (n : int) : (term608 m n) = (term609 m n).
Proof. exact (@lem19367 (term554 m n) (term550 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630837 (m : int) (n : int) : (term610 m n) = (term611 m n).
Proof. exact (@lem19367 (term581 m n) (term582 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630844 (m : int) (n : int) : (term612 m n) = (term613 m n).
Proof. exact (@lem19367 (term585 m n) (term586 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630845 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630846 (m : int) (n : int) : (term614 m n) = (term615 m n).
Proof. exact (MK_COMB (@lem2630845) (@lem2630844 m n)). Qed.
Lemma lem2630847 (m : int) (n : int) : (term609 m n) = (term616 m n).
Proof. exact (MK_COMB (@lem2630846 m n) (@lem2630837 m n)). Qed.
Lemma lem2630848 (m : int) (n : int) : (term608 m n) = (term616 m n).
Proof. exact (TRANS (@lem2630830 m n) (@lem2630847 m n)). Qed.
Lemma lem2630849 (m : int) (n : int) : (term617 m n) = (term618 m n).
Proof. exact (@lem19367 (term565 m n) (term563 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630856 (m : int) (n : int) : (term619 m n) = (term620 m n).
Proof. exact (@lem19367 (term594 m n) (term595 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630863 (m : int) (n : int) : (term621 m n) = (term622 m n).
Proof. exact (@lem19367 (term598 m n) (term599 m n) ((real_of_int n) = term38)). Qed.
Lemma lem2630864 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630865 (m : int) (n : int) : (term623 m n) = (term624 m n).
Proof. exact (MK_COMB (@lem2630864) (@lem2630863 m n)). Qed.
Lemma lem2630866 (m : int) (n : int) : (term618 m n) = (term625 m n).
Proof. exact (MK_COMB (@lem2630865 m n) (@lem2630856 m n)). Qed.
Lemma lem2630867 (m : int) (n : int) : (term617 m n) = (term625 m n).
Proof. exact (TRANS (@lem2630849 m n) (@lem2630866 m n)). Qed.
Lemma lem2630868 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630869 (m : int) (n : int) : (term626 m n) = (term627 m n).
Proof. exact (MK_COMB (@lem2630868) (@lem2630867 m n)). Qed.
Lemma lem2630870 (m : int) (n : int) : (term607 m n) = (term628 m n).
Proof. exact (MK_COMB (@lem2630869 m n) (@lem2630848 m n)). Qed.
Lemma lem2630871 (m : int) (n : int) : (term606 m n) = (term628 m n).
Proof. exact (TRANS (@lem2630829 m n) (@lem2630870 m n)). Qed.
Lemma lem2630872 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630873 (m : int) (n : int) : (term629 m n) = (term630 m n).
Proof. exact (MK_COMB (@lem2630872) (@lem2630871 m n)). Qed.
Lemma lem2630874 (n : int) (m : int) : (term574 n m) = (term631 n m).
Proof. exact (MK_COMB (@lem2630873 m n) (@lem2630828 n m)). Qed.
Lemma lem2630875 (n : int) (m : int) : (term573 n m) = (term631 n m).
Proof. exact (TRANS (@lem2630785 n m) (@lem2630874 n m)). Qed.
Lemma lem2630876 (n : int) (m : int) : (term491 n m) = (term631 n m).
Proof. exact (TRANS (@lem2630784 n m) (@lem2630875 n m)). Qed.
Lemma lem2630890 (n : int) (m : int) : (term481 n m) = (term536 n m).
Proof. exact (@lem19158 (term158 m) (term169 n) (term478 n m)). Qed.
Lemma lem2630897 (n : int) (m : int) : (term537 n m) = (term538 n m).
Proof. exact (@lem19367 (term158 n) (term167 n) (term478 n m)). Qed.
Lemma lem2630904 (n : int) (m : int) : (term539 n m) = (term540 n m).
Proof. exact (@lem19367 (term158 n) (term167 n) (term158 m)). Qed.
Lemma lem2630905 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630906 (n : int) (m : int) : (term541 n m) = (term542 n m).
Proof. exact (MK_COMB (@lem2630905) (@lem2630904 n m)). Qed.
Lemma lem2630907 (n : int) (m : int) : (term536 n m) = (term543 n m).
Proof. exact (MK_COMB (@lem2630906 n m) (@lem2630897 n m)). Qed.
Lemma lem2630909 (n : int) (m : int) : (term481 n m) = (term543 n m).
Proof. exact (TRANS (@lem2630890 n m) (@lem2630907 n m)). Qed.
Lemma lem2630926 (m : int) (n : int) : (term482 m n) = (term482 m n).
Proof. exact (eq_refl (term482 m n)). Qed.
Lemma lem2630927 (n : int) (m : int) : (term483 n m) = (term632 n m).
Proof. exact (MK_COMB (@lem2630926 m n) (@lem2630909 n m)). Qed.
Lemma lem2630928 (n : int) (m : int) : (term632 n m) = (term633 n m).
Proof. exact (@lem19158 (term540 n m) (term470 m n) (term538 n m)). Qed.
Lemma lem2630929 (n : int) (m : int) : (term634 n m) = (term635 n m).
Proof. exact (@lem19158 (term551 n m) (term470 m n) (term552 n m)). Qed.
Lemma lem2630930 (n : int) (m : int) : (term636 n m) = (term637 n m).
Proof. exact (@lem19367 (term468 n m) ((real_of_int n) = term38) (term552 n m)). Qed.
Lemma lem2630931 (n : int) (m : int) : (term638 n m) = (term638 n m).
Proof. exact (eq_refl (term638 n m)). Qed.
Lemma lem2630938 (n : int) (m : int) : (term639 n m) = (term640 n m).
Proof. exact (@lem19367 ((real_of_int n) = term38) (term467 n m) (term552 n m)). Qed.
Lemma lem2630939 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630940 (n : int) (m : int) : (term641 n m) = (term642 n m).
Proof. exact (MK_COMB (@lem2630939) (@lem2630938 n m)). Qed.
Lemma lem2630941 (n : int) (m : int) : (term637 n m) = (term643 n m).
Proof. exact (MK_COMB (@lem2630940 n m) (@lem2630931 n m)). Qed.
Lemma lem2630942 (n : int) (m : int) : (term636 n m) = (term643 n m).
Proof. exact (TRANS (@lem2630930 n m) (@lem2630941 n m)). Qed.
Lemma lem2630943 (n : int) (m : int) : (term644 n m) = (term645 n m).
Proof. exact (@lem19367 (term468 n m) ((real_of_int n) = term38) (term551 n m)). Qed.
Lemma lem2630944 (n : int) (m : int) : (term646 n m) = (term646 n m).
Proof. exact (eq_refl (term646 n m)). Qed.
Lemma lem2630951 (n : int) (m : int) : (term647 n m) = (term648 n m).
Proof. exact (@lem19367 ((real_of_int n) = term38) (term467 n m) (term551 n m)). Qed.
Lemma lem2630952 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630953 (n : int) (m : int) : (term649 n m) = (term650 n m).
Proof. exact (MK_COMB (@lem2630952) (@lem2630951 n m)). Qed.
Lemma lem2630954 (n : int) (m : int) : (term645 n m) = (term651 n m).
Proof. exact (MK_COMB (@lem2630953 n m) (@lem2630944 n m)). Qed.
Lemma lem2630955 (n : int) (m : int) : (term644 n m) = (term651 n m).
Proof. exact (TRANS (@lem2630943 n m) (@lem2630954 n m)). Qed.
Lemma lem2630956 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630957 (n : int) (m : int) : (term652 n m) = (term653 n m).
Proof. exact (MK_COMB (@lem2630956) (@lem2630955 n m)). Qed.
Lemma lem2630958 (n : int) (m : int) : (term635 n m) = (term654 n m).
Proof. exact (MK_COMB (@lem2630957 n m) (@lem2630942 n m)). Qed.
Lemma lem2630959 (n : int) (m : int) : (term634 n m) = (term654 n m).
Proof. exact (TRANS (@lem2630929 n m) (@lem2630958 n m)). Qed.
Lemma lem2630960 (n : int) (m : int) : (term655 n m) = (term656 n m).
Proof. exact (@lem19158 (term555 n m) (term470 m n) (term556 n m)). Qed.
Lemma lem2630961 (n : int) (m : int) : (term657 n m) = (term658 n m).
Proof. exact (@lem19367 (term468 n m) ((real_of_int n) = term38) (term556 n m)). Qed.
Lemma lem2630962 (n : int) (m : int) : (term659 n m) = (term659 n m).
Proof. exact (eq_refl (term659 n m)). Qed.
Lemma lem2630969 (n : int) (m : int) : (term660 n m) = (term661 n m).
Proof. exact (@lem19367 ((real_of_int n) = term38) (term467 n m) (term556 n m)). Qed.
Lemma lem2630970 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630971 (n : int) (m : int) : (term662 n m) = (term663 n m).
Proof. exact (MK_COMB (@lem2630970) (@lem2630969 n m)). Qed.
Lemma lem2630972 (n : int) (m : int) : (term658 n m) = (term664 n m).
Proof. exact (MK_COMB (@lem2630971 n m) (@lem2630962 n m)). Qed.
Lemma lem2630973 (n : int) (m : int) : (term657 n m) = (term664 n m).
Proof. exact (TRANS (@lem2630961 n m) (@lem2630972 n m)). Qed.
Lemma lem2630974 (n : int) (m : int) : (term665 n m) = (term666 n m).
Proof. exact (@lem19367 (term468 n m) ((real_of_int n) = term38) (term555 n m)). Qed.
Lemma lem2630975 (n : int) (m : int) : (term667 n m) = (term667 n m).
Proof. exact (eq_refl (term667 n m)). Qed.
Lemma lem2630982 (n : int) (m : int) : (term668 n m) = (term669 n m).
Proof. exact (@lem19367 ((real_of_int n) = term38) (term467 n m) (term555 n m)). Qed.
Lemma lem2630983 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630984 (n : int) (m : int) : (term670 n m) = (term671 n m).
Proof. exact (MK_COMB (@lem2630983) (@lem2630982 n m)). Qed.
Lemma lem2630985 (n : int) (m : int) : (term666 n m) = (term672 n m).
Proof. exact (MK_COMB (@lem2630984 n m) (@lem2630975 n m)). Qed.
Lemma lem2630986 (n : int) (m : int) : (term665 n m) = (term672 n m).
Proof. exact (TRANS (@lem2630974 n m) (@lem2630985 n m)). Qed.
Lemma lem2630987 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630988 (n : int) (m : int) : (term673 n m) = (term674 n m).
Proof. exact (MK_COMB (@lem2630987) (@lem2630986 n m)). Qed.
Lemma lem2630989 (n : int) (m : int) : (term656 n m) = (term675 n m).
Proof. exact (MK_COMB (@lem2630988 n m) (@lem2630973 n m)). Qed.
Lemma lem2630990 (n : int) (m : int) : (term655 n m) = (term675 n m).
Proof. exact (TRANS (@lem2630960 n m) (@lem2630989 n m)). Qed.
Lemma lem2630991 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630992 (n : int) (m : int) : (term676 n m) = (term677 n m).
Proof. exact (MK_COMB (@lem2630991) (@lem2630990 n m)). Qed.
Lemma lem2630993 (n : int) (m : int) : (term633 n m) = (term678 n m).
Proof. exact (MK_COMB (@lem2630992 n m) (@lem2630959 n m)). Qed.
Lemma lem2630994 (n : int) (m : int) : (term632 n m) = (term678 n m).
Proof. exact (TRANS (@lem2630928 n m) (@lem2630993 n m)). Qed.
Lemma lem2630995 (n : int) (m : int) : (term483 n m) = (term678 n m).
Proof. exact (TRANS (@lem2630927 n m) (@lem2630994 n m)). Qed.
Lemma lem2630996 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2630997 (n : int) (m : int) : (term528 n m) = (term679 n m).
Proof. exact (MK_COMB (@lem2630996) (@lem2630995 n m)). Qed.
Lemma lem2630998 (n : int) (m : int) : (term530 n m) = (term680 n m).
Proof. exact (MK_COMB (@lem2630997 n m) (@lem2630876 n m)). Qed.
Lemma lem2630999 (m : int) : (term532 m) = (term681 m).
Proof. exact (fun_ext (fun n : int => @lem2630998 n m)). Qed.
Lemma lem2631000 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2631001 (m : int) : (term533 m) = (term682 m).
Proof. exact (MK_COMB (@lem2631000) (@lem2630999 m)). Qed.
Lemma lem2631002 : term534 = term683.
Proof. exact (fun_ext (fun m : int => @lem2631001 m)). Qed.
Lemma lem2631003 : (@ex int) = (@ex int).
Proof. exact (eq_refl (@ex int)). Qed.
Lemma lem2631004 : term535 = term684.
Proof. exact (MK_COMB (@lem2631003) (@lem2631002)). Qed.
Lemma lem2631005 : term407 = term684.
Proof. exact (TRANS (@lem2630685) (@lem2631004)). Qed.
Lemma lem2631010 (n : int) (m : int) : (term685 m n) = (term686 n m).
Proof. exact (eq_refl (term685 m n)). Qed.
Lemma lem2631011 (m : int) (n : int) : (term686 n m) = (term685 m n).
Proof. exact (SYM (@lem2631010 n m)). Qed.
Lemma lem2631012 (m : int) (n : int) : (term685 m n) = (term687 m n).
Proof. exact (@lem1482981 (term688 n m) (real_of_int n)). Qed.
Lemma lem2631013 (m : int) (n : int) : (term686 n m) = (term687 m n).
Proof. exact (TRANS (@lem2631011 m n) (@lem2631012 m n)). Qed.
Lemma lem2631014 (n : int) (m : int) : (term689 m n) = (term690 n m).
Proof. exact (eq_refl (term689 m n)). Qed.
Lemma lem2631015 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2631016 (n : int) (m : int) : (term692 m n) = (term693 n m).
Proof. exact (MK_COMB (@lem2631015 n) (@lem2631014 n m)). Qed.
Lemma lem2631017 (n : int) (m : int) : (term694 m n) = (term695 n m).
Proof. exact (eq_refl (term694 m n)). Qed.
Lemma lem2631018 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2631019 (n : int) (m : int) : (term696 m n) = (term697 n m).
Proof. exact (MK_COMB (@lem2631018 n) (@lem2631017 n m)). Qed.
Lemma lem2631020 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631021 (n : int) (m : int) : (term698 m n) = (term699 n m).
Proof. exact (MK_COMB (@lem2631020) (@lem2631019 n m)). Qed.
Lemma lem2631022 (n : int) (m : int) : (term687 m n) = (term700 n m).
Proof. exact (MK_COMB (@lem2631021 n m) (@lem2631016 n m)). Qed.
Lemma lem2631023 (n : int) (m : int) : (term701 n m) = (term701 n m).
Proof. exact (eq_refl (term701 n m)). Qed.
Lemma lem2631024 (n : int) (m : int) : ((term686 n m) = (term687 m n)) = ((term686 n m) = (term700 n m)).
Proof. exact (MK_COMB (@lem2631023 n m) (@lem2631022 n m)). Qed.
Lemma lem2631025 (n : int) (m : int) : (term686 n m) = (term700 n m).
Proof. exact (EQ_MP (@lem2631024 n m) (@lem2631013 m n)). Qed.
Lemma lem2631026 (n : int) : (term457 n) = (term454 n).
Proof. exact (@lem1988291 (real_of_int n) term38). Qed.
Lemma lem2631032 (n : int) : (term210 n) = (term211 n).
Proof. exact (@lem1982792 (real_of_int n) term38). Qed.
Lemma lem2631034 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631035 : term38 = term134.
Proof. exact (@lem2631034 (NUMERAL 0)). Qed.
Lemma lem2631037 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631038 : term97 = term102.
Proof. exact (@lem2631037 term32). Qed.
Lemma lem2631039 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631040 : term147 = term148.
Proof. exact (MK_COMB (@lem2631039) (@lem2631038)). Qed.
Lemma lem2631041 : term212 = term213.
Proof. exact (MK_COMB (@lem2631040) (@lem2631035)). Qed.
Lemma lem2631042 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631044 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631045 : term117 = term118.
Proof. exact (@lem2631044 term32 term32). Qed.
Lemma lem2631046 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631047 : term120 = term32.
Proof. exact (EQ_MP (@lem2631046) (@lem940073)). Qed.
Lemma lem2631048 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631049 : term118 = term31.
Proof. exact (MK_COMB (@lem2631048) (@lem2631047)). Qed.
Lemma lem2631050 : term117 = term31.
Proof. exact (TRANS (@lem2631045) (@lem2631049)). Qed.
Lemma lem2631052 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631053 : term212 = term38.
Proof. exact (@lem2631052 term32). Qed.
Lemma lem2631054 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631055 : term216 = term217.
Proof. exact (MK_COMB (@lem2631054) (@lem2631053)). Qed.
Lemma lem2631056 : term214 = term134.
Proof. exact (MK_COMB (@lem2631055) (@lem2631050)). Qed.
Lemma lem2631057 : term213 = term134.
Proof. exact (TRANS (@lem2631042) (@lem2631056)). Qed.
Lemma lem2631058 : term212 = term134.
Proof. exact (TRANS (@lem2631041) (@lem2631057)). Qed.
Lemma lem2631060 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631061 : term134 = term38.
Proof. exact (@lem2631060 term38). Qed.
Lemma lem2631062 : term212 = term38.
Proof. exact (TRANS (@lem2631058) (@lem2631061)). Qed.
Lemma lem2631063 (n : int) : (term33 n) = (term33 n).
Proof. exact (eq_refl (term33 n)). Qed.
Lemma lem2631064 (n : int) : (term211 n) = (term218 n).
Proof. exact (MK_COMB (@lem2631063 n) (@lem2631062)). Qed.
Lemma lem2631065 (n : int) : (term218 n) = (real_of_int n).
Proof. exact (@lem1982723 (real_of_int n)). Qed.
Lemma lem2631066 (n : int) : (term211 n) = (real_of_int n).
Proof. exact (TRANS (@lem2631064 n) (@lem2631065 n)). Qed.
Lemma lem2631068 (n : int) : (term210 n) = (real_of_int n).
Proof. exact (TRANS (@lem2631032 n) (@lem2631066 n)). Qed.
Lemma lem2631069 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631070 (n : int) : (term455 n) = (term456 n).
Proof. exact (MK_COMB (@lem2631069) (@lem2631068 n)). Qed.
Lemma lem2631071 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631072 (n : int) : (term454 n) = (term457 n).
Proof. exact (MK_COMB (@lem2631070 n) (@lem2631071)). Qed.
Lemma lem2631073 (n : int) : (term457 n) = (term457 n).
Proof. exact (TRANS (@lem2631026 n) (@lem2631072 n)). Qed.
Lemma lem2631074 (m : int) : (term457 m) = (term454 m).
Proof. exact (@lem1988291 (real_of_int m) term38). Qed.
Lemma lem2631080 (m : int) : (term210 m) = (term211 m).
Proof. exact (@lem1982792 (real_of_int m) term38). Qed.
Lemma lem2631082 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631083 : term38 = term134.
Proof. exact (@lem2631082 (NUMERAL 0)). Qed.
Lemma lem2631085 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631086 : term97 = term102.
Proof. exact (@lem2631085 term32). Qed.
Lemma lem2631087 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631088 : term147 = term148.
Proof. exact (MK_COMB (@lem2631087) (@lem2631086)). Qed.
Lemma lem2631089 : term212 = term213.
Proof. exact (MK_COMB (@lem2631088) (@lem2631083)). Qed.
Lemma lem2631090 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631092 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631093 : term117 = term118.
Proof. exact (@lem2631092 term32 term32). Qed.
Lemma lem2631094 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631095 : term120 = term32.
Proof. exact (EQ_MP (@lem2631094) (@lem940073)). Qed.
Lemma lem2631096 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631097 : term118 = term31.
Proof. exact (MK_COMB (@lem2631096) (@lem2631095)). Qed.
Lemma lem2631098 : term117 = term31.
Proof. exact (TRANS (@lem2631093) (@lem2631097)). Qed.
Lemma lem2631100 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631101 : term212 = term38.
Proof. exact (@lem2631100 term32). Qed.
Lemma lem2631102 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631103 : term216 = term217.
Proof. exact (MK_COMB (@lem2631102) (@lem2631101)). Qed.
Lemma lem2631104 : term214 = term134.
Proof. exact (MK_COMB (@lem2631103) (@lem2631098)). Qed.
Lemma lem2631105 : term213 = term134.
Proof. exact (TRANS (@lem2631090) (@lem2631104)). Qed.
Lemma lem2631106 : term212 = term134.
Proof. exact (TRANS (@lem2631089) (@lem2631105)). Qed.
Lemma lem2631108 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631109 : term134 = term38.
Proof. exact (@lem2631108 term38). Qed.
Lemma lem2631110 : term212 = term38.
Proof. exact (TRANS (@lem2631106) (@lem2631109)). Qed.
Lemma lem2631111 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631112 (m : int) : (term211 m) = (term218 m).
Proof. exact (MK_COMB (@lem2631111 m) (@lem2631110)). Qed.
Lemma lem2631113 (m : int) : (term218 m) = (real_of_int m).
Proof. exact (@lem1982723 (real_of_int m)). Qed.
Lemma lem2631114 (m : int) : (term211 m) = (real_of_int m).
Proof. exact (TRANS (@lem2631112 m) (@lem2631113 m)). Qed.
Lemma lem2631116 (m : int) : (term210 m) = (real_of_int m).
Proof. exact (TRANS (@lem2631080 m) (@lem2631114 m)). Qed.
Lemma lem2631117 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631118 (m : int) : (term455 m) = (term456 m).
Proof. exact (MK_COMB (@lem2631117) (@lem2631116 m)). Qed.
Lemma lem2631119 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631120 (m : int) : (term454 m) = (term457 m).
Proof. exact (MK_COMB (@lem2631118 m) (@lem2631119)). Qed.
Lemma lem2631121 (m : int) : (term457 m) = (term457 m).
Proof. exact (TRANS (@lem2631074 m) (@lem2631120 m)). Qed.
Lemma lem2631122 (n : int) (m : int) : (term702 n m) = (term703 n m).
Proof. exact (@lem1988291 (term704 n m) term38). Qed.
Lemma lem2631123 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631146 (m : int) (n : int) : (term704 n m) = (term196 m n).
Proof. exact (@lem1982757 (term94 m) (real_of_int n) term97). Qed.
Lemma lem2631147 : real_sub = real_sub.
Proof. exact (eq_refl real_sub). Qed.
Lemma lem2631148 (m : int) (n : int) : (term705 n m) = (term706 m n).
Proof. exact (MK_COMB (@lem2631147) (@lem2631146 m n)). Qed.
Lemma lem2631149 (m : int) (n : int) : (term707 n m) = (term708 m n).
Proof. exact (MK_COMB (@lem2631148 m n) (@lem2631123)). Qed.
Lemma lem2631150 (m : int) (n : int) : (term708 m n) = (term709 m n).
Proof. exact (@lem1982792 (term196 m n) term38). Qed.
Lemma lem2631152 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631153 : term38 = term134.
Proof. exact (@lem2631152 (NUMERAL 0)). Qed.
Lemma lem2631155 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631156 : term97 = term102.
Proof. exact (@lem2631155 term32). Qed.
Lemma lem2631157 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631158 : term147 = term148.
Proof. exact (MK_COMB (@lem2631157) (@lem2631156)). Qed.
Lemma lem2631159 : term212 = term213.
Proof. exact (MK_COMB (@lem2631158) (@lem2631153)). Qed.
Lemma lem2631160 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631162 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631163 : term117 = term118.
Proof. exact (@lem2631162 term32 term32). Qed.
Lemma lem2631164 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631165 : term120 = term32.
Proof. exact (EQ_MP (@lem2631164) (@lem940073)). Qed.
Lemma lem2631166 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631167 : term118 = term31.
Proof. exact (MK_COMB (@lem2631166) (@lem2631165)). Qed.
Lemma lem2631168 : term117 = term31.
Proof. exact (TRANS (@lem2631163) (@lem2631167)). Qed.
Lemma lem2631170 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631171 : term212 = term38.
Proof. exact (@lem2631170 term32). Qed.
Lemma lem2631172 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631173 : term216 = term217.
Proof. exact (MK_COMB (@lem2631172) (@lem2631171)). Qed.
Lemma lem2631174 : term214 = term134.
Proof. exact (MK_COMB (@lem2631173) (@lem2631168)). Qed.
Lemma lem2631175 : term213 = term134.
Proof. exact (TRANS (@lem2631160) (@lem2631174)). Qed.
Lemma lem2631176 : term212 = term134.
Proof. exact (TRANS (@lem2631159) (@lem2631175)). Qed.
Lemma lem2631178 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631179 : term134 = term38.
Proof. exact (@lem2631178 term38). Qed.
Lemma lem2631180 : term212 = term38.
Proof. exact (TRANS (@lem2631176) (@lem2631179)). Qed.
Lemma lem2631181 (m : int) (n : int) : (term710 m n) = (term710 m n).
Proof. exact (eq_refl (term710 m n)). Qed.
Lemma lem2631182 (m : int) (n : int) : (term709 m n) = (term711 m n).
Proof. exact (MK_COMB (@lem2631181 m n) (@lem2631180)). Qed.
Lemma lem2631183 (m : int) (n : int) : (term711 m n) = (term196 m n).
Proof. exact (@lem1982723 (term196 m n)). Qed.
Lemma lem2631184 (m : int) (n : int) : (term709 m n) = (term196 m n).
Proof. exact (TRANS (@lem2631182 m n) (@lem2631183 m n)). Qed.
Lemma lem2631185 (m : int) (n : int) : (term708 m n) = (term196 m n).
Proof. exact (TRANS (@lem2631150 m n) (@lem2631184 m n)). Qed.
Lemma lem2631186 (m : int) (n : int) : (term707 n m) = (term196 m n).
Proof. exact (TRANS (@lem2631149 m n) (@lem2631185 m n)). Qed.
Lemma lem2631187 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631188 (m : int) (n : int) : (term712 n m) = (term713 m n).
Proof. exact (MK_COMB (@lem2631187) (@lem2631186 m n)). Qed.
Lemma lem2631189 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631190 (m : int) (n : int) : (term703 n m) = (term714 m n).
Proof. exact (MK_COMB (@lem2631188 m n) (@lem2631189)). Qed.
Lemma lem2631191 (m : int) (n : int) : (term702 n m) = (term714 m n).
Proof. exact (TRANS (@lem2631122 n m) (@lem2631190 m n)). Qed.
Lemma lem2631192 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631193 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631192) (@lem2631121 m)). Qed.
Lemma lem2631194 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2631193 m) (@lem2631191 m n)). Qed.
Lemma lem2631195 (n : int) : (term158 n) = (term717 n).
Proof. exact (@lem1988291 (term154 n) term38). Qed.
Lemma lem2631213 (n : int) : (term718 n) = (term719 n).
Proof. exact (@lem1982792 (term154 n) term38). Qed.
Lemma lem2631215 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631216 : term38 = term134.
Proof. exact (@lem2631215 (NUMERAL 0)). Qed.
Lemma lem2631218 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631219 : term97 = term102.
Proof. exact (@lem2631218 term32). Qed.
Lemma lem2631220 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631221 : term147 = term148.
Proof. exact (MK_COMB (@lem2631220) (@lem2631219)). Qed.
Lemma lem2631222 : term212 = term213.
Proof. exact (MK_COMB (@lem2631221) (@lem2631216)). Qed.
Lemma lem2631223 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631225 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631226 : term117 = term118.
Proof. exact (@lem2631225 term32 term32). Qed.
Lemma lem2631227 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631228 : term120 = term32.
Proof. exact (EQ_MP (@lem2631227) (@lem940073)). Qed.
Lemma lem2631229 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631230 : term118 = term31.
Proof. exact (MK_COMB (@lem2631229) (@lem2631228)). Qed.
Lemma lem2631231 : term117 = term31.
Proof. exact (TRANS (@lem2631226) (@lem2631230)). Qed.
Lemma lem2631233 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631234 : term212 = term38.
Proof. exact (@lem2631233 term32). Qed.
Lemma lem2631235 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631236 : term216 = term217.
Proof. exact (MK_COMB (@lem2631235) (@lem2631234)). Qed.
Lemma lem2631237 : term214 = term134.
Proof. exact (MK_COMB (@lem2631236) (@lem2631231)). Qed.
Lemma lem2631238 : term213 = term134.
Proof. exact (TRANS (@lem2631223) (@lem2631237)). Qed.
Lemma lem2631239 : term212 = term134.
Proof. exact (TRANS (@lem2631222) (@lem2631238)). Qed.
Lemma lem2631241 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631242 : term134 = term38.
Proof. exact (@lem2631241 term38). Qed.
Lemma lem2631243 : term212 = term38.
Proof. exact (TRANS (@lem2631239) (@lem2631242)). Qed.
Lemma lem2631244 (n : int) : (term720 n) = (term720 n).
Proof. exact (eq_refl (term720 n)). Qed.
Lemma lem2631245 (n : int) : (term719 n) = (term721 n).
Proof. exact (MK_COMB (@lem2631244 n) (@lem2631243)). Qed.
Lemma lem2631246 (n : int) : (term721 n) = (term154 n).
Proof. exact (@lem1982723 (term154 n)). Qed.
Lemma lem2631247 (n : int) : (term719 n) = (term154 n).
Proof. exact (TRANS (@lem2631245 n) (@lem2631246 n)). Qed.
Lemma lem2631249 (n : int) : (term718 n) = (term154 n).
Proof. exact (TRANS (@lem2631213 n) (@lem2631247 n)). Qed.
Lemma lem2631250 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631251 (n : int) : (term722 n) = (term157 n).
Proof. exact (MK_COMB (@lem2631250) (@lem2631249 n)). Qed.
Lemma lem2631252 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631253 (n : int) : (term717 n) = (term158 n).
Proof. exact (MK_COMB (@lem2631251 n) (@lem2631252)). Qed.
Lemma lem2631254 (n : int) : (term158 n) = (term158 n).
Proof. exact (TRANS (@lem2631195 n) (@lem2631253 n)). Qed.
Lemma lem2631255 (m : int) : (term158 m) = (term717 m).
Proof. exact (@lem1988291 (term154 m) term38). Qed.
Lemma lem2631273 (m : int) : (term718 m) = (term719 m).
Proof. exact (@lem1982792 (term154 m) term38). Qed.
Lemma lem2631275 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631276 : term38 = term134.
Proof. exact (@lem2631275 (NUMERAL 0)). Qed.
Lemma lem2631278 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631279 : term97 = term102.
Proof. exact (@lem2631278 term32). Qed.
Lemma lem2631280 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631281 : term147 = term148.
Proof. exact (MK_COMB (@lem2631280) (@lem2631279)). Qed.
Lemma lem2631282 : term212 = term213.
Proof. exact (MK_COMB (@lem2631281) (@lem2631276)). Qed.
Lemma lem2631283 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631285 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631286 : term117 = term118.
Proof. exact (@lem2631285 term32 term32). Qed.
Lemma lem2631287 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631288 : term120 = term32.
Proof. exact (EQ_MP (@lem2631287) (@lem940073)). Qed.
Lemma lem2631289 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631290 : term118 = term31.
Proof. exact (MK_COMB (@lem2631289) (@lem2631288)). Qed.
Lemma lem2631291 : term117 = term31.
Proof. exact (TRANS (@lem2631286) (@lem2631290)). Qed.
Lemma lem2631293 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631294 : term212 = term38.
Proof. exact (@lem2631293 term32). Qed.
Lemma lem2631295 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631296 : term216 = term217.
Proof. exact (MK_COMB (@lem2631295) (@lem2631294)). Qed.
Lemma lem2631297 : term214 = term134.
Proof. exact (MK_COMB (@lem2631296) (@lem2631291)). Qed.
Lemma lem2631298 : term213 = term134.
Proof. exact (TRANS (@lem2631283) (@lem2631297)). Qed.
Lemma lem2631299 : term212 = term134.
Proof. exact (TRANS (@lem2631282) (@lem2631298)). Qed.
Lemma lem2631301 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631302 : term134 = term38.
Proof. exact (@lem2631301 term38). Qed.
Lemma lem2631303 : term212 = term38.
Proof. exact (TRANS (@lem2631299) (@lem2631302)). Qed.
Lemma lem2631304 (m : int) : (term720 m) = (term720 m).
Proof. exact (eq_refl (term720 m)). Qed.
Lemma lem2631305 (m : int) : (term719 m) = (term721 m).
Proof. exact (MK_COMB (@lem2631304 m) (@lem2631303)). Qed.
Lemma lem2631306 (m : int) : (term721 m) = (term154 m).
Proof. exact (@lem1982723 (term154 m)). Qed.
Lemma lem2631307 (m : int) : (term719 m) = (term154 m).
Proof. exact (TRANS (@lem2631305 m) (@lem2631306 m)). Qed.
Lemma lem2631309 (m : int) : (term718 m) = (term154 m).
Proof. exact (TRANS (@lem2631273 m) (@lem2631307 m)). Qed.
Lemma lem2631310 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631311 (m : int) : (term722 m) = (term157 m).
Proof. exact (MK_COMB (@lem2631310) (@lem2631309 m)). Qed.
Lemma lem2631312 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631313 (m : int) : (term717 m) = (term158 m).
Proof. exact (MK_COMB (@lem2631311 m) (@lem2631312)). Qed.
Lemma lem2631314 (m : int) : (term158 m) = (term158 m).
Proof. exact (TRANS (@lem2631255 m) (@lem2631313 m)). Qed.
Lemma lem2631315 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631316 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2631315) (@lem2631254 n)). Qed.
Lemma lem2631317 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2631316 n) (@lem2631314 m)). Qed.
Lemma lem2631318 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631319 (m : int) (n : int) : (term724 n m) = (term725 m n).
Proof. exact (MK_COMB (@lem2631318) (@lem2631194 m n)). Qed.
Lemma lem2631320 (n : int) (m : int) : (term695 n m) = (term726 n m).
Proof. exact (MK_COMB (@lem2631319 m n) (@lem2631317 n m)). Qed.
Lemma lem2631321 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631322 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2631321) (@lem2631073 n)). Qed.
Lemma lem2631323 (n : int) (m : int) : (term697 n m) = (term727 n m).
Proof. exact (MK_COMB (@lem2631322 n) (@lem2631320 n m)). Qed.
Lemma lem2631324 (n : int) : (term728 n) = (term729 n).
Proof. exact (@lem1988289 term38 (real_of_int n)). Qed.
Lemma lem2631330 (n : int) : (term730 n) = (term139 n).
Proof. exact (@lem1982792 term38 (real_of_int n)). Qed.
Lemma lem2631335 (n : int) : (term139 n) = (term94 n).
Proof. exact (@lem1982721 (term94 n)). Qed.
Lemma lem2631337 (n : int) : (term730 n) = (term94 n).
Proof. exact (TRANS (@lem2631330 n) (@lem2631335 n)). Qed.
Lemma lem2631338 : real_gt = real_gt.
Proof. exact (eq_refl real_gt). Qed.
Lemma lem2631339 (n : int) : (term731 n) = (term732 n).
Proof. exact (MK_COMB (@lem2631338) (@lem2631337 n)). Qed.
Lemma lem2631340 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631341 (n : int) : (term729 n) = (term733 n).
Proof. exact (MK_COMB (@lem2631339 n) (@lem2631340)). Qed.
Lemma lem2631342 (n : int) : (term728 n) = (term733 n).
Proof. exact (TRANS (@lem2631324 n) (@lem2631341 n)). Qed.
Lemma lem2631343 (n : int) (m : int) : (term734 n m) = (term735 n m).
Proof. exact (@lem1988291 (term736 n m) term38). Qed.
Lemma lem2631344 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631357 (m : int) : (term154 m) = (term154 m).
Proof. exact (eq_refl (term154 m)). Qed.
Lemma lem2631364 (n : int) : (term737 n) = (term94 n).
Proof. exact (@lem1982785 (real_of_int n)). Qed.
Lemma lem2631365 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2631366 (n : int) : (term738 n) = (term153 n).
Proof. exact (MK_COMB (@lem2631365) (@lem2631364 n)). Qed.
Lemma lem2631367 (n : int) (m : int) : (term736 n m) = (term739 n m).
Proof. exact (MK_COMB (@lem2631366 n) (@lem2631357 m)). Qed.
Lemma lem2631372 (m : int) (n : int) : (term739 n m) = (term739 m n).
Proof. exact (@lem1982757 (term94 m) (term94 n) term97). Qed.
Lemma lem2631373 (m : int) (n : int) : (term736 n m) = (term739 m n).
Proof. exact (TRANS (@lem2631367 n m) (@lem2631372 m n)). Qed.
Lemma lem2631374 : real_sub = real_sub.
Proof. exact (eq_refl real_sub). Qed.
Lemma lem2631375 (m : int) (n : int) : (term740 n m) = (term741 m n).
Proof. exact (MK_COMB (@lem2631374) (@lem2631373 m n)). Qed.
Lemma lem2631376 (m : int) (n : int) : (term742 n m) = (term743 m n).
Proof. exact (MK_COMB (@lem2631375 m n) (@lem2631344)). Qed.
Lemma lem2631377 (m : int) (n : int) : (term743 m n) = (term744 m n).
Proof. exact (@lem1982792 (term739 m n) term38). Qed.
Lemma lem2631379 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631380 : term38 = term134.
Proof. exact (@lem2631379 (NUMERAL 0)). Qed.
Lemma lem2631382 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631383 : term97 = term102.
Proof. exact (@lem2631382 term32). Qed.
Lemma lem2631384 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631385 : term147 = term148.
Proof. exact (MK_COMB (@lem2631384) (@lem2631383)). Qed.
Lemma lem2631386 : term212 = term213.
Proof. exact (MK_COMB (@lem2631385) (@lem2631380)). Qed.
Lemma lem2631387 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631389 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631390 : term117 = term118.
Proof. exact (@lem2631389 term32 term32). Qed.
Lemma lem2631391 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631392 : term120 = term32.
Proof. exact (EQ_MP (@lem2631391) (@lem940073)). Qed.
Lemma lem2631393 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631394 : term118 = term31.
Proof. exact (MK_COMB (@lem2631393) (@lem2631392)). Qed.
Lemma lem2631395 : term117 = term31.
Proof. exact (TRANS (@lem2631390) (@lem2631394)). Qed.
Lemma lem2631397 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631398 : term212 = term38.
Proof. exact (@lem2631397 term32). Qed.
Lemma lem2631399 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631400 : term216 = term217.
Proof. exact (MK_COMB (@lem2631399) (@lem2631398)). Qed.
Lemma lem2631401 : term214 = term134.
Proof. exact (MK_COMB (@lem2631400) (@lem2631395)). Qed.
Lemma lem2631402 : term213 = term134.
Proof. exact (TRANS (@lem2631387) (@lem2631401)). Qed.
Lemma lem2631403 : term212 = term134.
Proof. exact (TRANS (@lem2631386) (@lem2631402)). Qed.
Lemma lem2631405 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631406 : term134 = term38.
Proof. exact (@lem2631405 term38). Qed.
Lemma lem2631407 : term212 = term38.
Proof. exact (TRANS (@lem2631403) (@lem2631406)). Qed.
Lemma lem2631408 (m : int) (n : int) : (term745 m n) = (term745 m n).
Proof. exact (eq_refl (term745 m n)). Qed.
Lemma lem2631409 (m : int) (n : int) : (term744 m n) = (term746 m n).
Proof. exact (MK_COMB (@lem2631408 m n) (@lem2631407)). Qed.
Lemma lem2631410 (m : int) (n : int) : (term746 m n) = (term739 m n).
Proof. exact (@lem1982723 (term739 m n)). Qed.
Lemma lem2631411 (m : int) (n : int) : (term744 m n) = (term739 m n).
Proof. exact (TRANS (@lem2631409 m n) (@lem2631410 m n)). Qed.
Lemma lem2631412 (m : int) (n : int) : (term743 m n) = (term739 m n).
Proof. exact (TRANS (@lem2631377 m n) (@lem2631411 m n)). Qed.
Lemma lem2631413 (m : int) (n : int) : (term742 n m) = (term739 m n).
Proof. exact (TRANS (@lem2631376 m n) (@lem2631412 m n)). Qed.
Lemma lem2631414 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631415 (m : int) (n : int) : (term747 n m) = (term748 m n).
Proof. exact (MK_COMB (@lem2631414) (@lem2631413 m n)). Qed.
Lemma lem2631416 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631417 (m : int) (n : int) : (term735 n m) = (term749 m n).
Proof. exact (MK_COMB (@lem2631415 m n) (@lem2631416)). Qed.
Lemma lem2631418 (m : int) (n : int) : (term734 n m) = (term749 m n).
Proof. exact (TRANS (@lem2631343 n m) (@lem2631417 m n)). Qed.
Lemma lem2631419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631420 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631419) (@lem2631121 m)). Qed.
Lemma lem2631421 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2631420 m) (@lem2631418 m n)). Qed.
Lemma lem2631422 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631423 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2631422) (@lem2631254 n)). Qed.
Lemma lem2631424 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2631423 n) (@lem2631314 m)). Qed.
Lemma lem2631425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631426 (m : int) (n : int) : (term752 n m) = (term753 m n).
Proof. exact (MK_COMB (@lem2631425) (@lem2631421 m n)). Qed.
Lemma lem2631427 (n : int) (m : int) : (term690 n m) = (term754 n m).
Proof. exact (MK_COMB (@lem2631426 m n) (@lem2631424 n m)). Qed.
Lemma lem2631428 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631429 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2631428) (@lem2631342 n)). Qed.
Lemma lem2631430 (n : int) (m : int) : (term693 n m) = (term756 n m).
Proof. exact (MK_COMB (@lem2631429 n) (@lem2631427 n m)). Qed.
Lemma lem2631431 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631432 (n : int) (m : int) : (term699 n m) = (term757 n m).
Proof. exact (MK_COMB (@lem2631431) (@lem2631323 n m)). Qed.
Lemma lem2631433 (n : int) (m : int) : (term700 n m) = (term758 n m).
Proof. exact (MK_COMB (@lem2631432 n m) (@lem2631430 n m)). Qed.
Lemma lem2631445 (n : int) (m : int) : (term686 n m) = (term758 n m).
Proof. exact (TRANS (@lem2631025 n m) (@lem2631433 n m)). Qed.
Lemma lem2631447 (n : int) (m : int) : (term759 n m) = (term759 n m).
Proof. exact (eq_refl (term759 n m)). Qed.
Lemma lem2631448 (n : int) (m : int) : (term669 n m) = (term760 n m).
Proof. exact (MK_COMB (@lem2631447 n m) (@lem2631445 n m)). Qed.
Lemma lem2631451 (n : int) (m : int) : (term667 n m) = (term667 n m).
Proof. exact (eq_refl (term667 n m)). Qed.
Lemma lem2631452 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631453 (n : int) (m : int) : (term671 n m) = (term761 n m).
Proof. exact (MK_COMB (@lem2631452) (@lem2631448 n m)). Qed.
Lemma lem2631454 (n : int) (m : int) : (term672 n m) = (term762 n m).
Proof. exact (MK_COMB (@lem2631453 n m) (@lem2631451 n m)). Qed.
Lemma lem2631459 (n : int) (m : int) : (term763 m n) = (term764 n m).
Proof. exact (eq_refl (term763 m n)). Qed.
Lemma lem2631460 (m : int) (n : int) : (term764 n m) = (term763 m n).
Proof. exact (SYM (@lem2631459 n m)). Qed.
Lemma lem2631461 (m : int) (n : int) : (term763 m n) = (term765 m n).
Proof. exact (@lem1482981 (term766 n m) (real_of_int n)). Qed.
Lemma lem2631462 (m : int) (n : int) : (term764 n m) = (term765 m n).
Proof. exact (TRANS (@lem2631460 m n) (@lem2631461 m n)). Qed.
Lemma lem2631463 (n : int) (m : int) : (term767 m n) = (term768 n m).
Proof. exact (eq_refl (term767 m n)). Qed.
Lemma lem2631464 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2631465 (n : int) (m : int) : (term769 m n) = (term770 n m).
Proof. exact (MK_COMB (@lem2631464 n) (@lem2631463 n m)). Qed.
Lemma lem2631466 (n : int) (m : int) : (term771 m n) = (term772 n m).
Proof. exact (eq_refl (term771 m n)). Qed.
Lemma lem2631467 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2631468 (n : int) (m : int) : (term773 m n) = (term774 n m).
Proof. exact (MK_COMB (@lem2631467 n) (@lem2631466 n m)). Qed.
Lemma lem2631469 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631470 (n : int) (m : int) : (term775 m n) = (term776 n m).
Proof. exact (MK_COMB (@lem2631469) (@lem2631468 n m)). Qed.
Lemma lem2631471 (n : int) (m : int) : (term765 m n) = (term777 n m).
Proof. exact (MK_COMB (@lem2631470 n m) (@lem2631465 n m)). Qed.
Lemma lem2631472 (n : int) (m : int) : (term778 n m) = (term778 n m).
Proof. exact (eq_refl (term778 n m)). Qed.
Lemma lem2631473 (n : int) (m : int) : ((term764 n m) = (term765 m n)) = ((term764 n m) = (term777 n m)).
Proof. exact (MK_COMB (@lem2631472 n m) (@lem2631471 n m)). Qed.
Lemma lem2631474 (n : int) (m : int) : (term764 n m) = (term777 n m).
Proof. exact (EQ_MP (@lem2631473 n m) (@lem2631462 m n)). Qed.
Lemma lem2631475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631476 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631475) (@lem2631121 m)). Qed.
Lemma lem2631477 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2631476 m) (@lem2631191 m n)). Qed.
Lemma lem2631478 (n : int) : (term167 n) = (term779 n).
Proof. exact (@lem1988291 (term164 n) term38). Qed.
Lemma lem2631490 (n : int) : (term780 n) = (term781 n).
Proof. exact (@lem1982792 (term164 n) term38). Qed.
Lemma lem2631492 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631493 : term38 = term134.
Proof. exact (@lem2631492 (NUMERAL 0)). Qed.
Lemma lem2631495 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631496 : term97 = term102.
Proof. exact (@lem2631495 term32). Qed.
Lemma lem2631497 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631498 : term147 = term148.
Proof. exact (MK_COMB (@lem2631497) (@lem2631496)). Qed.
Lemma lem2631499 : term212 = term213.
Proof. exact (MK_COMB (@lem2631498) (@lem2631493)). Qed.
Lemma lem2631500 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631502 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631503 : term117 = term118.
Proof. exact (@lem2631502 term32 term32). Qed.
Lemma lem2631504 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631505 : term120 = term32.
Proof. exact (EQ_MP (@lem2631504) (@lem940073)). Qed.
Lemma lem2631506 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631507 : term118 = term31.
Proof. exact (MK_COMB (@lem2631506) (@lem2631505)). Qed.
Lemma lem2631508 : term117 = term31.
Proof. exact (TRANS (@lem2631503) (@lem2631507)). Qed.
Lemma lem2631510 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631511 : term212 = term38.
Proof. exact (@lem2631510 term32). Qed.
Lemma lem2631512 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631513 : term216 = term217.
Proof. exact (MK_COMB (@lem2631512) (@lem2631511)). Qed.
Lemma lem2631514 : term214 = term134.
Proof. exact (MK_COMB (@lem2631513) (@lem2631508)). Qed.
Lemma lem2631515 : term213 = term134.
Proof. exact (TRANS (@lem2631500) (@lem2631514)). Qed.
Lemma lem2631516 : term212 = term134.
Proof. exact (TRANS (@lem2631499) (@lem2631515)). Qed.
Lemma lem2631518 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631519 : term134 = term38.
Proof. exact (@lem2631518 term38). Qed.
Lemma lem2631520 : term212 = term38.
Proof. exact (TRANS (@lem2631516) (@lem2631519)). Qed.
Lemma lem2631521 (n : int) : (term782 n) = (term782 n).
Proof. exact (eq_refl (term782 n)). Qed.
Lemma lem2631522 (n : int) : (term781 n) = (term783 n).
Proof. exact (MK_COMB (@lem2631521 n) (@lem2631520)). Qed.
Lemma lem2631523 (n : int) : (term783 n) = (term164 n).
Proof. exact (@lem1982723 (term164 n)). Qed.
Lemma lem2631524 (n : int) : (term781 n) = (term164 n).
Proof. exact (TRANS (@lem2631522 n) (@lem2631523 n)). Qed.
Lemma lem2631526 (n : int) : (term780 n) = (term164 n).
Proof. exact (TRANS (@lem2631490 n) (@lem2631524 n)). Qed.
Lemma lem2631527 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631528 (n : int) : (term784 n) = (term166 n).
Proof. exact (MK_COMB (@lem2631527) (@lem2631526 n)). Qed.
Lemma lem2631529 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631530 (n : int) : (term779 n) = (term167 n).
Proof. exact (MK_COMB (@lem2631528 n) (@lem2631529)). Qed.
Lemma lem2631531 (n : int) : (term167 n) = (term167 n).
Proof. exact (TRANS (@lem2631478 n) (@lem2631530 n)). Qed.
Lemma lem2631532 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631533 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2631532) (@lem2631531 n)). Qed.
Lemma lem2631534 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2631533 n) (@lem2631314 m)). Qed.
Lemma lem2631535 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631536 (m : int) (n : int) : (term724 n m) = (term725 m n).
Proof. exact (MK_COMB (@lem2631535) (@lem2631477 m n)). Qed.
Lemma lem2631537 (n : int) (m : int) : (term772 n m) = (term786 n m).
Proof. exact (MK_COMB (@lem2631536 m n) (@lem2631534 n m)). Qed.
Lemma lem2631538 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631539 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2631538) (@lem2631073 n)). Qed.
Lemma lem2631540 (n : int) (m : int) : (term774 n m) = (term787 n m).
Proof. exact (MK_COMB (@lem2631539 n) (@lem2631537 n m)). Qed.
Lemma lem2631541 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631542 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631541) (@lem2631121 m)). Qed.
Lemma lem2631543 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2631542 m) (@lem2631418 m n)). Qed.
Lemma lem2631544 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631545 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2631544) (@lem2631531 n)). Qed.
Lemma lem2631546 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2631545 n) (@lem2631314 m)). Qed.
Lemma lem2631547 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631548 (m : int) (n : int) : (term752 n m) = (term753 m n).
Proof. exact (MK_COMB (@lem2631547) (@lem2631543 m n)). Qed.
Lemma lem2631549 (n : int) (m : int) : (term768 n m) = (term788 n m).
Proof. exact (MK_COMB (@lem2631548 m n) (@lem2631546 n m)). Qed.
Lemma lem2631550 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631551 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2631550) (@lem2631342 n)). Qed.
Lemma lem2631552 (n : int) (m : int) : (term770 n m) = (term789 n m).
Proof. exact (MK_COMB (@lem2631551 n) (@lem2631549 n m)). Qed.
Lemma lem2631553 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631554 (n : int) (m : int) : (term776 n m) = (term790 n m).
Proof. exact (MK_COMB (@lem2631553) (@lem2631540 n m)). Qed.
Lemma lem2631555 (n : int) (m : int) : (term777 n m) = (term791 n m).
Proof. exact (MK_COMB (@lem2631554 n m) (@lem2631552 n m)). Qed.
Lemma lem2631567 (n : int) (m : int) : (term764 n m) = (term791 n m).
Proof. exact (TRANS (@lem2631474 n m) (@lem2631555 n m)). Qed.
Lemma lem2631569 (n : int) (m : int) : (term792 n m) = (term792 n m).
Proof. exact (eq_refl (term792 n m)). Qed.
Lemma lem2631570 (n : int) (m : int) : (term661 n m) = (term793 n m).
Proof. exact (MK_COMB (@lem2631569 n m) (@lem2631567 n m)). Qed.
Lemma lem2631573 (n : int) (m : int) : (term659 n m) = (term659 n m).
Proof. exact (eq_refl (term659 n m)). Qed.
Lemma lem2631574 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631575 (n : int) (m : int) : (term663 n m) = (term794 n m).
Proof. exact (MK_COMB (@lem2631574) (@lem2631570 n m)). Qed.
Lemma lem2631576 (n : int) (m : int) : (term664 n m) = (term795 n m).
Proof. exact (MK_COMB (@lem2631575 n m) (@lem2631573 n m)). Qed.
Lemma lem2631577 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631578 (n : int) (m : int) : (term674 n m) = (term796 n m).
Proof. exact (MK_COMB (@lem2631577) (@lem2631454 n m)). Qed.
Lemma lem2631579 (n : int) (m : int) : (term675 n m) = (term797 n m).
Proof. exact (MK_COMB (@lem2631578 n m) (@lem2631576 n m)). Qed.
Lemma lem2631581 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2631582 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2631581 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2631589 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2631592 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631595 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2631592 m) (@lem2631589 n)). Qed.
Lemma lem2631596 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631597 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631596) (@lem2631595 m n)). Qed.
Lemma lem2631598 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631599 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631597 m n) (@lem2631598)). Qed.
Lemma lem2631618 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2631619 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631618 m n) (@lem2631599 m n)). Qed.
Lemma lem2631620 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2631582 m n) (@lem2631619 m n)). Qed.
Lemma lem2631621 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2631622 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2631621 n) (@lem2631620 m n)). Qed.
Lemma lem2631623 (n : int) : (term809 n) = (term809 n).
Proof. exact (eq_refl (term809 n)). Qed.
Lemma lem2631626 (m : int) (n : int) : (term646 n m) = (term810 m n).
Proof. exact (MK_COMB (@lem2631623 n) (@lem2631622 m n)). Qed.
Lemma lem2631628 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2631629 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2631628 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2631636 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2631639 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631642 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2631639 m) (@lem2631636 n)). Qed.
Lemma lem2631643 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631644 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631643) (@lem2631642 m n)). Qed.
Lemma lem2631645 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631646 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631644 m n) (@lem2631645)). Qed.
Lemma lem2631665 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2631666 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631665 m n) (@lem2631646 m n)). Qed.
Lemma lem2631667 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2631629 m n) (@lem2631666 m n)). Qed.
Lemma lem2631668 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2631669 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2631668 n) (@lem2631667 m n)). Qed.
Lemma lem2631670 (n : int) (m : int) : (term811 n m) = (term811 n m).
Proof. exact (eq_refl (term811 n m)). Qed.
Lemma lem2631671 (m : int) (n : int) : (term812 n m) = (term813 m n).
Proof. exact (MK_COMB (@lem2631670 n m) (@lem2631669 m n)). Qed.
Lemma lem2631672 (m : int) (n : int) : (term814 m n) = (term813 m n).
Proof. exact (eq_refl (term814 m n)). Qed.
Lemma lem2631673 (m : int) (n : int) : (term813 m n) = (term814 m n).
Proof. exact (SYM (@lem2631672 m n)). Qed.
Lemma lem2631674 (m : int) (n : int) : (term814 m n) = (term815 m n).
Proof. exact (@lem1482981 (term816 m n) (real_of_int n)). Qed.
Lemma lem2631675 (m : int) (n : int) : (term813 m n) = (term815 m n).
Proof. exact (TRANS (@lem2631673 m n) (@lem2631674 m n)). Qed.
Lemma lem2631676 (m : int) (n : int) : (term817 m n) = (term818 m n).
Proof. exact (eq_refl (term817 m n)). Qed.
Lemma lem2631677 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2631678 (m : int) (n : int) : (term819 m n) = (term820 m n).
Proof. exact (MK_COMB (@lem2631677 n) (@lem2631676 m n)). Qed.
Lemma lem2631679 (m : int) (n : int) : (term821 m n) = (term822 m n).
Proof. exact (eq_refl (term821 m n)). Qed.
Lemma lem2631680 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2631681 (m : int) (n : int) : (term823 m n) = (term824 m n).
Proof. exact (MK_COMB (@lem2631680 n) (@lem2631679 m n)). Qed.
Lemma lem2631682 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631683 (m : int) (n : int) : (term825 m n) = (term826 m n).
Proof. exact (MK_COMB (@lem2631682) (@lem2631681 m n)). Qed.
Lemma lem2631684 (m : int) (n : int) : (term815 m n) = (term827 m n).
Proof. exact (MK_COMB (@lem2631683 m n) (@lem2631678 m n)). Qed.
Lemma lem2631685 (m : int) (n : int) : (term828 m n) = (term828 m n).
Proof. exact (eq_refl (term828 m n)). Qed.
Lemma lem2631686 (m : int) (n : int) : ((term813 m n) = (term815 m n)) = ((term813 m n) = (term827 m n)).
Proof. exact (MK_COMB (@lem2631685 m n) (@lem2631684 m n)). Qed.
Lemma lem2631687 (m : int) (n : int) : (term813 m n) = (term827 m n).
Proof. exact (EQ_MP (@lem2631686 m n) (@lem2631675 m n)). Qed.
Lemma lem2631688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631689 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631688) (@lem2631121 m)). Qed.
Lemma lem2631690 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2631689 m) (@lem2631191 m n)). Qed.
Lemma lem2631691 (m : int) (n : int) : (term829 m n) = (term830 m n).
Proof. exact (@lem1988291 (term88 m n) term38). Qed.
Lemma lem2631709 (m : int) (n : int) : (term831 m n) = (term832 m n).
Proof. exact (@lem1982792 (term88 m n) term38). Qed.
Lemma lem2631711 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631712 : term38 = term134.
Proof. exact (@lem2631711 (NUMERAL 0)). Qed.
Lemma lem2631714 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631715 : term97 = term102.
Proof. exact (@lem2631714 term32). Qed.
Lemma lem2631716 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631717 : term147 = term148.
Proof. exact (MK_COMB (@lem2631716) (@lem2631715)). Qed.
Lemma lem2631718 : term212 = term213.
Proof. exact (MK_COMB (@lem2631717) (@lem2631712)). Qed.
Lemma lem2631719 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631721 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631722 : term117 = term118.
Proof. exact (@lem2631721 term32 term32). Qed.
Lemma lem2631723 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631724 : term120 = term32.
Proof. exact (EQ_MP (@lem2631723) (@lem940073)). Qed.
Lemma lem2631725 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631726 : term118 = term31.
Proof. exact (MK_COMB (@lem2631725) (@lem2631724)). Qed.
Lemma lem2631727 : term117 = term31.
Proof. exact (TRANS (@lem2631722) (@lem2631726)). Qed.
Lemma lem2631729 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631730 : term212 = term38.
Proof. exact (@lem2631729 term32). Qed.
Lemma lem2631731 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631732 : term216 = term217.
Proof. exact (MK_COMB (@lem2631731) (@lem2631730)). Qed.
Lemma lem2631733 : term214 = term134.
Proof. exact (MK_COMB (@lem2631732) (@lem2631727)). Qed.
Lemma lem2631734 : term213 = term134.
Proof. exact (TRANS (@lem2631719) (@lem2631733)). Qed.
Lemma lem2631735 : term212 = term134.
Proof. exact (TRANS (@lem2631718) (@lem2631734)). Qed.
Lemma lem2631737 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631738 : term134 = term38.
Proof. exact (@lem2631737 term38). Qed.
Lemma lem2631739 : term212 = term38.
Proof. exact (TRANS (@lem2631735) (@lem2631738)). Qed.
Lemma lem2631740 (m : int) (n : int) : (term173 m n) = (term173 m n).
Proof. exact (eq_refl (term173 m n)). Qed.
Lemma lem2631741 (m : int) (n : int) : (term832 m n) = (term833 m n).
Proof. exact (MK_COMB (@lem2631740 m n) (@lem2631739)). Qed.
Lemma lem2631742 (m : int) (n : int) : (term833 m n) = (term88 m n).
Proof. exact (@lem1982723 (term88 m n)). Qed.
Lemma lem2631743 (m : int) (n : int) : (term832 m n) = (term88 m n).
Proof. exact (TRANS (@lem2631741 m n) (@lem2631742 m n)). Qed.
Lemma lem2631745 (m : int) (n : int) : (term831 m n) = (term88 m n).
Proof. exact (TRANS (@lem2631709 m n) (@lem2631743 m n)). Qed.
Lemma lem2631746 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631747 (m : int) (n : int) : (term834 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2631746) (@lem2631745 m n)). Qed.
Lemma lem2631748 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631749 (m : int) (n : int) : (term830 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2631747 m n) (@lem2631748)). Qed.
Lemma lem2631750 (m : int) (n : int) : (term829 m n) = (term829 m n).
Proof. exact (TRANS (@lem2631691 m n) (@lem2631749 m n)). Qed.
Lemma lem2631751 (m : int) (n : int) : (term805 m n) = (term836 m n).
Proof. exact (@lem1988291 (term25 m n) term38). Qed.
Lemma lem2631763 (m : int) (n : int) : (term837 m n) = (term838 m n).
Proof. exact (@lem1982792 (term25 m n) term38). Qed.
Lemma lem2631765 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2631766 : term38 = term134.
Proof. exact (@lem2631765 (NUMERAL 0)). Qed.
Lemma lem2631768 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2631769 : term97 = term102.
Proof. exact (@lem2631768 term32). Qed.
Lemma lem2631770 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2631771 : term147 = term148.
Proof. exact (MK_COMB (@lem2631770) (@lem2631769)). Qed.
Lemma lem2631772 : term212 = term213.
Proof. exact (MK_COMB (@lem2631771) (@lem2631766)). Qed.
Lemma lem2631773 : term213 = term214.
Proof. exact (@lem1981613 term97 term38 term31 term31). Qed.
Lemma lem2631775 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2631776 : term117 = term118.
Proof. exact (@lem2631775 term32 term32). Qed.
Lemma lem2631777 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2631778 : term120 = term32.
Proof. exact (EQ_MP (@lem2631777) (@lem940073)). Qed.
Lemma lem2631779 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2631780 : term118 = term31.
Proof. exact (MK_COMB (@lem2631779) (@lem2631778)). Qed.
Lemma lem2631781 : term117 = term31.
Proof. exact (TRANS (@lem2631776) (@lem2631780)). Qed.
Lemma lem2631783 (x : nat) : (term215 x) = term38.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem2631784 : term212 = term38.
Proof. exact (@lem2631783 term32). Qed.
Lemma lem2631785 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem2631786 : term216 = term217.
Proof. exact (MK_COMB (@lem2631785) (@lem2631784)). Qed.
Lemma lem2631787 : term214 = term134.
Proof. exact (MK_COMB (@lem2631786) (@lem2631781)). Qed.
Lemma lem2631788 : term213 = term134.
Proof. exact (TRANS (@lem2631773) (@lem2631787)). Qed.
Lemma lem2631789 : term212 = term134.
Proof. exact (TRANS (@lem2631772) (@lem2631788)). Qed.
Lemma lem2631791 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem2631792 : term134 = term38.
Proof. exact (@lem2631791 term38). Qed.
Lemma lem2631793 : term212 = term38.
Proof. exact (TRANS (@lem2631789) (@lem2631792)). Qed.
Lemma lem2631794 (m : int) (n : int) : (term839 m n) = (term839 m n).
Proof. exact (eq_refl (term839 m n)). Qed.
Lemma lem2631795 (m : int) (n : int) : (term838 m n) = (term840 m n).
Proof. exact (MK_COMB (@lem2631794 m n) (@lem2631793)). Qed.
Lemma lem2631796 (m : int) (n : int) : (term840 m n) = (term25 m n).
Proof. exact (@lem1982723 (term25 m n)). Qed.
Lemma lem2631797 (m : int) (n : int) : (term838 m n) = (term25 m n).
Proof. exact (TRANS (@lem2631795 m n) (@lem2631796 m n)). Qed.
Lemma lem2631799 (m : int) (n : int) : (term837 m n) = (term25 m n).
Proof. exact (TRANS (@lem2631763 m n) (@lem2631797 m n)). Qed.
Lemma lem2631800 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631801 (m : int) (n : int) : (term841 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631800) (@lem2631799 m n)). Qed.
Lemma lem2631802 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631803 (m : int) (n : int) : (term836 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631801 m n) (@lem2631802)). Qed.
Lemma lem2631804 (m : int) (n : int) : (term805 m n) = (term805 m n).
Proof. exact (TRANS (@lem2631751 m n) (@lem2631803 m n)). Qed.
Lemma lem2631805 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631806 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2631805) (@lem2631750 m n)). Qed.
Lemma lem2631807 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631806 m n) (@lem2631804 m n)). Qed.
Lemma lem2631808 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631809 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2631808) (@lem2631254 n)). Qed.
Lemma lem2631810 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2631809 n) (@lem2631807 m n)). Qed.
Lemma lem2631811 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631812 (m : int) (n : int) : (term724 n m) = (term725 m n).
Proof. exact (MK_COMB (@lem2631811) (@lem2631690 m n)). Qed.
Lemma lem2631813 (m : int) (n : int) : (term822 m n) = (term842 m n).
Proof. exact (MK_COMB (@lem2631812 m n) (@lem2631810 m n)). Qed.
Lemma lem2631814 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631815 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2631814) (@lem2631073 n)). Qed.
Lemma lem2631816 (m : int) (n : int) : (term824 m n) = (term843 m n).
Proof. exact (MK_COMB (@lem2631815 n) (@lem2631813 m n)). Qed.
Lemma lem2631817 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631818 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2631817) (@lem2631121 m)). Qed.
Lemma lem2631819 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2631818 m) (@lem2631418 m n)). Qed.
Lemma lem2631820 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631821 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2631820) (@lem2631750 m n)). Qed.
Lemma lem2631822 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631821 m n) (@lem2631804 m n)). Qed.
Lemma lem2631823 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631824 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2631823) (@lem2631254 n)). Qed.
Lemma lem2631825 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2631824 n) (@lem2631822 m n)). Qed.
Lemma lem2631826 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631827 (m : int) (n : int) : (term752 n m) = (term753 m n).
Proof. exact (MK_COMB (@lem2631826) (@lem2631819 m n)). Qed.
Lemma lem2631828 (m : int) (n : int) : (term818 m n) = (term844 m n).
Proof. exact (MK_COMB (@lem2631827 m n) (@lem2631825 m n)). Qed.
Lemma lem2631829 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2631830 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2631829) (@lem2631342 n)). Qed.
Lemma lem2631831 (m : int) (n : int) : (term820 m n) = (term845 m n).
Proof. exact (MK_COMB (@lem2631830 n) (@lem2631828 m n)). Qed.
Lemma lem2631832 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631833 (m : int) (n : int) : (term826 m n) = (term846 m n).
Proof. exact (MK_COMB (@lem2631832) (@lem2631816 m n)). Qed.
Lemma lem2631834 (m : int) (n : int) : (term827 m n) = (term847 m n).
Proof. exact (MK_COMB (@lem2631833 m n) (@lem2631831 m n)). Qed.
Lemma lem2631845 (m : int) (n : int) : (term813 m n) = (term847 m n).
Proof. exact (TRANS (@lem2631687 m n) (@lem2631834 m n)). Qed.
Lemma lem2631846 (m : int) (n : int) : (term812 n m) = (term847 m n).
Proof. exact (TRANS (@lem2631671 m n) (@lem2631845 m n)). Qed.
Lemma lem2631847 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631848 (m : int) (n : int) : (term848 n m) = (term849 m n).
Proof. exact (MK_COMB (@lem2631847) (@lem2631626 m n)). Qed.
Lemma lem2631849 (m : int) (n : int) : (term648 n m) = (term850 m n).
Proof. exact (MK_COMB (@lem2631848 m n) (@lem2631846 m n)). Qed.
Lemma lem2631851 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2631852 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2631851 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2631859 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2631862 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631865 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2631862 m) (@lem2631859 n)). Qed.
Lemma lem2631866 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631867 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631866) (@lem2631865 m n)). Qed.
Lemma lem2631868 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631869 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631867 m n) (@lem2631868)). Qed.
Lemma lem2631888 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2631889 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631888 m n) (@lem2631869 m n)). Qed.
Lemma lem2631890 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2631852 m n) (@lem2631889 m n)). Qed.
Lemma lem2631891 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2631892 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2631891 n) (@lem2631890 m n)). Qed.
Lemma lem2631893 (n : int) : (term809 n) = (term809 n).
Proof. exact (eq_refl (term809 n)). Qed.
Lemma lem2631896 (m : int) (n : int) : (term646 n m) = (term810 m n).
Proof. exact (MK_COMB (@lem2631893 n) (@lem2631892 m n)). Qed.
Lemma lem2631897 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2631898 (m : int) (n : int) : (term650 n m) = (term851 m n).
Proof. exact (MK_COMB (@lem2631897) (@lem2631849 m n)). Qed.
Lemma lem2631899 (m : int) (n : int) : (term651 n m) = (term852 m n).
Proof. exact (MK_COMB (@lem2631898 m n) (@lem2631896 m n)). Qed.
Lemma lem2631901 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2631902 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2631901 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2631909 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2631912 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631915 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2631912 m) (@lem2631909 n)). Qed.
Lemma lem2631916 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631917 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631916) (@lem2631915 m n)). Qed.
Lemma lem2631918 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631919 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631917 m n) (@lem2631918)). Qed.
Lemma lem2631938 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2631939 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631938 m n) (@lem2631919 m n)). Qed.
Lemma lem2631940 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2631902 m n) (@lem2631939 m n)). Qed.
Lemma lem2631941 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2631942 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2631941 n) (@lem2631940 m n)). Qed.
Lemma lem2631943 (n : int) : (term809 n) = (term809 n).
Proof. exact (eq_refl (term809 n)). Qed.
Lemma lem2631946 (m : int) (n : int) : (term638 n m) = (term854 m n).
Proof. exact (MK_COMB (@lem2631943 n) (@lem2631942 m n)). Qed.
Lemma lem2631948 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2631949 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2631948 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2631956 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2631959 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2631962 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2631959 m) (@lem2631956 n)). Qed.
Lemma lem2631963 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2631964 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2631963) (@lem2631962 m n)). Qed.
Lemma lem2631965 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2631966 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2631964 m n) (@lem2631965)). Qed.
Lemma lem2631985 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2631986 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2631985 m n) (@lem2631966 m n)). Qed.
Lemma lem2631987 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2631949 m n) (@lem2631986 m n)). Qed.
Lemma lem2631988 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2631989 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2631988 n) (@lem2631987 m n)). Qed.
Lemma lem2631990 (n : int) (m : int) : (term811 n m) = (term811 n m).
Proof. exact (eq_refl (term811 n m)). Qed.
Lemma lem2631991 (m : int) (n : int) : (term855 n m) = (term856 m n).
Proof. exact (MK_COMB (@lem2631990 n m) (@lem2631989 m n)). Qed.
Lemma lem2631992 (m : int) (n : int) : (term857 m n) = (term856 m n).
Proof. exact (eq_refl (term857 m n)). Qed.
Lemma lem2631993 (m : int) (n : int) : (term856 m n) = (term857 m n).
Proof. exact (SYM (@lem2631992 m n)). Qed.
Lemma lem2631994 (m : int) (n : int) : (term857 m n) = (term858 m n).
Proof. exact (@lem1482981 (term859 m n) (real_of_int n)). Qed.
Lemma lem2631995 (m : int) (n : int) : (term856 m n) = (term858 m n).
Proof. exact (TRANS (@lem2631993 m n) (@lem2631994 m n)). Qed.
Lemma lem2631996 (m : int) (n : int) : (term860 m n) = (term861 m n).
Proof. exact (eq_refl (term860 m n)). Qed.
Lemma lem2631997 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2631998 (m : int) (n : int) : (term862 m n) = (term863 m n).
Proof. exact (MK_COMB (@lem2631997 n) (@lem2631996 m n)). Qed.
Lemma lem2631999 (m : int) (n : int) : (term864 m n) = (term865 m n).
Proof. exact (eq_refl (term864 m n)). Qed.
Lemma lem2632000 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632001 (m : int) (n : int) : (term866 m n) = (term867 m n).
Proof. exact (MK_COMB (@lem2632000 n) (@lem2631999 m n)). Qed.
Lemma lem2632002 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632003 (m : int) (n : int) : (term868 m n) = (term869 m n).
Proof. exact (MK_COMB (@lem2632002) (@lem2632001 m n)). Qed.
Lemma lem2632004 (m : int) (n : int) : (term858 m n) = (term870 m n).
Proof. exact (MK_COMB (@lem2632003 m n) (@lem2631998 m n)). Qed.
Lemma lem2632005 (m : int) (n : int) : (term871 m n) = (term871 m n).
Proof. exact (eq_refl (term871 m n)). Qed.
Lemma lem2632006 (m : int) (n : int) : ((term856 m n) = (term858 m n)) = ((term856 m n) = (term870 m n)).
Proof. exact (MK_COMB (@lem2632005 m n) (@lem2632004 m n)). Qed.
Lemma lem2632007 (m : int) (n : int) : (term856 m n) = (term870 m n).
Proof. exact (EQ_MP (@lem2632006 m n) (@lem2631995 m n)). Qed.
Lemma lem2632008 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632009 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632008) (@lem2631121 m)). Qed.
Lemma lem2632010 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632009 m) (@lem2631191 m n)). Qed.
Lemma lem2632011 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632012 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632011) (@lem2631750 m n)). Qed.
Lemma lem2632013 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632012 m n) (@lem2631804 m n)). Qed.
Lemma lem2632014 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632015 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632014) (@lem2631531 n)). Qed.
Lemma lem2632016 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2632015 n) (@lem2632013 m n)). Qed.
Lemma lem2632017 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632018 (m : int) (n : int) : (term724 n m) = (term725 m n).
Proof. exact (MK_COMB (@lem2632017) (@lem2632010 m n)). Qed.
Lemma lem2632019 (m : int) (n : int) : (term865 m n) = (term872 m n).
Proof. exact (MK_COMB (@lem2632018 m n) (@lem2632016 m n)). Qed.
Lemma lem2632020 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632021 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632020) (@lem2631073 n)). Qed.
Lemma lem2632022 (m : int) (n : int) : (term867 m n) = (term873 m n).
Proof. exact (MK_COMB (@lem2632021 n) (@lem2632019 m n)). Qed.
Lemma lem2632023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632024 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632023) (@lem2631121 m)). Qed.
Lemma lem2632025 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632024 m) (@lem2631418 m n)). Qed.
Lemma lem2632026 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632027 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632026) (@lem2631750 m n)). Qed.
Lemma lem2632028 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632027 m n) (@lem2631804 m n)). Qed.
Lemma lem2632029 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632030 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632029) (@lem2631531 n)). Qed.
Lemma lem2632031 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2632030 n) (@lem2632028 m n)). Qed.
Lemma lem2632032 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632033 (m : int) (n : int) : (term752 n m) = (term753 m n).
Proof. exact (MK_COMB (@lem2632032) (@lem2632025 m n)). Qed.
Lemma lem2632034 (m : int) (n : int) : (term861 m n) = (term874 m n).
Proof. exact (MK_COMB (@lem2632033 m n) (@lem2632031 m n)). Qed.
Lemma lem2632035 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632036 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632035) (@lem2631342 n)). Qed.
Lemma lem2632037 (m : int) (n : int) : (term863 m n) = (term875 m n).
Proof. exact (MK_COMB (@lem2632036 n) (@lem2632034 m n)). Qed.
Lemma lem2632038 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632039 (m : int) (n : int) : (term869 m n) = (term876 m n).
Proof. exact (MK_COMB (@lem2632038) (@lem2632022 m n)). Qed.
Lemma lem2632040 (m : int) (n : int) : (term870 m n) = (term877 m n).
Proof. exact (MK_COMB (@lem2632039 m n) (@lem2632037 m n)). Qed.
Lemma lem2632051 (m : int) (n : int) : (term856 m n) = (term877 m n).
Proof. exact (TRANS (@lem2632007 m n) (@lem2632040 m n)). Qed.
Lemma lem2632052 (m : int) (n : int) : (term855 n m) = (term877 m n).
Proof. exact (TRANS (@lem2631991 m n) (@lem2632051 m n)). Qed.
Lemma lem2632053 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632054 (m : int) (n : int) : (term878 n m) = (term879 m n).
Proof. exact (MK_COMB (@lem2632053) (@lem2631946 m n)). Qed.
Lemma lem2632055 (m : int) (n : int) : (term640 n m) = (term880 m n).
Proof. exact (MK_COMB (@lem2632054 m n) (@lem2632052 m n)). Qed.
Lemma lem2632057 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632058 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632057 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632065 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632068 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632071 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632068 m) (@lem2632065 n)). Qed.
Lemma lem2632072 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632073 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632072) (@lem2632071 m n)). Qed.
Lemma lem2632074 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632075 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632073 m n) (@lem2632074)). Qed.
Lemma lem2632094 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632095 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632094 m n) (@lem2632075 m n)). Qed.
Lemma lem2632096 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632058 m n) (@lem2632095 m n)). Qed.
Lemma lem2632097 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2632098 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2632097 n) (@lem2632096 m n)). Qed.
Lemma lem2632099 (n : int) : (term809 n) = (term809 n).
Proof. exact (eq_refl (term809 n)). Qed.
Lemma lem2632102 (m : int) (n : int) : (term638 n m) = (term854 m n).
Proof. exact (MK_COMB (@lem2632099 n) (@lem2632098 m n)). Qed.
Lemma lem2632103 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632104 (m : int) (n : int) : (term642 n m) = (term881 m n).
Proof. exact (MK_COMB (@lem2632103) (@lem2632055 m n)). Qed.
Lemma lem2632105 (m : int) (n : int) : (term643 n m) = (term882 m n).
Proof. exact (MK_COMB (@lem2632104 m n) (@lem2632102 m n)). Qed.
Lemma lem2632106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632107 (m : int) (n : int) : (term653 n m) = (term883 m n).
Proof. exact (MK_COMB (@lem2632106) (@lem2631899 m n)). Qed.
Lemma lem2632108 (m : int) (n : int) : (term654 n m) = (term884 m n).
Proof. exact (MK_COMB (@lem2632107 m n) (@lem2632105 m n)). Qed.
Lemma lem2632109 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632110 (n : int) (m : int) : (term677 n m) = (term885 n m).
Proof. exact (MK_COMB (@lem2632109) (@lem2631579 n m)). Qed.
Lemma lem2632111 (m : int) (n : int) : (term678 n m) = (term886 m n).
Proof. exact (MK_COMB (@lem2632110 n m) (@lem2632108 m n)). Qed.
Lemma lem2632122 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632123 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632122 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632130 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632133 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632136 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632133 m) (@lem2632130 n)). Qed.
Lemma lem2632137 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632138 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632137) (@lem2632136 m n)). Qed.
Lemma lem2632139 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632140 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632138 m n) (@lem2632139)). Qed.
Lemma lem2632159 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632160 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632159 m n) (@lem2632140 m n)). Qed.
Lemma lem2632161 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632123 m n) (@lem2632160 m n)). Qed.
Lemma lem2632162 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2632163 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2632162 n) (@lem2632161 m n)). Qed.
Lemma lem2632164 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632165 (m : int) (n : int) : (term887 n m) = (term888 m n).
Proof. exact (MK_COMB (@lem2632164) (@lem2632163 m n)). Qed.
Lemma lem2632166 (n : int) : (term158 n) = (term158 n).
Proof. exact (eq_refl (term158 n)). Qed.
Lemma lem2632167 (m : int) (n : int) : (term594 m n) = (term889 m n).
Proof. exact (MK_COMB (@lem2632165 m n) (@lem2632166 n)). Qed.
Lemma lem2632168 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632169 (m : int) (n : int) : (term890 m n) = (term891 m n).
Proof. exact (MK_COMB (@lem2632168) (@lem2632167 m n)). Qed.
Lemma lem2632170 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (eq_refl ((real_of_int n) = term38)). Qed.
Lemma lem2632173 (m : int) (n : int) : (term892 m n) = (term893 m n).
Proof. exact (MK_COMB (@lem2632169 m n) (@lem2632170 n)). Qed.
Lemma lem2632175 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632176 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632175 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632183 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632186 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632189 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632186 m) (@lem2632183 n)). Qed.
Lemma lem2632190 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632191 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632190) (@lem2632189 m n)). Qed.
Lemma lem2632192 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632193 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632191 m n) (@lem2632192)). Qed.
Lemma lem2632212 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632213 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632212 m n) (@lem2632193 m n)). Qed.
Lemma lem2632214 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632176 m n) (@lem2632213 m n)). Qed.
Lemma lem2632215 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2632216 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2632215 n) (@lem2632214 m n)). Qed.
Lemma lem2632217 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632218 (m : int) (n : int) : (term894 n m) = (term895 m n).
Proof. exact (MK_COMB (@lem2632217) (@lem2632216 m n)). Qed.
Lemma lem2632219 (n : int) : (term158 n) = (term158 n).
Proof. exact (eq_refl (term158 n)). Qed.
Lemma lem2632220 (m : int) (n : int) : (term595 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem2632218 m n) (@lem2632219 n)). Qed.
Lemma lem2632221 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632222 (m : int) (n : int) : (term897 m n) = (term898 m n).
Proof. exact (MK_COMB (@lem2632221) (@lem2632220 m n)). Qed.
Lemma lem2632223 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (eq_refl ((real_of_int n) = term38)). Qed.
Lemma lem2632226 (m : int) (n : int) : (term899 m n) = (term900 m n).
Proof. exact (MK_COMB (@lem2632222 m n) (@lem2632223 n)). Qed.
Lemma lem2632227 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632228 (m : int) (n : int) : (term901 m n) = (term902 m n).
Proof. exact (MK_COMB (@lem2632227) (@lem2632173 m n)). Qed.
Lemma lem2632229 (m : int) (n : int) : (term620 m n) = (term903 m n).
Proof. exact (MK_COMB (@lem2632228 m n) (@lem2632226 m n)). Qed.
Lemma lem2632231 (m : int) (n : int) : (term624 m n) = (term624 m n).
Proof. exact (eq_refl (term624 m n)). Qed.
Lemma lem2632232 (m : int) (n : int) : (term625 m n) = (term904 m n).
Proof. exact (MK_COMB (@lem2632231 m n) (@lem2632229 m n)). Qed.
Lemma lem2632243 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632244 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632243 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632251 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632254 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632257 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632254 m) (@lem2632251 n)). Qed.
Lemma lem2632258 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632259 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632258) (@lem2632257 m n)). Qed.
Lemma lem2632260 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632261 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632259 m n) (@lem2632260)). Qed.
Lemma lem2632280 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632281 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632280 m n) (@lem2632261 m n)). Qed.
Lemma lem2632282 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632244 m n) (@lem2632281 m n)). Qed.
Lemma lem2632283 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2632284 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2632283 n) (@lem2632282 m n)). Qed.
Lemma lem2632285 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632286 (m : int) (n : int) : (term887 n m) = (term888 m n).
Proof. exact (MK_COMB (@lem2632285) (@lem2632284 m n)). Qed.
Lemma lem2632287 (n : int) : (term167 n) = (term167 n).
Proof. exact (eq_refl (term167 n)). Qed.
Lemma lem2632288 (m : int) (n : int) : (term581 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem2632286 m n) (@lem2632287 n)). Qed.
Lemma lem2632289 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632290 (m : int) (n : int) : (term906 m n) = (term907 m n).
Proof. exact (MK_COMB (@lem2632289) (@lem2632288 m n)). Qed.
Lemma lem2632291 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (eq_refl ((real_of_int n) = term38)). Qed.
Lemma lem2632294 (m : int) (n : int) : (term908 m n) = (term909 m n).
Proof. exact (MK_COMB (@lem2632290 m n) (@lem2632291 n)). Qed.
Lemma lem2632296 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632297 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632296 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632304 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632307 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632310 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632307 m) (@lem2632304 n)). Qed.
Lemma lem2632311 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632312 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632311) (@lem2632310 m n)). Qed.
Lemma lem2632313 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632314 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632312 m n) (@lem2632313)). Qed.
Lemma lem2632333 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632334 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632333 m n) (@lem2632314 m n)). Qed.
Lemma lem2632335 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632297 m n) (@lem2632334 m n)). Qed.
Lemma lem2632336 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2632337 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2632336 n) (@lem2632335 m n)). Qed.
Lemma lem2632338 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632339 (m : int) (n : int) : (term894 n m) = (term895 m n).
Proof. exact (MK_COMB (@lem2632338) (@lem2632337 m n)). Qed.
Lemma lem2632340 (n : int) : (term167 n) = (term167 n).
Proof. exact (eq_refl (term167 n)). Qed.
Lemma lem2632341 (m : int) (n : int) : (term582 m n) = (term910 m n).
Proof. exact (MK_COMB (@lem2632339 m n) (@lem2632340 n)). Qed.
Lemma lem2632342 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632343 (m : int) (n : int) : (term911 m n) = (term912 m n).
Proof. exact (MK_COMB (@lem2632342) (@lem2632341 m n)). Qed.
Lemma lem2632344 (n : int) : ((real_of_int n) = term38) = ((real_of_int n) = term38).
Proof. exact (eq_refl ((real_of_int n) = term38)). Qed.
Lemma lem2632347 (m : int) (n : int) : (term913 m n) = (term914 m n).
Proof. exact (MK_COMB (@lem2632343 m n) (@lem2632344 n)). Qed.
Lemma lem2632348 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632349 (m : int) (n : int) : (term915 m n) = (term916 m n).
Proof. exact (MK_COMB (@lem2632348) (@lem2632294 m n)). Qed.
Lemma lem2632350 (m : int) (n : int) : (term611 m n) = (term917 m n).
Proof. exact (MK_COMB (@lem2632349 m n) (@lem2632347 m n)). Qed.
Lemma lem2632352 (m : int) (n : int) : (term615 m n) = (term615 m n).
Proof. exact (eq_refl (term615 m n)). Qed.
Lemma lem2632353 (m : int) (n : int) : (term616 m n) = (term918 m n).
Proof. exact (MK_COMB (@lem2632352 m n) (@lem2632350 m n)). Qed.
Lemma lem2632354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632355 (m : int) (n : int) : (term627 m n) = (term919 m n).
Proof. exact (MK_COMB (@lem2632354) (@lem2632232 m n)). Qed.
Lemma lem2632356 (m : int) (n : int) : (term628 m n) = (term920 m n).
Proof. exact (MK_COMB (@lem2632355 m n) (@lem2632353 m n)). Qed.
Lemma lem2632358 (n : int) (m : int) : (term921 m n) = (term922 n m).
Proof. exact (eq_refl (term921 m n)). Qed.
Lemma lem2632359 (m : int) (n : int) : (term922 n m) = (term921 m n).
Proof. exact (SYM (@lem2632358 n m)). Qed.
Lemma lem2632360 (m : int) (n : int) : (term921 m n) = (term923 m n).
Proof. exact (@lem1482981 (term924 n m) (real_of_int n)). Qed.
Lemma lem2632361 (m : int) (n : int) : (term922 n m) = (term923 m n).
Proof. exact (TRANS (@lem2632359 m n) (@lem2632360 m n)). Qed.
Lemma lem2632362 (n : int) (m : int) : (term925 m n) = (term926 n m).
Proof. exact (eq_refl (term925 m n)). Qed.
Lemma lem2632363 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632364 (n : int) (m : int) : (term927 m n) = (term928 n m).
Proof. exact (MK_COMB (@lem2632363 n) (@lem2632362 n m)). Qed.
Lemma lem2632365 (n : int) (m : int) : (term929 m n) = (term930 n m).
Proof. exact (eq_refl (term929 m n)). Qed.
Lemma lem2632366 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632367 (n : int) (m : int) : (term931 m n) = (term932 n m).
Proof. exact (MK_COMB (@lem2632366 n) (@lem2632365 n m)). Qed.
Lemma lem2632368 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632369 (n : int) (m : int) : (term933 m n) = (term934 n m).
Proof. exact (MK_COMB (@lem2632368) (@lem2632367 n m)). Qed.
Lemma lem2632370 (n : int) (m : int) : (term923 m n) = (term935 n m).
Proof. exact (MK_COMB (@lem2632369 n m) (@lem2632364 n m)). Qed.
Lemma lem2632371 (n : int) (m : int) : (term936 n m) = (term936 n m).
Proof. exact (eq_refl (term936 n m)). Qed.
Lemma lem2632372 (n : int) (m : int) : ((term922 n m) = (term923 m n)) = ((term922 n m) = (term935 n m)).
Proof. exact (MK_COMB (@lem2632371 n m) (@lem2632370 n m)). Qed.
Lemma lem2632373 (n : int) (m : int) : (term922 n m) = (term935 n m).
Proof. exact (EQ_MP (@lem2632372 n m) (@lem2632361 m n)). Qed.
Lemma lem2632374 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632375 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632374) (@lem2631254 n)). Qed.
Lemma lem2632376 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2632375 n) (@lem2631314 m)). Qed.
Lemma lem2632377 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632378 (n : int) (m : int) : (term937 n m) = (term937 n m).
Proof. exact (MK_COMB (@lem2632377) (@lem2632376 n m)). Qed.
Lemma lem2632379 (m : int) (n : int) : (term598 m n) = (term598 m n).
Proof. exact (MK_COMB (@lem2632378 n m) (@lem2631254 n)). Qed.
Lemma lem2632380 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632381 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632380) (@lem2631121 m)). Qed.
Lemma lem2632382 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632381 m) (@lem2631191 m n)). Qed.
Lemma lem2632383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632384 (m : int) (n : int) : (term938 m n) = (term938 m n).
Proof. exact (MK_COMB (@lem2632383) (@lem2632379 m n)). Qed.
Lemma lem2632385 (m : int) (n : int) : (term930 n m) = (term939 m n).
Proof. exact (MK_COMB (@lem2632384 m n) (@lem2632382 m n)). Qed.
Lemma lem2632386 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632387 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632386) (@lem2631073 n)). Qed.
Lemma lem2632388 (m : int) (n : int) : (term932 n m) = (term940 m n).
Proof. exact (MK_COMB (@lem2632387 n) (@lem2632385 m n)). Qed.
Lemma lem2632389 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632390 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632389) (@lem2631254 n)). Qed.
Lemma lem2632391 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2632390 n) (@lem2631314 m)). Qed.
Lemma lem2632392 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632393 (n : int) (m : int) : (term937 n m) = (term937 n m).
Proof. exact (MK_COMB (@lem2632392) (@lem2632391 n m)). Qed.
Lemma lem2632394 (m : int) (n : int) : (term598 m n) = (term598 m n).
Proof. exact (MK_COMB (@lem2632393 n m) (@lem2631254 n)). Qed.
Lemma lem2632395 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632396 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632395) (@lem2631121 m)). Qed.
Lemma lem2632397 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632396 m) (@lem2631418 m n)). Qed.
Lemma lem2632398 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632399 (m : int) (n : int) : (term938 m n) = (term938 m n).
Proof. exact (MK_COMB (@lem2632398) (@lem2632394 m n)). Qed.
Lemma lem2632400 (m : int) (n : int) : (term926 n m) = (term941 m n).
Proof. exact (MK_COMB (@lem2632399 m n) (@lem2632397 m n)). Qed.
Lemma lem2632401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632402 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632401) (@lem2631342 n)). Qed.
Lemma lem2632403 (m : int) (n : int) : (term928 n m) = (term942 m n).
Proof. exact (MK_COMB (@lem2632402 n) (@lem2632400 m n)). Qed.
Lemma lem2632404 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632405 (m : int) (n : int) : (term934 n m) = (term943 m n).
Proof. exact (MK_COMB (@lem2632404) (@lem2632388 m n)). Qed.
Lemma lem2632406 (m : int) (n : int) : (term935 n m) = (term944 m n).
Proof. exact (MK_COMB (@lem2632405 m n) (@lem2632403 m n)). Qed.
Lemma lem2632418 (m : int) (n : int) : (term922 n m) = (term944 m n).
Proof. exact (TRANS (@lem2632373 n m) (@lem2632406 m n)). Qed.
Lemma lem2632420 (n : int) (m : int) : (term945 m n) = (term946 n m).
Proof. exact (eq_refl (term945 m n)). Qed.
Lemma lem2632421 (m : int) (n : int) : (term946 n m) = (term945 m n).
Proof. exact (SYM (@lem2632420 n m)). Qed.
Lemma lem2632422 (m : int) (n : int) : (term945 m n) = (term947 m n).
Proof. exact (@lem1482981 (term948 n m) (real_of_int n)). Qed.
Lemma lem2632423 (m : int) (n : int) : (term946 n m) = (term947 m n).
Proof. exact (TRANS (@lem2632421 m n) (@lem2632422 m n)). Qed.
Lemma lem2632424 (n : int) (m : int) : (term949 m n) = (term950 n m).
Proof. exact (eq_refl (term949 m n)). Qed.
Lemma lem2632425 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632426 (n : int) (m : int) : (term951 m n) = (term952 n m).
Proof. exact (MK_COMB (@lem2632425 n) (@lem2632424 n m)). Qed.
Lemma lem2632427 (n : int) (m : int) : (term953 m n) = (term954 n m).
Proof. exact (eq_refl (term953 m n)). Qed.
Lemma lem2632428 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632429 (n : int) (m : int) : (term955 m n) = (term956 n m).
Proof. exact (MK_COMB (@lem2632428 n) (@lem2632427 n m)). Qed.
Lemma lem2632430 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632431 (n : int) (m : int) : (term957 m n) = (term958 n m).
Proof. exact (MK_COMB (@lem2632430) (@lem2632429 n m)). Qed.
Lemma lem2632432 (n : int) (m : int) : (term947 m n) = (term959 n m).
Proof. exact (MK_COMB (@lem2632431 n m) (@lem2632426 n m)). Qed.
Lemma lem2632433 (n : int) (m : int) : (term960 n m) = (term960 n m).
Proof. exact (eq_refl (term960 n m)). Qed.
Lemma lem2632434 (n : int) (m : int) : ((term946 n m) = (term947 m n)) = ((term946 n m) = (term959 n m)).
Proof. exact (MK_COMB (@lem2632433 n m) (@lem2632432 n m)). Qed.
Lemma lem2632435 (n : int) (m : int) : (term946 n m) = (term959 n m).
Proof. exact (EQ_MP (@lem2632434 n m) (@lem2632423 m n)). Qed.
Lemma lem2632436 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632437 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632436) (@lem2631531 n)). Qed.
Lemma lem2632438 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2632437 n) (@lem2631314 m)). Qed.
Lemma lem2632439 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632440 (n : int) (m : int) : (term961 n m) = (term961 n m).
Proof. exact (MK_COMB (@lem2632439) (@lem2632438 n m)). Qed.
Lemma lem2632441 (m : int) (n : int) : (term599 m n) = (term599 m n).
Proof. exact (MK_COMB (@lem2632440 n m) (@lem2631254 n)). Qed.
Lemma lem2632442 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632443 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632442) (@lem2631121 m)). Qed.
Lemma lem2632444 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632443 m) (@lem2631191 m n)). Qed.
Lemma lem2632445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632446 (m : int) (n : int) : (term962 m n) = (term962 m n).
Proof. exact (MK_COMB (@lem2632445) (@lem2632441 m n)). Qed.
Lemma lem2632447 (m : int) (n : int) : (term954 n m) = (term963 m n).
Proof. exact (MK_COMB (@lem2632446 m n) (@lem2632444 m n)). Qed.
Lemma lem2632448 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632449 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632448) (@lem2631073 n)). Qed.
Lemma lem2632450 (m : int) (n : int) : (term956 n m) = (term964 m n).
Proof. exact (MK_COMB (@lem2632449 n) (@lem2632447 m n)). Qed.
Lemma lem2632451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632452 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632451) (@lem2631531 n)). Qed.
Lemma lem2632453 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2632452 n) (@lem2631314 m)). Qed.
Lemma lem2632454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632455 (n : int) (m : int) : (term961 n m) = (term961 n m).
Proof. exact (MK_COMB (@lem2632454) (@lem2632453 n m)). Qed.
Lemma lem2632456 (m : int) (n : int) : (term599 m n) = (term599 m n).
Proof. exact (MK_COMB (@lem2632455 n m) (@lem2631254 n)). Qed.
Lemma lem2632457 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632458 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632457) (@lem2631121 m)). Qed.
Lemma lem2632459 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632458 m) (@lem2631418 m n)). Qed.
Lemma lem2632460 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632461 (m : int) (n : int) : (term962 m n) = (term962 m n).
Proof. exact (MK_COMB (@lem2632460) (@lem2632456 m n)). Qed.
Lemma lem2632462 (m : int) (n : int) : (term950 n m) = (term965 m n).
Proof. exact (MK_COMB (@lem2632461 m n) (@lem2632459 m n)). Qed.
Lemma lem2632463 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632464 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632463) (@lem2631342 n)). Qed.
Lemma lem2632465 (m : int) (n : int) : (term952 n m) = (term966 m n).
Proof. exact (MK_COMB (@lem2632464 n) (@lem2632462 m n)). Qed.
Lemma lem2632466 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632467 (m : int) (n : int) : (term958 n m) = (term967 m n).
Proof. exact (MK_COMB (@lem2632466) (@lem2632450 m n)). Qed.
Lemma lem2632468 (m : int) (n : int) : (term959 n m) = (term968 m n).
Proof. exact (MK_COMB (@lem2632467 m n) (@lem2632465 m n)). Qed.
Lemma lem2632480 (m : int) (n : int) : (term946 n m) = (term968 m n).
Proof. exact (TRANS (@lem2632435 n m) (@lem2632468 m n)). Qed.
Lemma lem2632481 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632482 (m : int) (n : int) : (term969 n m) = (term970 m n).
Proof. exact (MK_COMB (@lem2632481) (@lem2632418 m n)). Qed.
Lemma lem2632483 (m : int) (n : int) : (term597 n m) = (term971 m n).
Proof. exact (MK_COMB (@lem2632482 m n) (@lem2632480 m n)). Qed.
Lemma lem2632485 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632486 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632485 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632493 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632496 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632499 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632496 m) (@lem2632493 n)). Qed.
Lemma lem2632500 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632501 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632500) (@lem2632499 m n)). Qed.
Lemma lem2632502 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632503 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632501 m n) (@lem2632502)). Qed.
Lemma lem2632522 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632523 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632522 m n) (@lem2632503 m n)). Qed.
Lemma lem2632524 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632486 m n) (@lem2632523 m n)). Qed.
Lemma lem2632525 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2632526 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2632525 n) (@lem2632524 m n)). Qed.
Lemma lem2632527 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632528 (m : int) (n : int) : (term887 n m) = (term888 m n).
Proof. exact (MK_COMB (@lem2632527) (@lem2632526 m n)). Qed.
Lemma lem2632529 (n : int) : (term158 n) = (term158 n).
Proof. exact (eq_refl (term158 n)). Qed.
Lemma lem2632530 (m : int) (n : int) : (term594 m n) = (term889 m n).
Proof. exact (MK_COMB (@lem2632528 m n) (@lem2632529 n)). Qed.
Lemma lem2632531 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632532 (m : int) (n : int) : (term890 m n) = (term891 m n).
Proof. exact (MK_COMB (@lem2632531) (@lem2632530 m n)). Qed.
Lemma lem2632533 (n : int) (m : int) : (term467 n m) = (term467 n m).
Proof. exact (eq_refl (term467 n m)). Qed.
Lemma lem2632534 (n : int) (m : int) : (term972 n m) = (term973 n m).
Proof. exact (MK_COMB (@lem2632532 m n) (@lem2632533 n m)). Qed.
Lemma lem2632535 (n : int) (m : int) : (term974 m n) = (term973 n m).
Proof. exact (eq_refl (term974 m n)). Qed.
Lemma lem2632536 (m : int) (n : int) : (term973 n m) = (term974 m n).
Proof. exact (SYM (@lem2632535 n m)). Qed.
Lemma lem2632537 (m : int) (n : int) : (term974 m n) = (term975 m n).
Proof. exact (@lem1482981 (term976 n m) (real_of_int n)). Qed.
Lemma lem2632538 (m : int) (n : int) : (term973 n m) = (term975 m n).
Proof. exact (TRANS (@lem2632536 m n) (@lem2632537 m n)). Qed.
Lemma lem2632539 (n : int) (m : int) : (term977 m n) = (term978 n m).
Proof. exact (eq_refl (term977 m n)). Qed.
Lemma lem2632540 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632541 (n : int) (m : int) : (term979 m n) = (term980 n m).
Proof. exact (MK_COMB (@lem2632540 n) (@lem2632539 n m)). Qed.
Lemma lem2632542 (n : int) (m : int) : (term981 m n) = (term982 n m).
Proof. exact (eq_refl (term981 m n)). Qed.
Lemma lem2632543 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632544 (n : int) (m : int) : (term983 m n) = (term984 n m).
Proof. exact (MK_COMB (@lem2632543 n) (@lem2632542 n m)). Qed.
Lemma lem2632545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632546 (n : int) (m : int) : (term985 m n) = (term986 n m).
Proof. exact (MK_COMB (@lem2632545) (@lem2632544 n m)). Qed.
Lemma lem2632547 (n : int) (m : int) : (term975 m n) = (term987 n m).
Proof. exact (MK_COMB (@lem2632546 n m) (@lem2632541 n m)). Qed.
Lemma lem2632548 (n : int) (m : int) : (term988 n m) = (term988 n m).
Proof. exact (eq_refl (term988 n m)). Qed.
Lemma lem2632549 (n : int) (m : int) : ((term973 n m) = (term975 m n)) = ((term973 n m) = (term987 n m)).
Proof. exact (MK_COMB (@lem2632548 n m) (@lem2632547 n m)). Qed.
Lemma lem2632550 (n : int) (m : int) : (term973 n m) = (term987 n m).
Proof. exact (EQ_MP (@lem2632549 n m) (@lem2632538 m n)). Qed.
Lemma lem2632551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632552 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632551) (@lem2631750 m n)). Qed.
Lemma lem2632553 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632552 m n) (@lem2631804 m n)). Qed.
Lemma lem2632554 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632555 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632554) (@lem2631254 n)). Qed.
Lemma lem2632556 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2632555 n) (@lem2632553 m n)). Qed.
Lemma lem2632557 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632558 (m : int) (n : int) : (term888 m n) = (term888 m n).
Proof. exact (MK_COMB (@lem2632557) (@lem2632556 m n)). Qed.
Lemma lem2632559 (m : int) (n : int) : (term889 m n) = (term889 m n).
Proof. exact (MK_COMB (@lem2632558 m n) (@lem2631254 n)). Qed.
Lemma lem2632560 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632561 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632560) (@lem2631121 m)). Qed.
Lemma lem2632562 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632561 m) (@lem2631191 m n)). Qed.
Lemma lem2632563 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632564 (m : int) (n : int) : (term891 m n) = (term891 m n).
Proof. exact (MK_COMB (@lem2632563) (@lem2632559 m n)). Qed.
Lemma lem2632565 (m : int) (n : int) : (term982 n m) = (term989 m n).
Proof. exact (MK_COMB (@lem2632564 m n) (@lem2632562 m n)). Qed.
Lemma lem2632566 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632567 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632566) (@lem2631073 n)). Qed.
Lemma lem2632568 (m : int) (n : int) : (term984 n m) = (term990 m n).
Proof. exact (MK_COMB (@lem2632567 n) (@lem2632565 m n)). Qed.
Lemma lem2632569 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632570 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632569) (@lem2631750 m n)). Qed.
Lemma lem2632571 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632570 m n) (@lem2631804 m n)). Qed.
Lemma lem2632572 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632573 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632572) (@lem2631254 n)). Qed.
Lemma lem2632574 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2632573 n) (@lem2632571 m n)). Qed.
Lemma lem2632575 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632576 (m : int) (n : int) : (term888 m n) = (term888 m n).
Proof. exact (MK_COMB (@lem2632575) (@lem2632574 m n)). Qed.
Lemma lem2632577 (m : int) (n : int) : (term889 m n) = (term889 m n).
Proof. exact (MK_COMB (@lem2632576 m n) (@lem2631254 n)). Qed.
Lemma lem2632578 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632579 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632578) (@lem2631121 m)). Qed.
Lemma lem2632580 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632579 m) (@lem2631418 m n)). Qed.
Lemma lem2632581 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632582 (m : int) (n : int) : (term891 m n) = (term891 m n).
Proof. exact (MK_COMB (@lem2632581) (@lem2632577 m n)). Qed.
Lemma lem2632583 (m : int) (n : int) : (term978 n m) = (term991 m n).
Proof. exact (MK_COMB (@lem2632582 m n) (@lem2632580 m n)). Qed.
Lemma lem2632584 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632585 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632584) (@lem2631342 n)). Qed.
Lemma lem2632586 (m : int) (n : int) : (term980 n m) = (term992 m n).
Proof. exact (MK_COMB (@lem2632585 n) (@lem2632583 m n)). Qed.
Lemma lem2632587 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632588 (m : int) (n : int) : (term986 n m) = (term993 m n).
Proof. exact (MK_COMB (@lem2632587) (@lem2632568 m n)). Qed.
Lemma lem2632589 (m : int) (n : int) : (term987 n m) = (term994 m n).
Proof. exact (MK_COMB (@lem2632588 m n) (@lem2632586 m n)). Qed.
Lemma lem2632600 (m : int) (n : int) : (term973 n m) = (term994 m n).
Proof. exact (TRANS (@lem2632550 n m) (@lem2632589 m n)). Qed.
Lemma lem2632601 (m : int) (n : int) : (term972 n m) = (term994 m n).
Proof. exact (TRANS (@lem2632534 n m) (@lem2632600 m n)). Qed.
Lemma lem2632603 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632604 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632603 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632611 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632614 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632617 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632614 m) (@lem2632611 n)). Qed.
Lemma lem2632618 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632619 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632618) (@lem2632617 m n)). Qed.
Lemma lem2632620 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632621 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632619 m n) (@lem2632620)). Qed.
Lemma lem2632640 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632641 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632640 m n) (@lem2632621 m n)). Qed.
Lemma lem2632642 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632604 m n) (@lem2632641 m n)). Qed.
Lemma lem2632643 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2632644 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2632643 n) (@lem2632642 m n)). Qed.
Lemma lem2632645 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632646 (m : int) (n : int) : (term894 n m) = (term895 m n).
Proof. exact (MK_COMB (@lem2632645) (@lem2632644 m n)). Qed.
Lemma lem2632647 (n : int) : (term158 n) = (term158 n).
Proof. exact (eq_refl (term158 n)). Qed.
Lemma lem2632648 (m : int) (n : int) : (term595 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem2632646 m n) (@lem2632647 n)). Qed.
Lemma lem2632649 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632650 (m : int) (n : int) : (term897 m n) = (term898 m n).
Proof. exact (MK_COMB (@lem2632649) (@lem2632648 m n)). Qed.
Lemma lem2632651 (n : int) (m : int) : (term467 n m) = (term467 n m).
Proof. exact (eq_refl (term467 n m)). Qed.
Lemma lem2632652 (n : int) (m : int) : (term995 n m) = (term996 n m).
Proof. exact (MK_COMB (@lem2632650 m n) (@lem2632651 n m)). Qed.
Lemma lem2632653 (n : int) (m : int) : (term997 m n) = (term996 n m).
Proof. exact (eq_refl (term997 m n)). Qed.
Lemma lem2632654 (m : int) (n : int) : (term996 n m) = (term997 m n).
Proof. exact (SYM (@lem2632653 n m)). Qed.
Lemma lem2632655 (m : int) (n : int) : (term997 m n) = (term998 m n).
Proof. exact (@lem1482981 (term999 n m) (real_of_int n)). Qed.
Lemma lem2632656 (m : int) (n : int) : (term996 n m) = (term998 m n).
Proof. exact (TRANS (@lem2632654 m n) (@lem2632655 m n)). Qed.
Lemma lem2632657 (n : int) (m : int) : (term1000 m n) = (term1001 n m).
Proof. exact (eq_refl (term1000 m n)). Qed.
Lemma lem2632658 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632659 (n : int) (m : int) : (term1002 m n) = (term1003 n m).
Proof. exact (MK_COMB (@lem2632658 n) (@lem2632657 n m)). Qed.
Lemma lem2632660 (n : int) (m : int) : (term1004 m n) = (term1005 n m).
Proof. exact (eq_refl (term1004 m n)). Qed.
Lemma lem2632661 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632662 (n : int) (m : int) : (term1006 m n) = (term1007 n m).
Proof. exact (MK_COMB (@lem2632661 n) (@lem2632660 n m)). Qed.
Lemma lem2632663 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632664 (n : int) (m : int) : (term1008 m n) = (term1009 n m).
Proof. exact (MK_COMB (@lem2632663) (@lem2632662 n m)). Qed.
Lemma lem2632665 (n : int) (m : int) : (term998 m n) = (term1010 n m).
Proof. exact (MK_COMB (@lem2632664 n m) (@lem2632659 n m)). Qed.
Lemma lem2632666 (n : int) (m : int) : (term1011 n m) = (term1011 n m).
Proof. exact (eq_refl (term1011 n m)). Qed.
Lemma lem2632667 (n : int) (m : int) : ((term996 n m) = (term998 m n)) = ((term996 n m) = (term1010 n m)).
Proof. exact (MK_COMB (@lem2632666 n m) (@lem2632665 n m)). Qed.
Lemma lem2632668 (n : int) (m : int) : (term996 n m) = (term1010 n m).
Proof. exact (EQ_MP (@lem2632667 n m) (@lem2632656 m n)). Qed.
Lemma lem2632669 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632670 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632669) (@lem2631750 m n)). Qed.
Lemma lem2632671 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632670 m n) (@lem2631804 m n)). Qed.
Lemma lem2632672 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632673 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632672) (@lem2631531 n)). Qed.
Lemma lem2632674 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2632673 n) (@lem2632671 m n)). Qed.
Lemma lem2632675 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632676 (m : int) (n : int) : (term895 m n) = (term895 m n).
Proof. exact (MK_COMB (@lem2632675) (@lem2632674 m n)). Qed.
Lemma lem2632677 (m : int) (n : int) : (term896 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem2632676 m n) (@lem2631254 n)). Qed.
Lemma lem2632678 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632679 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632678) (@lem2631121 m)). Qed.
Lemma lem2632680 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632679 m) (@lem2631191 m n)). Qed.
Lemma lem2632681 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632682 (m : int) (n : int) : (term898 m n) = (term898 m n).
Proof. exact (MK_COMB (@lem2632681) (@lem2632677 m n)). Qed.
Lemma lem2632683 (m : int) (n : int) : (term1005 n m) = (term1012 m n).
Proof. exact (MK_COMB (@lem2632682 m n) (@lem2632680 m n)). Qed.
Lemma lem2632684 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632685 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632684) (@lem2631073 n)). Qed.
Lemma lem2632686 (m : int) (n : int) : (term1007 n m) = (term1013 m n).
Proof. exact (MK_COMB (@lem2632685 n) (@lem2632683 m n)). Qed.
Lemma lem2632687 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632688 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632687) (@lem2631750 m n)). Qed.
Lemma lem2632689 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632688 m n) (@lem2631804 m n)). Qed.
Lemma lem2632690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632691 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632690) (@lem2631531 n)). Qed.
Lemma lem2632692 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2632691 n) (@lem2632689 m n)). Qed.
Lemma lem2632693 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632694 (m : int) (n : int) : (term895 m n) = (term895 m n).
Proof. exact (MK_COMB (@lem2632693) (@lem2632692 m n)). Qed.
Lemma lem2632695 (m : int) (n : int) : (term896 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem2632694 m n) (@lem2631254 n)). Qed.
Lemma lem2632696 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632697 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632696) (@lem2631121 m)). Qed.
Lemma lem2632698 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632697 m) (@lem2631418 m n)). Qed.
Lemma lem2632699 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632700 (m : int) (n : int) : (term898 m n) = (term898 m n).
Proof. exact (MK_COMB (@lem2632699) (@lem2632695 m n)). Qed.
Lemma lem2632701 (m : int) (n : int) : (term1001 n m) = (term1014 m n).
Proof. exact (MK_COMB (@lem2632700 m n) (@lem2632698 m n)). Qed.
Lemma lem2632702 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632703 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632702) (@lem2631342 n)). Qed.
Lemma lem2632704 (m : int) (n : int) : (term1003 n m) = (term1015 m n).
Proof. exact (MK_COMB (@lem2632703 n) (@lem2632701 m n)). Qed.
Lemma lem2632705 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632706 (m : int) (n : int) : (term1009 n m) = (term1016 m n).
Proof. exact (MK_COMB (@lem2632705) (@lem2632686 m n)). Qed.
Lemma lem2632707 (m : int) (n : int) : (term1010 n m) = (term1017 m n).
Proof. exact (MK_COMB (@lem2632706 m n) (@lem2632704 m n)). Qed.
Lemma lem2632718 (m : int) (n : int) : (term996 n m) = (term1017 m n).
Proof. exact (TRANS (@lem2632668 n m) (@lem2632707 m n)). Qed.
Lemma lem2632719 (m : int) (n : int) : (term995 n m) = (term1017 m n).
Proof. exact (TRANS (@lem2632652 n m) (@lem2632718 m n)). Qed.
Lemma lem2632720 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632721 (m : int) (n : int) : (term1018 n m) = (term1019 m n).
Proof. exact (MK_COMB (@lem2632720) (@lem2632601 m n)). Qed.
Lemma lem2632722 (m : int) (n : int) : (term593 n m) = (term1020 m n).
Proof. exact (MK_COMB (@lem2632721 m n) (@lem2632719 m n)). Qed.
Lemma lem2632723 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632724 (m : int) (n : int) : (term601 n m) = (term1021 m n).
Proof. exact (MK_COMB (@lem2632723) (@lem2632483 m n)). Qed.
Lemma lem2632725 (m : int) (n : int) : (term602 n m) = (term1022 m n).
Proof. exact (MK_COMB (@lem2632724 m n) (@lem2632722 m n)). Qed.
Lemma lem2632727 (n : int) (m : int) : (term1023 m n) = (term1024 n m).
Proof. exact (eq_refl (term1023 m n)). Qed.
Lemma lem2632728 (m : int) (n : int) : (term1024 n m) = (term1023 m n).
Proof. exact (SYM (@lem2632727 n m)). Qed.
Lemma lem2632729 (m : int) (n : int) : (term1023 m n) = (term1025 m n).
Proof. exact (@lem1482981 (term1026 n m) (real_of_int n)). Qed.
Lemma lem2632730 (m : int) (n : int) : (term1024 n m) = (term1025 m n).
Proof. exact (TRANS (@lem2632728 m n) (@lem2632729 m n)). Qed.
Lemma lem2632731 (n : int) (m : int) : (term1027 m n) = (term1028 n m).
Proof. exact (eq_refl (term1027 m n)). Qed.
Lemma lem2632732 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632733 (n : int) (m : int) : (term1029 m n) = (term1030 n m).
Proof. exact (MK_COMB (@lem2632732 n) (@lem2632731 n m)). Qed.
Lemma lem2632734 (n : int) (m : int) : (term1031 m n) = (term1032 n m).
Proof. exact (eq_refl (term1031 m n)). Qed.
Lemma lem2632735 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632736 (n : int) (m : int) : (term1033 m n) = (term1034 n m).
Proof. exact (MK_COMB (@lem2632735 n) (@lem2632734 n m)). Qed.
Lemma lem2632737 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632738 (n : int) (m : int) : (term1035 m n) = (term1036 n m).
Proof. exact (MK_COMB (@lem2632737) (@lem2632736 n m)). Qed.
Lemma lem2632739 (n : int) (m : int) : (term1025 m n) = (term1037 n m).
Proof. exact (MK_COMB (@lem2632738 n m) (@lem2632733 n m)). Qed.
Lemma lem2632740 (n : int) (m : int) : (term1038 n m) = (term1038 n m).
Proof. exact (eq_refl (term1038 n m)). Qed.
Lemma lem2632741 (n : int) (m : int) : ((term1024 n m) = (term1025 m n)) = ((term1024 n m) = (term1037 n m)).
Proof. exact (MK_COMB (@lem2632740 n m) (@lem2632739 n m)). Qed.
Lemma lem2632742 (n : int) (m : int) : (term1024 n m) = (term1037 n m).
Proof. exact (EQ_MP (@lem2632741 n m) (@lem2632730 m n)). Qed.
Lemma lem2632743 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632744 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632743) (@lem2631254 n)). Qed.
Lemma lem2632745 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2632744 n) (@lem2631314 m)). Qed.
Lemma lem2632746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632747 (n : int) (m : int) : (term937 n m) = (term937 n m).
Proof. exact (MK_COMB (@lem2632746) (@lem2632745 n m)). Qed.
Lemma lem2632748 (m : int) (n : int) : (term585 m n) = (term585 m n).
Proof. exact (MK_COMB (@lem2632747 n m) (@lem2631531 n)). Qed.
Lemma lem2632749 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632750 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632749) (@lem2631121 m)). Qed.
Lemma lem2632751 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632750 m) (@lem2631191 m n)). Qed.
Lemma lem2632752 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632753 (m : int) (n : int) : (term1039 m n) = (term1039 m n).
Proof. exact (MK_COMB (@lem2632752) (@lem2632748 m n)). Qed.
Lemma lem2632754 (m : int) (n : int) : (term1032 n m) = (term1040 m n).
Proof. exact (MK_COMB (@lem2632753 m n) (@lem2632751 m n)). Qed.
Lemma lem2632755 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632756 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632755) (@lem2631073 n)). Qed.
Lemma lem2632757 (m : int) (n : int) : (term1034 n m) = (term1041 m n).
Proof. exact (MK_COMB (@lem2632756 n) (@lem2632754 m n)). Qed.
Lemma lem2632758 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632759 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632758) (@lem2631254 n)). Qed.
Lemma lem2632760 (n : int) (m : int) : (term555 n m) = (term555 n m).
Proof. exact (MK_COMB (@lem2632759 n) (@lem2631314 m)). Qed.
Lemma lem2632761 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632762 (n : int) (m : int) : (term937 n m) = (term937 n m).
Proof. exact (MK_COMB (@lem2632761) (@lem2632760 n m)). Qed.
Lemma lem2632763 (m : int) (n : int) : (term585 m n) = (term585 m n).
Proof. exact (MK_COMB (@lem2632762 n m) (@lem2631531 n)). Qed.
Lemma lem2632764 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632765 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632764) (@lem2631121 m)). Qed.
Lemma lem2632766 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632765 m) (@lem2631418 m n)). Qed.
Lemma lem2632767 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632768 (m : int) (n : int) : (term1039 m n) = (term1039 m n).
Proof. exact (MK_COMB (@lem2632767) (@lem2632763 m n)). Qed.
Lemma lem2632769 (m : int) (n : int) : (term1028 n m) = (term1042 m n).
Proof. exact (MK_COMB (@lem2632768 m n) (@lem2632766 m n)). Qed.
Lemma lem2632770 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632771 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632770) (@lem2631342 n)). Qed.
Lemma lem2632772 (m : int) (n : int) : (term1030 n m) = (term1043 m n).
Proof. exact (MK_COMB (@lem2632771 n) (@lem2632769 m n)). Qed.
Lemma lem2632773 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632774 (m : int) (n : int) : (term1036 n m) = (term1044 m n).
Proof. exact (MK_COMB (@lem2632773) (@lem2632757 m n)). Qed.
Lemma lem2632775 (m : int) (n : int) : (term1037 n m) = (term1045 m n).
Proof. exact (MK_COMB (@lem2632774 m n) (@lem2632772 m n)). Qed.
Lemma lem2632787 (m : int) (n : int) : (term1024 n m) = (term1045 m n).
Proof. exact (TRANS (@lem2632742 n m) (@lem2632775 m n)). Qed.
Lemma lem2632789 (n : int) (m : int) : (term1046 m n) = (term1047 n m).
Proof. exact (eq_refl (term1046 m n)). Qed.
Lemma lem2632790 (m : int) (n : int) : (term1047 n m) = (term1046 m n).
Proof. exact (SYM (@lem2632789 n m)). Qed.
Lemma lem2632791 (m : int) (n : int) : (term1046 m n) = (term1048 m n).
Proof. exact (@lem1482981 (term1049 n m) (real_of_int n)). Qed.
Lemma lem2632792 (m : int) (n : int) : (term1047 n m) = (term1048 m n).
Proof. exact (TRANS (@lem2632790 m n) (@lem2632791 m n)). Qed.
Lemma lem2632793 (n : int) (m : int) : (term1050 m n) = (term1051 n m).
Proof. exact (eq_refl (term1050 m n)). Qed.
Lemma lem2632794 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632795 (n : int) (m : int) : (term1052 m n) = (term1053 n m).
Proof. exact (MK_COMB (@lem2632794 n) (@lem2632793 n m)). Qed.
Lemma lem2632796 (n : int) (m : int) : (term1054 m n) = (term1055 n m).
Proof. exact (eq_refl (term1054 m n)). Qed.
Lemma lem2632797 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632798 (n : int) (m : int) : (term1056 m n) = (term1057 n m).
Proof. exact (MK_COMB (@lem2632797 n) (@lem2632796 n m)). Qed.
Lemma lem2632799 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632800 (n : int) (m : int) : (term1058 m n) = (term1059 n m).
Proof. exact (MK_COMB (@lem2632799) (@lem2632798 n m)). Qed.
Lemma lem2632801 (n : int) (m : int) : (term1048 m n) = (term1060 n m).
Proof. exact (MK_COMB (@lem2632800 n m) (@lem2632795 n m)). Qed.
Lemma lem2632802 (n : int) (m : int) : (term1061 n m) = (term1061 n m).
Proof. exact (eq_refl (term1061 n m)). Qed.
Lemma lem2632803 (n : int) (m : int) : ((term1047 n m) = (term1048 m n)) = ((term1047 n m) = (term1060 n m)).
Proof. exact (MK_COMB (@lem2632802 n m) (@lem2632801 n m)). Qed.
Lemma lem2632804 (n : int) (m : int) : (term1047 n m) = (term1060 n m).
Proof. exact (EQ_MP (@lem2632803 n m) (@lem2632792 m n)). Qed.
Lemma lem2632805 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632806 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632805) (@lem2631531 n)). Qed.
Lemma lem2632807 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2632806 n) (@lem2631314 m)). Qed.
Lemma lem2632808 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632809 (n : int) (m : int) : (term961 n m) = (term961 n m).
Proof. exact (MK_COMB (@lem2632808) (@lem2632807 n m)). Qed.
Lemma lem2632810 (m : int) (n : int) : (term586 m n) = (term586 m n).
Proof. exact (MK_COMB (@lem2632809 n m) (@lem2631531 n)). Qed.
Lemma lem2632811 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632812 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632811) (@lem2631121 m)). Qed.
Lemma lem2632813 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632812 m) (@lem2631191 m n)). Qed.
Lemma lem2632814 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632815 (m : int) (n : int) : (term1062 m n) = (term1062 m n).
Proof. exact (MK_COMB (@lem2632814) (@lem2632810 m n)). Qed.
Lemma lem2632816 (m : int) (n : int) : (term1055 n m) = (term1063 m n).
Proof. exact (MK_COMB (@lem2632815 m n) (@lem2632813 m n)). Qed.
Lemma lem2632817 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632818 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632817) (@lem2631073 n)). Qed.
Lemma lem2632819 (m : int) (n : int) : (term1057 n m) = (term1064 m n).
Proof. exact (MK_COMB (@lem2632818 n) (@lem2632816 m n)). Qed.
Lemma lem2632820 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632821 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2632820) (@lem2631531 n)). Qed.
Lemma lem2632822 (n : int) (m : int) : (term556 n m) = (term556 n m).
Proof. exact (MK_COMB (@lem2632821 n) (@lem2631314 m)). Qed.
Lemma lem2632823 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632824 (n : int) (m : int) : (term961 n m) = (term961 n m).
Proof. exact (MK_COMB (@lem2632823) (@lem2632822 n m)). Qed.
Lemma lem2632825 (m : int) (n : int) : (term586 m n) = (term586 m n).
Proof. exact (MK_COMB (@lem2632824 n m) (@lem2631531 n)). Qed.
Lemma lem2632826 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632827 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632826) (@lem2631121 m)). Qed.
Lemma lem2632828 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632827 m) (@lem2631418 m n)). Qed.
Lemma lem2632829 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632830 (m : int) (n : int) : (term1062 m n) = (term1062 m n).
Proof. exact (MK_COMB (@lem2632829) (@lem2632825 m n)). Qed.
Lemma lem2632831 (m : int) (n : int) : (term1051 n m) = (term1065 m n).
Proof. exact (MK_COMB (@lem2632830 m n) (@lem2632828 m n)). Qed.
Lemma lem2632832 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632833 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632832) (@lem2631342 n)). Qed.
Lemma lem2632834 (m : int) (n : int) : (term1053 n m) = (term1066 m n).
Proof. exact (MK_COMB (@lem2632833 n) (@lem2632831 m n)). Qed.
Lemma lem2632835 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632836 (m : int) (n : int) : (term1059 n m) = (term1067 m n).
Proof. exact (MK_COMB (@lem2632835) (@lem2632819 m n)). Qed.
Lemma lem2632837 (m : int) (n : int) : (term1060 n m) = (term1068 m n).
Proof. exact (MK_COMB (@lem2632836 m n) (@lem2632834 m n)). Qed.
Lemma lem2632849 (m : int) (n : int) : (term1047 n m) = (term1068 m n).
Proof. exact (TRANS (@lem2632804 n m) (@lem2632837 m n)). Qed.
Lemma lem2632850 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632851 (m : int) (n : int) : (term1069 n m) = (term1070 m n).
Proof. exact (MK_COMB (@lem2632850) (@lem2632787 m n)). Qed.
Lemma lem2632852 (m : int) (n : int) : (term584 n m) = (term1071 m n).
Proof. exact (MK_COMB (@lem2632851 m n) (@lem2632849 m n)). Qed.
Lemma lem2632854 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632855 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632854 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632862 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632865 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632868 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632865 m) (@lem2632862 n)). Qed.
Lemma lem2632869 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632870 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632869) (@lem2632868 m n)). Qed.
Lemma lem2632871 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632872 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632870 m n) (@lem2632871)). Qed.
Lemma lem2632891 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2632892 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632891 m n) (@lem2632872 m n)). Qed.
Lemma lem2632893 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632855 m n) (@lem2632892 m n)). Qed.
Lemma lem2632894 (n : int) : (term723 n) = (term723 n).
Proof. exact (eq_refl (term723 n)). Qed.
Lemma lem2632895 (m : int) (n : int) : (term551 n m) = (term808 m n).
Proof. exact (MK_COMB (@lem2632894 n) (@lem2632893 m n)). Qed.
Lemma lem2632896 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632897 (m : int) (n : int) : (term887 n m) = (term888 m n).
Proof. exact (MK_COMB (@lem2632896) (@lem2632895 m n)). Qed.
Lemma lem2632898 (n : int) : (term167 n) = (term167 n).
Proof. exact (eq_refl (term167 n)). Qed.
Lemma lem2632899 (m : int) (n : int) : (term581 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem2632897 m n) (@lem2632898 n)). Qed.
Lemma lem2632900 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632901 (m : int) (n : int) : (term906 m n) = (term907 m n).
Proof. exact (MK_COMB (@lem2632900) (@lem2632899 m n)). Qed.
Lemma lem2632902 (n : int) (m : int) : (term467 n m) = (term467 n m).
Proof. exact (eq_refl (term467 n m)). Qed.
Lemma lem2632903 (n : int) (m : int) : (term1072 n m) = (term1073 n m).
Proof. exact (MK_COMB (@lem2632901 m n) (@lem2632902 n m)). Qed.
Lemma lem2632904 (n : int) (m : int) : (term1074 m n) = (term1073 n m).
Proof. exact (eq_refl (term1074 m n)). Qed.
Lemma lem2632905 (m : int) (n : int) : (term1073 n m) = (term1074 m n).
Proof. exact (SYM (@lem2632904 n m)). Qed.
Lemma lem2632906 (m : int) (n : int) : (term1074 m n) = (term1075 m n).
Proof. exact (@lem1482981 (term1076 n m) (real_of_int n)). Qed.
Lemma lem2632907 (m : int) (n : int) : (term1073 n m) = (term1075 m n).
Proof. exact (TRANS (@lem2632905 m n) (@lem2632906 m n)). Qed.
Lemma lem2632908 (n : int) (m : int) : (term1077 m n) = (term1078 n m).
Proof. exact (eq_refl (term1077 m n)). Qed.
Lemma lem2632909 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2632910 (n : int) (m : int) : (term1079 m n) = (term1080 n m).
Proof. exact (MK_COMB (@lem2632909 n) (@lem2632908 n m)). Qed.
Lemma lem2632911 (n : int) (m : int) : (term1081 m n) = (term1082 n m).
Proof. exact (eq_refl (term1081 m n)). Qed.
Lemma lem2632912 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2632913 (n : int) (m : int) : (term1083 m n) = (term1084 n m).
Proof. exact (MK_COMB (@lem2632912 n) (@lem2632911 n m)). Qed.
Lemma lem2632914 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632915 (n : int) (m : int) : (term1085 m n) = (term1086 n m).
Proof. exact (MK_COMB (@lem2632914) (@lem2632913 n m)). Qed.
Lemma lem2632916 (n : int) (m : int) : (term1075 m n) = (term1087 n m).
Proof. exact (MK_COMB (@lem2632915 n m) (@lem2632910 n m)). Qed.
Lemma lem2632917 (n : int) (m : int) : (term1088 n m) = (term1088 n m).
Proof. exact (eq_refl (term1088 n m)). Qed.
Lemma lem2632918 (n : int) (m : int) : ((term1073 n m) = (term1075 m n)) = ((term1073 n m) = (term1087 n m)).
Proof. exact (MK_COMB (@lem2632917 n m) (@lem2632916 n m)). Qed.
Lemma lem2632919 (n : int) (m : int) : (term1073 n m) = (term1087 n m).
Proof. exact (EQ_MP (@lem2632918 n m) (@lem2632907 m n)). Qed.
Lemma lem2632920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632921 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632920) (@lem2631750 m n)). Qed.
Lemma lem2632922 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632921 m n) (@lem2631804 m n)). Qed.
Lemma lem2632923 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632924 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632923) (@lem2631254 n)). Qed.
Lemma lem2632925 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2632924 n) (@lem2632922 m n)). Qed.
Lemma lem2632926 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632927 (m : int) (n : int) : (term888 m n) = (term888 m n).
Proof. exact (MK_COMB (@lem2632926) (@lem2632925 m n)). Qed.
Lemma lem2632928 (m : int) (n : int) : (term905 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem2632927 m n) (@lem2631531 n)). Qed.
Lemma lem2632929 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632930 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632929) (@lem2631121 m)). Qed.
Lemma lem2632931 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2632930 m) (@lem2631191 m n)). Qed.
Lemma lem2632932 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632933 (m : int) (n : int) : (term907 m n) = (term907 m n).
Proof. exact (MK_COMB (@lem2632932) (@lem2632928 m n)). Qed.
Lemma lem2632934 (m : int) (n : int) : (term1082 n m) = (term1089 m n).
Proof. exact (MK_COMB (@lem2632933 m n) (@lem2632931 m n)). Qed.
Lemma lem2632935 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632936 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2632935) (@lem2631073 n)). Qed.
Lemma lem2632937 (m : int) (n : int) : (term1084 n m) = (term1090 m n).
Proof. exact (MK_COMB (@lem2632936 n) (@lem2632934 m n)). Qed.
Lemma lem2632938 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632939 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2632938) (@lem2631750 m n)). Qed.
Lemma lem2632940 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2632939 m n) (@lem2631804 m n)). Qed.
Lemma lem2632941 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632942 (n : int) : (term723 n) = (term723 n).
Proof. exact (MK_COMB (@lem2632941) (@lem2631254 n)). Qed.
Lemma lem2632943 (m : int) (n : int) : (term808 m n) = (term808 m n).
Proof. exact (MK_COMB (@lem2632942 n) (@lem2632940 m n)). Qed.
Lemma lem2632944 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632945 (m : int) (n : int) : (term888 m n) = (term888 m n).
Proof. exact (MK_COMB (@lem2632944) (@lem2632943 m n)). Qed.
Lemma lem2632946 (m : int) (n : int) : (term905 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem2632945 m n) (@lem2631531 n)). Qed.
Lemma lem2632947 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632948 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2632947) (@lem2631121 m)). Qed.
Lemma lem2632949 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2632948 m) (@lem2631418 m n)). Qed.
Lemma lem2632950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632951 (m : int) (n : int) : (term907 m n) = (term907 m n).
Proof. exact (MK_COMB (@lem2632950) (@lem2632946 m n)). Qed.
Lemma lem2632952 (m : int) (n : int) : (term1078 n m) = (term1091 m n).
Proof. exact (MK_COMB (@lem2632951 m n) (@lem2632949 m n)). Qed.
Lemma lem2632953 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2632954 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2632953) (@lem2631342 n)). Qed.
Lemma lem2632955 (m : int) (n : int) : (term1080 n m) = (term1092 m n).
Proof. exact (MK_COMB (@lem2632954 n) (@lem2632952 m n)). Qed.
Lemma lem2632956 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2632957 (m : int) (n : int) : (term1086 n m) = (term1093 m n).
Proof. exact (MK_COMB (@lem2632956) (@lem2632937 m n)). Qed.
Lemma lem2632958 (m : int) (n : int) : (term1087 n m) = (term1094 m n).
Proof. exact (MK_COMB (@lem2632957 m n) (@lem2632955 m n)). Qed.
Lemma lem2632969 (m : int) (n : int) : (term1073 n m) = (term1094 m n).
Proof. exact (TRANS (@lem2632919 n m) (@lem2632958 m n)). Qed.
Lemma lem2632970 (m : int) (n : int) : (term1072 n m) = (term1094 m n).
Proof. exact (TRANS (@lem2632903 n m) (@lem2632969 m n)). Qed.
Lemma lem2632972 (a : real) (x : real) (r : real) : (term798 x a r) = (term799 a x r).
Proof. exact (proj1 (@lem1482679 x a (@el real) (@el real) (@el real) r)). Qed.
Lemma lem2632973 (m : int) (n : int) : (term478 n m) = (term800 m n).
Proof. exact (@lem2632972 (real_of_int m) (real_of_int n) term38). Qed.
Lemma lem2632980 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2632983 (m : int) : (term33 m) = (term33 m).
Proof. exact (eq_refl (term33 m)). Qed.
Lemma lem2632986 (m : int) (n : int) : (term801 m n) = (term25 m n).
Proof. exact (MK_COMB (@lem2632983 m) (@lem2632980 n)). Qed.
Lemma lem2632987 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2632988 (m : int) (n : int) : (term802 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2632987) (@lem2632986 m n)). Qed.
Lemma lem2632989 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2632990 (m : int) (n : int) : (term804 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2632988 m n) (@lem2632989)). Qed.
Lemma lem2633009 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (eq_refl (term806 m n)). Qed.
Lemma lem2633010 (m : int) (n : int) : (term800 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2633009 m n) (@lem2632990 m n)). Qed.
Lemma lem2633011 (m : int) (n : int) : (term478 n m) = (term807 m n).
Proof. exact (TRANS (@lem2632973 m n) (@lem2633010 m n)). Qed.
Lemma lem2633012 (n : int) : (term785 n) = (term785 n).
Proof. exact (eq_refl (term785 n)). Qed.
Lemma lem2633013 (m : int) (n : int) : (term552 n m) = (term853 m n).
Proof. exact (MK_COMB (@lem2633012 n) (@lem2633011 m n)). Qed.
Lemma lem2633014 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633015 (m : int) (n : int) : (term894 n m) = (term895 m n).
Proof. exact (MK_COMB (@lem2633014) (@lem2633013 m n)). Qed.
Lemma lem2633016 (n : int) : (term167 n) = (term167 n).
Proof. exact (eq_refl (term167 n)). Qed.
Lemma lem2633017 (m : int) (n : int) : (term582 m n) = (term910 m n).
Proof. exact (MK_COMB (@lem2633015 m n) (@lem2633016 n)). Qed.
Lemma lem2633018 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633019 (m : int) (n : int) : (term911 m n) = (term912 m n).
Proof. exact (MK_COMB (@lem2633018) (@lem2633017 m n)). Qed.
Lemma lem2633020 (n : int) (m : int) : (term467 n m) = (term467 n m).
Proof. exact (eq_refl (term467 n m)). Qed.
Lemma lem2633021 (n : int) (m : int) : (term1095 n m) = (term1096 n m).
Proof. exact (MK_COMB (@lem2633019 m n) (@lem2633020 n m)). Qed.
Lemma lem2633022 (n : int) (m : int) : (term1097 m n) = (term1096 n m).
Proof. exact (eq_refl (term1097 m n)). Qed.
Lemma lem2633023 (m : int) (n : int) : (term1096 n m) = (term1097 m n).
Proof. exact (SYM (@lem2633022 n m)). Qed.
Lemma lem2633024 (m : int) (n : int) : (term1097 m n) = (term1098 m n).
Proof. exact (@lem1482981 (term1099 n m) (real_of_int n)). Qed.
Lemma lem2633025 (m : int) (n : int) : (term1096 n m) = (term1098 m n).
Proof. exact (TRANS (@lem2633023 m n) (@lem2633024 m n)). Qed.
Lemma lem2633026 (n : int) (m : int) : (term1100 m n) = (term1101 n m).
Proof. exact (eq_refl (term1100 m n)). Qed.
Lemma lem2633027 (n : int) : (term691 n) = (term691 n).
Proof. exact (eq_refl (term691 n)). Qed.
Lemma lem2633028 (n : int) (m : int) : (term1102 m n) = (term1103 n m).
Proof. exact (MK_COMB (@lem2633027 n) (@lem2633026 n m)). Qed.
Lemma lem2633029 (n : int) (m : int) : (term1104 m n) = (term1105 n m).
Proof. exact (eq_refl (term1104 m n)). Qed.
Lemma lem2633030 (n : int) : (term466 n) = (term466 n).
Proof. exact (eq_refl (term466 n)). Qed.
Lemma lem2633031 (n : int) (m : int) : (term1106 m n) = (term1107 n m).
Proof. exact (MK_COMB (@lem2633030 n) (@lem2633029 n m)). Qed.
Lemma lem2633032 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633033 (n : int) (m : int) : (term1108 m n) = (term1109 n m).
Proof. exact (MK_COMB (@lem2633032) (@lem2633031 n m)). Qed.
Lemma lem2633034 (n : int) (m : int) : (term1098 m n) = (term1110 n m).
Proof. exact (MK_COMB (@lem2633033 n m) (@lem2633028 n m)). Qed.
Lemma lem2633035 (n : int) (m : int) : (term1111 n m) = (term1111 n m).
Proof. exact (eq_refl (term1111 n m)). Qed.
Lemma lem2633036 (n : int) (m : int) : ((term1096 n m) = (term1098 m n)) = ((term1096 n m) = (term1110 n m)).
Proof. exact (MK_COMB (@lem2633035 n m) (@lem2633034 n m)). Qed.
Lemma lem2633037 (n : int) (m : int) : (term1096 n m) = (term1110 n m).
Proof. exact (EQ_MP (@lem2633036 n m) (@lem2633025 m n)). Qed.
Lemma lem2633038 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633039 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2633038) (@lem2631750 m n)). Qed.
Lemma lem2633040 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2633039 m n) (@lem2631804 m n)). Qed.
Lemma lem2633041 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633042 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2633041) (@lem2631531 n)). Qed.
Lemma lem2633043 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2633042 n) (@lem2633040 m n)). Qed.
Lemma lem2633044 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633045 (m : int) (n : int) : (term895 m n) = (term895 m n).
Proof. exact (MK_COMB (@lem2633044) (@lem2633043 m n)). Qed.
Lemma lem2633046 (m : int) (n : int) : (term910 m n) = (term910 m n).
Proof. exact (MK_COMB (@lem2633045 m n) (@lem2631531 n)). Qed.
Lemma lem2633047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633048 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2633047) (@lem2631121 m)). Qed.
Lemma lem2633049 (m : int) (n : int) : (term715 n m) = (term716 m n).
Proof. exact (MK_COMB (@lem2633048 m) (@lem2631191 m n)). Qed.
Lemma lem2633050 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633051 (m : int) (n : int) : (term912 m n) = (term912 m n).
Proof. exact (MK_COMB (@lem2633050) (@lem2633046 m n)). Qed.
Lemma lem2633052 (m : int) (n : int) : (term1105 n m) = (term1112 m n).
Proof. exact (MK_COMB (@lem2633051 m n) (@lem2633049 m n)). Qed.
Lemma lem2633053 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633054 (n : int) : (term466 n) = (term466 n).
Proof. exact (MK_COMB (@lem2633053) (@lem2631073 n)). Qed.
Lemma lem2633055 (m : int) (n : int) : (term1107 n m) = (term1113 m n).
Proof. exact (MK_COMB (@lem2633054 n) (@lem2633052 m n)). Qed.
Lemma lem2633056 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633057 (m : int) (n : int) : (term806 m n) = (term806 m n).
Proof. exact (MK_COMB (@lem2633056) (@lem2631750 m n)). Qed.
Lemma lem2633058 (m : int) (n : int) : (term807 m n) = (term807 m n).
Proof. exact (MK_COMB (@lem2633057 m n) (@lem2631804 m n)). Qed.
Lemma lem2633059 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633060 (n : int) : (term785 n) = (term785 n).
Proof. exact (MK_COMB (@lem2633059) (@lem2631531 n)). Qed.
Lemma lem2633061 (m : int) (n : int) : (term853 m n) = (term853 m n).
Proof. exact (MK_COMB (@lem2633060 n) (@lem2633058 m n)). Qed.
Lemma lem2633062 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633063 (m : int) (n : int) : (term895 m n) = (term895 m n).
Proof. exact (MK_COMB (@lem2633062) (@lem2633061 m n)). Qed.
Lemma lem2633064 (m : int) (n : int) : (term910 m n) = (term910 m n).
Proof. exact (MK_COMB (@lem2633063 m n) (@lem2631531 n)). Qed.
Lemma lem2633065 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633066 (m : int) : (term466 m) = (term466 m).
Proof. exact (MK_COMB (@lem2633065) (@lem2631121 m)). Qed.
Lemma lem2633067 (m : int) (n : int) : (term750 n m) = (term751 m n).
Proof. exact (MK_COMB (@lem2633066 m) (@lem2631418 m n)). Qed.
Lemma lem2633068 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633069 (m : int) (n : int) : (term912 m n) = (term912 m n).
Proof. exact (MK_COMB (@lem2633068) (@lem2633064 m n)). Qed.
Lemma lem2633070 (m : int) (n : int) : (term1101 n m) = (term1114 m n).
Proof. exact (MK_COMB (@lem2633069 m n) (@lem2633067 m n)). Qed.
Lemma lem2633071 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633072 (n : int) : (term691 n) = (term755 n).
Proof. exact (MK_COMB (@lem2633071) (@lem2631342 n)). Qed.
Lemma lem2633073 (m : int) (n : int) : (term1103 n m) = (term1115 m n).
Proof. exact (MK_COMB (@lem2633072 n) (@lem2633070 m n)). Qed.
Lemma lem2633074 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633075 (m : int) (n : int) : (term1109 n m) = (term1116 m n).
Proof. exact (MK_COMB (@lem2633074) (@lem2633055 m n)). Qed.
Lemma lem2633076 (m : int) (n : int) : (term1110 n m) = (term1117 m n).
Proof. exact (MK_COMB (@lem2633075 m n) (@lem2633073 m n)). Qed.
Lemma lem2633087 (m : int) (n : int) : (term1096 n m) = (term1117 m n).
Proof. exact (TRANS (@lem2633037 n m) (@lem2633076 m n)). Qed.
Lemma lem2633088 (m : int) (n : int) : (term1095 n m) = (term1117 m n).
Proof. exact (TRANS (@lem2633021 n m) (@lem2633087 m n)). Qed.
Lemma lem2633089 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633090 (m : int) (n : int) : (term1118 n m) = (term1119 m n).
Proof. exact (MK_COMB (@lem2633089) (@lem2632970 m n)). Qed.
Lemma lem2633091 (m : int) (n : int) : (term580 n m) = (term1120 m n).
Proof. exact (MK_COMB (@lem2633090 m n) (@lem2633088 m n)). Qed.
Lemma lem2633092 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633093 (m : int) (n : int) : (term588 n m) = (term1121 m n).
Proof. exact (MK_COMB (@lem2633092) (@lem2632852 m n)). Qed.
Lemma lem2633094 (m : int) (n : int) : (term589 n m) = (term1122 m n).
Proof. exact (MK_COMB (@lem2633093 m n) (@lem2633091 m n)). Qed.
Lemma lem2633095 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633096 (m : int) (n : int) : (term604 n m) = (term1123 m n).
Proof. exact (MK_COMB (@lem2633095) (@lem2632725 m n)). Qed.
Lemma lem2633097 (m : int) (n : int) : (term605 n m) = (term1124 m n).
Proof. exact (MK_COMB (@lem2633096 m n) (@lem2633094 m n)). Qed.
Lemma lem2633098 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633099 (m : int) (n : int) : (term630 m n) = (term1125 m n).
Proof. exact (MK_COMB (@lem2633098) (@lem2632356 m n)). Qed.
Lemma lem2633100 (m : int) (n : int) : (term631 n m) = (term1126 m n).
Proof. exact (MK_COMB (@lem2633099 m n) (@lem2633097 m n)). Qed.
Lemma lem2633101 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem2633102 (m : int) (n : int) : (term679 n m) = (term1127 m n).
Proof. exact (MK_COMB (@lem2633101) (@lem2632111 m n)). Qed.
Lemma lem2633103 (m : int) (n : int) : (term680 n m) = (term1128 m n).
Proof. exact (MK_COMB (@lem2633102 m n) (@lem2633100 m n)). Qed.
Lemma lem2633104 (m : int) (n : int) (h1 : term1128 m n) : term1128 m n.
Proof. exact (h1). Qed.
Lemma lem2633105 (m : int) (n : int) (h1 : term886 m n) : term886 m n.
Proof. exact (h1). Qed.
Lemma lem2633106 (n : int) (m : int) (h1 : term797 n m) : term797 n m.
Proof. exact (h1). Qed.
Lemma lem2633107 (n : int) (m : int) (h1 : term762 n m) : term762 n m.
Proof. exact (h1). Qed.
Lemma lem2633108 (n : int) (m : int) (h1 : term760 n m) : term760 n m.
Proof. exact (h1). Qed.
Lemma lem2633109 (n : int) (m : int) (h1 : term667 n m) : term667 n m.
Proof. exact (h1). Qed.
Lemma lem2633110 (n : int) (m : int) (h1 : term667 n m) : term555 n m.
Proof. exact (proj2 (@lem2633109 n m h1)). Qed.
Lemma lem2633111 (n : int) (m : int) (h1 : term667 n m) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2633109 n m h1)). Qed.
Lemma lem2633113 (n : int) (m : int) (h1 : term667 n m) : term158 n.
Proof. exact (proj1 (@lem2633110 n m h1)). Qed.
Lemma lem2633115 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2633116 : term229 = term109.
Proof. exact (@lem2633115 term38 term31). Qed.
Lemma lem2633118 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633119 : term31 = term99.
Proof. exact (@lem2633118 term32). Qed.
Lemma lem2633121 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633122 : term38 = term134.
Proof. exact (@lem2633121 (NUMERAL 0)). Qed.
Lemma lem2633123 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633124 : term230 = term231.
Proof. exact (MK_COMB (@lem2633123) (@lem2633122)). Qed.
Lemma lem2633125 : term109 = term232.
Proof. exact (MK_COMB (@lem2633124) (@lem2633119)). Qed.
Lemma lem2633126 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2633128 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633129 : term109 = term110.
Proof. exact (@lem2633128 (NUMERAL 0) term32). Qed.
Lemma lem2633130 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633131 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633132 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633131 h1) (fun h1 : term110 = True => @lem2633130)). Qed.
Lemma lem2633133 : term110 = True.
Proof. exact (EQ_MP (@lem2633132) (@lem2633130)). Qed.
Lemma lem2633134 : term109 = True.
Proof. exact (TRANS (@lem2633129) (@lem2633133)). Qed.
Lemma lem2633135 : True = term109.
Proof. exact (SYM (@lem2633134)). Qed.
Lemma lem2633136 : term109.
Proof. exact (EQ_MP (@lem2633135) (@lem0)). Qed.
Lemma lem2633137 : term234.
Proof. exact (@lem2633126 (@lem2633136)). Qed.
Lemma lem2633139 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633140 : term109 = term110.
Proof. exact (@lem2633139 (NUMERAL 0) term32). Qed.
Lemma lem2633141 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633142 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633143 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633142 h1) (fun h1 : term110 = True => @lem2633141)). Qed.
Lemma lem2633144 : term110 = True.
Proof. exact (EQ_MP (@lem2633143) (@lem2633141)). Qed.
Lemma lem2633145 : term109 = True.
Proof. exact (TRANS (@lem2633140) (@lem2633144)). Qed.
Lemma lem2633146 : True = term109.
Proof. exact (SYM (@lem2633145)). Qed.
Lemma lem2633147 : term109.
Proof. exact (EQ_MP (@lem2633146) (@lem0)). Qed.
Lemma lem2633148 : term232 = term235.
Proof. exact (@lem2633137 (@lem2633147)). Qed.
Lemma lem2633150 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633151 : term117 = term118.
Proof. exact (@lem2633150 term32 term32). Qed.
Lemma lem2633152 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633153 : term120 = term32.
Proof. exact (EQ_MP (@lem2633152) (@lem940073)). Qed.
Lemma lem2633154 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633155 : term118 = term31.
Proof. exact (MK_COMB (@lem2633154) (@lem2633153)). Qed.
Lemma lem2633156 : term117 = term31.
Proof. exact (TRANS (@lem2633151) (@lem2633155)). Qed.
Lemma lem2633158 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633159 : term131 = term38.
Proof. exact (@lem2633158 term32). Qed.
Lemma lem2633160 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633161 : term236 = term230.
Proof. exact (MK_COMB (@lem2633160) (@lem2633159)). Qed.
Lemma lem2633162 : term235 = term109.
Proof. exact (MK_COMB (@lem2633161) (@lem2633156)). Qed.
Lemma lem2633164 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633165 : term109 = term110.
Proof. exact (@lem2633164 (NUMERAL 0) term32). Qed.
Lemma lem2633166 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633167 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633168 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633167 h1) (fun h1 : term110 = True => @lem2633166)). Qed.
Lemma lem2633169 : term110 = True.
Proof. exact (EQ_MP (@lem2633168) (@lem2633166)). Qed.
Lemma lem2633170 : term109 = True.
Proof. exact (TRANS (@lem2633165) (@lem2633169)). Qed.
Lemma lem2633171 : term235 = True.
Proof. exact (TRANS (@lem2633162) (@lem2633170)). Qed.
Lemma lem2633172 : term232 = True.
Proof. exact (TRANS (@lem2633148) (@lem2633171)). Qed.
Lemma lem2633173 : term109 = True.
Proof. exact (TRANS (@lem2633125) (@lem2633172)). Qed.
Lemma lem2633174 : term229 = True.
Proof. exact (TRANS (@lem2633116) (@lem2633173)). Qed.
Lemma lem2633175 : True = term229.
Proof. exact (SYM (@lem2633174)). Qed.
Lemma lem2633176 : term229.
Proof. exact (EQ_MP (@lem2633175) (@lem0)). Qed.
Lemma lem2633177 (n : int) (m : int) (h1 : term667 n m) : term237 n.
Proof. exact (conj (@lem2633176) (@lem2633113 n m h1)). Qed.
Lemma lem2633179 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2633180 (n : int) : term239 n.
Proof. exact (@lem2633179 term31 (term154 n)). Qed.
Lemma lem2633181 (n : int) (m : int) (h1 : term667 n m) : term240 n.
Proof. exact (@lem2633180 n (@lem2633177 n m h1)). Qed.
Lemma lem2633182 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2633183 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633184 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2633183) (@lem2633182 n)). Qed.
Lemma lem2633185 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633186 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2633184 n) (@lem2633185)). Qed.
Lemma lem2633187 (n : int) (m : int) (h1 : term667 n m) : term158 n.
Proof. exact (EQ_MP (@lem2633186 n) (@lem2633181 n m h1)). Qed.
Lemma lem2633189 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2633190 (n : int) : term287 n.
Proof. exact (@lem2633189 (real_of_int n)). Qed.
Lemma lem2633191 (n : int) (m : int) (h1 : term667 n m) : term288 n.
Proof. exact (@lem2633190 n (@lem2633111 n m h1)). Qed.
Lemma lem2633192 (n : int) (m : int) (h1 : term667 n m) : term291 n.
Proof. exact (@lem2633191 n m h1 term31). Qed.
Lemma lem2633193 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2633194 (n : int) (m : int) (h1 : term667 n m) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2633193 n) (@lem2633192 n m h1)). Qed.
Lemma lem2633195 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2633196 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2633197 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2633196) (@lem2633195 n)). Qed.
Lemma lem2633198 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633199 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2633197 n) (@lem2633198)). Qed.
Lemma lem2633200 (n : int) (m : int) (h1 : term667 n m) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2633199 n) (@lem2633194 n m h1)). Qed.
Lemma lem2633201 (n : int) (m : int) (h1 : term667 n m) : term248 n.
Proof. exact (conj (@lem2633200 n m h1) (@lem2633187 n m h1)). Qed.
Lemma lem2633203 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2633204 (n : int) : term250 n.
Proof. exact (@lem2633203 (real_of_int n) (term154 n)). Qed.
Lemma lem2633205 (n : int) (m : int) (h1 : term667 n m) : term251 n.
Proof. exact (@lem2633204 n (@lem2633201 n m h1)). Qed.
Lemma lem2633206 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2633207 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2633209 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633210 : term31 = term99.
Proof. exact (@lem2633209 term32). Qed.
Lemma lem2633212 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2633213 : term97 = term102.
Proof. exact (@lem2633212 term32). Qed.
Lemma lem2633214 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633215 : term103 = term104.
Proof. exact (MK_COMB (@lem2633214) (@lem2633213)). Qed.
Lemma lem2633216 : term105 = term106.
Proof. exact (MK_COMB (@lem2633215) (@lem2633210)). Qed.
Lemma lem2633217 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2633219 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633220 : term109 = term110.
Proof. exact (@lem2633219 (NUMERAL 0) term32). Qed.
Lemma lem2633221 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633222 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633223 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633222 h1) (fun h1 : term110 = True => @lem2633221)). Qed.
Lemma lem2633224 : term110 = True.
Proof. exact (EQ_MP (@lem2633223) (@lem2633221)). Qed.
Lemma lem2633225 : term109 = True.
Proof. exact (TRANS (@lem2633220) (@lem2633224)). Qed.
Lemma lem2633226 : True = term109.
Proof. exact (SYM (@lem2633225)). Qed.
Lemma lem2633227 : term109.
Proof. exact (EQ_MP (@lem2633226) (@lem0)). Qed.
Lemma lem2633228 : term112.
Proof. exact (@lem2633217 (@lem2633227)). Qed.
Lemma lem2633230 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633231 : term109 = term110.
Proof. exact (@lem2633230 (NUMERAL 0) term32). Qed.
Lemma lem2633232 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633233 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633234 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633233 h1) (fun h1 : term110 = True => @lem2633232)). Qed.
Lemma lem2633235 : term110 = True.
Proof. exact (EQ_MP (@lem2633234) (@lem2633232)). Qed.
Lemma lem2633236 : term109 = True.
Proof. exact (TRANS (@lem2633231) (@lem2633235)). Qed.
Lemma lem2633237 : True = term109.
Proof. exact (SYM (@lem2633236)). Qed.
Lemma lem2633238 : term109.
Proof. exact (EQ_MP (@lem2633237) (@lem0)). Qed.
Lemma lem2633239 : term113.
Proof. exact (@lem2633228 (@lem2633238)). Qed.
Lemma lem2633241 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633242 : term109 = term110.
Proof. exact (@lem2633241 (NUMERAL 0) term32). Qed.
Lemma lem2633243 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633244 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633245 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633244 h1) (fun h1 : term110 = True => @lem2633243)). Qed.
Lemma lem2633246 : term110 = True.
Proof. exact (EQ_MP (@lem2633245) (@lem2633243)). Qed.
Lemma lem2633247 : term109 = True.
Proof. exact (TRANS (@lem2633242) (@lem2633246)). Qed.
Lemma lem2633248 : True = term109.
Proof. exact (SYM (@lem2633247)). Qed.
Lemma lem2633249 : term109.
Proof. exact (EQ_MP (@lem2633248) (@lem0)). Qed.
Lemma lem2633250 : term114.
Proof. exact (@lem2633239 (@lem2633249)). Qed.
Lemma lem2633252 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633253 : term117 = term118.
Proof. exact (@lem2633252 term32 term32). Qed.
Lemma lem2633254 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633255 : term120 = term32.
Proof. exact (EQ_MP (@lem2633254) (@lem940073)). Qed.
Lemma lem2633256 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633257 : term118 = term31.
Proof. exact (MK_COMB (@lem2633256) (@lem2633255)). Qed.
Lemma lem2633258 : term117 = term31.
Proof. exact (TRANS (@lem2633253) (@lem2633257)). Qed.
Lemma lem2633260 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2633261 : term123 = term124.
Proof. exact (@lem2633260 term32 term32). Qed.
Lemma lem2633262 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633263 : term120 = term32.
Proof. exact (EQ_MP (@lem2633262) (@lem940073)). Qed.
Lemma lem2633264 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633265 : term118 = term31.
Proof. exact (MK_COMB (@lem2633264) (@lem2633263)). Qed.
Lemma lem2633266 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2633267 : term124 = term97.
Proof. exact (MK_COMB (@lem2633266) (@lem2633265)). Qed.
Lemma lem2633268 : term123 = term97.
Proof. exact (TRANS (@lem2633261) (@lem2633267)). Qed.
Lemma lem2633269 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633270 : term125 = term103.
Proof. exact (MK_COMB (@lem2633269) (@lem2633268)). Qed.
Lemma lem2633271 : term126 = term105.
Proof. exact (MK_COMB (@lem2633270) (@lem2633258)). Qed.
Lemma lem2633273 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2633274 : term105 = term38.
Proof. exact (@lem2633273 term32). Qed.
Lemma lem2633275 : term126 = term38.
Proof. exact (TRANS (@lem2633271) (@lem2633274)). Qed.
Lemma lem2633276 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2633277 : term128 = term129.
Proof. exact (MK_COMB (@lem2633276) (@lem2633275)). Qed.
Lemma lem2633278 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2633279 : term130 = term131.
Proof. exact (MK_COMB (@lem2633277) (@lem2633278)). Qed.
Lemma lem2633281 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633282 : term131 = term38.
Proof. exact (@lem2633281 term32). Qed.
Lemma lem2633283 : term130 = term38.
Proof. exact (TRANS (@lem2633279) (@lem2633282)). Qed.
Lemma lem2633285 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633286 : term117 = term118.
Proof. exact (@lem2633285 term32 term32). Qed.
Lemma lem2633287 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633288 : term120 = term32.
Proof. exact (EQ_MP (@lem2633287) (@lem940073)). Qed.
Lemma lem2633289 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633290 : term118 = term31.
Proof. exact (MK_COMB (@lem2633289) (@lem2633288)). Qed.
Lemma lem2633291 : term117 = term31.
Proof. exact (TRANS (@lem2633286) (@lem2633290)). Qed.
Lemma lem2633292 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2633293 : term133 = term131.
Proof. exact (MK_COMB (@lem2633292) (@lem2633291)). Qed.
Lemma lem2633295 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633296 : term131 = term38.
Proof. exact (@lem2633295 term32). Qed.
Lemma lem2633297 : term133 = term38.
Proof. exact (TRANS (@lem2633293) (@lem2633296)). Qed.
Lemma lem2633298 : term38 = term133.
Proof. exact (SYM (@lem2633297)). Qed.
Lemma lem2633299 : term130 = term133.
Proof. exact (TRANS (@lem2633283) (@lem2633298)). Qed.
Lemma lem2633300 : term106 = term134.
Proof. exact (@lem2633250 (@lem2633299)). Qed.
Lemma lem2633301 : term105 = term134.
Proof. exact (TRANS (@lem2633216) (@lem2633300)). Qed.
Lemma lem2633303 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2633304 : term134 = term38.
Proof. exact (@lem2633303 term38). Qed.
Lemma lem2633305 : term105 = term38.
Proof. exact (TRANS (@lem2633301) (@lem2633304)). Qed.
Lemma lem2633306 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2633307 : term136 = term129.
Proof. exact (MK_COMB (@lem2633306) (@lem2633305)). Qed.
Lemma lem2633308 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2633309 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2633307) (@lem2633308 n)). Qed.
Lemma lem2633310 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2633207 n) (@lem2633309 n)). Qed.
Lemma lem2633311 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2633312 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2633310 n) (@lem2633311 n)). Qed.
Lemma lem2633313 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633314 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2633313) (@lem2633312 n)). Qed.
Lemma lem2633315 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2633316 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2633314 n) (@lem2633315)). Qed.
Lemma lem2633317 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2633206 n) (@lem2633316 n)). Qed.
Lemma lem2633318 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2633319 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2633317 n) (@lem2633318)). Qed.
Lemma lem2633320 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633321 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2633320) (@lem2633319 n)). Qed.
Lemma lem2633322 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633323 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2633321 n) (@lem2633322)). Qed.
Lemma lem2633324 (n : int) (m : int) (h1 : term667 n m) : term257.
Proof. exact (EQ_MP (@lem2633323 n) (@lem2633205 n m h1)). Qed.
Lemma lem2633326 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2633327 : term257 = term258.
Proof. exact (@lem2633326 term38 term97). Qed.
Lemma lem2633329 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2633330 : term97 = term102.
Proof. exact (@lem2633329 term32). Qed.
Lemma lem2633332 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633333 : term38 = term134.
Proof. exact (@lem2633332 (NUMERAL 0)). Qed.
Lemma lem2633334 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2633335 : term259 = term260.
Proof. exact (MK_COMB (@lem2633334) (@lem2633333)). Qed.
Lemma lem2633336 : term258 = term261.
Proof. exact (MK_COMB (@lem2633335) (@lem2633330)). Qed.
Lemma lem2633337 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2633339 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633340 : term109 = term110.
Proof. exact (@lem2633339 (NUMERAL 0) term32). Qed.
Lemma lem2633341 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633342 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633343 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633342 h1) (fun h1 : term110 = True => @lem2633341)). Qed.
Lemma lem2633344 : term110 = True.
Proof. exact (EQ_MP (@lem2633343) (@lem2633341)). Qed.
Lemma lem2633345 : term109 = True.
Proof. exact (TRANS (@lem2633340) (@lem2633344)). Qed.
Lemma lem2633346 : True = term109.
Proof. exact (SYM (@lem2633345)). Qed.
Lemma lem2633347 : term109.
Proof. exact (EQ_MP (@lem2633346) (@lem0)). Qed.
Lemma lem2633348 : term263.
Proof. exact (@lem2633337 (@lem2633347)). Qed.
Lemma lem2633350 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633351 : term109 = term110.
Proof. exact (@lem2633350 (NUMERAL 0) term32). Qed.
Lemma lem2633352 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633353 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633354 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633353 h1) (fun h1 : term110 = True => @lem2633352)). Qed.
Lemma lem2633355 : term110 = True.
Proof. exact (EQ_MP (@lem2633354) (@lem2633352)). Qed.
Lemma lem2633356 : term109 = True.
Proof. exact (TRANS (@lem2633351) (@lem2633355)). Qed.
Lemma lem2633357 : True = term109.
Proof. exact (SYM (@lem2633356)). Qed.
Lemma lem2633358 : term109.
Proof. exact (EQ_MP (@lem2633357) (@lem0)). Qed.
Lemma lem2633359 : term261 = term264.
Proof. exact (@lem2633348 (@lem2633358)). Qed.
Lemma lem2633361 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2633362 : term123 = term124.
Proof. exact (@lem2633361 term32 term32). Qed.
Lemma lem2633363 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633364 : term120 = term32.
Proof. exact (EQ_MP (@lem2633363) (@lem940073)). Qed.
Lemma lem2633365 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633366 : term118 = term31.
Proof. exact (MK_COMB (@lem2633365) (@lem2633364)). Qed.
Lemma lem2633367 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2633368 : term124 = term97.
Proof. exact (MK_COMB (@lem2633367) (@lem2633366)). Qed.
Lemma lem2633369 : term123 = term97.
Proof. exact (TRANS (@lem2633362) (@lem2633368)). Qed.
Lemma lem2633371 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633372 : term131 = term38.
Proof. exact (@lem2633371 term32). Qed.
Lemma lem2633373 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2633374 : term265 = term259.
Proof. exact (MK_COMB (@lem2633373) (@lem2633372)). Qed.
Lemma lem2633375 : term264 = term258.
Proof. exact (MK_COMB (@lem2633374) (@lem2633369)). Qed.
Lemma lem2633377 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2633378 : term258 = term268.
Proof. exact (@lem2633377 (NUMERAL 0) term32). Qed.
Lemma lem2633379 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633380 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2633381 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633380 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2633379)). Qed.
Lemma lem2633382 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2633381) (@lem2633379)). Qed.
Lemma lem2633383 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2633384 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633385 : term269 = (and True).
Proof. exact (MK_COMB (@lem2633384) (@lem2633383)). Qed.
Lemma lem2633386 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2633385) (@lem2633382)). Qed.
Lemma lem2633388 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2633389 : term268 = False.
Proof. exact (TRANS (@lem2633386) (@lem2633388)). Qed.
Lemma lem2633390 : term258 = False.
Proof. exact (TRANS (@lem2633378) (@lem2633389)). Qed.
Lemma lem2633391 : term264 = False.
Proof. exact (TRANS (@lem2633375) (@lem2633390)). Qed.
Lemma lem2633392 : term261 = False.
Proof. exact (TRANS (@lem2633359) (@lem2633391)). Qed.
Lemma lem2633393 : term258 = False.
Proof. exact (TRANS (@lem2633336) (@lem2633392)). Qed.
Lemma lem2633394 : term257 = False.
Proof. exact (TRANS (@lem2633327) (@lem2633393)). Qed.
Lemma lem2633395 (n : int) (m : int) (h1 : term667 n m) : False.
Proof. exact (EQ_MP (@lem2633394) (@lem2633324 n m h1)). Qed.
Lemma lem2633396 (n : int) (m : int) (h1 : term758 n m) : term758 n m.
Proof. exact (h1). Qed.
Lemma lem2633397 (n : int) (m : int) (h1 : term727 n m) : term727 n m.
Proof. exact (h1). Qed.
Lemma lem2633398 (n : int) (m : int) (h1 : term727 n m) : term726 n m.
Proof. exact (proj2 (@lem2633397 n m h1)). Qed.
Lemma lem2633399 (n : int) (m : int) (h1 : term727 n m) : term457 n.
Proof. exact (proj1 (@lem2633397 n m h1)). Qed.
Lemma lem2633400 (n : int) (m : int) (h1 : term727 n m) : term555 n m.
Proof. exact (proj2 (@lem2633398 n m h1)). Qed.
Lemma lem2633405 (n : int) (m : int) (h1 : term727 n m) : term158 n.
Proof. exact (proj1 (@lem2633400 n m h1)). Qed.
Lemma lem2633407 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2633408 : term229 = term109.
Proof. exact (@lem2633407 term38 term31). Qed.
Lemma lem2633410 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633411 : term31 = term99.
Proof. exact (@lem2633410 term32). Qed.
Lemma lem2633413 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633414 : term38 = term134.
Proof. exact (@lem2633413 (NUMERAL 0)). Qed.
Lemma lem2633415 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633416 : term230 = term231.
Proof. exact (MK_COMB (@lem2633415) (@lem2633414)). Qed.
Lemma lem2633417 : term109 = term232.
Proof. exact (MK_COMB (@lem2633416) (@lem2633411)). Qed.
Lemma lem2633418 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2633420 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633421 : term109 = term110.
Proof. exact (@lem2633420 (NUMERAL 0) term32). Qed.
Lemma lem2633422 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633423 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633424 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633423 h1) (fun h1 : term110 = True => @lem2633422)). Qed.
Lemma lem2633425 : term110 = True.
Proof. exact (EQ_MP (@lem2633424) (@lem2633422)). Qed.
Lemma lem2633426 : term109 = True.
Proof. exact (TRANS (@lem2633421) (@lem2633425)). Qed.
Lemma lem2633427 : True = term109.
Proof. exact (SYM (@lem2633426)). Qed.
Lemma lem2633428 : term109.
Proof. exact (EQ_MP (@lem2633427) (@lem0)). Qed.
Lemma lem2633429 : term234.
Proof. exact (@lem2633418 (@lem2633428)). Qed.
Lemma lem2633431 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633432 : term109 = term110.
Proof. exact (@lem2633431 (NUMERAL 0) term32). Qed.
Lemma lem2633433 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633434 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633435 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633434 h1) (fun h1 : term110 = True => @lem2633433)). Qed.
Lemma lem2633436 : term110 = True.
Proof. exact (EQ_MP (@lem2633435) (@lem2633433)). Qed.
Lemma lem2633437 : term109 = True.
Proof. exact (TRANS (@lem2633432) (@lem2633436)). Qed.
Lemma lem2633438 : True = term109.
Proof. exact (SYM (@lem2633437)). Qed.
Lemma lem2633439 : term109.
Proof. exact (EQ_MP (@lem2633438) (@lem0)). Qed.
Lemma lem2633440 : term232 = term235.
Proof. exact (@lem2633429 (@lem2633439)). Qed.
Lemma lem2633442 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633443 : term117 = term118.
Proof. exact (@lem2633442 term32 term32). Qed.
Lemma lem2633444 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633445 : term120 = term32.
Proof. exact (EQ_MP (@lem2633444) (@lem940073)). Qed.
Lemma lem2633446 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633447 : term118 = term31.
Proof. exact (MK_COMB (@lem2633446) (@lem2633445)). Qed.
Lemma lem2633448 : term117 = term31.
Proof. exact (TRANS (@lem2633443) (@lem2633447)). Qed.
Lemma lem2633450 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633451 : term131 = term38.
Proof. exact (@lem2633450 term32). Qed.
Lemma lem2633452 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633453 : term236 = term230.
Proof. exact (MK_COMB (@lem2633452) (@lem2633451)). Qed.
Lemma lem2633454 : term235 = term109.
Proof. exact (MK_COMB (@lem2633453) (@lem2633448)). Qed.
Lemma lem2633456 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633457 : term109 = term110.
Proof. exact (@lem2633456 (NUMERAL 0) term32). Qed.
Lemma lem2633458 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633459 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633460 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633459 h1) (fun h1 : term110 = True => @lem2633458)). Qed.
Lemma lem2633461 : term110 = True.
Proof. exact (EQ_MP (@lem2633460) (@lem2633458)). Qed.
Lemma lem2633462 : term109 = True.
Proof. exact (TRANS (@lem2633457) (@lem2633461)). Qed.
Lemma lem2633463 : term235 = True.
Proof. exact (TRANS (@lem2633454) (@lem2633462)). Qed.
Lemma lem2633464 : term232 = True.
Proof. exact (TRANS (@lem2633440) (@lem2633463)). Qed.
Lemma lem2633465 : term109 = True.
Proof. exact (TRANS (@lem2633417) (@lem2633464)). Qed.
Lemma lem2633466 : term229 = True.
Proof. exact (TRANS (@lem2633408) (@lem2633465)). Qed.
Lemma lem2633467 : True = term229.
Proof. exact (SYM (@lem2633466)). Qed.
Lemma lem2633468 : term229.
Proof. exact (EQ_MP (@lem2633467) (@lem0)). Qed.
Lemma lem2633469 (n : int) (m : int) (h1 : term727 n m) : term1129 n.
Proof. exact (conj (@lem2633468) (@lem2633399 n m h1)). Qed.
Lemma lem2633471 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2633472 (n : int) : term1130 n.
Proof. exact (@lem2633471 term31 (real_of_int n)). Qed.
Lemma lem2633473 (n : int) (m : int) (h1 : term727 n m) : term1131 n.
Proof. exact (@lem2633472 n (@lem2633469 n m h1)). Qed.
Lemma lem2633474 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2633475 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633476 (n : int) : (term1132 n) = (term456 n).
Proof. exact (MK_COMB (@lem2633475) (@lem2633474 n)). Qed.
Lemma lem2633477 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633478 (n : int) : (term1131 n) = (term457 n).
Proof. exact (MK_COMB (@lem2633476 n) (@lem2633477)). Qed.
Lemma lem2633479 (n : int) (m : int) (h1 : term727 n m) : term457 n.
Proof. exact (EQ_MP (@lem2633478 n) (@lem2633473 n m h1)). Qed.
Lemma lem2633481 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2633482 : term229 = term109.
Proof. exact (@lem2633481 term38 term31). Qed.
Lemma lem2633484 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633485 : term31 = term99.
Proof. exact (@lem2633484 term32). Qed.
Lemma lem2633487 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633488 : term38 = term134.
Proof. exact (@lem2633487 (NUMERAL 0)). Qed.
Lemma lem2633489 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633490 : term230 = term231.
Proof. exact (MK_COMB (@lem2633489) (@lem2633488)). Qed.
Lemma lem2633491 : term109 = term232.
Proof. exact (MK_COMB (@lem2633490) (@lem2633485)). Qed.
Lemma lem2633492 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2633494 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633495 : term109 = term110.
Proof. exact (@lem2633494 (NUMERAL 0) term32). Qed.
Lemma lem2633496 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633497 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633498 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633497 h1) (fun h1 : term110 = True => @lem2633496)). Qed.
Lemma lem2633499 : term110 = True.
Proof. exact (EQ_MP (@lem2633498) (@lem2633496)). Qed.
Lemma lem2633500 : term109 = True.
Proof. exact (TRANS (@lem2633495) (@lem2633499)). Qed.
Lemma lem2633501 : True = term109.
Proof. exact (SYM (@lem2633500)). Qed.
Lemma lem2633502 : term109.
Proof. exact (EQ_MP (@lem2633501) (@lem0)). Qed.
Lemma lem2633503 : term234.
Proof. exact (@lem2633492 (@lem2633502)). Qed.
Lemma lem2633505 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633506 : term109 = term110.
Proof. exact (@lem2633505 (NUMERAL 0) term32). Qed.
Lemma lem2633507 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633508 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633509 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633508 h1) (fun h1 : term110 = True => @lem2633507)). Qed.
Lemma lem2633510 : term110 = True.
Proof. exact (EQ_MP (@lem2633509) (@lem2633507)). Qed.
Lemma lem2633511 : term109 = True.
Proof. exact (TRANS (@lem2633506) (@lem2633510)). Qed.
Lemma lem2633512 : True = term109.
Proof. exact (SYM (@lem2633511)). Qed.
Lemma lem2633513 : term109.
Proof. exact (EQ_MP (@lem2633512) (@lem0)). Qed.
Lemma lem2633514 : term232 = term235.
Proof. exact (@lem2633503 (@lem2633513)). Qed.
Lemma lem2633516 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633517 : term117 = term118.
Proof. exact (@lem2633516 term32 term32). Qed.
Lemma lem2633518 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633519 : term120 = term32.
Proof. exact (EQ_MP (@lem2633518) (@lem940073)). Qed.
Lemma lem2633520 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633521 : term118 = term31.
Proof. exact (MK_COMB (@lem2633520) (@lem2633519)). Qed.
Lemma lem2633522 : term117 = term31.
Proof. exact (TRANS (@lem2633517) (@lem2633521)). Qed.
Lemma lem2633524 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633525 : term131 = term38.
Proof. exact (@lem2633524 term32). Qed.
Lemma lem2633526 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633527 : term236 = term230.
Proof. exact (MK_COMB (@lem2633526) (@lem2633525)). Qed.
Lemma lem2633528 : term235 = term109.
Proof. exact (MK_COMB (@lem2633527) (@lem2633522)). Qed.
Lemma lem2633530 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633531 : term109 = term110.
Proof. exact (@lem2633530 (NUMERAL 0) term32). Qed.
Lemma lem2633532 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633533 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633534 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633533 h1) (fun h1 : term110 = True => @lem2633532)). Qed.
Lemma lem2633535 : term110 = True.
Proof. exact (EQ_MP (@lem2633534) (@lem2633532)). Qed.
Lemma lem2633536 : term109 = True.
Proof. exact (TRANS (@lem2633531) (@lem2633535)). Qed.
Lemma lem2633537 : term235 = True.
Proof. exact (TRANS (@lem2633528) (@lem2633536)). Qed.
Lemma lem2633538 : term232 = True.
Proof. exact (TRANS (@lem2633514) (@lem2633537)). Qed.
Lemma lem2633539 : term109 = True.
Proof. exact (TRANS (@lem2633491) (@lem2633538)). Qed.
Lemma lem2633540 : term229 = True.
Proof. exact (TRANS (@lem2633482) (@lem2633539)). Qed.
Lemma lem2633541 : True = term229.
Proof. exact (SYM (@lem2633540)). Qed.
Lemma lem2633542 : term229.
Proof. exact (EQ_MP (@lem2633541) (@lem0)). Qed.
Lemma lem2633543 (n : int) (m : int) (h1 : term727 n m) : term237 n.
Proof. exact (conj (@lem2633542) (@lem2633405 n m h1)). Qed.
Lemma lem2633545 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2633546 (n : int) : term239 n.
Proof. exact (@lem2633545 term31 (term154 n)). Qed.
Lemma lem2633547 (n : int) (m : int) (h1 : term727 n m) : term240 n.
Proof. exact (@lem2633546 n (@lem2633543 n m h1)). Qed.
Lemma lem2633548 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2633549 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633550 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2633549) (@lem2633548 n)). Qed.
Lemma lem2633551 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633552 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2633550 n) (@lem2633551)). Qed.
Lemma lem2633553 (n : int) (m : int) (h1 : term727 n m) : term158 n.
Proof. exact (EQ_MP (@lem2633552 n) (@lem2633547 n m h1)). Qed.
Lemma lem2633554 (n : int) (m : int) (h1 : term727 n m) : term1133 n.
Proof. exact (conj (@lem2633553 n m h1) (@lem2633479 n m h1)). Qed.
Lemma lem2633556 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2633557 (n : int) : term1135 n.
Proof. exact (@lem2633556 (term154 n) (real_of_int n)). Qed.
Lemma lem2633558 (n : int) (m : int) (h1 : term727 n m) : term1136 n.
Proof. exact (@lem2633557 n (@lem2633554 n m h1)). Qed.
Lemma lem2633559 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2633560 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2633562 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633563 : term31 = term99.
Proof. exact (@lem2633562 term32). Qed.
Lemma lem2633565 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2633566 : term97 = term102.
Proof. exact (@lem2633565 term32). Qed.
Lemma lem2633567 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633568 : term103 = term104.
Proof. exact (MK_COMB (@lem2633567) (@lem2633566)). Qed.
Lemma lem2633569 : term105 = term106.
Proof. exact (MK_COMB (@lem2633568) (@lem2633563)). Qed.
Lemma lem2633570 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2633572 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633573 : term109 = term110.
Proof. exact (@lem2633572 (NUMERAL 0) term32). Qed.
Lemma lem2633574 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633575 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633576 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633575 h1) (fun h1 : term110 = True => @lem2633574)). Qed.
Lemma lem2633577 : term110 = True.
Proof. exact (EQ_MP (@lem2633576) (@lem2633574)). Qed.
Lemma lem2633578 : term109 = True.
Proof. exact (TRANS (@lem2633573) (@lem2633577)). Qed.
Lemma lem2633579 : True = term109.
Proof. exact (SYM (@lem2633578)). Qed.
Lemma lem2633580 : term109.
Proof. exact (EQ_MP (@lem2633579) (@lem0)). Qed.
Lemma lem2633581 : term112.
Proof. exact (@lem2633570 (@lem2633580)). Qed.
Lemma lem2633583 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633584 : term109 = term110.
Proof. exact (@lem2633583 (NUMERAL 0) term32). Qed.
Lemma lem2633585 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633586 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633587 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633586 h1) (fun h1 : term110 = True => @lem2633585)). Qed.
Lemma lem2633588 : term110 = True.
Proof. exact (EQ_MP (@lem2633587) (@lem2633585)). Qed.
Lemma lem2633589 : term109 = True.
Proof. exact (TRANS (@lem2633584) (@lem2633588)). Qed.
Lemma lem2633590 : True = term109.
Proof. exact (SYM (@lem2633589)). Qed.
Lemma lem2633591 : term109.
Proof. exact (EQ_MP (@lem2633590) (@lem0)). Qed.
Lemma lem2633592 : term113.
Proof. exact (@lem2633581 (@lem2633591)). Qed.
Lemma lem2633594 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633595 : term109 = term110.
Proof. exact (@lem2633594 (NUMERAL 0) term32). Qed.
Lemma lem2633596 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633597 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633598 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633597 h1) (fun h1 : term110 = True => @lem2633596)). Qed.
Lemma lem2633599 : term110 = True.
Proof. exact (EQ_MP (@lem2633598) (@lem2633596)). Qed.
Lemma lem2633600 : term109 = True.
Proof. exact (TRANS (@lem2633595) (@lem2633599)). Qed.
Lemma lem2633601 : True = term109.
Proof. exact (SYM (@lem2633600)). Qed.
Lemma lem2633602 : term109.
Proof. exact (EQ_MP (@lem2633601) (@lem0)). Qed.
Lemma lem2633603 : term114.
Proof. exact (@lem2633592 (@lem2633602)). Qed.
Lemma lem2633605 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633606 : term117 = term118.
Proof. exact (@lem2633605 term32 term32). Qed.
Lemma lem2633607 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633608 : term120 = term32.
Proof. exact (EQ_MP (@lem2633607) (@lem940073)). Qed.
Lemma lem2633609 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633610 : term118 = term31.
Proof. exact (MK_COMB (@lem2633609) (@lem2633608)). Qed.
Lemma lem2633611 : term117 = term31.
Proof. exact (TRANS (@lem2633606) (@lem2633610)). Qed.
Lemma lem2633613 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2633614 : term123 = term124.
Proof. exact (@lem2633613 term32 term32). Qed.
Lemma lem2633615 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633616 : term120 = term32.
Proof. exact (EQ_MP (@lem2633615) (@lem940073)). Qed.
Lemma lem2633617 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633618 : term118 = term31.
Proof. exact (MK_COMB (@lem2633617) (@lem2633616)). Qed.
Lemma lem2633619 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2633620 : term124 = term97.
Proof. exact (MK_COMB (@lem2633619) (@lem2633618)). Qed.
Lemma lem2633621 : term123 = term97.
Proof. exact (TRANS (@lem2633614) (@lem2633620)). Qed.
Lemma lem2633622 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633623 : term125 = term103.
Proof. exact (MK_COMB (@lem2633622) (@lem2633621)). Qed.
Lemma lem2633624 : term126 = term105.
Proof. exact (MK_COMB (@lem2633623) (@lem2633611)). Qed.
Lemma lem2633626 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2633627 : term105 = term38.
Proof. exact (@lem2633626 term32). Qed.
Lemma lem2633628 : term126 = term38.
Proof. exact (TRANS (@lem2633624) (@lem2633627)). Qed.
Lemma lem2633629 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2633630 : term128 = term129.
Proof. exact (MK_COMB (@lem2633629) (@lem2633628)). Qed.
Lemma lem2633631 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2633632 : term130 = term131.
Proof. exact (MK_COMB (@lem2633630) (@lem2633631)). Qed.
Lemma lem2633634 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633635 : term131 = term38.
Proof. exact (@lem2633634 term32). Qed.
Lemma lem2633636 : term130 = term38.
Proof. exact (TRANS (@lem2633632) (@lem2633635)). Qed.
Lemma lem2633638 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633639 : term117 = term118.
Proof. exact (@lem2633638 term32 term32). Qed.
Lemma lem2633640 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633641 : term120 = term32.
Proof. exact (EQ_MP (@lem2633640) (@lem940073)). Qed.
Lemma lem2633642 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633643 : term118 = term31.
Proof. exact (MK_COMB (@lem2633642) (@lem2633641)). Qed.
Lemma lem2633644 : term117 = term31.
Proof. exact (TRANS (@lem2633639) (@lem2633643)). Qed.
Lemma lem2633645 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2633646 : term133 = term131.
Proof. exact (MK_COMB (@lem2633645) (@lem2633644)). Qed.
Lemma lem2633648 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633649 : term131 = term38.
Proof. exact (@lem2633648 term32). Qed.
Lemma lem2633650 : term133 = term38.
Proof. exact (TRANS (@lem2633646) (@lem2633649)). Qed.
Lemma lem2633651 : term38 = term133.
Proof. exact (SYM (@lem2633650)). Qed.
Lemma lem2633652 : term130 = term133.
Proof. exact (TRANS (@lem2633636) (@lem2633651)). Qed.
Lemma lem2633653 : term106 = term134.
Proof. exact (@lem2633603 (@lem2633652)). Qed.
Lemma lem2633654 : term105 = term134.
Proof. exact (TRANS (@lem2633569) (@lem2633653)). Qed.
Lemma lem2633656 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2633657 : term134 = term38.
Proof. exact (@lem2633656 term38). Qed.
Lemma lem2633658 : term105 = term38.
Proof. exact (TRANS (@lem2633654) (@lem2633657)). Qed.
Lemma lem2633659 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2633660 : term136 = term129.
Proof. exact (MK_COMB (@lem2633659) (@lem2633658)). Qed.
Lemma lem2633661 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2633662 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2633660) (@lem2633661 n)). Qed.
Lemma lem2633663 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2633560 n) (@lem2633662 n)). Qed.
Lemma lem2633664 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2633665 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2633663 n) (@lem2633664 n)). Qed.
Lemma lem2633666 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633667 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2633666) (@lem2633665 n)). Qed.
Lemma lem2633668 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2633669 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2633667 n) (@lem2633668)). Qed.
Lemma lem2633670 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2633559 n) (@lem2633669 n)). Qed.
Lemma lem2633671 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2633672 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2633670 n) (@lem2633671)). Qed.
Lemma lem2633673 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633674 (n : int) : (term1138 n) = term256.
Proof. exact (MK_COMB (@lem2633673) (@lem2633672 n)). Qed.
Lemma lem2633675 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633676 (n : int) : (term1136 n) = term257.
Proof. exact (MK_COMB (@lem2633674 n) (@lem2633675)). Qed.
Lemma lem2633677 (n : int) (m : int) (h1 : term727 n m) : term257.
Proof. exact (EQ_MP (@lem2633676 n) (@lem2633558 n m h1)). Qed.
Lemma lem2633679 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2633680 : term257 = term258.
Proof. exact (@lem2633679 term38 term97). Qed.
Lemma lem2633682 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2633683 : term97 = term102.
Proof. exact (@lem2633682 term32). Qed.
Lemma lem2633685 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633686 : term38 = term134.
Proof. exact (@lem2633685 (NUMERAL 0)). Qed.
Lemma lem2633687 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2633688 : term259 = term260.
Proof. exact (MK_COMB (@lem2633687) (@lem2633686)). Qed.
Lemma lem2633689 : term258 = term261.
Proof. exact (MK_COMB (@lem2633688) (@lem2633683)). Qed.
Lemma lem2633690 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2633692 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633693 : term109 = term110.
Proof. exact (@lem2633692 (NUMERAL 0) term32). Qed.
Lemma lem2633694 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633695 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633696 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633695 h1) (fun h1 : term110 = True => @lem2633694)). Qed.
Lemma lem2633697 : term110 = True.
Proof. exact (EQ_MP (@lem2633696) (@lem2633694)). Qed.
Lemma lem2633698 : term109 = True.
Proof. exact (TRANS (@lem2633693) (@lem2633697)). Qed.
Lemma lem2633699 : True = term109.
Proof. exact (SYM (@lem2633698)). Qed.
Lemma lem2633700 : term109.
Proof. exact (EQ_MP (@lem2633699) (@lem0)). Qed.
Lemma lem2633701 : term263.
Proof. exact (@lem2633690 (@lem2633700)). Qed.
Lemma lem2633703 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633704 : term109 = term110.
Proof. exact (@lem2633703 (NUMERAL 0) term32). Qed.
Lemma lem2633705 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633706 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633707 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633706 h1) (fun h1 : term110 = True => @lem2633705)). Qed.
Lemma lem2633708 : term110 = True.
Proof. exact (EQ_MP (@lem2633707) (@lem2633705)). Qed.
Lemma lem2633709 : term109 = True.
Proof. exact (TRANS (@lem2633704) (@lem2633708)). Qed.
Lemma lem2633710 : True = term109.
Proof. exact (SYM (@lem2633709)). Qed.
Lemma lem2633711 : term109.
Proof. exact (EQ_MP (@lem2633710) (@lem0)). Qed.
Lemma lem2633712 : term261 = term264.
Proof. exact (@lem2633701 (@lem2633711)). Qed.
Lemma lem2633714 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2633715 : term123 = term124.
Proof. exact (@lem2633714 term32 term32). Qed.
Lemma lem2633716 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633717 : term120 = term32.
Proof. exact (EQ_MP (@lem2633716) (@lem940073)). Qed.
Lemma lem2633718 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633719 : term118 = term31.
Proof. exact (MK_COMB (@lem2633718) (@lem2633717)). Qed.
Lemma lem2633720 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2633721 : term124 = term97.
Proof. exact (MK_COMB (@lem2633720) (@lem2633719)). Qed.
Lemma lem2633722 : term123 = term97.
Proof. exact (TRANS (@lem2633715) (@lem2633721)). Qed.
Lemma lem2633724 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633725 : term131 = term38.
Proof. exact (@lem2633724 term32). Qed.
Lemma lem2633726 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2633727 : term265 = term259.
Proof. exact (MK_COMB (@lem2633726) (@lem2633725)). Qed.
Lemma lem2633728 : term264 = term258.
Proof. exact (MK_COMB (@lem2633727) (@lem2633722)). Qed.
Lemma lem2633730 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2633731 : term258 = term268.
Proof. exact (@lem2633730 (NUMERAL 0) term32). Qed.
Lemma lem2633732 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633733 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2633734 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633733 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2633732)). Qed.
Lemma lem2633735 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2633734) (@lem2633732)). Qed.
Lemma lem2633736 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2633737 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2633738 : term269 = (and True).
Proof. exact (MK_COMB (@lem2633737) (@lem2633736)). Qed.
Lemma lem2633739 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2633738) (@lem2633735)). Qed.
Lemma lem2633741 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2633742 : term268 = False.
Proof. exact (TRANS (@lem2633739) (@lem2633741)). Qed.
Lemma lem2633743 : term258 = False.
Proof. exact (TRANS (@lem2633731) (@lem2633742)). Qed.
Lemma lem2633744 : term264 = False.
Proof. exact (TRANS (@lem2633728) (@lem2633743)). Qed.
Lemma lem2633745 : term261 = False.
Proof. exact (TRANS (@lem2633712) (@lem2633744)). Qed.
Lemma lem2633746 : term258 = False.
Proof. exact (TRANS (@lem2633689) (@lem2633745)). Qed.
Lemma lem2633747 : term257 = False.
Proof. exact (TRANS (@lem2633680) (@lem2633746)). Qed.
Lemma lem2633748 (n : int) (m : int) (h1 : term727 n m) : False.
Proof. exact (EQ_MP (@lem2633747) (@lem2633677 n m h1)). Qed.
Lemma lem2633749 (n : int) (m : int) (h1 : term756 n m) : term756 n m.
Proof. exact (h1). Qed.
Lemma lem2633750 (n : int) (m : int) (h1 : term756 n m) : term754 n m.
Proof. exact (proj2 (@lem2633749 n m h1)). Qed.
Lemma lem2633752 (n : int) (m : int) (h1 : term756 n m) : term555 n m.
Proof. exact (proj2 (@lem2633750 n m h1)). Qed.
Lemma lem2633753 (n : int) (m : int) (h1 : term756 n m) : term751 m n.
Proof. exact (proj1 (@lem2633750 n m h1)). Qed.
Lemma lem2633755 (n : int) (m : int) (h1 : term756 n m) : term457 m.
Proof. exact (proj1 (@lem2633753 n m h1)). Qed.
Lemma lem2633756 (n : int) (m : int) (h1 : term756 n m) : term158 m.
Proof. exact (proj2 (@lem2633752 n m h1)). Qed.
Lemma lem2633759 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2633760 : term229 = term109.
Proof. exact (@lem2633759 term38 term31). Qed.
Lemma lem2633762 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633763 : term31 = term99.
Proof. exact (@lem2633762 term32). Qed.
Lemma lem2633765 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633766 : term38 = term134.
Proof. exact (@lem2633765 (NUMERAL 0)). Qed.
Lemma lem2633767 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633768 : term230 = term231.
Proof. exact (MK_COMB (@lem2633767) (@lem2633766)). Qed.
Lemma lem2633769 : term109 = term232.
Proof. exact (MK_COMB (@lem2633768) (@lem2633763)). Qed.
Lemma lem2633770 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2633772 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633773 : term109 = term110.
Proof. exact (@lem2633772 (NUMERAL 0) term32). Qed.
Lemma lem2633774 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633775 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633776 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633775 h1) (fun h1 : term110 = True => @lem2633774)). Qed.
Lemma lem2633777 : term110 = True.
Proof. exact (EQ_MP (@lem2633776) (@lem2633774)). Qed.
Lemma lem2633778 : term109 = True.
Proof. exact (TRANS (@lem2633773) (@lem2633777)). Qed.
Lemma lem2633779 : True = term109.
Proof. exact (SYM (@lem2633778)). Qed.
Lemma lem2633780 : term109.
Proof. exact (EQ_MP (@lem2633779) (@lem0)). Qed.
Lemma lem2633781 : term234.
Proof. exact (@lem2633770 (@lem2633780)). Qed.
Lemma lem2633783 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633784 : term109 = term110.
Proof. exact (@lem2633783 (NUMERAL 0) term32). Qed.
Lemma lem2633785 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633786 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633787 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633786 h1) (fun h1 : term110 = True => @lem2633785)). Qed.
Lemma lem2633788 : term110 = True.
Proof. exact (EQ_MP (@lem2633787) (@lem2633785)). Qed.
Lemma lem2633789 : term109 = True.
Proof. exact (TRANS (@lem2633784) (@lem2633788)). Qed.
Lemma lem2633790 : True = term109.
Proof. exact (SYM (@lem2633789)). Qed.
Lemma lem2633791 : term109.
Proof. exact (EQ_MP (@lem2633790) (@lem0)). Qed.
Lemma lem2633792 : term232 = term235.
Proof. exact (@lem2633781 (@lem2633791)). Qed.
Lemma lem2633794 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633795 : term117 = term118.
Proof. exact (@lem2633794 term32 term32). Qed.
Lemma lem2633796 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633797 : term120 = term32.
Proof. exact (EQ_MP (@lem2633796) (@lem940073)). Qed.
Lemma lem2633798 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633799 : term118 = term31.
Proof. exact (MK_COMB (@lem2633798) (@lem2633797)). Qed.
Lemma lem2633800 : term117 = term31.
Proof. exact (TRANS (@lem2633795) (@lem2633799)). Qed.
Lemma lem2633802 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633803 : term131 = term38.
Proof. exact (@lem2633802 term32). Qed.
Lemma lem2633804 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633805 : term236 = term230.
Proof. exact (MK_COMB (@lem2633804) (@lem2633803)). Qed.
Lemma lem2633806 : term235 = term109.
Proof. exact (MK_COMB (@lem2633805) (@lem2633800)). Qed.
Lemma lem2633808 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633809 : term109 = term110.
Proof. exact (@lem2633808 (NUMERAL 0) term32). Qed.
Lemma lem2633810 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633811 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633812 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633811 h1) (fun h1 : term110 = True => @lem2633810)). Qed.
Lemma lem2633813 : term110 = True.
Proof. exact (EQ_MP (@lem2633812) (@lem2633810)). Qed.
Lemma lem2633814 : term109 = True.
Proof. exact (TRANS (@lem2633809) (@lem2633813)). Qed.
Lemma lem2633815 : term235 = True.
Proof. exact (TRANS (@lem2633806) (@lem2633814)). Qed.
Lemma lem2633816 : term232 = True.
Proof. exact (TRANS (@lem2633792) (@lem2633815)). Qed.
Lemma lem2633817 : term109 = True.
Proof. exact (TRANS (@lem2633769) (@lem2633816)). Qed.
Lemma lem2633818 : term229 = True.
Proof. exact (TRANS (@lem2633760) (@lem2633817)). Qed.
Lemma lem2633819 : True = term229.
Proof. exact (SYM (@lem2633818)). Qed.
Lemma lem2633820 : term229.
Proof. exact (EQ_MP (@lem2633819) (@lem0)). Qed.
Lemma lem2633821 (n : int) (m : int) (h1 : term756 n m) : term1129 m.
Proof. exact (conj (@lem2633820) (@lem2633755 n m h1)). Qed.
Lemma lem2633823 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2633824 (m : int) : term1130 m.
Proof. exact (@lem2633823 term31 (real_of_int m)). Qed.
Lemma lem2633825 (n : int) (m : int) (h1 : term756 n m) : term1131 m.
Proof. exact (@lem2633824 m (@lem2633821 n m h1)). Qed.
Lemma lem2633826 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2633827 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633828 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2633827) (@lem2633826 m)). Qed.
Lemma lem2633829 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633830 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2633828 m) (@lem2633829)). Qed.
Lemma lem2633831 (n : int) (m : int) (h1 : term756 n m) : term457 m.
Proof. exact (EQ_MP (@lem2633830 m) (@lem2633825 n m h1)). Qed.
Lemma lem2633833 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2633834 : term229 = term109.
Proof. exact (@lem2633833 term38 term31). Qed.
Lemma lem2633836 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633837 : term31 = term99.
Proof. exact (@lem2633836 term32). Qed.
Lemma lem2633839 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633840 : term38 = term134.
Proof. exact (@lem2633839 (NUMERAL 0)). Qed.
Lemma lem2633841 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633842 : term230 = term231.
Proof. exact (MK_COMB (@lem2633841) (@lem2633840)). Qed.
Lemma lem2633843 : term109 = term232.
Proof. exact (MK_COMB (@lem2633842) (@lem2633837)). Qed.
Lemma lem2633844 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2633846 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633847 : term109 = term110.
Proof. exact (@lem2633846 (NUMERAL 0) term32). Qed.
Lemma lem2633848 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633849 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633850 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633849 h1) (fun h1 : term110 = True => @lem2633848)). Qed.
Lemma lem2633851 : term110 = True.
Proof. exact (EQ_MP (@lem2633850) (@lem2633848)). Qed.
Lemma lem2633852 : term109 = True.
Proof. exact (TRANS (@lem2633847) (@lem2633851)). Qed.
Lemma lem2633853 : True = term109.
Proof. exact (SYM (@lem2633852)). Qed.
Lemma lem2633854 : term109.
Proof. exact (EQ_MP (@lem2633853) (@lem0)). Qed.
Lemma lem2633855 : term234.
Proof. exact (@lem2633844 (@lem2633854)). Qed.
Lemma lem2633857 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633858 : term109 = term110.
Proof. exact (@lem2633857 (NUMERAL 0) term32). Qed.
Lemma lem2633859 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633860 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633861 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633860 h1) (fun h1 : term110 = True => @lem2633859)). Qed.
Lemma lem2633862 : term110 = True.
Proof. exact (EQ_MP (@lem2633861) (@lem2633859)). Qed.
Lemma lem2633863 : term109 = True.
Proof. exact (TRANS (@lem2633858) (@lem2633862)). Qed.
Lemma lem2633864 : True = term109.
Proof. exact (SYM (@lem2633863)). Qed.
Lemma lem2633865 : term109.
Proof. exact (EQ_MP (@lem2633864) (@lem0)). Qed.
Lemma lem2633866 : term232 = term235.
Proof. exact (@lem2633855 (@lem2633865)). Qed.
Lemma lem2633868 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633869 : term117 = term118.
Proof. exact (@lem2633868 term32 term32). Qed.
Lemma lem2633870 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633871 : term120 = term32.
Proof. exact (EQ_MP (@lem2633870) (@lem940073)). Qed.
Lemma lem2633872 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633873 : term118 = term31.
Proof. exact (MK_COMB (@lem2633872) (@lem2633871)). Qed.
Lemma lem2633874 : term117 = term31.
Proof. exact (TRANS (@lem2633869) (@lem2633873)). Qed.
Lemma lem2633876 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633877 : term131 = term38.
Proof. exact (@lem2633876 term32). Qed.
Lemma lem2633878 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2633879 : term236 = term230.
Proof. exact (MK_COMB (@lem2633878) (@lem2633877)). Qed.
Lemma lem2633880 : term235 = term109.
Proof. exact (MK_COMB (@lem2633879) (@lem2633874)). Qed.
Lemma lem2633882 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633883 : term109 = term110.
Proof. exact (@lem2633882 (NUMERAL 0) term32). Qed.
Lemma lem2633884 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633885 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633886 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633885 h1) (fun h1 : term110 = True => @lem2633884)). Qed.
Lemma lem2633887 : term110 = True.
Proof. exact (EQ_MP (@lem2633886) (@lem2633884)). Qed.
Lemma lem2633888 : term109 = True.
Proof. exact (TRANS (@lem2633883) (@lem2633887)). Qed.
Lemma lem2633889 : term235 = True.
Proof. exact (TRANS (@lem2633880) (@lem2633888)). Qed.
Lemma lem2633890 : term232 = True.
Proof. exact (TRANS (@lem2633866) (@lem2633889)). Qed.
Lemma lem2633891 : term109 = True.
Proof. exact (TRANS (@lem2633843) (@lem2633890)). Qed.
Lemma lem2633892 : term229 = True.
Proof. exact (TRANS (@lem2633834) (@lem2633891)). Qed.
Lemma lem2633893 : True = term229.
Proof. exact (SYM (@lem2633892)). Qed.
Lemma lem2633894 : term229.
Proof. exact (EQ_MP (@lem2633893) (@lem0)). Qed.
Lemma lem2633895 (n : int) (m : int) (h1 : term756 n m) : term237 m.
Proof. exact (conj (@lem2633894) (@lem2633756 n m h1)). Qed.
Lemma lem2633897 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2633898 (m : int) : term239 m.
Proof. exact (@lem2633897 term31 (term154 m)). Qed.
Lemma lem2633899 (n : int) (m : int) (h1 : term756 n m) : term240 m.
Proof. exact (@lem2633898 m (@lem2633895 n m h1)). Qed.
Lemma lem2633900 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2633901 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2633902 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2633901) (@lem2633900 m)). Qed.
Lemma lem2633903 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2633904 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2633902 m) (@lem2633903)). Qed.
Lemma lem2633905 (n : int) (m : int) (h1 : term756 n m) : term158 m.
Proof. exact (EQ_MP (@lem2633904 m) (@lem2633899 n m h1)). Qed.
Lemma lem2633906 (n : int) (m : int) (h1 : term756 n m) : term1133 m.
Proof. exact (conj (@lem2633905 n m h1) (@lem2633831 n m h1)). Qed.
Lemma lem2633908 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2633909 (m : int) : term1135 m.
Proof. exact (@lem2633908 (term154 m) (real_of_int m)). Qed.
Lemma lem2633910 (n : int) (m : int) (h1 : term756 n m) : term1136 m.
Proof. exact (@lem2633909 m (@lem2633906 n m h1)). Qed.
Lemma lem2633911 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2633912 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2633914 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2633915 : term31 = term99.
Proof. exact (@lem2633914 term32). Qed.
Lemma lem2633917 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2633918 : term97 = term102.
Proof. exact (@lem2633917 term32). Qed.
Lemma lem2633919 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633920 : term103 = term104.
Proof. exact (MK_COMB (@lem2633919) (@lem2633918)). Qed.
Lemma lem2633921 : term105 = term106.
Proof. exact (MK_COMB (@lem2633920) (@lem2633915)). Qed.
Lemma lem2633922 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2633924 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633925 : term109 = term110.
Proof. exact (@lem2633924 (NUMERAL 0) term32). Qed.
Lemma lem2633926 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633927 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633928 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633927 h1) (fun h1 : term110 = True => @lem2633926)). Qed.
Lemma lem2633929 : term110 = True.
Proof. exact (EQ_MP (@lem2633928) (@lem2633926)). Qed.
Lemma lem2633930 : term109 = True.
Proof. exact (TRANS (@lem2633925) (@lem2633929)). Qed.
Lemma lem2633931 : True = term109.
Proof. exact (SYM (@lem2633930)). Qed.
Lemma lem2633932 : term109.
Proof. exact (EQ_MP (@lem2633931) (@lem0)). Qed.
Lemma lem2633933 : term112.
Proof. exact (@lem2633922 (@lem2633932)). Qed.
Lemma lem2633935 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633936 : term109 = term110.
Proof. exact (@lem2633935 (NUMERAL 0) term32). Qed.
Lemma lem2633937 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633938 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633939 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633938 h1) (fun h1 : term110 = True => @lem2633937)). Qed.
Lemma lem2633940 : term110 = True.
Proof. exact (EQ_MP (@lem2633939) (@lem2633937)). Qed.
Lemma lem2633941 : term109 = True.
Proof. exact (TRANS (@lem2633936) (@lem2633940)). Qed.
Lemma lem2633942 : True = term109.
Proof. exact (SYM (@lem2633941)). Qed.
Lemma lem2633943 : term109.
Proof. exact (EQ_MP (@lem2633942) (@lem0)). Qed.
Lemma lem2633944 : term113.
Proof. exact (@lem2633933 (@lem2633943)). Qed.
Lemma lem2633946 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2633947 : term109 = term110.
Proof. exact (@lem2633946 (NUMERAL 0) term32). Qed.
Lemma lem2633948 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2633949 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2633950 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2633949 h1) (fun h1 : term110 = True => @lem2633948)). Qed.
Lemma lem2633951 : term110 = True.
Proof. exact (EQ_MP (@lem2633950) (@lem2633948)). Qed.
Lemma lem2633952 : term109 = True.
Proof. exact (TRANS (@lem2633947) (@lem2633951)). Qed.
Lemma lem2633953 : True = term109.
Proof. exact (SYM (@lem2633952)). Qed.
Lemma lem2633954 : term109.
Proof. exact (EQ_MP (@lem2633953) (@lem0)). Qed.
Lemma lem2633955 : term114.
Proof. exact (@lem2633944 (@lem2633954)). Qed.
Lemma lem2633957 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633958 : term117 = term118.
Proof. exact (@lem2633957 term32 term32). Qed.
Lemma lem2633959 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633960 : term120 = term32.
Proof. exact (EQ_MP (@lem2633959) (@lem940073)). Qed.
Lemma lem2633961 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633962 : term118 = term31.
Proof. exact (MK_COMB (@lem2633961) (@lem2633960)). Qed.
Lemma lem2633963 : term117 = term31.
Proof. exact (TRANS (@lem2633958) (@lem2633962)). Qed.
Lemma lem2633965 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2633966 : term123 = term124.
Proof. exact (@lem2633965 term32 term32). Qed.
Lemma lem2633967 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633968 : term120 = term32.
Proof. exact (EQ_MP (@lem2633967) (@lem940073)). Qed.
Lemma lem2633969 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633970 : term118 = term31.
Proof. exact (MK_COMB (@lem2633969) (@lem2633968)). Qed.
Lemma lem2633971 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2633972 : term124 = term97.
Proof. exact (MK_COMB (@lem2633971) (@lem2633970)). Qed.
Lemma lem2633973 : term123 = term97.
Proof. exact (TRANS (@lem2633966) (@lem2633972)). Qed.
Lemma lem2633974 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2633975 : term125 = term103.
Proof. exact (MK_COMB (@lem2633974) (@lem2633973)). Qed.
Lemma lem2633976 : term126 = term105.
Proof. exact (MK_COMB (@lem2633975) (@lem2633963)). Qed.
Lemma lem2633978 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2633979 : term105 = term38.
Proof. exact (@lem2633978 term32). Qed.
Lemma lem2633980 : term126 = term38.
Proof. exact (TRANS (@lem2633976) (@lem2633979)). Qed.
Lemma lem2633981 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2633982 : term128 = term129.
Proof. exact (MK_COMB (@lem2633981) (@lem2633980)). Qed.
Lemma lem2633983 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2633984 : term130 = term131.
Proof. exact (MK_COMB (@lem2633982) (@lem2633983)). Qed.
Lemma lem2633986 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2633987 : term131 = term38.
Proof. exact (@lem2633986 term32). Qed.
Lemma lem2633988 : term130 = term38.
Proof. exact (TRANS (@lem2633984) (@lem2633987)). Qed.
Lemma lem2633990 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2633991 : term117 = term118.
Proof. exact (@lem2633990 term32 term32). Qed.
Lemma lem2633992 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2633993 : term120 = term32.
Proof. exact (EQ_MP (@lem2633992) (@lem940073)). Qed.
Lemma lem2633994 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2633995 : term118 = term31.
Proof. exact (MK_COMB (@lem2633994) (@lem2633993)). Qed.
Lemma lem2633996 : term117 = term31.
Proof. exact (TRANS (@lem2633991) (@lem2633995)). Qed.
Lemma lem2633997 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2633998 : term133 = term131.
Proof. exact (MK_COMB (@lem2633997) (@lem2633996)). Qed.
Lemma lem2634000 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634001 : term131 = term38.
Proof. exact (@lem2634000 term32). Qed.
Lemma lem2634002 : term133 = term38.
Proof. exact (TRANS (@lem2633998) (@lem2634001)). Qed.
Lemma lem2634003 : term38 = term133.
Proof. exact (SYM (@lem2634002)). Qed.
Lemma lem2634004 : term130 = term133.
Proof. exact (TRANS (@lem2633988) (@lem2634003)). Qed.
Lemma lem2634005 : term106 = term134.
Proof. exact (@lem2633955 (@lem2634004)). Qed.
Lemma lem2634006 : term105 = term134.
Proof. exact (TRANS (@lem2633921) (@lem2634005)). Qed.
Lemma lem2634008 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2634009 : term134 = term38.
Proof. exact (@lem2634008 term38). Qed.
Lemma lem2634010 : term105 = term38.
Proof. exact (TRANS (@lem2634006) (@lem2634009)). Qed.
Lemma lem2634011 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634012 : term136 = term129.
Proof. exact (MK_COMB (@lem2634011) (@lem2634010)). Qed.
Lemma lem2634013 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2634014 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2634012) (@lem2634013 m)). Qed.
Lemma lem2634015 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2633912 m) (@lem2634014 m)). Qed.
Lemma lem2634016 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2634017 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2634015 m) (@lem2634016 m)). Qed.
Lemma lem2634018 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634019 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2634018) (@lem2634017 m)). Qed.
Lemma lem2634020 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2634021 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2634019 m) (@lem2634020)). Qed.
Lemma lem2634022 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2633911 m) (@lem2634021 m)). Qed.
Lemma lem2634023 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2634024 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2634022 m) (@lem2634023)). Qed.
Lemma lem2634025 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634026 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2634025) (@lem2634024 m)). Qed.
Lemma lem2634027 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634028 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2634026 m) (@lem2634027)). Qed.
Lemma lem2634029 (n : int) (m : int) (h1 : term756 n m) : term257.
Proof. exact (EQ_MP (@lem2634028 m) (@lem2633910 n m h1)). Qed.
Lemma lem2634031 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2634032 : term257 = term258.
Proof. exact (@lem2634031 term38 term97). Qed.
Lemma lem2634034 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634035 : term97 = term102.
Proof. exact (@lem2634034 term32). Qed.
Lemma lem2634037 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634038 : term38 = term134.
Proof. exact (@lem2634037 (NUMERAL 0)). Qed.
Lemma lem2634039 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634040 : term259 = term260.
Proof. exact (MK_COMB (@lem2634039) (@lem2634038)). Qed.
Lemma lem2634041 : term258 = term261.
Proof. exact (MK_COMB (@lem2634040) (@lem2634035)). Qed.
Lemma lem2634042 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2634044 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634045 : term109 = term110.
Proof. exact (@lem2634044 (NUMERAL 0) term32). Qed.
Lemma lem2634046 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634047 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634048 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634047 h1) (fun h1 : term110 = True => @lem2634046)). Qed.
Lemma lem2634049 : term110 = True.
Proof. exact (EQ_MP (@lem2634048) (@lem2634046)). Qed.
Lemma lem2634050 : term109 = True.
Proof. exact (TRANS (@lem2634045) (@lem2634049)). Qed.
Lemma lem2634051 : True = term109.
Proof. exact (SYM (@lem2634050)). Qed.
Lemma lem2634052 : term109.
Proof. exact (EQ_MP (@lem2634051) (@lem0)). Qed.
Lemma lem2634053 : term263.
Proof. exact (@lem2634042 (@lem2634052)). Qed.
Lemma lem2634055 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634056 : term109 = term110.
Proof. exact (@lem2634055 (NUMERAL 0) term32). Qed.
Lemma lem2634057 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634058 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634059 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634058 h1) (fun h1 : term110 = True => @lem2634057)). Qed.
Lemma lem2634060 : term110 = True.
Proof. exact (EQ_MP (@lem2634059) (@lem2634057)). Qed.
Lemma lem2634061 : term109 = True.
Proof. exact (TRANS (@lem2634056) (@lem2634060)). Qed.
Lemma lem2634062 : True = term109.
Proof. exact (SYM (@lem2634061)). Qed.
Lemma lem2634063 : term109.
Proof. exact (EQ_MP (@lem2634062) (@lem0)). Qed.
Lemma lem2634064 : term261 = term264.
Proof. exact (@lem2634053 (@lem2634063)). Qed.
Lemma lem2634066 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634067 : term123 = term124.
Proof. exact (@lem2634066 term32 term32). Qed.
Lemma lem2634068 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634069 : term120 = term32.
Proof. exact (EQ_MP (@lem2634068) (@lem940073)). Qed.
Lemma lem2634070 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634071 : term118 = term31.
Proof. exact (MK_COMB (@lem2634070) (@lem2634069)). Qed.
Lemma lem2634072 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634073 : term124 = term97.
Proof. exact (MK_COMB (@lem2634072) (@lem2634071)). Qed.
Lemma lem2634074 : term123 = term97.
Proof. exact (TRANS (@lem2634067) (@lem2634073)). Qed.
Lemma lem2634076 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634077 : term131 = term38.
Proof. exact (@lem2634076 term32). Qed.
Lemma lem2634078 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634079 : term265 = term259.
Proof. exact (MK_COMB (@lem2634078) (@lem2634077)). Qed.
Lemma lem2634080 : term264 = term258.
Proof. exact (MK_COMB (@lem2634079) (@lem2634074)). Qed.
Lemma lem2634082 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2634083 : term258 = term268.
Proof. exact (@lem2634082 (NUMERAL 0) term32). Qed.
Lemma lem2634084 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634085 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2634086 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634085 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2634084)). Qed.
Lemma lem2634087 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2634086) (@lem2634084)). Qed.
Lemma lem2634088 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2634089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2634090 : term269 = (and True).
Proof. exact (MK_COMB (@lem2634089) (@lem2634088)). Qed.
Lemma lem2634091 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2634090) (@lem2634087)). Qed.
Lemma lem2634093 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2634094 : term268 = False.
Proof. exact (TRANS (@lem2634091) (@lem2634093)). Qed.
Lemma lem2634095 : term258 = False.
Proof. exact (TRANS (@lem2634083) (@lem2634094)). Qed.
Lemma lem2634096 : term264 = False.
Proof. exact (TRANS (@lem2634080) (@lem2634095)). Qed.
Lemma lem2634097 : term261 = False.
Proof. exact (TRANS (@lem2634064) (@lem2634096)). Qed.
Lemma lem2634098 : term258 = False.
Proof. exact (TRANS (@lem2634041) (@lem2634097)). Qed.
Lemma lem2634099 : term257 = False.
Proof. exact (TRANS (@lem2634032) (@lem2634098)). Qed.
Lemma lem2634100 (n : int) (m : int) (h1 : term756 n m) : False.
Proof. exact (EQ_MP (@lem2634099) (@lem2634029 n m h1)). Qed.
Lemma lem2634101 (n : int) (m : int) (h1 : term758 n m) : False.
Proof. exact (or_elim (@lem2633396 n m h1) (fun h0 : term727 n m => @lem2633748 n m h0) (fun h0 : term756 n m => @lem2634100 n m h0)). Qed.
Lemma lem2634102 (n : int) (m : int) (h1 : term760 n m) : False.
Proof. exact (or_elim (@lem2633108 n m h1) (fun h0 : term667 n m => @lem2633395 n m h0) (fun h0 : term758 n m => @lem2634101 n m h0)). Qed.
Lemma lem2634103 (n : int) (m : int) (h1 : term667 n m) : term667 n m.
Proof. exact (h1). Qed.
Lemma lem2634104 (n : int) (m : int) (h1 : term667 n m) : term555 n m.
Proof. exact (proj2 (@lem2634103 n m h1)). Qed.
Lemma lem2634105 (n : int) (m : int) (h1 : term667 n m) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2634103 n m h1)). Qed.
Lemma lem2634107 (n : int) (m : int) (h1 : term667 n m) : term158 n.
Proof. exact (proj1 (@lem2634104 n m h1)). Qed.
Lemma lem2634109 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2634110 : term229 = term109.
Proof. exact (@lem2634109 term38 term31). Qed.
Lemma lem2634112 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634113 : term31 = term99.
Proof. exact (@lem2634112 term32). Qed.
Lemma lem2634115 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634116 : term38 = term134.
Proof. exact (@lem2634115 (NUMERAL 0)). Qed.
Lemma lem2634117 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634118 : term230 = term231.
Proof. exact (MK_COMB (@lem2634117) (@lem2634116)). Qed.
Lemma lem2634119 : term109 = term232.
Proof. exact (MK_COMB (@lem2634118) (@lem2634113)). Qed.
Lemma lem2634120 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2634122 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634123 : term109 = term110.
Proof. exact (@lem2634122 (NUMERAL 0) term32). Qed.
Lemma lem2634124 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634125 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634126 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634125 h1) (fun h1 : term110 = True => @lem2634124)). Qed.
Lemma lem2634127 : term110 = True.
Proof. exact (EQ_MP (@lem2634126) (@lem2634124)). Qed.
Lemma lem2634128 : term109 = True.
Proof. exact (TRANS (@lem2634123) (@lem2634127)). Qed.
Lemma lem2634129 : True = term109.
Proof. exact (SYM (@lem2634128)). Qed.
Lemma lem2634130 : term109.
Proof. exact (EQ_MP (@lem2634129) (@lem0)). Qed.
Lemma lem2634131 : term234.
Proof. exact (@lem2634120 (@lem2634130)). Qed.
Lemma lem2634133 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634134 : term109 = term110.
Proof. exact (@lem2634133 (NUMERAL 0) term32). Qed.
Lemma lem2634135 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634136 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634137 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634136 h1) (fun h1 : term110 = True => @lem2634135)). Qed.
Lemma lem2634138 : term110 = True.
Proof. exact (EQ_MP (@lem2634137) (@lem2634135)). Qed.
Lemma lem2634139 : term109 = True.
Proof. exact (TRANS (@lem2634134) (@lem2634138)). Qed.
Lemma lem2634140 : True = term109.
Proof. exact (SYM (@lem2634139)). Qed.
Lemma lem2634141 : term109.
Proof. exact (EQ_MP (@lem2634140) (@lem0)). Qed.
Lemma lem2634142 : term232 = term235.
Proof. exact (@lem2634131 (@lem2634141)). Qed.
Lemma lem2634144 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634145 : term117 = term118.
Proof. exact (@lem2634144 term32 term32). Qed.
Lemma lem2634146 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634147 : term120 = term32.
Proof. exact (EQ_MP (@lem2634146) (@lem940073)). Qed.
Lemma lem2634148 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634149 : term118 = term31.
Proof. exact (MK_COMB (@lem2634148) (@lem2634147)). Qed.
Lemma lem2634150 : term117 = term31.
Proof. exact (TRANS (@lem2634145) (@lem2634149)). Qed.
Lemma lem2634152 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634153 : term131 = term38.
Proof. exact (@lem2634152 term32). Qed.
Lemma lem2634154 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634155 : term236 = term230.
Proof. exact (MK_COMB (@lem2634154) (@lem2634153)). Qed.
Lemma lem2634156 : term235 = term109.
Proof. exact (MK_COMB (@lem2634155) (@lem2634150)). Qed.
Lemma lem2634158 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634159 : term109 = term110.
Proof. exact (@lem2634158 (NUMERAL 0) term32). Qed.
Lemma lem2634160 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634161 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634162 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634161 h1) (fun h1 : term110 = True => @lem2634160)). Qed.
Lemma lem2634163 : term110 = True.
Proof. exact (EQ_MP (@lem2634162) (@lem2634160)). Qed.
Lemma lem2634164 : term109 = True.
Proof. exact (TRANS (@lem2634159) (@lem2634163)). Qed.
Lemma lem2634165 : term235 = True.
Proof. exact (TRANS (@lem2634156) (@lem2634164)). Qed.
Lemma lem2634166 : term232 = True.
Proof. exact (TRANS (@lem2634142) (@lem2634165)). Qed.
Lemma lem2634167 : term109 = True.
Proof. exact (TRANS (@lem2634119) (@lem2634166)). Qed.
Lemma lem2634168 : term229 = True.
Proof. exact (TRANS (@lem2634110) (@lem2634167)). Qed.
Lemma lem2634169 : True = term229.
Proof. exact (SYM (@lem2634168)). Qed.
Lemma lem2634170 : term229.
Proof. exact (EQ_MP (@lem2634169) (@lem0)). Qed.
Lemma lem2634171 (n : int) (m : int) (h1 : term667 n m) : term237 n.
Proof. exact (conj (@lem2634170) (@lem2634107 n m h1)). Qed.
Lemma lem2634173 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2634174 (n : int) : term239 n.
Proof. exact (@lem2634173 term31 (term154 n)). Qed.
Lemma lem2634175 (n : int) (m : int) (h1 : term667 n m) : term240 n.
Proof. exact (@lem2634174 n (@lem2634171 n m h1)). Qed.
Lemma lem2634176 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2634177 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634178 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2634177) (@lem2634176 n)). Qed.
Lemma lem2634179 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634180 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2634178 n) (@lem2634179)). Qed.
Lemma lem2634181 (n : int) (m : int) (h1 : term667 n m) : term158 n.
Proof. exact (EQ_MP (@lem2634180 n) (@lem2634175 n m h1)). Qed.
Lemma lem2634183 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2634184 (n : int) : term287 n.
Proof. exact (@lem2634183 (real_of_int n)). Qed.
Lemma lem2634185 (n : int) (m : int) (h1 : term667 n m) : term288 n.
Proof. exact (@lem2634184 n (@lem2634105 n m h1)). Qed.
Lemma lem2634186 (n : int) (m : int) (h1 : term667 n m) : term291 n.
Proof. exact (@lem2634185 n m h1 term31). Qed.
Lemma lem2634187 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2634188 (n : int) (m : int) (h1 : term667 n m) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2634187 n) (@lem2634186 n m h1)). Qed.
Lemma lem2634189 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2634190 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2634191 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2634190) (@lem2634189 n)). Qed.
Lemma lem2634192 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634193 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2634191 n) (@lem2634192)). Qed.
Lemma lem2634194 (n : int) (m : int) (h1 : term667 n m) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2634193 n) (@lem2634188 n m h1)). Qed.
Lemma lem2634195 (n : int) (m : int) (h1 : term667 n m) : term248 n.
Proof. exact (conj (@lem2634194 n m h1) (@lem2634181 n m h1)). Qed.
Lemma lem2634197 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2634198 (n : int) : term250 n.
Proof. exact (@lem2634197 (real_of_int n) (term154 n)). Qed.
Lemma lem2634199 (n : int) (m : int) (h1 : term667 n m) : term251 n.
Proof. exact (@lem2634198 n (@lem2634195 n m h1)). Qed.
Lemma lem2634200 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2634201 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2634203 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634204 : term31 = term99.
Proof. exact (@lem2634203 term32). Qed.
Lemma lem2634206 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634207 : term97 = term102.
Proof. exact (@lem2634206 term32). Qed.
Lemma lem2634208 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634209 : term103 = term104.
Proof. exact (MK_COMB (@lem2634208) (@lem2634207)). Qed.
Lemma lem2634210 : term105 = term106.
Proof. exact (MK_COMB (@lem2634209) (@lem2634204)). Qed.
Lemma lem2634211 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2634213 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634214 : term109 = term110.
Proof. exact (@lem2634213 (NUMERAL 0) term32). Qed.
Lemma lem2634215 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634216 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634217 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634216 h1) (fun h1 : term110 = True => @lem2634215)). Qed.
Lemma lem2634218 : term110 = True.
Proof. exact (EQ_MP (@lem2634217) (@lem2634215)). Qed.
Lemma lem2634219 : term109 = True.
Proof. exact (TRANS (@lem2634214) (@lem2634218)). Qed.
Lemma lem2634220 : True = term109.
Proof. exact (SYM (@lem2634219)). Qed.
Lemma lem2634221 : term109.
Proof. exact (EQ_MP (@lem2634220) (@lem0)). Qed.
Lemma lem2634222 : term112.
Proof. exact (@lem2634211 (@lem2634221)). Qed.
Lemma lem2634224 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634225 : term109 = term110.
Proof. exact (@lem2634224 (NUMERAL 0) term32). Qed.
Lemma lem2634226 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634227 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634228 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634227 h1) (fun h1 : term110 = True => @lem2634226)). Qed.
Lemma lem2634229 : term110 = True.
Proof. exact (EQ_MP (@lem2634228) (@lem2634226)). Qed.
Lemma lem2634230 : term109 = True.
Proof. exact (TRANS (@lem2634225) (@lem2634229)). Qed.
Lemma lem2634231 : True = term109.
Proof. exact (SYM (@lem2634230)). Qed.
Lemma lem2634232 : term109.
Proof. exact (EQ_MP (@lem2634231) (@lem0)). Qed.
Lemma lem2634233 : term113.
Proof. exact (@lem2634222 (@lem2634232)). Qed.
Lemma lem2634235 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634236 : term109 = term110.
Proof. exact (@lem2634235 (NUMERAL 0) term32). Qed.
Lemma lem2634237 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634238 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634239 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634238 h1) (fun h1 : term110 = True => @lem2634237)). Qed.
Lemma lem2634240 : term110 = True.
Proof. exact (EQ_MP (@lem2634239) (@lem2634237)). Qed.
Lemma lem2634241 : term109 = True.
Proof. exact (TRANS (@lem2634236) (@lem2634240)). Qed.
Lemma lem2634242 : True = term109.
Proof. exact (SYM (@lem2634241)). Qed.
Lemma lem2634243 : term109.
Proof. exact (EQ_MP (@lem2634242) (@lem0)). Qed.
Lemma lem2634244 : term114.
Proof. exact (@lem2634233 (@lem2634243)). Qed.
Lemma lem2634246 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634247 : term117 = term118.
Proof. exact (@lem2634246 term32 term32). Qed.
Lemma lem2634248 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634249 : term120 = term32.
Proof. exact (EQ_MP (@lem2634248) (@lem940073)). Qed.
Lemma lem2634250 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634251 : term118 = term31.
Proof. exact (MK_COMB (@lem2634250) (@lem2634249)). Qed.
Lemma lem2634252 : term117 = term31.
Proof. exact (TRANS (@lem2634247) (@lem2634251)). Qed.
Lemma lem2634254 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634255 : term123 = term124.
Proof. exact (@lem2634254 term32 term32). Qed.
Lemma lem2634256 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634257 : term120 = term32.
Proof. exact (EQ_MP (@lem2634256) (@lem940073)). Qed.
Lemma lem2634258 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634259 : term118 = term31.
Proof. exact (MK_COMB (@lem2634258) (@lem2634257)). Qed.
Lemma lem2634260 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634261 : term124 = term97.
Proof. exact (MK_COMB (@lem2634260) (@lem2634259)). Qed.
Lemma lem2634262 : term123 = term97.
Proof. exact (TRANS (@lem2634255) (@lem2634261)). Qed.
Lemma lem2634263 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634264 : term125 = term103.
Proof. exact (MK_COMB (@lem2634263) (@lem2634262)). Qed.
Lemma lem2634265 : term126 = term105.
Proof. exact (MK_COMB (@lem2634264) (@lem2634252)). Qed.
Lemma lem2634267 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2634268 : term105 = term38.
Proof. exact (@lem2634267 term32). Qed.
Lemma lem2634269 : term126 = term38.
Proof. exact (TRANS (@lem2634265) (@lem2634268)). Qed.
Lemma lem2634270 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634271 : term128 = term129.
Proof. exact (MK_COMB (@lem2634270) (@lem2634269)). Qed.
Lemma lem2634272 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2634273 : term130 = term131.
Proof. exact (MK_COMB (@lem2634271) (@lem2634272)). Qed.
Lemma lem2634275 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634276 : term131 = term38.
Proof. exact (@lem2634275 term32). Qed.
Lemma lem2634277 : term130 = term38.
Proof. exact (TRANS (@lem2634273) (@lem2634276)). Qed.
Lemma lem2634279 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634280 : term117 = term118.
Proof. exact (@lem2634279 term32 term32). Qed.
Lemma lem2634281 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634282 : term120 = term32.
Proof. exact (EQ_MP (@lem2634281) (@lem940073)). Qed.
Lemma lem2634283 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634284 : term118 = term31.
Proof. exact (MK_COMB (@lem2634283) (@lem2634282)). Qed.
Lemma lem2634285 : term117 = term31.
Proof. exact (TRANS (@lem2634280) (@lem2634284)). Qed.
Lemma lem2634286 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2634287 : term133 = term131.
Proof. exact (MK_COMB (@lem2634286) (@lem2634285)). Qed.
Lemma lem2634289 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634290 : term131 = term38.
Proof. exact (@lem2634289 term32). Qed.
Lemma lem2634291 : term133 = term38.
Proof. exact (TRANS (@lem2634287) (@lem2634290)). Qed.
Lemma lem2634292 : term38 = term133.
Proof. exact (SYM (@lem2634291)). Qed.
Lemma lem2634293 : term130 = term133.
Proof. exact (TRANS (@lem2634277) (@lem2634292)). Qed.
Lemma lem2634294 : term106 = term134.
Proof. exact (@lem2634244 (@lem2634293)). Qed.
Lemma lem2634295 : term105 = term134.
Proof. exact (TRANS (@lem2634210) (@lem2634294)). Qed.
Lemma lem2634297 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2634298 : term134 = term38.
Proof. exact (@lem2634297 term38). Qed.
Lemma lem2634299 : term105 = term38.
Proof. exact (TRANS (@lem2634295) (@lem2634298)). Qed.
Lemma lem2634300 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634301 : term136 = term129.
Proof. exact (MK_COMB (@lem2634300) (@lem2634299)). Qed.
Lemma lem2634302 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2634303 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2634301) (@lem2634302 n)). Qed.
Lemma lem2634304 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2634201 n) (@lem2634303 n)). Qed.
Lemma lem2634305 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2634306 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2634304 n) (@lem2634305 n)). Qed.
Lemma lem2634307 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634308 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2634307) (@lem2634306 n)). Qed.
Lemma lem2634309 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2634310 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2634308 n) (@lem2634309)). Qed.
Lemma lem2634311 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2634200 n) (@lem2634310 n)). Qed.
Lemma lem2634312 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2634313 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2634311 n) (@lem2634312)). Qed.
Lemma lem2634314 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634315 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2634314) (@lem2634313 n)). Qed.
Lemma lem2634316 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634317 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2634315 n) (@lem2634316)). Qed.
Lemma lem2634318 (n : int) (m : int) (h1 : term667 n m) : term257.
Proof. exact (EQ_MP (@lem2634317 n) (@lem2634199 n m h1)). Qed.
Lemma lem2634320 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2634321 : term257 = term258.
Proof. exact (@lem2634320 term38 term97). Qed.
Lemma lem2634323 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634324 : term97 = term102.
Proof. exact (@lem2634323 term32). Qed.
Lemma lem2634326 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634327 : term38 = term134.
Proof. exact (@lem2634326 (NUMERAL 0)). Qed.
Lemma lem2634328 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634329 : term259 = term260.
Proof. exact (MK_COMB (@lem2634328) (@lem2634327)). Qed.
Lemma lem2634330 : term258 = term261.
Proof. exact (MK_COMB (@lem2634329) (@lem2634324)). Qed.
Lemma lem2634331 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2634333 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634334 : term109 = term110.
Proof. exact (@lem2634333 (NUMERAL 0) term32). Qed.
Lemma lem2634335 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634336 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634337 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634336 h1) (fun h1 : term110 = True => @lem2634335)). Qed.
Lemma lem2634338 : term110 = True.
Proof. exact (EQ_MP (@lem2634337) (@lem2634335)). Qed.
Lemma lem2634339 : term109 = True.
Proof. exact (TRANS (@lem2634334) (@lem2634338)). Qed.
Lemma lem2634340 : True = term109.
Proof. exact (SYM (@lem2634339)). Qed.
Lemma lem2634341 : term109.
Proof. exact (EQ_MP (@lem2634340) (@lem0)). Qed.
Lemma lem2634342 : term263.
Proof. exact (@lem2634331 (@lem2634341)). Qed.
Lemma lem2634344 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634345 : term109 = term110.
Proof. exact (@lem2634344 (NUMERAL 0) term32). Qed.
Lemma lem2634346 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634347 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634348 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634347 h1) (fun h1 : term110 = True => @lem2634346)). Qed.
Lemma lem2634349 : term110 = True.
Proof. exact (EQ_MP (@lem2634348) (@lem2634346)). Qed.
Lemma lem2634350 : term109 = True.
Proof. exact (TRANS (@lem2634345) (@lem2634349)). Qed.
Lemma lem2634351 : True = term109.
Proof. exact (SYM (@lem2634350)). Qed.
Lemma lem2634352 : term109.
Proof. exact (EQ_MP (@lem2634351) (@lem0)). Qed.
Lemma lem2634353 : term261 = term264.
Proof. exact (@lem2634342 (@lem2634352)). Qed.
Lemma lem2634355 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634356 : term123 = term124.
Proof. exact (@lem2634355 term32 term32). Qed.
Lemma lem2634357 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634358 : term120 = term32.
Proof. exact (EQ_MP (@lem2634357) (@lem940073)). Qed.
Lemma lem2634359 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634360 : term118 = term31.
Proof. exact (MK_COMB (@lem2634359) (@lem2634358)). Qed.
Lemma lem2634361 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634362 : term124 = term97.
Proof. exact (MK_COMB (@lem2634361) (@lem2634360)). Qed.
Lemma lem2634363 : term123 = term97.
Proof. exact (TRANS (@lem2634356) (@lem2634362)). Qed.
Lemma lem2634365 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634366 : term131 = term38.
Proof. exact (@lem2634365 term32). Qed.
Lemma lem2634367 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634368 : term265 = term259.
Proof. exact (MK_COMB (@lem2634367) (@lem2634366)). Qed.
Lemma lem2634369 : term264 = term258.
Proof. exact (MK_COMB (@lem2634368) (@lem2634363)). Qed.
Lemma lem2634371 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2634372 : term258 = term268.
Proof. exact (@lem2634371 (NUMERAL 0) term32). Qed.
Lemma lem2634373 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634374 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2634375 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634374 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2634373)). Qed.
Lemma lem2634376 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2634375) (@lem2634373)). Qed.
Lemma lem2634377 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2634378 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2634379 : term269 = (and True).
Proof. exact (MK_COMB (@lem2634378) (@lem2634377)). Qed.
Lemma lem2634380 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2634379) (@lem2634376)). Qed.
Lemma lem2634382 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2634383 : term268 = False.
Proof. exact (TRANS (@lem2634380) (@lem2634382)). Qed.
Lemma lem2634384 : term258 = False.
Proof. exact (TRANS (@lem2634372) (@lem2634383)). Qed.
Lemma lem2634385 : term264 = False.
Proof. exact (TRANS (@lem2634369) (@lem2634384)). Qed.
Lemma lem2634386 : term261 = False.
Proof. exact (TRANS (@lem2634353) (@lem2634385)). Qed.
Lemma lem2634387 : term258 = False.
Proof. exact (TRANS (@lem2634330) (@lem2634386)). Qed.
Lemma lem2634388 : term257 = False.
Proof. exact (TRANS (@lem2634321) (@lem2634387)). Qed.
Lemma lem2634389 (n : int) (m : int) (h1 : term667 n m) : False.
Proof. exact (EQ_MP (@lem2634388) (@lem2634318 n m h1)). Qed.
Lemma lem2634390 (n : int) (m : int) (h1 : term762 n m) : False.
Proof. exact (or_elim (@lem2633107 n m h1) (fun h0 : term760 n m => @lem2634102 n m h0) (fun h0 : term667 n m => @lem2634389 n m h0)). Qed.
Lemma lem2634391 (n : int) (m : int) (h1 : term795 n m) : term795 n m.
Proof. exact (h1). Qed.
Lemma lem2634392 (n : int) (m : int) (h1 : term793 n m) : term793 n m.
Proof. exact (h1). Qed.
Lemma lem2634393 (n : int) (m : int) (h1 : term659 n m) : term659 n m.
Proof. exact (h1). Qed.
Lemma lem2634394 (n : int) (m : int) (h1 : term659 n m) : term556 n m.
Proof. exact (proj2 (@lem2634393 n m h1)). Qed.
Lemma lem2634395 (n : int) (m : int) (h1 : term659 n m) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2634393 n m h1)). Qed.
Lemma lem2634397 (n : int) (m : int) (h1 : term659 n m) : term167 n.
Proof. exact (proj1 (@lem2634394 n m h1)). Qed.
Lemma lem2634399 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2634400 : term229 = term109.
Proof. exact (@lem2634399 term38 term31). Qed.
Lemma lem2634402 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634403 : term31 = term99.
Proof. exact (@lem2634402 term32). Qed.
Lemma lem2634405 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634406 : term38 = term134.
Proof. exact (@lem2634405 (NUMERAL 0)). Qed.
Lemma lem2634407 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634408 : term230 = term231.
Proof. exact (MK_COMB (@lem2634407) (@lem2634406)). Qed.
Lemma lem2634409 : term109 = term232.
Proof. exact (MK_COMB (@lem2634408) (@lem2634403)). Qed.
Lemma lem2634410 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2634412 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634413 : term109 = term110.
Proof. exact (@lem2634412 (NUMERAL 0) term32). Qed.
Lemma lem2634414 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634415 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634416 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634415 h1) (fun h1 : term110 = True => @lem2634414)). Qed.
Lemma lem2634417 : term110 = True.
Proof. exact (EQ_MP (@lem2634416) (@lem2634414)). Qed.
Lemma lem2634418 : term109 = True.
Proof. exact (TRANS (@lem2634413) (@lem2634417)). Qed.
Lemma lem2634419 : True = term109.
Proof. exact (SYM (@lem2634418)). Qed.
Lemma lem2634420 : term109.
Proof. exact (EQ_MP (@lem2634419) (@lem0)). Qed.
Lemma lem2634421 : term234.
Proof. exact (@lem2634410 (@lem2634420)). Qed.
Lemma lem2634423 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634424 : term109 = term110.
Proof. exact (@lem2634423 (NUMERAL 0) term32). Qed.
Lemma lem2634425 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634426 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634427 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634426 h1) (fun h1 : term110 = True => @lem2634425)). Qed.
Lemma lem2634428 : term110 = True.
Proof. exact (EQ_MP (@lem2634427) (@lem2634425)). Qed.
Lemma lem2634429 : term109 = True.
Proof. exact (TRANS (@lem2634424) (@lem2634428)). Qed.
Lemma lem2634430 : True = term109.
Proof. exact (SYM (@lem2634429)). Qed.
Lemma lem2634431 : term109.
Proof. exact (EQ_MP (@lem2634430) (@lem0)). Qed.
Lemma lem2634432 : term232 = term235.
Proof. exact (@lem2634421 (@lem2634431)). Qed.
Lemma lem2634434 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634435 : term117 = term118.
Proof. exact (@lem2634434 term32 term32). Qed.
Lemma lem2634436 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634437 : term120 = term32.
Proof. exact (EQ_MP (@lem2634436) (@lem940073)). Qed.
Lemma lem2634438 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634439 : term118 = term31.
Proof. exact (MK_COMB (@lem2634438) (@lem2634437)). Qed.
Lemma lem2634440 : term117 = term31.
Proof. exact (TRANS (@lem2634435) (@lem2634439)). Qed.
Lemma lem2634442 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634443 : term131 = term38.
Proof. exact (@lem2634442 term32). Qed.
Lemma lem2634444 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634445 : term236 = term230.
Proof. exact (MK_COMB (@lem2634444) (@lem2634443)). Qed.
Lemma lem2634446 : term235 = term109.
Proof. exact (MK_COMB (@lem2634445) (@lem2634440)). Qed.
Lemma lem2634448 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634449 : term109 = term110.
Proof. exact (@lem2634448 (NUMERAL 0) term32). Qed.
Lemma lem2634450 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634451 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634452 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634451 h1) (fun h1 : term110 = True => @lem2634450)). Qed.
Lemma lem2634453 : term110 = True.
Proof. exact (EQ_MP (@lem2634452) (@lem2634450)). Qed.
Lemma lem2634454 : term109 = True.
Proof. exact (TRANS (@lem2634449) (@lem2634453)). Qed.
Lemma lem2634455 : term235 = True.
Proof. exact (TRANS (@lem2634446) (@lem2634454)). Qed.
Lemma lem2634456 : term232 = True.
Proof. exact (TRANS (@lem2634432) (@lem2634455)). Qed.
Lemma lem2634457 : term109 = True.
Proof. exact (TRANS (@lem2634409) (@lem2634456)). Qed.
Lemma lem2634458 : term229 = True.
Proof. exact (TRANS (@lem2634400) (@lem2634457)). Qed.
Lemma lem2634459 : True = term229.
Proof. exact (SYM (@lem2634458)). Qed.
Lemma lem2634460 : term229.
Proof. exact (EQ_MP (@lem2634459) (@lem0)). Qed.
Lemma lem2634461 (n : int) (m : int) (h1 : term659 n m) : term271 n.
Proof. exact (conj (@lem2634460) (@lem2634397 n m h1)). Qed.
Lemma lem2634463 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2634464 (n : int) : term272 n.
Proof. exact (@lem2634463 term31 (term164 n)). Qed.
Lemma lem2634465 (n : int) (m : int) (h1 : term659 n m) : term273 n.
Proof. exact (@lem2634464 n (@lem2634461 n m h1)). Qed.
Lemma lem2634466 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2634467 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634468 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2634467) (@lem2634466 n)). Qed.
Lemma lem2634469 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634470 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2634468 n) (@lem2634469)). Qed.
Lemma lem2634471 (n : int) (m : int) (h1 : term659 n m) : term167 n.
Proof. exact (EQ_MP (@lem2634470 n) (@lem2634465 n m h1)). Qed.
Lemma lem2634473 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2634474 (n : int) : term287 n.
Proof. exact (@lem2634473 (real_of_int n)). Qed.
Lemma lem2634475 (n : int) (m : int) (h1 : term659 n m) : term288 n.
Proof. exact (@lem2634474 n (@lem2634395 n m h1)). Qed.
Lemma lem2634476 (n : int) (m : int) (h1 : term659 n m) : term289 n.
Proof. exact (@lem2634475 n m h1 term97). Qed.
Lemma lem2634477 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2634484 (n : int) (m : int) (h1 : term659 n m) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2634477 n) (@lem2634476 n m h1)). Qed.
Lemma lem2634485 (n : int) (m : int) (h1 : term659 n m) : term270 n.
Proof. exact (conj (@lem2634484 n m h1) (@lem2634471 n m h1)). Qed.
Lemma lem2634487 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2634488 (n : int) : term279 n.
Proof. exact (@lem2634487 (term94 n) (term164 n)). Qed.
Lemma lem2634489 (n : int) (m : int) (h1 : term659 n m) : term280 n.
Proof. exact (@lem2634488 n (@lem2634485 n m h1)). Qed.
Lemma lem2634490 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2634491 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2634493 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634494 : term31 = term99.
Proof. exact (@lem2634493 term32). Qed.
Lemma lem2634496 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634497 : term97 = term102.
Proof. exact (@lem2634496 term32). Qed.
Lemma lem2634498 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634499 : term103 = term104.
Proof. exact (MK_COMB (@lem2634498) (@lem2634497)). Qed.
Lemma lem2634500 : term105 = term106.
Proof. exact (MK_COMB (@lem2634499) (@lem2634494)). Qed.
Lemma lem2634501 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2634503 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634504 : term109 = term110.
Proof. exact (@lem2634503 (NUMERAL 0) term32). Qed.
Lemma lem2634505 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634506 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634507 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634506 h1) (fun h1 : term110 = True => @lem2634505)). Qed.
Lemma lem2634508 : term110 = True.
Proof. exact (EQ_MP (@lem2634507) (@lem2634505)). Qed.
Lemma lem2634509 : term109 = True.
Proof. exact (TRANS (@lem2634504) (@lem2634508)). Qed.
Lemma lem2634510 : True = term109.
Proof. exact (SYM (@lem2634509)). Qed.
Lemma lem2634511 : term109.
Proof. exact (EQ_MP (@lem2634510) (@lem0)). Qed.
Lemma lem2634512 : term112.
Proof. exact (@lem2634501 (@lem2634511)). Qed.
Lemma lem2634514 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634515 : term109 = term110.
Proof. exact (@lem2634514 (NUMERAL 0) term32). Qed.
Lemma lem2634516 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634517 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634518 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634517 h1) (fun h1 : term110 = True => @lem2634516)). Qed.
Lemma lem2634519 : term110 = True.
Proof. exact (EQ_MP (@lem2634518) (@lem2634516)). Qed.
Lemma lem2634520 : term109 = True.
Proof. exact (TRANS (@lem2634515) (@lem2634519)). Qed.
Lemma lem2634521 : True = term109.
Proof. exact (SYM (@lem2634520)). Qed.
Lemma lem2634522 : term109.
Proof. exact (EQ_MP (@lem2634521) (@lem0)). Qed.
Lemma lem2634523 : term113.
Proof. exact (@lem2634512 (@lem2634522)). Qed.
Lemma lem2634525 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634526 : term109 = term110.
Proof. exact (@lem2634525 (NUMERAL 0) term32). Qed.
Lemma lem2634527 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634528 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634529 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634528 h1) (fun h1 : term110 = True => @lem2634527)). Qed.
Lemma lem2634530 : term110 = True.
Proof. exact (EQ_MP (@lem2634529) (@lem2634527)). Qed.
Lemma lem2634531 : term109 = True.
Proof. exact (TRANS (@lem2634526) (@lem2634530)). Qed.
Lemma lem2634532 : True = term109.
Proof. exact (SYM (@lem2634531)). Qed.
Lemma lem2634533 : term109.
Proof. exact (EQ_MP (@lem2634532) (@lem0)). Qed.
Lemma lem2634534 : term114.
Proof. exact (@lem2634523 (@lem2634533)). Qed.
Lemma lem2634536 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634537 : term117 = term118.
Proof. exact (@lem2634536 term32 term32). Qed.
Lemma lem2634538 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634539 : term120 = term32.
Proof. exact (EQ_MP (@lem2634538) (@lem940073)). Qed.
Lemma lem2634540 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634541 : term118 = term31.
Proof. exact (MK_COMB (@lem2634540) (@lem2634539)). Qed.
Lemma lem2634542 : term117 = term31.
Proof. exact (TRANS (@lem2634537) (@lem2634541)). Qed.
Lemma lem2634544 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634545 : term123 = term124.
Proof. exact (@lem2634544 term32 term32). Qed.
Lemma lem2634546 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634547 : term120 = term32.
Proof. exact (EQ_MP (@lem2634546) (@lem940073)). Qed.
Lemma lem2634548 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634549 : term118 = term31.
Proof. exact (MK_COMB (@lem2634548) (@lem2634547)). Qed.
Lemma lem2634550 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634551 : term124 = term97.
Proof. exact (MK_COMB (@lem2634550) (@lem2634549)). Qed.
Lemma lem2634552 : term123 = term97.
Proof. exact (TRANS (@lem2634545) (@lem2634551)). Qed.
Lemma lem2634553 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634554 : term125 = term103.
Proof. exact (MK_COMB (@lem2634553) (@lem2634552)). Qed.
Lemma lem2634555 : term126 = term105.
Proof. exact (MK_COMB (@lem2634554) (@lem2634542)). Qed.
Lemma lem2634557 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2634558 : term105 = term38.
Proof. exact (@lem2634557 term32). Qed.
Lemma lem2634559 : term126 = term38.
Proof. exact (TRANS (@lem2634555) (@lem2634558)). Qed.
Lemma lem2634560 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634561 : term128 = term129.
Proof. exact (MK_COMB (@lem2634560) (@lem2634559)). Qed.
Lemma lem2634562 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2634563 : term130 = term131.
Proof. exact (MK_COMB (@lem2634561) (@lem2634562)). Qed.
Lemma lem2634565 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634566 : term131 = term38.
Proof. exact (@lem2634565 term32). Qed.
Lemma lem2634567 : term130 = term38.
Proof. exact (TRANS (@lem2634563) (@lem2634566)). Qed.
Lemma lem2634569 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634570 : term117 = term118.
Proof. exact (@lem2634569 term32 term32). Qed.
Lemma lem2634571 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634572 : term120 = term32.
Proof. exact (EQ_MP (@lem2634571) (@lem940073)). Qed.
Lemma lem2634573 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634574 : term118 = term31.
Proof. exact (MK_COMB (@lem2634573) (@lem2634572)). Qed.
Lemma lem2634575 : term117 = term31.
Proof. exact (TRANS (@lem2634570) (@lem2634574)). Qed.
Lemma lem2634576 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2634577 : term133 = term131.
Proof. exact (MK_COMB (@lem2634576) (@lem2634575)). Qed.
Lemma lem2634579 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634580 : term131 = term38.
Proof. exact (@lem2634579 term32). Qed.
Lemma lem2634581 : term133 = term38.
Proof. exact (TRANS (@lem2634577) (@lem2634580)). Qed.
Lemma lem2634582 : term38 = term133.
Proof. exact (SYM (@lem2634581)). Qed.
Lemma lem2634583 : term130 = term133.
Proof. exact (TRANS (@lem2634567) (@lem2634582)). Qed.
Lemma lem2634584 : term106 = term134.
Proof. exact (@lem2634534 (@lem2634583)). Qed.
Lemma lem2634585 : term105 = term134.
Proof. exact (TRANS (@lem2634500) (@lem2634584)). Qed.
Lemma lem2634587 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2634588 : term134 = term38.
Proof. exact (@lem2634587 term38). Qed.
Lemma lem2634589 : term105 = term38.
Proof. exact (TRANS (@lem2634585) (@lem2634588)). Qed.
Lemma lem2634590 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634591 : term136 = term129.
Proof. exact (MK_COMB (@lem2634590) (@lem2634589)). Qed.
Lemma lem2634592 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2634593 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2634591) (@lem2634592 n)). Qed.
Lemma lem2634594 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2634491 n) (@lem2634593 n)). Qed.
Lemma lem2634595 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2634596 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2634594 n) (@lem2634595 n)). Qed.
Lemma lem2634597 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634598 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2634597) (@lem2634596 n)). Qed.
Lemma lem2634599 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2634600 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2634598 n) (@lem2634599)). Qed.
Lemma lem2634601 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2634490 n) (@lem2634600 n)). Qed.
Lemma lem2634602 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2634603 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2634601 n) (@lem2634602)). Qed.
Lemma lem2634604 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634605 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2634604) (@lem2634603 n)). Qed.
Lemma lem2634606 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634607 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2634605 n) (@lem2634606)). Qed.
Lemma lem2634608 (n : int) (m : int) (h1 : term659 n m) : term257.
Proof. exact (EQ_MP (@lem2634607 n) (@lem2634489 n m h1)). Qed.
Lemma lem2634610 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2634611 : term257 = term258.
Proof. exact (@lem2634610 term38 term97). Qed.
Lemma lem2634613 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634614 : term97 = term102.
Proof. exact (@lem2634613 term32). Qed.
Lemma lem2634616 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634617 : term38 = term134.
Proof. exact (@lem2634616 (NUMERAL 0)). Qed.
Lemma lem2634618 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634619 : term259 = term260.
Proof. exact (MK_COMB (@lem2634618) (@lem2634617)). Qed.
Lemma lem2634620 : term258 = term261.
Proof. exact (MK_COMB (@lem2634619) (@lem2634614)). Qed.
Lemma lem2634621 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2634623 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634624 : term109 = term110.
Proof. exact (@lem2634623 (NUMERAL 0) term32). Qed.
Lemma lem2634625 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634626 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634627 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634626 h1) (fun h1 : term110 = True => @lem2634625)). Qed.
Lemma lem2634628 : term110 = True.
Proof. exact (EQ_MP (@lem2634627) (@lem2634625)). Qed.
Lemma lem2634629 : term109 = True.
Proof. exact (TRANS (@lem2634624) (@lem2634628)). Qed.
Lemma lem2634630 : True = term109.
Proof. exact (SYM (@lem2634629)). Qed.
Lemma lem2634631 : term109.
Proof. exact (EQ_MP (@lem2634630) (@lem0)). Qed.
Lemma lem2634632 : term263.
Proof. exact (@lem2634621 (@lem2634631)). Qed.
Lemma lem2634634 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634635 : term109 = term110.
Proof. exact (@lem2634634 (NUMERAL 0) term32). Qed.
Lemma lem2634636 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634637 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634638 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634637 h1) (fun h1 : term110 = True => @lem2634636)). Qed.
Lemma lem2634639 : term110 = True.
Proof. exact (EQ_MP (@lem2634638) (@lem2634636)). Qed.
Lemma lem2634640 : term109 = True.
Proof. exact (TRANS (@lem2634635) (@lem2634639)). Qed.
Lemma lem2634641 : True = term109.
Proof. exact (SYM (@lem2634640)). Qed.
Lemma lem2634642 : term109.
Proof. exact (EQ_MP (@lem2634641) (@lem0)). Qed.
Lemma lem2634643 : term261 = term264.
Proof. exact (@lem2634632 (@lem2634642)). Qed.
Lemma lem2634645 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634646 : term123 = term124.
Proof. exact (@lem2634645 term32 term32). Qed.
Lemma lem2634647 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634648 : term120 = term32.
Proof. exact (EQ_MP (@lem2634647) (@lem940073)). Qed.
Lemma lem2634649 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634650 : term118 = term31.
Proof. exact (MK_COMB (@lem2634649) (@lem2634648)). Qed.
Lemma lem2634651 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634652 : term124 = term97.
Proof. exact (MK_COMB (@lem2634651) (@lem2634650)). Qed.
Lemma lem2634653 : term123 = term97.
Proof. exact (TRANS (@lem2634646) (@lem2634652)). Qed.
Lemma lem2634655 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634656 : term131 = term38.
Proof. exact (@lem2634655 term32). Qed.
Lemma lem2634657 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634658 : term265 = term259.
Proof. exact (MK_COMB (@lem2634657) (@lem2634656)). Qed.
Lemma lem2634659 : term264 = term258.
Proof. exact (MK_COMB (@lem2634658) (@lem2634653)). Qed.
Lemma lem2634661 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2634662 : term258 = term268.
Proof. exact (@lem2634661 (NUMERAL 0) term32). Qed.
Lemma lem2634663 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634664 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2634665 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634664 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2634663)). Qed.
Lemma lem2634666 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2634665) (@lem2634663)). Qed.
Lemma lem2634667 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2634668 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2634669 : term269 = (and True).
Proof. exact (MK_COMB (@lem2634668) (@lem2634667)). Qed.
Lemma lem2634670 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2634669) (@lem2634666)). Qed.
Lemma lem2634672 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2634673 : term268 = False.
Proof. exact (TRANS (@lem2634670) (@lem2634672)). Qed.
Lemma lem2634674 : term258 = False.
Proof. exact (TRANS (@lem2634662) (@lem2634673)). Qed.
Lemma lem2634675 : term264 = False.
Proof. exact (TRANS (@lem2634659) (@lem2634674)). Qed.
Lemma lem2634676 : term261 = False.
Proof. exact (TRANS (@lem2634643) (@lem2634675)). Qed.
Lemma lem2634677 : term258 = False.
Proof. exact (TRANS (@lem2634620) (@lem2634676)). Qed.
Lemma lem2634678 : term257 = False.
Proof. exact (TRANS (@lem2634611) (@lem2634677)). Qed.
Lemma lem2634679 (n : int) (m : int) (h1 : term659 n m) : False.
Proof. exact (EQ_MP (@lem2634678) (@lem2634608 n m h1)). Qed.
Lemma lem2634680 (n : int) (m : int) (h1 : term791 n m) : term791 n m.
Proof. exact (h1). Qed.
Lemma lem2634681 (n : int) (m : int) (h1 : term787 n m) : term787 n m.
Proof. exact (h1). Qed.
Lemma lem2634682 (n : int) (m : int) (h1 : term787 n m) : term786 n m.
Proof. exact (proj2 (@lem2634681 n m h1)). Qed.
Lemma lem2634684 (n : int) (m : int) (h1 : term787 n m) : term556 n m.
Proof. exact (proj2 (@lem2634682 n m h1)). Qed.
Lemma lem2634685 (n : int) (m : int) (h1 : term787 n m) : term716 m n.
Proof. exact (proj1 (@lem2634682 n m h1)). Qed.
Lemma lem2634687 (n : int) (m : int) (h1 : term787 n m) : term457 m.
Proof. exact (proj1 (@lem2634685 n m h1)). Qed.
Lemma lem2634688 (n : int) (m : int) (h1 : term787 n m) : term158 m.
Proof. exact (proj2 (@lem2634684 n m h1)). Qed.
Lemma lem2634691 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2634692 : term229 = term109.
Proof. exact (@lem2634691 term38 term31). Qed.
Lemma lem2634694 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634695 : term31 = term99.
Proof. exact (@lem2634694 term32). Qed.
Lemma lem2634697 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634698 : term38 = term134.
Proof. exact (@lem2634697 (NUMERAL 0)). Qed.
Lemma lem2634699 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634700 : term230 = term231.
Proof. exact (MK_COMB (@lem2634699) (@lem2634698)). Qed.
Lemma lem2634701 : term109 = term232.
Proof. exact (MK_COMB (@lem2634700) (@lem2634695)). Qed.
Lemma lem2634702 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2634704 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634705 : term109 = term110.
Proof. exact (@lem2634704 (NUMERAL 0) term32). Qed.
Lemma lem2634706 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634707 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634708 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634707 h1) (fun h1 : term110 = True => @lem2634706)). Qed.
Lemma lem2634709 : term110 = True.
Proof. exact (EQ_MP (@lem2634708) (@lem2634706)). Qed.
Lemma lem2634710 : term109 = True.
Proof. exact (TRANS (@lem2634705) (@lem2634709)). Qed.
Lemma lem2634711 : True = term109.
Proof. exact (SYM (@lem2634710)). Qed.
Lemma lem2634712 : term109.
Proof. exact (EQ_MP (@lem2634711) (@lem0)). Qed.
Lemma lem2634713 : term234.
Proof. exact (@lem2634702 (@lem2634712)). Qed.
Lemma lem2634715 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634716 : term109 = term110.
Proof. exact (@lem2634715 (NUMERAL 0) term32). Qed.
Lemma lem2634717 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634718 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634719 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634718 h1) (fun h1 : term110 = True => @lem2634717)). Qed.
Lemma lem2634720 : term110 = True.
Proof. exact (EQ_MP (@lem2634719) (@lem2634717)). Qed.
Lemma lem2634721 : term109 = True.
Proof. exact (TRANS (@lem2634716) (@lem2634720)). Qed.
Lemma lem2634722 : True = term109.
Proof. exact (SYM (@lem2634721)). Qed.
Lemma lem2634723 : term109.
Proof. exact (EQ_MP (@lem2634722) (@lem0)). Qed.
Lemma lem2634724 : term232 = term235.
Proof. exact (@lem2634713 (@lem2634723)). Qed.
Lemma lem2634726 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634727 : term117 = term118.
Proof. exact (@lem2634726 term32 term32). Qed.
Lemma lem2634728 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634729 : term120 = term32.
Proof. exact (EQ_MP (@lem2634728) (@lem940073)). Qed.
Lemma lem2634730 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634731 : term118 = term31.
Proof. exact (MK_COMB (@lem2634730) (@lem2634729)). Qed.
Lemma lem2634732 : term117 = term31.
Proof. exact (TRANS (@lem2634727) (@lem2634731)). Qed.
Lemma lem2634734 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634735 : term131 = term38.
Proof. exact (@lem2634734 term32). Qed.
Lemma lem2634736 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634737 : term236 = term230.
Proof. exact (MK_COMB (@lem2634736) (@lem2634735)). Qed.
Lemma lem2634738 : term235 = term109.
Proof. exact (MK_COMB (@lem2634737) (@lem2634732)). Qed.
Lemma lem2634740 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634741 : term109 = term110.
Proof. exact (@lem2634740 (NUMERAL 0) term32). Qed.
Lemma lem2634742 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634743 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634744 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634743 h1) (fun h1 : term110 = True => @lem2634742)). Qed.
Lemma lem2634745 : term110 = True.
Proof. exact (EQ_MP (@lem2634744) (@lem2634742)). Qed.
Lemma lem2634746 : term109 = True.
Proof. exact (TRANS (@lem2634741) (@lem2634745)). Qed.
Lemma lem2634747 : term235 = True.
Proof. exact (TRANS (@lem2634738) (@lem2634746)). Qed.
Lemma lem2634748 : term232 = True.
Proof. exact (TRANS (@lem2634724) (@lem2634747)). Qed.
Lemma lem2634749 : term109 = True.
Proof. exact (TRANS (@lem2634701) (@lem2634748)). Qed.
Lemma lem2634750 : term229 = True.
Proof. exact (TRANS (@lem2634692) (@lem2634749)). Qed.
Lemma lem2634751 : True = term229.
Proof. exact (SYM (@lem2634750)). Qed.
Lemma lem2634752 : term229.
Proof. exact (EQ_MP (@lem2634751) (@lem0)). Qed.
Lemma lem2634753 (n : int) (m : int) (h1 : term787 n m) : term1129 m.
Proof. exact (conj (@lem2634752) (@lem2634687 n m h1)). Qed.
Lemma lem2634755 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2634756 (m : int) : term1130 m.
Proof. exact (@lem2634755 term31 (real_of_int m)). Qed.
Lemma lem2634757 (n : int) (m : int) (h1 : term787 n m) : term1131 m.
Proof. exact (@lem2634756 m (@lem2634753 n m h1)). Qed.
Lemma lem2634758 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2634759 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634760 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2634759) (@lem2634758 m)). Qed.
Lemma lem2634761 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634762 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2634760 m) (@lem2634761)). Qed.
Lemma lem2634763 (n : int) (m : int) (h1 : term787 n m) : term457 m.
Proof. exact (EQ_MP (@lem2634762 m) (@lem2634757 n m h1)). Qed.
Lemma lem2634765 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2634766 : term229 = term109.
Proof. exact (@lem2634765 term38 term31). Qed.
Lemma lem2634768 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634769 : term31 = term99.
Proof. exact (@lem2634768 term32). Qed.
Lemma lem2634771 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634772 : term38 = term134.
Proof. exact (@lem2634771 (NUMERAL 0)). Qed.
Lemma lem2634773 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634774 : term230 = term231.
Proof. exact (MK_COMB (@lem2634773) (@lem2634772)). Qed.
Lemma lem2634775 : term109 = term232.
Proof. exact (MK_COMB (@lem2634774) (@lem2634769)). Qed.
Lemma lem2634776 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2634778 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634779 : term109 = term110.
Proof. exact (@lem2634778 (NUMERAL 0) term32). Qed.
Lemma lem2634780 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634781 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634782 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634781 h1) (fun h1 : term110 = True => @lem2634780)). Qed.
Lemma lem2634783 : term110 = True.
Proof. exact (EQ_MP (@lem2634782) (@lem2634780)). Qed.
Lemma lem2634784 : term109 = True.
Proof. exact (TRANS (@lem2634779) (@lem2634783)). Qed.
Lemma lem2634785 : True = term109.
Proof. exact (SYM (@lem2634784)). Qed.
Lemma lem2634786 : term109.
Proof. exact (EQ_MP (@lem2634785) (@lem0)). Qed.
Lemma lem2634787 : term234.
Proof. exact (@lem2634776 (@lem2634786)). Qed.
Lemma lem2634789 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634790 : term109 = term110.
Proof. exact (@lem2634789 (NUMERAL 0) term32). Qed.
Lemma lem2634791 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634792 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634793 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634792 h1) (fun h1 : term110 = True => @lem2634791)). Qed.
Lemma lem2634794 : term110 = True.
Proof. exact (EQ_MP (@lem2634793) (@lem2634791)). Qed.
Lemma lem2634795 : term109 = True.
Proof. exact (TRANS (@lem2634790) (@lem2634794)). Qed.
Lemma lem2634796 : True = term109.
Proof. exact (SYM (@lem2634795)). Qed.
Lemma lem2634797 : term109.
Proof. exact (EQ_MP (@lem2634796) (@lem0)). Qed.
Lemma lem2634798 : term232 = term235.
Proof. exact (@lem2634787 (@lem2634797)). Qed.
Lemma lem2634800 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634801 : term117 = term118.
Proof. exact (@lem2634800 term32 term32). Qed.
Lemma lem2634802 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634803 : term120 = term32.
Proof. exact (EQ_MP (@lem2634802) (@lem940073)). Qed.
Lemma lem2634804 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634805 : term118 = term31.
Proof. exact (MK_COMB (@lem2634804) (@lem2634803)). Qed.
Lemma lem2634806 : term117 = term31.
Proof. exact (TRANS (@lem2634801) (@lem2634805)). Qed.
Lemma lem2634808 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634809 : term131 = term38.
Proof. exact (@lem2634808 term32). Qed.
Lemma lem2634810 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2634811 : term236 = term230.
Proof. exact (MK_COMB (@lem2634810) (@lem2634809)). Qed.
Lemma lem2634812 : term235 = term109.
Proof. exact (MK_COMB (@lem2634811) (@lem2634806)). Qed.
Lemma lem2634814 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634815 : term109 = term110.
Proof. exact (@lem2634814 (NUMERAL 0) term32). Qed.
Lemma lem2634816 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634817 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634818 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634817 h1) (fun h1 : term110 = True => @lem2634816)). Qed.
Lemma lem2634819 : term110 = True.
Proof. exact (EQ_MP (@lem2634818) (@lem2634816)). Qed.
Lemma lem2634820 : term109 = True.
Proof. exact (TRANS (@lem2634815) (@lem2634819)). Qed.
Lemma lem2634821 : term235 = True.
Proof. exact (TRANS (@lem2634812) (@lem2634820)). Qed.
Lemma lem2634822 : term232 = True.
Proof. exact (TRANS (@lem2634798) (@lem2634821)). Qed.
Lemma lem2634823 : term109 = True.
Proof. exact (TRANS (@lem2634775) (@lem2634822)). Qed.
Lemma lem2634824 : term229 = True.
Proof. exact (TRANS (@lem2634766) (@lem2634823)). Qed.
Lemma lem2634825 : True = term229.
Proof. exact (SYM (@lem2634824)). Qed.
Lemma lem2634826 : term229.
Proof. exact (EQ_MP (@lem2634825) (@lem0)). Qed.
Lemma lem2634827 (n : int) (m : int) (h1 : term787 n m) : term237 m.
Proof. exact (conj (@lem2634826) (@lem2634688 n m h1)). Qed.
Lemma lem2634829 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2634830 (m : int) : term239 m.
Proof. exact (@lem2634829 term31 (term154 m)). Qed.
Lemma lem2634831 (n : int) (m : int) (h1 : term787 n m) : term240 m.
Proof. exact (@lem2634830 m (@lem2634827 n m h1)). Qed.
Lemma lem2634832 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2634833 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634834 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2634833) (@lem2634832 m)). Qed.
Lemma lem2634835 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634836 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2634834 m) (@lem2634835)). Qed.
Lemma lem2634837 (n : int) (m : int) (h1 : term787 n m) : term158 m.
Proof. exact (EQ_MP (@lem2634836 m) (@lem2634831 n m h1)). Qed.
Lemma lem2634838 (n : int) (m : int) (h1 : term787 n m) : term1133 m.
Proof. exact (conj (@lem2634837 n m h1) (@lem2634763 n m h1)). Qed.
Lemma lem2634840 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2634841 (m : int) : term1135 m.
Proof. exact (@lem2634840 (term154 m) (real_of_int m)). Qed.
Lemma lem2634842 (n : int) (m : int) (h1 : term787 n m) : term1136 m.
Proof. exact (@lem2634841 m (@lem2634838 n m h1)). Qed.
Lemma lem2634843 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2634844 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2634846 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634847 : term31 = term99.
Proof. exact (@lem2634846 term32). Qed.
Lemma lem2634849 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634850 : term97 = term102.
Proof. exact (@lem2634849 term32). Qed.
Lemma lem2634851 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634852 : term103 = term104.
Proof. exact (MK_COMB (@lem2634851) (@lem2634850)). Qed.
Lemma lem2634853 : term105 = term106.
Proof. exact (MK_COMB (@lem2634852) (@lem2634847)). Qed.
Lemma lem2634854 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2634856 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634857 : term109 = term110.
Proof. exact (@lem2634856 (NUMERAL 0) term32). Qed.
Lemma lem2634858 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634859 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634860 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634859 h1) (fun h1 : term110 = True => @lem2634858)). Qed.
Lemma lem2634861 : term110 = True.
Proof. exact (EQ_MP (@lem2634860) (@lem2634858)). Qed.
Lemma lem2634862 : term109 = True.
Proof. exact (TRANS (@lem2634857) (@lem2634861)). Qed.
Lemma lem2634863 : True = term109.
Proof. exact (SYM (@lem2634862)). Qed.
Lemma lem2634864 : term109.
Proof. exact (EQ_MP (@lem2634863) (@lem0)). Qed.
Lemma lem2634865 : term112.
Proof. exact (@lem2634854 (@lem2634864)). Qed.
Lemma lem2634867 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634868 : term109 = term110.
Proof. exact (@lem2634867 (NUMERAL 0) term32). Qed.
Lemma lem2634869 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634870 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634871 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634870 h1) (fun h1 : term110 = True => @lem2634869)). Qed.
Lemma lem2634872 : term110 = True.
Proof. exact (EQ_MP (@lem2634871) (@lem2634869)). Qed.
Lemma lem2634873 : term109 = True.
Proof. exact (TRANS (@lem2634868) (@lem2634872)). Qed.
Lemma lem2634874 : True = term109.
Proof. exact (SYM (@lem2634873)). Qed.
Lemma lem2634875 : term109.
Proof. exact (EQ_MP (@lem2634874) (@lem0)). Qed.
Lemma lem2634876 : term113.
Proof. exact (@lem2634865 (@lem2634875)). Qed.
Lemma lem2634878 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634879 : term109 = term110.
Proof. exact (@lem2634878 (NUMERAL 0) term32). Qed.
Lemma lem2634880 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634881 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634882 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634881 h1) (fun h1 : term110 = True => @lem2634880)). Qed.
Lemma lem2634883 : term110 = True.
Proof. exact (EQ_MP (@lem2634882) (@lem2634880)). Qed.
Lemma lem2634884 : term109 = True.
Proof. exact (TRANS (@lem2634879) (@lem2634883)). Qed.
Lemma lem2634885 : True = term109.
Proof. exact (SYM (@lem2634884)). Qed.
Lemma lem2634886 : term109.
Proof. exact (EQ_MP (@lem2634885) (@lem0)). Qed.
Lemma lem2634887 : term114.
Proof. exact (@lem2634876 (@lem2634886)). Qed.
Lemma lem2634889 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634890 : term117 = term118.
Proof. exact (@lem2634889 term32 term32). Qed.
Lemma lem2634891 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634892 : term120 = term32.
Proof. exact (EQ_MP (@lem2634891) (@lem940073)). Qed.
Lemma lem2634893 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634894 : term118 = term31.
Proof. exact (MK_COMB (@lem2634893) (@lem2634892)). Qed.
Lemma lem2634895 : term117 = term31.
Proof. exact (TRANS (@lem2634890) (@lem2634894)). Qed.
Lemma lem2634897 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634898 : term123 = term124.
Proof. exact (@lem2634897 term32 term32). Qed.
Lemma lem2634899 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634900 : term120 = term32.
Proof. exact (EQ_MP (@lem2634899) (@lem940073)). Qed.
Lemma lem2634901 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634902 : term118 = term31.
Proof. exact (MK_COMB (@lem2634901) (@lem2634900)). Qed.
Lemma lem2634903 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2634904 : term124 = term97.
Proof. exact (MK_COMB (@lem2634903) (@lem2634902)). Qed.
Lemma lem2634905 : term123 = term97.
Proof. exact (TRANS (@lem2634898) (@lem2634904)). Qed.
Lemma lem2634906 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634907 : term125 = term103.
Proof. exact (MK_COMB (@lem2634906) (@lem2634905)). Qed.
Lemma lem2634908 : term126 = term105.
Proof. exact (MK_COMB (@lem2634907) (@lem2634895)). Qed.
Lemma lem2634910 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2634911 : term105 = term38.
Proof. exact (@lem2634910 term32). Qed.
Lemma lem2634912 : term126 = term38.
Proof. exact (TRANS (@lem2634908) (@lem2634911)). Qed.
Lemma lem2634913 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634914 : term128 = term129.
Proof. exact (MK_COMB (@lem2634913) (@lem2634912)). Qed.
Lemma lem2634915 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2634916 : term130 = term131.
Proof. exact (MK_COMB (@lem2634914) (@lem2634915)). Qed.
Lemma lem2634918 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634919 : term131 = term38.
Proof. exact (@lem2634918 term32). Qed.
Lemma lem2634920 : term130 = term38.
Proof. exact (TRANS (@lem2634916) (@lem2634919)). Qed.
Lemma lem2634922 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2634923 : term117 = term118.
Proof. exact (@lem2634922 term32 term32). Qed.
Lemma lem2634924 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2634925 : term120 = term32.
Proof. exact (EQ_MP (@lem2634924) (@lem940073)). Qed.
Lemma lem2634926 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2634927 : term118 = term31.
Proof. exact (MK_COMB (@lem2634926) (@lem2634925)). Qed.
Lemma lem2634928 : term117 = term31.
Proof. exact (TRANS (@lem2634923) (@lem2634927)). Qed.
Lemma lem2634929 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2634930 : term133 = term131.
Proof. exact (MK_COMB (@lem2634929) (@lem2634928)). Qed.
Lemma lem2634932 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2634933 : term131 = term38.
Proof. exact (@lem2634932 term32). Qed.
Lemma lem2634934 : term133 = term38.
Proof. exact (TRANS (@lem2634930) (@lem2634933)). Qed.
Lemma lem2634935 : term38 = term133.
Proof. exact (SYM (@lem2634934)). Qed.
Lemma lem2634936 : term130 = term133.
Proof. exact (TRANS (@lem2634920) (@lem2634935)). Qed.
Lemma lem2634937 : term106 = term134.
Proof. exact (@lem2634887 (@lem2634936)). Qed.
Lemma lem2634938 : term105 = term134.
Proof. exact (TRANS (@lem2634853) (@lem2634937)). Qed.
Lemma lem2634940 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2634941 : term134 = term38.
Proof. exact (@lem2634940 term38). Qed.
Lemma lem2634942 : term105 = term38.
Proof. exact (TRANS (@lem2634938) (@lem2634941)). Qed.
Lemma lem2634943 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2634944 : term136 = term129.
Proof. exact (MK_COMB (@lem2634943) (@lem2634942)). Qed.
Lemma lem2634945 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2634946 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2634944) (@lem2634945 m)). Qed.
Lemma lem2634947 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2634844 m) (@lem2634946 m)). Qed.
Lemma lem2634948 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2634949 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2634947 m) (@lem2634948 m)). Qed.
Lemma lem2634950 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2634951 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2634950) (@lem2634949 m)). Qed.
Lemma lem2634952 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2634953 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2634951 m) (@lem2634952)). Qed.
Lemma lem2634954 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2634843 m) (@lem2634953 m)). Qed.
Lemma lem2634955 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2634956 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2634954 m) (@lem2634955)). Qed.
Lemma lem2634957 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2634958 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2634957) (@lem2634956 m)). Qed.
Lemma lem2634959 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2634960 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2634958 m) (@lem2634959)). Qed.
Lemma lem2634961 (n : int) (m : int) (h1 : term787 n m) : term257.
Proof. exact (EQ_MP (@lem2634960 m) (@lem2634842 n m h1)). Qed.
Lemma lem2634963 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2634964 : term257 = term258.
Proof. exact (@lem2634963 term38 term97). Qed.
Lemma lem2634966 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2634967 : term97 = term102.
Proof. exact (@lem2634966 term32). Qed.
Lemma lem2634969 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2634970 : term38 = term134.
Proof. exact (@lem2634969 (NUMERAL 0)). Qed.
Lemma lem2634971 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2634972 : term259 = term260.
Proof. exact (MK_COMB (@lem2634971) (@lem2634970)). Qed.
Lemma lem2634973 : term258 = term261.
Proof. exact (MK_COMB (@lem2634972) (@lem2634967)). Qed.
Lemma lem2634974 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2634976 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634977 : term109 = term110.
Proof. exact (@lem2634976 (NUMERAL 0) term32). Qed.
Lemma lem2634978 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634979 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634980 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634979 h1) (fun h1 : term110 = True => @lem2634978)). Qed.
Lemma lem2634981 : term110 = True.
Proof. exact (EQ_MP (@lem2634980) (@lem2634978)). Qed.
Lemma lem2634982 : term109 = True.
Proof. exact (TRANS (@lem2634977) (@lem2634981)). Qed.
Lemma lem2634983 : True = term109.
Proof. exact (SYM (@lem2634982)). Qed.
Lemma lem2634984 : term109.
Proof. exact (EQ_MP (@lem2634983) (@lem0)). Qed.
Lemma lem2634985 : term263.
Proof. exact (@lem2634974 (@lem2634984)). Qed.
Lemma lem2634987 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2634988 : term109 = term110.
Proof. exact (@lem2634987 (NUMERAL 0) term32). Qed.
Lemma lem2634989 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2634990 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2634991 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2634990 h1) (fun h1 : term110 = True => @lem2634989)). Qed.
Lemma lem2634992 : term110 = True.
Proof. exact (EQ_MP (@lem2634991) (@lem2634989)). Qed.
Lemma lem2634993 : term109 = True.
Proof. exact (TRANS (@lem2634988) (@lem2634992)). Qed.
Lemma lem2634994 : True = term109.
Proof. exact (SYM (@lem2634993)). Qed.
Lemma lem2634995 : term109.
Proof. exact (EQ_MP (@lem2634994) (@lem0)). Qed.
Lemma lem2634996 : term261 = term264.
Proof. exact (@lem2634985 (@lem2634995)). Qed.
Lemma lem2634998 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2634999 : term123 = term124.
Proof. exact (@lem2634998 term32 term32). Qed.
Lemma lem2635000 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635001 : term120 = term32.
Proof. exact (EQ_MP (@lem2635000) (@lem940073)). Qed.
Lemma lem2635002 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635003 : term118 = term31.
Proof. exact (MK_COMB (@lem2635002) (@lem2635001)). Qed.
Lemma lem2635004 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635005 : term124 = term97.
Proof. exact (MK_COMB (@lem2635004) (@lem2635003)). Qed.
Lemma lem2635006 : term123 = term97.
Proof. exact (TRANS (@lem2634999) (@lem2635005)). Qed.
Lemma lem2635008 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635009 : term131 = term38.
Proof. exact (@lem2635008 term32). Qed.
Lemma lem2635010 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2635011 : term265 = term259.
Proof. exact (MK_COMB (@lem2635010) (@lem2635009)). Qed.
Lemma lem2635012 : term264 = term258.
Proof. exact (MK_COMB (@lem2635011) (@lem2635006)). Qed.
Lemma lem2635014 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2635015 : term258 = term268.
Proof. exact (@lem2635014 (NUMERAL 0) term32). Qed.
Lemma lem2635016 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635017 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2635018 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635017 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2635016)). Qed.
Lemma lem2635019 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2635018) (@lem2635016)). Qed.
Lemma lem2635020 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2635021 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2635022 : term269 = (and True).
Proof. exact (MK_COMB (@lem2635021) (@lem2635020)). Qed.
Lemma lem2635023 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2635022) (@lem2635019)). Qed.
Lemma lem2635025 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2635026 : term268 = False.
Proof. exact (TRANS (@lem2635023) (@lem2635025)). Qed.
Lemma lem2635027 : term258 = False.
Proof. exact (TRANS (@lem2635015) (@lem2635026)). Qed.
Lemma lem2635028 : term264 = False.
Proof. exact (TRANS (@lem2635012) (@lem2635027)). Qed.
Lemma lem2635029 : term261 = False.
Proof. exact (TRANS (@lem2634996) (@lem2635028)). Qed.
Lemma lem2635030 : term258 = False.
Proof. exact (TRANS (@lem2634973) (@lem2635029)). Qed.
Lemma lem2635031 : term257 = False.
Proof. exact (TRANS (@lem2634964) (@lem2635030)). Qed.
Lemma lem2635032 (n : int) (m : int) (h1 : term787 n m) : False.
Proof. exact (EQ_MP (@lem2635031) (@lem2634961 n m h1)). Qed.
Lemma lem2635033 (n : int) (m : int) (h1 : term789 n m) : term789 n m.
Proof. exact (h1). Qed.
Lemma lem2635034 (n : int) (m : int) (h1 : term789 n m) : term788 n m.
Proof. exact (proj2 (@lem2635033 n m h1)). Qed.
Lemma lem2635035 (n : int) (m : int) (h1 : term789 n m) : term733 n.
Proof. exact (proj1 (@lem2635033 n m h1)). Qed.
Lemma lem2635036 (n : int) (m : int) (h1 : term789 n m) : term556 n m.
Proof. exact (proj2 (@lem2635034 n m h1)). Qed.
Lemma lem2635041 (n : int) (m : int) (h1 : term789 n m) : term167 n.
Proof. exact (proj1 (@lem2635036 n m h1)). Qed.
Lemma lem2635043 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635044 : term229 = term109.
Proof. exact (@lem2635043 term38 term31). Qed.
Lemma lem2635046 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635047 : term31 = term99.
Proof. exact (@lem2635046 term32). Qed.
Lemma lem2635049 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635050 : term38 = term134.
Proof. exact (@lem2635049 (NUMERAL 0)). Qed.
Lemma lem2635051 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635052 : term230 = term231.
Proof. exact (MK_COMB (@lem2635051) (@lem2635050)). Qed.
Lemma lem2635053 : term109 = term232.
Proof. exact (MK_COMB (@lem2635052) (@lem2635047)). Qed.
Lemma lem2635054 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2635056 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635057 : term109 = term110.
Proof. exact (@lem2635056 (NUMERAL 0) term32). Qed.
Lemma lem2635058 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635059 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635060 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635059 h1) (fun h1 : term110 = True => @lem2635058)). Qed.
Lemma lem2635061 : term110 = True.
Proof. exact (EQ_MP (@lem2635060) (@lem2635058)). Qed.
Lemma lem2635062 : term109 = True.
Proof. exact (TRANS (@lem2635057) (@lem2635061)). Qed.
Lemma lem2635063 : True = term109.
Proof. exact (SYM (@lem2635062)). Qed.
Lemma lem2635064 : term109.
Proof. exact (EQ_MP (@lem2635063) (@lem0)). Qed.
Lemma lem2635065 : term234.
Proof. exact (@lem2635054 (@lem2635064)). Qed.
Lemma lem2635067 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635068 : term109 = term110.
Proof. exact (@lem2635067 (NUMERAL 0) term32). Qed.
Lemma lem2635069 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635070 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635071 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635070 h1) (fun h1 : term110 = True => @lem2635069)). Qed.
Lemma lem2635072 : term110 = True.
Proof. exact (EQ_MP (@lem2635071) (@lem2635069)). Qed.
Lemma lem2635073 : term109 = True.
Proof. exact (TRANS (@lem2635068) (@lem2635072)). Qed.
Lemma lem2635074 : True = term109.
Proof. exact (SYM (@lem2635073)). Qed.
Lemma lem2635075 : term109.
Proof. exact (EQ_MP (@lem2635074) (@lem0)). Qed.
Lemma lem2635076 : term232 = term235.
Proof. exact (@lem2635065 (@lem2635075)). Qed.
Lemma lem2635078 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635079 : term117 = term118.
Proof. exact (@lem2635078 term32 term32). Qed.
Lemma lem2635080 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635081 : term120 = term32.
Proof. exact (EQ_MP (@lem2635080) (@lem940073)). Qed.
Lemma lem2635082 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635083 : term118 = term31.
Proof. exact (MK_COMB (@lem2635082) (@lem2635081)). Qed.
Lemma lem2635084 : term117 = term31.
Proof. exact (TRANS (@lem2635079) (@lem2635083)). Qed.
Lemma lem2635086 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635087 : term131 = term38.
Proof. exact (@lem2635086 term32). Qed.
Lemma lem2635088 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635089 : term236 = term230.
Proof. exact (MK_COMB (@lem2635088) (@lem2635087)). Qed.
Lemma lem2635090 : term235 = term109.
Proof. exact (MK_COMB (@lem2635089) (@lem2635084)). Qed.
Lemma lem2635092 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635093 : term109 = term110.
Proof. exact (@lem2635092 (NUMERAL 0) term32). Qed.
Lemma lem2635094 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635095 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635096 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635095 h1) (fun h1 : term110 = True => @lem2635094)). Qed.
Lemma lem2635097 : term110 = True.
Proof. exact (EQ_MP (@lem2635096) (@lem2635094)). Qed.
Lemma lem2635098 : term109 = True.
Proof. exact (TRANS (@lem2635093) (@lem2635097)). Qed.
Lemma lem2635099 : term235 = True.
Proof. exact (TRANS (@lem2635090) (@lem2635098)). Qed.
Lemma lem2635100 : term232 = True.
Proof. exact (TRANS (@lem2635076) (@lem2635099)). Qed.
Lemma lem2635101 : term109 = True.
Proof. exact (TRANS (@lem2635053) (@lem2635100)). Qed.
Lemma lem2635102 : term229 = True.
Proof. exact (TRANS (@lem2635044) (@lem2635101)). Qed.
Lemma lem2635103 : True = term229.
Proof. exact (SYM (@lem2635102)). Qed.
Lemma lem2635104 : term229.
Proof. exact (EQ_MP (@lem2635103) (@lem0)). Qed.
Lemma lem2635105 (n : int) (m : int) (h1 : term789 n m) : term271 n.
Proof. exact (conj (@lem2635104) (@lem2635041 n m h1)). Qed.
Lemma lem2635107 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2635108 (n : int) : term272 n.
Proof. exact (@lem2635107 term31 (term164 n)). Qed.
Lemma lem2635109 (n : int) (m : int) (h1 : term789 n m) : term273 n.
Proof. exact (@lem2635108 n (@lem2635105 n m h1)). Qed.
Lemma lem2635110 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2635111 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2635112 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2635111) (@lem2635110 n)). Qed.
Lemma lem2635113 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635114 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2635112 n) (@lem2635113)). Qed.
Lemma lem2635115 (n : int) (m : int) (h1 : term789 n m) : term167 n.
Proof. exact (EQ_MP (@lem2635114 n) (@lem2635109 n m h1)). Qed.
Lemma lem2635117 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635118 : term229 = term109.
Proof. exact (@lem2635117 term38 term31). Qed.
Lemma lem2635120 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635121 : term31 = term99.
Proof. exact (@lem2635120 term32). Qed.
Lemma lem2635123 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635124 : term38 = term134.
Proof. exact (@lem2635123 (NUMERAL 0)). Qed.
Lemma lem2635125 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635126 : term230 = term231.
Proof. exact (MK_COMB (@lem2635125) (@lem2635124)). Qed.
Lemma lem2635127 : term109 = term232.
Proof. exact (MK_COMB (@lem2635126) (@lem2635121)). Qed.
Lemma lem2635128 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2635130 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635131 : term109 = term110.
Proof. exact (@lem2635130 (NUMERAL 0) term32). Qed.
Lemma lem2635132 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635133 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635134 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635133 h1) (fun h1 : term110 = True => @lem2635132)). Qed.
Lemma lem2635135 : term110 = True.
Proof. exact (EQ_MP (@lem2635134) (@lem2635132)). Qed.
Lemma lem2635136 : term109 = True.
Proof. exact (TRANS (@lem2635131) (@lem2635135)). Qed.
Lemma lem2635137 : True = term109.
Proof. exact (SYM (@lem2635136)). Qed.
Lemma lem2635138 : term109.
Proof. exact (EQ_MP (@lem2635137) (@lem0)). Qed.
Lemma lem2635139 : term234.
Proof. exact (@lem2635128 (@lem2635138)). Qed.
Lemma lem2635141 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635142 : term109 = term110.
Proof. exact (@lem2635141 (NUMERAL 0) term32). Qed.
Lemma lem2635143 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635144 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635145 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635144 h1) (fun h1 : term110 = True => @lem2635143)). Qed.
Lemma lem2635146 : term110 = True.
Proof. exact (EQ_MP (@lem2635145) (@lem2635143)). Qed.
Lemma lem2635147 : term109 = True.
Proof. exact (TRANS (@lem2635142) (@lem2635146)). Qed.
Lemma lem2635148 : True = term109.
Proof. exact (SYM (@lem2635147)). Qed.
Lemma lem2635149 : term109.
Proof. exact (EQ_MP (@lem2635148) (@lem0)). Qed.
Lemma lem2635150 : term232 = term235.
Proof. exact (@lem2635139 (@lem2635149)). Qed.
Lemma lem2635152 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635153 : term117 = term118.
Proof. exact (@lem2635152 term32 term32). Qed.
Lemma lem2635154 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635155 : term120 = term32.
Proof. exact (EQ_MP (@lem2635154) (@lem940073)). Qed.
Lemma lem2635156 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635157 : term118 = term31.
Proof. exact (MK_COMB (@lem2635156) (@lem2635155)). Qed.
Lemma lem2635158 : term117 = term31.
Proof. exact (TRANS (@lem2635153) (@lem2635157)). Qed.
Lemma lem2635160 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635161 : term131 = term38.
Proof. exact (@lem2635160 term32). Qed.
Lemma lem2635162 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635163 : term236 = term230.
Proof. exact (MK_COMB (@lem2635162) (@lem2635161)). Qed.
Lemma lem2635164 : term235 = term109.
Proof. exact (MK_COMB (@lem2635163) (@lem2635158)). Qed.
Lemma lem2635166 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635167 : term109 = term110.
Proof. exact (@lem2635166 (NUMERAL 0) term32). Qed.
Lemma lem2635168 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635169 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635170 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635169 h1) (fun h1 : term110 = True => @lem2635168)). Qed.
Lemma lem2635171 : term110 = True.
Proof. exact (EQ_MP (@lem2635170) (@lem2635168)). Qed.
Lemma lem2635172 : term109 = True.
Proof. exact (TRANS (@lem2635167) (@lem2635171)). Qed.
Lemma lem2635173 : term235 = True.
Proof. exact (TRANS (@lem2635164) (@lem2635172)). Qed.
Lemma lem2635174 : term232 = True.
Proof. exact (TRANS (@lem2635150) (@lem2635173)). Qed.
Lemma lem2635175 : term109 = True.
Proof. exact (TRANS (@lem2635127) (@lem2635174)). Qed.
Lemma lem2635176 : term229 = True.
Proof. exact (TRANS (@lem2635118) (@lem2635175)). Qed.
Lemma lem2635177 : True = term229.
Proof. exact (SYM (@lem2635176)). Qed.
Lemma lem2635178 : term229.
Proof. exact (EQ_MP (@lem2635177) (@lem0)). Qed.
Lemma lem2635179 (n : int) (m : int) (h1 : term789 n m) : term1139 n.
Proof. exact (conj (@lem2635178) (@lem2635035 n m h1)). Qed.
Lemma lem2635181 (x : real) (y : real) : term1140 x y.
Proof. exact (proj2 (@lem1988332 x y)). Qed.
Lemma lem2635182 (n : int) : term1141 n.
Proof. exact (@lem2635181 term31 (term94 n)). Qed.
Lemma lem2635183 (n : int) (m : int) (h1 : term789 n m) : term1142 n.
Proof. exact (@lem2635182 n (@lem2635179 n m h1)). Qed.
Lemma lem2635184 (n : int) : (term277 n) = (term94 n).
Proof. exact (@lem1982733 (term94 n)). Qed.
Lemma lem2635185 : real_gt = real_gt.
Proof. exact (eq_refl real_gt). Qed.
Lemma lem2635186 (n : int) : (term1143 n) = (term732 n).
Proof. exact (MK_COMB (@lem2635185) (@lem2635184 n)). Qed.
Lemma lem2635187 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635188 (n : int) : (term1142 n) = (term733 n).
Proof. exact (MK_COMB (@lem2635186 n) (@lem2635187)). Qed.
Lemma lem2635189 (n : int) (m : int) (h1 : term789 n m) : term733 n.
Proof. exact (EQ_MP (@lem2635188 n) (@lem2635183 n m h1)). Qed.
Lemma lem2635190 (n : int) (m : int) (h1 : term789 n m) : term1144 n.
Proof. exact (conj (@lem2635189 n m h1) (@lem2635115 n m h1)). Qed.
Lemma lem2635192 (x : real) (y : real) : term1145 x y.
Proof. exact (proj1 (@lem1988348 x y)). Qed.
Lemma lem2635193 (n : int) : term1146 n.
Proof. exact (@lem2635192 (term94 n) (term164 n)). Qed.
Lemma lem2635194 (n : int) (m : int) (h1 : term789 n m) : term1147 n.
Proof. exact (@lem2635193 n (@lem2635190 n m h1)). Qed.
Lemma lem2635195 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2635196 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2635198 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635199 : term31 = term99.
Proof. exact (@lem2635198 term32). Qed.
Lemma lem2635201 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635202 : term97 = term102.
Proof. exact (@lem2635201 term32). Qed.
Lemma lem2635203 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635204 : term103 = term104.
Proof. exact (MK_COMB (@lem2635203) (@lem2635202)). Qed.
Lemma lem2635205 : term105 = term106.
Proof. exact (MK_COMB (@lem2635204) (@lem2635199)). Qed.
Lemma lem2635206 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2635208 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635209 : term109 = term110.
Proof. exact (@lem2635208 (NUMERAL 0) term32). Qed.
Lemma lem2635210 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635211 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635212 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635211 h1) (fun h1 : term110 = True => @lem2635210)). Qed.
Lemma lem2635213 : term110 = True.
Proof. exact (EQ_MP (@lem2635212) (@lem2635210)). Qed.
Lemma lem2635214 : term109 = True.
Proof. exact (TRANS (@lem2635209) (@lem2635213)). Qed.
Lemma lem2635215 : True = term109.
Proof. exact (SYM (@lem2635214)). Qed.
Lemma lem2635216 : term109.
Proof. exact (EQ_MP (@lem2635215) (@lem0)). Qed.
Lemma lem2635217 : term112.
Proof. exact (@lem2635206 (@lem2635216)). Qed.
Lemma lem2635219 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635220 : term109 = term110.
Proof. exact (@lem2635219 (NUMERAL 0) term32). Qed.
Lemma lem2635221 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635222 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635223 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635222 h1) (fun h1 : term110 = True => @lem2635221)). Qed.
Lemma lem2635224 : term110 = True.
Proof. exact (EQ_MP (@lem2635223) (@lem2635221)). Qed.
Lemma lem2635225 : term109 = True.
Proof. exact (TRANS (@lem2635220) (@lem2635224)). Qed.
Lemma lem2635226 : True = term109.
Proof. exact (SYM (@lem2635225)). Qed.
Lemma lem2635227 : term109.
Proof. exact (EQ_MP (@lem2635226) (@lem0)). Qed.
Lemma lem2635228 : term113.
Proof. exact (@lem2635217 (@lem2635227)). Qed.
Lemma lem2635230 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635231 : term109 = term110.
Proof. exact (@lem2635230 (NUMERAL 0) term32). Qed.
Lemma lem2635232 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635233 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635234 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635233 h1) (fun h1 : term110 = True => @lem2635232)). Qed.
Lemma lem2635235 : term110 = True.
Proof. exact (EQ_MP (@lem2635234) (@lem2635232)). Qed.
Lemma lem2635236 : term109 = True.
Proof. exact (TRANS (@lem2635231) (@lem2635235)). Qed.
Lemma lem2635237 : True = term109.
Proof. exact (SYM (@lem2635236)). Qed.
Lemma lem2635238 : term109.
Proof. exact (EQ_MP (@lem2635237) (@lem0)). Qed.
Lemma lem2635239 : term114.
Proof. exact (@lem2635228 (@lem2635238)). Qed.
Lemma lem2635241 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635242 : term117 = term118.
Proof. exact (@lem2635241 term32 term32). Qed.
Lemma lem2635243 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635244 : term120 = term32.
Proof. exact (EQ_MP (@lem2635243) (@lem940073)). Qed.
Lemma lem2635245 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635246 : term118 = term31.
Proof. exact (MK_COMB (@lem2635245) (@lem2635244)). Qed.
Lemma lem2635247 : term117 = term31.
Proof. exact (TRANS (@lem2635242) (@lem2635246)). Qed.
Lemma lem2635249 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635250 : term123 = term124.
Proof. exact (@lem2635249 term32 term32). Qed.
Lemma lem2635251 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635252 : term120 = term32.
Proof. exact (EQ_MP (@lem2635251) (@lem940073)). Qed.
Lemma lem2635253 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635254 : term118 = term31.
Proof. exact (MK_COMB (@lem2635253) (@lem2635252)). Qed.
Lemma lem2635255 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635256 : term124 = term97.
Proof. exact (MK_COMB (@lem2635255) (@lem2635254)). Qed.
Lemma lem2635257 : term123 = term97.
Proof. exact (TRANS (@lem2635250) (@lem2635256)). Qed.
Lemma lem2635258 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635259 : term125 = term103.
Proof. exact (MK_COMB (@lem2635258) (@lem2635257)). Qed.
Lemma lem2635260 : term126 = term105.
Proof. exact (MK_COMB (@lem2635259) (@lem2635247)). Qed.
Lemma lem2635262 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2635263 : term105 = term38.
Proof. exact (@lem2635262 term32). Qed.
Lemma lem2635264 : term126 = term38.
Proof. exact (TRANS (@lem2635260) (@lem2635263)). Qed.
Lemma lem2635265 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635266 : term128 = term129.
Proof. exact (MK_COMB (@lem2635265) (@lem2635264)). Qed.
Lemma lem2635267 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2635268 : term130 = term131.
Proof. exact (MK_COMB (@lem2635266) (@lem2635267)). Qed.
Lemma lem2635270 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635271 : term131 = term38.
Proof. exact (@lem2635270 term32). Qed.
Lemma lem2635272 : term130 = term38.
Proof. exact (TRANS (@lem2635268) (@lem2635271)). Qed.
Lemma lem2635274 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635275 : term117 = term118.
Proof. exact (@lem2635274 term32 term32). Qed.
Lemma lem2635276 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635277 : term120 = term32.
Proof. exact (EQ_MP (@lem2635276) (@lem940073)). Qed.
Lemma lem2635278 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635279 : term118 = term31.
Proof. exact (MK_COMB (@lem2635278) (@lem2635277)). Qed.
Lemma lem2635280 : term117 = term31.
Proof. exact (TRANS (@lem2635275) (@lem2635279)). Qed.
Lemma lem2635281 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2635282 : term133 = term131.
Proof. exact (MK_COMB (@lem2635281) (@lem2635280)). Qed.
Lemma lem2635284 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635285 : term131 = term38.
Proof. exact (@lem2635284 term32). Qed.
Lemma lem2635286 : term133 = term38.
Proof. exact (TRANS (@lem2635282) (@lem2635285)). Qed.
Lemma lem2635287 : term38 = term133.
Proof. exact (SYM (@lem2635286)). Qed.
Lemma lem2635288 : term130 = term133.
Proof. exact (TRANS (@lem2635272) (@lem2635287)). Qed.
Lemma lem2635289 : term106 = term134.
Proof. exact (@lem2635239 (@lem2635288)). Qed.
Lemma lem2635290 : term105 = term134.
Proof. exact (TRANS (@lem2635205) (@lem2635289)). Qed.
Lemma lem2635292 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2635293 : term134 = term38.
Proof. exact (@lem2635292 term38). Qed.
Lemma lem2635294 : term105 = term38.
Proof. exact (TRANS (@lem2635290) (@lem2635293)). Qed.
Lemma lem2635295 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635296 : term136 = term129.
Proof. exact (MK_COMB (@lem2635295) (@lem2635294)). Qed.
Lemma lem2635297 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2635298 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2635296) (@lem2635297 n)). Qed.
Lemma lem2635299 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2635196 n) (@lem2635298 n)). Qed.
Lemma lem2635300 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2635301 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2635299 n) (@lem2635300 n)). Qed.
Lemma lem2635302 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635303 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2635302) (@lem2635301 n)). Qed.
Lemma lem2635304 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2635305 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2635303 n) (@lem2635304)). Qed.
Lemma lem2635306 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2635195 n) (@lem2635305 n)). Qed.
Lemma lem2635307 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2635308 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2635306 n) (@lem2635307)). Qed.
Lemma lem2635309 : real_gt = real_gt.
Proof. exact (eq_refl real_gt). Qed.
Lemma lem2635310 (n : int) : (term1148 n) = term1149.
Proof. exact (MK_COMB (@lem2635309) (@lem2635308 n)). Qed.
Lemma lem2635311 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635312 (n : int) : (term1147 n) = term1150.
Proof. exact (MK_COMB (@lem2635310 n) (@lem2635311)). Qed.
Lemma lem2635313 (n : int) (m : int) (h1 : term789 n m) : term1150.
Proof. exact (EQ_MP (@lem2635312 n) (@lem2635194 n m h1)). Qed.
Lemma lem2635315 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635316 : term1150 = term1151.
Proof. exact (@lem2635315 term38 term97). Qed.
Lemma lem2635318 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635319 : term97 = term102.
Proof. exact (@lem2635318 term32). Qed.
Lemma lem2635321 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635322 : term38 = term134.
Proof. exact (@lem2635321 (NUMERAL 0)). Qed.
Lemma lem2635323 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635324 : term230 = term231.
Proof. exact (MK_COMB (@lem2635323) (@lem2635322)). Qed.
Lemma lem2635325 : term1151 = term1152.
Proof. exact (MK_COMB (@lem2635324) (@lem2635319)). Qed.
Lemma lem2635326 : term1153.
Proof. exact (@lem1980255 term38 term31 term97 term31). Qed.
Lemma lem2635328 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635329 : term109 = term110.
Proof. exact (@lem2635328 (NUMERAL 0) term32). Qed.
Lemma lem2635330 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635331 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635332 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635331 h1) (fun h1 : term110 = True => @lem2635330)). Qed.
Lemma lem2635333 : term110 = True.
Proof. exact (EQ_MP (@lem2635332) (@lem2635330)). Qed.
Lemma lem2635334 : term109 = True.
Proof. exact (TRANS (@lem2635329) (@lem2635333)). Qed.
Lemma lem2635335 : True = term109.
Proof. exact (SYM (@lem2635334)). Qed.
Lemma lem2635336 : term109.
Proof. exact (EQ_MP (@lem2635335) (@lem0)). Qed.
Lemma lem2635337 : term1154.
Proof. exact (@lem2635326 (@lem2635336)). Qed.
Lemma lem2635339 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635340 : term109 = term110.
Proof. exact (@lem2635339 (NUMERAL 0) term32). Qed.
Lemma lem2635341 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635342 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635343 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635342 h1) (fun h1 : term110 = True => @lem2635341)). Qed.
Lemma lem2635344 : term110 = True.
Proof. exact (EQ_MP (@lem2635343) (@lem2635341)). Qed.
Lemma lem2635345 : term109 = True.
Proof. exact (TRANS (@lem2635340) (@lem2635344)). Qed.
Lemma lem2635346 : True = term109.
Proof. exact (SYM (@lem2635345)). Qed.
Lemma lem2635347 : term109.
Proof. exact (EQ_MP (@lem2635346) (@lem0)). Qed.
Lemma lem2635348 : term1152 = term1155.
Proof. exact (@lem2635337 (@lem2635347)). Qed.
Lemma lem2635350 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635351 : term123 = term124.
Proof. exact (@lem2635350 term32 term32). Qed.
Lemma lem2635352 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635353 : term120 = term32.
Proof. exact (EQ_MP (@lem2635352) (@lem940073)). Qed.
Lemma lem2635354 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635355 : term118 = term31.
Proof. exact (MK_COMB (@lem2635354) (@lem2635353)). Qed.
Lemma lem2635356 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635357 : term124 = term97.
Proof. exact (MK_COMB (@lem2635356) (@lem2635355)). Qed.
Lemma lem2635358 : term123 = term97.
Proof. exact (TRANS (@lem2635351) (@lem2635357)). Qed.
Lemma lem2635360 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635361 : term131 = term38.
Proof. exact (@lem2635360 term32). Qed.
Lemma lem2635362 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635363 : term236 = term230.
Proof. exact (MK_COMB (@lem2635362) (@lem2635361)). Qed.
Lemma lem2635364 : term1155 = term1151.
Proof. exact (MK_COMB (@lem2635363) (@lem2635358)). Qed.
Lemma lem2635366 (m : nat) (n : nat) : (term1156 m n) = False.
Proof. exact (proj1 (@lem1365720 m n)). Qed.
Lemma lem2635367 : term1151 = False.
Proof. exact (@lem2635366 (NUMERAL 0) term32). Qed.
Lemma lem2635368 : term1155 = False.
Proof. exact (TRANS (@lem2635364) (@lem2635367)). Qed.
Lemma lem2635369 : term1152 = False.
Proof. exact (TRANS (@lem2635348) (@lem2635368)). Qed.
Lemma lem2635370 : term1151 = False.
Proof. exact (TRANS (@lem2635325) (@lem2635369)). Qed.
Lemma lem2635371 : term1150 = False.
Proof. exact (TRANS (@lem2635316) (@lem2635370)). Qed.
Lemma lem2635372 (n : int) (m : int) (h1 : term789 n m) : False.
Proof. exact (EQ_MP (@lem2635371) (@lem2635313 n m h1)). Qed.
Lemma lem2635373 (n : int) (m : int) (h1 : term791 n m) : False.
Proof. exact (or_elim (@lem2634680 n m h1) (fun h0 : term787 n m => @lem2635032 n m h0) (fun h0 : term789 n m => @lem2635372 n m h0)). Qed.
Lemma lem2635374 (n : int) (m : int) (h1 : term793 n m) : False.
Proof. exact (or_elim (@lem2634392 n m h1) (fun h0 : term659 n m => @lem2634679 n m h0) (fun h0 : term791 n m => @lem2635373 n m h0)). Qed.
Lemma lem2635375 (n : int) (m : int) (h1 : term659 n m) : term659 n m.
Proof. exact (h1). Qed.
Lemma lem2635376 (n : int) (m : int) (h1 : term659 n m) : term556 n m.
Proof. exact (proj2 (@lem2635375 n m h1)). Qed.
Lemma lem2635377 (n : int) (m : int) (h1 : term659 n m) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2635375 n m h1)). Qed.
Lemma lem2635379 (n : int) (m : int) (h1 : term659 n m) : term167 n.
Proof. exact (proj1 (@lem2635376 n m h1)). Qed.
Lemma lem2635381 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635382 : term229 = term109.
Proof. exact (@lem2635381 term38 term31). Qed.
Lemma lem2635384 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635385 : term31 = term99.
Proof. exact (@lem2635384 term32). Qed.
Lemma lem2635387 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635388 : term38 = term134.
Proof. exact (@lem2635387 (NUMERAL 0)). Qed.
Lemma lem2635389 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635390 : term230 = term231.
Proof. exact (MK_COMB (@lem2635389) (@lem2635388)). Qed.
Lemma lem2635391 : term109 = term232.
Proof. exact (MK_COMB (@lem2635390) (@lem2635385)). Qed.
Lemma lem2635392 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2635394 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635395 : term109 = term110.
Proof. exact (@lem2635394 (NUMERAL 0) term32). Qed.
Lemma lem2635396 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635397 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635398 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635397 h1) (fun h1 : term110 = True => @lem2635396)). Qed.
Lemma lem2635399 : term110 = True.
Proof. exact (EQ_MP (@lem2635398) (@lem2635396)). Qed.
Lemma lem2635400 : term109 = True.
Proof. exact (TRANS (@lem2635395) (@lem2635399)). Qed.
Lemma lem2635401 : True = term109.
Proof. exact (SYM (@lem2635400)). Qed.
Lemma lem2635402 : term109.
Proof. exact (EQ_MP (@lem2635401) (@lem0)). Qed.
Lemma lem2635403 : term234.
Proof. exact (@lem2635392 (@lem2635402)). Qed.
Lemma lem2635405 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635406 : term109 = term110.
Proof. exact (@lem2635405 (NUMERAL 0) term32). Qed.
Lemma lem2635407 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635408 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635409 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635408 h1) (fun h1 : term110 = True => @lem2635407)). Qed.
Lemma lem2635410 : term110 = True.
Proof. exact (EQ_MP (@lem2635409) (@lem2635407)). Qed.
Lemma lem2635411 : term109 = True.
Proof. exact (TRANS (@lem2635406) (@lem2635410)). Qed.
Lemma lem2635412 : True = term109.
Proof. exact (SYM (@lem2635411)). Qed.
Lemma lem2635413 : term109.
Proof. exact (EQ_MP (@lem2635412) (@lem0)). Qed.
Lemma lem2635414 : term232 = term235.
Proof. exact (@lem2635403 (@lem2635413)). Qed.
Lemma lem2635416 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635417 : term117 = term118.
Proof. exact (@lem2635416 term32 term32). Qed.
Lemma lem2635418 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635419 : term120 = term32.
Proof. exact (EQ_MP (@lem2635418) (@lem940073)). Qed.
Lemma lem2635420 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635421 : term118 = term31.
Proof. exact (MK_COMB (@lem2635420) (@lem2635419)). Qed.
Lemma lem2635422 : term117 = term31.
Proof. exact (TRANS (@lem2635417) (@lem2635421)). Qed.
Lemma lem2635424 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635425 : term131 = term38.
Proof. exact (@lem2635424 term32). Qed.
Lemma lem2635426 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635427 : term236 = term230.
Proof. exact (MK_COMB (@lem2635426) (@lem2635425)). Qed.
Lemma lem2635428 : term235 = term109.
Proof. exact (MK_COMB (@lem2635427) (@lem2635422)). Qed.
Lemma lem2635430 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635431 : term109 = term110.
Proof. exact (@lem2635430 (NUMERAL 0) term32). Qed.
Lemma lem2635432 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635433 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635434 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635433 h1) (fun h1 : term110 = True => @lem2635432)). Qed.
Lemma lem2635435 : term110 = True.
Proof. exact (EQ_MP (@lem2635434) (@lem2635432)). Qed.
Lemma lem2635436 : term109 = True.
Proof. exact (TRANS (@lem2635431) (@lem2635435)). Qed.
Lemma lem2635437 : term235 = True.
Proof. exact (TRANS (@lem2635428) (@lem2635436)). Qed.
Lemma lem2635438 : term232 = True.
Proof. exact (TRANS (@lem2635414) (@lem2635437)). Qed.
Lemma lem2635439 : term109 = True.
Proof. exact (TRANS (@lem2635391) (@lem2635438)). Qed.
Lemma lem2635440 : term229 = True.
Proof. exact (TRANS (@lem2635382) (@lem2635439)). Qed.
Lemma lem2635441 : True = term229.
Proof. exact (SYM (@lem2635440)). Qed.
Lemma lem2635442 : term229.
Proof. exact (EQ_MP (@lem2635441) (@lem0)). Qed.
Lemma lem2635443 (n : int) (m : int) (h1 : term659 n m) : term271 n.
Proof. exact (conj (@lem2635442) (@lem2635379 n m h1)). Qed.
Lemma lem2635445 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2635446 (n : int) : term272 n.
Proof. exact (@lem2635445 term31 (term164 n)). Qed.
Lemma lem2635447 (n : int) (m : int) (h1 : term659 n m) : term273 n.
Proof. exact (@lem2635446 n (@lem2635443 n m h1)). Qed.
Lemma lem2635448 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2635449 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2635450 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2635449) (@lem2635448 n)). Qed.
Lemma lem2635451 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635452 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2635450 n) (@lem2635451)). Qed.
Lemma lem2635453 (n : int) (m : int) (h1 : term659 n m) : term167 n.
Proof. exact (EQ_MP (@lem2635452 n) (@lem2635447 n m h1)). Qed.
Lemma lem2635455 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2635456 (n : int) : term287 n.
Proof. exact (@lem2635455 (real_of_int n)). Qed.
Lemma lem2635457 (n : int) (m : int) (h1 : term659 n m) : term288 n.
Proof. exact (@lem2635456 n (@lem2635377 n m h1)). Qed.
Lemma lem2635458 (n : int) (m : int) (h1 : term659 n m) : term289 n.
Proof. exact (@lem2635457 n m h1 term97). Qed.
Lemma lem2635459 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2635466 (n : int) (m : int) (h1 : term659 n m) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2635459 n) (@lem2635458 n m h1)). Qed.
Lemma lem2635467 (n : int) (m : int) (h1 : term659 n m) : term270 n.
Proof. exact (conj (@lem2635466 n m h1) (@lem2635453 n m h1)). Qed.
Lemma lem2635469 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2635470 (n : int) : term279 n.
Proof. exact (@lem2635469 (term94 n) (term164 n)). Qed.
Lemma lem2635471 (n : int) (m : int) (h1 : term659 n m) : term280 n.
Proof. exact (@lem2635470 n (@lem2635467 n m h1)). Qed.
Lemma lem2635472 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2635473 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2635475 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635476 : term31 = term99.
Proof. exact (@lem2635475 term32). Qed.
Lemma lem2635478 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635479 : term97 = term102.
Proof. exact (@lem2635478 term32). Qed.
Lemma lem2635480 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635481 : term103 = term104.
Proof. exact (MK_COMB (@lem2635480) (@lem2635479)). Qed.
Lemma lem2635482 : term105 = term106.
Proof. exact (MK_COMB (@lem2635481) (@lem2635476)). Qed.
Lemma lem2635483 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2635485 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635486 : term109 = term110.
Proof. exact (@lem2635485 (NUMERAL 0) term32). Qed.
Lemma lem2635487 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635488 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635489 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635488 h1) (fun h1 : term110 = True => @lem2635487)). Qed.
Lemma lem2635490 : term110 = True.
Proof. exact (EQ_MP (@lem2635489) (@lem2635487)). Qed.
Lemma lem2635491 : term109 = True.
Proof. exact (TRANS (@lem2635486) (@lem2635490)). Qed.
Lemma lem2635492 : True = term109.
Proof. exact (SYM (@lem2635491)). Qed.
Lemma lem2635493 : term109.
Proof. exact (EQ_MP (@lem2635492) (@lem0)). Qed.
Lemma lem2635494 : term112.
Proof. exact (@lem2635483 (@lem2635493)). Qed.
Lemma lem2635496 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635497 : term109 = term110.
Proof. exact (@lem2635496 (NUMERAL 0) term32). Qed.
Lemma lem2635498 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635499 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635500 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635499 h1) (fun h1 : term110 = True => @lem2635498)). Qed.
Lemma lem2635501 : term110 = True.
Proof. exact (EQ_MP (@lem2635500) (@lem2635498)). Qed.
Lemma lem2635502 : term109 = True.
Proof. exact (TRANS (@lem2635497) (@lem2635501)). Qed.
Lemma lem2635503 : True = term109.
Proof. exact (SYM (@lem2635502)). Qed.
Lemma lem2635504 : term109.
Proof. exact (EQ_MP (@lem2635503) (@lem0)). Qed.
Lemma lem2635505 : term113.
Proof. exact (@lem2635494 (@lem2635504)). Qed.
Lemma lem2635507 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635508 : term109 = term110.
Proof. exact (@lem2635507 (NUMERAL 0) term32). Qed.
Lemma lem2635509 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635510 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635511 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635510 h1) (fun h1 : term110 = True => @lem2635509)). Qed.
Lemma lem2635512 : term110 = True.
Proof. exact (EQ_MP (@lem2635511) (@lem2635509)). Qed.
Lemma lem2635513 : term109 = True.
Proof. exact (TRANS (@lem2635508) (@lem2635512)). Qed.
Lemma lem2635514 : True = term109.
Proof. exact (SYM (@lem2635513)). Qed.
Lemma lem2635515 : term109.
Proof. exact (EQ_MP (@lem2635514) (@lem0)). Qed.
Lemma lem2635516 : term114.
Proof. exact (@lem2635505 (@lem2635515)). Qed.
Lemma lem2635518 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635519 : term117 = term118.
Proof. exact (@lem2635518 term32 term32). Qed.
Lemma lem2635520 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635521 : term120 = term32.
Proof. exact (EQ_MP (@lem2635520) (@lem940073)). Qed.
Lemma lem2635522 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635523 : term118 = term31.
Proof. exact (MK_COMB (@lem2635522) (@lem2635521)). Qed.
Lemma lem2635524 : term117 = term31.
Proof. exact (TRANS (@lem2635519) (@lem2635523)). Qed.
Lemma lem2635526 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635527 : term123 = term124.
Proof. exact (@lem2635526 term32 term32). Qed.
Lemma lem2635528 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635529 : term120 = term32.
Proof. exact (EQ_MP (@lem2635528) (@lem940073)). Qed.
Lemma lem2635530 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635531 : term118 = term31.
Proof. exact (MK_COMB (@lem2635530) (@lem2635529)). Qed.
Lemma lem2635532 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635533 : term124 = term97.
Proof. exact (MK_COMB (@lem2635532) (@lem2635531)). Qed.
Lemma lem2635534 : term123 = term97.
Proof. exact (TRANS (@lem2635527) (@lem2635533)). Qed.
Lemma lem2635535 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635536 : term125 = term103.
Proof. exact (MK_COMB (@lem2635535) (@lem2635534)). Qed.
Lemma lem2635537 : term126 = term105.
Proof. exact (MK_COMB (@lem2635536) (@lem2635524)). Qed.
Lemma lem2635539 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2635540 : term105 = term38.
Proof. exact (@lem2635539 term32). Qed.
Lemma lem2635541 : term126 = term38.
Proof. exact (TRANS (@lem2635537) (@lem2635540)). Qed.
Lemma lem2635542 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635543 : term128 = term129.
Proof. exact (MK_COMB (@lem2635542) (@lem2635541)). Qed.
Lemma lem2635544 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2635545 : term130 = term131.
Proof. exact (MK_COMB (@lem2635543) (@lem2635544)). Qed.
Lemma lem2635547 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635548 : term131 = term38.
Proof. exact (@lem2635547 term32). Qed.
Lemma lem2635549 : term130 = term38.
Proof. exact (TRANS (@lem2635545) (@lem2635548)). Qed.
Lemma lem2635551 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635552 : term117 = term118.
Proof. exact (@lem2635551 term32 term32). Qed.
Lemma lem2635553 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635554 : term120 = term32.
Proof. exact (EQ_MP (@lem2635553) (@lem940073)). Qed.
Lemma lem2635555 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635556 : term118 = term31.
Proof. exact (MK_COMB (@lem2635555) (@lem2635554)). Qed.
Lemma lem2635557 : term117 = term31.
Proof. exact (TRANS (@lem2635552) (@lem2635556)). Qed.
Lemma lem2635558 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2635559 : term133 = term131.
Proof. exact (MK_COMB (@lem2635558) (@lem2635557)). Qed.
Lemma lem2635561 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635562 : term131 = term38.
Proof. exact (@lem2635561 term32). Qed.
Lemma lem2635563 : term133 = term38.
Proof. exact (TRANS (@lem2635559) (@lem2635562)). Qed.
Lemma lem2635564 : term38 = term133.
Proof. exact (SYM (@lem2635563)). Qed.
Lemma lem2635565 : term130 = term133.
Proof. exact (TRANS (@lem2635549) (@lem2635564)). Qed.
Lemma lem2635566 : term106 = term134.
Proof. exact (@lem2635516 (@lem2635565)). Qed.
Lemma lem2635567 : term105 = term134.
Proof. exact (TRANS (@lem2635482) (@lem2635566)). Qed.
Lemma lem2635569 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2635570 : term134 = term38.
Proof. exact (@lem2635569 term38). Qed.
Lemma lem2635571 : term105 = term38.
Proof. exact (TRANS (@lem2635567) (@lem2635570)). Qed.
Lemma lem2635572 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635573 : term136 = term129.
Proof. exact (MK_COMB (@lem2635572) (@lem2635571)). Qed.
Lemma lem2635574 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2635575 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2635573) (@lem2635574 n)). Qed.
Lemma lem2635576 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2635473 n) (@lem2635575 n)). Qed.
Lemma lem2635577 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2635578 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2635576 n) (@lem2635577 n)). Qed.
Lemma lem2635579 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635580 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2635579) (@lem2635578 n)). Qed.
Lemma lem2635581 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2635582 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2635580 n) (@lem2635581)). Qed.
Lemma lem2635583 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2635472 n) (@lem2635582 n)). Qed.
Lemma lem2635584 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2635585 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2635583 n) (@lem2635584)). Qed.
Lemma lem2635586 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2635587 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2635586) (@lem2635585 n)). Qed.
Lemma lem2635588 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635589 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2635587 n) (@lem2635588)). Qed.
Lemma lem2635590 (n : int) (m : int) (h1 : term659 n m) : term257.
Proof. exact (EQ_MP (@lem2635589 n) (@lem2635471 n m h1)). Qed.
Lemma lem2635592 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2635593 : term257 = term258.
Proof. exact (@lem2635592 term38 term97). Qed.
Lemma lem2635595 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635596 : term97 = term102.
Proof. exact (@lem2635595 term32). Qed.
Lemma lem2635598 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635599 : term38 = term134.
Proof. exact (@lem2635598 (NUMERAL 0)). Qed.
Lemma lem2635600 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2635601 : term259 = term260.
Proof. exact (MK_COMB (@lem2635600) (@lem2635599)). Qed.
Lemma lem2635602 : term258 = term261.
Proof. exact (MK_COMB (@lem2635601) (@lem2635596)). Qed.
Lemma lem2635603 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2635605 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635606 : term109 = term110.
Proof. exact (@lem2635605 (NUMERAL 0) term32). Qed.
Lemma lem2635607 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635608 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635609 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635608 h1) (fun h1 : term110 = True => @lem2635607)). Qed.
Lemma lem2635610 : term110 = True.
Proof. exact (EQ_MP (@lem2635609) (@lem2635607)). Qed.
Lemma lem2635611 : term109 = True.
Proof. exact (TRANS (@lem2635606) (@lem2635610)). Qed.
Lemma lem2635612 : True = term109.
Proof. exact (SYM (@lem2635611)). Qed.
Lemma lem2635613 : term109.
Proof. exact (EQ_MP (@lem2635612) (@lem0)). Qed.
Lemma lem2635614 : term263.
Proof. exact (@lem2635603 (@lem2635613)). Qed.
Lemma lem2635616 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635617 : term109 = term110.
Proof. exact (@lem2635616 (NUMERAL 0) term32). Qed.
Lemma lem2635618 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635619 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635620 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635619 h1) (fun h1 : term110 = True => @lem2635618)). Qed.
Lemma lem2635621 : term110 = True.
Proof. exact (EQ_MP (@lem2635620) (@lem2635618)). Qed.
Lemma lem2635622 : term109 = True.
Proof. exact (TRANS (@lem2635617) (@lem2635621)). Qed.
Lemma lem2635623 : True = term109.
Proof. exact (SYM (@lem2635622)). Qed.
Lemma lem2635624 : term109.
Proof. exact (EQ_MP (@lem2635623) (@lem0)). Qed.
Lemma lem2635625 : term261 = term264.
Proof. exact (@lem2635614 (@lem2635624)). Qed.
Lemma lem2635627 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635628 : term123 = term124.
Proof. exact (@lem2635627 term32 term32). Qed.
Lemma lem2635629 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635630 : term120 = term32.
Proof. exact (EQ_MP (@lem2635629) (@lem940073)). Qed.
Lemma lem2635631 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635632 : term118 = term31.
Proof. exact (MK_COMB (@lem2635631) (@lem2635630)). Qed.
Lemma lem2635633 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635634 : term124 = term97.
Proof. exact (MK_COMB (@lem2635633) (@lem2635632)). Qed.
Lemma lem2635635 : term123 = term97.
Proof. exact (TRANS (@lem2635628) (@lem2635634)). Qed.
Lemma lem2635637 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635638 : term131 = term38.
Proof. exact (@lem2635637 term32). Qed.
Lemma lem2635639 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2635640 : term265 = term259.
Proof. exact (MK_COMB (@lem2635639) (@lem2635638)). Qed.
Lemma lem2635641 : term264 = term258.
Proof. exact (MK_COMB (@lem2635640) (@lem2635635)). Qed.
Lemma lem2635643 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2635644 : term258 = term268.
Proof. exact (@lem2635643 (NUMERAL 0) term32). Qed.
Lemma lem2635645 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635646 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2635647 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635646 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2635645)). Qed.
Lemma lem2635648 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2635647) (@lem2635645)). Qed.
Lemma lem2635649 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2635650 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2635651 : term269 = (and True).
Proof. exact (MK_COMB (@lem2635650) (@lem2635649)). Qed.
Lemma lem2635652 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2635651) (@lem2635648)). Qed.
Lemma lem2635654 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2635655 : term268 = False.
Proof. exact (TRANS (@lem2635652) (@lem2635654)). Qed.
Lemma lem2635656 : term258 = False.
Proof. exact (TRANS (@lem2635644) (@lem2635655)). Qed.
Lemma lem2635657 : term264 = False.
Proof. exact (TRANS (@lem2635641) (@lem2635656)). Qed.
Lemma lem2635658 : term261 = False.
Proof. exact (TRANS (@lem2635625) (@lem2635657)). Qed.
Lemma lem2635659 : term258 = False.
Proof. exact (TRANS (@lem2635602) (@lem2635658)). Qed.
Lemma lem2635660 : term257 = False.
Proof. exact (TRANS (@lem2635593) (@lem2635659)). Qed.
Lemma lem2635661 (n : int) (m : int) (h1 : term659 n m) : False.
Proof. exact (EQ_MP (@lem2635660) (@lem2635590 n m h1)). Qed.
Lemma lem2635662 (n : int) (m : int) (h1 : term795 n m) : False.
Proof. exact (or_elim (@lem2634391 n m h1) (fun h0 : term793 n m => @lem2635374 n m h0) (fun h0 : term659 n m => @lem2635661 n m h0)). Qed.
Lemma lem2635663 (n : int) (m : int) (h1 : term797 n m) : False.
Proof. exact (or_elim (@lem2633106 n m h1) (fun h0 : term762 n m => @lem2634390 n m h0) (fun h0 : term795 n m => @lem2635662 n m h0)). Qed.
Lemma lem2635664 (m : int) (n : int) (h1 : term884 m n) : term884 m n.
Proof. exact (h1). Qed.
Lemma lem2635665 (m : int) (n : int) (h1 : term852 m n) : term852 m n.
Proof. exact (h1). Qed.
Lemma lem2635666 (m : int) (n : int) (h1 : term850 m n) : term850 m n.
Proof. exact (h1). Qed.
Lemma lem2635667 (m : int) (n : int) (h1 : term810 m n) : term810 m n.
Proof. exact (h1). Qed.
Lemma lem2635668 (m : int) (n : int) (h1 : term810 m n) : term808 m n.
Proof. exact (proj2 (@lem2635667 m n h1)). Qed.
Lemma lem2635669 (m : int) (n : int) (h1 : term810 m n) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2635667 m n h1)). Qed.
Lemma lem2635671 (m : int) (n : int) (h1 : term810 m n) : term158 n.
Proof. exact (proj1 (@lem2635668 m n h1)). Qed.
Lemma lem2635675 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635676 : term229 = term109.
Proof. exact (@lem2635675 term38 term31). Qed.
Lemma lem2635678 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635679 : term31 = term99.
Proof. exact (@lem2635678 term32). Qed.
Lemma lem2635681 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635682 : term38 = term134.
Proof. exact (@lem2635681 (NUMERAL 0)). Qed.
Lemma lem2635683 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635684 : term230 = term231.
Proof. exact (MK_COMB (@lem2635683) (@lem2635682)). Qed.
Lemma lem2635685 : term109 = term232.
Proof. exact (MK_COMB (@lem2635684) (@lem2635679)). Qed.
Lemma lem2635686 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2635688 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635689 : term109 = term110.
Proof. exact (@lem2635688 (NUMERAL 0) term32). Qed.
Lemma lem2635690 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635691 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635692 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635691 h1) (fun h1 : term110 = True => @lem2635690)). Qed.
Lemma lem2635693 : term110 = True.
Proof. exact (EQ_MP (@lem2635692) (@lem2635690)). Qed.
Lemma lem2635694 : term109 = True.
Proof. exact (TRANS (@lem2635689) (@lem2635693)). Qed.
Lemma lem2635695 : True = term109.
Proof. exact (SYM (@lem2635694)). Qed.
Lemma lem2635696 : term109.
Proof. exact (EQ_MP (@lem2635695) (@lem0)). Qed.
Lemma lem2635697 : term234.
Proof. exact (@lem2635686 (@lem2635696)). Qed.
Lemma lem2635699 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635700 : term109 = term110.
Proof. exact (@lem2635699 (NUMERAL 0) term32). Qed.
Lemma lem2635701 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635702 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635703 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635702 h1) (fun h1 : term110 = True => @lem2635701)). Qed.
Lemma lem2635704 : term110 = True.
Proof. exact (EQ_MP (@lem2635703) (@lem2635701)). Qed.
Lemma lem2635705 : term109 = True.
Proof. exact (TRANS (@lem2635700) (@lem2635704)). Qed.
Lemma lem2635706 : True = term109.
Proof. exact (SYM (@lem2635705)). Qed.
Lemma lem2635707 : term109.
Proof. exact (EQ_MP (@lem2635706) (@lem0)). Qed.
Lemma lem2635708 : term232 = term235.
Proof. exact (@lem2635697 (@lem2635707)). Qed.
Lemma lem2635710 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635711 : term117 = term118.
Proof. exact (@lem2635710 term32 term32). Qed.
Lemma lem2635712 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635713 : term120 = term32.
Proof. exact (EQ_MP (@lem2635712) (@lem940073)). Qed.
Lemma lem2635714 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635715 : term118 = term31.
Proof. exact (MK_COMB (@lem2635714) (@lem2635713)). Qed.
Lemma lem2635716 : term117 = term31.
Proof. exact (TRANS (@lem2635711) (@lem2635715)). Qed.
Lemma lem2635718 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635719 : term131 = term38.
Proof. exact (@lem2635718 term32). Qed.
Lemma lem2635720 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635721 : term236 = term230.
Proof. exact (MK_COMB (@lem2635720) (@lem2635719)). Qed.
Lemma lem2635722 : term235 = term109.
Proof. exact (MK_COMB (@lem2635721) (@lem2635716)). Qed.
Lemma lem2635724 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635725 : term109 = term110.
Proof. exact (@lem2635724 (NUMERAL 0) term32). Qed.
Lemma lem2635726 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635727 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635728 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635727 h1) (fun h1 : term110 = True => @lem2635726)). Qed.
Lemma lem2635729 : term110 = True.
Proof. exact (EQ_MP (@lem2635728) (@lem2635726)). Qed.
Lemma lem2635730 : term109 = True.
Proof. exact (TRANS (@lem2635725) (@lem2635729)). Qed.
Lemma lem2635731 : term235 = True.
Proof. exact (TRANS (@lem2635722) (@lem2635730)). Qed.
Lemma lem2635732 : term232 = True.
Proof. exact (TRANS (@lem2635708) (@lem2635731)). Qed.
Lemma lem2635733 : term109 = True.
Proof. exact (TRANS (@lem2635685) (@lem2635732)). Qed.
Lemma lem2635734 : term229 = True.
Proof. exact (TRANS (@lem2635676) (@lem2635733)). Qed.
Lemma lem2635735 : True = term229.
Proof. exact (SYM (@lem2635734)). Qed.
Lemma lem2635736 : term229.
Proof. exact (EQ_MP (@lem2635735) (@lem0)). Qed.
Lemma lem2635737 (m : int) (n : int) (h1 : term810 m n) : term237 n.
Proof. exact (conj (@lem2635736) (@lem2635671 m n h1)). Qed.
Lemma lem2635739 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2635740 (n : int) : term239 n.
Proof. exact (@lem2635739 term31 (term154 n)). Qed.
Lemma lem2635741 (m : int) (n : int) (h1 : term810 m n) : term240 n.
Proof. exact (@lem2635740 n (@lem2635737 m n h1)). Qed.
Lemma lem2635742 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2635743 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2635744 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2635743) (@lem2635742 n)). Qed.
Lemma lem2635745 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635746 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2635744 n) (@lem2635745)). Qed.
Lemma lem2635747 (m : int) (n : int) (h1 : term810 m n) : term158 n.
Proof. exact (EQ_MP (@lem2635746 n) (@lem2635741 m n h1)). Qed.
Lemma lem2635749 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2635750 (n : int) : term287 n.
Proof. exact (@lem2635749 (real_of_int n)). Qed.
Lemma lem2635751 (m : int) (n : int) (h1 : term810 m n) : term288 n.
Proof. exact (@lem2635750 n (@lem2635669 m n h1)). Qed.
Lemma lem2635752 (m : int) (n : int) (h1 : term810 m n) : term291 n.
Proof. exact (@lem2635751 m n h1 term31). Qed.
Lemma lem2635753 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2635754 (m : int) (n : int) (h1 : term810 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2635753 n) (@lem2635752 m n h1)). Qed.
Lemma lem2635755 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2635756 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2635757 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2635756) (@lem2635755 n)). Qed.
Lemma lem2635758 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635759 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2635757 n) (@lem2635758)). Qed.
Lemma lem2635760 (m : int) (n : int) (h1 : term810 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2635759 n) (@lem2635754 m n h1)). Qed.
Lemma lem2635761 (m : int) (n : int) (h1 : term810 m n) : term248 n.
Proof. exact (conj (@lem2635760 m n h1) (@lem2635747 m n h1)). Qed.
Lemma lem2635763 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2635764 (n : int) : term250 n.
Proof. exact (@lem2635763 (real_of_int n) (term154 n)). Qed.
Lemma lem2635765 (m : int) (n : int) (h1 : term810 m n) : term251 n.
Proof. exact (@lem2635764 n (@lem2635761 m n h1)). Qed.
Lemma lem2635766 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2635767 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2635769 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635770 : term31 = term99.
Proof. exact (@lem2635769 term32). Qed.
Lemma lem2635772 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635773 : term97 = term102.
Proof. exact (@lem2635772 term32). Qed.
Lemma lem2635774 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635775 : term103 = term104.
Proof. exact (MK_COMB (@lem2635774) (@lem2635773)). Qed.
Lemma lem2635776 : term105 = term106.
Proof. exact (MK_COMB (@lem2635775) (@lem2635770)). Qed.
Lemma lem2635777 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2635779 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635780 : term109 = term110.
Proof. exact (@lem2635779 (NUMERAL 0) term32). Qed.
Lemma lem2635781 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635782 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635783 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635782 h1) (fun h1 : term110 = True => @lem2635781)). Qed.
Lemma lem2635784 : term110 = True.
Proof. exact (EQ_MP (@lem2635783) (@lem2635781)). Qed.
Lemma lem2635785 : term109 = True.
Proof. exact (TRANS (@lem2635780) (@lem2635784)). Qed.
Lemma lem2635786 : True = term109.
Proof. exact (SYM (@lem2635785)). Qed.
Lemma lem2635787 : term109.
Proof. exact (EQ_MP (@lem2635786) (@lem0)). Qed.
Lemma lem2635788 : term112.
Proof. exact (@lem2635777 (@lem2635787)). Qed.
Lemma lem2635790 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635791 : term109 = term110.
Proof. exact (@lem2635790 (NUMERAL 0) term32). Qed.
Lemma lem2635792 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635793 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635794 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635793 h1) (fun h1 : term110 = True => @lem2635792)). Qed.
Lemma lem2635795 : term110 = True.
Proof. exact (EQ_MP (@lem2635794) (@lem2635792)). Qed.
Lemma lem2635796 : term109 = True.
Proof. exact (TRANS (@lem2635791) (@lem2635795)). Qed.
Lemma lem2635797 : True = term109.
Proof. exact (SYM (@lem2635796)). Qed.
Lemma lem2635798 : term109.
Proof. exact (EQ_MP (@lem2635797) (@lem0)). Qed.
Lemma lem2635799 : term113.
Proof. exact (@lem2635788 (@lem2635798)). Qed.
Lemma lem2635801 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635802 : term109 = term110.
Proof. exact (@lem2635801 (NUMERAL 0) term32). Qed.
Lemma lem2635803 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635804 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635805 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635804 h1) (fun h1 : term110 = True => @lem2635803)). Qed.
Lemma lem2635806 : term110 = True.
Proof. exact (EQ_MP (@lem2635805) (@lem2635803)). Qed.
Lemma lem2635807 : term109 = True.
Proof. exact (TRANS (@lem2635802) (@lem2635806)). Qed.
Lemma lem2635808 : True = term109.
Proof. exact (SYM (@lem2635807)). Qed.
Lemma lem2635809 : term109.
Proof. exact (EQ_MP (@lem2635808) (@lem0)). Qed.
Lemma lem2635810 : term114.
Proof. exact (@lem2635799 (@lem2635809)). Qed.
Lemma lem2635812 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635813 : term117 = term118.
Proof. exact (@lem2635812 term32 term32). Qed.
Lemma lem2635814 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635815 : term120 = term32.
Proof. exact (EQ_MP (@lem2635814) (@lem940073)). Qed.
Lemma lem2635816 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635817 : term118 = term31.
Proof. exact (MK_COMB (@lem2635816) (@lem2635815)). Qed.
Lemma lem2635818 : term117 = term31.
Proof. exact (TRANS (@lem2635813) (@lem2635817)). Qed.
Lemma lem2635820 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635821 : term123 = term124.
Proof. exact (@lem2635820 term32 term32). Qed.
Lemma lem2635822 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635823 : term120 = term32.
Proof. exact (EQ_MP (@lem2635822) (@lem940073)). Qed.
Lemma lem2635824 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635825 : term118 = term31.
Proof. exact (MK_COMB (@lem2635824) (@lem2635823)). Qed.
Lemma lem2635826 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635827 : term124 = term97.
Proof. exact (MK_COMB (@lem2635826) (@lem2635825)). Qed.
Lemma lem2635828 : term123 = term97.
Proof. exact (TRANS (@lem2635821) (@lem2635827)). Qed.
Lemma lem2635829 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635830 : term125 = term103.
Proof. exact (MK_COMB (@lem2635829) (@lem2635828)). Qed.
Lemma lem2635831 : term126 = term105.
Proof. exact (MK_COMB (@lem2635830) (@lem2635818)). Qed.
Lemma lem2635833 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2635834 : term105 = term38.
Proof. exact (@lem2635833 term32). Qed.
Lemma lem2635835 : term126 = term38.
Proof. exact (TRANS (@lem2635831) (@lem2635834)). Qed.
Lemma lem2635836 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635837 : term128 = term129.
Proof. exact (MK_COMB (@lem2635836) (@lem2635835)). Qed.
Lemma lem2635838 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2635839 : term130 = term131.
Proof. exact (MK_COMB (@lem2635837) (@lem2635838)). Qed.
Lemma lem2635841 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635842 : term131 = term38.
Proof. exact (@lem2635841 term32). Qed.
Lemma lem2635843 : term130 = term38.
Proof. exact (TRANS (@lem2635839) (@lem2635842)). Qed.
Lemma lem2635845 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2635846 : term117 = term118.
Proof. exact (@lem2635845 term32 term32). Qed.
Lemma lem2635847 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635848 : term120 = term32.
Proof. exact (EQ_MP (@lem2635847) (@lem940073)). Qed.
Lemma lem2635849 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635850 : term118 = term31.
Proof. exact (MK_COMB (@lem2635849) (@lem2635848)). Qed.
Lemma lem2635851 : term117 = term31.
Proof. exact (TRANS (@lem2635846) (@lem2635850)). Qed.
Lemma lem2635852 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2635853 : term133 = term131.
Proof. exact (MK_COMB (@lem2635852) (@lem2635851)). Qed.
Lemma lem2635855 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635856 : term131 = term38.
Proof. exact (@lem2635855 term32). Qed.
Lemma lem2635857 : term133 = term38.
Proof. exact (TRANS (@lem2635853) (@lem2635856)). Qed.
Lemma lem2635858 : term38 = term133.
Proof. exact (SYM (@lem2635857)). Qed.
Lemma lem2635859 : term130 = term133.
Proof. exact (TRANS (@lem2635843) (@lem2635858)). Qed.
Lemma lem2635860 : term106 = term134.
Proof. exact (@lem2635810 (@lem2635859)). Qed.
Lemma lem2635861 : term105 = term134.
Proof. exact (TRANS (@lem2635776) (@lem2635860)). Qed.
Lemma lem2635863 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2635864 : term134 = term38.
Proof. exact (@lem2635863 term38). Qed.
Lemma lem2635865 : term105 = term38.
Proof. exact (TRANS (@lem2635861) (@lem2635864)). Qed.
Lemma lem2635866 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2635867 : term136 = term129.
Proof. exact (MK_COMB (@lem2635866) (@lem2635865)). Qed.
Lemma lem2635868 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2635869 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2635867) (@lem2635868 n)). Qed.
Lemma lem2635870 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2635767 n) (@lem2635869 n)). Qed.
Lemma lem2635871 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2635872 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2635870 n) (@lem2635871 n)). Qed.
Lemma lem2635873 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2635874 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2635873) (@lem2635872 n)). Qed.
Lemma lem2635875 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2635876 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2635874 n) (@lem2635875)). Qed.
Lemma lem2635877 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2635766 n) (@lem2635876 n)). Qed.
Lemma lem2635878 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2635879 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2635877 n) (@lem2635878)). Qed.
Lemma lem2635880 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2635881 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2635880) (@lem2635879 n)). Qed.
Lemma lem2635882 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2635883 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2635881 n) (@lem2635882)). Qed.
Lemma lem2635884 (m : int) (n : int) (h1 : term810 m n) : term257.
Proof. exact (EQ_MP (@lem2635883 n) (@lem2635765 m n h1)). Qed.
Lemma lem2635886 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2635887 : term257 = term258.
Proof. exact (@lem2635886 term38 term97). Qed.
Lemma lem2635889 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2635890 : term97 = term102.
Proof. exact (@lem2635889 term32). Qed.
Lemma lem2635892 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635893 : term38 = term134.
Proof. exact (@lem2635892 (NUMERAL 0)). Qed.
Lemma lem2635894 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2635895 : term259 = term260.
Proof. exact (MK_COMB (@lem2635894) (@lem2635893)). Qed.
Lemma lem2635896 : term258 = term261.
Proof. exact (MK_COMB (@lem2635895) (@lem2635890)). Qed.
Lemma lem2635897 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2635899 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635900 : term109 = term110.
Proof. exact (@lem2635899 (NUMERAL 0) term32). Qed.
Lemma lem2635901 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635902 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635903 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635902 h1) (fun h1 : term110 = True => @lem2635901)). Qed.
Lemma lem2635904 : term110 = True.
Proof. exact (EQ_MP (@lem2635903) (@lem2635901)). Qed.
Lemma lem2635905 : term109 = True.
Proof. exact (TRANS (@lem2635900) (@lem2635904)). Qed.
Lemma lem2635906 : True = term109.
Proof. exact (SYM (@lem2635905)). Qed.
Lemma lem2635907 : term109.
Proof. exact (EQ_MP (@lem2635906) (@lem0)). Qed.
Lemma lem2635908 : term263.
Proof. exact (@lem2635897 (@lem2635907)). Qed.
Lemma lem2635910 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635911 : term109 = term110.
Proof. exact (@lem2635910 (NUMERAL 0) term32). Qed.
Lemma lem2635912 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635913 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635914 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635913 h1) (fun h1 : term110 = True => @lem2635912)). Qed.
Lemma lem2635915 : term110 = True.
Proof. exact (EQ_MP (@lem2635914) (@lem2635912)). Qed.
Lemma lem2635916 : term109 = True.
Proof. exact (TRANS (@lem2635911) (@lem2635915)). Qed.
Lemma lem2635917 : True = term109.
Proof. exact (SYM (@lem2635916)). Qed.
Lemma lem2635918 : term109.
Proof. exact (EQ_MP (@lem2635917) (@lem0)). Qed.
Lemma lem2635919 : term261 = term264.
Proof. exact (@lem2635908 (@lem2635918)). Qed.
Lemma lem2635921 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2635922 : term123 = term124.
Proof. exact (@lem2635921 term32 term32). Qed.
Lemma lem2635923 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2635924 : term120 = term32.
Proof. exact (EQ_MP (@lem2635923) (@lem940073)). Qed.
Lemma lem2635925 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2635926 : term118 = term31.
Proof. exact (MK_COMB (@lem2635925) (@lem2635924)). Qed.
Lemma lem2635927 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2635928 : term124 = term97.
Proof. exact (MK_COMB (@lem2635927) (@lem2635926)). Qed.
Lemma lem2635929 : term123 = term97.
Proof. exact (TRANS (@lem2635922) (@lem2635928)). Qed.
Lemma lem2635931 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2635932 : term131 = term38.
Proof. exact (@lem2635931 term32). Qed.
Lemma lem2635933 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2635934 : term265 = term259.
Proof. exact (MK_COMB (@lem2635933) (@lem2635932)). Qed.
Lemma lem2635935 : term264 = term258.
Proof. exact (MK_COMB (@lem2635934) (@lem2635929)). Qed.
Lemma lem2635937 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2635938 : term258 = term268.
Proof. exact (@lem2635937 (NUMERAL 0) term32). Qed.
Lemma lem2635939 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635940 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2635941 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635940 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2635939)). Qed.
Lemma lem2635942 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2635941) (@lem2635939)). Qed.
Lemma lem2635943 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2635944 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2635945 : term269 = (and True).
Proof. exact (MK_COMB (@lem2635944) (@lem2635943)). Qed.
Lemma lem2635946 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2635945) (@lem2635942)). Qed.
Lemma lem2635948 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2635949 : term268 = False.
Proof. exact (TRANS (@lem2635946) (@lem2635948)). Qed.
Lemma lem2635950 : term258 = False.
Proof. exact (TRANS (@lem2635938) (@lem2635949)). Qed.
Lemma lem2635951 : term264 = False.
Proof. exact (TRANS (@lem2635935) (@lem2635950)). Qed.
Lemma lem2635952 : term261 = False.
Proof. exact (TRANS (@lem2635919) (@lem2635951)). Qed.
Lemma lem2635953 : term258 = False.
Proof. exact (TRANS (@lem2635896) (@lem2635952)). Qed.
Lemma lem2635954 : term257 = False.
Proof. exact (TRANS (@lem2635887) (@lem2635953)). Qed.
Lemma lem2635955 (m : int) (n : int) (h1 : term810 m n) : False.
Proof. exact (EQ_MP (@lem2635954) (@lem2635884 m n h1)). Qed.
Lemma lem2635956 (m : int) (n : int) (h1 : term847 m n) : term847 m n.
Proof. exact (h1). Qed.
Lemma lem2635957 (m : int) (n : int) (h1 : term843 m n) : term843 m n.
Proof. exact (h1). Qed.
Lemma lem2635958 (m : int) (n : int) (h1 : term843 m n) : term842 m n.
Proof. exact (proj2 (@lem2635957 m n h1)). Qed.
Lemma lem2635960 (m : int) (n : int) (h1 : term843 m n) : term808 m n.
Proof. exact (proj2 (@lem2635958 m n h1)). Qed.
Lemma lem2635961 (m : int) (n : int) (h1 : term843 m n) : term716 m n.
Proof. exact (proj1 (@lem2635958 m n h1)). Qed.
Lemma lem2635962 (m : int) (n : int) (h1 : term843 m n) : term714 m n.
Proof. exact (proj2 (@lem2635961 m n h1)). Qed.
Lemma lem2635964 (m : int) (n : int) (h1 : term843 m n) : term807 m n.
Proof. exact (proj2 (@lem2635960 m n h1)). Qed.
Lemma lem2635967 (m : int) (n : int) (h1 : term843 m n) : term829 m n.
Proof. exact (proj1 (@lem2635964 m n h1)). Qed.
Lemma lem2635969 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2635970 : term229 = term109.
Proof. exact (@lem2635969 term38 term31). Qed.
Lemma lem2635972 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635973 : term31 = term99.
Proof. exact (@lem2635972 term32). Qed.
Lemma lem2635975 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2635976 : term38 = term134.
Proof. exact (@lem2635975 (NUMERAL 0)). Qed.
Lemma lem2635977 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2635978 : term230 = term231.
Proof. exact (MK_COMB (@lem2635977) (@lem2635976)). Qed.
Lemma lem2635979 : term109 = term232.
Proof. exact (MK_COMB (@lem2635978) (@lem2635973)). Qed.
Lemma lem2635980 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2635982 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635983 : term109 = term110.
Proof. exact (@lem2635982 (NUMERAL 0) term32). Qed.
Lemma lem2635984 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635985 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635986 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635985 h1) (fun h1 : term110 = True => @lem2635984)). Qed.
Lemma lem2635987 : term110 = True.
Proof. exact (EQ_MP (@lem2635986) (@lem2635984)). Qed.
Lemma lem2635988 : term109 = True.
Proof. exact (TRANS (@lem2635983) (@lem2635987)). Qed.
Lemma lem2635989 : True = term109.
Proof. exact (SYM (@lem2635988)). Qed.
Lemma lem2635990 : term109.
Proof. exact (EQ_MP (@lem2635989) (@lem0)). Qed.
Lemma lem2635991 : term234.
Proof. exact (@lem2635980 (@lem2635990)). Qed.
Lemma lem2635993 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2635994 : term109 = term110.
Proof. exact (@lem2635993 (NUMERAL 0) term32). Qed.
Lemma lem2635995 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2635996 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2635997 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2635996 h1) (fun h1 : term110 = True => @lem2635995)). Qed.
Lemma lem2635998 : term110 = True.
Proof. exact (EQ_MP (@lem2635997) (@lem2635995)). Qed.
Lemma lem2635999 : term109 = True.
Proof. exact (TRANS (@lem2635994) (@lem2635998)). Qed.
Lemma lem2636000 : True = term109.
Proof. exact (SYM (@lem2635999)). Qed.
Lemma lem2636001 : term109.
Proof. exact (EQ_MP (@lem2636000) (@lem0)). Qed.
Lemma lem2636002 : term232 = term235.
Proof. exact (@lem2635991 (@lem2636001)). Qed.
Lemma lem2636004 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636005 : term117 = term118.
Proof. exact (@lem2636004 term32 term32). Qed.
Lemma lem2636006 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636007 : term120 = term32.
Proof. exact (EQ_MP (@lem2636006) (@lem940073)). Qed.
Lemma lem2636008 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636009 : term118 = term31.
Proof. exact (MK_COMB (@lem2636008) (@lem2636007)). Qed.
Lemma lem2636010 : term117 = term31.
Proof. exact (TRANS (@lem2636005) (@lem2636009)). Qed.
Lemma lem2636012 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636013 : term131 = term38.
Proof. exact (@lem2636012 term32). Qed.
Lemma lem2636014 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636015 : term236 = term230.
Proof. exact (MK_COMB (@lem2636014) (@lem2636013)). Qed.
Lemma lem2636016 : term235 = term109.
Proof. exact (MK_COMB (@lem2636015) (@lem2636010)). Qed.
Lemma lem2636018 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636019 : term109 = term110.
Proof. exact (@lem2636018 (NUMERAL 0) term32). Qed.
Lemma lem2636020 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636021 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636022 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636021 h1) (fun h1 : term110 = True => @lem2636020)). Qed.
Lemma lem2636023 : term110 = True.
Proof. exact (EQ_MP (@lem2636022) (@lem2636020)). Qed.
Lemma lem2636024 : term109 = True.
Proof. exact (TRANS (@lem2636019) (@lem2636023)). Qed.
Lemma lem2636025 : term235 = True.
Proof. exact (TRANS (@lem2636016) (@lem2636024)). Qed.
Lemma lem2636026 : term232 = True.
Proof. exact (TRANS (@lem2636002) (@lem2636025)). Qed.
Lemma lem2636027 : term109 = True.
Proof. exact (TRANS (@lem2635979) (@lem2636026)). Qed.
Lemma lem2636028 : term229 = True.
Proof. exact (TRANS (@lem2635970) (@lem2636027)). Qed.
Lemma lem2636029 : True = term229.
Proof. exact (SYM (@lem2636028)). Qed.
Lemma lem2636030 : term229.
Proof. exact (EQ_MP (@lem2636029) (@lem0)). Qed.
Lemma lem2636031 (m : int) (n : int) (h1 : term843 m n) : term1157 m n.
Proof. exact (conj (@lem2636030) (@lem2635967 m n h1)). Qed.
Lemma lem2636033 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2636034 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2636033 term31 (term88 m n)). Qed.
Lemma lem2636035 (m : int) (n : int) (h1 : term843 m n) : term1159 m n.
Proof. exact (@lem2636034 m n (@lem2636031 m n h1)). Qed.
Lemma lem2636036 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2636037 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636038 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2636037) (@lem2636036 m n)). Qed.
Lemma lem2636039 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636040 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2636038 m n) (@lem2636039)). Qed.
Lemma lem2636041 (m : int) (n : int) (h1 : term843 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2636040 m n) (@lem2636035 m n h1)). Qed.
Lemma lem2636043 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2636044 : term229 = term109.
Proof. exact (@lem2636043 term38 term31). Qed.
Lemma lem2636046 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636047 : term31 = term99.
Proof. exact (@lem2636046 term32). Qed.
Lemma lem2636049 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636050 : term38 = term134.
Proof. exact (@lem2636049 (NUMERAL 0)). Qed.
Lemma lem2636051 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636052 : term230 = term231.
Proof. exact (MK_COMB (@lem2636051) (@lem2636050)). Qed.
Lemma lem2636053 : term109 = term232.
Proof. exact (MK_COMB (@lem2636052) (@lem2636047)). Qed.
Lemma lem2636054 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2636056 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636057 : term109 = term110.
Proof. exact (@lem2636056 (NUMERAL 0) term32). Qed.
Lemma lem2636058 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636059 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636060 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636059 h1) (fun h1 : term110 = True => @lem2636058)). Qed.
Lemma lem2636061 : term110 = True.
Proof. exact (EQ_MP (@lem2636060) (@lem2636058)). Qed.
Lemma lem2636062 : term109 = True.
Proof. exact (TRANS (@lem2636057) (@lem2636061)). Qed.
Lemma lem2636063 : True = term109.
Proof. exact (SYM (@lem2636062)). Qed.
Lemma lem2636064 : term109.
Proof. exact (EQ_MP (@lem2636063) (@lem0)). Qed.
Lemma lem2636065 : term234.
Proof. exact (@lem2636054 (@lem2636064)). Qed.
Lemma lem2636067 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636068 : term109 = term110.
Proof. exact (@lem2636067 (NUMERAL 0) term32). Qed.
Lemma lem2636069 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636070 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636071 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636070 h1) (fun h1 : term110 = True => @lem2636069)). Qed.
Lemma lem2636072 : term110 = True.
Proof. exact (EQ_MP (@lem2636071) (@lem2636069)). Qed.
Lemma lem2636073 : term109 = True.
Proof. exact (TRANS (@lem2636068) (@lem2636072)). Qed.
Lemma lem2636074 : True = term109.
Proof. exact (SYM (@lem2636073)). Qed.
Lemma lem2636075 : term109.
Proof. exact (EQ_MP (@lem2636074) (@lem0)). Qed.
Lemma lem2636076 : term232 = term235.
Proof. exact (@lem2636065 (@lem2636075)). Qed.
Lemma lem2636078 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636079 : term117 = term118.
Proof. exact (@lem2636078 term32 term32). Qed.
Lemma lem2636080 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636081 : term120 = term32.
Proof. exact (EQ_MP (@lem2636080) (@lem940073)). Qed.
Lemma lem2636082 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636083 : term118 = term31.
Proof. exact (MK_COMB (@lem2636082) (@lem2636081)). Qed.
Lemma lem2636084 : term117 = term31.
Proof. exact (TRANS (@lem2636079) (@lem2636083)). Qed.
Lemma lem2636086 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636087 : term131 = term38.
Proof. exact (@lem2636086 term32). Qed.
Lemma lem2636088 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636089 : term236 = term230.
Proof. exact (MK_COMB (@lem2636088) (@lem2636087)). Qed.
Lemma lem2636090 : term235 = term109.
Proof. exact (MK_COMB (@lem2636089) (@lem2636084)). Qed.
Lemma lem2636092 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636093 : term109 = term110.
Proof. exact (@lem2636092 (NUMERAL 0) term32). Qed.
Lemma lem2636094 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636095 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636096 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636095 h1) (fun h1 : term110 = True => @lem2636094)). Qed.
Lemma lem2636097 : term110 = True.
Proof. exact (EQ_MP (@lem2636096) (@lem2636094)). Qed.
Lemma lem2636098 : term109 = True.
Proof. exact (TRANS (@lem2636093) (@lem2636097)). Qed.
Lemma lem2636099 : term235 = True.
Proof. exact (TRANS (@lem2636090) (@lem2636098)). Qed.
Lemma lem2636100 : term232 = True.
Proof. exact (TRANS (@lem2636076) (@lem2636099)). Qed.
Lemma lem2636101 : term109 = True.
Proof. exact (TRANS (@lem2636053) (@lem2636100)). Qed.
Lemma lem2636102 : term229 = True.
Proof. exact (TRANS (@lem2636044) (@lem2636101)). Qed.
Lemma lem2636103 : True = term229.
Proof. exact (SYM (@lem2636102)). Qed.
Lemma lem2636104 : term229.
Proof. exact (EQ_MP (@lem2636103) (@lem0)). Qed.
Lemma lem2636105 (m : int) (n : int) (h1 : term843 m n) : term1162 m n.
Proof. exact (conj (@lem2636104) (@lem2635962 m n h1)). Qed.
Lemma lem2636107 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2636108 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2636107 term31 (term196 m n)). Qed.
Lemma lem2636109 (m : int) (n : int) (h1 : term843 m n) : term1164 m n.
Proof. exact (@lem2636108 m n (@lem2636105 m n h1)). Qed.
Lemma lem2636110 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2636111 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636112 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2636111) (@lem2636110 m n)). Qed.
Lemma lem2636113 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636114 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2636112 m n) (@lem2636113)). Qed.
Lemma lem2636115 (m : int) (n : int) (h1 : term843 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2636114 m n) (@lem2636109 m n h1)). Qed.
Lemma lem2636116 (m : int) (n : int) (h1 : term843 m n) : term1167 m n.
Proof. exact (conj (@lem2636115 m n h1) (@lem2636041 m n h1)). Qed.
Lemma lem2636118 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2636119 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2636118 (term196 m n) (term88 m n)). Qed.
Lemma lem2636120 (m : int) (n : int) (h1 : term843 m n) : term1169 m n.
Proof. exact (@lem2636119 m n (@lem2636116 m n h1)). Qed.
Lemma lem2636121 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2636122 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2636124 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636125 : term31 = term99.
Proof. exact (@lem2636124 term32). Qed.
Lemma lem2636127 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636128 : term97 = term102.
Proof. exact (@lem2636127 term32). Qed.
Lemma lem2636129 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636130 : term103 = term104.
Proof. exact (MK_COMB (@lem2636129) (@lem2636128)). Qed.
Lemma lem2636131 : term105 = term106.
Proof. exact (MK_COMB (@lem2636130) (@lem2636125)). Qed.
Lemma lem2636132 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2636134 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636135 : term109 = term110.
Proof. exact (@lem2636134 (NUMERAL 0) term32). Qed.
Lemma lem2636136 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636137 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636138 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636137 h1) (fun h1 : term110 = True => @lem2636136)). Qed.
Lemma lem2636139 : term110 = True.
Proof. exact (EQ_MP (@lem2636138) (@lem2636136)). Qed.
Lemma lem2636140 : term109 = True.
Proof. exact (TRANS (@lem2636135) (@lem2636139)). Qed.
Lemma lem2636141 : True = term109.
Proof. exact (SYM (@lem2636140)). Qed.
Lemma lem2636142 : term109.
Proof. exact (EQ_MP (@lem2636141) (@lem0)). Qed.
Lemma lem2636143 : term112.
Proof. exact (@lem2636132 (@lem2636142)). Qed.
Lemma lem2636145 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636146 : term109 = term110.
Proof. exact (@lem2636145 (NUMERAL 0) term32). Qed.
Lemma lem2636147 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636148 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636149 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636148 h1) (fun h1 : term110 = True => @lem2636147)). Qed.
Lemma lem2636150 : term110 = True.
Proof. exact (EQ_MP (@lem2636149) (@lem2636147)). Qed.
Lemma lem2636151 : term109 = True.
Proof. exact (TRANS (@lem2636146) (@lem2636150)). Qed.
Lemma lem2636152 : True = term109.
Proof. exact (SYM (@lem2636151)). Qed.
Lemma lem2636153 : term109.
Proof. exact (EQ_MP (@lem2636152) (@lem0)). Qed.
Lemma lem2636154 : term113.
Proof. exact (@lem2636143 (@lem2636153)). Qed.
Lemma lem2636156 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636157 : term109 = term110.
Proof. exact (@lem2636156 (NUMERAL 0) term32). Qed.
Lemma lem2636158 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636159 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636160 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636159 h1) (fun h1 : term110 = True => @lem2636158)). Qed.
Lemma lem2636161 : term110 = True.
Proof. exact (EQ_MP (@lem2636160) (@lem2636158)). Qed.
Lemma lem2636162 : term109 = True.
Proof. exact (TRANS (@lem2636157) (@lem2636161)). Qed.
Lemma lem2636163 : True = term109.
Proof. exact (SYM (@lem2636162)). Qed.
Lemma lem2636164 : term109.
Proof. exact (EQ_MP (@lem2636163) (@lem0)). Qed.
Lemma lem2636165 : term114.
Proof. exact (@lem2636154 (@lem2636164)). Qed.
Lemma lem2636167 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636168 : term117 = term118.
Proof. exact (@lem2636167 term32 term32). Qed.
Lemma lem2636169 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636170 : term120 = term32.
Proof. exact (EQ_MP (@lem2636169) (@lem940073)). Qed.
Lemma lem2636171 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636172 : term118 = term31.
Proof. exact (MK_COMB (@lem2636171) (@lem2636170)). Qed.
Lemma lem2636173 : term117 = term31.
Proof. exact (TRANS (@lem2636168) (@lem2636172)). Qed.
Lemma lem2636175 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636176 : term123 = term124.
Proof. exact (@lem2636175 term32 term32). Qed.
Lemma lem2636177 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636178 : term120 = term32.
Proof. exact (EQ_MP (@lem2636177) (@lem940073)). Qed.
Lemma lem2636179 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636180 : term118 = term31.
Proof. exact (MK_COMB (@lem2636179) (@lem2636178)). Qed.
Lemma lem2636181 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636182 : term124 = term97.
Proof. exact (MK_COMB (@lem2636181) (@lem2636180)). Qed.
Lemma lem2636183 : term123 = term97.
Proof. exact (TRANS (@lem2636176) (@lem2636182)). Qed.
Lemma lem2636184 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636185 : term125 = term103.
Proof. exact (MK_COMB (@lem2636184) (@lem2636183)). Qed.
Lemma lem2636186 : term126 = term105.
Proof. exact (MK_COMB (@lem2636185) (@lem2636173)). Qed.
Lemma lem2636188 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2636189 : term105 = term38.
Proof. exact (@lem2636188 term32). Qed.
Lemma lem2636190 : term126 = term38.
Proof. exact (TRANS (@lem2636186) (@lem2636189)). Qed.
Lemma lem2636191 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636192 : term128 = term129.
Proof. exact (MK_COMB (@lem2636191) (@lem2636190)). Qed.
Lemma lem2636193 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2636194 : term130 = term131.
Proof. exact (MK_COMB (@lem2636192) (@lem2636193)). Qed.
Lemma lem2636196 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636197 : term131 = term38.
Proof. exact (@lem2636196 term32). Qed.
Lemma lem2636198 : term130 = term38.
Proof. exact (TRANS (@lem2636194) (@lem2636197)). Qed.
Lemma lem2636200 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636201 : term117 = term118.
Proof. exact (@lem2636200 term32 term32). Qed.
Lemma lem2636202 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636203 : term120 = term32.
Proof. exact (EQ_MP (@lem2636202) (@lem940073)). Qed.
Lemma lem2636204 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636205 : term118 = term31.
Proof. exact (MK_COMB (@lem2636204) (@lem2636203)). Qed.
Lemma lem2636206 : term117 = term31.
Proof. exact (TRANS (@lem2636201) (@lem2636205)). Qed.
Lemma lem2636207 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2636208 : term133 = term131.
Proof. exact (MK_COMB (@lem2636207) (@lem2636206)). Qed.
Lemma lem2636210 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636211 : term131 = term38.
Proof. exact (@lem2636210 term32). Qed.
Lemma lem2636212 : term133 = term38.
Proof. exact (TRANS (@lem2636208) (@lem2636211)). Qed.
Lemma lem2636213 : term38 = term133.
Proof. exact (SYM (@lem2636212)). Qed.
Lemma lem2636214 : term130 = term133.
Proof. exact (TRANS (@lem2636198) (@lem2636213)). Qed.
Lemma lem2636215 : term106 = term134.
Proof. exact (@lem2636165 (@lem2636214)). Qed.
Lemma lem2636216 : term105 = term134.
Proof. exact (TRANS (@lem2636131) (@lem2636215)). Qed.
Lemma lem2636218 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2636219 : term134 = term38.
Proof. exact (@lem2636218 term38). Qed.
Lemma lem2636220 : term105 = term38.
Proof. exact (TRANS (@lem2636216) (@lem2636219)). Qed.
Lemma lem2636221 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636222 : term136 = term129.
Proof. exact (MK_COMB (@lem2636221) (@lem2636220)). Qed.
Lemma lem2636223 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2636224 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2636222) (@lem2636223 m)). Qed.
Lemma lem2636225 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2636122 m) (@lem2636224 m)). Qed.
Lemma lem2636226 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2636227 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2636225 m) (@lem2636226 m)). Qed.
Lemma lem2636228 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636229 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2636228) (@lem2636227 m)). Qed.
Lemma lem2636230 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2636231 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2636233 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636234 : term31 = term99.
Proof. exact (@lem2636233 term32). Qed.
Lemma lem2636236 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636237 : term97 = term102.
Proof. exact (@lem2636236 term32). Qed.
Lemma lem2636238 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636239 : term103 = term104.
Proof. exact (MK_COMB (@lem2636238) (@lem2636237)). Qed.
Lemma lem2636240 : term105 = term106.
Proof. exact (MK_COMB (@lem2636239) (@lem2636234)). Qed.
Lemma lem2636241 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2636243 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636244 : term109 = term110.
Proof. exact (@lem2636243 (NUMERAL 0) term32). Qed.
Lemma lem2636245 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636246 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636247 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636246 h1) (fun h1 : term110 = True => @lem2636245)). Qed.
Lemma lem2636248 : term110 = True.
Proof. exact (EQ_MP (@lem2636247) (@lem2636245)). Qed.
Lemma lem2636249 : term109 = True.
Proof. exact (TRANS (@lem2636244) (@lem2636248)). Qed.
Lemma lem2636250 : True = term109.
Proof. exact (SYM (@lem2636249)). Qed.
Lemma lem2636251 : term109.
Proof. exact (EQ_MP (@lem2636250) (@lem0)). Qed.
Lemma lem2636252 : term112.
Proof. exact (@lem2636241 (@lem2636251)). Qed.
Lemma lem2636254 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636255 : term109 = term110.
Proof. exact (@lem2636254 (NUMERAL 0) term32). Qed.
Lemma lem2636256 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636257 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636258 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636257 h1) (fun h1 : term110 = True => @lem2636256)). Qed.
Lemma lem2636259 : term110 = True.
Proof. exact (EQ_MP (@lem2636258) (@lem2636256)). Qed.
Lemma lem2636260 : term109 = True.
Proof. exact (TRANS (@lem2636255) (@lem2636259)). Qed.
Lemma lem2636261 : True = term109.
Proof. exact (SYM (@lem2636260)). Qed.
Lemma lem2636262 : term109.
Proof. exact (EQ_MP (@lem2636261) (@lem0)). Qed.
Lemma lem2636263 : term113.
Proof. exact (@lem2636252 (@lem2636262)). Qed.
Lemma lem2636265 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636266 : term109 = term110.
Proof. exact (@lem2636265 (NUMERAL 0) term32). Qed.
Lemma lem2636267 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636268 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636269 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636268 h1) (fun h1 : term110 = True => @lem2636267)). Qed.
Lemma lem2636270 : term110 = True.
Proof. exact (EQ_MP (@lem2636269) (@lem2636267)). Qed.
Lemma lem2636271 : term109 = True.
Proof. exact (TRANS (@lem2636266) (@lem2636270)). Qed.
Lemma lem2636272 : True = term109.
Proof. exact (SYM (@lem2636271)). Qed.
Lemma lem2636273 : term109.
Proof. exact (EQ_MP (@lem2636272) (@lem0)). Qed.
Lemma lem2636274 : term114.
Proof. exact (@lem2636263 (@lem2636273)). Qed.
Lemma lem2636276 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636277 : term117 = term118.
Proof. exact (@lem2636276 term32 term32). Qed.
Lemma lem2636278 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636279 : term120 = term32.
Proof. exact (EQ_MP (@lem2636278) (@lem940073)). Qed.
Lemma lem2636280 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636281 : term118 = term31.
Proof. exact (MK_COMB (@lem2636280) (@lem2636279)). Qed.
Lemma lem2636282 : term117 = term31.
Proof. exact (TRANS (@lem2636277) (@lem2636281)). Qed.
Lemma lem2636284 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636285 : term123 = term124.
Proof. exact (@lem2636284 term32 term32). Qed.
Lemma lem2636286 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636287 : term120 = term32.
Proof. exact (EQ_MP (@lem2636286) (@lem940073)). Qed.
Lemma lem2636288 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636289 : term118 = term31.
Proof. exact (MK_COMB (@lem2636288) (@lem2636287)). Qed.
Lemma lem2636290 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636291 : term124 = term97.
Proof. exact (MK_COMB (@lem2636290) (@lem2636289)). Qed.
Lemma lem2636292 : term123 = term97.
Proof. exact (TRANS (@lem2636285) (@lem2636291)). Qed.
Lemma lem2636293 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636294 : term125 = term103.
Proof. exact (MK_COMB (@lem2636293) (@lem2636292)). Qed.
Lemma lem2636295 : term126 = term105.
Proof. exact (MK_COMB (@lem2636294) (@lem2636282)). Qed.
Lemma lem2636297 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2636298 : term105 = term38.
Proof. exact (@lem2636297 term32). Qed.
Lemma lem2636299 : term126 = term38.
Proof. exact (TRANS (@lem2636295) (@lem2636298)). Qed.
Lemma lem2636300 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636301 : term128 = term129.
Proof. exact (MK_COMB (@lem2636300) (@lem2636299)). Qed.
Lemma lem2636302 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2636303 : term130 = term131.
Proof. exact (MK_COMB (@lem2636301) (@lem2636302)). Qed.
Lemma lem2636305 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636306 : term131 = term38.
Proof. exact (@lem2636305 term32). Qed.
Lemma lem2636307 : term130 = term38.
Proof. exact (TRANS (@lem2636303) (@lem2636306)). Qed.
Lemma lem2636309 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636310 : term117 = term118.
Proof. exact (@lem2636309 term32 term32). Qed.
Lemma lem2636311 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636312 : term120 = term32.
Proof. exact (EQ_MP (@lem2636311) (@lem940073)). Qed.
Lemma lem2636313 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636314 : term118 = term31.
Proof. exact (MK_COMB (@lem2636313) (@lem2636312)). Qed.
Lemma lem2636315 : term117 = term31.
Proof. exact (TRANS (@lem2636310) (@lem2636314)). Qed.
Lemma lem2636316 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2636317 : term133 = term131.
Proof. exact (MK_COMB (@lem2636316) (@lem2636315)). Qed.
Lemma lem2636319 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636320 : term131 = term38.
Proof. exact (@lem2636319 term32). Qed.
Lemma lem2636321 : term133 = term38.
Proof. exact (TRANS (@lem2636317) (@lem2636320)). Qed.
Lemma lem2636322 : term38 = term133.
Proof. exact (SYM (@lem2636321)). Qed.
Lemma lem2636323 : term130 = term133.
Proof. exact (TRANS (@lem2636307) (@lem2636322)). Qed.
Lemma lem2636324 : term106 = term134.
Proof. exact (@lem2636274 (@lem2636323)). Qed.
Lemma lem2636325 : term105 = term134.
Proof. exact (TRANS (@lem2636240) (@lem2636324)). Qed.
Lemma lem2636327 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2636328 : term134 = term38.
Proof. exact (@lem2636327 term38). Qed.
Lemma lem2636329 : term105 = term38.
Proof. exact (TRANS (@lem2636325) (@lem2636328)). Qed.
Lemma lem2636330 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636331 : term136 = term129.
Proof. exact (MK_COMB (@lem2636330) (@lem2636329)). Qed.
Lemma lem2636332 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2636333 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2636331) (@lem2636332 n)). Qed.
Lemma lem2636334 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2636231 n) (@lem2636333 n)). Qed.
Lemma lem2636335 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2636336 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2636334 n) (@lem2636335 n)). Qed.
Lemma lem2636337 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636338 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2636337) (@lem2636336 n)). Qed.
Lemma lem2636339 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2636340 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2636338 n) (@lem2636339)). Qed.
Lemma lem2636341 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2636230 n) (@lem2636340 n)). Qed.
Lemma lem2636342 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2636343 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2636341 n) (@lem2636342)). Qed.
Lemma lem2636344 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2636229 m) (@lem2636343 n)). Qed.
Lemma lem2636345 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2636121 m n) (@lem2636344 m n)). Qed.
Lemma lem2636346 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2636347 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2636345 m n) (@lem2636346)). Qed.
Lemma lem2636348 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636349 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2636348) (@lem2636347 m n)). Qed.
Lemma lem2636350 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636351 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2636349 m n) (@lem2636350)). Qed.
Lemma lem2636352 (m : int) (n : int) (h1 : term843 m n) : term257.
Proof. exact (EQ_MP (@lem2636351 m n) (@lem2636120 m n h1)). Qed.
Lemma lem2636354 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2636355 : term257 = term258.
Proof. exact (@lem2636354 term38 term97). Qed.
Lemma lem2636357 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636358 : term97 = term102.
Proof. exact (@lem2636357 term32). Qed.
Lemma lem2636360 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636361 : term38 = term134.
Proof. exact (@lem2636360 (NUMERAL 0)). Qed.
Lemma lem2636362 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2636363 : term259 = term260.
Proof. exact (MK_COMB (@lem2636362) (@lem2636361)). Qed.
Lemma lem2636364 : term258 = term261.
Proof. exact (MK_COMB (@lem2636363) (@lem2636358)). Qed.
Lemma lem2636365 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2636367 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636368 : term109 = term110.
Proof. exact (@lem2636367 (NUMERAL 0) term32). Qed.
Lemma lem2636369 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636370 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636371 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636370 h1) (fun h1 : term110 = True => @lem2636369)). Qed.
Lemma lem2636372 : term110 = True.
Proof. exact (EQ_MP (@lem2636371) (@lem2636369)). Qed.
Lemma lem2636373 : term109 = True.
Proof. exact (TRANS (@lem2636368) (@lem2636372)). Qed.
Lemma lem2636374 : True = term109.
Proof. exact (SYM (@lem2636373)). Qed.
Lemma lem2636375 : term109.
Proof. exact (EQ_MP (@lem2636374) (@lem0)). Qed.
Lemma lem2636376 : term263.
Proof. exact (@lem2636365 (@lem2636375)). Qed.
Lemma lem2636378 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636379 : term109 = term110.
Proof. exact (@lem2636378 (NUMERAL 0) term32). Qed.
Lemma lem2636380 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636381 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636382 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636381 h1) (fun h1 : term110 = True => @lem2636380)). Qed.
Lemma lem2636383 : term110 = True.
Proof. exact (EQ_MP (@lem2636382) (@lem2636380)). Qed.
Lemma lem2636384 : term109 = True.
Proof. exact (TRANS (@lem2636379) (@lem2636383)). Qed.
Lemma lem2636385 : True = term109.
Proof. exact (SYM (@lem2636384)). Qed.
Lemma lem2636386 : term109.
Proof. exact (EQ_MP (@lem2636385) (@lem0)). Qed.
Lemma lem2636387 : term261 = term264.
Proof. exact (@lem2636376 (@lem2636386)). Qed.
Lemma lem2636389 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636390 : term123 = term124.
Proof. exact (@lem2636389 term32 term32). Qed.
Lemma lem2636391 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636392 : term120 = term32.
Proof. exact (EQ_MP (@lem2636391) (@lem940073)). Qed.
Lemma lem2636393 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636394 : term118 = term31.
Proof. exact (MK_COMB (@lem2636393) (@lem2636392)). Qed.
Lemma lem2636395 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636396 : term124 = term97.
Proof. exact (MK_COMB (@lem2636395) (@lem2636394)). Qed.
Lemma lem2636397 : term123 = term97.
Proof. exact (TRANS (@lem2636390) (@lem2636396)). Qed.
Lemma lem2636399 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636400 : term131 = term38.
Proof. exact (@lem2636399 term32). Qed.
Lemma lem2636401 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2636402 : term265 = term259.
Proof. exact (MK_COMB (@lem2636401) (@lem2636400)). Qed.
Lemma lem2636403 : term264 = term258.
Proof. exact (MK_COMB (@lem2636402) (@lem2636397)). Qed.
Lemma lem2636405 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2636406 : term258 = term268.
Proof. exact (@lem2636405 (NUMERAL 0) term32). Qed.
Lemma lem2636407 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636408 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2636409 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636408 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2636407)). Qed.
Lemma lem2636410 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2636409) (@lem2636407)). Qed.
Lemma lem2636411 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2636412 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2636413 : term269 = (and True).
Proof. exact (MK_COMB (@lem2636412) (@lem2636411)). Qed.
Lemma lem2636414 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2636413) (@lem2636410)). Qed.
Lemma lem2636416 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2636417 : term268 = False.
Proof. exact (TRANS (@lem2636414) (@lem2636416)). Qed.
Lemma lem2636418 : term258 = False.
Proof. exact (TRANS (@lem2636406) (@lem2636417)). Qed.
Lemma lem2636419 : term264 = False.
Proof. exact (TRANS (@lem2636403) (@lem2636418)). Qed.
Lemma lem2636420 : term261 = False.
Proof. exact (TRANS (@lem2636387) (@lem2636419)). Qed.
Lemma lem2636421 : term258 = False.
Proof. exact (TRANS (@lem2636364) (@lem2636420)). Qed.
Lemma lem2636422 : term257 = False.
Proof. exact (TRANS (@lem2636355) (@lem2636421)). Qed.
Lemma lem2636423 (m : int) (n : int) (h1 : term843 m n) : False.
Proof. exact (EQ_MP (@lem2636422) (@lem2636352 m n h1)). Qed.
Lemma lem2636424 (m : int) (n : int) (h1 : term845 m n) : term845 m n.
Proof. exact (h1). Qed.
Lemma lem2636425 (m : int) (n : int) (h1 : term845 m n) : term844 m n.
Proof. exact (proj2 (@lem2636424 m n h1)). Qed.
Lemma lem2636427 (m : int) (n : int) (h1 : term845 m n) : term808 m n.
Proof. exact (proj2 (@lem2636425 m n h1)). Qed.
Lemma lem2636428 (m : int) (n : int) (h1 : term845 m n) : term751 m n.
Proof. exact (proj1 (@lem2636425 m n h1)). Qed.
Lemma lem2636429 (m : int) (n : int) (h1 : term845 m n) : term749 m n.
Proof. exact (proj2 (@lem2636428 m n h1)). Qed.
Lemma lem2636431 (m : int) (n : int) (h1 : term845 m n) : term807 m n.
Proof. exact (proj2 (@lem2636427 m n h1)). Qed.
Lemma lem2636433 (m : int) (n : int) (h1 : term845 m n) : term805 m n.
Proof. exact (proj2 (@lem2636431 m n h1)). Qed.
Lemma lem2636436 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2636437 : term229 = term109.
Proof. exact (@lem2636436 term38 term31). Qed.
Lemma lem2636439 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636440 : term31 = term99.
Proof. exact (@lem2636439 term32). Qed.
Lemma lem2636442 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636443 : term38 = term134.
Proof. exact (@lem2636442 (NUMERAL 0)). Qed.
Lemma lem2636444 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636445 : term230 = term231.
Proof. exact (MK_COMB (@lem2636444) (@lem2636443)). Qed.
Lemma lem2636446 : term109 = term232.
Proof. exact (MK_COMB (@lem2636445) (@lem2636440)). Qed.
Lemma lem2636447 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2636449 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636450 : term109 = term110.
Proof. exact (@lem2636449 (NUMERAL 0) term32). Qed.
Lemma lem2636451 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636452 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636453 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636452 h1) (fun h1 : term110 = True => @lem2636451)). Qed.
Lemma lem2636454 : term110 = True.
Proof. exact (EQ_MP (@lem2636453) (@lem2636451)). Qed.
Lemma lem2636455 : term109 = True.
Proof. exact (TRANS (@lem2636450) (@lem2636454)). Qed.
Lemma lem2636456 : True = term109.
Proof. exact (SYM (@lem2636455)). Qed.
Lemma lem2636457 : term109.
Proof. exact (EQ_MP (@lem2636456) (@lem0)). Qed.
Lemma lem2636458 : term234.
Proof. exact (@lem2636447 (@lem2636457)). Qed.
Lemma lem2636460 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636461 : term109 = term110.
Proof. exact (@lem2636460 (NUMERAL 0) term32). Qed.
Lemma lem2636462 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636463 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636464 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636463 h1) (fun h1 : term110 = True => @lem2636462)). Qed.
Lemma lem2636465 : term110 = True.
Proof. exact (EQ_MP (@lem2636464) (@lem2636462)). Qed.
Lemma lem2636466 : term109 = True.
Proof. exact (TRANS (@lem2636461) (@lem2636465)). Qed.
Lemma lem2636467 : True = term109.
Proof. exact (SYM (@lem2636466)). Qed.
Lemma lem2636468 : term109.
Proof. exact (EQ_MP (@lem2636467) (@lem0)). Qed.
Lemma lem2636469 : term232 = term235.
Proof. exact (@lem2636458 (@lem2636468)). Qed.
Lemma lem2636471 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636472 : term117 = term118.
Proof. exact (@lem2636471 term32 term32). Qed.
Lemma lem2636473 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636474 : term120 = term32.
Proof. exact (EQ_MP (@lem2636473) (@lem940073)). Qed.
Lemma lem2636475 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636476 : term118 = term31.
Proof. exact (MK_COMB (@lem2636475) (@lem2636474)). Qed.
Lemma lem2636477 : term117 = term31.
Proof. exact (TRANS (@lem2636472) (@lem2636476)). Qed.
Lemma lem2636479 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636480 : term131 = term38.
Proof. exact (@lem2636479 term32). Qed.
Lemma lem2636481 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636482 : term236 = term230.
Proof. exact (MK_COMB (@lem2636481) (@lem2636480)). Qed.
Lemma lem2636483 : term235 = term109.
Proof. exact (MK_COMB (@lem2636482) (@lem2636477)). Qed.
Lemma lem2636485 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636486 : term109 = term110.
Proof. exact (@lem2636485 (NUMERAL 0) term32). Qed.
Lemma lem2636487 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636488 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636489 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636488 h1) (fun h1 : term110 = True => @lem2636487)). Qed.
Lemma lem2636490 : term110 = True.
Proof. exact (EQ_MP (@lem2636489) (@lem2636487)). Qed.
Lemma lem2636491 : term109 = True.
Proof. exact (TRANS (@lem2636486) (@lem2636490)). Qed.
Lemma lem2636492 : term235 = True.
Proof. exact (TRANS (@lem2636483) (@lem2636491)). Qed.
Lemma lem2636493 : term232 = True.
Proof. exact (TRANS (@lem2636469) (@lem2636492)). Qed.
Lemma lem2636494 : term109 = True.
Proof. exact (TRANS (@lem2636446) (@lem2636493)). Qed.
Lemma lem2636495 : term229 = True.
Proof. exact (TRANS (@lem2636437) (@lem2636494)). Qed.
Lemma lem2636496 : True = term229.
Proof. exact (SYM (@lem2636495)). Qed.
Lemma lem2636497 : term229.
Proof. exact (EQ_MP (@lem2636496) (@lem0)). Qed.
Lemma lem2636498 (m : int) (n : int) (h1 : term845 m n) : term1174 m n.
Proof. exact (conj (@lem2636497) (@lem2636433 m n h1)). Qed.
Lemma lem2636500 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2636501 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2636500 term31 (term25 m n)). Qed.
Lemma lem2636502 (m : int) (n : int) (h1 : term845 m n) : term1176 m n.
Proof. exact (@lem2636501 m n (@lem2636498 m n h1)). Qed.
Lemma lem2636503 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2636504 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636505 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2636504) (@lem2636503 m n)). Qed.
Lemma lem2636506 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636507 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2636505 m n) (@lem2636506)). Qed.
Lemma lem2636508 (m : int) (n : int) (h1 : term845 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2636507 m n) (@lem2636502 m n h1)). Qed.
Lemma lem2636510 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2636511 : term229 = term109.
Proof. exact (@lem2636510 term38 term31). Qed.
Lemma lem2636513 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636514 : term31 = term99.
Proof. exact (@lem2636513 term32). Qed.
Lemma lem2636516 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636517 : term38 = term134.
Proof. exact (@lem2636516 (NUMERAL 0)). Qed.
Lemma lem2636518 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636519 : term230 = term231.
Proof. exact (MK_COMB (@lem2636518) (@lem2636517)). Qed.
Lemma lem2636520 : term109 = term232.
Proof. exact (MK_COMB (@lem2636519) (@lem2636514)). Qed.
Lemma lem2636521 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2636523 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636524 : term109 = term110.
Proof. exact (@lem2636523 (NUMERAL 0) term32). Qed.
Lemma lem2636525 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636526 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636527 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636526 h1) (fun h1 : term110 = True => @lem2636525)). Qed.
Lemma lem2636528 : term110 = True.
Proof. exact (EQ_MP (@lem2636527) (@lem2636525)). Qed.
Lemma lem2636529 : term109 = True.
Proof. exact (TRANS (@lem2636524) (@lem2636528)). Qed.
Lemma lem2636530 : True = term109.
Proof. exact (SYM (@lem2636529)). Qed.
Lemma lem2636531 : term109.
Proof. exact (EQ_MP (@lem2636530) (@lem0)). Qed.
Lemma lem2636532 : term234.
Proof. exact (@lem2636521 (@lem2636531)). Qed.
Lemma lem2636534 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636535 : term109 = term110.
Proof. exact (@lem2636534 (NUMERAL 0) term32). Qed.
Lemma lem2636536 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636537 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636538 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636537 h1) (fun h1 : term110 = True => @lem2636536)). Qed.
Lemma lem2636539 : term110 = True.
Proof. exact (EQ_MP (@lem2636538) (@lem2636536)). Qed.
Lemma lem2636540 : term109 = True.
Proof. exact (TRANS (@lem2636535) (@lem2636539)). Qed.
Lemma lem2636541 : True = term109.
Proof. exact (SYM (@lem2636540)). Qed.
Lemma lem2636542 : term109.
Proof. exact (EQ_MP (@lem2636541) (@lem0)). Qed.
Lemma lem2636543 : term232 = term235.
Proof. exact (@lem2636532 (@lem2636542)). Qed.
Lemma lem2636545 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636546 : term117 = term118.
Proof. exact (@lem2636545 term32 term32). Qed.
Lemma lem2636547 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636548 : term120 = term32.
Proof. exact (EQ_MP (@lem2636547) (@lem940073)). Qed.
Lemma lem2636549 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636550 : term118 = term31.
Proof. exact (MK_COMB (@lem2636549) (@lem2636548)). Qed.
Lemma lem2636551 : term117 = term31.
Proof. exact (TRANS (@lem2636546) (@lem2636550)). Qed.
Lemma lem2636553 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636554 : term131 = term38.
Proof. exact (@lem2636553 term32). Qed.
Lemma lem2636555 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636556 : term236 = term230.
Proof. exact (MK_COMB (@lem2636555) (@lem2636554)). Qed.
Lemma lem2636557 : term235 = term109.
Proof. exact (MK_COMB (@lem2636556) (@lem2636551)). Qed.
Lemma lem2636559 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636560 : term109 = term110.
Proof. exact (@lem2636559 (NUMERAL 0) term32). Qed.
Lemma lem2636561 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636562 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636563 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636562 h1) (fun h1 : term110 = True => @lem2636561)). Qed.
Lemma lem2636564 : term110 = True.
Proof. exact (EQ_MP (@lem2636563) (@lem2636561)). Qed.
Lemma lem2636565 : term109 = True.
Proof. exact (TRANS (@lem2636560) (@lem2636564)). Qed.
Lemma lem2636566 : term235 = True.
Proof. exact (TRANS (@lem2636557) (@lem2636565)). Qed.
Lemma lem2636567 : term232 = True.
Proof. exact (TRANS (@lem2636543) (@lem2636566)). Qed.
Lemma lem2636568 : term109 = True.
Proof. exact (TRANS (@lem2636520) (@lem2636567)). Qed.
Lemma lem2636569 : term229 = True.
Proof. exact (TRANS (@lem2636511) (@lem2636568)). Qed.
Lemma lem2636570 : True = term229.
Proof. exact (SYM (@lem2636569)). Qed.
Lemma lem2636571 : term229.
Proof. exact (EQ_MP (@lem2636570) (@lem0)). Qed.
Lemma lem2636572 (m : int) (n : int) (h1 : term845 m n) : term1179 m n.
Proof. exact (conj (@lem2636571) (@lem2636429 m n h1)). Qed.
Lemma lem2636574 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2636575 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2636574 term31 (term739 m n)). Qed.
Lemma lem2636576 (m : int) (n : int) (h1 : term845 m n) : term1181 m n.
Proof. exact (@lem2636575 m n (@lem2636572 m n h1)). Qed.
Lemma lem2636577 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2636578 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636579 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2636578) (@lem2636577 m n)). Qed.
Lemma lem2636580 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636581 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2636579 m n) (@lem2636580)). Qed.
Lemma lem2636582 (m : int) (n : int) (h1 : term845 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2636581 m n) (@lem2636576 m n h1)). Qed.
Lemma lem2636583 (m : int) (n : int) (h1 : term845 m n) : term1184 m n.
Proof. exact (conj (@lem2636582 m n h1) (@lem2636508 m n h1)). Qed.
Lemma lem2636585 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2636586 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2636585 (term739 m n) (term25 m n)). Qed.
Lemma lem2636587 (m : int) (n : int) (h1 : term845 m n) : term1186 m n.
Proof. exact (@lem2636586 m n (@lem2636583 m n h1)). Qed.
Lemma lem2636588 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2636589 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2636591 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636592 : term31 = term99.
Proof. exact (@lem2636591 term32). Qed.
Lemma lem2636594 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636595 : term97 = term102.
Proof. exact (@lem2636594 term32). Qed.
Lemma lem2636596 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636597 : term103 = term104.
Proof. exact (MK_COMB (@lem2636596) (@lem2636595)). Qed.
Lemma lem2636598 : term105 = term106.
Proof. exact (MK_COMB (@lem2636597) (@lem2636592)). Qed.
Lemma lem2636599 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2636601 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636602 : term109 = term110.
Proof. exact (@lem2636601 (NUMERAL 0) term32). Qed.
Lemma lem2636603 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636604 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636605 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636604 h1) (fun h1 : term110 = True => @lem2636603)). Qed.
Lemma lem2636606 : term110 = True.
Proof. exact (EQ_MP (@lem2636605) (@lem2636603)). Qed.
Lemma lem2636607 : term109 = True.
Proof. exact (TRANS (@lem2636602) (@lem2636606)). Qed.
Lemma lem2636608 : True = term109.
Proof. exact (SYM (@lem2636607)). Qed.
Lemma lem2636609 : term109.
Proof. exact (EQ_MP (@lem2636608) (@lem0)). Qed.
Lemma lem2636610 : term112.
Proof. exact (@lem2636599 (@lem2636609)). Qed.
Lemma lem2636612 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636613 : term109 = term110.
Proof. exact (@lem2636612 (NUMERAL 0) term32). Qed.
Lemma lem2636614 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636615 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636616 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636615 h1) (fun h1 : term110 = True => @lem2636614)). Qed.
Lemma lem2636617 : term110 = True.
Proof. exact (EQ_MP (@lem2636616) (@lem2636614)). Qed.
Lemma lem2636618 : term109 = True.
Proof. exact (TRANS (@lem2636613) (@lem2636617)). Qed.
Lemma lem2636619 : True = term109.
Proof. exact (SYM (@lem2636618)). Qed.
Lemma lem2636620 : term109.
Proof. exact (EQ_MP (@lem2636619) (@lem0)). Qed.
Lemma lem2636621 : term113.
Proof. exact (@lem2636610 (@lem2636620)). Qed.
Lemma lem2636623 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636624 : term109 = term110.
Proof. exact (@lem2636623 (NUMERAL 0) term32). Qed.
Lemma lem2636625 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636626 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636627 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636626 h1) (fun h1 : term110 = True => @lem2636625)). Qed.
Lemma lem2636628 : term110 = True.
Proof. exact (EQ_MP (@lem2636627) (@lem2636625)). Qed.
Lemma lem2636629 : term109 = True.
Proof. exact (TRANS (@lem2636624) (@lem2636628)). Qed.
Lemma lem2636630 : True = term109.
Proof. exact (SYM (@lem2636629)). Qed.
Lemma lem2636631 : term109.
Proof. exact (EQ_MP (@lem2636630) (@lem0)). Qed.
Lemma lem2636632 : term114.
Proof. exact (@lem2636621 (@lem2636631)). Qed.
Lemma lem2636634 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636635 : term117 = term118.
Proof. exact (@lem2636634 term32 term32). Qed.
Lemma lem2636636 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636637 : term120 = term32.
Proof. exact (EQ_MP (@lem2636636) (@lem940073)). Qed.
Lemma lem2636638 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636639 : term118 = term31.
Proof. exact (MK_COMB (@lem2636638) (@lem2636637)). Qed.
Lemma lem2636640 : term117 = term31.
Proof. exact (TRANS (@lem2636635) (@lem2636639)). Qed.
Lemma lem2636642 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636643 : term123 = term124.
Proof. exact (@lem2636642 term32 term32). Qed.
Lemma lem2636644 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636645 : term120 = term32.
Proof. exact (EQ_MP (@lem2636644) (@lem940073)). Qed.
Lemma lem2636646 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636647 : term118 = term31.
Proof. exact (MK_COMB (@lem2636646) (@lem2636645)). Qed.
Lemma lem2636648 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636649 : term124 = term97.
Proof. exact (MK_COMB (@lem2636648) (@lem2636647)). Qed.
Lemma lem2636650 : term123 = term97.
Proof. exact (TRANS (@lem2636643) (@lem2636649)). Qed.
Lemma lem2636651 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636652 : term125 = term103.
Proof. exact (MK_COMB (@lem2636651) (@lem2636650)). Qed.
Lemma lem2636653 : term126 = term105.
Proof. exact (MK_COMB (@lem2636652) (@lem2636640)). Qed.
Lemma lem2636655 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2636656 : term105 = term38.
Proof. exact (@lem2636655 term32). Qed.
Lemma lem2636657 : term126 = term38.
Proof. exact (TRANS (@lem2636653) (@lem2636656)). Qed.
Lemma lem2636658 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636659 : term128 = term129.
Proof. exact (MK_COMB (@lem2636658) (@lem2636657)). Qed.
Lemma lem2636660 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2636661 : term130 = term131.
Proof. exact (MK_COMB (@lem2636659) (@lem2636660)). Qed.
Lemma lem2636663 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636664 : term131 = term38.
Proof. exact (@lem2636663 term32). Qed.
Lemma lem2636665 : term130 = term38.
Proof. exact (TRANS (@lem2636661) (@lem2636664)). Qed.
Lemma lem2636667 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636668 : term117 = term118.
Proof. exact (@lem2636667 term32 term32). Qed.
Lemma lem2636669 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636670 : term120 = term32.
Proof. exact (EQ_MP (@lem2636669) (@lem940073)). Qed.
Lemma lem2636671 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636672 : term118 = term31.
Proof. exact (MK_COMB (@lem2636671) (@lem2636670)). Qed.
Lemma lem2636673 : term117 = term31.
Proof. exact (TRANS (@lem2636668) (@lem2636672)). Qed.
Lemma lem2636674 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2636675 : term133 = term131.
Proof. exact (MK_COMB (@lem2636674) (@lem2636673)). Qed.
Lemma lem2636677 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636678 : term131 = term38.
Proof. exact (@lem2636677 term32). Qed.
Lemma lem2636679 : term133 = term38.
Proof. exact (TRANS (@lem2636675) (@lem2636678)). Qed.
Lemma lem2636680 : term38 = term133.
Proof. exact (SYM (@lem2636679)). Qed.
Lemma lem2636681 : term130 = term133.
Proof. exact (TRANS (@lem2636665) (@lem2636680)). Qed.
Lemma lem2636682 : term106 = term134.
Proof. exact (@lem2636632 (@lem2636681)). Qed.
Lemma lem2636683 : term105 = term134.
Proof. exact (TRANS (@lem2636598) (@lem2636682)). Qed.
Lemma lem2636685 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2636686 : term134 = term38.
Proof. exact (@lem2636685 term38). Qed.
Lemma lem2636687 : term105 = term38.
Proof. exact (TRANS (@lem2636683) (@lem2636686)). Qed.
Lemma lem2636688 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636689 : term136 = term129.
Proof. exact (MK_COMB (@lem2636688) (@lem2636687)). Qed.
Lemma lem2636690 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2636691 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2636689) (@lem2636690 m)). Qed.
Lemma lem2636692 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2636589 m) (@lem2636691 m)). Qed.
Lemma lem2636693 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2636694 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2636692 m) (@lem2636693 m)). Qed.
Lemma lem2636695 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636696 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2636695) (@lem2636694 m)). Qed.
Lemma lem2636697 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2636698 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2636700 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636701 : term31 = term99.
Proof. exact (@lem2636700 term32). Qed.
Lemma lem2636703 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636704 : term97 = term102.
Proof. exact (@lem2636703 term32). Qed.
Lemma lem2636705 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636706 : term103 = term104.
Proof. exact (MK_COMB (@lem2636705) (@lem2636704)). Qed.
Lemma lem2636707 : term105 = term106.
Proof. exact (MK_COMB (@lem2636706) (@lem2636701)). Qed.
Lemma lem2636708 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2636710 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636711 : term109 = term110.
Proof. exact (@lem2636710 (NUMERAL 0) term32). Qed.
Lemma lem2636712 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636713 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636714 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636713 h1) (fun h1 : term110 = True => @lem2636712)). Qed.
Lemma lem2636715 : term110 = True.
Proof. exact (EQ_MP (@lem2636714) (@lem2636712)). Qed.
Lemma lem2636716 : term109 = True.
Proof. exact (TRANS (@lem2636711) (@lem2636715)). Qed.
Lemma lem2636717 : True = term109.
Proof. exact (SYM (@lem2636716)). Qed.
Lemma lem2636718 : term109.
Proof. exact (EQ_MP (@lem2636717) (@lem0)). Qed.
Lemma lem2636719 : term112.
Proof. exact (@lem2636708 (@lem2636718)). Qed.
Lemma lem2636721 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636722 : term109 = term110.
Proof. exact (@lem2636721 (NUMERAL 0) term32). Qed.
Lemma lem2636723 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636724 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636725 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636724 h1) (fun h1 : term110 = True => @lem2636723)). Qed.
Lemma lem2636726 : term110 = True.
Proof. exact (EQ_MP (@lem2636725) (@lem2636723)). Qed.
Lemma lem2636727 : term109 = True.
Proof. exact (TRANS (@lem2636722) (@lem2636726)). Qed.
Lemma lem2636728 : True = term109.
Proof. exact (SYM (@lem2636727)). Qed.
Lemma lem2636729 : term109.
Proof. exact (EQ_MP (@lem2636728) (@lem0)). Qed.
Lemma lem2636730 : term113.
Proof. exact (@lem2636719 (@lem2636729)). Qed.
Lemma lem2636732 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636733 : term109 = term110.
Proof. exact (@lem2636732 (NUMERAL 0) term32). Qed.
Lemma lem2636734 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636735 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636736 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636735 h1) (fun h1 : term110 = True => @lem2636734)). Qed.
Lemma lem2636737 : term110 = True.
Proof. exact (EQ_MP (@lem2636736) (@lem2636734)). Qed.
Lemma lem2636738 : term109 = True.
Proof. exact (TRANS (@lem2636733) (@lem2636737)). Qed.
Lemma lem2636739 : True = term109.
Proof. exact (SYM (@lem2636738)). Qed.
Lemma lem2636740 : term109.
Proof. exact (EQ_MP (@lem2636739) (@lem0)). Qed.
Lemma lem2636741 : term114.
Proof. exact (@lem2636730 (@lem2636740)). Qed.
Lemma lem2636743 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636744 : term117 = term118.
Proof. exact (@lem2636743 term32 term32). Qed.
Lemma lem2636745 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636746 : term120 = term32.
Proof. exact (EQ_MP (@lem2636745) (@lem940073)). Qed.
Lemma lem2636747 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636748 : term118 = term31.
Proof. exact (MK_COMB (@lem2636747) (@lem2636746)). Qed.
Lemma lem2636749 : term117 = term31.
Proof. exact (TRANS (@lem2636744) (@lem2636748)). Qed.
Lemma lem2636751 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636752 : term123 = term124.
Proof. exact (@lem2636751 term32 term32). Qed.
Lemma lem2636753 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636754 : term120 = term32.
Proof. exact (EQ_MP (@lem2636753) (@lem940073)). Qed.
Lemma lem2636755 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636756 : term118 = term31.
Proof. exact (MK_COMB (@lem2636755) (@lem2636754)). Qed.
Lemma lem2636757 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636758 : term124 = term97.
Proof. exact (MK_COMB (@lem2636757) (@lem2636756)). Qed.
Lemma lem2636759 : term123 = term97.
Proof. exact (TRANS (@lem2636752) (@lem2636758)). Qed.
Lemma lem2636760 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636761 : term125 = term103.
Proof. exact (MK_COMB (@lem2636760) (@lem2636759)). Qed.
Lemma lem2636762 : term126 = term105.
Proof. exact (MK_COMB (@lem2636761) (@lem2636749)). Qed.
Lemma lem2636764 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2636765 : term105 = term38.
Proof. exact (@lem2636764 term32). Qed.
Lemma lem2636766 : term126 = term38.
Proof. exact (TRANS (@lem2636762) (@lem2636765)). Qed.
Lemma lem2636767 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636768 : term128 = term129.
Proof. exact (MK_COMB (@lem2636767) (@lem2636766)). Qed.
Lemma lem2636769 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2636770 : term130 = term131.
Proof. exact (MK_COMB (@lem2636768) (@lem2636769)). Qed.
Lemma lem2636772 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636773 : term131 = term38.
Proof. exact (@lem2636772 term32). Qed.
Lemma lem2636774 : term130 = term38.
Proof. exact (TRANS (@lem2636770) (@lem2636773)). Qed.
Lemma lem2636776 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636777 : term117 = term118.
Proof. exact (@lem2636776 term32 term32). Qed.
Lemma lem2636778 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636779 : term120 = term32.
Proof. exact (EQ_MP (@lem2636778) (@lem940073)). Qed.
Lemma lem2636780 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636781 : term118 = term31.
Proof. exact (MK_COMB (@lem2636780) (@lem2636779)). Qed.
Lemma lem2636782 : term117 = term31.
Proof. exact (TRANS (@lem2636777) (@lem2636781)). Qed.
Lemma lem2636783 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2636784 : term133 = term131.
Proof. exact (MK_COMB (@lem2636783) (@lem2636782)). Qed.
Lemma lem2636786 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636787 : term131 = term38.
Proof. exact (@lem2636786 term32). Qed.
Lemma lem2636788 : term133 = term38.
Proof. exact (TRANS (@lem2636784) (@lem2636787)). Qed.
Lemma lem2636789 : term38 = term133.
Proof. exact (SYM (@lem2636788)). Qed.
Lemma lem2636790 : term130 = term133.
Proof. exact (TRANS (@lem2636774) (@lem2636789)). Qed.
Lemma lem2636791 : term106 = term134.
Proof. exact (@lem2636741 (@lem2636790)). Qed.
Lemma lem2636792 : term105 = term134.
Proof. exact (TRANS (@lem2636707) (@lem2636791)). Qed.
Lemma lem2636794 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2636795 : term134 = term38.
Proof. exact (@lem2636794 term38). Qed.
Lemma lem2636796 : term105 = term38.
Proof. exact (TRANS (@lem2636792) (@lem2636795)). Qed.
Lemma lem2636797 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2636798 : term136 = term129.
Proof. exact (MK_COMB (@lem2636797) (@lem2636796)). Qed.
Lemma lem2636799 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2636800 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2636798) (@lem2636799 n)). Qed.
Lemma lem2636801 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2636698 n) (@lem2636800 n)). Qed.
Lemma lem2636802 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2636803 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2636801 n) (@lem2636802 n)). Qed.
Lemma lem2636804 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2636805 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2636804) (@lem2636803 n)). Qed.
Lemma lem2636806 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2636807 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2636805 n) (@lem2636806)). Qed.
Lemma lem2636808 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2636697 n) (@lem2636807 n)). Qed.
Lemma lem2636809 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2636810 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2636808 n) (@lem2636809)). Qed.
Lemma lem2636811 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2636696 m) (@lem2636810 n)). Qed.
Lemma lem2636812 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2636588 m n) (@lem2636811 m n)). Qed.
Lemma lem2636813 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2636814 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2636812 m n) (@lem2636813)). Qed.
Lemma lem2636815 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636816 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2636815) (@lem2636814 m n)). Qed.
Lemma lem2636817 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636818 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2636816 m n) (@lem2636817)). Qed.
Lemma lem2636819 (m : int) (n : int) (h1 : term845 m n) : term257.
Proof. exact (EQ_MP (@lem2636818 m n) (@lem2636587 m n h1)). Qed.
Lemma lem2636821 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2636822 : term257 = term258.
Proof. exact (@lem2636821 term38 term97). Qed.
Lemma lem2636824 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636825 : term97 = term102.
Proof. exact (@lem2636824 term32). Qed.
Lemma lem2636827 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636828 : term38 = term134.
Proof. exact (@lem2636827 (NUMERAL 0)). Qed.
Lemma lem2636829 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2636830 : term259 = term260.
Proof. exact (MK_COMB (@lem2636829) (@lem2636828)). Qed.
Lemma lem2636831 : term258 = term261.
Proof. exact (MK_COMB (@lem2636830) (@lem2636825)). Qed.
Lemma lem2636832 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2636834 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636835 : term109 = term110.
Proof. exact (@lem2636834 (NUMERAL 0) term32). Qed.
Lemma lem2636836 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636837 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636838 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636837 h1) (fun h1 : term110 = True => @lem2636836)). Qed.
Lemma lem2636839 : term110 = True.
Proof. exact (EQ_MP (@lem2636838) (@lem2636836)). Qed.
Lemma lem2636840 : term109 = True.
Proof. exact (TRANS (@lem2636835) (@lem2636839)). Qed.
Lemma lem2636841 : True = term109.
Proof. exact (SYM (@lem2636840)). Qed.
Lemma lem2636842 : term109.
Proof. exact (EQ_MP (@lem2636841) (@lem0)). Qed.
Lemma lem2636843 : term263.
Proof. exact (@lem2636832 (@lem2636842)). Qed.
Lemma lem2636845 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636846 : term109 = term110.
Proof. exact (@lem2636845 (NUMERAL 0) term32). Qed.
Lemma lem2636847 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636848 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636849 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636848 h1) (fun h1 : term110 = True => @lem2636847)). Qed.
Lemma lem2636850 : term110 = True.
Proof. exact (EQ_MP (@lem2636849) (@lem2636847)). Qed.
Lemma lem2636851 : term109 = True.
Proof. exact (TRANS (@lem2636846) (@lem2636850)). Qed.
Lemma lem2636852 : True = term109.
Proof. exact (SYM (@lem2636851)). Qed.
Lemma lem2636853 : term109.
Proof. exact (EQ_MP (@lem2636852) (@lem0)). Qed.
Lemma lem2636854 : term261 = term264.
Proof. exact (@lem2636843 (@lem2636853)). Qed.
Lemma lem2636856 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2636857 : term123 = term124.
Proof. exact (@lem2636856 term32 term32). Qed.
Lemma lem2636858 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636859 : term120 = term32.
Proof. exact (EQ_MP (@lem2636858) (@lem940073)). Qed.
Lemma lem2636860 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636861 : term118 = term31.
Proof. exact (MK_COMB (@lem2636860) (@lem2636859)). Qed.
Lemma lem2636862 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2636863 : term124 = term97.
Proof. exact (MK_COMB (@lem2636862) (@lem2636861)). Qed.
Lemma lem2636864 : term123 = term97.
Proof. exact (TRANS (@lem2636857) (@lem2636863)). Qed.
Lemma lem2636866 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636867 : term131 = term38.
Proof. exact (@lem2636866 term32). Qed.
Lemma lem2636868 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2636869 : term265 = term259.
Proof. exact (MK_COMB (@lem2636868) (@lem2636867)). Qed.
Lemma lem2636870 : term264 = term258.
Proof. exact (MK_COMB (@lem2636869) (@lem2636864)). Qed.
Lemma lem2636872 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2636873 : term258 = term268.
Proof. exact (@lem2636872 (NUMERAL 0) term32). Qed.
Lemma lem2636874 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636875 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2636876 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636875 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2636874)). Qed.
Lemma lem2636877 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2636876) (@lem2636874)). Qed.
Lemma lem2636878 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2636879 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2636880 : term269 = (and True).
Proof. exact (MK_COMB (@lem2636879) (@lem2636878)). Qed.
Lemma lem2636881 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2636880) (@lem2636877)). Qed.
Lemma lem2636883 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2636884 : term268 = False.
Proof. exact (TRANS (@lem2636881) (@lem2636883)). Qed.
Lemma lem2636885 : term258 = False.
Proof. exact (TRANS (@lem2636873) (@lem2636884)). Qed.
Lemma lem2636886 : term264 = False.
Proof. exact (TRANS (@lem2636870) (@lem2636885)). Qed.
Lemma lem2636887 : term261 = False.
Proof. exact (TRANS (@lem2636854) (@lem2636886)). Qed.
Lemma lem2636888 : term258 = False.
Proof. exact (TRANS (@lem2636831) (@lem2636887)). Qed.
Lemma lem2636889 : term257 = False.
Proof. exact (TRANS (@lem2636822) (@lem2636888)). Qed.
Lemma lem2636890 (m : int) (n : int) (h1 : term845 m n) : False.
Proof. exact (EQ_MP (@lem2636889) (@lem2636819 m n h1)). Qed.
Lemma lem2636891 (m : int) (n : int) (h1 : term847 m n) : False.
Proof. exact (or_elim (@lem2635956 m n h1) (fun h0 : term843 m n => @lem2636423 m n h0) (fun h0 : term845 m n => @lem2636890 m n h0)). Qed.
Lemma lem2636892 (m : int) (n : int) (h1 : term850 m n) : False.
Proof. exact (or_elim (@lem2635666 m n h1) (fun h0 : term810 m n => @lem2635955 m n h0) (fun h0 : term847 m n => @lem2636891 m n h0)). Qed.
Lemma lem2636893 (m : int) (n : int) (h1 : term810 m n) : term810 m n.
Proof. exact (h1). Qed.
Lemma lem2636894 (m : int) (n : int) (h1 : term810 m n) : term808 m n.
Proof. exact (proj2 (@lem2636893 m n h1)). Qed.
Lemma lem2636895 (m : int) (n : int) (h1 : term810 m n) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2636893 m n h1)). Qed.
Lemma lem2636897 (m : int) (n : int) (h1 : term810 m n) : term158 n.
Proof. exact (proj1 (@lem2636894 m n h1)). Qed.
Lemma lem2636901 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2636902 : term229 = term109.
Proof. exact (@lem2636901 term38 term31). Qed.
Lemma lem2636904 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636905 : term31 = term99.
Proof. exact (@lem2636904 term32). Qed.
Lemma lem2636907 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636908 : term38 = term134.
Proof. exact (@lem2636907 (NUMERAL 0)). Qed.
Lemma lem2636909 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636910 : term230 = term231.
Proof. exact (MK_COMB (@lem2636909) (@lem2636908)). Qed.
Lemma lem2636911 : term109 = term232.
Proof. exact (MK_COMB (@lem2636910) (@lem2636905)). Qed.
Lemma lem2636912 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2636914 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636915 : term109 = term110.
Proof. exact (@lem2636914 (NUMERAL 0) term32). Qed.
Lemma lem2636916 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636917 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636918 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636917 h1) (fun h1 : term110 = True => @lem2636916)). Qed.
Lemma lem2636919 : term110 = True.
Proof. exact (EQ_MP (@lem2636918) (@lem2636916)). Qed.
Lemma lem2636920 : term109 = True.
Proof. exact (TRANS (@lem2636915) (@lem2636919)). Qed.
Lemma lem2636921 : True = term109.
Proof. exact (SYM (@lem2636920)). Qed.
Lemma lem2636922 : term109.
Proof. exact (EQ_MP (@lem2636921) (@lem0)). Qed.
Lemma lem2636923 : term234.
Proof. exact (@lem2636912 (@lem2636922)). Qed.
Lemma lem2636925 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636926 : term109 = term110.
Proof. exact (@lem2636925 (NUMERAL 0) term32). Qed.
Lemma lem2636927 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636928 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636929 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636928 h1) (fun h1 : term110 = True => @lem2636927)). Qed.
Lemma lem2636930 : term110 = True.
Proof. exact (EQ_MP (@lem2636929) (@lem2636927)). Qed.
Lemma lem2636931 : term109 = True.
Proof. exact (TRANS (@lem2636926) (@lem2636930)). Qed.
Lemma lem2636932 : True = term109.
Proof. exact (SYM (@lem2636931)). Qed.
Lemma lem2636933 : term109.
Proof. exact (EQ_MP (@lem2636932) (@lem0)). Qed.
Lemma lem2636934 : term232 = term235.
Proof. exact (@lem2636923 (@lem2636933)). Qed.
Lemma lem2636936 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2636937 : term117 = term118.
Proof. exact (@lem2636936 term32 term32). Qed.
Lemma lem2636938 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2636939 : term120 = term32.
Proof. exact (EQ_MP (@lem2636938) (@lem940073)). Qed.
Lemma lem2636940 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2636941 : term118 = term31.
Proof. exact (MK_COMB (@lem2636940) (@lem2636939)). Qed.
Lemma lem2636942 : term117 = term31.
Proof. exact (TRANS (@lem2636937) (@lem2636941)). Qed.
Lemma lem2636944 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2636945 : term131 = term38.
Proof. exact (@lem2636944 term32). Qed.
Lemma lem2636946 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2636947 : term236 = term230.
Proof. exact (MK_COMB (@lem2636946) (@lem2636945)). Qed.
Lemma lem2636948 : term235 = term109.
Proof. exact (MK_COMB (@lem2636947) (@lem2636942)). Qed.
Lemma lem2636950 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2636951 : term109 = term110.
Proof. exact (@lem2636950 (NUMERAL 0) term32). Qed.
Lemma lem2636952 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2636953 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2636954 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2636953 h1) (fun h1 : term110 = True => @lem2636952)). Qed.
Lemma lem2636955 : term110 = True.
Proof. exact (EQ_MP (@lem2636954) (@lem2636952)). Qed.
Lemma lem2636956 : term109 = True.
Proof. exact (TRANS (@lem2636951) (@lem2636955)). Qed.
Lemma lem2636957 : term235 = True.
Proof. exact (TRANS (@lem2636948) (@lem2636956)). Qed.
Lemma lem2636958 : term232 = True.
Proof. exact (TRANS (@lem2636934) (@lem2636957)). Qed.
Lemma lem2636959 : term109 = True.
Proof. exact (TRANS (@lem2636911) (@lem2636958)). Qed.
Lemma lem2636960 : term229 = True.
Proof. exact (TRANS (@lem2636902) (@lem2636959)). Qed.
Lemma lem2636961 : True = term229.
Proof. exact (SYM (@lem2636960)). Qed.
Lemma lem2636962 : term229.
Proof. exact (EQ_MP (@lem2636961) (@lem0)). Qed.
Lemma lem2636963 (m : int) (n : int) (h1 : term810 m n) : term237 n.
Proof. exact (conj (@lem2636962) (@lem2636897 m n h1)). Qed.
Lemma lem2636965 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2636966 (n : int) : term239 n.
Proof. exact (@lem2636965 term31 (term154 n)). Qed.
Lemma lem2636967 (m : int) (n : int) (h1 : term810 m n) : term240 n.
Proof. exact (@lem2636966 n (@lem2636963 m n h1)). Qed.
Lemma lem2636968 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2636969 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2636970 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2636969) (@lem2636968 n)). Qed.
Lemma lem2636971 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636972 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2636970 n) (@lem2636971)). Qed.
Lemma lem2636973 (m : int) (n : int) (h1 : term810 m n) : term158 n.
Proof. exact (EQ_MP (@lem2636972 n) (@lem2636967 m n h1)). Qed.
Lemma lem2636975 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2636976 (n : int) : term287 n.
Proof. exact (@lem2636975 (real_of_int n)). Qed.
Lemma lem2636977 (m : int) (n : int) (h1 : term810 m n) : term288 n.
Proof. exact (@lem2636976 n (@lem2636895 m n h1)). Qed.
Lemma lem2636978 (m : int) (n : int) (h1 : term810 m n) : term291 n.
Proof. exact (@lem2636977 m n h1 term31). Qed.
Lemma lem2636979 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2636980 (m : int) (n : int) (h1 : term810 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2636979 n) (@lem2636978 m n h1)). Qed.
Lemma lem2636981 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2636982 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2636983 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2636982) (@lem2636981 n)). Qed.
Lemma lem2636984 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2636985 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2636983 n) (@lem2636984)). Qed.
Lemma lem2636986 (m : int) (n : int) (h1 : term810 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2636985 n) (@lem2636980 m n h1)). Qed.
Lemma lem2636987 (m : int) (n : int) (h1 : term810 m n) : term248 n.
Proof. exact (conj (@lem2636986 m n h1) (@lem2636973 m n h1)). Qed.
Lemma lem2636989 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2636990 (n : int) : term250 n.
Proof. exact (@lem2636989 (real_of_int n) (term154 n)). Qed.
Lemma lem2636991 (m : int) (n : int) (h1 : term810 m n) : term251 n.
Proof. exact (@lem2636990 n (@lem2636987 m n h1)). Qed.
Lemma lem2636992 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2636993 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2636995 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2636996 : term31 = term99.
Proof. exact (@lem2636995 term32). Qed.
Lemma lem2636998 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2636999 : term97 = term102.
Proof. exact (@lem2636998 term32). Qed.
Lemma lem2637000 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637001 : term103 = term104.
Proof. exact (MK_COMB (@lem2637000) (@lem2636999)). Qed.
Lemma lem2637002 : term105 = term106.
Proof. exact (MK_COMB (@lem2637001) (@lem2636996)). Qed.
Lemma lem2637003 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2637005 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637006 : term109 = term110.
Proof. exact (@lem2637005 (NUMERAL 0) term32). Qed.
Lemma lem2637007 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637008 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637009 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637008 h1) (fun h1 : term110 = True => @lem2637007)). Qed.
Lemma lem2637010 : term110 = True.
Proof. exact (EQ_MP (@lem2637009) (@lem2637007)). Qed.
Lemma lem2637011 : term109 = True.
Proof. exact (TRANS (@lem2637006) (@lem2637010)). Qed.
Lemma lem2637012 : True = term109.
Proof. exact (SYM (@lem2637011)). Qed.
Lemma lem2637013 : term109.
Proof. exact (EQ_MP (@lem2637012) (@lem0)). Qed.
Lemma lem2637014 : term112.
Proof. exact (@lem2637003 (@lem2637013)). Qed.
Lemma lem2637016 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637017 : term109 = term110.
Proof. exact (@lem2637016 (NUMERAL 0) term32). Qed.
Lemma lem2637018 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637019 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637020 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637019 h1) (fun h1 : term110 = True => @lem2637018)). Qed.
Lemma lem2637021 : term110 = True.
Proof. exact (EQ_MP (@lem2637020) (@lem2637018)). Qed.
Lemma lem2637022 : term109 = True.
Proof. exact (TRANS (@lem2637017) (@lem2637021)). Qed.
Lemma lem2637023 : True = term109.
Proof. exact (SYM (@lem2637022)). Qed.
Lemma lem2637024 : term109.
Proof. exact (EQ_MP (@lem2637023) (@lem0)). Qed.
Lemma lem2637025 : term113.
Proof. exact (@lem2637014 (@lem2637024)). Qed.
Lemma lem2637027 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637028 : term109 = term110.
Proof. exact (@lem2637027 (NUMERAL 0) term32). Qed.
Lemma lem2637029 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637030 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637031 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637030 h1) (fun h1 : term110 = True => @lem2637029)). Qed.
Lemma lem2637032 : term110 = True.
Proof. exact (EQ_MP (@lem2637031) (@lem2637029)). Qed.
Lemma lem2637033 : term109 = True.
Proof. exact (TRANS (@lem2637028) (@lem2637032)). Qed.
Lemma lem2637034 : True = term109.
Proof. exact (SYM (@lem2637033)). Qed.
Lemma lem2637035 : term109.
Proof. exact (EQ_MP (@lem2637034) (@lem0)). Qed.
Lemma lem2637036 : term114.
Proof. exact (@lem2637025 (@lem2637035)). Qed.
Lemma lem2637038 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637039 : term117 = term118.
Proof. exact (@lem2637038 term32 term32). Qed.
Lemma lem2637040 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637041 : term120 = term32.
Proof. exact (EQ_MP (@lem2637040) (@lem940073)). Qed.
Lemma lem2637042 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637043 : term118 = term31.
Proof. exact (MK_COMB (@lem2637042) (@lem2637041)). Qed.
Lemma lem2637044 : term117 = term31.
Proof. exact (TRANS (@lem2637039) (@lem2637043)). Qed.
Lemma lem2637046 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637047 : term123 = term124.
Proof. exact (@lem2637046 term32 term32). Qed.
Lemma lem2637048 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637049 : term120 = term32.
Proof. exact (EQ_MP (@lem2637048) (@lem940073)). Qed.
Lemma lem2637050 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637051 : term118 = term31.
Proof. exact (MK_COMB (@lem2637050) (@lem2637049)). Qed.
Lemma lem2637052 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637053 : term124 = term97.
Proof. exact (MK_COMB (@lem2637052) (@lem2637051)). Qed.
Lemma lem2637054 : term123 = term97.
Proof. exact (TRANS (@lem2637047) (@lem2637053)). Qed.
Lemma lem2637055 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637056 : term125 = term103.
Proof. exact (MK_COMB (@lem2637055) (@lem2637054)). Qed.
Lemma lem2637057 : term126 = term105.
Proof. exact (MK_COMB (@lem2637056) (@lem2637044)). Qed.
Lemma lem2637059 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2637060 : term105 = term38.
Proof. exact (@lem2637059 term32). Qed.
Lemma lem2637061 : term126 = term38.
Proof. exact (TRANS (@lem2637057) (@lem2637060)). Qed.
Lemma lem2637062 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637063 : term128 = term129.
Proof. exact (MK_COMB (@lem2637062) (@lem2637061)). Qed.
Lemma lem2637064 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2637065 : term130 = term131.
Proof. exact (MK_COMB (@lem2637063) (@lem2637064)). Qed.
Lemma lem2637067 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637068 : term131 = term38.
Proof. exact (@lem2637067 term32). Qed.
Lemma lem2637069 : term130 = term38.
Proof. exact (TRANS (@lem2637065) (@lem2637068)). Qed.
Lemma lem2637071 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637072 : term117 = term118.
Proof. exact (@lem2637071 term32 term32). Qed.
Lemma lem2637073 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637074 : term120 = term32.
Proof. exact (EQ_MP (@lem2637073) (@lem940073)). Qed.
Lemma lem2637075 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637076 : term118 = term31.
Proof. exact (MK_COMB (@lem2637075) (@lem2637074)). Qed.
Lemma lem2637077 : term117 = term31.
Proof. exact (TRANS (@lem2637072) (@lem2637076)). Qed.
Lemma lem2637078 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2637079 : term133 = term131.
Proof. exact (MK_COMB (@lem2637078) (@lem2637077)). Qed.
Lemma lem2637081 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637082 : term131 = term38.
Proof. exact (@lem2637081 term32). Qed.
Lemma lem2637083 : term133 = term38.
Proof. exact (TRANS (@lem2637079) (@lem2637082)). Qed.
Lemma lem2637084 : term38 = term133.
Proof. exact (SYM (@lem2637083)). Qed.
Lemma lem2637085 : term130 = term133.
Proof. exact (TRANS (@lem2637069) (@lem2637084)). Qed.
Lemma lem2637086 : term106 = term134.
Proof. exact (@lem2637036 (@lem2637085)). Qed.
Lemma lem2637087 : term105 = term134.
Proof. exact (TRANS (@lem2637002) (@lem2637086)). Qed.
Lemma lem2637089 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2637090 : term134 = term38.
Proof. exact (@lem2637089 term38). Qed.
Lemma lem2637091 : term105 = term38.
Proof. exact (TRANS (@lem2637087) (@lem2637090)). Qed.
Lemma lem2637092 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637093 : term136 = term129.
Proof. exact (MK_COMB (@lem2637092) (@lem2637091)). Qed.
Lemma lem2637094 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2637095 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2637093) (@lem2637094 n)). Qed.
Lemma lem2637096 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2636993 n) (@lem2637095 n)). Qed.
Lemma lem2637097 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2637098 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2637096 n) (@lem2637097 n)). Qed.
Lemma lem2637099 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637100 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2637099) (@lem2637098 n)). Qed.
Lemma lem2637101 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2637102 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2637100 n) (@lem2637101)). Qed.
Lemma lem2637103 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2636992 n) (@lem2637102 n)). Qed.
Lemma lem2637104 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2637105 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2637103 n) (@lem2637104)). Qed.
Lemma lem2637106 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637107 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2637106) (@lem2637105 n)). Qed.
Lemma lem2637108 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637109 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2637107 n) (@lem2637108)). Qed.
Lemma lem2637110 (m : int) (n : int) (h1 : term810 m n) : term257.
Proof. exact (EQ_MP (@lem2637109 n) (@lem2636991 m n h1)). Qed.
Lemma lem2637112 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2637113 : term257 = term258.
Proof. exact (@lem2637112 term38 term97). Qed.
Lemma lem2637115 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637116 : term97 = term102.
Proof. exact (@lem2637115 term32). Qed.
Lemma lem2637118 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637119 : term38 = term134.
Proof. exact (@lem2637118 (NUMERAL 0)). Qed.
Lemma lem2637120 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637121 : term259 = term260.
Proof. exact (MK_COMB (@lem2637120) (@lem2637119)). Qed.
Lemma lem2637122 : term258 = term261.
Proof. exact (MK_COMB (@lem2637121) (@lem2637116)). Qed.
Lemma lem2637123 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2637125 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637126 : term109 = term110.
Proof. exact (@lem2637125 (NUMERAL 0) term32). Qed.
Lemma lem2637127 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637128 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637129 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637128 h1) (fun h1 : term110 = True => @lem2637127)). Qed.
Lemma lem2637130 : term110 = True.
Proof. exact (EQ_MP (@lem2637129) (@lem2637127)). Qed.
Lemma lem2637131 : term109 = True.
Proof. exact (TRANS (@lem2637126) (@lem2637130)). Qed.
Lemma lem2637132 : True = term109.
Proof. exact (SYM (@lem2637131)). Qed.
Lemma lem2637133 : term109.
Proof. exact (EQ_MP (@lem2637132) (@lem0)). Qed.
Lemma lem2637134 : term263.
Proof. exact (@lem2637123 (@lem2637133)). Qed.
Lemma lem2637136 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637137 : term109 = term110.
Proof. exact (@lem2637136 (NUMERAL 0) term32). Qed.
Lemma lem2637138 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637139 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637140 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637139 h1) (fun h1 : term110 = True => @lem2637138)). Qed.
Lemma lem2637141 : term110 = True.
Proof. exact (EQ_MP (@lem2637140) (@lem2637138)). Qed.
Lemma lem2637142 : term109 = True.
Proof. exact (TRANS (@lem2637137) (@lem2637141)). Qed.
Lemma lem2637143 : True = term109.
Proof. exact (SYM (@lem2637142)). Qed.
Lemma lem2637144 : term109.
Proof. exact (EQ_MP (@lem2637143) (@lem0)). Qed.
Lemma lem2637145 : term261 = term264.
Proof. exact (@lem2637134 (@lem2637144)). Qed.
Lemma lem2637147 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637148 : term123 = term124.
Proof. exact (@lem2637147 term32 term32). Qed.
Lemma lem2637149 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637150 : term120 = term32.
Proof. exact (EQ_MP (@lem2637149) (@lem940073)). Qed.
Lemma lem2637151 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637152 : term118 = term31.
Proof. exact (MK_COMB (@lem2637151) (@lem2637150)). Qed.
Lemma lem2637153 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637154 : term124 = term97.
Proof. exact (MK_COMB (@lem2637153) (@lem2637152)). Qed.
Lemma lem2637155 : term123 = term97.
Proof. exact (TRANS (@lem2637148) (@lem2637154)). Qed.
Lemma lem2637157 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637158 : term131 = term38.
Proof. exact (@lem2637157 term32). Qed.
Lemma lem2637159 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637160 : term265 = term259.
Proof. exact (MK_COMB (@lem2637159) (@lem2637158)). Qed.
Lemma lem2637161 : term264 = term258.
Proof. exact (MK_COMB (@lem2637160) (@lem2637155)). Qed.
Lemma lem2637163 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2637164 : term258 = term268.
Proof. exact (@lem2637163 (NUMERAL 0) term32). Qed.
Lemma lem2637165 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637166 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2637167 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637166 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2637165)). Qed.
Lemma lem2637168 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2637167) (@lem2637165)). Qed.
Lemma lem2637169 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2637170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2637171 : term269 = (and True).
Proof. exact (MK_COMB (@lem2637170) (@lem2637169)). Qed.
Lemma lem2637172 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2637171) (@lem2637168)). Qed.
Lemma lem2637174 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2637175 : term268 = False.
Proof. exact (TRANS (@lem2637172) (@lem2637174)). Qed.
Lemma lem2637176 : term258 = False.
Proof. exact (TRANS (@lem2637164) (@lem2637175)). Qed.
Lemma lem2637177 : term264 = False.
Proof. exact (TRANS (@lem2637161) (@lem2637176)). Qed.
Lemma lem2637178 : term261 = False.
Proof. exact (TRANS (@lem2637145) (@lem2637177)). Qed.
Lemma lem2637179 : term258 = False.
Proof. exact (TRANS (@lem2637122) (@lem2637178)). Qed.
Lemma lem2637180 : term257 = False.
Proof. exact (TRANS (@lem2637113) (@lem2637179)). Qed.
Lemma lem2637181 (m : int) (n : int) (h1 : term810 m n) : False.
Proof. exact (EQ_MP (@lem2637180) (@lem2637110 m n h1)). Qed.
Lemma lem2637182 (m : int) (n : int) (h1 : term852 m n) : False.
Proof. exact (or_elim (@lem2635665 m n h1) (fun h0 : term850 m n => @lem2636892 m n h0) (fun h0 : term810 m n => @lem2637181 m n h0)). Qed.
Lemma lem2637183 (m : int) (n : int) (h1 : term882 m n) : term882 m n.
Proof. exact (h1). Qed.
Lemma lem2637184 (m : int) (n : int) (h1 : term880 m n) : term880 m n.
Proof. exact (h1). Qed.
Lemma lem2637185 (m : int) (n : int) (h1 : term854 m n) : term854 m n.
Proof. exact (h1). Qed.
Lemma lem2637186 (m : int) (n : int) (h1 : term854 m n) : term853 m n.
Proof. exact (proj2 (@lem2637185 m n h1)). Qed.
Lemma lem2637187 (m : int) (n : int) (h1 : term854 m n) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2637185 m n h1)). Qed.
Lemma lem2637189 (m : int) (n : int) (h1 : term854 m n) : term167 n.
Proof. exact (proj1 (@lem2637186 m n h1)). Qed.
Lemma lem2637193 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2637194 : term229 = term109.
Proof. exact (@lem2637193 term38 term31). Qed.
Lemma lem2637196 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637197 : term31 = term99.
Proof. exact (@lem2637196 term32). Qed.
Lemma lem2637199 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637200 : term38 = term134.
Proof. exact (@lem2637199 (NUMERAL 0)). Qed.
Lemma lem2637201 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637202 : term230 = term231.
Proof. exact (MK_COMB (@lem2637201) (@lem2637200)). Qed.
Lemma lem2637203 : term109 = term232.
Proof. exact (MK_COMB (@lem2637202) (@lem2637197)). Qed.
Lemma lem2637204 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2637206 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637207 : term109 = term110.
Proof. exact (@lem2637206 (NUMERAL 0) term32). Qed.
Lemma lem2637208 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637209 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637210 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637209 h1) (fun h1 : term110 = True => @lem2637208)). Qed.
Lemma lem2637211 : term110 = True.
Proof. exact (EQ_MP (@lem2637210) (@lem2637208)). Qed.
Lemma lem2637212 : term109 = True.
Proof. exact (TRANS (@lem2637207) (@lem2637211)). Qed.
Lemma lem2637213 : True = term109.
Proof. exact (SYM (@lem2637212)). Qed.
Lemma lem2637214 : term109.
Proof. exact (EQ_MP (@lem2637213) (@lem0)). Qed.
Lemma lem2637215 : term234.
Proof. exact (@lem2637204 (@lem2637214)). Qed.
Lemma lem2637217 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637218 : term109 = term110.
Proof. exact (@lem2637217 (NUMERAL 0) term32). Qed.
Lemma lem2637219 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637220 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637221 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637220 h1) (fun h1 : term110 = True => @lem2637219)). Qed.
Lemma lem2637222 : term110 = True.
Proof. exact (EQ_MP (@lem2637221) (@lem2637219)). Qed.
Lemma lem2637223 : term109 = True.
Proof. exact (TRANS (@lem2637218) (@lem2637222)). Qed.
Lemma lem2637224 : True = term109.
Proof. exact (SYM (@lem2637223)). Qed.
Lemma lem2637225 : term109.
Proof. exact (EQ_MP (@lem2637224) (@lem0)). Qed.
Lemma lem2637226 : term232 = term235.
Proof. exact (@lem2637215 (@lem2637225)). Qed.
Lemma lem2637228 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637229 : term117 = term118.
Proof. exact (@lem2637228 term32 term32). Qed.
Lemma lem2637230 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637231 : term120 = term32.
Proof. exact (EQ_MP (@lem2637230) (@lem940073)). Qed.
Lemma lem2637232 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637233 : term118 = term31.
Proof. exact (MK_COMB (@lem2637232) (@lem2637231)). Qed.
Lemma lem2637234 : term117 = term31.
Proof. exact (TRANS (@lem2637229) (@lem2637233)). Qed.
Lemma lem2637236 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637237 : term131 = term38.
Proof. exact (@lem2637236 term32). Qed.
Lemma lem2637238 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637239 : term236 = term230.
Proof. exact (MK_COMB (@lem2637238) (@lem2637237)). Qed.
Lemma lem2637240 : term235 = term109.
Proof. exact (MK_COMB (@lem2637239) (@lem2637234)). Qed.
Lemma lem2637242 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637243 : term109 = term110.
Proof. exact (@lem2637242 (NUMERAL 0) term32). Qed.
Lemma lem2637244 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637245 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637246 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637245 h1) (fun h1 : term110 = True => @lem2637244)). Qed.
Lemma lem2637247 : term110 = True.
Proof. exact (EQ_MP (@lem2637246) (@lem2637244)). Qed.
Lemma lem2637248 : term109 = True.
Proof. exact (TRANS (@lem2637243) (@lem2637247)). Qed.
Lemma lem2637249 : term235 = True.
Proof. exact (TRANS (@lem2637240) (@lem2637248)). Qed.
Lemma lem2637250 : term232 = True.
Proof. exact (TRANS (@lem2637226) (@lem2637249)). Qed.
Lemma lem2637251 : term109 = True.
Proof. exact (TRANS (@lem2637203) (@lem2637250)). Qed.
Lemma lem2637252 : term229 = True.
Proof. exact (TRANS (@lem2637194) (@lem2637251)). Qed.
Lemma lem2637253 : True = term229.
Proof. exact (SYM (@lem2637252)). Qed.
Lemma lem2637254 : term229.
Proof. exact (EQ_MP (@lem2637253) (@lem0)). Qed.
Lemma lem2637255 (m : int) (n : int) (h1 : term854 m n) : term271 n.
Proof. exact (conj (@lem2637254) (@lem2637189 m n h1)). Qed.
Lemma lem2637257 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2637258 (n : int) : term272 n.
Proof. exact (@lem2637257 term31 (term164 n)). Qed.
Lemma lem2637259 (m : int) (n : int) (h1 : term854 m n) : term273 n.
Proof. exact (@lem2637258 n (@lem2637255 m n h1)). Qed.
Lemma lem2637260 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2637261 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637262 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2637261) (@lem2637260 n)). Qed.
Lemma lem2637263 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637264 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2637262 n) (@lem2637263)). Qed.
Lemma lem2637265 (m : int) (n : int) (h1 : term854 m n) : term167 n.
Proof. exact (EQ_MP (@lem2637264 n) (@lem2637259 m n h1)). Qed.
Lemma lem2637267 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2637268 (n : int) : term287 n.
Proof. exact (@lem2637267 (real_of_int n)). Qed.
Lemma lem2637269 (m : int) (n : int) (h1 : term854 m n) : term288 n.
Proof. exact (@lem2637268 n (@lem2637187 m n h1)). Qed.
Lemma lem2637270 (m : int) (n : int) (h1 : term854 m n) : term289 n.
Proof. exact (@lem2637269 m n h1 term97). Qed.
Lemma lem2637271 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2637278 (m : int) (n : int) (h1 : term854 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2637271 n) (@lem2637270 m n h1)). Qed.
Lemma lem2637279 (m : int) (n : int) (h1 : term854 m n) : term270 n.
Proof. exact (conj (@lem2637278 m n h1) (@lem2637265 m n h1)). Qed.
Lemma lem2637281 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2637282 (n : int) : term279 n.
Proof. exact (@lem2637281 (term94 n) (term164 n)). Qed.
Lemma lem2637283 (m : int) (n : int) (h1 : term854 m n) : term280 n.
Proof. exact (@lem2637282 n (@lem2637279 m n h1)). Qed.
Lemma lem2637284 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2637285 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2637287 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637288 : term31 = term99.
Proof. exact (@lem2637287 term32). Qed.
Lemma lem2637290 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637291 : term97 = term102.
Proof. exact (@lem2637290 term32). Qed.
Lemma lem2637292 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637293 : term103 = term104.
Proof. exact (MK_COMB (@lem2637292) (@lem2637291)). Qed.
Lemma lem2637294 : term105 = term106.
Proof. exact (MK_COMB (@lem2637293) (@lem2637288)). Qed.
Lemma lem2637295 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2637297 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637298 : term109 = term110.
Proof. exact (@lem2637297 (NUMERAL 0) term32). Qed.
Lemma lem2637299 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637300 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637301 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637300 h1) (fun h1 : term110 = True => @lem2637299)). Qed.
Lemma lem2637302 : term110 = True.
Proof. exact (EQ_MP (@lem2637301) (@lem2637299)). Qed.
Lemma lem2637303 : term109 = True.
Proof. exact (TRANS (@lem2637298) (@lem2637302)). Qed.
Lemma lem2637304 : True = term109.
Proof. exact (SYM (@lem2637303)). Qed.
Lemma lem2637305 : term109.
Proof. exact (EQ_MP (@lem2637304) (@lem0)). Qed.
Lemma lem2637306 : term112.
Proof. exact (@lem2637295 (@lem2637305)). Qed.
Lemma lem2637308 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637309 : term109 = term110.
Proof. exact (@lem2637308 (NUMERAL 0) term32). Qed.
Lemma lem2637310 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637311 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637312 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637311 h1) (fun h1 : term110 = True => @lem2637310)). Qed.
Lemma lem2637313 : term110 = True.
Proof. exact (EQ_MP (@lem2637312) (@lem2637310)). Qed.
Lemma lem2637314 : term109 = True.
Proof. exact (TRANS (@lem2637309) (@lem2637313)). Qed.
Lemma lem2637315 : True = term109.
Proof. exact (SYM (@lem2637314)). Qed.
Lemma lem2637316 : term109.
Proof. exact (EQ_MP (@lem2637315) (@lem0)). Qed.
Lemma lem2637317 : term113.
Proof. exact (@lem2637306 (@lem2637316)). Qed.
Lemma lem2637319 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637320 : term109 = term110.
Proof. exact (@lem2637319 (NUMERAL 0) term32). Qed.
Lemma lem2637321 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637322 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637323 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637322 h1) (fun h1 : term110 = True => @lem2637321)). Qed.
Lemma lem2637324 : term110 = True.
Proof. exact (EQ_MP (@lem2637323) (@lem2637321)). Qed.
Lemma lem2637325 : term109 = True.
Proof. exact (TRANS (@lem2637320) (@lem2637324)). Qed.
Lemma lem2637326 : True = term109.
Proof. exact (SYM (@lem2637325)). Qed.
Lemma lem2637327 : term109.
Proof. exact (EQ_MP (@lem2637326) (@lem0)). Qed.
Lemma lem2637328 : term114.
Proof. exact (@lem2637317 (@lem2637327)). Qed.
Lemma lem2637330 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637331 : term117 = term118.
Proof. exact (@lem2637330 term32 term32). Qed.
Lemma lem2637332 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637333 : term120 = term32.
Proof. exact (EQ_MP (@lem2637332) (@lem940073)). Qed.
Lemma lem2637334 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637335 : term118 = term31.
Proof. exact (MK_COMB (@lem2637334) (@lem2637333)). Qed.
Lemma lem2637336 : term117 = term31.
Proof. exact (TRANS (@lem2637331) (@lem2637335)). Qed.
Lemma lem2637338 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637339 : term123 = term124.
Proof. exact (@lem2637338 term32 term32). Qed.
Lemma lem2637340 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637341 : term120 = term32.
Proof. exact (EQ_MP (@lem2637340) (@lem940073)). Qed.
Lemma lem2637342 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637343 : term118 = term31.
Proof. exact (MK_COMB (@lem2637342) (@lem2637341)). Qed.
Lemma lem2637344 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637345 : term124 = term97.
Proof. exact (MK_COMB (@lem2637344) (@lem2637343)). Qed.
Lemma lem2637346 : term123 = term97.
Proof. exact (TRANS (@lem2637339) (@lem2637345)). Qed.
Lemma lem2637347 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637348 : term125 = term103.
Proof. exact (MK_COMB (@lem2637347) (@lem2637346)). Qed.
Lemma lem2637349 : term126 = term105.
Proof. exact (MK_COMB (@lem2637348) (@lem2637336)). Qed.
Lemma lem2637351 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2637352 : term105 = term38.
Proof. exact (@lem2637351 term32). Qed.
Lemma lem2637353 : term126 = term38.
Proof. exact (TRANS (@lem2637349) (@lem2637352)). Qed.
Lemma lem2637354 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637355 : term128 = term129.
Proof. exact (MK_COMB (@lem2637354) (@lem2637353)). Qed.
Lemma lem2637356 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2637357 : term130 = term131.
Proof. exact (MK_COMB (@lem2637355) (@lem2637356)). Qed.
Lemma lem2637359 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637360 : term131 = term38.
Proof. exact (@lem2637359 term32). Qed.
Lemma lem2637361 : term130 = term38.
Proof. exact (TRANS (@lem2637357) (@lem2637360)). Qed.
Lemma lem2637363 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637364 : term117 = term118.
Proof. exact (@lem2637363 term32 term32). Qed.
Lemma lem2637365 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637366 : term120 = term32.
Proof. exact (EQ_MP (@lem2637365) (@lem940073)). Qed.
Lemma lem2637367 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637368 : term118 = term31.
Proof. exact (MK_COMB (@lem2637367) (@lem2637366)). Qed.
Lemma lem2637369 : term117 = term31.
Proof. exact (TRANS (@lem2637364) (@lem2637368)). Qed.
Lemma lem2637370 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2637371 : term133 = term131.
Proof. exact (MK_COMB (@lem2637370) (@lem2637369)). Qed.
Lemma lem2637373 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637374 : term131 = term38.
Proof. exact (@lem2637373 term32). Qed.
Lemma lem2637375 : term133 = term38.
Proof. exact (TRANS (@lem2637371) (@lem2637374)). Qed.
Lemma lem2637376 : term38 = term133.
Proof. exact (SYM (@lem2637375)). Qed.
Lemma lem2637377 : term130 = term133.
Proof. exact (TRANS (@lem2637361) (@lem2637376)). Qed.
Lemma lem2637378 : term106 = term134.
Proof. exact (@lem2637328 (@lem2637377)). Qed.
Lemma lem2637379 : term105 = term134.
Proof. exact (TRANS (@lem2637294) (@lem2637378)). Qed.
Lemma lem2637381 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2637382 : term134 = term38.
Proof. exact (@lem2637381 term38). Qed.
Lemma lem2637383 : term105 = term38.
Proof. exact (TRANS (@lem2637379) (@lem2637382)). Qed.
Lemma lem2637384 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637385 : term136 = term129.
Proof. exact (MK_COMB (@lem2637384) (@lem2637383)). Qed.
Lemma lem2637386 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2637387 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2637385) (@lem2637386 n)). Qed.
Lemma lem2637388 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2637285 n) (@lem2637387 n)). Qed.
Lemma lem2637389 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2637390 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2637388 n) (@lem2637389 n)). Qed.
Lemma lem2637391 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637392 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2637391) (@lem2637390 n)). Qed.
Lemma lem2637393 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2637394 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2637392 n) (@lem2637393)). Qed.
Lemma lem2637395 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2637284 n) (@lem2637394 n)). Qed.
Lemma lem2637396 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2637397 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2637395 n) (@lem2637396)). Qed.
Lemma lem2637398 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637399 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2637398) (@lem2637397 n)). Qed.
Lemma lem2637400 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637401 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2637399 n) (@lem2637400)). Qed.
Lemma lem2637402 (m : int) (n : int) (h1 : term854 m n) : term257.
Proof. exact (EQ_MP (@lem2637401 n) (@lem2637283 m n h1)). Qed.
Lemma lem2637404 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2637405 : term257 = term258.
Proof. exact (@lem2637404 term38 term97). Qed.
Lemma lem2637407 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637408 : term97 = term102.
Proof. exact (@lem2637407 term32). Qed.
Lemma lem2637410 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637411 : term38 = term134.
Proof. exact (@lem2637410 (NUMERAL 0)). Qed.
Lemma lem2637412 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637413 : term259 = term260.
Proof. exact (MK_COMB (@lem2637412) (@lem2637411)). Qed.
Lemma lem2637414 : term258 = term261.
Proof. exact (MK_COMB (@lem2637413) (@lem2637408)). Qed.
Lemma lem2637415 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2637417 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637418 : term109 = term110.
Proof. exact (@lem2637417 (NUMERAL 0) term32). Qed.
Lemma lem2637419 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637420 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637421 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637420 h1) (fun h1 : term110 = True => @lem2637419)). Qed.
Lemma lem2637422 : term110 = True.
Proof. exact (EQ_MP (@lem2637421) (@lem2637419)). Qed.
Lemma lem2637423 : term109 = True.
Proof. exact (TRANS (@lem2637418) (@lem2637422)). Qed.
Lemma lem2637424 : True = term109.
Proof. exact (SYM (@lem2637423)). Qed.
Lemma lem2637425 : term109.
Proof. exact (EQ_MP (@lem2637424) (@lem0)). Qed.
Lemma lem2637426 : term263.
Proof. exact (@lem2637415 (@lem2637425)). Qed.
Lemma lem2637428 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637429 : term109 = term110.
Proof. exact (@lem2637428 (NUMERAL 0) term32). Qed.
Lemma lem2637430 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637431 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637432 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637431 h1) (fun h1 : term110 = True => @lem2637430)). Qed.
Lemma lem2637433 : term110 = True.
Proof. exact (EQ_MP (@lem2637432) (@lem2637430)). Qed.
Lemma lem2637434 : term109 = True.
Proof. exact (TRANS (@lem2637429) (@lem2637433)). Qed.
Lemma lem2637435 : True = term109.
Proof. exact (SYM (@lem2637434)). Qed.
Lemma lem2637436 : term109.
Proof. exact (EQ_MP (@lem2637435) (@lem0)). Qed.
Lemma lem2637437 : term261 = term264.
Proof. exact (@lem2637426 (@lem2637436)). Qed.
Lemma lem2637439 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637440 : term123 = term124.
Proof. exact (@lem2637439 term32 term32). Qed.
Lemma lem2637441 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637442 : term120 = term32.
Proof. exact (EQ_MP (@lem2637441) (@lem940073)). Qed.
Lemma lem2637443 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637444 : term118 = term31.
Proof. exact (MK_COMB (@lem2637443) (@lem2637442)). Qed.
Lemma lem2637445 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637446 : term124 = term97.
Proof. exact (MK_COMB (@lem2637445) (@lem2637444)). Qed.
Lemma lem2637447 : term123 = term97.
Proof. exact (TRANS (@lem2637440) (@lem2637446)). Qed.
Lemma lem2637449 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637450 : term131 = term38.
Proof. exact (@lem2637449 term32). Qed.
Lemma lem2637451 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637452 : term265 = term259.
Proof. exact (MK_COMB (@lem2637451) (@lem2637450)). Qed.
Lemma lem2637453 : term264 = term258.
Proof. exact (MK_COMB (@lem2637452) (@lem2637447)). Qed.
Lemma lem2637455 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2637456 : term258 = term268.
Proof. exact (@lem2637455 (NUMERAL 0) term32). Qed.
Lemma lem2637457 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637458 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2637459 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637458 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2637457)). Qed.
Lemma lem2637460 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2637459) (@lem2637457)). Qed.
Lemma lem2637461 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2637462 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2637463 : term269 = (and True).
Proof. exact (MK_COMB (@lem2637462) (@lem2637461)). Qed.
Lemma lem2637464 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2637463) (@lem2637460)). Qed.
Lemma lem2637466 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2637467 : term268 = False.
Proof. exact (TRANS (@lem2637464) (@lem2637466)). Qed.
Lemma lem2637468 : term258 = False.
Proof. exact (TRANS (@lem2637456) (@lem2637467)). Qed.
Lemma lem2637469 : term264 = False.
Proof. exact (TRANS (@lem2637453) (@lem2637468)). Qed.
Lemma lem2637470 : term261 = False.
Proof. exact (TRANS (@lem2637437) (@lem2637469)). Qed.
Lemma lem2637471 : term258 = False.
Proof. exact (TRANS (@lem2637414) (@lem2637470)). Qed.
Lemma lem2637472 : term257 = False.
Proof. exact (TRANS (@lem2637405) (@lem2637471)). Qed.
Lemma lem2637473 (m : int) (n : int) (h1 : term854 m n) : False.
Proof. exact (EQ_MP (@lem2637472) (@lem2637402 m n h1)). Qed.
Lemma lem2637474 (m : int) (n : int) (h1 : term877 m n) : term877 m n.
Proof. exact (h1). Qed.
Lemma lem2637475 (m : int) (n : int) (h1 : term873 m n) : term873 m n.
Proof. exact (h1). Qed.
Lemma lem2637476 (m : int) (n : int) (h1 : term873 m n) : term872 m n.
Proof. exact (proj2 (@lem2637475 m n h1)). Qed.
Lemma lem2637478 (m : int) (n : int) (h1 : term873 m n) : term853 m n.
Proof. exact (proj2 (@lem2637476 m n h1)). Qed.
Lemma lem2637479 (m : int) (n : int) (h1 : term873 m n) : term716 m n.
Proof. exact (proj1 (@lem2637476 m n h1)). Qed.
Lemma lem2637480 (m : int) (n : int) (h1 : term873 m n) : term714 m n.
Proof. exact (proj2 (@lem2637479 m n h1)). Qed.
Lemma lem2637482 (m : int) (n : int) (h1 : term873 m n) : term807 m n.
Proof. exact (proj2 (@lem2637478 m n h1)). Qed.
Lemma lem2637485 (m : int) (n : int) (h1 : term873 m n) : term829 m n.
Proof. exact (proj1 (@lem2637482 m n h1)). Qed.
Lemma lem2637487 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2637488 : term229 = term109.
Proof. exact (@lem2637487 term38 term31). Qed.
Lemma lem2637490 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637491 : term31 = term99.
Proof. exact (@lem2637490 term32). Qed.
Lemma lem2637493 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637494 : term38 = term134.
Proof. exact (@lem2637493 (NUMERAL 0)). Qed.
Lemma lem2637495 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637496 : term230 = term231.
Proof. exact (MK_COMB (@lem2637495) (@lem2637494)). Qed.
Lemma lem2637497 : term109 = term232.
Proof. exact (MK_COMB (@lem2637496) (@lem2637491)). Qed.
Lemma lem2637498 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2637500 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637501 : term109 = term110.
Proof. exact (@lem2637500 (NUMERAL 0) term32). Qed.
Lemma lem2637502 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637503 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637504 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637503 h1) (fun h1 : term110 = True => @lem2637502)). Qed.
Lemma lem2637505 : term110 = True.
Proof. exact (EQ_MP (@lem2637504) (@lem2637502)). Qed.
Lemma lem2637506 : term109 = True.
Proof. exact (TRANS (@lem2637501) (@lem2637505)). Qed.
Lemma lem2637507 : True = term109.
Proof. exact (SYM (@lem2637506)). Qed.
Lemma lem2637508 : term109.
Proof. exact (EQ_MP (@lem2637507) (@lem0)). Qed.
Lemma lem2637509 : term234.
Proof. exact (@lem2637498 (@lem2637508)). Qed.
Lemma lem2637511 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637512 : term109 = term110.
Proof. exact (@lem2637511 (NUMERAL 0) term32). Qed.
Lemma lem2637513 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637514 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637515 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637514 h1) (fun h1 : term110 = True => @lem2637513)). Qed.
Lemma lem2637516 : term110 = True.
Proof. exact (EQ_MP (@lem2637515) (@lem2637513)). Qed.
Lemma lem2637517 : term109 = True.
Proof. exact (TRANS (@lem2637512) (@lem2637516)). Qed.
Lemma lem2637518 : True = term109.
Proof. exact (SYM (@lem2637517)). Qed.
Lemma lem2637519 : term109.
Proof. exact (EQ_MP (@lem2637518) (@lem0)). Qed.
Lemma lem2637520 : term232 = term235.
Proof. exact (@lem2637509 (@lem2637519)). Qed.
Lemma lem2637522 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637523 : term117 = term118.
Proof. exact (@lem2637522 term32 term32). Qed.
Lemma lem2637524 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637525 : term120 = term32.
Proof. exact (EQ_MP (@lem2637524) (@lem940073)). Qed.
Lemma lem2637526 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637527 : term118 = term31.
Proof. exact (MK_COMB (@lem2637526) (@lem2637525)). Qed.
Lemma lem2637528 : term117 = term31.
Proof. exact (TRANS (@lem2637523) (@lem2637527)). Qed.
Lemma lem2637530 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637531 : term131 = term38.
Proof. exact (@lem2637530 term32). Qed.
Lemma lem2637532 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637533 : term236 = term230.
Proof. exact (MK_COMB (@lem2637532) (@lem2637531)). Qed.
Lemma lem2637534 : term235 = term109.
Proof. exact (MK_COMB (@lem2637533) (@lem2637528)). Qed.
Lemma lem2637536 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637537 : term109 = term110.
Proof. exact (@lem2637536 (NUMERAL 0) term32). Qed.
Lemma lem2637538 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637539 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637540 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637539 h1) (fun h1 : term110 = True => @lem2637538)). Qed.
Lemma lem2637541 : term110 = True.
Proof. exact (EQ_MP (@lem2637540) (@lem2637538)). Qed.
Lemma lem2637542 : term109 = True.
Proof. exact (TRANS (@lem2637537) (@lem2637541)). Qed.
Lemma lem2637543 : term235 = True.
Proof. exact (TRANS (@lem2637534) (@lem2637542)). Qed.
Lemma lem2637544 : term232 = True.
Proof. exact (TRANS (@lem2637520) (@lem2637543)). Qed.
Lemma lem2637545 : term109 = True.
Proof. exact (TRANS (@lem2637497) (@lem2637544)). Qed.
Lemma lem2637546 : term229 = True.
Proof. exact (TRANS (@lem2637488) (@lem2637545)). Qed.
Lemma lem2637547 : True = term229.
Proof. exact (SYM (@lem2637546)). Qed.
Lemma lem2637548 : term229.
Proof. exact (EQ_MP (@lem2637547) (@lem0)). Qed.
Lemma lem2637549 (m : int) (n : int) (h1 : term873 m n) : term1157 m n.
Proof. exact (conj (@lem2637548) (@lem2637485 m n h1)). Qed.
Lemma lem2637551 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2637552 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2637551 term31 (term88 m n)). Qed.
Lemma lem2637553 (m : int) (n : int) (h1 : term873 m n) : term1159 m n.
Proof. exact (@lem2637552 m n (@lem2637549 m n h1)). Qed.
Lemma lem2637554 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2637555 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637556 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2637555) (@lem2637554 m n)). Qed.
Lemma lem2637557 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637558 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2637556 m n) (@lem2637557)). Qed.
Lemma lem2637559 (m : int) (n : int) (h1 : term873 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2637558 m n) (@lem2637553 m n h1)). Qed.
Lemma lem2637561 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2637562 : term229 = term109.
Proof. exact (@lem2637561 term38 term31). Qed.
Lemma lem2637564 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637565 : term31 = term99.
Proof. exact (@lem2637564 term32). Qed.
Lemma lem2637567 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637568 : term38 = term134.
Proof. exact (@lem2637567 (NUMERAL 0)). Qed.
Lemma lem2637569 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637570 : term230 = term231.
Proof. exact (MK_COMB (@lem2637569) (@lem2637568)). Qed.
Lemma lem2637571 : term109 = term232.
Proof. exact (MK_COMB (@lem2637570) (@lem2637565)). Qed.
Lemma lem2637572 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2637574 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637575 : term109 = term110.
Proof. exact (@lem2637574 (NUMERAL 0) term32). Qed.
Lemma lem2637576 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637577 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637578 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637577 h1) (fun h1 : term110 = True => @lem2637576)). Qed.
Lemma lem2637579 : term110 = True.
Proof. exact (EQ_MP (@lem2637578) (@lem2637576)). Qed.
Lemma lem2637580 : term109 = True.
Proof. exact (TRANS (@lem2637575) (@lem2637579)). Qed.
Lemma lem2637581 : True = term109.
Proof. exact (SYM (@lem2637580)). Qed.
Lemma lem2637582 : term109.
Proof. exact (EQ_MP (@lem2637581) (@lem0)). Qed.
Lemma lem2637583 : term234.
Proof. exact (@lem2637572 (@lem2637582)). Qed.
Lemma lem2637585 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637586 : term109 = term110.
Proof. exact (@lem2637585 (NUMERAL 0) term32). Qed.
Lemma lem2637587 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637588 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637589 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637588 h1) (fun h1 : term110 = True => @lem2637587)). Qed.
Lemma lem2637590 : term110 = True.
Proof. exact (EQ_MP (@lem2637589) (@lem2637587)). Qed.
Lemma lem2637591 : term109 = True.
Proof. exact (TRANS (@lem2637586) (@lem2637590)). Qed.
Lemma lem2637592 : True = term109.
Proof. exact (SYM (@lem2637591)). Qed.
Lemma lem2637593 : term109.
Proof. exact (EQ_MP (@lem2637592) (@lem0)). Qed.
Lemma lem2637594 : term232 = term235.
Proof. exact (@lem2637583 (@lem2637593)). Qed.
Lemma lem2637596 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637597 : term117 = term118.
Proof. exact (@lem2637596 term32 term32). Qed.
Lemma lem2637598 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637599 : term120 = term32.
Proof. exact (EQ_MP (@lem2637598) (@lem940073)). Qed.
Lemma lem2637600 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637601 : term118 = term31.
Proof. exact (MK_COMB (@lem2637600) (@lem2637599)). Qed.
Lemma lem2637602 : term117 = term31.
Proof. exact (TRANS (@lem2637597) (@lem2637601)). Qed.
Lemma lem2637604 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637605 : term131 = term38.
Proof. exact (@lem2637604 term32). Qed.
Lemma lem2637606 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637607 : term236 = term230.
Proof. exact (MK_COMB (@lem2637606) (@lem2637605)). Qed.
Lemma lem2637608 : term235 = term109.
Proof. exact (MK_COMB (@lem2637607) (@lem2637602)). Qed.
Lemma lem2637610 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637611 : term109 = term110.
Proof. exact (@lem2637610 (NUMERAL 0) term32). Qed.
Lemma lem2637612 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637613 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637614 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637613 h1) (fun h1 : term110 = True => @lem2637612)). Qed.
Lemma lem2637615 : term110 = True.
Proof. exact (EQ_MP (@lem2637614) (@lem2637612)). Qed.
Lemma lem2637616 : term109 = True.
Proof. exact (TRANS (@lem2637611) (@lem2637615)). Qed.
Lemma lem2637617 : term235 = True.
Proof. exact (TRANS (@lem2637608) (@lem2637616)). Qed.
Lemma lem2637618 : term232 = True.
Proof. exact (TRANS (@lem2637594) (@lem2637617)). Qed.
Lemma lem2637619 : term109 = True.
Proof. exact (TRANS (@lem2637571) (@lem2637618)). Qed.
Lemma lem2637620 : term229 = True.
Proof. exact (TRANS (@lem2637562) (@lem2637619)). Qed.
Lemma lem2637621 : True = term229.
Proof. exact (SYM (@lem2637620)). Qed.
Lemma lem2637622 : term229.
Proof. exact (EQ_MP (@lem2637621) (@lem0)). Qed.
Lemma lem2637623 (m : int) (n : int) (h1 : term873 m n) : term1162 m n.
Proof. exact (conj (@lem2637622) (@lem2637480 m n h1)). Qed.
Lemma lem2637625 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2637626 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2637625 term31 (term196 m n)). Qed.
Lemma lem2637627 (m : int) (n : int) (h1 : term873 m n) : term1164 m n.
Proof. exact (@lem2637626 m n (@lem2637623 m n h1)). Qed.
Lemma lem2637628 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2637629 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637630 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2637629) (@lem2637628 m n)). Qed.
Lemma lem2637631 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637632 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2637630 m n) (@lem2637631)). Qed.
Lemma lem2637633 (m : int) (n : int) (h1 : term873 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2637632 m n) (@lem2637627 m n h1)). Qed.
Lemma lem2637634 (m : int) (n : int) (h1 : term873 m n) : term1167 m n.
Proof. exact (conj (@lem2637633 m n h1) (@lem2637559 m n h1)). Qed.
Lemma lem2637636 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2637637 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2637636 (term196 m n) (term88 m n)). Qed.
Lemma lem2637638 (m : int) (n : int) (h1 : term873 m n) : term1169 m n.
Proof. exact (@lem2637637 m n (@lem2637634 m n h1)). Qed.
Lemma lem2637639 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2637640 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2637642 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637643 : term31 = term99.
Proof. exact (@lem2637642 term32). Qed.
Lemma lem2637645 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637646 : term97 = term102.
Proof. exact (@lem2637645 term32). Qed.
Lemma lem2637647 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637648 : term103 = term104.
Proof. exact (MK_COMB (@lem2637647) (@lem2637646)). Qed.
Lemma lem2637649 : term105 = term106.
Proof. exact (MK_COMB (@lem2637648) (@lem2637643)). Qed.
Lemma lem2637650 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2637652 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637653 : term109 = term110.
Proof. exact (@lem2637652 (NUMERAL 0) term32). Qed.
Lemma lem2637654 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637655 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637656 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637655 h1) (fun h1 : term110 = True => @lem2637654)). Qed.
Lemma lem2637657 : term110 = True.
Proof. exact (EQ_MP (@lem2637656) (@lem2637654)). Qed.
Lemma lem2637658 : term109 = True.
Proof. exact (TRANS (@lem2637653) (@lem2637657)). Qed.
Lemma lem2637659 : True = term109.
Proof. exact (SYM (@lem2637658)). Qed.
Lemma lem2637660 : term109.
Proof. exact (EQ_MP (@lem2637659) (@lem0)). Qed.
Lemma lem2637661 : term112.
Proof. exact (@lem2637650 (@lem2637660)). Qed.
Lemma lem2637663 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637664 : term109 = term110.
Proof. exact (@lem2637663 (NUMERAL 0) term32). Qed.
Lemma lem2637665 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637666 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637667 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637666 h1) (fun h1 : term110 = True => @lem2637665)). Qed.
Lemma lem2637668 : term110 = True.
Proof. exact (EQ_MP (@lem2637667) (@lem2637665)). Qed.
Lemma lem2637669 : term109 = True.
Proof. exact (TRANS (@lem2637664) (@lem2637668)). Qed.
Lemma lem2637670 : True = term109.
Proof. exact (SYM (@lem2637669)). Qed.
Lemma lem2637671 : term109.
Proof. exact (EQ_MP (@lem2637670) (@lem0)). Qed.
Lemma lem2637672 : term113.
Proof. exact (@lem2637661 (@lem2637671)). Qed.
Lemma lem2637674 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637675 : term109 = term110.
Proof. exact (@lem2637674 (NUMERAL 0) term32). Qed.
Lemma lem2637676 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637677 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637678 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637677 h1) (fun h1 : term110 = True => @lem2637676)). Qed.
Lemma lem2637679 : term110 = True.
Proof. exact (EQ_MP (@lem2637678) (@lem2637676)). Qed.
Lemma lem2637680 : term109 = True.
Proof. exact (TRANS (@lem2637675) (@lem2637679)). Qed.
Lemma lem2637681 : True = term109.
Proof. exact (SYM (@lem2637680)). Qed.
Lemma lem2637682 : term109.
Proof. exact (EQ_MP (@lem2637681) (@lem0)). Qed.
Lemma lem2637683 : term114.
Proof. exact (@lem2637672 (@lem2637682)). Qed.
Lemma lem2637685 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637686 : term117 = term118.
Proof. exact (@lem2637685 term32 term32). Qed.
Lemma lem2637687 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637688 : term120 = term32.
Proof. exact (EQ_MP (@lem2637687) (@lem940073)). Qed.
Lemma lem2637689 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637690 : term118 = term31.
Proof. exact (MK_COMB (@lem2637689) (@lem2637688)). Qed.
Lemma lem2637691 : term117 = term31.
Proof. exact (TRANS (@lem2637686) (@lem2637690)). Qed.
Lemma lem2637693 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637694 : term123 = term124.
Proof. exact (@lem2637693 term32 term32). Qed.
Lemma lem2637695 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637696 : term120 = term32.
Proof. exact (EQ_MP (@lem2637695) (@lem940073)). Qed.
Lemma lem2637697 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637698 : term118 = term31.
Proof. exact (MK_COMB (@lem2637697) (@lem2637696)). Qed.
Lemma lem2637699 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637700 : term124 = term97.
Proof. exact (MK_COMB (@lem2637699) (@lem2637698)). Qed.
Lemma lem2637701 : term123 = term97.
Proof. exact (TRANS (@lem2637694) (@lem2637700)). Qed.
Lemma lem2637702 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637703 : term125 = term103.
Proof. exact (MK_COMB (@lem2637702) (@lem2637701)). Qed.
Lemma lem2637704 : term126 = term105.
Proof. exact (MK_COMB (@lem2637703) (@lem2637691)). Qed.
Lemma lem2637706 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2637707 : term105 = term38.
Proof. exact (@lem2637706 term32). Qed.
Lemma lem2637708 : term126 = term38.
Proof. exact (TRANS (@lem2637704) (@lem2637707)). Qed.
Lemma lem2637709 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637710 : term128 = term129.
Proof. exact (MK_COMB (@lem2637709) (@lem2637708)). Qed.
Lemma lem2637711 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2637712 : term130 = term131.
Proof. exact (MK_COMB (@lem2637710) (@lem2637711)). Qed.
Lemma lem2637714 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637715 : term131 = term38.
Proof. exact (@lem2637714 term32). Qed.
Lemma lem2637716 : term130 = term38.
Proof. exact (TRANS (@lem2637712) (@lem2637715)). Qed.
Lemma lem2637718 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637719 : term117 = term118.
Proof. exact (@lem2637718 term32 term32). Qed.
Lemma lem2637720 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637721 : term120 = term32.
Proof. exact (EQ_MP (@lem2637720) (@lem940073)). Qed.
Lemma lem2637722 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637723 : term118 = term31.
Proof. exact (MK_COMB (@lem2637722) (@lem2637721)). Qed.
Lemma lem2637724 : term117 = term31.
Proof. exact (TRANS (@lem2637719) (@lem2637723)). Qed.
Lemma lem2637725 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2637726 : term133 = term131.
Proof. exact (MK_COMB (@lem2637725) (@lem2637724)). Qed.
Lemma lem2637728 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637729 : term131 = term38.
Proof. exact (@lem2637728 term32). Qed.
Lemma lem2637730 : term133 = term38.
Proof. exact (TRANS (@lem2637726) (@lem2637729)). Qed.
Lemma lem2637731 : term38 = term133.
Proof. exact (SYM (@lem2637730)). Qed.
Lemma lem2637732 : term130 = term133.
Proof. exact (TRANS (@lem2637716) (@lem2637731)). Qed.
Lemma lem2637733 : term106 = term134.
Proof. exact (@lem2637683 (@lem2637732)). Qed.
Lemma lem2637734 : term105 = term134.
Proof. exact (TRANS (@lem2637649) (@lem2637733)). Qed.
Lemma lem2637736 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2637737 : term134 = term38.
Proof. exact (@lem2637736 term38). Qed.
Lemma lem2637738 : term105 = term38.
Proof. exact (TRANS (@lem2637734) (@lem2637737)). Qed.
Lemma lem2637739 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637740 : term136 = term129.
Proof. exact (MK_COMB (@lem2637739) (@lem2637738)). Qed.
Lemma lem2637741 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2637742 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2637740) (@lem2637741 m)). Qed.
Lemma lem2637743 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2637640 m) (@lem2637742 m)). Qed.
Lemma lem2637744 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2637745 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2637743 m) (@lem2637744 m)). Qed.
Lemma lem2637746 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637747 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2637746) (@lem2637745 m)). Qed.
Lemma lem2637748 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2637749 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2637751 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637752 : term31 = term99.
Proof. exact (@lem2637751 term32). Qed.
Lemma lem2637754 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637755 : term97 = term102.
Proof. exact (@lem2637754 term32). Qed.
Lemma lem2637756 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637757 : term103 = term104.
Proof. exact (MK_COMB (@lem2637756) (@lem2637755)). Qed.
Lemma lem2637758 : term105 = term106.
Proof. exact (MK_COMB (@lem2637757) (@lem2637752)). Qed.
Lemma lem2637759 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2637761 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637762 : term109 = term110.
Proof. exact (@lem2637761 (NUMERAL 0) term32). Qed.
Lemma lem2637763 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637764 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637765 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637764 h1) (fun h1 : term110 = True => @lem2637763)). Qed.
Lemma lem2637766 : term110 = True.
Proof. exact (EQ_MP (@lem2637765) (@lem2637763)). Qed.
Lemma lem2637767 : term109 = True.
Proof. exact (TRANS (@lem2637762) (@lem2637766)). Qed.
Lemma lem2637768 : True = term109.
Proof. exact (SYM (@lem2637767)). Qed.
Lemma lem2637769 : term109.
Proof. exact (EQ_MP (@lem2637768) (@lem0)). Qed.
Lemma lem2637770 : term112.
Proof. exact (@lem2637759 (@lem2637769)). Qed.
Lemma lem2637772 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637773 : term109 = term110.
Proof. exact (@lem2637772 (NUMERAL 0) term32). Qed.
Lemma lem2637774 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637775 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637776 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637775 h1) (fun h1 : term110 = True => @lem2637774)). Qed.
Lemma lem2637777 : term110 = True.
Proof. exact (EQ_MP (@lem2637776) (@lem2637774)). Qed.
Lemma lem2637778 : term109 = True.
Proof. exact (TRANS (@lem2637773) (@lem2637777)). Qed.
Lemma lem2637779 : True = term109.
Proof. exact (SYM (@lem2637778)). Qed.
Lemma lem2637780 : term109.
Proof. exact (EQ_MP (@lem2637779) (@lem0)). Qed.
Lemma lem2637781 : term113.
Proof. exact (@lem2637770 (@lem2637780)). Qed.
Lemma lem2637783 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637784 : term109 = term110.
Proof. exact (@lem2637783 (NUMERAL 0) term32). Qed.
Lemma lem2637785 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637786 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637787 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637786 h1) (fun h1 : term110 = True => @lem2637785)). Qed.
Lemma lem2637788 : term110 = True.
Proof. exact (EQ_MP (@lem2637787) (@lem2637785)). Qed.
Lemma lem2637789 : term109 = True.
Proof. exact (TRANS (@lem2637784) (@lem2637788)). Qed.
Lemma lem2637790 : True = term109.
Proof. exact (SYM (@lem2637789)). Qed.
Lemma lem2637791 : term109.
Proof. exact (EQ_MP (@lem2637790) (@lem0)). Qed.
Lemma lem2637792 : term114.
Proof. exact (@lem2637781 (@lem2637791)). Qed.
Lemma lem2637794 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637795 : term117 = term118.
Proof. exact (@lem2637794 term32 term32). Qed.
Lemma lem2637796 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637797 : term120 = term32.
Proof. exact (EQ_MP (@lem2637796) (@lem940073)). Qed.
Lemma lem2637798 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637799 : term118 = term31.
Proof. exact (MK_COMB (@lem2637798) (@lem2637797)). Qed.
Lemma lem2637800 : term117 = term31.
Proof. exact (TRANS (@lem2637795) (@lem2637799)). Qed.
Lemma lem2637802 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637803 : term123 = term124.
Proof. exact (@lem2637802 term32 term32). Qed.
Lemma lem2637804 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637805 : term120 = term32.
Proof. exact (EQ_MP (@lem2637804) (@lem940073)). Qed.
Lemma lem2637806 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637807 : term118 = term31.
Proof. exact (MK_COMB (@lem2637806) (@lem2637805)). Qed.
Lemma lem2637808 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637809 : term124 = term97.
Proof. exact (MK_COMB (@lem2637808) (@lem2637807)). Qed.
Lemma lem2637810 : term123 = term97.
Proof. exact (TRANS (@lem2637803) (@lem2637809)). Qed.
Lemma lem2637811 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637812 : term125 = term103.
Proof. exact (MK_COMB (@lem2637811) (@lem2637810)). Qed.
Lemma lem2637813 : term126 = term105.
Proof. exact (MK_COMB (@lem2637812) (@lem2637800)). Qed.
Lemma lem2637815 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2637816 : term105 = term38.
Proof. exact (@lem2637815 term32). Qed.
Lemma lem2637817 : term126 = term38.
Proof. exact (TRANS (@lem2637813) (@lem2637816)). Qed.
Lemma lem2637818 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637819 : term128 = term129.
Proof. exact (MK_COMB (@lem2637818) (@lem2637817)). Qed.
Lemma lem2637820 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2637821 : term130 = term131.
Proof. exact (MK_COMB (@lem2637819) (@lem2637820)). Qed.
Lemma lem2637823 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637824 : term131 = term38.
Proof. exact (@lem2637823 term32). Qed.
Lemma lem2637825 : term130 = term38.
Proof. exact (TRANS (@lem2637821) (@lem2637824)). Qed.
Lemma lem2637827 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637828 : term117 = term118.
Proof. exact (@lem2637827 term32 term32). Qed.
Lemma lem2637829 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637830 : term120 = term32.
Proof. exact (EQ_MP (@lem2637829) (@lem940073)). Qed.
Lemma lem2637831 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637832 : term118 = term31.
Proof. exact (MK_COMB (@lem2637831) (@lem2637830)). Qed.
Lemma lem2637833 : term117 = term31.
Proof. exact (TRANS (@lem2637828) (@lem2637832)). Qed.
Lemma lem2637834 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2637835 : term133 = term131.
Proof. exact (MK_COMB (@lem2637834) (@lem2637833)). Qed.
Lemma lem2637837 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637838 : term131 = term38.
Proof. exact (@lem2637837 term32). Qed.
Lemma lem2637839 : term133 = term38.
Proof. exact (TRANS (@lem2637835) (@lem2637838)). Qed.
Lemma lem2637840 : term38 = term133.
Proof. exact (SYM (@lem2637839)). Qed.
Lemma lem2637841 : term130 = term133.
Proof. exact (TRANS (@lem2637825) (@lem2637840)). Qed.
Lemma lem2637842 : term106 = term134.
Proof. exact (@lem2637792 (@lem2637841)). Qed.
Lemma lem2637843 : term105 = term134.
Proof. exact (TRANS (@lem2637758) (@lem2637842)). Qed.
Lemma lem2637845 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2637846 : term134 = term38.
Proof. exact (@lem2637845 term38). Qed.
Lemma lem2637847 : term105 = term38.
Proof. exact (TRANS (@lem2637843) (@lem2637846)). Qed.
Lemma lem2637848 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2637849 : term136 = term129.
Proof. exact (MK_COMB (@lem2637848) (@lem2637847)). Qed.
Lemma lem2637850 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2637851 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2637849) (@lem2637850 n)). Qed.
Lemma lem2637852 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2637749 n) (@lem2637851 n)). Qed.
Lemma lem2637853 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2637854 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2637852 n) (@lem2637853 n)). Qed.
Lemma lem2637855 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2637856 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2637855) (@lem2637854 n)). Qed.
Lemma lem2637857 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2637858 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2637856 n) (@lem2637857)). Qed.
Lemma lem2637859 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2637748 n) (@lem2637858 n)). Qed.
Lemma lem2637860 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2637861 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2637859 n) (@lem2637860)). Qed.
Lemma lem2637862 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2637747 m) (@lem2637861 n)). Qed.
Lemma lem2637863 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2637639 m n) (@lem2637862 m n)). Qed.
Lemma lem2637864 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2637865 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2637863 m n) (@lem2637864)). Qed.
Lemma lem2637866 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2637867 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2637866) (@lem2637865 m n)). Qed.
Lemma lem2637868 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2637869 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2637867 m n) (@lem2637868)). Qed.
Lemma lem2637870 (m : int) (n : int) (h1 : term873 m n) : term257.
Proof. exact (EQ_MP (@lem2637869 m n) (@lem2637638 m n h1)). Qed.
Lemma lem2637872 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2637873 : term257 = term258.
Proof. exact (@lem2637872 term38 term97). Qed.
Lemma lem2637875 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2637876 : term97 = term102.
Proof. exact (@lem2637875 term32). Qed.
Lemma lem2637878 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637879 : term38 = term134.
Proof. exact (@lem2637878 (NUMERAL 0)). Qed.
Lemma lem2637880 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637881 : term259 = term260.
Proof. exact (MK_COMB (@lem2637880) (@lem2637879)). Qed.
Lemma lem2637882 : term258 = term261.
Proof. exact (MK_COMB (@lem2637881) (@lem2637876)). Qed.
Lemma lem2637883 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2637885 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637886 : term109 = term110.
Proof. exact (@lem2637885 (NUMERAL 0) term32). Qed.
Lemma lem2637887 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637888 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637889 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637888 h1) (fun h1 : term110 = True => @lem2637887)). Qed.
Lemma lem2637890 : term110 = True.
Proof. exact (EQ_MP (@lem2637889) (@lem2637887)). Qed.
Lemma lem2637891 : term109 = True.
Proof. exact (TRANS (@lem2637886) (@lem2637890)). Qed.
Lemma lem2637892 : True = term109.
Proof. exact (SYM (@lem2637891)). Qed.
Lemma lem2637893 : term109.
Proof. exact (EQ_MP (@lem2637892) (@lem0)). Qed.
Lemma lem2637894 : term263.
Proof. exact (@lem2637883 (@lem2637893)). Qed.
Lemma lem2637896 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637897 : term109 = term110.
Proof. exact (@lem2637896 (NUMERAL 0) term32). Qed.
Lemma lem2637898 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637899 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637900 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637899 h1) (fun h1 : term110 = True => @lem2637898)). Qed.
Lemma lem2637901 : term110 = True.
Proof. exact (EQ_MP (@lem2637900) (@lem2637898)). Qed.
Lemma lem2637902 : term109 = True.
Proof. exact (TRANS (@lem2637897) (@lem2637901)). Qed.
Lemma lem2637903 : True = term109.
Proof. exact (SYM (@lem2637902)). Qed.
Lemma lem2637904 : term109.
Proof. exact (EQ_MP (@lem2637903) (@lem0)). Qed.
Lemma lem2637905 : term261 = term264.
Proof. exact (@lem2637894 (@lem2637904)). Qed.
Lemma lem2637907 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2637908 : term123 = term124.
Proof. exact (@lem2637907 term32 term32). Qed.
Lemma lem2637909 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637910 : term120 = term32.
Proof. exact (EQ_MP (@lem2637909) (@lem940073)). Qed.
Lemma lem2637911 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637912 : term118 = term31.
Proof. exact (MK_COMB (@lem2637911) (@lem2637910)). Qed.
Lemma lem2637913 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2637914 : term124 = term97.
Proof. exact (MK_COMB (@lem2637913) (@lem2637912)). Qed.
Lemma lem2637915 : term123 = term97.
Proof. exact (TRANS (@lem2637908) (@lem2637914)). Qed.
Lemma lem2637917 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637918 : term131 = term38.
Proof. exact (@lem2637917 term32). Qed.
Lemma lem2637919 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2637920 : term265 = term259.
Proof. exact (MK_COMB (@lem2637919) (@lem2637918)). Qed.
Lemma lem2637921 : term264 = term258.
Proof. exact (MK_COMB (@lem2637920) (@lem2637915)). Qed.
Lemma lem2637923 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2637924 : term258 = term268.
Proof. exact (@lem2637923 (NUMERAL 0) term32). Qed.
Lemma lem2637925 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637926 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2637927 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637926 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2637925)). Qed.
Lemma lem2637928 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2637927) (@lem2637925)). Qed.
Lemma lem2637929 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2637930 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2637931 : term269 = (and True).
Proof. exact (MK_COMB (@lem2637930) (@lem2637929)). Qed.
Lemma lem2637932 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2637931) (@lem2637928)). Qed.
Lemma lem2637934 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2637935 : term268 = False.
Proof. exact (TRANS (@lem2637932) (@lem2637934)). Qed.
Lemma lem2637936 : term258 = False.
Proof. exact (TRANS (@lem2637924) (@lem2637935)). Qed.
Lemma lem2637937 : term264 = False.
Proof. exact (TRANS (@lem2637921) (@lem2637936)). Qed.
Lemma lem2637938 : term261 = False.
Proof. exact (TRANS (@lem2637905) (@lem2637937)). Qed.
Lemma lem2637939 : term258 = False.
Proof. exact (TRANS (@lem2637882) (@lem2637938)). Qed.
Lemma lem2637940 : term257 = False.
Proof. exact (TRANS (@lem2637873) (@lem2637939)). Qed.
Lemma lem2637941 (m : int) (n : int) (h1 : term873 m n) : False.
Proof. exact (EQ_MP (@lem2637940) (@lem2637870 m n h1)). Qed.
Lemma lem2637942 (m : int) (n : int) (h1 : term875 m n) : term875 m n.
Proof. exact (h1). Qed.
Lemma lem2637943 (m : int) (n : int) (h1 : term875 m n) : term874 m n.
Proof. exact (proj2 (@lem2637942 m n h1)). Qed.
Lemma lem2637945 (m : int) (n : int) (h1 : term875 m n) : term853 m n.
Proof. exact (proj2 (@lem2637943 m n h1)). Qed.
Lemma lem2637946 (m : int) (n : int) (h1 : term875 m n) : term751 m n.
Proof. exact (proj1 (@lem2637943 m n h1)). Qed.
Lemma lem2637947 (m : int) (n : int) (h1 : term875 m n) : term749 m n.
Proof. exact (proj2 (@lem2637946 m n h1)). Qed.
Lemma lem2637949 (m : int) (n : int) (h1 : term875 m n) : term807 m n.
Proof. exact (proj2 (@lem2637945 m n h1)). Qed.
Lemma lem2637951 (m : int) (n : int) (h1 : term875 m n) : term805 m n.
Proof. exact (proj2 (@lem2637949 m n h1)). Qed.
Lemma lem2637954 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2637955 : term229 = term109.
Proof. exact (@lem2637954 term38 term31). Qed.
Lemma lem2637957 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637958 : term31 = term99.
Proof. exact (@lem2637957 term32). Qed.
Lemma lem2637960 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2637961 : term38 = term134.
Proof. exact (@lem2637960 (NUMERAL 0)). Qed.
Lemma lem2637962 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2637963 : term230 = term231.
Proof. exact (MK_COMB (@lem2637962) (@lem2637961)). Qed.
Lemma lem2637964 : term109 = term232.
Proof. exact (MK_COMB (@lem2637963) (@lem2637958)). Qed.
Lemma lem2637965 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2637967 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637968 : term109 = term110.
Proof. exact (@lem2637967 (NUMERAL 0) term32). Qed.
Lemma lem2637969 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637970 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637971 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637970 h1) (fun h1 : term110 = True => @lem2637969)). Qed.
Lemma lem2637972 : term110 = True.
Proof. exact (EQ_MP (@lem2637971) (@lem2637969)). Qed.
Lemma lem2637973 : term109 = True.
Proof. exact (TRANS (@lem2637968) (@lem2637972)). Qed.
Lemma lem2637974 : True = term109.
Proof. exact (SYM (@lem2637973)). Qed.
Lemma lem2637975 : term109.
Proof. exact (EQ_MP (@lem2637974) (@lem0)). Qed.
Lemma lem2637976 : term234.
Proof. exact (@lem2637965 (@lem2637975)). Qed.
Lemma lem2637978 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2637979 : term109 = term110.
Proof. exact (@lem2637978 (NUMERAL 0) term32). Qed.
Lemma lem2637980 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2637981 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2637982 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2637981 h1) (fun h1 : term110 = True => @lem2637980)). Qed.
Lemma lem2637983 : term110 = True.
Proof. exact (EQ_MP (@lem2637982) (@lem2637980)). Qed.
Lemma lem2637984 : term109 = True.
Proof. exact (TRANS (@lem2637979) (@lem2637983)). Qed.
Lemma lem2637985 : True = term109.
Proof. exact (SYM (@lem2637984)). Qed.
Lemma lem2637986 : term109.
Proof. exact (EQ_MP (@lem2637985) (@lem0)). Qed.
Lemma lem2637987 : term232 = term235.
Proof. exact (@lem2637976 (@lem2637986)). Qed.
Lemma lem2637989 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2637990 : term117 = term118.
Proof. exact (@lem2637989 term32 term32). Qed.
Lemma lem2637991 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2637992 : term120 = term32.
Proof. exact (EQ_MP (@lem2637991) (@lem940073)). Qed.
Lemma lem2637993 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2637994 : term118 = term31.
Proof. exact (MK_COMB (@lem2637993) (@lem2637992)). Qed.
Lemma lem2637995 : term117 = term31.
Proof. exact (TRANS (@lem2637990) (@lem2637994)). Qed.
Lemma lem2637997 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2637998 : term131 = term38.
Proof. exact (@lem2637997 term32). Qed.
Lemma lem2637999 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638000 : term236 = term230.
Proof. exact (MK_COMB (@lem2637999) (@lem2637998)). Qed.
Lemma lem2638001 : term235 = term109.
Proof. exact (MK_COMB (@lem2638000) (@lem2637995)). Qed.
Lemma lem2638003 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638004 : term109 = term110.
Proof. exact (@lem2638003 (NUMERAL 0) term32). Qed.
Lemma lem2638005 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638006 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638007 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638006 h1) (fun h1 : term110 = True => @lem2638005)). Qed.
Lemma lem2638008 : term110 = True.
Proof. exact (EQ_MP (@lem2638007) (@lem2638005)). Qed.
Lemma lem2638009 : term109 = True.
Proof. exact (TRANS (@lem2638004) (@lem2638008)). Qed.
Lemma lem2638010 : term235 = True.
Proof. exact (TRANS (@lem2638001) (@lem2638009)). Qed.
Lemma lem2638011 : term232 = True.
Proof. exact (TRANS (@lem2637987) (@lem2638010)). Qed.
Lemma lem2638012 : term109 = True.
Proof. exact (TRANS (@lem2637964) (@lem2638011)). Qed.
Lemma lem2638013 : term229 = True.
Proof. exact (TRANS (@lem2637955) (@lem2638012)). Qed.
Lemma lem2638014 : True = term229.
Proof. exact (SYM (@lem2638013)). Qed.
Lemma lem2638015 : term229.
Proof. exact (EQ_MP (@lem2638014) (@lem0)). Qed.
Lemma lem2638016 (m : int) (n : int) (h1 : term875 m n) : term1174 m n.
Proof. exact (conj (@lem2638015) (@lem2637951 m n h1)). Qed.
Lemma lem2638018 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2638019 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2638018 term31 (term25 m n)). Qed.
Lemma lem2638020 (m : int) (n : int) (h1 : term875 m n) : term1176 m n.
Proof. exact (@lem2638019 m n (@lem2638016 m n h1)). Qed.
Lemma lem2638021 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2638022 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638023 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2638022) (@lem2638021 m n)). Qed.
Lemma lem2638024 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638025 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2638023 m n) (@lem2638024)). Qed.
Lemma lem2638026 (m : int) (n : int) (h1 : term875 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2638025 m n) (@lem2638020 m n h1)). Qed.
Lemma lem2638028 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2638029 : term229 = term109.
Proof. exact (@lem2638028 term38 term31). Qed.
Lemma lem2638031 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638032 : term31 = term99.
Proof. exact (@lem2638031 term32). Qed.
Lemma lem2638034 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638035 : term38 = term134.
Proof. exact (@lem2638034 (NUMERAL 0)). Qed.
Lemma lem2638036 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638037 : term230 = term231.
Proof. exact (MK_COMB (@lem2638036) (@lem2638035)). Qed.
Lemma lem2638038 : term109 = term232.
Proof. exact (MK_COMB (@lem2638037) (@lem2638032)). Qed.
Lemma lem2638039 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2638041 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638042 : term109 = term110.
Proof. exact (@lem2638041 (NUMERAL 0) term32). Qed.
Lemma lem2638043 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638044 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638045 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638044 h1) (fun h1 : term110 = True => @lem2638043)). Qed.
Lemma lem2638046 : term110 = True.
Proof. exact (EQ_MP (@lem2638045) (@lem2638043)). Qed.
Lemma lem2638047 : term109 = True.
Proof. exact (TRANS (@lem2638042) (@lem2638046)). Qed.
Lemma lem2638048 : True = term109.
Proof. exact (SYM (@lem2638047)). Qed.
Lemma lem2638049 : term109.
Proof. exact (EQ_MP (@lem2638048) (@lem0)). Qed.
Lemma lem2638050 : term234.
Proof. exact (@lem2638039 (@lem2638049)). Qed.
Lemma lem2638052 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638053 : term109 = term110.
Proof. exact (@lem2638052 (NUMERAL 0) term32). Qed.
Lemma lem2638054 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638055 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638056 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638055 h1) (fun h1 : term110 = True => @lem2638054)). Qed.
Lemma lem2638057 : term110 = True.
Proof. exact (EQ_MP (@lem2638056) (@lem2638054)). Qed.
Lemma lem2638058 : term109 = True.
Proof. exact (TRANS (@lem2638053) (@lem2638057)). Qed.
Lemma lem2638059 : True = term109.
Proof. exact (SYM (@lem2638058)). Qed.
Lemma lem2638060 : term109.
Proof. exact (EQ_MP (@lem2638059) (@lem0)). Qed.
Lemma lem2638061 : term232 = term235.
Proof. exact (@lem2638050 (@lem2638060)). Qed.
Lemma lem2638063 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638064 : term117 = term118.
Proof. exact (@lem2638063 term32 term32). Qed.
Lemma lem2638065 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638066 : term120 = term32.
Proof. exact (EQ_MP (@lem2638065) (@lem940073)). Qed.
Lemma lem2638067 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638068 : term118 = term31.
Proof. exact (MK_COMB (@lem2638067) (@lem2638066)). Qed.
Lemma lem2638069 : term117 = term31.
Proof. exact (TRANS (@lem2638064) (@lem2638068)). Qed.
Lemma lem2638071 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638072 : term131 = term38.
Proof. exact (@lem2638071 term32). Qed.
Lemma lem2638073 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638074 : term236 = term230.
Proof. exact (MK_COMB (@lem2638073) (@lem2638072)). Qed.
Lemma lem2638075 : term235 = term109.
Proof. exact (MK_COMB (@lem2638074) (@lem2638069)). Qed.
Lemma lem2638077 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638078 : term109 = term110.
Proof. exact (@lem2638077 (NUMERAL 0) term32). Qed.
Lemma lem2638079 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638080 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638081 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638080 h1) (fun h1 : term110 = True => @lem2638079)). Qed.
Lemma lem2638082 : term110 = True.
Proof. exact (EQ_MP (@lem2638081) (@lem2638079)). Qed.
Lemma lem2638083 : term109 = True.
Proof. exact (TRANS (@lem2638078) (@lem2638082)). Qed.
Lemma lem2638084 : term235 = True.
Proof. exact (TRANS (@lem2638075) (@lem2638083)). Qed.
Lemma lem2638085 : term232 = True.
Proof. exact (TRANS (@lem2638061) (@lem2638084)). Qed.
Lemma lem2638086 : term109 = True.
Proof. exact (TRANS (@lem2638038) (@lem2638085)). Qed.
Lemma lem2638087 : term229 = True.
Proof. exact (TRANS (@lem2638029) (@lem2638086)). Qed.
Lemma lem2638088 : True = term229.
Proof. exact (SYM (@lem2638087)). Qed.
Lemma lem2638089 : term229.
Proof. exact (EQ_MP (@lem2638088) (@lem0)). Qed.
Lemma lem2638090 (m : int) (n : int) (h1 : term875 m n) : term1179 m n.
Proof. exact (conj (@lem2638089) (@lem2637947 m n h1)). Qed.
Lemma lem2638092 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2638093 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2638092 term31 (term739 m n)). Qed.
Lemma lem2638094 (m : int) (n : int) (h1 : term875 m n) : term1181 m n.
Proof. exact (@lem2638093 m n (@lem2638090 m n h1)). Qed.
Lemma lem2638095 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2638096 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638097 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2638096) (@lem2638095 m n)). Qed.
Lemma lem2638098 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638099 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2638097 m n) (@lem2638098)). Qed.
Lemma lem2638100 (m : int) (n : int) (h1 : term875 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2638099 m n) (@lem2638094 m n h1)). Qed.
Lemma lem2638101 (m : int) (n : int) (h1 : term875 m n) : term1184 m n.
Proof. exact (conj (@lem2638100 m n h1) (@lem2638026 m n h1)). Qed.
Lemma lem2638103 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2638104 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2638103 (term739 m n) (term25 m n)). Qed.
Lemma lem2638105 (m : int) (n : int) (h1 : term875 m n) : term1186 m n.
Proof. exact (@lem2638104 m n (@lem2638101 m n h1)). Qed.
Lemma lem2638106 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2638107 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2638109 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638110 : term31 = term99.
Proof. exact (@lem2638109 term32). Qed.
Lemma lem2638112 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638113 : term97 = term102.
Proof. exact (@lem2638112 term32). Qed.
Lemma lem2638114 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638115 : term103 = term104.
Proof. exact (MK_COMB (@lem2638114) (@lem2638113)). Qed.
Lemma lem2638116 : term105 = term106.
Proof. exact (MK_COMB (@lem2638115) (@lem2638110)). Qed.
Lemma lem2638117 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2638119 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638120 : term109 = term110.
Proof. exact (@lem2638119 (NUMERAL 0) term32). Qed.
Lemma lem2638121 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638122 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638123 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638122 h1) (fun h1 : term110 = True => @lem2638121)). Qed.
Lemma lem2638124 : term110 = True.
Proof. exact (EQ_MP (@lem2638123) (@lem2638121)). Qed.
Lemma lem2638125 : term109 = True.
Proof. exact (TRANS (@lem2638120) (@lem2638124)). Qed.
Lemma lem2638126 : True = term109.
Proof. exact (SYM (@lem2638125)). Qed.
Lemma lem2638127 : term109.
Proof. exact (EQ_MP (@lem2638126) (@lem0)). Qed.
Lemma lem2638128 : term112.
Proof. exact (@lem2638117 (@lem2638127)). Qed.
Lemma lem2638130 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638131 : term109 = term110.
Proof. exact (@lem2638130 (NUMERAL 0) term32). Qed.
Lemma lem2638132 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638133 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638134 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638133 h1) (fun h1 : term110 = True => @lem2638132)). Qed.
Lemma lem2638135 : term110 = True.
Proof. exact (EQ_MP (@lem2638134) (@lem2638132)). Qed.
Lemma lem2638136 : term109 = True.
Proof. exact (TRANS (@lem2638131) (@lem2638135)). Qed.
Lemma lem2638137 : True = term109.
Proof. exact (SYM (@lem2638136)). Qed.
Lemma lem2638138 : term109.
Proof. exact (EQ_MP (@lem2638137) (@lem0)). Qed.
Lemma lem2638139 : term113.
Proof. exact (@lem2638128 (@lem2638138)). Qed.
Lemma lem2638141 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638142 : term109 = term110.
Proof. exact (@lem2638141 (NUMERAL 0) term32). Qed.
Lemma lem2638143 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638144 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638145 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638144 h1) (fun h1 : term110 = True => @lem2638143)). Qed.
Lemma lem2638146 : term110 = True.
Proof. exact (EQ_MP (@lem2638145) (@lem2638143)). Qed.
Lemma lem2638147 : term109 = True.
Proof. exact (TRANS (@lem2638142) (@lem2638146)). Qed.
Lemma lem2638148 : True = term109.
Proof. exact (SYM (@lem2638147)). Qed.
Lemma lem2638149 : term109.
Proof. exact (EQ_MP (@lem2638148) (@lem0)). Qed.
Lemma lem2638150 : term114.
Proof. exact (@lem2638139 (@lem2638149)). Qed.
Lemma lem2638152 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638153 : term117 = term118.
Proof. exact (@lem2638152 term32 term32). Qed.
Lemma lem2638154 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638155 : term120 = term32.
Proof. exact (EQ_MP (@lem2638154) (@lem940073)). Qed.
Lemma lem2638156 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638157 : term118 = term31.
Proof. exact (MK_COMB (@lem2638156) (@lem2638155)). Qed.
Lemma lem2638158 : term117 = term31.
Proof. exact (TRANS (@lem2638153) (@lem2638157)). Qed.
Lemma lem2638160 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638161 : term123 = term124.
Proof. exact (@lem2638160 term32 term32). Qed.
Lemma lem2638162 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638163 : term120 = term32.
Proof. exact (EQ_MP (@lem2638162) (@lem940073)). Qed.
Lemma lem2638164 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638165 : term118 = term31.
Proof. exact (MK_COMB (@lem2638164) (@lem2638163)). Qed.
Lemma lem2638166 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638167 : term124 = term97.
Proof. exact (MK_COMB (@lem2638166) (@lem2638165)). Qed.
Lemma lem2638168 : term123 = term97.
Proof. exact (TRANS (@lem2638161) (@lem2638167)). Qed.
Lemma lem2638169 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638170 : term125 = term103.
Proof. exact (MK_COMB (@lem2638169) (@lem2638168)). Qed.
Lemma lem2638171 : term126 = term105.
Proof. exact (MK_COMB (@lem2638170) (@lem2638158)). Qed.
Lemma lem2638173 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2638174 : term105 = term38.
Proof. exact (@lem2638173 term32). Qed.
Lemma lem2638175 : term126 = term38.
Proof. exact (TRANS (@lem2638171) (@lem2638174)). Qed.
Lemma lem2638176 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638177 : term128 = term129.
Proof. exact (MK_COMB (@lem2638176) (@lem2638175)). Qed.
Lemma lem2638178 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2638179 : term130 = term131.
Proof. exact (MK_COMB (@lem2638177) (@lem2638178)). Qed.
Lemma lem2638181 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638182 : term131 = term38.
Proof. exact (@lem2638181 term32). Qed.
Lemma lem2638183 : term130 = term38.
Proof. exact (TRANS (@lem2638179) (@lem2638182)). Qed.
Lemma lem2638185 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638186 : term117 = term118.
Proof. exact (@lem2638185 term32 term32). Qed.
Lemma lem2638187 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638188 : term120 = term32.
Proof. exact (EQ_MP (@lem2638187) (@lem940073)). Qed.
Lemma lem2638189 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638190 : term118 = term31.
Proof. exact (MK_COMB (@lem2638189) (@lem2638188)). Qed.
Lemma lem2638191 : term117 = term31.
Proof. exact (TRANS (@lem2638186) (@lem2638190)). Qed.
Lemma lem2638192 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2638193 : term133 = term131.
Proof. exact (MK_COMB (@lem2638192) (@lem2638191)). Qed.
Lemma lem2638195 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638196 : term131 = term38.
Proof. exact (@lem2638195 term32). Qed.
Lemma lem2638197 : term133 = term38.
Proof. exact (TRANS (@lem2638193) (@lem2638196)). Qed.
Lemma lem2638198 : term38 = term133.
Proof. exact (SYM (@lem2638197)). Qed.
Lemma lem2638199 : term130 = term133.
Proof. exact (TRANS (@lem2638183) (@lem2638198)). Qed.
Lemma lem2638200 : term106 = term134.
Proof. exact (@lem2638150 (@lem2638199)). Qed.
Lemma lem2638201 : term105 = term134.
Proof. exact (TRANS (@lem2638116) (@lem2638200)). Qed.
Lemma lem2638203 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2638204 : term134 = term38.
Proof. exact (@lem2638203 term38). Qed.
Lemma lem2638205 : term105 = term38.
Proof. exact (TRANS (@lem2638201) (@lem2638204)). Qed.
Lemma lem2638206 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638207 : term136 = term129.
Proof. exact (MK_COMB (@lem2638206) (@lem2638205)). Qed.
Lemma lem2638208 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2638209 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2638207) (@lem2638208 m)). Qed.
Lemma lem2638210 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2638107 m) (@lem2638209 m)). Qed.
Lemma lem2638211 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2638212 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2638210 m) (@lem2638211 m)). Qed.
Lemma lem2638213 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638214 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2638213) (@lem2638212 m)). Qed.
Lemma lem2638215 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2638216 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2638218 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638219 : term31 = term99.
Proof. exact (@lem2638218 term32). Qed.
Lemma lem2638221 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638222 : term97 = term102.
Proof. exact (@lem2638221 term32). Qed.
Lemma lem2638223 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638224 : term103 = term104.
Proof. exact (MK_COMB (@lem2638223) (@lem2638222)). Qed.
Lemma lem2638225 : term105 = term106.
Proof. exact (MK_COMB (@lem2638224) (@lem2638219)). Qed.
Lemma lem2638226 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2638228 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638229 : term109 = term110.
Proof. exact (@lem2638228 (NUMERAL 0) term32). Qed.
Lemma lem2638230 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638231 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638232 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638231 h1) (fun h1 : term110 = True => @lem2638230)). Qed.
Lemma lem2638233 : term110 = True.
Proof. exact (EQ_MP (@lem2638232) (@lem2638230)). Qed.
Lemma lem2638234 : term109 = True.
Proof. exact (TRANS (@lem2638229) (@lem2638233)). Qed.
Lemma lem2638235 : True = term109.
Proof. exact (SYM (@lem2638234)). Qed.
Lemma lem2638236 : term109.
Proof. exact (EQ_MP (@lem2638235) (@lem0)). Qed.
Lemma lem2638237 : term112.
Proof. exact (@lem2638226 (@lem2638236)). Qed.
Lemma lem2638239 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638240 : term109 = term110.
Proof. exact (@lem2638239 (NUMERAL 0) term32). Qed.
Lemma lem2638241 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638242 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638243 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638242 h1) (fun h1 : term110 = True => @lem2638241)). Qed.
Lemma lem2638244 : term110 = True.
Proof. exact (EQ_MP (@lem2638243) (@lem2638241)). Qed.
Lemma lem2638245 : term109 = True.
Proof. exact (TRANS (@lem2638240) (@lem2638244)). Qed.
Lemma lem2638246 : True = term109.
Proof. exact (SYM (@lem2638245)). Qed.
Lemma lem2638247 : term109.
Proof. exact (EQ_MP (@lem2638246) (@lem0)). Qed.
Lemma lem2638248 : term113.
Proof. exact (@lem2638237 (@lem2638247)). Qed.
Lemma lem2638250 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638251 : term109 = term110.
Proof. exact (@lem2638250 (NUMERAL 0) term32). Qed.
Lemma lem2638252 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638253 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638254 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638253 h1) (fun h1 : term110 = True => @lem2638252)). Qed.
Lemma lem2638255 : term110 = True.
Proof. exact (EQ_MP (@lem2638254) (@lem2638252)). Qed.
Lemma lem2638256 : term109 = True.
Proof. exact (TRANS (@lem2638251) (@lem2638255)). Qed.
Lemma lem2638257 : True = term109.
Proof. exact (SYM (@lem2638256)). Qed.
Lemma lem2638258 : term109.
Proof. exact (EQ_MP (@lem2638257) (@lem0)). Qed.
Lemma lem2638259 : term114.
Proof. exact (@lem2638248 (@lem2638258)). Qed.
Lemma lem2638261 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638262 : term117 = term118.
Proof. exact (@lem2638261 term32 term32). Qed.
Lemma lem2638263 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638264 : term120 = term32.
Proof. exact (EQ_MP (@lem2638263) (@lem940073)). Qed.
Lemma lem2638265 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638266 : term118 = term31.
Proof. exact (MK_COMB (@lem2638265) (@lem2638264)). Qed.
Lemma lem2638267 : term117 = term31.
Proof. exact (TRANS (@lem2638262) (@lem2638266)). Qed.
Lemma lem2638269 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638270 : term123 = term124.
Proof. exact (@lem2638269 term32 term32). Qed.
Lemma lem2638271 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638272 : term120 = term32.
Proof. exact (EQ_MP (@lem2638271) (@lem940073)). Qed.
Lemma lem2638273 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638274 : term118 = term31.
Proof. exact (MK_COMB (@lem2638273) (@lem2638272)). Qed.
Lemma lem2638275 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638276 : term124 = term97.
Proof. exact (MK_COMB (@lem2638275) (@lem2638274)). Qed.
Lemma lem2638277 : term123 = term97.
Proof. exact (TRANS (@lem2638270) (@lem2638276)). Qed.
Lemma lem2638278 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638279 : term125 = term103.
Proof. exact (MK_COMB (@lem2638278) (@lem2638277)). Qed.
Lemma lem2638280 : term126 = term105.
Proof. exact (MK_COMB (@lem2638279) (@lem2638267)). Qed.
Lemma lem2638282 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2638283 : term105 = term38.
Proof. exact (@lem2638282 term32). Qed.
Lemma lem2638284 : term126 = term38.
Proof. exact (TRANS (@lem2638280) (@lem2638283)). Qed.
Lemma lem2638285 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638286 : term128 = term129.
Proof. exact (MK_COMB (@lem2638285) (@lem2638284)). Qed.
Lemma lem2638287 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2638288 : term130 = term131.
Proof. exact (MK_COMB (@lem2638286) (@lem2638287)). Qed.
Lemma lem2638290 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638291 : term131 = term38.
Proof. exact (@lem2638290 term32). Qed.
Lemma lem2638292 : term130 = term38.
Proof. exact (TRANS (@lem2638288) (@lem2638291)). Qed.
Lemma lem2638294 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638295 : term117 = term118.
Proof. exact (@lem2638294 term32 term32). Qed.
Lemma lem2638296 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638297 : term120 = term32.
Proof. exact (EQ_MP (@lem2638296) (@lem940073)). Qed.
Lemma lem2638298 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638299 : term118 = term31.
Proof. exact (MK_COMB (@lem2638298) (@lem2638297)). Qed.
Lemma lem2638300 : term117 = term31.
Proof. exact (TRANS (@lem2638295) (@lem2638299)). Qed.
Lemma lem2638301 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2638302 : term133 = term131.
Proof. exact (MK_COMB (@lem2638301) (@lem2638300)). Qed.
Lemma lem2638304 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638305 : term131 = term38.
Proof. exact (@lem2638304 term32). Qed.
Lemma lem2638306 : term133 = term38.
Proof. exact (TRANS (@lem2638302) (@lem2638305)). Qed.
Lemma lem2638307 : term38 = term133.
Proof. exact (SYM (@lem2638306)). Qed.
Lemma lem2638308 : term130 = term133.
Proof. exact (TRANS (@lem2638292) (@lem2638307)). Qed.
Lemma lem2638309 : term106 = term134.
Proof. exact (@lem2638259 (@lem2638308)). Qed.
Lemma lem2638310 : term105 = term134.
Proof. exact (TRANS (@lem2638225) (@lem2638309)). Qed.
Lemma lem2638312 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2638313 : term134 = term38.
Proof. exact (@lem2638312 term38). Qed.
Lemma lem2638314 : term105 = term38.
Proof. exact (TRANS (@lem2638310) (@lem2638313)). Qed.
Lemma lem2638315 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638316 : term136 = term129.
Proof. exact (MK_COMB (@lem2638315) (@lem2638314)). Qed.
Lemma lem2638317 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2638318 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2638316) (@lem2638317 n)). Qed.
Lemma lem2638319 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2638216 n) (@lem2638318 n)). Qed.
Lemma lem2638320 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2638321 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2638319 n) (@lem2638320 n)). Qed.
Lemma lem2638322 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638323 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2638322) (@lem2638321 n)). Qed.
Lemma lem2638324 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2638325 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2638323 n) (@lem2638324)). Qed.
Lemma lem2638326 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2638215 n) (@lem2638325 n)). Qed.
Lemma lem2638327 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2638328 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2638326 n) (@lem2638327)). Qed.
Lemma lem2638329 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2638214 m) (@lem2638328 n)). Qed.
Lemma lem2638330 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2638106 m n) (@lem2638329 m n)). Qed.
Lemma lem2638331 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2638332 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2638330 m n) (@lem2638331)). Qed.
Lemma lem2638333 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638334 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2638333) (@lem2638332 m n)). Qed.
Lemma lem2638335 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638336 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2638334 m n) (@lem2638335)). Qed.
Lemma lem2638337 (m : int) (n : int) (h1 : term875 m n) : term257.
Proof. exact (EQ_MP (@lem2638336 m n) (@lem2638105 m n h1)). Qed.
Lemma lem2638339 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2638340 : term257 = term258.
Proof. exact (@lem2638339 term38 term97). Qed.
Lemma lem2638342 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638343 : term97 = term102.
Proof. exact (@lem2638342 term32). Qed.
Lemma lem2638345 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638346 : term38 = term134.
Proof. exact (@lem2638345 (NUMERAL 0)). Qed.
Lemma lem2638347 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638348 : term259 = term260.
Proof. exact (MK_COMB (@lem2638347) (@lem2638346)). Qed.
Lemma lem2638349 : term258 = term261.
Proof. exact (MK_COMB (@lem2638348) (@lem2638343)). Qed.
Lemma lem2638350 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2638352 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638353 : term109 = term110.
Proof. exact (@lem2638352 (NUMERAL 0) term32). Qed.
Lemma lem2638354 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638355 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638356 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638355 h1) (fun h1 : term110 = True => @lem2638354)). Qed.
Lemma lem2638357 : term110 = True.
Proof. exact (EQ_MP (@lem2638356) (@lem2638354)). Qed.
Lemma lem2638358 : term109 = True.
Proof. exact (TRANS (@lem2638353) (@lem2638357)). Qed.
Lemma lem2638359 : True = term109.
Proof. exact (SYM (@lem2638358)). Qed.
Lemma lem2638360 : term109.
Proof. exact (EQ_MP (@lem2638359) (@lem0)). Qed.
Lemma lem2638361 : term263.
Proof. exact (@lem2638350 (@lem2638360)). Qed.
Lemma lem2638363 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638364 : term109 = term110.
Proof. exact (@lem2638363 (NUMERAL 0) term32). Qed.
Lemma lem2638365 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638366 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638367 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638366 h1) (fun h1 : term110 = True => @lem2638365)). Qed.
Lemma lem2638368 : term110 = True.
Proof. exact (EQ_MP (@lem2638367) (@lem2638365)). Qed.
Lemma lem2638369 : term109 = True.
Proof. exact (TRANS (@lem2638364) (@lem2638368)). Qed.
Lemma lem2638370 : True = term109.
Proof. exact (SYM (@lem2638369)). Qed.
Lemma lem2638371 : term109.
Proof. exact (EQ_MP (@lem2638370) (@lem0)). Qed.
Lemma lem2638372 : term261 = term264.
Proof. exact (@lem2638361 (@lem2638371)). Qed.
Lemma lem2638374 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638375 : term123 = term124.
Proof. exact (@lem2638374 term32 term32). Qed.
Lemma lem2638376 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638377 : term120 = term32.
Proof. exact (EQ_MP (@lem2638376) (@lem940073)). Qed.
Lemma lem2638378 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638379 : term118 = term31.
Proof. exact (MK_COMB (@lem2638378) (@lem2638377)). Qed.
Lemma lem2638380 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638381 : term124 = term97.
Proof. exact (MK_COMB (@lem2638380) (@lem2638379)). Qed.
Lemma lem2638382 : term123 = term97.
Proof. exact (TRANS (@lem2638375) (@lem2638381)). Qed.
Lemma lem2638384 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638385 : term131 = term38.
Proof. exact (@lem2638384 term32). Qed.
Lemma lem2638386 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638387 : term265 = term259.
Proof. exact (MK_COMB (@lem2638386) (@lem2638385)). Qed.
Lemma lem2638388 : term264 = term258.
Proof. exact (MK_COMB (@lem2638387) (@lem2638382)). Qed.
Lemma lem2638390 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2638391 : term258 = term268.
Proof. exact (@lem2638390 (NUMERAL 0) term32). Qed.
Lemma lem2638392 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638393 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2638394 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638393 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2638392)). Qed.
Lemma lem2638395 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2638394) (@lem2638392)). Qed.
Lemma lem2638396 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2638397 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2638398 : term269 = (and True).
Proof. exact (MK_COMB (@lem2638397) (@lem2638396)). Qed.
Lemma lem2638399 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2638398) (@lem2638395)). Qed.
Lemma lem2638401 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2638402 : term268 = False.
Proof. exact (TRANS (@lem2638399) (@lem2638401)). Qed.
Lemma lem2638403 : term258 = False.
Proof. exact (TRANS (@lem2638391) (@lem2638402)). Qed.
Lemma lem2638404 : term264 = False.
Proof. exact (TRANS (@lem2638388) (@lem2638403)). Qed.
Lemma lem2638405 : term261 = False.
Proof. exact (TRANS (@lem2638372) (@lem2638404)). Qed.
Lemma lem2638406 : term258 = False.
Proof. exact (TRANS (@lem2638349) (@lem2638405)). Qed.
Lemma lem2638407 : term257 = False.
Proof. exact (TRANS (@lem2638340) (@lem2638406)). Qed.
Lemma lem2638408 (m : int) (n : int) (h1 : term875 m n) : False.
Proof. exact (EQ_MP (@lem2638407) (@lem2638337 m n h1)). Qed.
Lemma lem2638409 (m : int) (n : int) (h1 : term877 m n) : False.
Proof. exact (or_elim (@lem2637474 m n h1) (fun h0 : term873 m n => @lem2637941 m n h0) (fun h0 : term875 m n => @lem2638408 m n h0)). Qed.
Lemma lem2638410 (m : int) (n : int) (h1 : term880 m n) : False.
Proof. exact (or_elim (@lem2637184 m n h1) (fun h0 : term854 m n => @lem2637473 m n h0) (fun h0 : term877 m n => @lem2638409 m n h0)). Qed.
Lemma lem2638411 (m : int) (n : int) (h1 : term854 m n) : term854 m n.
Proof. exact (h1). Qed.
Lemma lem2638412 (m : int) (n : int) (h1 : term854 m n) : term853 m n.
Proof. exact (proj2 (@lem2638411 m n h1)). Qed.
Lemma lem2638413 (m : int) (n : int) (h1 : term854 m n) : (real_of_int n) = term38.
Proof. exact (proj1 (@lem2638411 m n h1)). Qed.
Lemma lem2638415 (m : int) (n : int) (h1 : term854 m n) : term167 n.
Proof. exact (proj1 (@lem2638412 m n h1)). Qed.
Lemma lem2638419 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2638420 : term229 = term109.
Proof. exact (@lem2638419 term38 term31). Qed.
Lemma lem2638422 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638423 : term31 = term99.
Proof. exact (@lem2638422 term32). Qed.
Lemma lem2638425 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638426 : term38 = term134.
Proof. exact (@lem2638425 (NUMERAL 0)). Qed.
Lemma lem2638427 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638428 : term230 = term231.
Proof. exact (MK_COMB (@lem2638427) (@lem2638426)). Qed.
Lemma lem2638429 : term109 = term232.
Proof. exact (MK_COMB (@lem2638428) (@lem2638423)). Qed.
Lemma lem2638430 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2638432 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638433 : term109 = term110.
Proof. exact (@lem2638432 (NUMERAL 0) term32). Qed.
Lemma lem2638434 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638435 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638436 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638435 h1) (fun h1 : term110 = True => @lem2638434)). Qed.
Lemma lem2638437 : term110 = True.
Proof. exact (EQ_MP (@lem2638436) (@lem2638434)). Qed.
Lemma lem2638438 : term109 = True.
Proof. exact (TRANS (@lem2638433) (@lem2638437)). Qed.
Lemma lem2638439 : True = term109.
Proof. exact (SYM (@lem2638438)). Qed.
Lemma lem2638440 : term109.
Proof. exact (EQ_MP (@lem2638439) (@lem0)). Qed.
Lemma lem2638441 : term234.
Proof. exact (@lem2638430 (@lem2638440)). Qed.
Lemma lem2638443 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638444 : term109 = term110.
Proof. exact (@lem2638443 (NUMERAL 0) term32). Qed.
Lemma lem2638445 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638446 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638447 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638446 h1) (fun h1 : term110 = True => @lem2638445)). Qed.
Lemma lem2638448 : term110 = True.
Proof. exact (EQ_MP (@lem2638447) (@lem2638445)). Qed.
Lemma lem2638449 : term109 = True.
Proof. exact (TRANS (@lem2638444) (@lem2638448)). Qed.
Lemma lem2638450 : True = term109.
Proof. exact (SYM (@lem2638449)). Qed.
Lemma lem2638451 : term109.
Proof. exact (EQ_MP (@lem2638450) (@lem0)). Qed.
Lemma lem2638452 : term232 = term235.
Proof. exact (@lem2638441 (@lem2638451)). Qed.
Lemma lem2638454 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638455 : term117 = term118.
Proof. exact (@lem2638454 term32 term32). Qed.
Lemma lem2638456 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638457 : term120 = term32.
Proof. exact (EQ_MP (@lem2638456) (@lem940073)). Qed.
Lemma lem2638458 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638459 : term118 = term31.
Proof. exact (MK_COMB (@lem2638458) (@lem2638457)). Qed.
Lemma lem2638460 : term117 = term31.
Proof. exact (TRANS (@lem2638455) (@lem2638459)). Qed.
Lemma lem2638462 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638463 : term131 = term38.
Proof. exact (@lem2638462 term32). Qed.
Lemma lem2638464 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638465 : term236 = term230.
Proof. exact (MK_COMB (@lem2638464) (@lem2638463)). Qed.
Lemma lem2638466 : term235 = term109.
Proof. exact (MK_COMB (@lem2638465) (@lem2638460)). Qed.
Lemma lem2638468 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638469 : term109 = term110.
Proof. exact (@lem2638468 (NUMERAL 0) term32). Qed.
Lemma lem2638470 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638471 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638472 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638471 h1) (fun h1 : term110 = True => @lem2638470)). Qed.
Lemma lem2638473 : term110 = True.
Proof. exact (EQ_MP (@lem2638472) (@lem2638470)). Qed.
Lemma lem2638474 : term109 = True.
Proof. exact (TRANS (@lem2638469) (@lem2638473)). Qed.
Lemma lem2638475 : term235 = True.
Proof. exact (TRANS (@lem2638466) (@lem2638474)). Qed.
Lemma lem2638476 : term232 = True.
Proof. exact (TRANS (@lem2638452) (@lem2638475)). Qed.
Lemma lem2638477 : term109 = True.
Proof. exact (TRANS (@lem2638429) (@lem2638476)). Qed.
Lemma lem2638478 : term229 = True.
Proof. exact (TRANS (@lem2638420) (@lem2638477)). Qed.
Lemma lem2638479 : True = term229.
Proof. exact (SYM (@lem2638478)). Qed.
Lemma lem2638480 : term229.
Proof. exact (EQ_MP (@lem2638479) (@lem0)). Qed.
Lemma lem2638481 (m : int) (n : int) (h1 : term854 m n) : term271 n.
Proof. exact (conj (@lem2638480) (@lem2638415 m n h1)). Qed.
Lemma lem2638483 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2638484 (n : int) : term272 n.
Proof. exact (@lem2638483 term31 (term164 n)). Qed.
Lemma lem2638485 (m : int) (n : int) (h1 : term854 m n) : term273 n.
Proof. exact (@lem2638484 n (@lem2638481 m n h1)). Qed.
Lemma lem2638486 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2638487 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638488 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2638487) (@lem2638486 n)). Qed.
Lemma lem2638489 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638490 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2638488 n) (@lem2638489)). Qed.
Lemma lem2638491 (m : int) (n : int) (h1 : term854 m n) : term167 n.
Proof. exact (EQ_MP (@lem2638490 n) (@lem2638485 m n h1)). Qed.
Lemma lem2638493 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2638494 (n : int) : term287 n.
Proof. exact (@lem2638493 (real_of_int n)). Qed.
Lemma lem2638495 (m : int) (n : int) (h1 : term854 m n) : term288 n.
Proof. exact (@lem2638494 n (@lem2638413 m n h1)). Qed.
Lemma lem2638496 (m : int) (n : int) (h1 : term854 m n) : term289 n.
Proof. exact (@lem2638495 m n h1 term97). Qed.
Lemma lem2638497 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2638504 (m : int) (n : int) (h1 : term854 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2638497 n) (@lem2638496 m n h1)). Qed.
Lemma lem2638505 (m : int) (n : int) (h1 : term854 m n) : term270 n.
Proof. exact (conj (@lem2638504 m n h1) (@lem2638491 m n h1)). Qed.
Lemma lem2638507 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2638508 (n : int) : term279 n.
Proof. exact (@lem2638507 (term94 n) (term164 n)). Qed.
Lemma lem2638509 (m : int) (n : int) (h1 : term854 m n) : term280 n.
Proof. exact (@lem2638508 n (@lem2638505 m n h1)). Qed.
Lemma lem2638510 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2638511 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2638513 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638514 : term31 = term99.
Proof. exact (@lem2638513 term32). Qed.
Lemma lem2638516 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638517 : term97 = term102.
Proof. exact (@lem2638516 term32). Qed.
Lemma lem2638518 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638519 : term103 = term104.
Proof. exact (MK_COMB (@lem2638518) (@lem2638517)). Qed.
Lemma lem2638520 : term105 = term106.
Proof. exact (MK_COMB (@lem2638519) (@lem2638514)). Qed.
Lemma lem2638521 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2638523 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638524 : term109 = term110.
Proof. exact (@lem2638523 (NUMERAL 0) term32). Qed.
Lemma lem2638525 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638526 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638527 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638526 h1) (fun h1 : term110 = True => @lem2638525)). Qed.
Lemma lem2638528 : term110 = True.
Proof. exact (EQ_MP (@lem2638527) (@lem2638525)). Qed.
Lemma lem2638529 : term109 = True.
Proof. exact (TRANS (@lem2638524) (@lem2638528)). Qed.
Lemma lem2638530 : True = term109.
Proof. exact (SYM (@lem2638529)). Qed.
Lemma lem2638531 : term109.
Proof. exact (EQ_MP (@lem2638530) (@lem0)). Qed.
Lemma lem2638532 : term112.
Proof. exact (@lem2638521 (@lem2638531)). Qed.
Lemma lem2638534 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638535 : term109 = term110.
Proof. exact (@lem2638534 (NUMERAL 0) term32). Qed.
Lemma lem2638536 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638537 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638538 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638537 h1) (fun h1 : term110 = True => @lem2638536)). Qed.
Lemma lem2638539 : term110 = True.
Proof. exact (EQ_MP (@lem2638538) (@lem2638536)). Qed.
Lemma lem2638540 : term109 = True.
Proof. exact (TRANS (@lem2638535) (@lem2638539)). Qed.
Lemma lem2638541 : True = term109.
Proof. exact (SYM (@lem2638540)). Qed.
Lemma lem2638542 : term109.
Proof. exact (EQ_MP (@lem2638541) (@lem0)). Qed.
Lemma lem2638543 : term113.
Proof. exact (@lem2638532 (@lem2638542)). Qed.
Lemma lem2638545 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638546 : term109 = term110.
Proof. exact (@lem2638545 (NUMERAL 0) term32). Qed.
Lemma lem2638547 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638548 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638549 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638548 h1) (fun h1 : term110 = True => @lem2638547)). Qed.
Lemma lem2638550 : term110 = True.
Proof. exact (EQ_MP (@lem2638549) (@lem2638547)). Qed.
Lemma lem2638551 : term109 = True.
Proof. exact (TRANS (@lem2638546) (@lem2638550)). Qed.
Lemma lem2638552 : True = term109.
Proof. exact (SYM (@lem2638551)). Qed.
Lemma lem2638553 : term109.
Proof. exact (EQ_MP (@lem2638552) (@lem0)). Qed.
Lemma lem2638554 : term114.
Proof. exact (@lem2638543 (@lem2638553)). Qed.
Lemma lem2638556 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638557 : term117 = term118.
Proof. exact (@lem2638556 term32 term32). Qed.
Lemma lem2638558 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638559 : term120 = term32.
Proof. exact (EQ_MP (@lem2638558) (@lem940073)). Qed.
Lemma lem2638560 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638561 : term118 = term31.
Proof. exact (MK_COMB (@lem2638560) (@lem2638559)). Qed.
Lemma lem2638562 : term117 = term31.
Proof. exact (TRANS (@lem2638557) (@lem2638561)). Qed.
Lemma lem2638564 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638565 : term123 = term124.
Proof. exact (@lem2638564 term32 term32). Qed.
Lemma lem2638566 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638567 : term120 = term32.
Proof. exact (EQ_MP (@lem2638566) (@lem940073)). Qed.
Lemma lem2638568 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638569 : term118 = term31.
Proof. exact (MK_COMB (@lem2638568) (@lem2638567)). Qed.
Lemma lem2638570 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638571 : term124 = term97.
Proof. exact (MK_COMB (@lem2638570) (@lem2638569)). Qed.
Lemma lem2638572 : term123 = term97.
Proof. exact (TRANS (@lem2638565) (@lem2638571)). Qed.
Lemma lem2638573 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638574 : term125 = term103.
Proof. exact (MK_COMB (@lem2638573) (@lem2638572)). Qed.
Lemma lem2638575 : term126 = term105.
Proof. exact (MK_COMB (@lem2638574) (@lem2638562)). Qed.
Lemma lem2638577 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2638578 : term105 = term38.
Proof. exact (@lem2638577 term32). Qed.
Lemma lem2638579 : term126 = term38.
Proof. exact (TRANS (@lem2638575) (@lem2638578)). Qed.
Lemma lem2638580 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638581 : term128 = term129.
Proof. exact (MK_COMB (@lem2638580) (@lem2638579)). Qed.
Lemma lem2638582 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2638583 : term130 = term131.
Proof. exact (MK_COMB (@lem2638581) (@lem2638582)). Qed.
Lemma lem2638585 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638586 : term131 = term38.
Proof. exact (@lem2638585 term32). Qed.
Lemma lem2638587 : term130 = term38.
Proof. exact (TRANS (@lem2638583) (@lem2638586)). Qed.
Lemma lem2638589 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638590 : term117 = term118.
Proof. exact (@lem2638589 term32 term32). Qed.
Lemma lem2638591 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638592 : term120 = term32.
Proof. exact (EQ_MP (@lem2638591) (@lem940073)). Qed.
Lemma lem2638593 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638594 : term118 = term31.
Proof. exact (MK_COMB (@lem2638593) (@lem2638592)). Qed.
Lemma lem2638595 : term117 = term31.
Proof. exact (TRANS (@lem2638590) (@lem2638594)). Qed.
Lemma lem2638596 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2638597 : term133 = term131.
Proof. exact (MK_COMB (@lem2638596) (@lem2638595)). Qed.
Lemma lem2638599 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638600 : term131 = term38.
Proof. exact (@lem2638599 term32). Qed.
Lemma lem2638601 : term133 = term38.
Proof. exact (TRANS (@lem2638597) (@lem2638600)). Qed.
Lemma lem2638602 : term38 = term133.
Proof. exact (SYM (@lem2638601)). Qed.
Lemma lem2638603 : term130 = term133.
Proof. exact (TRANS (@lem2638587) (@lem2638602)). Qed.
Lemma lem2638604 : term106 = term134.
Proof. exact (@lem2638554 (@lem2638603)). Qed.
Lemma lem2638605 : term105 = term134.
Proof. exact (TRANS (@lem2638520) (@lem2638604)). Qed.
Lemma lem2638607 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2638608 : term134 = term38.
Proof. exact (@lem2638607 term38). Qed.
Lemma lem2638609 : term105 = term38.
Proof. exact (TRANS (@lem2638605) (@lem2638608)). Qed.
Lemma lem2638610 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638611 : term136 = term129.
Proof. exact (MK_COMB (@lem2638610) (@lem2638609)). Qed.
Lemma lem2638612 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2638613 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2638611) (@lem2638612 n)). Qed.
Lemma lem2638614 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2638511 n) (@lem2638613 n)). Qed.
Lemma lem2638615 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2638616 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2638614 n) (@lem2638615 n)). Qed.
Lemma lem2638617 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638618 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2638617) (@lem2638616 n)). Qed.
Lemma lem2638619 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2638620 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2638618 n) (@lem2638619)). Qed.
Lemma lem2638621 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2638510 n) (@lem2638620 n)). Qed.
Lemma lem2638622 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2638623 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2638621 n) (@lem2638622)). Qed.
Lemma lem2638624 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638625 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2638624) (@lem2638623 n)). Qed.
Lemma lem2638626 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638627 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2638625 n) (@lem2638626)). Qed.
Lemma lem2638628 (m : int) (n : int) (h1 : term854 m n) : term257.
Proof. exact (EQ_MP (@lem2638627 n) (@lem2638509 m n h1)). Qed.
Lemma lem2638630 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2638631 : term257 = term258.
Proof. exact (@lem2638630 term38 term97). Qed.
Lemma lem2638633 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638634 : term97 = term102.
Proof. exact (@lem2638633 term32). Qed.
Lemma lem2638636 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638637 : term38 = term134.
Proof. exact (@lem2638636 (NUMERAL 0)). Qed.
Lemma lem2638638 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638639 : term259 = term260.
Proof. exact (MK_COMB (@lem2638638) (@lem2638637)). Qed.
Lemma lem2638640 : term258 = term261.
Proof. exact (MK_COMB (@lem2638639) (@lem2638634)). Qed.
Lemma lem2638641 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2638643 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638644 : term109 = term110.
Proof. exact (@lem2638643 (NUMERAL 0) term32). Qed.
Lemma lem2638645 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638646 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638647 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638646 h1) (fun h1 : term110 = True => @lem2638645)). Qed.
Lemma lem2638648 : term110 = True.
Proof. exact (EQ_MP (@lem2638647) (@lem2638645)). Qed.
Lemma lem2638649 : term109 = True.
Proof. exact (TRANS (@lem2638644) (@lem2638648)). Qed.
Lemma lem2638650 : True = term109.
Proof. exact (SYM (@lem2638649)). Qed.
Lemma lem2638651 : term109.
Proof. exact (EQ_MP (@lem2638650) (@lem0)). Qed.
Lemma lem2638652 : term263.
Proof. exact (@lem2638641 (@lem2638651)). Qed.
Lemma lem2638654 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638655 : term109 = term110.
Proof. exact (@lem2638654 (NUMERAL 0) term32). Qed.
Lemma lem2638656 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638657 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638658 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638657 h1) (fun h1 : term110 = True => @lem2638656)). Qed.
Lemma lem2638659 : term110 = True.
Proof. exact (EQ_MP (@lem2638658) (@lem2638656)). Qed.
Lemma lem2638660 : term109 = True.
Proof. exact (TRANS (@lem2638655) (@lem2638659)). Qed.
Lemma lem2638661 : True = term109.
Proof. exact (SYM (@lem2638660)). Qed.
Lemma lem2638662 : term109.
Proof. exact (EQ_MP (@lem2638661) (@lem0)). Qed.
Lemma lem2638663 : term261 = term264.
Proof. exact (@lem2638652 (@lem2638662)). Qed.
Lemma lem2638665 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638666 : term123 = term124.
Proof. exact (@lem2638665 term32 term32). Qed.
Lemma lem2638667 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638668 : term120 = term32.
Proof. exact (EQ_MP (@lem2638667) (@lem940073)). Qed.
Lemma lem2638669 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638670 : term118 = term31.
Proof. exact (MK_COMB (@lem2638669) (@lem2638668)). Qed.
Lemma lem2638671 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638672 : term124 = term97.
Proof. exact (MK_COMB (@lem2638671) (@lem2638670)). Qed.
Lemma lem2638673 : term123 = term97.
Proof. exact (TRANS (@lem2638666) (@lem2638672)). Qed.
Lemma lem2638675 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638676 : term131 = term38.
Proof. exact (@lem2638675 term32). Qed.
Lemma lem2638677 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638678 : term265 = term259.
Proof. exact (MK_COMB (@lem2638677) (@lem2638676)). Qed.
Lemma lem2638679 : term264 = term258.
Proof. exact (MK_COMB (@lem2638678) (@lem2638673)). Qed.
Lemma lem2638681 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2638682 : term258 = term268.
Proof. exact (@lem2638681 (NUMERAL 0) term32). Qed.
Lemma lem2638683 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638684 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2638685 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638684 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2638683)). Qed.
Lemma lem2638686 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2638685) (@lem2638683)). Qed.
Lemma lem2638687 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2638688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2638689 : term269 = (and True).
Proof. exact (MK_COMB (@lem2638688) (@lem2638687)). Qed.
Lemma lem2638690 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2638689) (@lem2638686)). Qed.
Lemma lem2638692 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2638693 : term268 = False.
Proof. exact (TRANS (@lem2638690) (@lem2638692)). Qed.
Lemma lem2638694 : term258 = False.
Proof. exact (TRANS (@lem2638682) (@lem2638693)). Qed.
Lemma lem2638695 : term264 = False.
Proof. exact (TRANS (@lem2638679) (@lem2638694)). Qed.
Lemma lem2638696 : term261 = False.
Proof. exact (TRANS (@lem2638663) (@lem2638695)). Qed.
Lemma lem2638697 : term258 = False.
Proof. exact (TRANS (@lem2638640) (@lem2638696)). Qed.
Lemma lem2638698 : term257 = False.
Proof. exact (TRANS (@lem2638631) (@lem2638697)). Qed.
Lemma lem2638699 (m : int) (n : int) (h1 : term854 m n) : False.
Proof. exact (EQ_MP (@lem2638698) (@lem2638628 m n h1)). Qed.
Lemma lem2638700 (m : int) (n : int) (h1 : term882 m n) : False.
Proof. exact (or_elim (@lem2637183 m n h1) (fun h0 : term880 m n => @lem2638410 m n h0) (fun h0 : term854 m n => @lem2638699 m n h0)). Qed.
Lemma lem2638701 (m : int) (n : int) (h1 : term884 m n) : False.
Proof. exact (or_elim (@lem2635664 m n h1) (fun h0 : term852 m n => @lem2637182 m n h0) (fun h0 : term882 m n => @lem2638700 m n h0)). Qed.
Lemma lem2638702 (m : int) (n : int) (h1 : term886 m n) : False.
Proof. exact (or_elim (@lem2633105 m n h1) (fun h0 : term797 n m => @lem2635663 n m h0) (fun h0 : term884 m n => @lem2638701 m n h0)). Qed.
Lemma lem2638703 (m : int) (n : int) (h1 : term1126 m n) : term1126 m n.
Proof. exact (h1). Qed.
Lemma lem2638704 (m : int) (n : int) (h1 : term920 m n) : term920 m n.
Proof. exact (h1). Qed.
Lemma lem2638705 (m : int) (n : int) (h1 : term904 m n) : term904 m n.
Proof. exact (h1). Qed.
Lemma lem2638706 (m : int) (n : int) (h1 : term622 m n) : term622 m n.
Proof. exact (h1). Qed.
Lemma lem2638707 (m : int) (n : int) (h1 : term1190 m n) : term1190 m n.
Proof. exact (h1). Qed.
Lemma lem2638708 (m : int) (n : int) (h1 : term1190 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2638707 m n h1)). Qed.
Lemma lem2638709 (m : int) (n : int) (h1 : term1190 m n) : term598 m n.
Proof. exact (proj1 (@lem2638707 m n h1)). Qed.
Lemma lem2638710 (m : int) (n : int) (h1 : term1190 m n) : term158 n.
Proof. exact (proj2 (@lem2638709 m n h1)). Qed.
Lemma lem2638715 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2638716 : term229 = term109.
Proof. exact (@lem2638715 term38 term31). Qed.
Lemma lem2638718 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638719 : term31 = term99.
Proof. exact (@lem2638718 term32). Qed.
Lemma lem2638721 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638722 : term38 = term134.
Proof. exact (@lem2638721 (NUMERAL 0)). Qed.
Lemma lem2638723 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638724 : term230 = term231.
Proof. exact (MK_COMB (@lem2638723) (@lem2638722)). Qed.
Lemma lem2638725 : term109 = term232.
Proof. exact (MK_COMB (@lem2638724) (@lem2638719)). Qed.
Lemma lem2638726 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2638728 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638729 : term109 = term110.
Proof. exact (@lem2638728 (NUMERAL 0) term32). Qed.
Lemma lem2638730 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638731 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638732 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638731 h1) (fun h1 : term110 = True => @lem2638730)). Qed.
Lemma lem2638733 : term110 = True.
Proof. exact (EQ_MP (@lem2638732) (@lem2638730)). Qed.
Lemma lem2638734 : term109 = True.
Proof. exact (TRANS (@lem2638729) (@lem2638733)). Qed.
Lemma lem2638735 : True = term109.
Proof. exact (SYM (@lem2638734)). Qed.
Lemma lem2638736 : term109.
Proof. exact (EQ_MP (@lem2638735) (@lem0)). Qed.
Lemma lem2638737 : term234.
Proof. exact (@lem2638726 (@lem2638736)). Qed.
Lemma lem2638739 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638740 : term109 = term110.
Proof. exact (@lem2638739 (NUMERAL 0) term32). Qed.
Lemma lem2638741 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638742 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638743 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638742 h1) (fun h1 : term110 = True => @lem2638741)). Qed.
Lemma lem2638744 : term110 = True.
Proof. exact (EQ_MP (@lem2638743) (@lem2638741)). Qed.
Lemma lem2638745 : term109 = True.
Proof. exact (TRANS (@lem2638740) (@lem2638744)). Qed.
Lemma lem2638746 : True = term109.
Proof. exact (SYM (@lem2638745)). Qed.
Lemma lem2638747 : term109.
Proof. exact (EQ_MP (@lem2638746) (@lem0)). Qed.
Lemma lem2638748 : term232 = term235.
Proof. exact (@lem2638737 (@lem2638747)). Qed.
Lemma lem2638750 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638751 : term117 = term118.
Proof. exact (@lem2638750 term32 term32). Qed.
Lemma lem2638752 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638753 : term120 = term32.
Proof. exact (EQ_MP (@lem2638752) (@lem940073)). Qed.
Lemma lem2638754 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638755 : term118 = term31.
Proof. exact (MK_COMB (@lem2638754) (@lem2638753)). Qed.
Lemma lem2638756 : term117 = term31.
Proof. exact (TRANS (@lem2638751) (@lem2638755)). Qed.
Lemma lem2638758 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638759 : term131 = term38.
Proof. exact (@lem2638758 term32). Qed.
Lemma lem2638760 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2638761 : term236 = term230.
Proof. exact (MK_COMB (@lem2638760) (@lem2638759)). Qed.
Lemma lem2638762 : term235 = term109.
Proof. exact (MK_COMB (@lem2638761) (@lem2638756)). Qed.
Lemma lem2638764 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638765 : term109 = term110.
Proof. exact (@lem2638764 (NUMERAL 0) term32). Qed.
Lemma lem2638766 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638767 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638768 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638767 h1) (fun h1 : term110 = True => @lem2638766)). Qed.
Lemma lem2638769 : term110 = True.
Proof. exact (EQ_MP (@lem2638768) (@lem2638766)). Qed.
Lemma lem2638770 : term109 = True.
Proof. exact (TRANS (@lem2638765) (@lem2638769)). Qed.
Lemma lem2638771 : term235 = True.
Proof. exact (TRANS (@lem2638762) (@lem2638770)). Qed.
Lemma lem2638772 : term232 = True.
Proof. exact (TRANS (@lem2638748) (@lem2638771)). Qed.
Lemma lem2638773 : term109 = True.
Proof. exact (TRANS (@lem2638725) (@lem2638772)). Qed.
Lemma lem2638774 : term229 = True.
Proof. exact (TRANS (@lem2638716) (@lem2638773)). Qed.
Lemma lem2638775 : True = term229.
Proof. exact (SYM (@lem2638774)). Qed.
Lemma lem2638776 : term229.
Proof. exact (EQ_MP (@lem2638775) (@lem0)). Qed.
Lemma lem2638777 (m : int) (n : int) (h1 : term1190 m n) : term237 n.
Proof. exact (conj (@lem2638776) (@lem2638710 m n h1)). Qed.
Lemma lem2638779 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2638780 (n : int) : term239 n.
Proof. exact (@lem2638779 term31 (term154 n)). Qed.
Lemma lem2638781 (m : int) (n : int) (h1 : term1190 m n) : term240 n.
Proof. exact (@lem2638780 n (@lem2638777 m n h1)). Qed.
Lemma lem2638782 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2638783 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638784 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2638783) (@lem2638782 n)). Qed.
Lemma lem2638785 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638786 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2638784 n) (@lem2638785)). Qed.
Lemma lem2638787 (m : int) (n : int) (h1 : term1190 m n) : term158 n.
Proof. exact (EQ_MP (@lem2638786 n) (@lem2638781 m n h1)). Qed.
Lemma lem2638789 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2638790 (n : int) : term287 n.
Proof. exact (@lem2638789 (real_of_int n)). Qed.
Lemma lem2638791 (m : int) (n : int) (h1 : term1190 m n) : term288 n.
Proof. exact (@lem2638790 n (@lem2638708 m n h1)). Qed.
Lemma lem2638792 (m : int) (n : int) (h1 : term1190 m n) : term291 n.
Proof. exact (@lem2638791 m n h1 term31). Qed.
Lemma lem2638793 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2638794 (m : int) (n : int) (h1 : term1190 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2638793 n) (@lem2638792 m n h1)). Qed.
Lemma lem2638795 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2638796 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2638797 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2638796) (@lem2638795 n)). Qed.
Lemma lem2638798 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638799 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2638797 n) (@lem2638798)). Qed.
Lemma lem2638800 (m : int) (n : int) (h1 : term1190 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2638799 n) (@lem2638794 m n h1)). Qed.
Lemma lem2638801 (m : int) (n : int) (h1 : term1190 m n) : term248 n.
Proof. exact (conj (@lem2638800 m n h1) (@lem2638787 m n h1)). Qed.
Lemma lem2638803 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2638804 (n : int) : term250 n.
Proof. exact (@lem2638803 (real_of_int n) (term154 n)). Qed.
Lemma lem2638805 (m : int) (n : int) (h1 : term1190 m n) : term251 n.
Proof. exact (@lem2638804 n (@lem2638801 m n h1)). Qed.
Lemma lem2638806 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2638807 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2638809 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638810 : term31 = term99.
Proof. exact (@lem2638809 term32). Qed.
Lemma lem2638812 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638813 : term97 = term102.
Proof. exact (@lem2638812 term32). Qed.
Lemma lem2638814 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638815 : term103 = term104.
Proof. exact (MK_COMB (@lem2638814) (@lem2638813)). Qed.
Lemma lem2638816 : term105 = term106.
Proof. exact (MK_COMB (@lem2638815) (@lem2638810)). Qed.
Lemma lem2638817 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2638819 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638820 : term109 = term110.
Proof. exact (@lem2638819 (NUMERAL 0) term32). Qed.
Lemma lem2638821 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638822 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638823 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638822 h1) (fun h1 : term110 = True => @lem2638821)). Qed.
Lemma lem2638824 : term110 = True.
Proof. exact (EQ_MP (@lem2638823) (@lem2638821)). Qed.
Lemma lem2638825 : term109 = True.
Proof. exact (TRANS (@lem2638820) (@lem2638824)). Qed.
Lemma lem2638826 : True = term109.
Proof. exact (SYM (@lem2638825)). Qed.
Lemma lem2638827 : term109.
Proof. exact (EQ_MP (@lem2638826) (@lem0)). Qed.
Lemma lem2638828 : term112.
Proof. exact (@lem2638817 (@lem2638827)). Qed.
Lemma lem2638830 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638831 : term109 = term110.
Proof. exact (@lem2638830 (NUMERAL 0) term32). Qed.
Lemma lem2638832 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638833 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638834 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638833 h1) (fun h1 : term110 = True => @lem2638832)). Qed.
Lemma lem2638835 : term110 = True.
Proof. exact (EQ_MP (@lem2638834) (@lem2638832)). Qed.
Lemma lem2638836 : term109 = True.
Proof. exact (TRANS (@lem2638831) (@lem2638835)). Qed.
Lemma lem2638837 : True = term109.
Proof. exact (SYM (@lem2638836)). Qed.
Lemma lem2638838 : term109.
Proof. exact (EQ_MP (@lem2638837) (@lem0)). Qed.
Lemma lem2638839 : term113.
Proof. exact (@lem2638828 (@lem2638838)). Qed.
Lemma lem2638841 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638842 : term109 = term110.
Proof. exact (@lem2638841 (NUMERAL 0) term32). Qed.
Lemma lem2638843 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638844 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638845 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638844 h1) (fun h1 : term110 = True => @lem2638843)). Qed.
Lemma lem2638846 : term110 = True.
Proof. exact (EQ_MP (@lem2638845) (@lem2638843)). Qed.
Lemma lem2638847 : term109 = True.
Proof. exact (TRANS (@lem2638842) (@lem2638846)). Qed.
Lemma lem2638848 : True = term109.
Proof. exact (SYM (@lem2638847)). Qed.
Lemma lem2638849 : term109.
Proof. exact (EQ_MP (@lem2638848) (@lem0)). Qed.
Lemma lem2638850 : term114.
Proof. exact (@lem2638839 (@lem2638849)). Qed.
Lemma lem2638852 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638853 : term117 = term118.
Proof. exact (@lem2638852 term32 term32). Qed.
Lemma lem2638854 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638855 : term120 = term32.
Proof. exact (EQ_MP (@lem2638854) (@lem940073)). Qed.
Lemma lem2638856 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638857 : term118 = term31.
Proof. exact (MK_COMB (@lem2638856) (@lem2638855)). Qed.
Lemma lem2638858 : term117 = term31.
Proof. exact (TRANS (@lem2638853) (@lem2638857)). Qed.
Lemma lem2638860 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638861 : term123 = term124.
Proof. exact (@lem2638860 term32 term32). Qed.
Lemma lem2638862 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638863 : term120 = term32.
Proof. exact (EQ_MP (@lem2638862) (@lem940073)). Qed.
Lemma lem2638864 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638865 : term118 = term31.
Proof. exact (MK_COMB (@lem2638864) (@lem2638863)). Qed.
Lemma lem2638866 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638867 : term124 = term97.
Proof. exact (MK_COMB (@lem2638866) (@lem2638865)). Qed.
Lemma lem2638868 : term123 = term97.
Proof. exact (TRANS (@lem2638861) (@lem2638867)). Qed.
Lemma lem2638869 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638870 : term125 = term103.
Proof. exact (MK_COMB (@lem2638869) (@lem2638868)). Qed.
Lemma lem2638871 : term126 = term105.
Proof. exact (MK_COMB (@lem2638870) (@lem2638858)). Qed.
Lemma lem2638873 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2638874 : term105 = term38.
Proof. exact (@lem2638873 term32). Qed.
Lemma lem2638875 : term126 = term38.
Proof. exact (TRANS (@lem2638871) (@lem2638874)). Qed.
Lemma lem2638876 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638877 : term128 = term129.
Proof. exact (MK_COMB (@lem2638876) (@lem2638875)). Qed.
Lemma lem2638878 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2638879 : term130 = term131.
Proof. exact (MK_COMB (@lem2638877) (@lem2638878)). Qed.
Lemma lem2638881 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638882 : term131 = term38.
Proof. exact (@lem2638881 term32). Qed.
Lemma lem2638883 : term130 = term38.
Proof. exact (TRANS (@lem2638879) (@lem2638882)). Qed.
Lemma lem2638885 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2638886 : term117 = term118.
Proof. exact (@lem2638885 term32 term32). Qed.
Lemma lem2638887 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638888 : term120 = term32.
Proof. exact (EQ_MP (@lem2638887) (@lem940073)). Qed.
Lemma lem2638889 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638890 : term118 = term31.
Proof. exact (MK_COMB (@lem2638889) (@lem2638888)). Qed.
Lemma lem2638891 : term117 = term31.
Proof. exact (TRANS (@lem2638886) (@lem2638890)). Qed.
Lemma lem2638892 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2638893 : term133 = term131.
Proof. exact (MK_COMB (@lem2638892) (@lem2638891)). Qed.
Lemma lem2638895 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638896 : term131 = term38.
Proof. exact (@lem2638895 term32). Qed.
Lemma lem2638897 : term133 = term38.
Proof. exact (TRANS (@lem2638893) (@lem2638896)). Qed.
Lemma lem2638898 : term38 = term133.
Proof. exact (SYM (@lem2638897)). Qed.
Lemma lem2638899 : term130 = term133.
Proof. exact (TRANS (@lem2638883) (@lem2638898)). Qed.
Lemma lem2638900 : term106 = term134.
Proof. exact (@lem2638850 (@lem2638899)). Qed.
Lemma lem2638901 : term105 = term134.
Proof. exact (TRANS (@lem2638816) (@lem2638900)). Qed.
Lemma lem2638903 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2638904 : term134 = term38.
Proof. exact (@lem2638903 term38). Qed.
Lemma lem2638905 : term105 = term38.
Proof. exact (TRANS (@lem2638901) (@lem2638904)). Qed.
Lemma lem2638906 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2638907 : term136 = term129.
Proof. exact (MK_COMB (@lem2638906) (@lem2638905)). Qed.
Lemma lem2638908 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2638909 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2638907) (@lem2638908 n)). Qed.
Lemma lem2638910 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2638807 n) (@lem2638909 n)). Qed.
Lemma lem2638911 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2638912 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2638910 n) (@lem2638911 n)). Qed.
Lemma lem2638913 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2638914 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2638913) (@lem2638912 n)). Qed.
Lemma lem2638915 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2638916 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2638914 n) (@lem2638915)). Qed.
Lemma lem2638917 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2638806 n) (@lem2638916 n)). Qed.
Lemma lem2638918 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2638919 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2638917 n) (@lem2638918)). Qed.
Lemma lem2638920 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2638921 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2638920) (@lem2638919 n)). Qed.
Lemma lem2638922 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2638923 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2638921 n) (@lem2638922)). Qed.
Lemma lem2638924 (m : int) (n : int) (h1 : term1190 m n) : term257.
Proof. exact (EQ_MP (@lem2638923 n) (@lem2638805 m n h1)). Qed.
Lemma lem2638926 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2638927 : term257 = term258.
Proof. exact (@lem2638926 term38 term97). Qed.
Lemma lem2638929 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2638930 : term97 = term102.
Proof. exact (@lem2638929 term32). Qed.
Lemma lem2638932 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2638933 : term38 = term134.
Proof. exact (@lem2638932 (NUMERAL 0)). Qed.
Lemma lem2638934 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638935 : term259 = term260.
Proof. exact (MK_COMB (@lem2638934) (@lem2638933)). Qed.
Lemma lem2638936 : term258 = term261.
Proof. exact (MK_COMB (@lem2638935) (@lem2638930)). Qed.
Lemma lem2638937 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2638939 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638940 : term109 = term110.
Proof. exact (@lem2638939 (NUMERAL 0) term32). Qed.
Lemma lem2638941 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638942 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638943 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638942 h1) (fun h1 : term110 = True => @lem2638941)). Qed.
Lemma lem2638944 : term110 = True.
Proof. exact (EQ_MP (@lem2638943) (@lem2638941)). Qed.
Lemma lem2638945 : term109 = True.
Proof. exact (TRANS (@lem2638940) (@lem2638944)). Qed.
Lemma lem2638946 : True = term109.
Proof. exact (SYM (@lem2638945)). Qed.
Lemma lem2638947 : term109.
Proof. exact (EQ_MP (@lem2638946) (@lem0)). Qed.
Lemma lem2638948 : term263.
Proof. exact (@lem2638937 (@lem2638947)). Qed.
Lemma lem2638950 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2638951 : term109 = term110.
Proof. exact (@lem2638950 (NUMERAL 0) term32). Qed.
Lemma lem2638952 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638953 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2638954 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638953 h1) (fun h1 : term110 = True => @lem2638952)). Qed.
Lemma lem2638955 : term110 = True.
Proof. exact (EQ_MP (@lem2638954) (@lem2638952)). Qed.
Lemma lem2638956 : term109 = True.
Proof. exact (TRANS (@lem2638951) (@lem2638955)). Qed.
Lemma lem2638957 : True = term109.
Proof. exact (SYM (@lem2638956)). Qed.
Lemma lem2638958 : term109.
Proof. exact (EQ_MP (@lem2638957) (@lem0)). Qed.
Lemma lem2638959 : term261 = term264.
Proof. exact (@lem2638948 (@lem2638958)). Qed.
Lemma lem2638961 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2638962 : term123 = term124.
Proof. exact (@lem2638961 term32 term32). Qed.
Lemma lem2638963 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2638964 : term120 = term32.
Proof. exact (EQ_MP (@lem2638963) (@lem940073)). Qed.
Lemma lem2638965 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2638966 : term118 = term31.
Proof. exact (MK_COMB (@lem2638965) (@lem2638964)). Qed.
Lemma lem2638967 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2638968 : term124 = term97.
Proof. exact (MK_COMB (@lem2638967) (@lem2638966)). Qed.
Lemma lem2638969 : term123 = term97.
Proof. exact (TRANS (@lem2638962) (@lem2638968)). Qed.
Lemma lem2638971 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2638972 : term131 = term38.
Proof. exact (@lem2638971 term32). Qed.
Lemma lem2638973 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2638974 : term265 = term259.
Proof. exact (MK_COMB (@lem2638973) (@lem2638972)). Qed.
Lemma lem2638975 : term264 = term258.
Proof. exact (MK_COMB (@lem2638974) (@lem2638969)). Qed.
Lemma lem2638977 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2638978 : term258 = term268.
Proof. exact (@lem2638977 (NUMERAL 0) term32). Qed.
Lemma lem2638979 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2638980 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2638981 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2638980 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2638979)). Qed.
Lemma lem2638982 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2638981) (@lem2638979)). Qed.
Lemma lem2638983 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2638984 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2638985 : term269 = (and True).
Proof. exact (MK_COMB (@lem2638984) (@lem2638983)). Qed.
Lemma lem2638986 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2638985) (@lem2638982)). Qed.
Lemma lem2638988 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2638989 : term268 = False.
Proof. exact (TRANS (@lem2638986) (@lem2638988)). Qed.
Lemma lem2638990 : term258 = False.
Proof. exact (TRANS (@lem2638978) (@lem2638989)). Qed.
Lemma lem2638991 : term264 = False.
Proof. exact (TRANS (@lem2638975) (@lem2638990)). Qed.
Lemma lem2638992 : term261 = False.
Proof. exact (TRANS (@lem2638959) (@lem2638991)). Qed.
Lemma lem2638993 : term258 = False.
Proof. exact (TRANS (@lem2638936) (@lem2638992)). Qed.
Lemma lem2638994 : term257 = False.
Proof. exact (TRANS (@lem2638927) (@lem2638993)). Qed.
Lemma lem2638995 (m : int) (n : int) (h1 : term1190 m n) : False.
Proof. exact (EQ_MP (@lem2638994) (@lem2638924 m n h1)). Qed.
Lemma lem2638996 (m : int) (n : int) (h1 : term1191 m n) : term1191 m n.
Proof. exact (h1). Qed.
Lemma lem2638997 (m : int) (n : int) (h1 : term1191 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2638996 m n h1)). Qed.
Lemma lem2638998 (m : int) (n : int) (h1 : term1191 m n) : term599 m n.
Proof. exact (proj1 (@lem2638996 m n h1)). Qed.
Lemma lem2638999 (m : int) (n : int) (h1 : term1191 m n) : term158 n.
Proof. exact (proj2 (@lem2638998 m n h1)). Qed.
Lemma lem2639004 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2639005 : term229 = term109.
Proof. exact (@lem2639004 term38 term31). Qed.
Lemma lem2639007 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639008 : term31 = term99.
Proof. exact (@lem2639007 term32). Qed.
Lemma lem2639010 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639011 : term38 = term134.
Proof. exact (@lem2639010 (NUMERAL 0)). Qed.
Lemma lem2639012 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639013 : term230 = term231.
Proof. exact (MK_COMB (@lem2639012) (@lem2639011)). Qed.
Lemma lem2639014 : term109 = term232.
Proof. exact (MK_COMB (@lem2639013) (@lem2639008)). Qed.
Lemma lem2639015 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2639017 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639018 : term109 = term110.
Proof. exact (@lem2639017 (NUMERAL 0) term32). Qed.
Lemma lem2639019 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639020 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639021 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639020 h1) (fun h1 : term110 = True => @lem2639019)). Qed.
Lemma lem2639022 : term110 = True.
Proof. exact (EQ_MP (@lem2639021) (@lem2639019)). Qed.
Lemma lem2639023 : term109 = True.
Proof. exact (TRANS (@lem2639018) (@lem2639022)). Qed.
Lemma lem2639024 : True = term109.
Proof. exact (SYM (@lem2639023)). Qed.
Lemma lem2639025 : term109.
Proof. exact (EQ_MP (@lem2639024) (@lem0)). Qed.
Lemma lem2639026 : term234.
Proof. exact (@lem2639015 (@lem2639025)). Qed.
Lemma lem2639028 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639029 : term109 = term110.
Proof. exact (@lem2639028 (NUMERAL 0) term32). Qed.
Lemma lem2639030 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639031 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639032 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639031 h1) (fun h1 : term110 = True => @lem2639030)). Qed.
Lemma lem2639033 : term110 = True.
Proof. exact (EQ_MP (@lem2639032) (@lem2639030)). Qed.
Lemma lem2639034 : term109 = True.
Proof. exact (TRANS (@lem2639029) (@lem2639033)). Qed.
Lemma lem2639035 : True = term109.
Proof. exact (SYM (@lem2639034)). Qed.
Lemma lem2639036 : term109.
Proof. exact (EQ_MP (@lem2639035) (@lem0)). Qed.
Lemma lem2639037 : term232 = term235.
Proof. exact (@lem2639026 (@lem2639036)). Qed.
Lemma lem2639039 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639040 : term117 = term118.
Proof. exact (@lem2639039 term32 term32). Qed.
Lemma lem2639041 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639042 : term120 = term32.
Proof. exact (EQ_MP (@lem2639041) (@lem940073)). Qed.
Lemma lem2639043 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639044 : term118 = term31.
Proof. exact (MK_COMB (@lem2639043) (@lem2639042)). Qed.
Lemma lem2639045 : term117 = term31.
Proof. exact (TRANS (@lem2639040) (@lem2639044)). Qed.
Lemma lem2639047 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639048 : term131 = term38.
Proof. exact (@lem2639047 term32). Qed.
Lemma lem2639049 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639050 : term236 = term230.
Proof. exact (MK_COMB (@lem2639049) (@lem2639048)). Qed.
Lemma lem2639051 : term235 = term109.
Proof. exact (MK_COMB (@lem2639050) (@lem2639045)). Qed.
Lemma lem2639053 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639054 : term109 = term110.
Proof. exact (@lem2639053 (NUMERAL 0) term32). Qed.
Lemma lem2639055 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639056 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639057 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639056 h1) (fun h1 : term110 = True => @lem2639055)). Qed.
Lemma lem2639058 : term110 = True.
Proof. exact (EQ_MP (@lem2639057) (@lem2639055)). Qed.
Lemma lem2639059 : term109 = True.
Proof. exact (TRANS (@lem2639054) (@lem2639058)). Qed.
Lemma lem2639060 : term235 = True.
Proof. exact (TRANS (@lem2639051) (@lem2639059)). Qed.
Lemma lem2639061 : term232 = True.
Proof. exact (TRANS (@lem2639037) (@lem2639060)). Qed.
Lemma lem2639062 : term109 = True.
Proof. exact (TRANS (@lem2639014) (@lem2639061)). Qed.
Lemma lem2639063 : term229 = True.
Proof. exact (TRANS (@lem2639005) (@lem2639062)). Qed.
Lemma lem2639064 : True = term229.
Proof. exact (SYM (@lem2639063)). Qed.
Lemma lem2639065 : term229.
Proof. exact (EQ_MP (@lem2639064) (@lem0)). Qed.
Lemma lem2639066 (m : int) (n : int) (h1 : term1191 m n) : term237 n.
Proof. exact (conj (@lem2639065) (@lem2638999 m n h1)). Qed.
Lemma lem2639068 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2639069 (n : int) : term239 n.
Proof. exact (@lem2639068 term31 (term154 n)). Qed.
Lemma lem2639070 (m : int) (n : int) (h1 : term1191 m n) : term240 n.
Proof. exact (@lem2639069 n (@lem2639066 m n h1)). Qed.
Lemma lem2639071 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2639072 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639073 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2639072) (@lem2639071 n)). Qed.
Lemma lem2639074 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639075 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2639073 n) (@lem2639074)). Qed.
Lemma lem2639076 (m : int) (n : int) (h1 : term1191 m n) : term158 n.
Proof. exact (EQ_MP (@lem2639075 n) (@lem2639070 m n h1)). Qed.
Lemma lem2639078 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2639079 (n : int) : term287 n.
Proof. exact (@lem2639078 (real_of_int n)). Qed.
Lemma lem2639080 (m : int) (n : int) (h1 : term1191 m n) : term288 n.
Proof. exact (@lem2639079 n (@lem2638997 m n h1)). Qed.
Lemma lem2639081 (m : int) (n : int) (h1 : term1191 m n) : term291 n.
Proof. exact (@lem2639080 m n h1 term31). Qed.
Lemma lem2639082 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2639083 (m : int) (n : int) (h1 : term1191 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2639082 n) (@lem2639081 m n h1)). Qed.
Lemma lem2639084 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2639085 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2639086 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2639085) (@lem2639084 n)). Qed.
Lemma lem2639087 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639088 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2639086 n) (@lem2639087)). Qed.
Lemma lem2639089 (m : int) (n : int) (h1 : term1191 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2639088 n) (@lem2639083 m n h1)). Qed.
Lemma lem2639090 (m : int) (n : int) (h1 : term1191 m n) : term248 n.
Proof. exact (conj (@lem2639089 m n h1) (@lem2639076 m n h1)). Qed.
Lemma lem2639092 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2639093 (n : int) : term250 n.
Proof. exact (@lem2639092 (real_of_int n) (term154 n)). Qed.
Lemma lem2639094 (m : int) (n : int) (h1 : term1191 m n) : term251 n.
Proof. exact (@lem2639093 n (@lem2639090 m n h1)). Qed.
Lemma lem2639095 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2639096 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2639098 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639099 : term31 = term99.
Proof. exact (@lem2639098 term32). Qed.
Lemma lem2639101 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639102 : term97 = term102.
Proof. exact (@lem2639101 term32). Qed.
Lemma lem2639103 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639104 : term103 = term104.
Proof. exact (MK_COMB (@lem2639103) (@lem2639102)). Qed.
Lemma lem2639105 : term105 = term106.
Proof. exact (MK_COMB (@lem2639104) (@lem2639099)). Qed.
Lemma lem2639106 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2639108 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639109 : term109 = term110.
Proof. exact (@lem2639108 (NUMERAL 0) term32). Qed.
Lemma lem2639110 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639111 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639112 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639111 h1) (fun h1 : term110 = True => @lem2639110)). Qed.
Lemma lem2639113 : term110 = True.
Proof. exact (EQ_MP (@lem2639112) (@lem2639110)). Qed.
Lemma lem2639114 : term109 = True.
Proof. exact (TRANS (@lem2639109) (@lem2639113)). Qed.
Lemma lem2639115 : True = term109.
Proof. exact (SYM (@lem2639114)). Qed.
Lemma lem2639116 : term109.
Proof. exact (EQ_MP (@lem2639115) (@lem0)). Qed.
Lemma lem2639117 : term112.
Proof. exact (@lem2639106 (@lem2639116)). Qed.
Lemma lem2639119 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639120 : term109 = term110.
Proof. exact (@lem2639119 (NUMERAL 0) term32). Qed.
Lemma lem2639121 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639122 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639123 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639122 h1) (fun h1 : term110 = True => @lem2639121)). Qed.
Lemma lem2639124 : term110 = True.
Proof. exact (EQ_MP (@lem2639123) (@lem2639121)). Qed.
Lemma lem2639125 : term109 = True.
Proof. exact (TRANS (@lem2639120) (@lem2639124)). Qed.
Lemma lem2639126 : True = term109.
Proof. exact (SYM (@lem2639125)). Qed.
Lemma lem2639127 : term109.
Proof. exact (EQ_MP (@lem2639126) (@lem0)). Qed.
Lemma lem2639128 : term113.
Proof. exact (@lem2639117 (@lem2639127)). Qed.
Lemma lem2639130 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639131 : term109 = term110.
Proof. exact (@lem2639130 (NUMERAL 0) term32). Qed.
Lemma lem2639132 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639133 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639134 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639133 h1) (fun h1 : term110 = True => @lem2639132)). Qed.
Lemma lem2639135 : term110 = True.
Proof. exact (EQ_MP (@lem2639134) (@lem2639132)). Qed.
Lemma lem2639136 : term109 = True.
Proof. exact (TRANS (@lem2639131) (@lem2639135)). Qed.
Lemma lem2639137 : True = term109.
Proof. exact (SYM (@lem2639136)). Qed.
Lemma lem2639138 : term109.
Proof. exact (EQ_MP (@lem2639137) (@lem0)). Qed.
Lemma lem2639139 : term114.
Proof. exact (@lem2639128 (@lem2639138)). Qed.
Lemma lem2639141 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639142 : term117 = term118.
Proof. exact (@lem2639141 term32 term32). Qed.
Lemma lem2639143 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639144 : term120 = term32.
Proof. exact (EQ_MP (@lem2639143) (@lem940073)). Qed.
Lemma lem2639145 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639146 : term118 = term31.
Proof. exact (MK_COMB (@lem2639145) (@lem2639144)). Qed.
Lemma lem2639147 : term117 = term31.
Proof. exact (TRANS (@lem2639142) (@lem2639146)). Qed.
Lemma lem2639149 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639150 : term123 = term124.
Proof. exact (@lem2639149 term32 term32). Qed.
Lemma lem2639151 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639152 : term120 = term32.
Proof. exact (EQ_MP (@lem2639151) (@lem940073)). Qed.
Lemma lem2639153 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639154 : term118 = term31.
Proof. exact (MK_COMB (@lem2639153) (@lem2639152)). Qed.
Lemma lem2639155 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639156 : term124 = term97.
Proof. exact (MK_COMB (@lem2639155) (@lem2639154)). Qed.
Lemma lem2639157 : term123 = term97.
Proof. exact (TRANS (@lem2639150) (@lem2639156)). Qed.
Lemma lem2639158 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639159 : term125 = term103.
Proof. exact (MK_COMB (@lem2639158) (@lem2639157)). Qed.
Lemma lem2639160 : term126 = term105.
Proof. exact (MK_COMB (@lem2639159) (@lem2639147)). Qed.
Lemma lem2639162 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2639163 : term105 = term38.
Proof. exact (@lem2639162 term32). Qed.
Lemma lem2639164 : term126 = term38.
Proof. exact (TRANS (@lem2639160) (@lem2639163)). Qed.
Lemma lem2639165 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639166 : term128 = term129.
Proof. exact (MK_COMB (@lem2639165) (@lem2639164)). Qed.
Lemma lem2639167 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2639168 : term130 = term131.
Proof. exact (MK_COMB (@lem2639166) (@lem2639167)). Qed.
Lemma lem2639170 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639171 : term131 = term38.
Proof. exact (@lem2639170 term32). Qed.
Lemma lem2639172 : term130 = term38.
Proof. exact (TRANS (@lem2639168) (@lem2639171)). Qed.
Lemma lem2639174 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639175 : term117 = term118.
Proof. exact (@lem2639174 term32 term32). Qed.
Lemma lem2639176 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639177 : term120 = term32.
Proof. exact (EQ_MP (@lem2639176) (@lem940073)). Qed.
Lemma lem2639178 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639179 : term118 = term31.
Proof. exact (MK_COMB (@lem2639178) (@lem2639177)). Qed.
Lemma lem2639180 : term117 = term31.
Proof. exact (TRANS (@lem2639175) (@lem2639179)). Qed.
Lemma lem2639181 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2639182 : term133 = term131.
Proof. exact (MK_COMB (@lem2639181) (@lem2639180)). Qed.
Lemma lem2639184 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639185 : term131 = term38.
Proof. exact (@lem2639184 term32). Qed.
Lemma lem2639186 : term133 = term38.
Proof. exact (TRANS (@lem2639182) (@lem2639185)). Qed.
Lemma lem2639187 : term38 = term133.
Proof. exact (SYM (@lem2639186)). Qed.
Lemma lem2639188 : term130 = term133.
Proof. exact (TRANS (@lem2639172) (@lem2639187)). Qed.
Lemma lem2639189 : term106 = term134.
Proof. exact (@lem2639139 (@lem2639188)). Qed.
Lemma lem2639190 : term105 = term134.
Proof. exact (TRANS (@lem2639105) (@lem2639189)). Qed.
Lemma lem2639192 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2639193 : term134 = term38.
Proof. exact (@lem2639192 term38). Qed.
Lemma lem2639194 : term105 = term38.
Proof. exact (TRANS (@lem2639190) (@lem2639193)). Qed.
Lemma lem2639195 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639196 : term136 = term129.
Proof. exact (MK_COMB (@lem2639195) (@lem2639194)). Qed.
Lemma lem2639197 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2639198 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2639196) (@lem2639197 n)). Qed.
Lemma lem2639199 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2639096 n) (@lem2639198 n)). Qed.
Lemma lem2639200 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2639201 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2639199 n) (@lem2639200 n)). Qed.
Lemma lem2639202 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639203 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2639202) (@lem2639201 n)). Qed.
Lemma lem2639204 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2639205 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2639203 n) (@lem2639204)). Qed.
Lemma lem2639206 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2639095 n) (@lem2639205 n)). Qed.
Lemma lem2639207 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2639208 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2639206 n) (@lem2639207)). Qed.
Lemma lem2639209 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639210 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2639209) (@lem2639208 n)). Qed.
Lemma lem2639211 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639212 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2639210 n) (@lem2639211)). Qed.
Lemma lem2639213 (m : int) (n : int) (h1 : term1191 m n) : term257.
Proof. exact (EQ_MP (@lem2639212 n) (@lem2639094 m n h1)). Qed.
Lemma lem2639215 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2639216 : term257 = term258.
Proof. exact (@lem2639215 term38 term97). Qed.
Lemma lem2639218 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639219 : term97 = term102.
Proof. exact (@lem2639218 term32). Qed.
Lemma lem2639221 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639222 : term38 = term134.
Proof. exact (@lem2639221 (NUMERAL 0)). Qed.
Lemma lem2639223 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639224 : term259 = term260.
Proof. exact (MK_COMB (@lem2639223) (@lem2639222)). Qed.
Lemma lem2639225 : term258 = term261.
Proof. exact (MK_COMB (@lem2639224) (@lem2639219)). Qed.
Lemma lem2639226 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2639228 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639229 : term109 = term110.
Proof. exact (@lem2639228 (NUMERAL 0) term32). Qed.
Lemma lem2639230 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639231 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639232 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639231 h1) (fun h1 : term110 = True => @lem2639230)). Qed.
Lemma lem2639233 : term110 = True.
Proof. exact (EQ_MP (@lem2639232) (@lem2639230)). Qed.
Lemma lem2639234 : term109 = True.
Proof. exact (TRANS (@lem2639229) (@lem2639233)). Qed.
Lemma lem2639235 : True = term109.
Proof. exact (SYM (@lem2639234)). Qed.
Lemma lem2639236 : term109.
Proof. exact (EQ_MP (@lem2639235) (@lem0)). Qed.
Lemma lem2639237 : term263.
Proof. exact (@lem2639226 (@lem2639236)). Qed.
Lemma lem2639239 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639240 : term109 = term110.
Proof. exact (@lem2639239 (NUMERAL 0) term32). Qed.
Lemma lem2639241 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639242 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639243 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639242 h1) (fun h1 : term110 = True => @lem2639241)). Qed.
Lemma lem2639244 : term110 = True.
Proof. exact (EQ_MP (@lem2639243) (@lem2639241)). Qed.
Lemma lem2639245 : term109 = True.
Proof. exact (TRANS (@lem2639240) (@lem2639244)). Qed.
Lemma lem2639246 : True = term109.
Proof. exact (SYM (@lem2639245)). Qed.
Lemma lem2639247 : term109.
Proof. exact (EQ_MP (@lem2639246) (@lem0)). Qed.
Lemma lem2639248 : term261 = term264.
Proof. exact (@lem2639237 (@lem2639247)). Qed.
Lemma lem2639250 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639251 : term123 = term124.
Proof. exact (@lem2639250 term32 term32). Qed.
Lemma lem2639252 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639253 : term120 = term32.
Proof. exact (EQ_MP (@lem2639252) (@lem940073)). Qed.
Lemma lem2639254 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639255 : term118 = term31.
Proof. exact (MK_COMB (@lem2639254) (@lem2639253)). Qed.
Lemma lem2639256 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639257 : term124 = term97.
Proof. exact (MK_COMB (@lem2639256) (@lem2639255)). Qed.
Lemma lem2639258 : term123 = term97.
Proof. exact (TRANS (@lem2639251) (@lem2639257)). Qed.
Lemma lem2639260 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639261 : term131 = term38.
Proof. exact (@lem2639260 term32). Qed.
Lemma lem2639262 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639263 : term265 = term259.
Proof. exact (MK_COMB (@lem2639262) (@lem2639261)). Qed.
Lemma lem2639264 : term264 = term258.
Proof. exact (MK_COMB (@lem2639263) (@lem2639258)). Qed.
Lemma lem2639266 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2639267 : term258 = term268.
Proof. exact (@lem2639266 (NUMERAL 0) term32). Qed.
Lemma lem2639268 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639269 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2639270 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639269 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2639268)). Qed.
Lemma lem2639271 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2639270) (@lem2639268)). Qed.
Lemma lem2639272 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2639273 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2639274 : term269 = (and True).
Proof. exact (MK_COMB (@lem2639273) (@lem2639272)). Qed.
Lemma lem2639275 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2639274) (@lem2639271)). Qed.
Lemma lem2639277 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2639278 : term268 = False.
Proof. exact (TRANS (@lem2639275) (@lem2639277)). Qed.
Lemma lem2639279 : term258 = False.
Proof. exact (TRANS (@lem2639267) (@lem2639278)). Qed.
Lemma lem2639280 : term264 = False.
Proof. exact (TRANS (@lem2639264) (@lem2639279)). Qed.
Lemma lem2639281 : term261 = False.
Proof. exact (TRANS (@lem2639248) (@lem2639280)). Qed.
Lemma lem2639282 : term258 = False.
Proof. exact (TRANS (@lem2639225) (@lem2639281)). Qed.
Lemma lem2639283 : term257 = False.
Proof. exact (TRANS (@lem2639216) (@lem2639282)). Qed.
Lemma lem2639284 (m : int) (n : int) (h1 : term1191 m n) : False.
Proof. exact (EQ_MP (@lem2639283) (@lem2639213 m n h1)). Qed.
Lemma lem2639285 (m : int) (n : int) (h1 : term622 m n) : False.
Proof. exact (or_elim (@lem2638706 m n h1) (fun h0 : term1190 m n => @lem2638995 m n h0) (fun h0 : term1191 m n => @lem2639284 m n h0)). Qed.
Lemma lem2639286 (m : int) (n : int) (h1 : term903 m n) : term903 m n.
Proof. exact (h1). Qed.
Lemma lem2639287 (m : int) (n : int) (h1 : term893 m n) : term893 m n.
Proof. exact (h1). Qed.
Lemma lem2639288 (m : int) (n : int) (h1 : term893 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2639287 m n h1)). Qed.
Lemma lem2639289 (m : int) (n : int) (h1 : term893 m n) : term889 m n.
Proof. exact (proj1 (@lem2639287 m n h1)). Qed.
Lemma lem2639290 (m : int) (n : int) (h1 : term893 m n) : term158 n.
Proof. exact (proj2 (@lem2639289 m n h1)). Qed.
Lemma lem2639297 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2639298 : term229 = term109.
Proof. exact (@lem2639297 term38 term31). Qed.
Lemma lem2639300 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639301 : term31 = term99.
Proof. exact (@lem2639300 term32). Qed.
Lemma lem2639303 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639304 : term38 = term134.
Proof. exact (@lem2639303 (NUMERAL 0)). Qed.
Lemma lem2639305 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639306 : term230 = term231.
Proof. exact (MK_COMB (@lem2639305) (@lem2639304)). Qed.
Lemma lem2639307 : term109 = term232.
Proof. exact (MK_COMB (@lem2639306) (@lem2639301)). Qed.
Lemma lem2639308 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2639310 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639311 : term109 = term110.
Proof. exact (@lem2639310 (NUMERAL 0) term32). Qed.
Lemma lem2639312 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639313 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639314 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639313 h1) (fun h1 : term110 = True => @lem2639312)). Qed.
Lemma lem2639315 : term110 = True.
Proof. exact (EQ_MP (@lem2639314) (@lem2639312)). Qed.
Lemma lem2639316 : term109 = True.
Proof. exact (TRANS (@lem2639311) (@lem2639315)). Qed.
Lemma lem2639317 : True = term109.
Proof. exact (SYM (@lem2639316)). Qed.
Lemma lem2639318 : term109.
Proof. exact (EQ_MP (@lem2639317) (@lem0)). Qed.
Lemma lem2639319 : term234.
Proof. exact (@lem2639308 (@lem2639318)). Qed.
Lemma lem2639321 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639322 : term109 = term110.
Proof. exact (@lem2639321 (NUMERAL 0) term32). Qed.
Lemma lem2639323 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639324 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639325 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639324 h1) (fun h1 : term110 = True => @lem2639323)). Qed.
Lemma lem2639326 : term110 = True.
Proof. exact (EQ_MP (@lem2639325) (@lem2639323)). Qed.
Lemma lem2639327 : term109 = True.
Proof. exact (TRANS (@lem2639322) (@lem2639326)). Qed.
Lemma lem2639328 : True = term109.
Proof. exact (SYM (@lem2639327)). Qed.
Lemma lem2639329 : term109.
Proof. exact (EQ_MP (@lem2639328) (@lem0)). Qed.
Lemma lem2639330 : term232 = term235.
Proof. exact (@lem2639319 (@lem2639329)). Qed.
Lemma lem2639332 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639333 : term117 = term118.
Proof. exact (@lem2639332 term32 term32). Qed.
Lemma lem2639334 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639335 : term120 = term32.
Proof. exact (EQ_MP (@lem2639334) (@lem940073)). Qed.
Lemma lem2639336 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639337 : term118 = term31.
Proof. exact (MK_COMB (@lem2639336) (@lem2639335)). Qed.
Lemma lem2639338 : term117 = term31.
Proof. exact (TRANS (@lem2639333) (@lem2639337)). Qed.
Lemma lem2639340 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639341 : term131 = term38.
Proof. exact (@lem2639340 term32). Qed.
Lemma lem2639342 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639343 : term236 = term230.
Proof. exact (MK_COMB (@lem2639342) (@lem2639341)). Qed.
Lemma lem2639344 : term235 = term109.
Proof. exact (MK_COMB (@lem2639343) (@lem2639338)). Qed.
Lemma lem2639346 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639347 : term109 = term110.
Proof. exact (@lem2639346 (NUMERAL 0) term32). Qed.
Lemma lem2639348 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639349 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639350 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639349 h1) (fun h1 : term110 = True => @lem2639348)). Qed.
Lemma lem2639351 : term110 = True.
Proof. exact (EQ_MP (@lem2639350) (@lem2639348)). Qed.
Lemma lem2639352 : term109 = True.
Proof. exact (TRANS (@lem2639347) (@lem2639351)). Qed.
Lemma lem2639353 : term235 = True.
Proof. exact (TRANS (@lem2639344) (@lem2639352)). Qed.
Lemma lem2639354 : term232 = True.
Proof. exact (TRANS (@lem2639330) (@lem2639353)). Qed.
Lemma lem2639355 : term109 = True.
Proof. exact (TRANS (@lem2639307) (@lem2639354)). Qed.
Lemma lem2639356 : term229 = True.
Proof. exact (TRANS (@lem2639298) (@lem2639355)). Qed.
Lemma lem2639357 : True = term229.
Proof. exact (SYM (@lem2639356)). Qed.
Lemma lem2639358 : term229.
Proof. exact (EQ_MP (@lem2639357) (@lem0)). Qed.
Lemma lem2639359 (m : int) (n : int) (h1 : term893 m n) : term237 n.
Proof. exact (conj (@lem2639358) (@lem2639290 m n h1)). Qed.
Lemma lem2639361 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2639362 (n : int) : term239 n.
Proof. exact (@lem2639361 term31 (term154 n)). Qed.
Lemma lem2639363 (m : int) (n : int) (h1 : term893 m n) : term240 n.
Proof. exact (@lem2639362 n (@lem2639359 m n h1)). Qed.
Lemma lem2639364 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2639365 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639366 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2639365) (@lem2639364 n)). Qed.
Lemma lem2639367 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639368 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2639366 n) (@lem2639367)). Qed.
Lemma lem2639369 (m : int) (n : int) (h1 : term893 m n) : term158 n.
Proof. exact (EQ_MP (@lem2639368 n) (@lem2639363 m n h1)). Qed.
Lemma lem2639371 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2639372 (n : int) : term287 n.
Proof. exact (@lem2639371 (real_of_int n)). Qed.
Lemma lem2639373 (m : int) (n : int) (h1 : term893 m n) : term288 n.
Proof. exact (@lem2639372 n (@lem2639288 m n h1)). Qed.
Lemma lem2639374 (m : int) (n : int) (h1 : term893 m n) : term291 n.
Proof. exact (@lem2639373 m n h1 term31). Qed.
Lemma lem2639375 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2639376 (m : int) (n : int) (h1 : term893 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2639375 n) (@lem2639374 m n h1)). Qed.
Lemma lem2639377 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2639378 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2639379 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2639378) (@lem2639377 n)). Qed.
Lemma lem2639380 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639381 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2639379 n) (@lem2639380)). Qed.
Lemma lem2639382 (m : int) (n : int) (h1 : term893 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2639381 n) (@lem2639376 m n h1)). Qed.
Lemma lem2639383 (m : int) (n : int) (h1 : term893 m n) : term248 n.
Proof. exact (conj (@lem2639382 m n h1) (@lem2639369 m n h1)). Qed.
Lemma lem2639385 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2639386 (n : int) : term250 n.
Proof. exact (@lem2639385 (real_of_int n) (term154 n)). Qed.
Lemma lem2639387 (m : int) (n : int) (h1 : term893 m n) : term251 n.
Proof. exact (@lem2639386 n (@lem2639383 m n h1)). Qed.
Lemma lem2639388 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2639389 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2639391 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639392 : term31 = term99.
Proof. exact (@lem2639391 term32). Qed.
Lemma lem2639394 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639395 : term97 = term102.
Proof. exact (@lem2639394 term32). Qed.
Lemma lem2639396 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639397 : term103 = term104.
Proof. exact (MK_COMB (@lem2639396) (@lem2639395)). Qed.
Lemma lem2639398 : term105 = term106.
Proof. exact (MK_COMB (@lem2639397) (@lem2639392)). Qed.
Lemma lem2639399 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2639401 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639402 : term109 = term110.
Proof. exact (@lem2639401 (NUMERAL 0) term32). Qed.
Lemma lem2639403 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639404 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639405 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639404 h1) (fun h1 : term110 = True => @lem2639403)). Qed.
Lemma lem2639406 : term110 = True.
Proof. exact (EQ_MP (@lem2639405) (@lem2639403)). Qed.
Lemma lem2639407 : term109 = True.
Proof. exact (TRANS (@lem2639402) (@lem2639406)). Qed.
Lemma lem2639408 : True = term109.
Proof. exact (SYM (@lem2639407)). Qed.
Lemma lem2639409 : term109.
Proof. exact (EQ_MP (@lem2639408) (@lem0)). Qed.
Lemma lem2639410 : term112.
Proof. exact (@lem2639399 (@lem2639409)). Qed.
Lemma lem2639412 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639413 : term109 = term110.
Proof. exact (@lem2639412 (NUMERAL 0) term32). Qed.
Lemma lem2639414 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639415 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639416 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639415 h1) (fun h1 : term110 = True => @lem2639414)). Qed.
Lemma lem2639417 : term110 = True.
Proof. exact (EQ_MP (@lem2639416) (@lem2639414)). Qed.
Lemma lem2639418 : term109 = True.
Proof. exact (TRANS (@lem2639413) (@lem2639417)). Qed.
Lemma lem2639419 : True = term109.
Proof. exact (SYM (@lem2639418)). Qed.
Lemma lem2639420 : term109.
Proof. exact (EQ_MP (@lem2639419) (@lem0)). Qed.
Lemma lem2639421 : term113.
Proof. exact (@lem2639410 (@lem2639420)). Qed.
Lemma lem2639423 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639424 : term109 = term110.
Proof. exact (@lem2639423 (NUMERAL 0) term32). Qed.
Lemma lem2639425 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639426 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639427 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639426 h1) (fun h1 : term110 = True => @lem2639425)). Qed.
Lemma lem2639428 : term110 = True.
Proof. exact (EQ_MP (@lem2639427) (@lem2639425)). Qed.
Lemma lem2639429 : term109 = True.
Proof. exact (TRANS (@lem2639424) (@lem2639428)). Qed.
Lemma lem2639430 : True = term109.
Proof. exact (SYM (@lem2639429)). Qed.
Lemma lem2639431 : term109.
Proof. exact (EQ_MP (@lem2639430) (@lem0)). Qed.
Lemma lem2639432 : term114.
Proof. exact (@lem2639421 (@lem2639431)). Qed.
Lemma lem2639434 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639435 : term117 = term118.
Proof. exact (@lem2639434 term32 term32). Qed.
Lemma lem2639436 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639437 : term120 = term32.
Proof. exact (EQ_MP (@lem2639436) (@lem940073)). Qed.
Lemma lem2639438 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639439 : term118 = term31.
Proof. exact (MK_COMB (@lem2639438) (@lem2639437)). Qed.
Lemma lem2639440 : term117 = term31.
Proof. exact (TRANS (@lem2639435) (@lem2639439)). Qed.
Lemma lem2639442 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639443 : term123 = term124.
Proof. exact (@lem2639442 term32 term32). Qed.
Lemma lem2639444 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639445 : term120 = term32.
Proof. exact (EQ_MP (@lem2639444) (@lem940073)). Qed.
Lemma lem2639446 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639447 : term118 = term31.
Proof. exact (MK_COMB (@lem2639446) (@lem2639445)). Qed.
Lemma lem2639448 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639449 : term124 = term97.
Proof. exact (MK_COMB (@lem2639448) (@lem2639447)). Qed.
Lemma lem2639450 : term123 = term97.
Proof. exact (TRANS (@lem2639443) (@lem2639449)). Qed.
Lemma lem2639451 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639452 : term125 = term103.
Proof. exact (MK_COMB (@lem2639451) (@lem2639450)). Qed.
Lemma lem2639453 : term126 = term105.
Proof. exact (MK_COMB (@lem2639452) (@lem2639440)). Qed.
Lemma lem2639455 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2639456 : term105 = term38.
Proof. exact (@lem2639455 term32). Qed.
Lemma lem2639457 : term126 = term38.
Proof. exact (TRANS (@lem2639453) (@lem2639456)). Qed.
Lemma lem2639458 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639459 : term128 = term129.
Proof. exact (MK_COMB (@lem2639458) (@lem2639457)). Qed.
Lemma lem2639460 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2639461 : term130 = term131.
Proof. exact (MK_COMB (@lem2639459) (@lem2639460)). Qed.
Lemma lem2639463 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639464 : term131 = term38.
Proof. exact (@lem2639463 term32). Qed.
Lemma lem2639465 : term130 = term38.
Proof. exact (TRANS (@lem2639461) (@lem2639464)). Qed.
Lemma lem2639467 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639468 : term117 = term118.
Proof. exact (@lem2639467 term32 term32). Qed.
Lemma lem2639469 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639470 : term120 = term32.
Proof. exact (EQ_MP (@lem2639469) (@lem940073)). Qed.
Lemma lem2639471 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639472 : term118 = term31.
Proof. exact (MK_COMB (@lem2639471) (@lem2639470)). Qed.
Lemma lem2639473 : term117 = term31.
Proof. exact (TRANS (@lem2639468) (@lem2639472)). Qed.
Lemma lem2639474 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2639475 : term133 = term131.
Proof. exact (MK_COMB (@lem2639474) (@lem2639473)). Qed.
Lemma lem2639477 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639478 : term131 = term38.
Proof. exact (@lem2639477 term32). Qed.
Lemma lem2639479 : term133 = term38.
Proof. exact (TRANS (@lem2639475) (@lem2639478)). Qed.
Lemma lem2639480 : term38 = term133.
Proof. exact (SYM (@lem2639479)). Qed.
Lemma lem2639481 : term130 = term133.
Proof. exact (TRANS (@lem2639465) (@lem2639480)). Qed.
Lemma lem2639482 : term106 = term134.
Proof. exact (@lem2639432 (@lem2639481)). Qed.
Lemma lem2639483 : term105 = term134.
Proof. exact (TRANS (@lem2639398) (@lem2639482)). Qed.
Lemma lem2639485 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2639486 : term134 = term38.
Proof. exact (@lem2639485 term38). Qed.
Lemma lem2639487 : term105 = term38.
Proof. exact (TRANS (@lem2639483) (@lem2639486)). Qed.
Lemma lem2639488 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639489 : term136 = term129.
Proof. exact (MK_COMB (@lem2639488) (@lem2639487)). Qed.
Lemma lem2639490 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2639491 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2639489) (@lem2639490 n)). Qed.
Lemma lem2639492 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2639389 n) (@lem2639491 n)). Qed.
Lemma lem2639493 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2639494 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2639492 n) (@lem2639493 n)). Qed.
Lemma lem2639495 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639496 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2639495) (@lem2639494 n)). Qed.
Lemma lem2639497 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2639498 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2639496 n) (@lem2639497)). Qed.
Lemma lem2639499 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2639388 n) (@lem2639498 n)). Qed.
Lemma lem2639500 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2639501 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2639499 n) (@lem2639500)). Qed.
Lemma lem2639502 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639503 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2639502) (@lem2639501 n)). Qed.
Lemma lem2639504 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639505 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2639503 n) (@lem2639504)). Qed.
Lemma lem2639506 (m : int) (n : int) (h1 : term893 m n) : term257.
Proof. exact (EQ_MP (@lem2639505 n) (@lem2639387 m n h1)). Qed.
Lemma lem2639508 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2639509 : term257 = term258.
Proof. exact (@lem2639508 term38 term97). Qed.
Lemma lem2639511 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639512 : term97 = term102.
Proof. exact (@lem2639511 term32). Qed.
Lemma lem2639514 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639515 : term38 = term134.
Proof. exact (@lem2639514 (NUMERAL 0)). Qed.
Lemma lem2639516 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639517 : term259 = term260.
Proof. exact (MK_COMB (@lem2639516) (@lem2639515)). Qed.
Lemma lem2639518 : term258 = term261.
Proof. exact (MK_COMB (@lem2639517) (@lem2639512)). Qed.
Lemma lem2639519 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2639521 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639522 : term109 = term110.
Proof. exact (@lem2639521 (NUMERAL 0) term32). Qed.
Lemma lem2639523 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639524 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639525 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639524 h1) (fun h1 : term110 = True => @lem2639523)). Qed.
Lemma lem2639526 : term110 = True.
Proof. exact (EQ_MP (@lem2639525) (@lem2639523)). Qed.
Lemma lem2639527 : term109 = True.
Proof. exact (TRANS (@lem2639522) (@lem2639526)). Qed.
Lemma lem2639528 : True = term109.
Proof. exact (SYM (@lem2639527)). Qed.
Lemma lem2639529 : term109.
Proof. exact (EQ_MP (@lem2639528) (@lem0)). Qed.
Lemma lem2639530 : term263.
Proof. exact (@lem2639519 (@lem2639529)). Qed.
Lemma lem2639532 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639533 : term109 = term110.
Proof. exact (@lem2639532 (NUMERAL 0) term32). Qed.
Lemma lem2639534 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639535 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639536 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639535 h1) (fun h1 : term110 = True => @lem2639534)). Qed.
Lemma lem2639537 : term110 = True.
Proof. exact (EQ_MP (@lem2639536) (@lem2639534)). Qed.
Lemma lem2639538 : term109 = True.
Proof. exact (TRANS (@lem2639533) (@lem2639537)). Qed.
Lemma lem2639539 : True = term109.
Proof. exact (SYM (@lem2639538)). Qed.
Lemma lem2639540 : term109.
Proof. exact (EQ_MP (@lem2639539) (@lem0)). Qed.
Lemma lem2639541 : term261 = term264.
Proof. exact (@lem2639530 (@lem2639540)). Qed.
Lemma lem2639543 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639544 : term123 = term124.
Proof. exact (@lem2639543 term32 term32). Qed.
Lemma lem2639545 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639546 : term120 = term32.
Proof. exact (EQ_MP (@lem2639545) (@lem940073)). Qed.
Lemma lem2639547 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639548 : term118 = term31.
Proof. exact (MK_COMB (@lem2639547) (@lem2639546)). Qed.
Lemma lem2639549 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639550 : term124 = term97.
Proof. exact (MK_COMB (@lem2639549) (@lem2639548)). Qed.
Lemma lem2639551 : term123 = term97.
Proof. exact (TRANS (@lem2639544) (@lem2639550)). Qed.
Lemma lem2639553 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639554 : term131 = term38.
Proof. exact (@lem2639553 term32). Qed.
Lemma lem2639555 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639556 : term265 = term259.
Proof. exact (MK_COMB (@lem2639555) (@lem2639554)). Qed.
Lemma lem2639557 : term264 = term258.
Proof. exact (MK_COMB (@lem2639556) (@lem2639551)). Qed.
Lemma lem2639559 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2639560 : term258 = term268.
Proof. exact (@lem2639559 (NUMERAL 0) term32). Qed.
Lemma lem2639561 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639562 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2639563 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639562 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2639561)). Qed.
Lemma lem2639564 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2639563) (@lem2639561)). Qed.
Lemma lem2639565 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2639566 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2639567 : term269 = (and True).
Proof. exact (MK_COMB (@lem2639566) (@lem2639565)). Qed.
Lemma lem2639568 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2639567) (@lem2639564)). Qed.
Lemma lem2639570 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2639571 : term268 = False.
Proof. exact (TRANS (@lem2639568) (@lem2639570)). Qed.
Lemma lem2639572 : term258 = False.
Proof. exact (TRANS (@lem2639560) (@lem2639571)). Qed.
Lemma lem2639573 : term264 = False.
Proof. exact (TRANS (@lem2639557) (@lem2639572)). Qed.
Lemma lem2639574 : term261 = False.
Proof. exact (TRANS (@lem2639541) (@lem2639573)). Qed.
Lemma lem2639575 : term258 = False.
Proof. exact (TRANS (@lem2639518) (@lem2639574)). Qed.
Lemma lem2639576 : term257 = False.
Proof. exact (TRANS (@lem2639509) (@lem2639575)). Qed.
Lemma lem2639577 (m : int) (n : int) (h1 : term893 m n) : False.
Proof. exact (EQ_MP (@lem2639576) (@lem2639506 m n h1)). Qed.
Lemma lem2639578 (m : int) (n : int) (h1 : term900 m n) : term900 m n.
Proof. exact (h1). Qed.
Lemma lem2639579 (m : int) (n : int) (h1 : term900 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2639578 m n h1)). Qed.
Lemma lem2639580 (m : int) (n : int) (h1 : term900 m n) : term896 m n.
Proof. exact (proj1 (@lem2639578 m n h1)). Qed.
Lemma lem2639581 (m : int) (n : int) (h1 : term900 m n) : term158 n.
Proof. exact (proj2 (@lem2639580 m n h1)). Qed.
Lemma lem2639588 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2639589 : term229 = term109.
Proof. exact (@lem2639588 term38 term31). Qed.
Lemma lem2639591 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639592 : term31 = term99.
Proof. exact (@lem2639591 term32). Qed.
Lemma lem2639594 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639595 : term38 = term134.
Proof. exact (@lem2639594 (NUMERAL 0)). Qed.
Lemma lem2639596 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639597 : term230 = term231.
Proof. exact (MK_COMB (@lem2639596) (@lem2639595)). Qed.
Lemma lem2639598 : term109 = term232.
Proof. exact (MK_COMB (@lem2639597) (@lem2639592)). Qed.
Lemma lem2639599 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2639601 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639602 : term109 = term110.
Proof. exact (@lem2639601 (NUMERAL 0) term32). Qed.
Lemma lem2639603 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639604 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639605 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639604 h1) (fun h1 : term110 = True => @lem2639603)). Qed.
Lemma lem2639606 : term110 = True.
Proof. exact (EQ_MP (@lem2639605) (@lem2639603)). Qed.
Lemma lem2639607 : term109 = True.
Proof. exact (TRANS (@lem2639602) (@lem2639606)). Qed.
Lemma lem2639608 : True = term109.
Proof. exact (SYM (@lem2639607)). Qed.
Lemma lem2639609 : term109.
Proof. exact (EQ_MP (@lem2639608) (@lem0)). Qed.
Lemma lem2639610 : term234.
Proof. exact (@lem2639599 (@lem2639609)). Qed.
Lemma lem2639612 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639613 : term109 = term110.
Proof. exact (@lem2639612 (NUMERAL 0) term32). Qed.
Lemma lem2639614 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639615 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639616 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639615 h1) (fun h1 : term110 = True => @lem2639614)). Qed.
Lemma lem2639617 : term110 = True.
Proof. exact (EQ_MP (@lem2639616) (@lem2639614)). Qed.
Lemma lem2639618 : term109 = True.
Proof. exact (TRANS (@lem2639613) (@lem2639617)). Qed.
Lemma lem2639619 : True = term109.
Proof. exact (SYM (@lem2639618)). Qed.
Lemma lem2639620 : term109.
Proof. exact (EQ_MP (@lem2639619) (@lem0)). Qed.
Lemma lem2639621 : term232 = term235.
Proof. exact (@lem2639610 (@lem2639620)). Qed.
Lemma lem2639623 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639624 : term117 = term118.
Proof. exact (@lem2639623 term32 term32). Qed.
Lemma lem2639625 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639626 : term120 = term32.
Proof. exact (EQ_MP (@lem2639625) (@lem940073)). Qed.
Lemma lem2639627 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639628 : term118 = term31.
Proof. exact (MK_COMB (@lem2639627) (@lem2639626)). Qed.
Lemma lem2639629 : term117 = term31.
Proof. exact (TRANS (@lem2639624) (@lem2639628)). Qed.
Lemma lem2639631 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639632 : term131 = term38.
Proof. exact (@lem2639631 term32). Qed.
Lemma lem2639633 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639634 : term236 = term230.
Proof. exact (MK_COMB (@lem2639633) (@lem2639632)). Qed.
Lemma lem2639635 : term235 = term109.
Proof. exact (MK_COMB (@lem2639634) (@lem2639629)). Qed.
Lemma lem2639637 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639638 : term109 = term110.
Proof. exact (@lem2639637 (NUMERAL 0) term32). Qed.
Lemma lem2639639 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639640 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639641 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639640 h1) (fun h1 : term110 = True => @lem2639639)). Qed.
Lemma lem2639642 : term110 = True.
Proof. exact (EQ_MP (@lem2639641) (@lem2639639)). Qed.
Lemma lem2639643 : term109 = True.
Proof. exact (TRANS (@lem2639638) (@lem2639642)). Qed.
Lemma lem2639644 : term235 = True.
Proof. exact (TRANS (@lem2639635) (@lem2639643)). Qed.
Lemma lem2639645 : term232 = True.
Proof. exact (TRANS (@lem2639621) (@lem2639644)). Qed.
Lemma lem2639646 : term109 = True.
Proof. exact (TRANS (@lem2639598) (@lem2639645)). Qed.
Lemma lem2639647 : term229 = True.
Proof. exact (TRANS (@lem2639589) (@lem2639646)). Qed.
Lemma lem2639648 : True = term229.
Proof. exact (SYM (@lem2639647)). Qed.
Lemma lem2639649 : term229.
Proof. exact (EQ_MP (@lem2639648) (@lem0)). Qed.
Lemma lem2639650 (m : int) (n : int) (h1 : term900 m n) : term237 n.
Proof. exact (conj (@lem2639649) (@lem2639581 m n h1)). Qed.
Lemma lem2639652 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2639653 (n : int) : term239 n.
Proof. exact (@lem2639652 term31 (term154 n)). Qed.
Lemma lem2639654 (m : int) (n : int) (h1 : term900 m n) : term240 n.
Proof. exact (@lem2639653 n (@lem2639650 m n h1)). Qed.
Lemma lem2639655 (n : int) : (term241 n) = (term154 n).
Proof. exact (@lem1982733 (term154 n)). Qed.
Lemma lem2639656 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639657 (n : int) : (term242 n) = (term157 n).
Proof. exact (MK_COMB (@lem2639656) (@lem2639655 n)). Qed.
Lemma lem2639658 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639659 (n : int) : (term240 n) = (term158 n).
Proof. exact (MK_COMB (@lem2639657 n) (@lem2639658)). Qed.
Lemma lem2639660 (m : int) (n : int) (h1 : term900 m n) : term158 n.
Proof. exact (EQ_MP (@lem2639659 n) (@lem2639654 m n h1)). Qed.
Lemma lem2639662 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2639663 (n : int) : term287 n.
Proof. exact (@lem2639662 (real_of_int n)). Qed.
Lemma lem2639664 (m : int) (n : int) (h1 : term900 m n) : term288 n.
Proof. exact (@lem2639663 n (@lem2639579 m n h1)). Qed.
Lemma lem2639665 (m : int) (n : int) (h1 : term900 m n) : term291 n.
Proof. exact (@lem2639664 m n h1 term31). Qed.
Lemma lem2639666 (n : int) : (term291 n) = ((term194 n) = term38).
Proof. exact (eq_refl (term291 n)). Qed.
Lemma lem2639667 (m : int) (n : int) (h1 : term900 m n) : (term194 n) = term38.
Proof. exact (EQ_MP (@lem2639666 n) (@lem2639665 m n h1)). Qed.
Lemma lem2639668 (n : int) : (term194 n) = (real_of_int n).
Proof. exact (@lem1982733 (real_of_int n)). Qed.
Lemma lem2639669 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem2639670 (n : int) : (term292 n) = (term77 n).
Proof. exact (MK_COMB (@lem2639669) (@lem2639668 n)). Qed.
Lemma lem2639671 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639672 (n : int) : ((term194 n) = term38) = ((real_of_int n) = term38).
Proof. exact (MK_COMB (@lem2639670 n) (@lem2639671)). Qed.
Lemma lem2639673 (m : int) (n : int) (h1 : term900 m n) : (real_of_int n) = term38.
Proof. exact (EQ_MP (@lem2639672 n) (@lem2639667 m n h1)). Qed.
Lemma lem2639674 (m : int) (n : int) (h1 : term900 m n) : term248 n.
Proof. exact (conj (@lem2639673 m n h1) (@lem2639660 m n h1)). Qed.
Lemma lem2639676 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2639677 (n : int) : term250 n.
Proof. exact (@lem2639676 (real_of_int n) (term154 n)). Qed.
Lemma lem2639678 (m : int) (n : int) (h1 : term900 m n) : term251 n.
Proof. exact (@lem2639677 n (@lem2639674 m n h1)). Qed.
Lemma lem2639679 (n : int) : (term252 n) = (term253 n).
Proof. exact (@lem1982763 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2639680 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2639682 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639683 : term31 = term99.
Proof. exact (@lem2639682 term32). Qed.
Lemma lem2639685 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639686 : term97 = term102.
Proof. exact (@lem2639685 term32). Qed.
Lemma lem2639687 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639688 : term103 = term104.
Proof. exact (MK_COMB (@lem2639687) (@lem2639686)). Qed.
Lemma lem2639689 : term105 = term106.
Proof. exact (MK_COMB (@lem2639688) (@lem2639683)). Qed.
Lemma lem2639690 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2639692 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639693 : term109 = term110.
Proof. exact (@lem2639692 (NUMERAL 0) term32). Qed.
Lemma lem2639694 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639695 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639696 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639695 h1) (fun h1 : term110 = True => @lem2639694)). Qed.
Lemma lem2639697 : term110 = True.
Proof. exact (EQ_MP (@lem2639696) (@lem2639694)). Qed.
Lemma lem2639698 : term109 = True.
Proof. exact (TRANS (@lem2639693) (@lem2639697)). Qed.
Lemma lem2639699 : True = term109.
Proof. exact (SYM (@lem2639698)). Qed.
Lemma lem2639700 : term109.
Proof. exact (EQ_MP (@lem2639699) (@lem0)). Qed.
Lemma lem2639701 : term112.
Proof. exact (@lem2639690 (@lem2639700)). Qed.
Lemma lem2639703 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639704 : term109 = term110.
Proof. exact (@lem2639703 (NUMERAL 0) term32). Qed.
Lemma lem2639705 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639706 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639707 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639706 h1) (fun h1 : term110 = True => @lem2639705)). Qed.
Lemma lem2639708 : term110 = True.
Proof. exact (EQ_MP (@lem2639707) (@lem2639705)). Qed.
Lemma lem2639709 : term109 = True.
Proof. exact (TRANS (@lem2639704) (@lem2639708)). Qed.
Lemma lem2639710 : True = term109.
Proof. exact (SYM (@lem2639709)). Qed.
Lemma lem2639711 : term109.
Proof. exact (EQ_MP (@lem2639710) (@lem0)). Qed.
Lemma lem2639712 : term113.
Proof. exact (@lem2639701 (@lem2639711)). Qed.
Lemma lem2639714 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639715 : term109 = term110.
Proof. exact (@lem2639714 (NUMERAL 0) term32). Qed.
Lemma lem2639716 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639717 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639718 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639717 h1) (fun h1 : term110 = True => @lem2639716)). Qed.
Lemma lem2639719 : term110 = True.
Proof. exact (EQ_MP (@lem2639718) (@lem2639716)). Qed.
Lemma lem2639720 : term109 = True.
Proof. exact (TRANS (@lem2639715) (@lem2639719)). Qed.
Lemma lem2639721 : True = term109.
Proof. exact (SYM (@lem2639720)). Qed.
Lemma lem2639722 : term109.
Proof. exact (EQ_MP (@lem2639721) (@lem0)). Qed.
Lemma lem2639723 : term114.
Proof. exact (@lem2639712 (@lem2639722)). Qed.
Lemma lem2639725 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639726 : term117 = term118.
Proof. exact (@lem2639725 term32 term32). Qed.
Lemma lem2639727 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639728 : term120 = term32.
Proof. exact (EQ_MP (@lem2639727) (@lem940073)). Qed.
Lemma lem2639729 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639730 : term118 = term31.
Proof. exact (MK_COMB (@lem2639729) (@lem2639728)). Qed.
Lemma lem2639731 : term117 = term31.
Proof. exact (TRANS (@lem2639726) (@lem2639730)). Qed.
Lemma lem2639733 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639734 : term123 = term124.
Proof. exact (@lem2639733 term32 term32). Qed.
Lemma lem2639735 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639736 : term120 = term32.
Proof. exact (EQ_MP (@lem2639735) (@lem940073)). Qed.
Lemma lem2639737 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639738 : term118 = term31.
Proof. exact (MK_COMB (@lem2639737) (@lem2639736)). Qed.
Lemma lem2639739 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639740 : term124 = term97.
Proof. exact (MK_COMB (@lem2639739) (@lem2639738)). Qed.
Lemma lem2639741 : term123 = term97.
Proof. exact (TRANS (@lem2639734) (@lem2639740)). Qed.
Lemma lem2639742 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639743 : term125 = term103.
Proof. exact (MK_COMB (@lem2639742) (@lem2639741)). Qed.
Lemma lem2639744 : term126 = term105.
Proof. exact (MK_COMB (@lem2639743) (@lem2639731)). Qed.
Lemma lem2639746 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2639747 : term105 = term38.
Proof. exact (@lem2639746 term32). Qed.
Lemma lem2639748 : term126 = term38.
Proof. exact (TRANS (@lem2639744) (@lem2639747)). Qed.
Lemma lem2639749 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639750 : term128 = term129.
Proof. exact (MK_COMB (@lem2639749) (@lem2639748)). Qed.
Lemma lem2639751 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2639752 : term130 = term131.
Proof. exact (MK_COMB (@lem2639750) (@lem2639751)). Qed.
Lemma lem2639754 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639755 : term131 = term38.
Proof. exact (@lem2639754 term32). Qed.
Lemma lem2639756 : term130 = term38.
Proof. exact (TRANS (@lem2639752) (@lem2639755)). Qed.
Lemma lem2639758 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639759 : term117 = term118.
Proof. exact (@lem2639758 term32 term32). Qed.
Lemma lem2639760 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639761 : term120 = term32.
Proof. exact (EQ_MP (@lem2639760) (@lem940073)). Qed.
Lemma lem2639762 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639763 : term118 = term31.
Proof. exact (MK_COMB (@lem2639762) (@lem2639761)). Qed.
Lemma lem2639764 : term117 = term31.
Proof. exact (TRANS (@lem2639759) (@lem2639763)). Qed.
Lemma lem2639765 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2639766 : term133 = term131.
Proof. exact (MK_COMB (@lem2639765) (@lem2639764)). Qed.
Lemma lem2639768 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639769 : term131 = term38.
Proof. exact (@lem2639768 term32). Qed.
Lemma lem2639770 : term133 = term38.
Proof. exact (TRANS (@lem2639766) (@lem2639769)). Qed.
Lemma lem2639771 : term38 = term133.
Proof. exact (SYM (@lem2639770)). Qed.
Lemma lem2639772 : term130 = term133.
Proof. exact (TRANS (@lem2639756) (@lem2639771)). Qed.
Lemma lem2639773 : term106 = term134.
Proof. exact (@lem2639723 (@lem2639772)). Qed.
Lemma lem2639774 : term105 = term134.
Proof. exact (TRANS (@lem2639689) (@lem2639773)). Qed.
Lemma lem2639776 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2639777 : term134 = term38.
Proof. exact (@lem2639776 term38). Qed.
Lemma lem2639778 : term105 = term38.
Proof. exact (TRANS (@lem2639774) (@lem2639777)). Qed.
Lemma lem2639779 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2639780 : term136 = term129.
Proof. exact (MK_COMB (@lem2639779) (@lem2639778)). Qed.
Lemma lem2639781 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2639782 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2639780) (@lem2639781 n)). Qed.
Lemma lem2639783 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2639680 n) (@lem2639782 n)). Qed.
Lemma lem2639784 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2639785 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2639783 n) (@lem2639784 n)). Qed.
Lemma lem2639786 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639787 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2639786) (@lem2639785 n)). Qed.
Lemma lem2639788 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2639789 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2639787 n) (@lem2639788)). Qed.
Lemma lem2639790 (n : int) : (term252 n) = term254.
Proof. exact (TRANS (@lem2639679 n) (@lem2639789 n)). Qed.
Lemma lem2639791 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2639792 (n : int) : (term252 n) = term97.
Proof. exact (TRANS (@lem2639790 n) (@lem2639791)). Qed.
Lemma lem2639793 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639794 (n : int) : (term255 n) = term256.
Proof. exact (MK_COMB (@lem2639793) (@lem2639792 n)). Qed.
Lemma lem2639795 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639796 (n : int) : (term251 n) = term257.
Proof. exact (MK_COMB (@lem2639794 n) (@lem2639795)). Qed.
Lemma lem2639797 (m : int) (n : int) (h1 : term900 m n) : term257.
Proof. exact (EQ_MP (@lem2639796 n) (@lem2639678 m n h1)). Qed.
Lemma lem2639799 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2639800 : term257 = term258.
Proof. exact (@lem2639799 term38 term97). Qed.
Lemma lem2639802 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639803 : term97 = term102.
Proof. exact (@lem2639802 term32). Qed.
Lemma lem2639805 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639806 : term38 = term134.
Proof. exact (@lem2639805 (NUMERAL 0)). Qed.
Lemma lem2639807 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639808 : term259 = term260.
Proof. exact (MK_COMB (@lem2639807) (@lem2639806)). Qed.
Lemma lem2639809 : term258 = term261.
Proof. exact (MK_COMB (@lem2639808) (@lem2639803)). Qed.
Lemma lem2639810 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2639812 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639813 : term109 = term110.
Proof. exact (@lem2639812 (NUMERAL 0) term32). Qed.
Lemma lem2639814 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639815 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639816 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639815 h1) (fun h1 : term110 = True => @lem2639814)). Qed.
Lemma lem2639817 : term110 = True.
Proof. exact (EQ_MP (@lem2639816) (@lem2639814)). Qed.
Lemma lem2639818 : term109 = True.
Proof. exact (TRANS (@lem2639813) (@lem2639817)). Qed.
Lemma lem2639819 : True = term109.
Proof. exact (SYM (@lem2639818)). Qed.
Lemma lem2639820 : term109.
Proof. exact (EQ_MP (@lem2639819) (@lem0)). Qed.
Lemma lem2639821 : term263.
Proof. exact (@lem2639810 (@lem2639820)). Qed.
Lemma lem2639823 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639824 : term109 = term110.
Proof. exact (@lem2639823 (NUMERAL 0) term32). Qed.
Lemma lem2639825 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639826 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639827 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639826 h1) (fun h1 : term110 = True => @lem2639825)). Qed.
Lemma lem2639828 : term110 = True.
Proof. exact (EQ_MP (@lem2639827) (@lem2639825)). Qed.
Lemma lem2639829 : term109 = True.
Proof. exact (TRANS (@lem2639824) (@lem2639828)). Qed.
Lemma lem2639830 : True = term109.
Proof. exact (SYM (@lem2639829)). Qed.
Lemma lem2639831 : term109.
Proof. exact (EQ_MP (@lem2639830) (@lem0)). Qed.
Lemma lem2639832 : term261 = term264.
Proof. exact (@lem2639821 (@lem2639831)). Qed.
Lemma lem2639834 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2639835 : term123 = term124.
Proof. exact (@lem2639834 term32 term32). Qed.
Lemma lem2639836 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639837 : term120 = term32.
Proof. exact (EQ_MP (@lem2639836) (@lem940073)). Qed.
Lemma lem2639838 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639839 : term118 = term31.
Proof. exact (MK_COMB (@lem2639838) (@lem2639837)). Qed.
Lemma lem2639840 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2639841 : term124 = term97.
Proof. exact (MK_COMB (@lem2639840) (@lem2639839)). Qed.
Lemma lem2639842 : term123 = term97.
Proof. exact (TRANS (@lem2639835) (@lem2639841)). Qed.
Lemma lem2639844 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639845 : term131 = term38.
Proof. exact (@lem2639844 term32). Qed.
Lemma lem2639846 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2639847 : term265 = term259.
Proof. exact (MK_COMB (@lem2639846) (@lem2639845)). Qed.
Lemma lem2639848 : term264 = term258.
Proof. exact (MK_COMB (@lem2639847) (@lem2639842)). Qed.
Lemma lem2639850 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2639851 : term258 = term268.
Proof. exact (@lem2639850 (NUMERAL 0) term32). Qed.
Lemma lem2639852 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639853 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2639854 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639853 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2639852)). Qed.
Lemma lem2639855 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2639854) (@lem2639852)). Qed.
Lemma lem2639856 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2639857 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2639858 : term269 = (and True).
Proof. exact (MK_COMB (@lem2639857) (@lem2639856)). Qed.
Lemma lem2639859 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2639858) (@lem2639855)). Qed.
Lemma lem2639861 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2639862 : term268 = False.
Proof. exact (TRANS (@lem2639859) (@lem2639861)). Qed.
Lemma lem2639863 : term258 = False.
Proof. exact (TRANS (@lem2639851) (@lem2639862)). Qed.
Lemma lem2639864 : term264 = False.
Proof. exact (TRANS (@lem2639848) (@lem2639863)). Qed.
Lemma lem2639865 : term261 = False.
Proof. exact (TRANS (@lem2639832) (@lem2639864)). Qed.
Lemma lem2639866 : term258 = False.
Proof. exact (TRANS (@lem2639809) (@lem2639865)). Qed.
Lemma lem2639867 : term257 = False.
Proof. exact (TRANS (@lem2639800) (@lem2639866)). Qed.
Lemma lem2639868 (m : int) (n : int) (h1 : term900 m n) : False.
Proof. exact (EQ_MP (@lem2639867) (@lem2639797 m n h1)). Qed.
Lemma lem2639869 (m : int) (n : int) (h1 : term903 m n) : False.
Proof. exact (or_elim (@lem2639286 m n h1) (fun h0 : term893 m n => @lem2639577 m n h0) (fun h0 : term900 m n => @lem2639868 m n h0)). Qed.
Lemma lem2639870 (m : int) (n : int) (h1 : term904 m n) : False.
Proof. exact (or_elim (@lem2638705 m n h1) (fun h0 : term622 m n => @lem2639285 m n h0) (fun h0 : term903 m n => @lem2639869 m n h0)). Qed.
Lemma lem2639871 (m : int) (n : int) (h1 : term918 m n) : term918 m n.
Proof. exact (h1). Qed.
Lemma lem2639872 (m : int) (n : int) (h1 : term613 m n) : term613 m n.
Proof. exact (h1). Qed.
Lemma lem2639873 (m : int) (n : int) (h1 : term1192 m n) : term1192 m n.
Proof. exact (h1). Qed.
Lemma lem2639874 (m : int) (n : int) (h1 : term1192 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2639873 m n h1)). Qed.
Lemma lem2639875 (m : int) (n : int) (h1 : term1192 m n) : term585 m n.
Proof. exact (proj1 (@lem2639873 m n h1)). Qed.
Lemma lem2639876 (m : int) (n : int) (h1 : term1192 m n) : term167 n.
Proof. exact (proj2 (@lem2639875 m n h1)). Qed.
Lemma lem2639881 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2639882 : term229 = term109.
Proof. exact (@lem2639881 term38 term31). Qed.
Lemma lem2639884 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639885 : term31 = term99.
Proof. exact (@lem2639884 term32). Qed.
Lemma lem2639887 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639888 : term38 = term134.
Proof. exact (@lem2639887 (NUMERAL 0)). Qed.
Lemma lem2639889 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639890 : term230 = term231.
Proof. exact (MK_COMB (@lem2639889) (@lem2639888)). Qed.
Lemma lem2639891 : term109 = term232.
Proof. exact (MK_COMB (@lem2639890) (@lem2639885)). Qed.
Lemma lem2639892 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2639894 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639895 : term109 = term110.
Proof. exact (@lem2639894 (NUMERAL 0) term32). Qed.
Lemma lem2639896 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639897 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639898 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639897 h1) (fun h1 : term110 = True => @lem2639896)). Qed.
Lemma lem2639899 : term110 = True.
Proof. exact (EQ_MP (@lem2639898) (@lem2639896)). Qed.
Lemma lem2639900 : term109 = True.
Proof. exact (TRANS (@lem2639895) (@lem2639899)). Qed.
Lemma lem2639901 : True = term109.
Proof. exact (SYM (@lem2639900)). Qed.
Lemma lem2639902 : term109.
Proof. exact (EQ_MP (@lem2639901) (@lem0)). Qed.
Lemma lem2639903 : term234.
Proof. exact (@lem2639892 (@lem2639902)). Qed.
Lemma lem2639905 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639906 : term109 = term110.
Proof. exact (@lem2639905 (NUMERAL 0) term32). Qed.
Lemma lem2639907 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639908 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639909 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639908 h1) (fun h1 : term110 = True => @lem2639907)). Qed.
Lemma lem2639910 : term110 = True.
Proof. exact (EQ_MP (@lem2639909) (@lem2639907)). Qed.
Lemma lem2639911 : term109 = True.
Proof. exact (TRANS (@lem2639906) (@lem2639910)). Qed.
Lemma lem2639912 : True = term109.
Proof. exact (SYM (@lem2639911)). Qed.
Lemma lem2639913 : term109.
Proof. exact (EQ_MP (@lem2639912) (@lem0)). Qed.
Lemma lem2639914 : term232 = term235.
Proof. exact (@lem2639903 (@lem2639913)). Qed.
Lemma lem2639916 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2639917 : term117 = term118.
Proof. exact (@lem2639916 term32 term32). Qed.
Lemma lem2639918 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2639919 : term120 = term32.
Proof. exact (EQ_MP (@lem2639918) (@lem940073)). Qed.
Lemma lem2639920 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2639921 : term118 = term31.
Proof. exact (MK_COMB (@lem2639920) (@lem2639919)). Qed.
Lemma lem2639922 : term117 = term31.
Proof. exact (TRANS (@lem2639917) (@lem2639921)). Qed.
Lemma lem2639924 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2639925 : term131 = term38.
Proof. exact (@lem2639924 term32). Qed.
Lemma lem2639926 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2639927 : term236 = term230.
Proof. exact (MK_COMB (@lem2639926) (@lem2639925)). Qed.
Lemma lem2639928 : term235 = term109.
Proof. exact (MK_COMB (@lem2639927) (@lem2639922)). Qed.
Lemma lem2639930 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639931 : term109 = term110.
Proof. exact (@lem2639930 (NUMERAL 0) term32). Qed.
Lemma lem2639932 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639933 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639934 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639933 h1) (fun h1 : term110 = True => @lem2639932)). Qed.
Lemma lem2639935 : term110 = True.
Proof. exact (EQ_MP (@lem2639934) (@lem2639932)). Qed.
Lemma lem2639936 : term109 = True.
Proof. exact (TRANS (@lem2639931) (@lem2639935)). Qed.
Lemma lem2639937 : term235 = True.
Proof. exact (TRANS (@lem2639928) (@lem2639936)). Qed.
Lemma lem2639938 : term232 = True.
Proof. exact (TRANS (@lem2639914) (@lem2639937)). Qed.
Lemma lem2639939 : term109 = True.
Proof. exact (TRANS (@lem2639891) (@lem2639938)). Qed.
Lemma lem2639940 : term229 = True.
Proof. exact (TRANS (@lem2639882) (@lem2639939)). Qed.
Lemma lem2639941 : True = term229.
Proof. exact (SYM (@lem2639940)). Qed.
Lemma lem2639942 : term229.
Proof. exact (EQ_MP (@lem2639941) (@lem0)). Qed.
Lemma lem2639943 (m : int) (n : int) (h1 : term1192 m n) : term271 n.
Proof. exact (conj (@lem2639942) (@lem2639876 m n h1)). Qed.
Lemma lem2639945 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2639946 (n : int) : term272 n.
Proof. exact (@lem2639945 term31 (term164 n)). Qed.
Lemma lem2639947 (m : int) (n : int) (h1 : term1192 m n) : term273 n.
Proof. exact (@lem2639946 n (@lem2639943 m n h1)). Qed.
Lemma lem2639948 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2639949 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2639950 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2639949) (@lem2639948 n)). Qed.
Lemma lem2639951 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2639952 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2639950 n) (@lem2639951)). Qed.
Lemma lem2639953 (m : int) (n : int) (h1 : term1192 m n) : term167 n.
Proof. exact (EQ_MP (@lem2639952 n) (@lem2639947 m n h1)). Qed.
Lemma lem2639955 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2639956 (n : int) : term287 n.
Proof. exact (@lem2639955 (real_of_int n)). Qed.
Lemma lem2639957 (m : int) (n : int) (h1 : term1192 m n) : term288 n.
Proof. exact (@lem2639956 n (@lem2639874 m n h1)). Qed.
Lemma lem2639958 (m : int) (n : int) (h1 : term1192 m n) : term289 n.
Proof. exact (@lem2639957 m n h1 term97). Qed.
Lemma lem2639959 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2639966 (m : int) (n : int) (h1 : term1192 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2639959 n) (@lem2639958 m n h1)). Qed.
Lemma lem2639967 (m : int) (n : int) (h1 : term1192 m n) : term270 n.
Proof. exact (conj (@lem2639966 m n h1) (@lem2639953 m n h1)). Qed.
Lemma lem2639969 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2639970 (n : int) : term279 n.
Proof. exact (@lem2639969 (term94 n) (term164 n)). Qed.
Lemma lem2639971 (m : int) (n : int) (h1 : term1192 m n) : term280 n.
Proof. exact (@lem2639970 n (@lem2639967 m n h1)). Qed.
Lemma lem2639972 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2639973 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2639975 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2639976 : term31 = term99.
Proof. exact (@lem2639975 term32). Qed.
Lemma lem2639978 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2639979 : term97 = term102.
Proof. exact (@lem2639978 term32). Qed.
Lemma lem2639980 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2639981 : term103 = term104.
Proof. exact (MK_COMB (@lem2639980) (@lem2639979)). Qed.
Lemma lem2639982 : term105 = term106.
Proof. exact (MK_COMB (@lem2639981) (@lem2639976)). Qed.
Lemma lem2639983 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2639985 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639986 : term109 = term110.
Proof. exact (@lem2639985 (NUMERAL 0) term32). Qed.
Lemma lem2639987 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639988 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2639989 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639988 h1) (fun h1 : term110 = True => @lem2639987)). Qed.
Lemma lem2639990 : term110 = True.
Proof. exact (EQ_MP (@lem2639989) (@lem2639987)). Qed.
Lemma lem2639991 : term109 = True.
Proof. exact (TRANS (@lem2639986) (@lem2639990)). Qed.
Lemma lem2639992 : True = term109.
Proof. exact (SYM (@lem2639991)). Qed.
Lemma lem2639993 : term109.
Proof. exact (EQ_MP (@lem2639992) (@lem0)). Qed.
Lemma lem2639994 : term112.
Proof. exact (@lem2639983 (@lem2639993)). Qed.
Lemma lem2639996 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2639997 : term109 = term110.
Proof. exact (@lem2639996 (NUMERAL 0) term32). Qed.
Lemma lem2639998 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2639999 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640000 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2639999 h1) (fun h1 : term110 = True => @lem2639998)). Qed.
Lemma lem2640001 : term110 = True.
Proof. exact (EQ_MP (@lem2640000) (@lem2639998)). Qed.
Lemma lem2640002 : term109 = True.
Proof. exact (TRANS (@lem2639997) (@lem2640001)). Qed.
Lemma lem2640003 : True = term109.
Proof. exact (SYM (@lem2640002)). Qed.
Lemma lem2640004 : term109.
Proof. exact (EQ_MP (@lem2640003) (@lem0)). Qed.
Lemma lem2640005 : term113.
Proof. exact (@lem2639994 (@lem2640004)). Qed.
Lemma lem2640007 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640008 : term109 = term110.
Proof. exact (@lem2640007 (NUMERAL 0) term32). Qed.
Lemma lem2640009 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640010 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640011 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640010 h1) (fun h1 : term110 = True => @lem2640009)). Qed.
Lemma lem2640012 : term110 = True.
Proof. exact (EQ_MP (@lem2640011) (@lem2640009)). Qed.
Lemma lem2640013 : term109 = True.
Proof. exact (TRANS (@lem2640008) (@lem2640012)). Qed.
Lemma lem2640014 : True = term109.
Proof. exact (SYM (@lem2640013)). Qed.
Lemma lem2640015 : term109.
Proof. exact (EQ_MP (@lem2640014) (@lem0)). Qed.
Lemma lem2640016 : term114.
Proof. exact (@lem2640005 (@lem2640015)). Qed.
Lemma lem2640018 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640019 : term117 = term118.
Proof. exact (@lem2640018 term32 term32). Qed.
Lemma lem2640020 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640021 : term120 = term32.
Proof. exact (EQ_MP (@lem2640020) (@lem940073)). Qed.
Lemma lem2640022 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640023 : term118 = term31.
Proof. exact (MK_COMB (@lem2640022) (@lem2640021)). Qed.
Lemma lem2640024 : term117 = term31.
Proof. exact (TRANS (@lem2640019) (@lem2640023)). Qed.
Lemma lem2640026 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640027 : term123 = term124.
Proof. exact (@lem2640026 term32 term32). Qed.
Lemma lem2640028 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640029 : term120 = term32.
Proof. exact (EQ_MP (@lem2640028) (@lem940073)). Qed.
Lemma lem2640030 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640031 : term118 = term31.
Proof. exact (MK_COMB (@lem2640030) (@lem2640029)). Qed.
Lemma lem2640032 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640033 : term124 = term97.
Proof. exact (MK_COMB (@lem2640032) (@lem2640031)). Qed.
Lemma lem2640034 : term123 = term97.
Proof. exact (TRANS (@lem2640027) (@lem2640033)). Qed.
Lemma lem2640035 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640036 : term125 = term103.
Proof. exact (MK_COMB (@lem2640035) (@lem2640034)). Qed.
Lemma lem2640037 : term126 = term105.
Proof. exact (MK_COMB (@lem2640036) (@lem2640024)). Qed.
Lemma lem2640039 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2640040 : term105 = term38.
Proof. exact (@lem2640039 term32). Qed.
Lemma lem2640041 : term126 = term38.
Proof. exact (TRANS (@lem2640037) (@lem2640040)). Qed.
Lemma lem2640042 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640043 : term128 = term129.
Proof. exact (MK_COMB (@lem2640042) (@lem2640041)). Qed.
Lemma lem2640044 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2640045 : term130 = term131.
Proof. exact (MK_COMB (@lem2640043) (@lem2640044)). Qed.
Lemma lem2640047 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640048 : term131 = term38.
Proof. exact (@lem2640047 term32). Qed.
Lemma lem2640049 : term130 = term38.
Proof. exact (TRANS (@lem2640045) (@lem2640048)). Qed.
Lemma lem2640051 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640052 : term117 = term118.
Proof. exact (@lem2640051 term32 term32). Qed.
Lemma lem2640053 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640054 : term120 = term32.
Proof. exact (EQ_MP (@lem2640053) (@lem940073)). Qed.
Lemma lem2640055 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640056 : term118 = term31.
Proof. exact (MK_COMB (@lem2640055) (@lem2640054)). Qed.
Lemma lem2640057 : term117 = term31.
Proof. exact (TRANS (@lem2640052) (@lem2640056)). Qed.
Lemma lem2640058 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2640059 : term133 = term131.
Proof. exact (MK_COMB (@lem2640058) (@lem2640057)). Qed.
Lemma lem2640061 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640062 : term131 = term38.
Proof. exact (@lem2640061 term32). Qed.
Lemma lem2640063 : term133 = term38.
Proof. exact (TRANS (@lem2640059) (@lem2640062)). Qed.
Lemma lem2640064 : term38 = term133.
Proof. exact (SYM (@lem2640063)). Qed.
Lemma lem2640065 : term130 = term133.
Proof. exact (TRANS (@lem2640049) (@lem2640064)). Qed.
Lemma lem2640066 : term106 = term134.
Proof. exact (@lem2640016 (@lem2640065)). Qed.
Lemma lem2640067 : term105 = term134.
Proof. exact (TRANS (@lem2639982) (@lem2640066)). Qed.
Lemma lem2640069 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2640070 : term134 = term38.
Proof. exact (@lem2640069 term38). Qed.
Lemma lem2640071 : term105 = term38.
Proof. exact (TRANS (@lem2640067) (@lem2640070)). Qed.
Lemma lem2640072 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640073 : term136 = term129.
Proof. exact (MK_COMB (@lem2640072) (@lem2640071)). Qed.
Lemma lem2640074 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2640075 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2640073) (@lem2640074 n)). Qed.
Lemma lem2640076 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2639973 n) (@lem2640075 n)). Qed.
Lemma lem2640077 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2640078 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2640076 n) (@lem2640077 n)). Qed.
Lemma lem2640079 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640080 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2640079) (@lem2640078 n)). Qed.
Lemma lem2640081 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2640082 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2640080 n) (@lem2640081)). Qed.
Lemma lem2640083 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2639972 n) (@lem2640082 n)). Qed.
Lemma lem2640084 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2640085 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2640083 n) (@lem2640084)). Qed.
Lemma lem2640086 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640087 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2640086) (@lem2640085 n)). Qed.
Lemma lem2640088 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640089 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2640087 n) (@lem2640088)). Qed.
Lemma lem2640090 (m : int) (n : int) (h1 : term1192 m n) : term257.
Proof. exact (EQ_MP (@lem2640089 n) (@lem2639971 m n h1)). Qed.
Lemma lem2640092 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2640093 : term257 = term258.
Proof. exact (@lem2640092 term38 term97). Qed.
Lemma lem2640095 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640096 : term97 = term102.
Proof. exact (@lem2640095 term32). Qed.
Lemma lem2640098 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640099 : term38 = term134.
Proof. exact (@lem2640098 (NUMERAL 0)). Qed.
Lemma lem2640100 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640101 : term259 = term260.
Proof. exact (MK_COMB (@lem2640100) (@lem2640099)). Qed.
Lemma lem2640102 : term258 = term261.
Proof. exact (MK_COMB (@lem2640101) (@lem2640096)). Qed.
Lemma lem2640103 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2640105 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640106 : term109 = term110.
Proof. exact (@lem2640105 (NUMERAL 0) term32). Qed.
Lemma lem2640107 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640108 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640109 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640108 h1) (fun h1 : term110 = True => @lem2640107)). Qed.
Lemma lem2640110 : term110 = True.
Proof. exact (EQ_MP (@lem2640109) (@lem2640107)). Qed.
Lemma lem2640111 : term109 = True.
Proof. exact (TRANS (@lem2640106) (@lem2640110)). Qed.
Lemma lem2640112 : True = term109.
Proof. exact (SYM (@lem2640111)). Qed.
Lemma lem2640113 : term109.
Proof. exact (EQ_MP (@lem2640112) (@lem0)). Qed.
Lemma lem2640114 : term263.
Proof. exact (@lem2640103 (@lem2640113)). Qed.
Lemma lem2640116 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640117 : term109 = term110.
Proof. exact (@lem2640116 (NUMERAL 0) term32). Qed.
Lemma lem2640118 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640119 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640120 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640119 h1) (fun h1 : term110 = True => @lem2640118)). Qed.
Lemma lem2640121 : term110 = True.
Proof. exact (EQ_MP (@lem2640120) (@lem2640118)). Qed.
Lemma lem2640122 : term109 = True.
Proof. exact (TRANS (@lem2640117) (@lem2640121)). Qed.
Lemma lem2640123 : True = term109.
Proof. exact (SYM (@lem2640122)). Qed.
Lemma lem2640124 : term109.
Proof. exact (EQ_MP (@lem2640123) (@lem0)). Qed.
Lemma lem2640125 : term261 = term264.
Proof. exact (@lem2640114 (@lem2640124)). Qed.
Lemma lem2640127 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640128 : term123 = term124.
Proof. exact (@lem2640127 term32 term32). Qed.
Lemma lem2640129 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640130 : term120 = term32.
Proof. exact (EQ_MP (@lem2640129) (@lem940073)). Qed.
Lemma lem2640131 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640132 : term118 = term31.
Proof. exact (MK_COMB (@lem2640131) (@lem2640130)). Qed.
Lemma lem2640133 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640134 : term124 = term97.
Proof. exact (MK_COMB (@lem2640133) (@lem2640132)). Qed.
Lemma lem2640135 : term123 = term97.
Proof. exact (TRANS (@lem2640128) (@lem2640134)). Qed.
Lemma lem2640137 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640138 : term131 = term38.
Proof. exact (@lem2640137 term32). Qed.
Lemma lem2640139 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640140 : term265 = term259.
Proof. exact (MK_COMB (@lem2640139) (@lem2640138)). Qed.
Lemma lem2640141 : term264 = term258.
Proof. exact (MK_COMB (@lem2640140) (@lem2640135)). Qed.
Lemma lem2640143 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2640144 : term258 = term268.
Proof. exact (@lem2640143 (NUMERAL 0) term32). Qed.
Lemma lem2640145 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640146 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2640147 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640146 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2640145)). Qed.
Lemma lem2640148 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2640147) (@lem2640145)). Qed.
Lemma lem2640149 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2640150 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2640151 : term269 = (and True).
Proof. exact (MK_COMB (@lem2640150) (@lem2640149)). Qed.
Lemma lem2640152 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2640151) (@lem2640148)). Qed.
Lemma lem2640154 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2640155 : term268 = False.
Proof. exact (TRANS (@lem2640152) (@lem2640154)). Qed.
Lemma lem2640156 : term258 = False.
Proof. exact (TRANS (@lem2640144) (@lem2640155)). Qed.
Lemma lem2640157 : term264 = False.
Proof. exact (TRANS (@lem2640141) (@lem2640156)). Qed.
Lemma lem2640158 : term261 = False.
Proof. exact (TRANS (@lem2640125) (@lem2640157)). Qed.
Lemma lem2640159 : term258 = False.
Proof. exact (TRANS (@lem2640102) (@lem2640158)). Qed.
Lemma lem2640160 : term257 = False.
Proof. exact (TRANS (@lem2640093) (@lem2640159)). Qed.
Lemma lem2640161 (m : int) (n : int) (h1 : term1192 m n) : False.
Proof. exact (EQ_MP (@lem2640160) (@lem2640090 m n h1)). Qed.
Lemma lem2640162 (m : int) (n : int) (h1 : term1193 m n) : term1193 m n.
Proof. exact (h1). Qed.
Lemma lem2640163 (m : int) (n : int) (h1 : term1193 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2640162 m n h1)). Qed.
Lemma lem2640164 (m : int) (n : int) (h1 : term1193 m n) : term586 m n.
Proof. exact (proj1 (@lem2640162 m n h1)). Qed.
Lemma lem2640165 (m : int) (n : int) (h1 : term1193 m n) : term167 n.
Proof. exact (proj2 (@lem2640164 m n h1)). Qed.
Lemma lem2640170 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2640171 : term229 = term109.
Proof. exact (@lem2640170 term38 term31). Qed.
Lemma lem2640173 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640174 : term31 = term99.
Proof. exact (@lem2640173 term32). Qed.
Lemma lem2640176 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640177 : term38 = term134.
Proof. exact (@lem2640176 (NUMERAL 0)). Qed.
Lemma lem2640178 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640179 : term230 = term231.
Proof. exact (MK_COMB (@lem2640178) (@lem2640177)). Qed.
Lemma lem2640180 : term109 = term232.
Proof. exact (MK_COMB (@lem2640179) (@lem2640174)). Qed.
Lemma lem2640181 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2640183 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640184 : term109 = term110.
Proof. exact (@lem2640183 (NUMERAL 0) term32). Qed.
Lemma lem2640185 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640186 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640187 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640186 h1) (fun h1 : term110 = True => @lem2640185)). Qed.
Lemma lem2640188 : term110 = True.
Proof. exact (EQ_MP (@lem2640187) (@lem2640185)). Qed.
Lemma lem2640189 : term109 = True.
Proof. exact (TRANS (@lem2640184) (@lem2640188)). Qed.
Lemma lem2640190 : True = term109.
Proof. exact (SYM (@lem2640189)). Qed.
Lemma lem2640191 : term109.
Proof. exact (EQ_MP (@lem2640190) (@lem0)). Qed.
Lemma lem2640192 : term234.
Proof. exact (@lem2640181 (@lem2640191)). Qed.
Lemma lem2640194 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640195 : term109 = term110.
Proof. exact (@lem2640194 (NUMERAL 0) term32). Qed.
Lemma lem2640196 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640197 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640198 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640197 h1) (fun h1 : term110 = True => @lem2640196)). Qed.
Lemma lem2640199 : term110 = True.
Proof. exact (EQ_MP (@lem2640198) (@lem2640196)). Qed.
Lemma lem2640200 : term109 = True.
Proof. exact (TRANS (@lem2640195) (@lem2640199)). Qed.
Lemma lem2640201 : True = term109.
Proof. exact (SYM (@lem2640200)). Qed.
Lemma lem2640202 : term109.
Proof. exact (EQ_MP (@lem2640201) (@lem0)). Qed.
Lemma lem2640203 : term232 = term235.
Proof. exact (@lem2640192 (@lem2640202)). Qed.
Lemma lem2640205 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640206 : term117 = term118.
Proof. exact (@lem2640205 term32 term32). Qed.
Lemma lem2640207 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640208 : term120 = term32.
Proof. exact (EQ_MP (@lem2640207) (@lem940073)). Qed.
Lemma lem2640209 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640210 : term118 = term31.
Proof. exact (MK_COMB (@lem2640209) (@lem2640208)). Qed.
Lemma lem2640211 : term117 = term31.
Proof. exact (TRANS (@lem2640206) (@lem2640210)). Qed.
Lemma lem2640213 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640214 : term131 = term38.
Proof. exact (@lem2640213 term32). Qed.
Lemma lem2640215 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640216 : term236 = term230.
Proof. exact (MK_COMB (@lem2640215) (@lem2640214)). Qed.
Lemma lem2640217 : term235 = term109.
Proof. exact (MK_COMB (@lem2640216) (@lem2640211)). Qed.
Lemma lem2640219 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640220 : term109 = term110.
Proof. exact (@lem2640219 (NUMERAL 0) term32). Qed.
Lemma lem2640221 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640222 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640223 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640222 h1) (fun h1 : term110 = True => @lem2640221)). Qed.
Lemma lem2640224 : term110 = True.
Proof. exact (EQ_MP (@lem2640223) (@lem2640221)). Qed.
Lemma lem2640225 : term109 = True.
Proof. exact (TRANS (@lem2640220) (@lem2640224)). Qed.
Lemma lem2640226 : term235 = True.
Proof. exact (TRANS (@lem2640217) (@lem2640225)). Qed.
Lemma lem2640227 : term232 = True.
Proof. exact (TRANS (@lem2640203) (@lem2640226)). Qed.
Lemma lem2640228 : term109 = True.
Proof. exact (TRANS (@lem2640180) (@lem2640227)). Qed.
Lemma lem2640229 : term229 = True.
Proof. exact (TRANS (@lem2640171) (@lem2640228)). Qed.
Lemma lem2640230 : True = term229.
Proof. exact (SYM (@lem2640229)). Qed.
Lemma lem2640231 : term229.
Proof. exact (EQ_MP (@lem2640230) (@lem0)). Qed.
Lemma lem2640232 (m : int) (n : int) (h1 : term1193 m n) : term271 n.
Proof. exact (conj (@lem2640231) (@lem2640165 m n h1)). Qed.
Lemma lem2640234 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2640235 (n : int) : term272 n.
Proof. exact (@lem2640234 term31 (term164 n)). Qed.
Lemma lem2640236 (m : int) (n : int) (h1 : term1193 m n) : term273 n.
Proof. exact (@lem2640235 n (@lem2640232 m n h1)). Qed.
Lemma lem2640237 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2640238 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640239 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2640238) (@lem2640237 n)). Qed.
Lemma lem2640240 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640241 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2640239 n) (@lem2640240)). Qed.
Lemma lem2640242 (m : int) (n : int) (h1 : term1193 m n) : term167 n.
Proof. exact (EQ_MP (@lem2640241 n) (@lem2640236 m n h1)). Qed.
Lemma lem2640244 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2640245 (n : int) : term287 n.
Proof. exact (@lem2640244 (real_of_int n)). Qed.
Lemma lem2640246 (m : int) (n : int) (h1 : term1193 m n) : term288 n.
Proof. exact (@lem2640245 n (@lem2640163 m n h1)). Qed.
Lemma lem2640247 (m : int) (n : int) (h1 : term1193 m n) : term289 n.
Proof. exact (@lem2640246 m n h1 term97). Qed.
Lemma lem2640248 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2640255 (m : int) (n : int) (h1 : term1193 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2640248 n) (@lem2640247 m n h1)). Qed.
Lemma lem2640256 (m : int) (n : int) (h1 : term1193 m n) : term270 n.
Proof. exact (conj (@lem2640255 m n h1) (@lem2640242 m n h1)). Qed.
Lemma lem2640258 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2640259 (n : int) : term279 n.
Proof. exact (@lem2640258 (term94 n) (term164 n)). Qed.
Lemma lem2640260 (m : int) (n : int) (h1 : term1193 m n) : term280 n.
Proof. exact (@lem2640259 n (@lem2640256 m n h1)). Qed.
Lemma lem2640261 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2640262 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2640264 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640265 : term31 = term99.
Proof. exact (@lem2640264 term32). Qed.
Lemma lem2640267 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640268 : term97 = term102.
Proof. exact (@lem2640267 term32). Qed.
Lemma lem2640269 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640270 : term103 = term104.
Proof. exact (MK_COMB (@lem2640269) (@lem2640268)). Qed.
Lemma lem2640271 : term105 = term106.
Proof. exact (MK_COMB (@lem2640270) (@lem2640265)). Qed.
Lemma lem2640272 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2640274 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640275 : term109 = term110.
Proof. exact (@lem2640274 (NUMERAL 0) term32). Qed.
Lemma lem2640276 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640277 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640278 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640277 h1) (fun h1 : term110 = True => @lem2640276)). Qed.
Lemma lem2640279 : term110 = True.
Proof. exact (EQ_MP (@lem2640278) (@lem2640276)). Qed.
Lemma lem2640280 : term109 = True.
Proof. exact (TRANS (@lem2640275) (@lem2640279)). Qed.
Lemma lem2640281 : True = term109.
Proof. exact (SYM (@lem2640280)). Qed.
Lemma lem2640282 : term109.
Proof. exact (EQ_MP (@lem2640281) (@lem0)). Qed.
Lemma lem2640283 : term112.
Proof. exact (@lem2640272 (@lem2640282)). Qed.
Lemma lem2640285 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640286 : term109 = term110.
Proof. exact (@lem2640285 (NUMERAL 0) term32). Qed.
Lemma lem2640287 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640288 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640289 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640288 h1) (fun h1 : term110 = True => @lem2640287)). Qed.
Lemma lem2640290 : term110 = True.
Proof. exact (EQ_MP (@lem2640289) (@lem2640287)). Qed.
Lemma lem2640291 : term109 = True.
Proof. exact (TRANS (@lem2640286) (@lem2640290)). Qed.
Lemma lem2640292 : True = term109.
Proof. exact (SYM (@lem2640291)). Qed.
Lemma lem2640293 : term109.
Proof. exact (EQ_MP (@lem2640292) (@lem0)). Qed.
Lemma lem2640294 : term113.
Proof. exact (@lem2640283 (@lem2640293)). Qed.
Lemma lem2640296 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640297 : term109 = term110.
Proof. exact (@lem2640296 (NUMERAL 0) term32). Qed.
Lemma lem2640298 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640299 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640300 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640299 h1) (fun h1 : term110 = True => @lem2640298)). Qed.
Lemma lem2640301 : term110 = True.
Proof. exact (EQ_MP (@lem2640300) (@lem2640298)). Qed.
Lemma lem2640302 : term109 = True.
Proof. exact (TRANS (@lem2640297) (@lem2640301)). Qed.
Lemma lem2640303 : True = term109.
Proof. exact (SYM (@lem2640302)). Qed.
Lemma lem2640304 : term109.
Proof. exact (EQ_MP (@lem2640303) (@lem0)). Qed.
Lemma lem2640305 : term114.
Proof. exact (@lem2640294 (@lem2640304)). Qed.
Lemma lem2640307 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640308 : term117 = term118.
Proof. exact (@lem2640307 term32 term32). Qed.
Lemma lem2640309 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640310 : term120 = term32.
Proof. exact (EQ_MP (@lem2640309) (@lem940073)). Qed.
Lemma lem2640311 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640312 : term118 = term31.
Proof. exact (MK_COMB (@lem2640311) (@lem2640310)). Qed.
Lemma lem2640313 : term117 = term31.
Proof. exact (TRANS (@lem2640308) (@lem2640312)). Qed.
Lemma lem2640315 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640316 : term123 = term124.
Proof. exact (@lem2640315 term32 term32). Qed.
Lemma lem2640317 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640318 : term120 = term32.
Proof. exact (EQ_MP (@lem2640317) (@lem940073)). Qed.
Lemma lem2640319 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640320 : term118 = term31.
Proof. exact (MK_COMB (@lem2640319) (@lem2640318)). Qed.
Lemma lem2640321 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640322 : term124 = term97.
Proof. exact (MK_COMB (@lem2640321) (@lem2640320)). Qed.
Lemma lem2640323 : term123 = term97.
Proof. exact (TRANS (@lem2640316) (@lem2640322)). Qed.
Lemma lem2640324 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640325 : term125 = term103.
Proof. exact (MK_COMB (@lem2640324) (@lem2640323)). Qed.
Lemma lem2640326 : term126 = term105.
Proof. exact (MK_COMB (@lem2640325) (@lem2640313)). Qed.
Lemma lem2640328 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2640329 : term105 = term38.
Proof. exact (@lem2640328 term32). Qed.
Lemma lem2640330 : term126 = term38.
Proof. exact (TRANS (@lem2640326) (@lem2640329)). Qed.
Lemma lem2640331 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640332 : term128 = term129.
Proof. exact (MK_COMB (@lem2640331) (@lem2640330)). Qed.
Lemma lem2640333 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2640334 : term130 = term131.
Proof. exact (MK_COMB (@lem2640332) (@lem2640333)). Qed.
Lemma lem2640336 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640337 : term131 = term38.
Proof. exact (@lem2640336 term32). Qed.
Lemma lem2640338 : term130 = term38.
Proof. exact (TRANS (@lem2640334) (@lem2640337)). Qed.
Lemma lem2640340 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640341 : term117 = term118.
Proof. exact (@lem2640340 term32 term32). Qed.
Lemma lem2640342 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640343 : term120 = term32.
Proof. exact (EQ_MP (@lem2640342) (@lem940073)). Qed.
Lemma lem2640344 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640345 : term118 = term31.
Proof. exact (MK_COMB (@lem2640344) (@lem2640343)). Qed.
Lemma lem2640346 : term117 = term31.
Proof. exact (TRANS (@lem2640341) (@lem2640345)). Qed.
Lemma lem2640347 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2640348 : term133 = term131.
Proof. exact (MK_COMB (@lem2640347) (@lem2640346)). Qed.
Lemma lem2640350 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640351 : term131 = term38.
Proof. exact (@lem2640350 term32). Qed.
Lemma lem2640352 : term133 = term38.
Proof. exact (TRANS (@lem2640348) (@lem2640351)). Qed.
Lemma lem2640353 : term38 = term133.
Proof. exact (SYM (@lem2640352)). Qed.
Lemma lem2640354 : term130 = term133.
Proof. exact (TRANS (@lem2640338) (@lem2640353)). Qed.
Lemma lem2640355 : term106 = term134.
Proof. exact (@lem2640305 (@lem2640354)). Qed.
Lemma lem2640356 : term105 = term134.
Proof. exact (TRANS (@lem2640271) (@lem2640355)). Qed.
Lemma lem2640358 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2640359 : term134 = term38.
Proof. exact (@lem2640358 term38). Qed.
Lemma lem2640360 : term105 = term38.
Proof. exact (TRANS (@lem2640356) (@lem2640359)). Qed.
Lemma lem2640361 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640362 : term136 = term129.
Proof. exact (MK_COMB (@lem2640361) (@lem2640360)). Qed.
Lemma lem2640363 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2640364 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2640362) (@lem2640363 n)). Qed.
Lemma lem2640365 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2640262 n) (@lem2640364 n)). Qed.
Lemma lem2640366 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2640367 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2640365 n) (@lem2640366 n)). Qed.
Lemma lem2640368 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640369 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2640368) (@lem2640367 n)). Qed.
Lemma lem2640370 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2640371 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2640369 n) (@lem2640370)). Qed.
Lemma lem2640372 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2640261 n) (@lem2640371 n)). Qed.
Lemma lem2640373 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2640374 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2640372 n) (@lem2640373)). Qed.
Lemma lem2640375 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640376 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2640375) (@lem2640374 n)). Qed.
Lemma lem2640377 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640378 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2640376 n) (@lem2640377)). Qed.
Lemma lem2640379 (m : int) (n : int) (h1 : term1193 m n) : term257.
Proof. exact (EQ_MP (@lem2640378 n) (@lem2640260 m n h1)). Qed.
Lemma lem2640381 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2640382 : term257 = term258.
Proof. exact (@lem2640381 term38 term97). Qed.
Lemma lem2640384 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640385 : term97 = term102.
Proof. exact (@lem2640384 term32). Qed.
Lemma lem2640387 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640388 : term38 = term134.
Proof. exact (@lem2640387 (NUMERAL 0)). Qed.
Lemma lem2640389 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640390 : term259 = term260.
Proof. exact (MK_COMB (@lem2640389) (@lem2640388)). Qed.
Lemma lem2640391 : term258 = term261.
Proof. exact (MK_COMB (@lem2640390) (@lem2640385)). Qed.
Lemma lem2640392 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2640394 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640395 : term109 = term110.
Proof. exact (@lem2640394 (NUMERAL 0) term32). Qed.
Lemma lem2640396 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640397 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640398 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640397 h1) (fun h1 : term110 = True => @lem2640396)). Qed.
Lemma lem2640399 : term110 = True.
Proof. exact (EQ_MP (@lem2640398) (@lem2640396)). Qed.
Lemma lem2640400 : term109 = True.
Proof. exact (TRANS (@lem2640395) (@lem2640399)). Qed.
Lemma lem2640401 : True = term109.
Proof. exact (SYM (@lem2640400)). Qed.
Lemma lem2640402 : term109.
Proof. exact (EQ_MP (@lem2640401) (@lem0)). Qed.
Lemma lem2640403 : term263.
Proof. exact (@lem2640392 (@lem2640402)). Qed.
Lemma lem2640405 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640406 : term109 = term110.
Proof. exact (@lem2640405 (NUMERAL 0) term32). Qed.
Lemma lem2640407 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640408 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640409 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640408 h1) (fun h1 : term110 = True => @lem2640407)). Qed.
Lemma lem2640410 : term110 = True.
Proof. exact (EQ_MP (@lem2640409) (@lem2640407)). Qed.
Lemma lem2640411 : term109 = True.
Proof. exact (TRANS (@lem2640406) (@lem2640410)). Qed.
Lemma lem2640412 : True = term109.
Proof. exact (SYM (@lem2640411)). Qed.
Lemma lem2640413 : term109.
Proof. exact (EQ_MP (@lem2640412) (@lem0)). Qed.
Lemma lem2640414 : term261 = term264.
Proof. exact (@lem2640403 (@lem2640413)). Qed.
Lemma lem2640416 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640417 : term123 = term124.
Proof. exact (@lem2640416 term32 term32). Qed.
Lemma lem2640418 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640419 : term120 = term32.
Proof. exact (EQ_MP (@lem2640418) (@lem940073)). Qed.
Lemma lem2640420 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640421 : term118 = term31.
Proof. exact (MK_COMB (@lem2640420) (@lem2640419)). Qed.
Lemma lem2640422 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640423 : term124 = term97.
Proof. exact (MK_COMB (@lem2640422) (@lem2640421)). Qed.
Lemma lem2640424 : term123 = term97.
Proof. exact (TRANS (@lem2640417) (@lem2640423)). Qed.
Lemma lem2640426 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640427 : term131 = term38.
Proof. exact (@lem2640426 term32). Qed.
Lemma lem2640428 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640429 : term265 = term259.
Proof. exact (MK_COMB (@lem2640428) (@lem2640427)). Qed.
Lemma lem2640430 : term264 = term258.
Proof. exact (MK_COMB (@lem2640429) (@lem2640424)). Qed.
Lemma lem2640432 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2640433 : term258 = term268.
Proof. exact (@lem2640432 (NUMERAL 0) term32). Qed.
Lemma lem2640434 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640435 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2640436 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640435 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2640434)). Qed.
Lemma lem2640437 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2640436) (@lem2640434)). Qed.
Lemma lem2640438 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2640439 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2640440 : term269 = (and True).
Proof. exact (MK_COMB (@lem2640439) (@lem2640438)). Qed.
Lemma lem2640441 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2640440) (@lem2640437)). Qed.
Lemma lem2640443 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2640444 : term268 = False.
Proof. exact (TRANS (@lem2640441) (@lem2640443)). Qed.
Lemma lem2640445 : term258 = False.
Proof. exact (TRANS (@lem2640433) (@lem2640444)). Qed.
Lemma lem2640446 : term264 = False.
Proof. exact (TRANS (@lem2640430) (@lem2640445)). Qed.
Lemma lem2640447 : term261 = False.
Proof. exact (TRANS (@lem2640414) (@lem2640446)). Qed.
Lemma lem2640448 : term258 = False.
Proof. exact (TRANS (@lem2640391) (@lem2640447)). Qed.
Lemma lem2640449 : term257 = False.
Proof. exact (TRANS (@lem2640382) (@lem2640448)). Qed.
Lemma lem2640450 (m : int) (n : int) (h1 : term1193 m n) : False.
Proof. exact (EQ_MP (@lem2640449) (@lem2640379 m n h1)). Qed.
Lemma lem2640451 (m : int) (n : int) (h1 : term613 m n) : False.
Proof. exact (or_elim (@lem2639872 m n h1) (fun h0 : term1192 m n => @lem2640161 m n h0) (fun h0 : term1193 m n => @lem2640450 m n h0)). Qed.
Lemma lem2640452 (m : int) (n : int) (h1 : term917 m n) : term917 m n.
Proof. exact (h1). Qed.
Lemma lem2640453 (m : int) (n : int) (h1 : term909 m n) : term909 m n.
Proof. exact (h1). Qed.
Lemma lem2640454 (m : int) (n : int) (h1 : term909 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2640453 m n h1)). Qed.
Lemma lem2640455 (m : int) (n : int) (h1 : term909 m n) : term905 m n.
Proof. exact (proj1 (@lem2640453 m n h1)). Qed.
Lemma lem2640456 (m : int) (n : int) (h1 : term909 m n) : term167 n.
Proof. exact (proj2 (@lem2640455 m n h1)). Qed.
Lemma lem2640463 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2640464 : term229 = term109.
Proof. exact (@lem2640463 term38 term31). Qed.
Lemma lem2640466 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640467 : term31 = term99.
Proof. exact (@lem2640466 term32). Qed.
Lemma lem2640469 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640470 : term38 = term134.
Proof. exact (@lem2640469 (NUMERAL 0)). Qed.
Lemma lem2640471 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640472 : term230 = term231.
Proof. exact (MK_COMB (@lem2640471) (@lem2640470)). Qed.
Lemma lem2640473 : term109 = term232.
Proof. exact (MK_COMB (@lem2640472) (@lem2640467)). Qed.
Lemma lem2640474 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2640476 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640477 : term109 = term110.
Proof. exact (@lem2640476 (NUMERAL 0) term32). Qed.
Lemma lem2640478 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640479 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640480 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640479 h1) (fun h1 : term110 = True => @lem2640478)). Qed.
Lemma lem2640481 : term110 = True.
Proof. exact (EQ_MP (@lem2640480) (@lem2640478)). Qed.
Lemma lem2640482 : term109 = True.
Proof. exact (TRANS (@lem2640477) (@lem2640481)). Qed.
Lemma lem2640483 : True = term109.
Proof. exact (SYM (@lem2640482)). Qed.
Lemma lem2640484 : term109.
Proof. exact (EQ_MP (@lem2640483) (@lem0)). Qed.
Lemma lem2640485 : term234.
Proof. exact (@lem2640474 (@lem2640484)). Qed.
Lemma lem2640487 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640488 : term109 = term110.
Proof. exact (@lem2640487 (NUMERAL 0) term32). Qed.
Lemma lem2640489 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640490 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640491 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640490 h1) (fun h1 : term110 = True => @lem2640489)). Qed.
Lemma lem2640492 : term110 = True.
Proof. exact (EQ_MP (@lem2640491) (@lem2640489)). Qed.
Lemma lem2640493 : term109 = True.
Proof. exact (TRANS (@lem2640488) (@lem2640492)). Qed.
Lemma lem2640494 : True = term109.
Proof. exact (SYM (@lem2640493)). Qed.
Lemma lem2640495 : term109.
Proof. exact (EQ_MP (@lem2640494) (@lem0)). Qed.
Lemma lem2640496 : term232 = term235.
Proof. exact (@lem2640485 (@lem2640495)). Qed.
Lemma lem2640498 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640499 : term117 = term118.
Proof. exact (@lem2640498 term32 term32). Qed.
Lemma lem2640500 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640501 : term120 = term32.
Proof. exact (EQ_MP (@lem2640500) (@lem940073)). Qed.
Lemma lem2640502 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640503 : term118 = term31.
Proof. exact (MK_COMB (@lem2640502) (@lem2640501)). Qed.
Lemma lem2640504 : term117 = term31.
Proof. exact (TRANS (@lem2640499) (@lem2640503)). Qed.
Lemma lem2640506 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640507 : term131 = term38.
Proof. exact (@lem2640506 term32). Qed.
Lemma lem2640508 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640509 : term236 = term230.
Proof. exact (MK_COMB (@lem2640508) (@lem2640507)). Qed.
Lemma lem2640510 : term235 = term109.
Proof. exact (MK_COMB (@lem2640509) (@lem2640504)). Qed.
Lemma lem2640512 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640513 : term109 = term110.
Proof. exact (@lem2640512 (NUMERAL 0) term32). Qed.
Lemma lem2640514 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640515 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640516 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640515 h1) (fun h1 : term110 = True => @lem2640514)). Qed.
Lemma lem2640517 : term110 = True.
Proof. exact (EQ_MP (@lem2640516) (@lem2640514)). Qed.
Lemma lem2640518 : term109 = True.
Proof. exact (TRANS (@lem2640513) (@lem2640517)). Qed.
Lemma lem2640519 : term235 = True.
Proof. exact (TRANS (@lem2640510) (@lem2640518)). Qed.
Lemma lem2640520 : term232 = True.
Proof. exact (TRANS (@lem2640496) (@lem2640519)). Qed.
Lemma lem2640521 : term109 = True.
Proof. exact (TRANS (@lem2640473) (@lem2640520)). Qed.
Lemma lem2640522 : term229 = True.
Proof. exact (TRANS (@lem2640464) (@lem2640521)). Qed.
Lemma lem2640523 : True = term229.
Proof. exact (SYM (@lem2640522)). Qed.
Lemma lem2640524 : term229.
Proof. exact (EQ_MP (@lem2640523) (@lem0)). Qed.
Lemma lem2640525 (m : int) (n : int) (h1 : term909 m n) : term271 n.
Proof. exact (conj (@lem2640524) (@lem2640456 m n h1)). Qed.
Lemma lem2640527 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2640528 (n : int) : term272 n.
Proof. exact (@lem2640527 term31 (term164 n)). Qed.
Lemma lem2640529 (m : int) (n : int) (h1 : term909 m n) : term273 n.
Proof. exact (@lem2640528 n (@lem2640525 m n h1)). Qed.
Lemma lem2640530 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2640531 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640532 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2640531) (@lem2640530 n)). Qed.
Lemma lem2640533 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640534 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2640532 n) (@lem2640533)). Qed.
Lemma lem2640535 (m : int) (n : int) (h1 : term909 m n) : term167 n.
Proof. exact (EQ_MP (@lem2640534 n) (@lem2640529 m n h1)). Qed.
Lemma lem2640537 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2640538 (n : int) : term287 n.
Proof. exact (@lem2640537 (real_of_int n)). Qed.
Lemma lem2640539 (m : int) (n : int) (h1 : term909 m n) : term288 n.
Proof. exact (@lem2640538 n (@lem2640454 m n h1)). Qed.
Lemma lem2640540 (m : int) (n : int) (h1 : term909 m n) : term289 n.
Proof. exact (@lem2640539 m n h1 term97). Qed.
Lemma lem2640541 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2640548 (m : int) (n : int) (h1 : term909 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2640541 n) (@lem2640540 m n h1)). Qed.
Lemma lem2640549 (m : int) (n : int) (h1 : term909 m n) : term270 n.
Proof. exact (conj (@lem2640548 m n h1) (@lem2640535 m n h1)). Qed.
Lemma lem2640551 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2640552 (n : int) : term279 n.
Proof. exact (@lem2640551 (term94 n) (term164 n)). Qed.
Lemma lem2640553 (m : int) (n : int) (h1 : term909 m n) : term280 n.
Proof. exact (@lem2640552 n (@lem2640549 m n h1)). Qed.
Lemma lem2640554 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2640555 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2640557 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640558 : term31 = term99.
Proof. exact (@lem2640557 term32). Qed.
Lemma lem2640560 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640561 : term97 = term102.
Proof. exact (@lem2640560 term32). Qed.
Lemma lem2640562 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640563 : term103 = term104.
Proof. exact (MK_COMB (@lem2640562) (@lem2640561)). Qed.
Lemma lem2640564 : term105 = term106.
Proof. exact (MK_COMB (@lem2640563) (@lem2640558)). Qed.
Lemma lem2640565 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2640567 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640568 : term109 = term110.
Proof. exact (@lem2640567 (NUMERAL 0) term32). Qed.
Lemma lem2640569 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640570 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640571 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640570 h1) (fun h1 : term110 = True => @lem2640569)). Qed.
Lemma lem2640572 : term110 = True.
Proof. exact (EQ_MP (@lem2640571) (@lem2640569)). Qed.
Lemma lem2640573 : term109 = True.
Proof. exact (TRANS (@lem2640568) (@lem2640572)). Qed.
Lemma lem2640574 : True = term109.
Proof. exact (SYM (@lem2640573)). Qed.
Lemma lem2640575 : term109.
Proof. exact (EQ_MP (@lem2640574) (@lem0)). Qed.
Lemma lem2640576 : term112.
Proof. exact (@lem2640565 (@lem2640575)). Qed.
Lemma lem2640578 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640579 : term109 = term110.
Proof. exact (@lem2640578 (NUMERAL 0) term32). Qed.
Lemma lem2640580 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640581 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640582 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640581 h1) (fun h1 : term110 = True => @lem2640580)). Qed.
Lemma lem2640583 : term110 = True.
Proof. exact (EQ_MP (@lem2640582) (@lem2640580)). Qed.
Lemma lem2640584 : term109 = True.
Proof. exact (TRANS (@lem2640579) (@lem2640583)). Qed.
Lemma lem2640585 : True = term109.
Proof. exact (SYM (@lem2640584)). Qed.
Lemma lem2640586 : term109.
Proof. exact (EQ_MP (@lem2640585) (@lem0)). Qed.
Lemma lem2640587 : term113.
Proof. exact (@lem2640576 (@lem2640586)). Qed.
Lemma lem2640589 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640590 : term109 = term110.
Proof. exact (@lem2640589 (NUMERAL 0) term32). Qed.
Lemma lem2640591 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640592 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640593 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640592 h1) (fun h1 : term110 = True => @lem2640591)). Qed.
Lemma lem2640594 : term110 = True.
Proof. exact (EQ_MP (@lem2640593) (@lem2640591)). Qed.
Lemma lem2640595 : term109 = True.
Proof. exact (TRANS (@lem2640590) (@lem2640594)). Qed.
Lemma lem2640596 : True = term109.
Proof. exact (SYM (@lem2640595)). Qed.
Lemma lem2640597 : term109.
Proof. exact (EQ_MP (@lem2640596) (@lem0)). Qed.
Lemma lem2640598 : term114.
Proof. exact (@lem2640587 (@lem2640597)). Qed.
Lemma lem2640600 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640601 : term117 = term118.
Proof. exact (@lem2640600 term32 term32). Qed.
Lemma lem2640602 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640603 : term120 = term32.
Proof. exact (EQ_MP (@lem2640602) (@lem940073)). Qed.
Lemma lem2640604 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640605 : term118 = term31.
Proof. exact (MK_COMB (@lem2640604) (@lem2640603)). Qed.
Lemma lem2640606 : term117 = term31.
Proof. exact (TRANS (@lem2640601) (@lem2640605)). Qed.
Lemma lem2640608 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640609 : term123 = term124.
Proof. exact (@lem2640608 term32 term32). Qed.
Lemma lem2640610 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640611 : term120 = term32.
Proof. exact (EQ_MP (@lem2640610) (@lem940073)). Qed.
Lemma lem2640612 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640613 : term118 = term31.
Proof. exact (MK_COMB (@lem2640612) (@lem2640611)). Qed.
Lemma lem2640614 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640615 : term124 = term97.
Proof. exact (MK_COMB (@lem2640614) (@lem2640613)). Qed.
Lemma lem2640616 : term123 = term97.
Proof. exact (TRANS (@lem2640609) (@lem2640615)). Qed.
Lemma lem2640617 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640618 : term125 = term103.
Proof. exact (MK_COMB (@lem2640617) (@lem2640616)). Qed.
Lemma lem2640619 : term126 = term105.
Proof. exact (MK_COMB (@lem2640618) (@lem2640606)). Qed.
Lemma lem2640621 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2640622 : term105 = term38.
Proof. exact (@lem2640621 term32). Qed.
Lemma lem2640623 : term126 = term38.
Proof. exact (TRANS (@lem2640619) (@lem2640622)). Qed.
Lemma lem2640624 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640625 : term128 = term129.
Proof. exact (MK_COMB (@lem2640624) (@lem2640623)). Qed.
Lemma lem2640626 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2640627 : term130 = term131.
Proof. exact (MK_COMB (@lem2640625) (@lem2640626)). Qed.
Lemma lem2640629 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640630 : term131 = term38.
Proof. exact (@lem2640629 term32). Qed.
Lemma lem2640631 : term130 = term38.
Proof. exact (TRANS (@lem2640627) (@lem2640630)). Qed.
Lemma lem2640633 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640634 : term117 = term118.
Proof. exact (@lem2640633 term32 term32). Qed.
Lemma lem2640635 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640636 : term120 = term32.
Proof. exact (EQ_MP (@lem2640635) (@lem940073)). Qed.
Lemma lem2640637 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640638 : term118 = term31.
Proof. exact (MK_COMB (@lem2640637) (@lem2640636)). Qed.
Lemma lem2640639 : term117 = term31.
Proof. exact (TRANS (@lem2640634) (@lem2640638)). Qed.
Lemma lem2640640 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2640641 : term133 = term131.
Proof. exact (MK_COMB (@lem2640640) (@lem2640639)). Qed.
Lemma lem2640643 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640644 : term131 = term38.
Proof. exact (@lem2640643 term32). Qed.
Lemma lem2640645 : term133 = term38.
Proof. exact (TRANS (@lem2640641) (@lem2640644)). Qed.
Lemma lem2640646 : term38 = term133.
Proof. exact (SYM (@lem2640645)). Qed.
Lemma lem2640647 : term130 = term133.
Proof. exact (TRANS (@lem2640631) (@lem2640646)). Qed.
Lemma lem2640648 : term106 = term134.
Proof. exact (@lem2640598 (@lem2640647)). Qed.
Lemma lem2640649 : term105 = term134.
Proof. exact (TRANS (@lem2640564) (@lem2640648)). Qed.
Lemma lem2640651 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2640652 : term134 = term38.
Proof. exact (@lem2640651 term38). Qed.
Lemma lem2640653 : term105 = term38.
Proof. exact (TRANS (@lem2640649) (@lem2640652)). Qed.
Lemma lem2640654 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640655 : term136 = term129.
Proof. exact (MK_COMB (@lem2640654) (@lem2640653)). Qed.
Lemma lem2640656 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2640657 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2640655) (@lem2640656 n)). Qed.
Lemma lem2640658 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2640555 n) (@lem2640657 n)). Qed.
Lemma lem2640659 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2640660 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2640658 n) (@lem2640659 n)). Qed.
Lemma lem2640661 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640662 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2640661) (@lem2640660 n)). Qed.
Lemma lem2640663 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2640664 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2640662 n) (@lem2640663)). Qed.
Lemma lem2640665 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2640554 n) (@lem2640664 n)). Qed.
Lemma lem2640666 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2640667 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2640665 n) (@lem2640666)). Qed.
Lemma lem2640668 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640669 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2640668) (@lem2640667 n)). Qed.
Lemma lem2640670 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640671 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2640669 n) (@lem2640670)). Qed.
Lemma lem2640672 (m : int) (n : int) (h1 : term909 m n) : term257.
Proof. exact (EQ_MP (@lem2640671 n) (@lem2640553 m n h1)). Qed.
Lemma lem2640674 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2640675 : term257 = term258.
Proof. exact (@lem2640674 term38 term97). Qed.
Lemma lem2640677 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640678 : term97 = term102.
Proof. exact (@lem2640677 term32). Qed.
Lemma lem2640680 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640681 : term38 = term134.
Proof. exact (@lem2640680 (NUMERAL 0)). Qed.
Lemma lem2640682 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640683 : term259 = term260.
Proof. exact (MK_COMB (@lem2640682) (@lem2640681)). Qed.
Lemma lem2640684 : term258 = term261.
Proof. exact (MK_COMB (@lem2640683) (@lem2640678)). Qed.
Lemma lem2640685 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2640687 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640688 : term109 = term110.
Proof. exact (@lem2640687 (NUMERAL 0) term32). Qed.
Lemma lem2640689 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640690 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640691 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640690 h1) (fun h1 : term110 = True => @lem2640689)). Qed.
Lemma lem2640692 : term110 = True.
Proof. exact (EQ_MP (@lem2640691) (@lem2640689)). Qed.
Lemma lem2640693 : term109 = True.
Proof. exact (TRANS (@lem2640688) (@lem2640692)). Qed.
Lemma lem2640694 : True = term109.
Proof. exact (SYM (@lem2640693)). Qed.
Lemma lem2640695 : term109.
Proof. exact (EQ_MP (@lem2640694) (@lem0)). Qed.
Lemma lem2640696 : term263.
Proof. exact (@lem2640685 (@lem2640695)). Qed.
Lemma lem2640698 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640699 : term109 = term110.
Proof. exact (@lem2640698 (NUMERAL 0) term32). Qed.
Lemma lem2640700 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640701 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640702 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640701 h1) (fun h1 : term110 = True => @lem2640700)). Qed.
Lemma lem2640703 : term110 = True.
Proof. exact (EQ_MP (@lem2640702) (@lem2640700)). Qed.
Lemma lem2640704 : term109 = True.
Proof. exact (TRANS (@lem2640699) (@lem2640703)). Qed.
Lemma lem2640705 : True = term109.
Proof. exact (SYM (@lem2640704)). Qed.
Lemma lem2640706 : term109.
Proof. exact (EQ_MP (@lem2640705) (@lem0)). Qed.
Lemma lem2640707 : term261 = term264.
Proof. exact (@lem2640696 (@lem2640706)). Qed.
Lemma lem2640709 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640710 : term123 = term124.
Proof. exact (@lem2640709 term32 term32). Qed.
Lemma lem2640711 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640712 : term120 = term32.
Proof. exact (EQ_MP (@lem2640711) (@lem940073)). Qed.
Lemma lem2640713 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640714 : term118 = term31.
Proof. exact (MK_COMB (@lem2640713) (@lem2640712)). Qed.
Lemma lem2640715 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640716 : term124 = term97.
Proof. exact (MK_COMB (@lem2640715) (@lem2640714)). Qed.
Lemma lem2640717 : term123 = term97.
Proof. exact (TRANS (@lem2640710) (@lem2640716)). Qed.
Lemma lem2640719 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640720 : term131 = term38.
Proof. exact (@lem2640719 term32). Qed.
Lemma lem2640721 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640722 : term265 = term259.
Proof. exact (MK_COMB (@lem2640721) (@lem2640720)). Qed.
Lemma lem2640723 : term264 = term258.
Proof. exact (MK_COMB (@lem2640722) (@lem2640717)). Qed.
Lemma lem2640725 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2640726 : term258 = term268.
Proof. exact (@lem2640725 (NUMERAL 0) term32). Qed.
Lemma lem2640727 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640728 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2640729 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640728 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2640727)). Qed.
Lemma lem2640730 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2640729) (@lem2640727)). Qed.
Lemma lem2640731 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2640732 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2640733 : term269 = (and True).
Proof. exact (MK_COMB (@lem2640732) (@lem2640731)). Qed.
Lemma lem2640734 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2640733) (@lem2640730)). Qed.
Lemma lem2640736 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2640737 : term268 = False.
Proof. exact (TRANS (@lem2640734) (@lem2640736)). Qed.
Lemma lem2640738 : term258 = False.
Proof. exact (TRANS (@lem2640726) (@lem2640737)). Qed.
Lemma lem2640739 : term264 = False.
Proof. exact (TRANS (@lem2640723) (@lem2640738)). Qed.
Lemma lem2640740 : term261 = False.
Proof. exact (TRANS (@lem2640707) (@lem2640739)). Qed.
Lemma lem2640741 : term258 = False.
Proof. exact (TRANS (@lem2640684) (@lem2640740)). Qed.
Lemma lem2640742 : term257 = False.
Proof. exact (TRANS (@lem2640675) (@lem2640741)). Qed.
Lemma lem2640743 (m : int) (n : int) (h1 : term909 m n) : False.
Proof. exact (EQ_MP (@lem2640742) (@lem2640672 m n h1)). Qed.
Lemma lem2640744 (m : int) (n : int) (h1 : term914 m n) : term914 m n.
Proof. exact (h1). Qed.
Lemma lem2640745 (m : int) (n : int) (h1 : term914 m n) : (real_of_int n) = term38.
Proof. exact (proj2 (@lem2640744 m n h1)). Qed.
Lemma lem2640746 (m : int) (n : int) (h1 : term914 m n) : term910 m n.
Proof. exact (proj1 (@lem2640744 m n h1)). Qed.
Lemma lem2640747 (m : int) (n : int) (h1 : term914 m n) : term167 n.
Proof. exact (proj2 (@lem2640746 m n h1)). Qed.
Lemma lem2640754 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2640755 : term229 = term109.
Proof. exact (@lem2640754 term38 term31). Qed.
Lemma lem2640757 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640758 : term31 = term99.
Proof. exact (@lem2640757 term32). Qed.
Lemma lem2640760 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640761 : term38 = term134.
Proof. exact (@lem2640760 (NUMERAL 0)). Qed.
Lemma lem2640762 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640763 : term230 = term231.
Proof. exact (MK_COMB (@lem2640762) (@lem2640761)). Qed.
Lemma lem2640764 : term109 = term232.
Proof. exact (MK_COMB (@lem2640763) (@lem2640758)). Qed.
Lemma lem2640765 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2640767 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640768 : term109 = term110.
Proof. exact (@lem2640767 (NUMERAL 0) term32). Qed.
Lemma lem2640769 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640770 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640771 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640770 h1) (fun h1 : term110 = True => @lem2640769)). Qed.
Lemma lem2640772 : term110 = True.
Proof. exact (EQ_MP (@lem2640771) (@lem2640769)). Qed.
Lemma lem2640773 : term109 = True.
Proof. exact (TRANS (@lem2640768) (@lem2640772)). Qed.
Lemma lem2640774 : True = term109.
Proof. exact (SYM (@lem2640773)). Qed.
Lemma lem2640775 : term109.
Proof. exact (EQ_MP (@lem2640774) (@lem0)). Qed.
Lemma lem2640776 : term234.
Proof. exact (@lem2640765 (@lem2640775)). Qed.
Lemma lem2640778 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640779 : term109 = term110.
Proof. exact (@lem2640778 (NUMERAL 0) term32). Qed.
Lemma lem2640780 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640781 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640782 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640781 h1) (fun h1 : term110 = True => @lem2640780)). Qed.
Lemma lem2640783 : term110 = True.
Proof. exact (EQ_MP (@lem2640782) (@lem2640780)). Qed.
Lemma lem2640784 : term109 = True.
Proof. exact (TRANS (@lem2640779) (@lem2640783)). Qed.
Lemma lem2640785 : True = term109.
Proof. exact (SYM (@lem2640784)). Qed.
Lemma lem2640786 : term109.
Proof. exact (EQ_MP (@lem2640785) (@lem0)). Qed.
Lemma lem2640787 : term232 = term235.
Proof. exact (@lem2640776 (@lem2640786)). Qed.
Lemma lem2640789 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640790 : term117 = term118.
Proof. exact (@lem2640789 term32 term32). Qed.
Lemma lem2640791 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640792 : term120 = term32.
Proof. exact (EQ_MP (@lem2640791) (@lem940073)). Qed.
Lemma lem2640793 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640794 : term118 = term31.
Proof. exact (MK_COMB (@lem2640793) (@lem2640792)). Qed.
Lemma lem2640795 : term117 = term31.
Proof. exact (TRANS (@lem2640790) (@lem2640794)). Qed.
Lemma lem2640797 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640798 : term131 = term38.
Proof. exact (@lem2640797 term32). Qed.
Lemma lem2640799 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2640800 : term236 = term230.
Proof. exact (MK_COMB (@lem2640799) (@lem2640798)). Qed.
Lemma lem2640801 : term235 = term109.
Proof. exact (MK_COMB (@lem2640800) (@lem2640795)). Qed.
Lemma lem2640803 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640804 : term109 = term110.
Proof. exact (@lem2640803 (NUMERAL 0) term32). Qed.
Lemma lem2640805 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640806 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640807 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640806 h1) (fun h1 : term110 = True => @lem2640805)). Qed.
Lemma lem2640808 : term110 = True.
Proof. exact (EQ_MP (@lem2640807) (@lem2640805)). Qed.
Lemma lem2640809 : term109 = True.
Proof. exact (TRANS (@lem2640804) (@lem2640808)). Qed.
Lemma lem2640810 : term235 = True.
Proof. exact (TRANS (@lem2640801) (@lem2640809)). Qed.
Lemma lem2640811 : term232 = True.
Proof. exact (TRANS (@lem2640787) (@lem2640810)). Qed.
Lemma lem2640812 : term109 = True.
Proof. exact (TRANS (@lem2640764) (@lem2640811)). Qed.
Lemma lem2640813 : term229 = True.
Proof. exact (TRANS (@lem2640755) (@lem2640812)). Qed.
Lemma lem2640814 : True = term229.
Proof. exact (SYM (@lem2640813)). Qed.
Lemma lem2640815 : term229.
Proof. exact (EQ_MP (@lem2640814) (@lem0)). Qed.
Lemma lem2640816 (m : int) (n : int) (h1 : term914 m n) : term271 n.
Proof. exact (conj (@lem2640815) (@lem2640747 m n h1)). Qed.
Lemma lem2640818 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2640819 (n : int) : term272 n.
Proof. exact (@lem2640818 term31 (term164 n)). Qed.
Lemma lem2640820 (m : int) (n : int) (h1 : term914 m n) : term273 n.
Proof. exact (@lem2640819 n (@lem2640816 m n h1)). Qed.
Lemma lem2640821 (n : int) : (term274 n) = (term164 n).
Proof. exact (@lem1982733 (term164 n)). Qed.
Lemma lem2640822 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640823 (n : int) : (term275 n) = (term166 n).
Proof. exact (MK_COMB (@lem2640822) (@lem2640821 n)). Qed.
Lemma lem2640824 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640825 (n : int) : (term273 n) = (term167 n).
Proof. exact (MK_COMB (@lem2640823 n) (@lem2640824)). Qed.
Lemma lem2640826 (m : int) (n : int) (h1 : term914 m n) : term167 n.
Proof. exact (EQ_MP (@lem2640825 n) (@lem2640820 m n h1)). Qed.
Lemma lem2640828 (y : real) : term243 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem2640829 (n : int) : term287 n.
Proof. exact (@lem2640828 (real_of_int n)). Qed.
Lemma lem2640830 (m : int) (n : int) (h1 : term914 m n) : term288 n.
Proof. exact (@lem2640829 n (@lem2640745 m n h1)). Qed.
Lemma lem2640831 (m : int) (n : int) (h1 : term914 m n) : term289 n.
Proof. exact (@lem2640830 m n h1 term97). Qed.
Lemma lem2640832 (n : int) : (term289 n) = ((term94 n) = term38).
Proof. exact (eq_refl (term289 n)). Qed.
Lemma lem2640839 (m : int) (n : int) (h1 : term914 m n) : (term94 n) = term38.
Proof. exact (EQ_MP (@lem2640832 n) (@lem2640831 m n h1)). Qed.
Lemma lem2640840 (m : int) (n : int) (h1 : term914 m n) : term270 n.
Proof. exact (conj (@lem2640839 m n h1) (@lem2640826 m n h1)). Qed.
Lemma lem2640842 (x : real) (y : real) : term249 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem2640843 (n : int) : term279 n.
Proof. exact (@lem2640842 (term94 n) (term164 n)). Qed.
Lemma lem2640844 (m : int) (n : int) (h1 : term914 m n) : term280 n.
Proof. exact (@lem2640843 n (@lem2640840 m n h1)). Qed.
Lemma lem2640845 (n : int) : (term281 n) = (term282 n).
Proof. exact (@lem1982763 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2640846 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2640848 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640849 : term31 = term99.
Proof. exact (@lem2640848 term32). Qed.
Lemma lem2640851 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640852 : term97 = term102.
Proof. exact (@lem2640851 term32). Qed.
Lemma lem2640853 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640854 : term103 = term104.
Proof. exact (MK_COMB (@lem2640853) (@lem2640852)). Qed.
Lemma lem2640855 : term105 = term106.
Proof. exact (MK_COMB (@lem2640854) (@lem2640849)). Qed.
Lemma lem2640856 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2640858 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640859 : term109 = term110.
Proof. exact (@lem2640858 (NUMERAL 0) term32). Qed.
Lemma lem2640860 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640861 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640862 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640861 h1) (fun h1 : term110 = True => @lem2640860)). Qed.
Lemma lem2640863 : term110 = True.
Proof. exact (EQ_MP (@lem2640862) (@lem2640860)). Qed.
Lemma lem2640864 : term109 = True.
Proof. exact (TRANS (@lem2640859) (@lem2640863)). Qed.
Lemma lem2640865 : True = term109.
Proof. exact (SYM (@lem2640864)). Qed.
Lemma lem2640866 : term109.
Proof. exact (EQ_MP (@lem2640865) (@lem0)). Qed.
Lemma lem2640867 : term112.
Proof. exact (@lem2640856 (@lem2640866)). Qed.
Lemma lem2640869 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640870 : term109 = term110.
Proof. exact (@lem2640869 (NUMERAL 0) term32). Qed.
Lemma lem2640871 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640872 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640873 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640872 h1) (fun h1 : term110 = True => @lem2640871)). Qed.
Lemma lem2640874 : term110 = True.
Proof. exact (EQ_MP (@lem2640873) (@lem2640871)). Qed.
Lemma lem2640875 : term109 = True.
Proof. exact (TRANS (@lem2640870) (@lem2640874)). Qed.
Lemma lem2640876 : True = term109.
Proof. exact (SYM (@lem2640875)). Qed.
Lemma lem2640877 : term109.
Proof. exact (EQ_MP (@lem2640876) (@lem0)). Qed.
Lemma lem2640878 : term113.
Proof. exact (@lem2640867 (@lem2640877)). Qed.
Lemma lem2640880 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640881 : term109 = term110.
Proof. exact (@lem2640880 (NUMERAL 0) term32). Qed.
Lemma lem2640882 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640883 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640884 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640883 h1) (fun h1 : term110 = True => @lem2640882)). Qed.
Lemma lem2640885 : term110 = True.
Proof. exact (EQ_MP (@lem2640884) (@lem2640882)). Qed.
Lemma lem2640886 : term109 = True.
Proof. exact (TRANS (@lem2640881) (@lem2640885)). Qed.
Lemma lem2640887 : True = term109.
Proof. exact (SYM (@lem2640886)). Qed.
Lemma lem2640888 : term109.
Proof. exact (EQ_MP (@lem2640887) (@lem0)). Qed.
Lemma lem2640889 : term114.
Proof. exact (@lem2640878 (@lem2640888)). Qed.
Lemma lem2640891 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640892 : term117 = term118.
Proof. exact (@lem2640891 term32 term32). Qed.
Lemma lem2640893 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640894 : term120 = term32.
Proof. exact (EQ_MP (@lem2640893) (@lem940073)). Qed.
Lemma lem2640895 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640896 : term118 = term31.
Proof. exact (MK_COMB (@lem2640895) (@lem2640894)). Qed.
Lemma lem2640897 : term117 = term31.
Proof. exact (TRANS (@lem2640892) (@lem2640896)). Qed.
Lemma lem2640899 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2640900 : term123 = term124.
Proof. exact (@lem2640899 term32 term32). Qed.
Lemma lem2640901 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640902 : term120 = term32.
Proof. exact (EQ_MP (@lem2640901) (@lem940073)). Qed.
Lemma lem2640903 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640904 : term118 = term31.
Proof. exact (MK_COMB (@lem2640903) (@lem2640902)). Qed.
Lemma lem2640905 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2640906 : term124 = term97.
Proof. exact (MK_COMB (@lem2640905) (@lem2640904)). Qed.
Lemma lem2640907 : term123 = term97.
Proof. exact (TRANS (@lem2640900) (@lem2640906)). Qed.
Lemma lem2640908 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640909 : term125 = term103.
Proof. exact (MK_COMB (@lem2640908) (@lem2640907)). Qed.
Lemma lem2640910 : term126 = term105.
Proof. exact (MK_COMB (@lem2640909) (@lem2640897)). Qed.
Lemma lem2640912 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2640913 : term105 = term38.
Proof. exact (@lem2640912 term32). Qed.
Lemma lem2640914 : term126 = term38.
Proof. exact (TRANS (@lem2640910) (@lem2640913)). Qed.
Lemma lem2640915 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640916 : term128 = term129.
Proof. exact (MK_COMB (@lem2640915) (@lem2640914)). Qed.
Lemma lem2640917 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2640918 : term130 = term131.
Proof. exact (MK_COMB (@lem2640916) (@lem2640917)). Qed.
Lemma lem2640920 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640921 : term131 = term38.
Proof. exact (@lem2640920 term32). Qed.
Lemma lem2640922 : term130 = term38.
Proof. exact (TRANS (@lem2640918) (@lem2640921)). Qed.
Lemma lem2640924 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2640925 : term117 = term118.
Proof. exact (@lem2640924 term32 term32). Qed.
Lemma lem2640926 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2640927 : term120 = term32.
Proof. exact (EQ_MP (@lem2640926) (@lem940073)). Qed.
Lemma lem2640928 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2640929 : term118 = term31.
Proof. exact (MK_COMB (@lem2640928) (@lem2640927)). Qed.
Lemma lem2640930 : term117 = term31.
Proof. exact (TRANS (@lem2640925) (@lem2640929)). Qed.
Lemma lem2640931 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2640932 : term133 = term131.
Proof. exact (MK_COMB (@lem2640931) (@lem2640930)). Qed.
Lemma lem2640934 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2640935 : term131 = term38.
Proof. exact (@lem2640934 term32). Qed.
Lemma lem2640936 : term133 = term38.
Proof. exact (TRANS (@lem2640932) (@lem2640935)). Qed.
Lemma lem2640937 : term38 = term133.
Proof. exact (SYM (@lem2640936)). Qed.
Lemma lem2640938 : term130 = term133.
Proof. exact (TRANS (@lem2640922) (@lem2640937)). Qed.
Lemma lem2640939 : term106 = term134.
Proof. exact (@lem2640889 (@lem2640938)). Qed.
Lemma lem2640940 : term105 = term134.
Proof. exact (TRANS (@lem2640855) (@lem2640939)). Qed.
Lemma lem2640942 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2640943 : term134 = term38.
Proof. exact (@lem2640942 term38). Qed.
Lemma lem2640944 : term105 = term38.
Proof. exact (TRANS (@lem2640940) (@lem2640943)). Qed.
Lemma lem2640945 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2640946 : term136 = term129.
Proof. exact (MK_COMB (@lem2640945) (@lem2640944)). Qed.
Lemma lem2640947 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2640948 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2640946) (@lem2640947 n)). Qed.
Lemma lem2640949 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2640846 n) (@lem2640948 n)). Qed.
Lemma lem2640950 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2640951 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2640949 n) (@lem2640950 n)). Qed.
Lemma lem2640952 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2640953 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2640952) (@lem2640951 n)). Qed.
Lemma lem2640954 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2640955 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2640953 n) (@lem2640954)). Qed.
Lemma lem2640956 (n : int) : (term281 n) = term254.
Proof. exact (TRANS (@lem2640845 n) (@lem2640955 n)). Qed.
Lemma lem2640957 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2640958 (n : int) : (term281 n) = term97.
Proof. exact (TRANS (@lem2640956 n) (@lem2640957)). Qed.
Lemma lem2640959 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2640960 (n : int) : (term285 n) = term256.
Proof. exact (MK_COMB (@lem2640959) (@lem2640958 n)). Qed.
Lemma lem2640961 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2640962 (n : int) : (term280 n) = term257.
Proof. exact (MK_COMB (@lem2640960 n) (@lem2640961)). Qed.
Lemma lem2640963 (m : int) (n : int) (h1 : term914 m n) : term257.
Proof. exact (EQ_MP (@lem2640962 n) (@lem2640844 m n h1)). Qed.
Lemma lem2640965 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2640966 : term257 = term258.
Proof. exact (@lem2640965 term38 term97). Qed.
Lemma lem2640968 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2640969 : term97 = term102.
Proof. exact (@lem2640968 term32). Qed.
Lemma lem2640971 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2640972 : term38 = term134.
Proof. exact (@lem2640971 (NUMERAL 0)). Qed.
Lemma lem2640973 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2640974 : term259 = term260.
Proof. exact (MK_COMB (@lem2640973) (@lem2640972)). Qed.
Lemma lem2640975 : term258 = term261.
Proof. exact (MK_COMB (@lem2640974) (@lem2640969)). Qed.
Lemma lem2640976 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2640978 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640979 : term109 = term110.
Proof. exact (@lem2640978 (NUMERAL 0) term32). Qed.
Lemma lem2640980 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640981 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640982 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640981 h1) (fun h1 : term110 = True => @lem2640980)). Qed.
Lemma lem2640983 : term110 = True.
Proof. exact (EQ_MP (@lem2640982) (@lem2640980)). Qed.
Lemma lem2640984 : term109 = True.
Proof. exact (TRANS (@lem2640979) (@lem2640983)). Qed.
Lemma lem2640985 : True = term109.
Proof. exact (SYM (@lem2640984)). Qed.
Lemma lem2640986 : term109.
Proof. exact (EQ_MP (@lem2640985) (@lem0)). Qed.
Lemma lem2640987 : term263.
Proof. exact (@lem2640976 (@lem2640986)). Qed.
Lemma lem2640989 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2640990 : term109 = term110.
Proof. exact (@lem2640989 (NUMERAL 0) term32). Qed.
Lemma lem2640991 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2640992 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2640993 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2640992 h1) (fun h1 : term110 = True => @lem2640991)). Qed.
Lemma lem2640994 : term110 = True.
Proof. exact (EQ_MP (@lem2640993) (@lem2640991)). Qed.
Lemma lem2640995 : term109 = True.
Proof. exact (TRANS (@lem2640990) (@lem2640994)). Qed.
Lemma lem2640996 : True = term109.
Proof. exact (SYM (@lem2640995)). Qed.
Lemma lem2640997 : term109.
Proof. exact (EQ_MP (@lem2640996) (@lem0)). Qed.
Lemma lem2640998 : term261 = term264.
Proof. exact (@lem2640987 (@lem2640997)). Qed.
Lemma lem2641000 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641001 : term123 = term124.
Proof. exact (@lem2641000 term32 term32). Qed.
Lemma lem2641002 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641003 : term120 = term32.
Proof. exact (EQ_MP (@lem2641002) (@lem940073)). Qed.
Lemma lem2641004 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641005 : term118 = term31.
Proof. exact (MK_COMB (@lem2641004) (@lem2641003)). Qed.
Lemma lem2641006 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641007 : term124 = term97.
Proof. exact (MK_COMB (@lem2641006) (@lem2641005)). Qed.
Lemma lem2641008 : term123 = term97.
Proof. exact (TRANS (@lem2641001) (@lem2641007)). Qed.
Lemma lem2641010 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641011 : term131 = term38.
Proof. exact (@lem2641010 term32). Qed.
Lemma lem2641012 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2641013 : term265 = term259.
Proof. exact (MK_COMB (@lem2641012) (@lem2641011)). Qed.
Lemma lem2641014 : term264 = term258.
Proof. exact (MK_COMB (@lem2641013) (@lem2641008)). Qed.
Lemma lem2641016 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2641017 : term258 = term268.
Proof. exact (@lem2641016 (NUMERAL 0) term32). Qed.
Lemma lem2641018 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641019 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2641020 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641019 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2641018)). Qed.
Lemma lem2641021 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2641020) (@lem2641018)). Qed.
Lemma lem2641022 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2641023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2641024 : term269 = (and True).
Proof. exact (MK_COMB (@lem2641023) (@lem2641022)). Qed.
Lemma lem2641025 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2641024) (@lem2641021)). Qed.
Lemma lem2641027 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2641028 : term268 = False.
Proof. exact (TRANS (@lem2641025) (@lem2641027)). Qed.
Lemma lem2641029 : term258 = False.
Proof. exact (TRANS (@lem2641017) (@lem2641028)). Qed.
Lemma lem2641030 : term264 = False.
Proof. exact (TRANS (@lem2641014) (@lem2641029)). Qed.
Lemma lem2641031 : term261 = False.
Proof. exact (TRANS (@lem2640998) (@lem2641030)). Qed.
Lemma lem2641032 : term258 = False.
Proof. exact (TRANS (@lem2640975) (@lem2641031)). Qed.
Lemma lem2641033 : term257 = False.
Proof. exact (TRANS (@lem2640966) (@lem2641032)). Qed.
Lemma lem2641034 (m : int) (n : int) (h1 : term914 m n) : False.
Proof. exact (EQ_MP (@lem2641033) (@lem2640963 m n h1)). Qed.
Lemma lem2641035 (m : int) (n : int) (h1 : term917 m n) : False.
Proof. exact (or_elim (@lem2640452 m n h1) (fun h0 : term909 m n => @lem2640743 m n h0) (fun h0 : term914 m n => @lem2641034 m n h0)). Qed.
Lemma lem2641036 (m : int) (n : int) (h1 : term918 m n) : False.
Proof. exact (or_elim (@lem2639871 m n h1) (fun h0 : term613 m n => @lem2640451 m n h0) (fun h0 : term917 m n => @lem2641035 m n h0)). Qed.
Lemma lem2641037 (m : int) (n : int) (h1 : term920 m n) : False.
Proof. exact (or_elim (@lem2638704 m n h1) (fun h0 : term904 m n => @lem2639870 m n h0) (fun h0 : term918 m n => @lem2641036 m n h0)). Qed.
Lemma lem2641038 (m : int) (n : int) (h1 : term1124 m n) : term1124 m n.
Proof. exact (h1). Qed.
Lemma lem2641039 (m : int) (n : int) (h1 : term1022 m n) : term1022 m n.
Proof. exact (h1). Qed.
Lemma lem2641040 (m : int) (n : int) (h1 : term971 m n) : term971 m n.
Proof. exact (h1). Qed.
Lemma lem2641041 (m : int) (n : int) (h1 : term944 m n) : term944 m n.
Proof. exact (h1). Qed.
Lemma lem2641042 (m : int) (n : int) (h1 : term940 m n) : term940 m n.
Proof. exact (h1). Qed.
Lemma lem2641043 (m : int) (n : int) (h1 : term940 m n) : term939 m n.
Proof. exact (proj2 (@lem2641042 m n h1)). Qed.
Lemma lem2641045 (m : int) (n : int) (h1 : term940 m n) : term716 m n.
Proof. exact (proj2 (@lem2641043 m n h1)). Qed.
Lemma lem2641046 (m : int) (n : int) (h1 : term940 m n) : term598 m n.
Proof. exact (proj1 (@lem2641043 m n h1)). Qed.
Lemma lem2641048 (m : int) (n : int) (h1 : term940 m n) : term555 n m.
Proof. exact (proj1 (@lem2641046 m n h1)). Qed.
Lemma lem2641049 (m : int) (n : int) (h1 : term940 m n) : term158 m.
Proof. exact (proj2 (@lem2641048 m n h1)). Qed.
Lemma lem2641052 (m : int) (n : int) (h1 : term940 m n) : term457 m.
Proof. exact (proj1 (@lem2641045 m n h1)). Qed.
Lemma lem2641054 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641055 : term229 = term109.
Proof. exact (@lem2641054 term38 term31). Qed.
Lemma lem2641057 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641058 : term31 = term99.
Proof. exact (@lem2641057 term32). Qed.
Lemma lem2641060 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641061 : term38 = term134.
Proof. exact (@lem2641060 (NUMERAL 0)). Qed.
Lemma lem2641062 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641063 : term230 = term231.
Proof. exact (MK_COMB (@lem2641062) (@lem2641061)). Qed.
Lemma lem2641064 : term109 = term232.
Proof. exact (MK_COMB (@lem2641063) (@lem2641058)). Qed.
Lemma lem2641065 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641067 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641068 : term109 = term110.
Proof. exact (@lem2641067 (NUMERAL 0) term32). Qed.
Lemma lem2641069 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641070 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641071 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641070 h1) (fun h1 : term110 = True => @lem2641069)). Qed.
Lemma lem2641072 : term110 = True.
Proof. exact (EQ_MP (@lem2641071) (@lem2641069)). Qed.
Lemma lem2641073 : term109 = True.
Proof. exact (TRANS (@lem2641068) (@lem2641072)). Qed.
Lemma lem2641074 : True = term109.
Proof. exact (SYM (@lem2641073)). Qed.
Lemma lem2641075 : term109.
Proof. exact (EQ_MP (@lem2641074) (@lem0)). Qed.
Lemma lem2641076 : term234.
Proof. exact (@lem2641065 (@lem2641075)). Qed.
Lemma lem2641078 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641079 : term109 = term110.
Proof. exact (@lem2641078 (NUMERAL 0) term32). Qed.
Lemma lem2641080 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641081 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641082 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641081 h1) (fun h1 : term110 = True => @lem2641080)). Qed.
Lemma lem2641083 : term110 = True.
Proof. exact (EQ_MP (@lem2641082) (@lem2641080)). Qed.
Lemma lem2641084 : term109 = True.
Proof. exact (TRANS (@lem2641079) (@lem2641083)). Qed.
Lemma lem2641085 : True = term109.
Proof. exact (SYM (@lem2641084)). Qed.
Lemma lem2641086 : term109.
Proof. exact (EQ_MP (@lem2641085) (@lem0)). Qed.
Lemma lem2641087 : term232 = term235.
Proof. exact (@lem2641076 (@lem2641086)). Qed.
Lemma lem2641089 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641090 : term117 = term118.
Proof. exact (@lem2641089 term32 term32). Qed.
Lemma lem2641091 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641092 : term120 = term32.
Proof. exact (EQ_MP (@lem2641091) (@lem940073)). Qed.
Lemma lem2641093 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641094 : term118 = term31.
Proof. exact (MK_COMB (@lem2641093) (@lem2641092)). Qed.
Lemma lem2641095 : term117 = term31.
Proof. exact (TRANS (@lem2641090) (@lem2641094)). Qed.
Lemma lem2641097 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641098 : term131 = term38.
Proof. exact (@lem2641097 term32). Qed.
Lemma lem2641099 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641100 : term236 = term230.
Proof. exact (MK_COMB (@lem2641099) (@lem2641098)). Qed.
Lemma lem2641101 : term235 = term109.
Proof. exact (MK_COMB (@lem2641100) (@lem2641095)). Qed.
Lemma lem2641103 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641104 : term109 = term110.
Proof. exact (@lem2641103 (NUMERAL 0) term32). Qed.
Lemma lem2641105 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641106 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641107 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641106 h1) (fun h1 : term110 = True => @lem2641105)). Qed.
Lemma lem2641108 : term110 = True.
Proof. exact (EQ_MP (@lem2641107) (@lem2641105)). Qed.
Lemma lem2641109 : term109 = True.
Proof. exact (TRANS (@lem2641104) (@lem2641108)). Qed.
Lemma lem2641110 : term235 = True.
Proof. exact (TRANS (@lem2641101) (@lem2641109)). Qed.
Lemma lem2641111 : term232 = True.
Proof. exact (TRANS (@lem2641087) (@lem2641110)). Qed.
Lemma lem2641112 : term109 = True.
Proof. exact (TRANS (@lem2641064) (@lem2641111)). Qed.
Lemma lem2641113 : term229 = True.
Proof. exact (TRANS (@lem2641055) (@lem2641112)). Qed.
Lemma lem2641114 : True = term229.
Proof. exact (SYM (@lem2641113)). Qed.
Lemma lem2641115 : term229.
Proof. exact (EQ_MP (@lem2641114) (@lem0)). Qed.
Lemma lem2641116 (m : int) (n : int) (h1 : term940 m n) : term1129 m.
Proof. exact (conj (@lem2641115) (@lem2641052 m n h1)). Qed.
Lemma lem2641118 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641119 (m : int) : term1130 m.
Proof. exact (@lem2641118 term31 (real_of_int m)). Qed.
Lemma lem2641120 (m : int) (n : int) (h1 : term940 m n) : term1131 m.
Proof. exact (@lem2641119 m (@lem2641116 m n h1)). Qed.
Lemma lem2641121 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2641122 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641123 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2641122) (@lem2641121 m)). Qed.
Lemma lem2641124 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641125 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2641123 m) (@lem2641124)). Qed.
Lemma lem2641126 (m : int) (n : int) (h1 : term940 m n) : term457 m.
Proof. exact (EQ_MP (@lem2641125 m) (@lem2641120 m n h1)). Qed.
Lemma lem2641128 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641129 : term229 = term109.
Proof. exact (@lem2641128 term38 term31). Qed.
Lemma lem2641131 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641132 : term31 = term99.
Proof. exact (@lem2641131 term32). Qed.
Lemma lem2641134 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641135 : term38 = term134.
Proof. exact (@lem2641134 (NUMERAL 0)). Qed.
Lemma lem2641136 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641137 : term230 = term231.
Proof. exact (MK_COMB (@lem2641136) (@lem2641135)). Qed.
Lemma lem2641138 : term109 = term232.
Proof. exact (MK_COMB (@lem2641137) (@lem2641132)). Qed.
Lemma lem2641139 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641141 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641142 : term109 = term110.
Proof. exact (@lem2641141 (NUMERAL 0) term32). Qed.
Lemma lem2641143 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641144 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641145 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641144 h1) (fun h1 : term110 = True => @lem2641143)). Qed.
Lemma lem2641146 : term110 = True.
Proof. exact (EQ_MP (@lem2641145) (@lem2641143)). Qed.
Lemma lem2641147 : term109 = True.
Proof. exact (TRANS (@lem2641142) (@lem2641146)). Qed.
Lemma lem2641148 : True = term109.
Proof. exact (SYM (@lem2641147)). Qed.
Lemma lem2641149 : term109.
Proof. exact (EQ_MP (@lem2641148) (@lem0)). Qed.
Lemma lem2641150 : term234.
Proof. exact (@lem2641139 (@lem2641149)). Qed.
Lemma lem2641152 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641153 : term109 = term110.
Proof. exact (@lem2641152 (NUMERAL 0) term32). Qed.
Lemma lem2641154 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641155 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641156 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641155 h1) (fun h1 : term110 = True => @lem2641154)). Qed.
Lemma lem2641157 : term110 = True.
Proof. exact (EQ_MP (@lem2641156) (@lem2641154)). Qed.
Lemma lem2641158 : term109 = True.
Proof. exact (TRANS (@lem2641153) (@lem2641157)). Qed.
Lemma lem2641159 : True = term109.
Proof. exact (SYM (@lem2641158)). Qed.
Lemma lem2641160 : term109.
Proof. exact (EQ_MP (@lem2641159) (@lem0)). Qed.
Lemma lem2641161 : term232 = term235.
Proof. exact (@lem2641150 (@lem2641160)). Qed.
Lemma lem2641163 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641164 : term117 = term118.
Proof. exact (@lem2641163 term32 term32). Qed.
Lemma lem2641165 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641166 : term120 = term32.
Proof. exact (EQ_MP (@lem2641165) (@lem940073)). Qed.
Lemma lem2641167 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641168 : term118 = term31.
Proof. exact (MK_COMB (@lem2641167) (@lem2641166)). Qed.
Lemma lem2641169 : term117 = term31.
Proof. exact (TRANS (@lem2641164) (@lem2641168)). Qed.
Lemma lem2641171 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641172 : term131 = term38.
Proof. exact (@lem2641171 term32). Qed.
Lemma lem2641173 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641174 : term236 = term230.
Proof. exact (MK_COMB (@lem2641173) (@lem2641172)). Qed.
Lemma lem2641175 : term235 = term109.
Proof. exact (MK_COMB (@lem2641174) (@lem2641169)). Qed.
Lemma lem2641177 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641178 : term109 = term110.
Proof. exact (@lem2641177 (NUMERAL 0) term32). Qed.
Lemma lem2641179 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641180 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641181 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641180 h1) (fun h1 : term110 = True => @lem2641179)). Qed.
Lemma lem2641182 : term110 = True.
Proof. exact (EQ_MP (@lem2641181) (@lem2641179)). Qed.
Lemma lem2641183 : term109 = True.
Proof. exact (TRANS (@lem2641178) (@lem2641182)). Qed.
Lemma lem2641184 : term235 = True.
Proof. exact (TRANS (@lem2641175) (@lem2641183)). Qed.
Lemma lem2641185 : term232 = True.
Proof. exact (TRANS (@lem2641161) (@lem2641184)). Qed.
Lemma lem2641186 : term109 = True.
Proof. exact (TRANS (@lem2641138) (@lem2641185)). Qed.
Lemma lem2641187 : term229 = True.
Proof. exact (TRANS (@lem2641129) (@lem2641186)). Qed.
Lemma lem2641188 : True = term229.
Proof. exact (SYM (@lem2641187)). Qed.
Lemma lem2641189 : term229.
Proof. exact (EQ_MP (@lem2641188) (@lem0)). Qed.
Lemma lem2641190 (m : int) (n : int) (h1 : term940 m n) : term237 m.
Proof. exact (conj (@lem2641189) (@lem2641049 m n h1)). Qed.
Lemma lem2641192 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641193 (m : int) : term239 m.
Proof. exact (@lem2641192 term31 (term154 m)). Qed.
Lemma lem2641194 (m : int) (n : int) (h1 : term940 m n) : term240 m.
Proof. exact (@lem2641193 m (@lem2641190 m n h1)). Qed.
Lemma lem2641195 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2641196 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641197 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2641196) (@lem2641195 m)). Qed.
Lemma lem2641198 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641199 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2641197 m) (@lem2641198)). Qed.
Lemma lem2641200 (m : int) (n : int) (h1 : term940 m n) : term158 m.
Proof. exact (EQ_MP (@lem2641199 m) (@lem2641194 m n h1)). Qed.
Lemma lem2641201 (m : int) (n : int) (h1 : term940 m n) : term1133 m.
Proof. exact (conj (@lem2641200 m n h1) (@lem2641126 m n h1)). Qed.
Lemma lem2641203 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2641204 (m : int) : term1135 m.
Proof. exact (@lem2641203 (term154 m) (real_of_int m)). Qed.
Lemma lem2641205 (m : int) (n : int) (h1 : term940 m n) : term1136 m.
Proof. exact (@lem2641204 m (@lem2641201 m n h1)). Qed.
Lemma lem2641206 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2641207 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2641209 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641210 : term31 = term99.
Proof. exact (@lem2641209 term32). Qed.
Lemma lem2641212 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2641213 : term97 = term102.
Proof. exact (@lem2641212 term32). Qed.
Lemma lem2641214 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641215 : term103 = term104.
Proof. exact (MK_COMB (@lem2641214) (@lem2641213)). Qed.
Lemma lem2641216 : term105 = term106.
Proof. exact (MK_COMB (@lem2641215) (@lem2641210)). Qed.
Lemma lem2641217 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2641219 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641220 : term109 = term110.
Proof. exact (@lem2641219 (NUMERAL 0) term32). Qed.
Lemma lem2641221 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641222 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641223 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641222 h1) (fun h1 : term110 = True => @lem2641221)). Qed.
Lemma lem2641224 : term110 = True.
Proof. exact (EQ_MP (@lem2641223) (@lem2641221)). Qed.
Lemma lem2641225 : term109 = True.
Proof. exact (TRANS (@lem2641220) (@lem2641224)). Qed.
Lemma lem2641226 : True = term109.
Proof. exact (SYM (@lem2641225)). Qed.
Lemma lem2641227 : term109.
Proof. exact (EQ_MP (@lem2641226) (@lem0)). Qed.
Lemma lem2641228 : term112.
Proof. exact (@lem2641217 (@lem2641227)). Qed.
Lemma lem2641230 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641231 : term109 = term110.
Proof. exact (@lem2641230 (NUMERAL 0) term32). Qed.
Lemma lem2641232 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641233 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641234 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641233 h1) (fun h1 : term110 = True => @lem2641232)). Qed.
Lemma lem2641235 : term110 = True.
Proof. exact (EQ_MP (@lem2641234) (@lem2641232)). Qed.
Lemma lem2641236 : term109 = True.
Proof. exact (TRANS (@lem2641231) (@lem2641235)). Qed.
Lemma lem2641237 : True = term109.
Proof. exact (SYM (@lem2641236)). Qed.
Lemma lem2641238 : term109.
Proof. exact (EQ_MP (@lem2641237) (@lem0)). Qed.
Lemma lem2641239 : term113.
Proof. exact (@lem2641228 (@lem2641238)). Qed.
Lemma lem2641241 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641242 : term109 = term110.
Proof. exact (@lem2641241 (NUMERAL 0) term32). Qed.
Lemma lem2641243 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641244 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641245 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641244 h1) (fun h1 : term110 = True => @lem2641243)). Qed.
Lemma lem2641246 : term110 = True.
Proof. exact (EQ_MP (@lem2641245) (@lem2641243)). Qed.
Lemma lem2641247 : term109 = True.
Proof. exact (TRANS (@lem2641242) (@lem2641246)). Qed.
Lemma lem2641248 : True = term109.
Proof. exact (SYM (@lem2641247)). Qed.
Lemma lem2641249 : term109.
Proof. exact (EQ_MP (@lem2641248) (@lem0)). Qed.
Lemma lem2641250 : term114.
Proof. exact (@lem2641239 (@lem2641249)). Qed.
Lemma lem2641252 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641253 : term117 = term118.
Proof. exact (@lem2641252 term32 term32). Qed.
Lemma lem2641254 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641255 : term120 = term32.
Proof. exact (EQ_MP (@lem2641254) (@lem940073)). Qed.
Lemma lem2641256 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641257 : term118 = term31.
Proof. exact (MK_COMB (@lem2641256) (@lem2641255)). Qed.
Lemma lem2641258 : term117 = term31.
Proof. exact (TRANS (@lem2641253) (@lem2641257)). Qed.
Lemma lem2641260 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641261 : term123 = term124.
Proof. exact (@lem2641260 term32 term32). Qed.
Lemma lem2641262 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641263 : term120 = term32.
Proof. exact (EQ_MP (@lem2641262) (@lem940073)). Qed.
Lemma lem2641264 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641265 : term118 = term31.
Proof. exact (MK_COMB (@lem2641264) (@lem2641263)). Qed.
Lemma lem2641266 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641267 : term124 = term97.
Proof. exact (MK_COMB (@lem2641266) (@lem2641265)). Qed.
Lemma lem2641268 : term123 = term97.
Proof. exact (TRANS (@lem2641261) (@lem2641267)). Qed.
Lemma lem2641269 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641270 : term125 = term103.
Proof. exact (MK_COMB (@lem2641269) (@lem2641268)). Qed.
Lemma lem2641271 : term126 = term105.
Proof. exact (MK_COMB (@lem2641270) (@lem2641258)). Qed.
Lemma lem2641273 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2641274 : term105 = term38.
Proof. exact (@lem2641273 term32). Qed.
Lemma lem2641275 : term126 = term38.
Proof. exact (TRANS (@lem2641271) (@lem2641274)). Qed.
Lemma lem2641276 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2641277 : term128 = term129.
Proof. exact (MK_COMB (@lem2641276) (@lem2641275)). Qed.
Lemma lem2641278 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2641279 : term130 = term131.
Proof. exact (MK_COMB (@lem2641277) (@lem2641278)). Qed.
Lemma lem2641281 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641282 : term131 = term38.
Proof. exact (@lem2641281 term32). Qed.
Lemma lem2641283 : term130 = term38.
Proof. exact (TRANS (@lem2641279) (@lem2641282)). Qed.
Lemma lem2641285 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641286 : term117 = term118.
Proof. exact (@lem2641285 term32 term32). Qed.
Lemma lem2641287 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641288 : term120 = term32.
Proof. exact (EQ_MP (@lem2641287) (@lem940073)). Qed.
Lemma lem2641289 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641290 : term118 = term31.
Proof. exact (MK_COMB (@lem2641289) (@lem2641288)). Qed.
Lemma lem2641291 : term117 = term31.
Proof. exact (TRANS (@lem2641286) (@lem2641290)). Qed.
Lemma lem2641292 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2641293 : term133 = term131.
Proof. exact (MK_COMB (@lem2641292) (@lem2641291)). Qed.
Lemma lem2641295 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641296 : term131 = term38.
Proof. exact (@lem2641295 term32). Qed.
Lemma lem2641297 : term133 = term38.
Proof. exact (TRANS (@lem2641293) (@lem2641296)). Qed.
Lemma lem2641298 : term38 = term133.
Proof. exact (SYM (@lem2641297)). Qed.
Lemma lem2641299 : term130 = term133.
Proof. exact (TRANS (@lem2641283) (@lem2641298)). Qed.
Lemma lem2641300 : term106 = term134.
Proof. exact (@lem2641250 (@lem2641299)). Qed.
Lemma lem2641301 : term105 = term134.
Proof. exact (TRANS (@lem2641216) (@lem2641300)). Qed.
Lemma lem2641303 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2641304 : term134 = term38.
Proof. exact (@lem2641303 term38). Qed.
Lemma lem2641305 : term105 = term38.
Proof. exact (TRANS (@lem2641301) (@lem2641304)). Qed.
Lemma lem2641306 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2641307 : term136 = term129.
Proof. exact (MK_COMB (@lem2641306) (@lem2641305)). Qed.
Lemma lem2641308 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2641309 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2641307) (@lem2641308 m)). Qed.
Lemma lem2641310 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2641207 m) (@lem2641309 m)). Qed.
Lemma lem2641311 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2641312 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2641310 m) (@lem2641311 m)). Qed.
Lemma lem2641313 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641314 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2641313) (@lem2641312 m)). Qed.
Lemma lem2641315 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2641316 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2641314 m) (@lem2641315)). Qed.
Lemma lem2641317 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2641206 m) (@lem2641316 m)). Qed.
Lemma lem2641318 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2641319 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2641317 m) (@lem2641318)). Qed.
Lemma lem2641320 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641321 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2641320) (@lem2641319 m)). Qed.
Lemma lem2641322 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641323 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2641321 m) (@lem2641322)). Qed.
Lemma lem2641324 (m : int) (n : int) (h1 : term940 m n) : term257.
Proof. exact (EQ_MP (@lem2641323 m) (@lem2641205 m n h1)). Qed.
Lemma lem2641326 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2641327 : term257 = term258.
Proof. exact (@lem2641326 term38 term97). Qed.
Lemma lem2641329 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2641330 : term97 = term102.
Proof. exact (@lem2641329 term32). Qed.
Lemma lem2641332 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641333 : term38 = term134.
Proof. exact (@lem2641332 (NUMERAL 0)). Qed.
Lemma lem2641334 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2641335 : term259 = term260.
Proof. exact (MK_COMB (@lem2641334) (@lem2641333)). Qed.
Lemma lem2641336 : term258 = term261.
Proof. exact (MK_COMB (@lem2641335) (@lem2641330)). Qed.
Lemma lem2641337 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2641339 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641340 : term109 = term110.
Proof. exact (@lem2641339 (NUMERAL 0) term32). Qed.
Lemma lem2641341 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641342 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641343 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641342 h1) (fun h1 : term110 = True => @lem2641341)). Qed.
Lemma lem2641344 : term110 = True.
Proof. exact (EQ_MP (@lem2641343) (@lem2641341)). Qed.
Lemma lem2641345 : term109 = True.
Proof. exact (TRANS (@lem2641340) (@lem2641344)). Qed.
Lemma lem2641346 : True = term109.
Proof. exact (SYM (@lem2641345)). Qed.
Lemma lem2641347 : term109.
Proof. exact (EQ_MP (@lem2641346) (@lem0)). Qed.
Lemma lem2641348 : term263.
Proof. exact (@lem2641337 (@lem2641347)). Qed.
Lemma lem2641350 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641351 : term109 = term110.
Proof. exact (@lem2641350 (NUMERAL 0) term32). Qed.
Lemma lem2641352 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641353 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641354 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641353 h1) (fun h1 : term110 = True => @lem2641352)). Qed.
Lemma lem2641355 : term110 = True.
Proof. exact (EQ_MP (@lem2641354) (@lem2641352)). Qed.
Lemma lem2641356 : term109 = True.
Proof. exact (TRANS (@lem2641351) (@lem2641355)). Qed.
Lemma lem2641357 : True = term109.
Proof. exact (SYM (@lem2641356)). Qed.
Lemma lem2641358 : term109.
Proof. exact (EQ_MP (@lem2641357) (@lem0)). Qed.
Lemma lem2641359 : term261 = term264.
Proof. exact (@lem2641348 (@lem2641358)). Qed.
Lemma lem2641361 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641362 : term123 = term124.
Proof. exact (@lem2641361 term32 term32). Qed.
Lemma lem2641363 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641364 : term120 = term32.
Proof. exact (EQ_MP (@lem2641363) (@lem940073)). Qed.
Lemma lem2641365 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641366 : term118 = term31.
Proof. exact (MK_COMB (@lem2641365) (@lem2641364)). Qed.
Lemma lem2641367 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641368 : term124 = term97.
Proof. exact (MK_COMB (@lem2641367) (@lem2641366)). Qed.
Lemma lem2641369 : term123 = term97.
Proof. exact (TRANS (@lem2641362) (@lem2641368)). Qed.
Lemma lem2641371 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641372 : term131 = term38.
Proof. exact (@lem2641371 term32). Qed.
Lemma lem2641373 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2641374 : term265 = term259.
Proof. exact (MK_COMB (@lem2641373) (@lem2641372)). Qed.
Lemma lem2641375 : term264 = term258.
Proof. exact (MK_COMB (@lem2641374) (@lem2641369)). Qed.
Lemma lem2641377 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2641378 : term258 = term268.
Proof. exact (@lem2641377 (NUMERAL 0) term32). Qed.
Lemma lem2641379 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641380 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2641381 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641380 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2641379)). Qed.
Lemma lem2641382 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2641381) (@lem2641379)). Qed.
Lemma lem2641383 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2641384 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2641385 : term269 = (and True).
Proof. exact (MK_COMB (@lem2641384) (@lem2641383)). Qed.
Lemma lem2641386 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2641385) (@lem2641382)). Qed.
Lemma lem2641388 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2641389 : term268 = False.
Proof. exact (TRANS (@lem2641386) (@lem2641388)). Qed.
Lemma lem2641390 : term258 = False.
Proof. exact (TRANS (@lem2641378) (@lem2641389)). Qed.
Lemma lem2641391 : term264 = False.
Proof. exact (TRANS (@lem2641375) (@lem2641390)). Qed.
Lemma lem2641392 : term261 = False.
Proof. exact (TRANS (@lem2641359) (@lem2641391)). Qed.
Lemma lem2641393 : term258 = False.
Proof. exact (TRANS (@lem2641336) (@lem2641392)). Qed.
Lemma lem2641394 : term257 = False.
Proof. exact (TRANS (@lem2641327) (@lem2641393)). Qed.
Lemma lem2641395 (m : int) (n : int) (h1 : term940 m n) : False.
Proof. exact (EQ_MP (@lem2641394) (@lem2641324 m n h1)). Qed.
Lemma lem2641396 (m : int) (n : int) (h1 : term942 m n) : term942 m n.
Proof. exact (h1). Qed.
Lemma lem2641397 (m : int) (n : int) (h1 : term942 m n) : term941 m n.
Proof. exact (proj2 (@lem2641396 m n h1)). Qed.
Lemma lem2641399 (m : int) (n : int) (h1 : term942 m n) : term751 m n.
Proof. exact (proj2 (@lem2641397 m n h1)). Qed.
Lemma lem2641400 (m : int) (n : int) (h1 : term942 m n) : term598 m n.
Proof. exact (proj1 (@lem2641397 m n h1)). Qed.
Lemma lem2641402 (m : int) (n : int) (h1 : term942 m n) : term555 n m.
Proof. exact (proj1 (@lem2641400 m n h1)). Qed.
Lemma lem2641403 (m : int) (n : int) (h1 : term942 m n) : term158 m.
Proof. exact (proj2 (@lem2641402 m n h1)). Qed.
Lemma lem2641406 (m : int) (n : int) (h1 : term942 m n) : term457 m.
Proof. exact (proj1 (@lem2641399 m n h1)). Qed.
Lemma lem2641408 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641409 : term229 = term109.
Proof. exact (@lem2641408 term38 term31). Qed.
Lemma lem2641411 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641412 : term31 = term99.
Proof. exact (@lem2641411 term32). Qed.
Lemma lem2641414 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641415 : term38 = term134.
Proof. exact (@lem2641414 (NUMERAL 0)). Qed.
Lemma lem2641416 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641417 : term230 = term231.
Proof. exact (MK_COMB (@lem2641416) (@lem2641415)). Qed.
Lemma lem2641418 : term109 = term232.
Proof. exact (MK_COMB (@lem2641417) (@lem2641412)). Qed.
Lemma lem2641419 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641421 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641422 : term109 = term110.
Proof. exact (@lem2641421 (NUMERAL 0) term32). Qed.
Lemma lem2641423 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641424 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641425 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641424 h1) (fun h1 : term110 = True => @lem2641423)). Qed.
Lemma lem2641426 : term110 = True.
Proof. exact (EQ_MP (@lem2641425) (@lem2641423)). Qed.
Lemma lem2641427 : term109 = True.
Proof. exact (TRANS (@lem2641422) (@lem2641426)). Qed.
Lemma lem2641428 : True = term109.
Proof. exact (SYM (@lem2641427)). Qed.
Lemma lem2641429 : term109.
Proof. exact (EQ_MP (@lem2641428) (@lem0)). Qed.
Lemma lem2641430 : term234.
Proof. exact (@lem2641419 (@lem2641429)). Qed.
Lemma lem2641432 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641433 : term109 = term110.
Proof. exact (@lem2641432 (NUMERAL 0) term32). Qed.
Lemma lem2641434 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641435 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641436 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641435 h1) (fun h1 : term110 = True => @lem2641434)). Qed.
Lemma lem2641437 : term110 = True.
Proof. exact (EQ_MP (@lem2641436) (@lem2641434)). Qed.
Lemma lem2641438 : term109 = True.
Proof. exact (TRANS (@lem2641433) (@lem2641437)). Qed.
Lemma lem2641439 : True = term109.
Proof. exact (SYM (@lem2641438)). Qed.
Lemma lem2641440 : term109.
Proof. exact (EQ_MP (@lem2641439) (@lem0)). Qed.
Lemma lem2641441 : term232 = term235.
Proof. exact (@lem2641430 (@lem2641440)). Qed.
Lemma lem2641443 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641444 : term117 = term118.
Proof. exact (@lem2641443 term32 term32). Qed.
Lemma lem2641445 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641446 : term120 = term32.
Proof. exact (EQ_MP (@lem2641445) (@lem940073)). Qed.
Lemma lem2641447 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641448 : term118 = term31.
Proof. exact (MK_COMB (@lem2641447) (@lem2641446)). Qed.
Lemma lem2641449 : term117 = term31.
Proof. exact (TRANS (@lem2641444) (@lem2641448)). Qed.
Lemma lem2641451 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641452 : term131 = term38.
Proof. exact (@lem2641451 term32). Qed.
Lemma lem2641453 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641454 : term236 = term230.
Proof. exact (MK_COMB (@lem2641453) (@lem2641452)). Qed.
Lemma lem2641455 : term235 = term109.
Proof. exact (MK_COMB (@lem2641454) (@lem2641449)). Qed.
Lemma lem2641457 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641458 : term109 = term110.
Proof. exact (@lem2641457 (NUMERAL 0) term32). Qed.
Lemma lem2641459 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641460 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641461 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641460 h1) (fun h1 : term110 = True => @lem2641459)). Qed.
Lemma lem2641462 : term110 = True.
Proof. exact (EQ_MP (@lem2641461) (@lem2641459)). Qed.
Lemma lem2641463 : term109 = True.
Proof. exact (TRANS (@lem2641458) (@lem2641462)). Qed.
Lemma lem2641464 : term235 = True.
Proof. exact (TRANS (@lem2641455) (@lem2641463)). Qed.
Lemma lem2641465 : term232 = True.
Proof. exact (TRANS (@lem2641441) (@lem2641464)). Qed.
Lemma lem2641466 : term109 = True.
Proof. exact (TRANS (@lem2641418) (@lem2641465)). Qed.
Lemma lem2641467 : term229 = True.
Proof. exact (TRANS (@lem2641409) (@lem2641466)). Qed.
Lemma lem2641468 : True = term229.
Proof. exact (SYM (@lem2641467)). Qed.
Lemma lem2641469 : term229.
Proof. exact (EQ_MP (@lem2641468) (@lem0)). Qed.
Lemma lem2641470 (m : int) (n : int) (h1 : term942 m n) : term1129 m.
Proof. exact (conj (@lem2641469) (@lem2641406 m n h1)). Qed.
Lemma lem2641472 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641473 (m : int) : term1130 m.
Proof. exact (@lem2641472 term31 (real_of_int m)). Qed.
Lemma lem2641474 (m : int) (n : int) (h1 : term942 m n) : term1131 m.
Proof. exact (@lem2641473 m (@lem2641470 m n h1)). Qed.
Lemma lem2641475 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2641476 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641477 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2641476) (@lem2641475 m)). Qed.
Lemma lem2641478 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641479 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2641477 m) (@lem2641478)). Qed.
Lemma lem2641480 (m : int) (n : int) (h1 : term942 m n) : term457 m.
Proof. exact (EQ_MP (@lem2641479 m) (@lem2641474 m n h1)). Qed.
Lemma lem2641482 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641483 : term229 = term109.
Proof. exact (@lem2641482 term38 term31). Qed.
Lemma lem2641485 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641486 : term31 = term99.
Proof. exact (@lem2641485 term32). Qed.
Lemma lem2641488 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641489 : term38 = term134.
Proof. exact (@lem2641488 (NUMERAL 0)). Qed.
Lemma lem2641490 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641491 : term230 = term231.
Proof. exact (MK_COMB (@lem2641490) (@lem2641489)). Qed.
Lemma lem2641492 : term109 = term232.
Proof. exact (MK_COMB (@lem2641491) (@lem2641486)). Qed.
Lemma lem2641493 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641495 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641496 : term109 = term110.
Proof. exact (@lem2641495 (NUMERAL 0) term32). Qed.
Lemma lem2641497 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641498 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641499 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641498 h1) (fun h1 : term110 = True => @lem2641497)). Qed.
Lemma lem2641500 : term110 = True.
Proof. exact (EQ_MP (@lem2641499) (@lem2641497)). Qed.
Lemma lem2641501 : term109 = True.
Proof. exact (TRANS (@lem2641496) (@lem2641500)). Qed.
Lemma lem2641502 : True = term109.
Proof. exact (SYM (@lem2641501)). Qed.
Lemma lem2641503 : term109.
Proof. exact (EQ_MP (@lem2641502) (@lem0)). Qed.
Lemma lem2641504 : term234.
Proof. exact (@lem2641493 (@lem2641503)). Qed.
Lemma lem2641506 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641507 : term109 = term110.
Proof. exact (@lem2641506 (NUMERAL 0) term32). Qed.
Lemma lem2641508 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641509 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641510 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641509 h1) (fun h1 : term110 = True => @lem2641508)). Qed.
Lemma lem2641511 : term110 = True.
Proof. exact (EQ_MP (@lem2641510) (@lem2641508)). Qed.
Lemma lem2641512 : term109 = True.
Proof. exact (TRANS (@lem2641507) (@lem2641511)). Qed.
Lemma lem2641513 : True = term109.
Proof. exact (SYM (@lem2641512)). Qed.
Lemma lem2641514 : term109.
Proof. exact (EQ_MP (@lem2641513) (@lem0)). Qed.
Lemma lem2641515 : term232 = term235.
Proof. exact (@lem2641504 (@lem2641514)). Qed.
Lemma lem2641517 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641518 : term117 = term118.
Proof. exact (@lem2641517 term32 term32). Qed.
Lemma lem2641519 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641520 : term120 = term32.
Proof. exact (EQ_MP (@lem2641519) (@lem940073)). Qed.
Lemma lem2641521 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641522 : term118 = term31.
Proof. exact (MK_COMB (@lem2641521) (@lem2641520)). Qed.
Lemma lem2641523 : term117 = term31.
Proof. exact (TRANS (@lem2641518) (@lem2641522)). Qed.
Lemma lem2641525 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641526 : term131 = term38.
Proof. exact (@lem2641525 term32). Qed.
Lemma lem2641527 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641528 : term236 = term230.
Proof. exact (MK_COMB (@lem2641527) (@lem2641526)). Qed.
Lemma lem2641529 : term235 = term109.
Proof. exact (MK_COMB (@lem2641528) (@lem2641523)). Qed.
Lemma lem2641531 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641532 : term109 = term110.
Proof. exact (@lem2641531 (NUMERAL 0) term32). Qed.
Lemma lem2641533 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641534 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641535 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641534 h1) (fun h1 : term110 = True => @lem2641533)). Qed.
Lemma lem2641536 : term110 = True.
Proof. exact (EQ_MP (@lem2641535) (@lem2641533)). Qed.
Lemma lem2641537 : term109 = True.
Proof. exact (TRANS (@lem2641532) (@lem2641536)). Qed.
Lemma lem2641538 : term235 = True.
Proof. exact (TRANS (@lem2641529) (@lem2641537)). Qed.
Lemma lem2641539 : term232 = True.
Proof. exact (TRANS (@lem2641515) (@lem2641538)). Qed.
Lemma lem2641540 : term109 = True.
Proof. exact (TRANS (@lem2641492) (@lem2641539)). Qed.
Lemma lem2641541 : term229 = True.
Proof. exact (TRANS (@lem2641483) (@lem2641540)). Qed.
Lemma lem2641542 : True = term229.
Proof. exact (SYM (@lem2641541)). Qed.
Lemma lem2641543 : term229.
Proof. exact (EQ_MP (@lem2641542) (@lem0)). Qed.
Lemma lem2641544 (m : int) (n : int) (h1 : term942 m n) : term237 m.
Proof. exact (conj (@lem2641543) (@lem2641403 m n h1)). Qed.
Lemma lem2641546 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641547 (m : int) : term239 m.
Proof. exact (@lem2641546 term31 (term154 m)). Qed.
Lemma lem2641548 (m : int) (n : int) (h1 : term942 m n) : term240 m.
Proof. exact (@lem2641547 m (@lem2641544 m n h1)). Qed.
Lemma lem2641549 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2641550 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641551 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2641550) (@lem2641549 m)). Qed.
Lemma lem2641552 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641553 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2641551 m) (@lem2641552)). Qed.
Lemma lem2641554 (m : int) (n : int) (h1 : term942 m n) : term158 m.
Proof. exact (EQ_MP (@lem2641553 m) (@lem2641548 m n h1)). Qed.
Lemma lem2641555 (m : int) (n : int) (h1 : term942 m n) : term1133 m.
Proof. exact (conj (@lem2641554 m n h1) (@lem2641480 m n h1)). Qed.
Lemma lem2641557 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2641558 (m : int) : term1135 m.
Proof. exact (@lem2641557 (term154 m) (real_of_int m)). Qed.
Lemma lem2641559 (m : int) (n : int) (h1 : term942 m n) : term1136 m.
Proof. exact (@lem2641558 m (@lem2641555 m n h1)). Qed.
Lemma lem2641560 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2641561 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2641563 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641564 : term31 = term99.
Proof. exact (@lem2641563 term32). Qed.
Lemma lem2641566 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2641567 : term97 = term102.
Proof. exact (@lem2641566 term32). Qed.
Lemma lem2641568 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641569 : term103 = term104.
Proof. exact (MK_COMB (@lem2641568) (@lem2641567)). Qed.
Lemma lem2641570 : term105 = term106.
Proof. exact (MK_COMB (@lem2641569) (@lem2641564)). Qed.
Lemma lem2641571 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2641573 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641574 : term109 = term110.
Proof. exact (@lem2641573 (NUMERAL 0) term32). Qed.
Lemma lem2641575 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641576 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641577 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641576 h1) (fun h1 : term110 = True => @lem2641575)). Qed.
Lemma lem2641578 : term110 = True.
Proof. exact (EQ_MP (@lem2641577) (@lem2641575)). Qed.
Lemma lem2641579 : term109 = True.
Proof. exact (TRANS (@lem2641574) (@lem2641578)). Qed.
Lemma lem2641580 : True = term109.
Proof. exact (SYM (@lem2641579)). Qed.
Lemma lem2641581 : term109.
Proof. exact (EQ_MP (@lem2641580) (@lem0)). Qed.
Lemma lem2641582 : term112.
Proof. exact (@lem2641571 (@lem2641581)). Qed.
Lemma lem2641584 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641585 : term109 = term110.
Proof. exact (@lem2641584 (NUMERAL 0) term32). Qed.
Lemma lem2641586 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641587 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641588 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641587 h1) (fun h1 : term110 = True => @lem2641586)). Qed.
Lemma lem2641589 : term110 = True.
Proof. exact (EQ_MP (@lem2641588) (@lem2641586)). Qed.
Lemma lem2641590 : term109 = True.
Proof. exact (TRANS (@lem2641585) (@lem2641589)). Qed.
Lemma lem2641591 : True = term109.
Proof. exact (SYM (@lem2641590)). Qed.
Lemma lem2641592 : term109.
Proof. exact (EQ_MP (@lem2641591) (@lem0)). Qed.
Lemma lem2641593 : term113.
Proof. exact (@lem2641582 (@lem2641592)). Qed.
Lemma lem2641595 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641596 : term109 = term110.
Proof. exact (@lem2641595 (NUMERAL 0) term32). Qed.
Lemma lem2641597 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641598 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641599 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641598 h1) (fun h1 : term110 = True => @lem2641597)). Qed.
Lemma lem2641600 : term110 = True.
Proof. exact (EQ_MP (@lem2641599) (@lem2641597)). Qed.
Lemma lem2641601 : term109 = True.
Proof. exact (TRANS (@lem2641596) (@lem2641600)). Qed.
Lemma lem2641602 : True = term109.
Proof. exact (SYM (@lem2641601)). Qed.
Lemma lem2641603 : term109.
Proof. exact (EQ_MP (@lem2641602) (@lem0)). Qed.
Lemma lem2641604 : term114.
Proof. exact (@lem2641593 (@lem2641603)). Qed.
Lemma lem2641606 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641607 : term117 = term118.
Proof. exact (@lem2641606 term32 term32). Qed.
Lemma lem2641608 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641609 : term120 = term32.
Proof. exact (EQ_MP (@lem2641608) (@lem940073)). Qed.
Lemma lem2641610 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641611 : term118 = term31.
Proof. exact (MK_COMB (@lem2641610) (@lem2641609)). Qed.
Lemma lem2641612 : term117 = term31.
Proof. exact (TRANS (@lem2641607) (@lem2641611)). Qed.
Lemma lem2641614 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641615 : term123 = term124.
Proof. exact (@lem2641614 term32 term32). Qed.
Lemma lem2641616 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641617 : term120 = term32.
Proof. exact (EQ_MP (@lem2641616) (@lem940073)). Qed.
Lemma lem2641618 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641619 : term118 = term31.
Proof. exact (MK_COMB (@lem2641618) (@lem2641617)). Qed.
Lemma lem2641620 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641621 : term124 = term97.
Proof. exact (MK_COMB (@lem2641620) (@lem2641619)). Qed.
Lemma lem2641622 : term123 = term97.
Proof. exact (TRANS (@lem2641615) (@lem2641621)). Qed.
Lemma lem2641623 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641624 : term125 = term103.
Proof. exact (MK_COMB (@lem2641623) (@lem2641622)). Qed.
Lemma lem2641625 : term126 = term105.
Proof. exact (MK_COMB (@lem2641624) (@lem2641612)). Qed.
Lemma lem2641627 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2641628 : term105 = term38.
Proof. exact (@lem2641627 term32). Qed.
Lemma lem2641629 : term126 = term38.
Proof. exact (TRANS (@lem2641625) (@lem2641628)). Qed.
Lemma lem2641630 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2641631 : term128 = term129.
Proof. exact (MK_COMB (@lem2641630) (@lem2641629)). Qed.
Lemma lem2641632 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2641633 : term130 = term131.
Proof. exact (MK_COMB (@lem2641631) (@lem2641632)). Qed.
Lemma lem2641635 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641636 : term131 = term38.
Proof. exact (@lem2641635 term32). Qed.
Lemma lem2641637 : term130 = term38.
Proof. exact (TRANS (@lem2641633) (@lem2641636)). Qed.
Lemma lem2641639 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641640 : term117 = term118.
Proof. exact (@lem2641639 term32 term32). Qed.
Lemma lem2641641 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641642 : term120 = term32.
Proof. exact (EQ_MP (@lem2641641) (@lem940073)). Qed.
Lemma lem2641643 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641644 : term118 = term31.
Proof. exact (MK_COMB (@lem2641643) (@lem2641642)). Qed.
Lemma lem2641645 : term117 = term31.
Proof. exact (TRANS (@lem2641640) (@lem2641644)). Qed.
Lemma lem2641646 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2641647 : term133 = term131.
Proof. exact (MK_COMB (@lem2641646) (@lem2641645)). Qed.
Lemma lem2641649 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641650 : term131 = term38.
Proof. exact (@lem2641649 term32). Qed.
Lemma lem2641651 : term133 = term38.
Proof. exact (TRANS (@lem2641647) (@lem2641650)). Qed.
Lemma lem2641652 : term38 = term133.
Proof. exact (SYM (@lem2641651)). Qed.
Lemma lem2641653 : term130 = term133.
Proof. exact (TRANS (@lem2641637) (@lem2641652)). Qed.
Lemma lem2641654 : term106 = term134.
Proof. exact (@lem2641604 (@lem2641653)). Qed.
Lemma lem2641655 : term105 = term134.
Proof. exact (TRANS (@lem2641570) (@lem2641654)). Qed.
Lemma lem2641657 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2641658 : term134 = term38.
Proof. exact (@lem2641657 term38). Qed.
Lemma lem2641659 : term105 = term38.
Proof. exact (TRANS (@lem2641655) (@lem2641658)). Qed.
Lemma lem2641660 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2641661 : term136 = term129.
Proof. exact (MK_COMB (@lem2641660) (@lem2641659)). Qed.
Lemma lem2641662 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2641663 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2641661) (@lem2641662 m)). Qed.
Lemma lem2641664 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2641561 m) (@lem2641663 m)). Qed.
Lemma lem2641665 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2641666 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2641664 m) (@lem2641665 m)). Qed.
Lemma lem2641667 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641668 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2641667) (@lem2641666 m)). Qed.
Lemma lem2641669 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2641670 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2641668 m) (@lem2641669)). Qed.
Lemma lem2641671 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2641560 m) (@lem2641670 m)). Qed.
Lemma lem2641672 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2641673 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2641671 m) (@lem2641672)). Qed.
Lemma lem2641674 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641675 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2641674) (@lem2641673 m)). Qed.
Lemma lem2641676 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641677 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2641675 m) (@lem2641676)). Qed.
Lemma lem2641678 (m : int) (n : int) (h1 : term942 m n) : term257.
Proof. exact (EQ_MP (@lem2641677 m) (@lem2641559 m n h1)). Qed.
Lemma lem2641680 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2641681 : term257 = term258.
Proof. exact (@lem2641680 term38 term97). Qed.
Lemma lem2641683 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2641684 : term97 = term102.
Proof. exact (@lem2641683 term32). Qed.
Lemma lem2641686 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641687 : term38 = term134.
Proof. exact (@lem2641686 (NUMERAL 0)). Qed.
Lemma lem2641688 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2641689 : term259 = term260.
Proof. exact (MK_COMB (@lem2641688) (@lem2641687)). Qed.
Lemma lem2641690 : term258 = term261.
Proof. exact (MK_COMB (@lem2641689) (@lem2641684)). Qed.
Lemma lem2641691 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2641693 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641694 : term109 = term110.
Proof. exact (@lem2641693 (NUMERAL 0) term32). Qed.
Lemma lem2641695 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641696 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641697 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641696 h1) (fun h1 : term110 = True => @lem2641695)). Qed.
Lemma lem2641698 : term110 = True.
Proof. exact (EQ_MP (@lem2641697) (@lem2641695)). Qed.
Lemma lem2641699 : term109 = True.
Proof. exact (TRANS (@lem2641694) (@lem2641698)). Qed.
Lemma lem2641700 : True = term109.
Proof. exact (SYM (@lem2641699)). Qed.
Lemma lem2641701 : term109.
Proof. exact (EQ_MP (@lem2641700) (@lem0)). Qed.
Lemma lem2641702 : term263.
Proof. exact (@lem2641691 (@lem2641701)). Qed.
Lemma lem2641704 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641705 : term109 = term110.
Proof. exact (@lem2641704 (NUMERAL 0) term32). Qed.
Lemma lem2641706 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641707 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641708 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641707 h1) (fun h1 : term110 = True => @lem2641706)). Qed.
Lemma lem2641709 : term110 = True.
Proof. exact (EQ_MP (@lem2641708) (@lem2641706)). Qed.
Lemma lem2641710 : term109 = True.
Proof. exact (TRANS (@lem2641705) (@lem2641709)). Qed.
Lemma lem2641711 : True = term109.
Proof. exact (SYM (@lem2641710)). Qed.
Lemma lem2641712 : term109.
Proof. exact (EQ_MP (@lem2641711) (@lem0)). Qed.
Lemma lem2641713 : term261 = term264.
Proof. exact (@lem2641702 (@lem2641712)). Qed.
Lemma lem2641715 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641716 : term123 = term124.
Proof. exact (@lem2641715 term32 term32). Qed.
Lemma lem2641717 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641718 : term120 = term32.
Proof. exact (EQ_MP (@lem2641717) (@lem940073)). Qed.
Lemma lem2641719 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641720 : term118 = term31.
Proof. exact (MK_COMB (@lem2641719) (@lem2641718)). Qed.
Lemma lem2641721 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641722 : term124 = term97.
Proof. exact (MK_COMB (@lem2641721) (@lem2641720)). Qed.
Lemma lem2641723 : term123 = term97.
Proof. exact (TRANS (@lem2641716) (@lem2641722)). Qed.
Lemma lem2641725 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641726 : term131 = term38.
Proof. exact (@lem2641725 term32). Qed.
Lemma lem2641727 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2641728 : term265 = term259.
Proof. exact (MK_COMB (@lem2641727) (@lem2641726)). Qed.
Lemma lem2641729 : term264 = term258.
Proof. exact (MK_COMB (@lem2641728) (@lem2641723)). Qed.
Lemma lem2641731 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2641732 : term258 = term268.
Proof. exact (@lem2641731 (NUMERAL 0) term32). Qed.
Lemma lem2641733 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641734 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2641735 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641734 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2641733)). Qed.
Lemma lem2641736 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2641735) (@lem2641733)). Qed.
Lemma lem2641737 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2641738 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2641739 : term269 = (and True).
Proof. exact (MK_COMB (@lem2641738) (@lem2641737)). Qed.
Lemma lem2641740 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2641739) (@lem2641736)). Qed.
Lemma lem2641742 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2641743 : term268 = False.
Proof. exact (TRANS (@lem2641740) (@lem2641742)). Qed.
Lemma lem2641744 : term258 = False.
Proof. exact (TRANS (@lem2641732) (@lem2641743)). Qed.
Lemma lem2641745 : term264 = False.
Proof. exact (TRANS (@lem2641729) (@lem2641744)). Qed.
Lemma lem2641746 : term261 = False.
Proof. exact (TRANS (@lem2641713) (@lem2641745)). Qed.
Lemma lem2641747 : term258 = False.
Proof. exact (TRANS (@lem2641690) (@lem2641746)). Qed.
Lemma lem2641748 : term257 = False.
Proof. exact (TRANS (@lem2641681) (@lem2641747)). Qed.
Lemma lem2641749 (m : int) (n : int) (h1 : term942 m n) : False.
Proof. exact (EQ_MP (@lem2641748) (@lem2641678 m n h1)). Qed.
Lemma lem2641750 (m : int) (n : int) (h1 : term944 m n) : False.
Proof. exact (or_elim (@lem2641041 m n h1) (fun h0 : term940 m n => @lem2641395 m n h0) (fun h0 : term942 m n => @lem2641749 m n h0)). Qed.
Lemma lem2641751 (m : int) (n : int) (h1 : term968 m n) : term968 m n.
Proof. exact (h1). Qed.
Lemma lem2641752 (m : int) (n : int) (h1 : term964 m n) : term964 m n.
Proof. exact (h1). Qed.
Lemma lem2641753 (m : int) (n : int) (h1 : term964 m n) : term963 m n.
Proof. exact (proj2 (@lem2641752 m n h1)). Qed.
Lemma lem2641755 (m : int) (n : int) (h1 : term964 m n) : term716 m n.
Proof. exact (proj2 (@lem2641753 m n h1)). Qed.
Lemma lem2641756 (m : int) (n : int) (h1 : term964 m n) : term599 m n.
Proof. exact (proj1 (@lem2641753 m n h1)). Qed.
Lemma lem2641758 (m : int) (n : int) (h1 : term964 m n) : term556 n m.
Proof. exact (proj1 (@lem2641756 m n h1)). Qed.
Lemma lem2641759 (m : int) (n : int) (h1 : term964 m n) : term158 m.
Proof. exact (proj2 (@lem2641758 m n h1)). Qed.
Lemma lem2641762 (m : int) (n : int) (h1 : term964 m n) : term457 m.
Proof. exact (proj1 (@lem2641755 m n h1)). Qed.
Lemma lem2641764 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641765 : term229 = term109.
Proof. exact (@lem2641764 term38 term31). Qed.
Lemma lem2641767 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641768 : term31 = term99.
Proof. exact (@lem2641767 term32). Qed.
Lemma lem2641770 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641771 : term38 = term134.
Proof. exact (@lem2641770 (NUMERAL 0)). Qed.
Lemma lem2641772 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641773 : term230 = term231.
Proof. exact (MK_COMB (@lem2641772) (@lem2641771)). Qed.
Lemma lem2641774 : term109 = term232.
Proof. exact (MK_COMB (@lem2641773) (@lem2641768)). Qed.
Lemma lem2641775 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641777 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641778 : term109 = term110.
Proof. exact (@lem2641777 (NUMERAL 0) term32). Qed.
Lemma lem2641779 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641780 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641781 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641780 h1) (fun h1 : term110 = True => @lem2641779)). Qed.
Lemma lem2641782 : term110 = True.
Proof. exact (EQ_MP (@lem2641781) (@lem2641779)). Qed.
Lemma lem2641783 : term109 = True.
Proof. exact (TRANS (@lem2641778) (@lem2641782)). Qed.
Lemma lem2641784 : True = term109.
Proof. exact (SYM (@lem2641783)). Qed.
Lemma lem2641785 : term109.
Proof. exact (EQ_MP (@lem2641784) (@lem0)). Qed.
Lemma lem2641786 : term234.
Proof. exact (@lem2641775 (@lem2641785)). Qed.
Lemma lem2641788 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641789 : term109 = term110.
Proof. exact (@lem2641788 (NUMERAL 0) term32). Qed.
Lemma lem2641790 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641791 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641792 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641791 h1) (fun h1 : term110 = True => @lem2641790)). Qed.
Lemma lem2641793 : term110 = True.
Proof. exact (EQ_MP (@lem2641792) (@lem2641790)). Qed.
Lemma lem2641794 : term109 = True.
Proof. exact (TRANS (@lem2641789) (@lem2641793)). Qed.
Lemma lem2641795 : True = term109.
Proof. exact (SYM (@lem2641794)). Qed.
Lemma lem2641796 : term109.
Proof. exact (EQ_MP (@lem2641795) (@lem0)). Qed.
Lemma lem2641797 : term232 = term235.
Proof. exact (@lem2641786 (@lem2641796)). Qed.
Lemma lem2641799 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641800 : term117 = term118.
Proof. exact (@lem2641799 term32 term32). Qed.
Lemma lem2641801 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641802 : term120 = term32.
Proof. exact (EQ_MP (@lem2641801) (@lem940073)). Qed.
Lemma lem2641803 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641804 : term118 = term31.
Proof. exact (MK_COMB (@lem2641803) (@lem2641802)). Qed.
Lemma lem2641805 : term117 = term31.
Proof. exact (TRANS (@lem2641800) (@lem2641804)). Qed.
Lemma lem2641807 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641808 : term131 = term38.
Proof. exact (@lem2641807 term32). Qed.
Lemma lem2641809 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641810 : term236 = term230.
Proof. exact (MK_COMB (@lem2641809) (@lem2641808)). Qed.
Lemma lem2641811 : term235 = term109.
Proof. exact (MK_COMB (@lem2641810) (@lem2641805)). Qed.
Lemma lem2641813 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641814 : term109 = term110.
Proof. exact (@lem2641813 (NUMERAL 0) term32). Qed.
Lemma lem2641815 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641816 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641817 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641816 h1) (fun h1 : term110 = True => @lem2641815)). Qed.
Lemma lem2641818 : term110 = True.
Proof. exact (EQ_MP (@lem2641817) (@lem2641815)). Qed.
Lemma lem2641819 : term109 = True.
Proof. exact (TRANS (@lem2641814) (@lem2641818)). Qed.
Lemma lem2641820 : term235 = True.
Proof. exact (TRANS (@lem2641811) (@lem2641819)). Qed.
Lemma lem2641821 : term232 = True.
Proof. exact (TRANS (@lem2641797) (@lem2641820)). Qed.
Lemma lem2641822 : term109 = True.
Proof. exact (TRANS (@lem2641774) (@lem2641821)). Qed.
Lemma lem2641823 : term229 = True.
Proof. exact (TRANS (@lem2641765) (@lem2641822)). Qed.
Lemma lem2641824 : True = term229.
Proof. exact (SYM (@lem2641823)). Qed.
Lemma lem2641825 : term229.
Proof. exact (EQ_MP (@lem2641824) (@lem0)). Qed.
Lemma lem2641826 (m : int) (n : int) (h1 : term964 m n) : term1129 m.
Proof. exact (conj (@lem2641825) (@lem2641762 m n h1)). Qed.
Lemma lem2641828 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641829 (m : int) : term1130 m.
Proof. exact (@lem2641828 term31 (real_of_int m)). Qed.
Lemma lem2641830 (m : int) (n : int) (h1 : term964 m n) : term1131 m.
Proof. exact (@lem2641829 m (@lem2641826 m n h1)). Qed.
Lemma lem2641831 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2641832 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641833 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2641832) (@lem2641831 m)). Qed.
Lemma lem2641834 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641835 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2641833 m) (@lem2641834)). Qed.
Lemma lem2641836 (m : int) (n : int) (h1 : term964 m n) : term457 m.
Proof. exact (EQ_MP (@lem2641835 m) (@lem2641830 m n h1)). Qed.
Lemma lem2641838 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2641839 : term229 = term109.
Proof. exact (@lem2641838 term38 term31). Qed.
Lemma lem2641841 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641842 : term31 = term99.
Proof. exact (@lem2641841 term32). Qed.
Lemma lem2641844 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641845 : term38 = term134.
Proof. exact (@lem2641844 (NUMERAL 0)). Qed.
Lemma lem2641846 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641847 : term230 = term231.
Proof. exact (MK_COMB (@lem2641846) (@lem2641845)). Qed.
Lemma lem2641848 : term109 = term232.
Proof. exact (MK_COMB (@lem2641847) (@lem2641842)). Qed.
Lemma lem2641849 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2641851 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641852 : term109 = term110.
Proof. exact (@lem2641851 (NUMERAL 0) term32). Qed.
Lemma lem2641853 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641854 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641855 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641854 h1) (fun h1 : term110 = True => @lem2641853)). Qed.
Lemma lem2641856 : term110 = True.
Proof. exact (EQ_MP (@lem2641855) (@lem2641853)). Qed.
Lemma lem2641857 : term109 = True.
Proof. exact (TRANS (@lem2641852) (@lem2641856)). Qed.
Lemma lem2641858 : True = term109.
Proof. exact (SYM (@lem2641857)). Qed.
Lemma lem2641859 : term109.
Proof. exact (EQ_MP (@lem2641858) (@lem0)). Qed.
Lemma lem2641860 : term234.
Proof. exact (@lem2641849 (@lem2641859)). Qed.
Lemma lem2641862 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641863 : term109 = term110.
Proof. exact (@lem2641862 (NUMERAL 0) term32). Qed.
Lemma lem2641864 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641865 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641866 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641865 h1) (fun h1 : term110 = True => @lem2641864)). Qed.
Lemma lem2641867 : term110 = True.
Proof. exact (EQ_MP (@lem2641866) (@lem2641864)). Qed.
Lemma lem2641868 : term109 = True.
Proof. exact (TRANS (@lem2641863) (@lem2641867)). Qed.
Lemma lem2641869 : True = term109.
Proof. exact (SYM (@lem2641868)). Qed.
Lemma lem2641870 : term109.
Proof. exact (EQ_MP (@lem2641869) (@lem0)). Qed.
Lemma lem2641871 : term232 = term235.
Proof. exact (@lem2641860 (@lem2641870)). Qed.
Lemma lem2641873 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641874 : term117 = term118.
Proof. exact (@lem2641873 term32 term32). Qed.
Lemma lem2641875 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641876 : term120 = term32.
Proof. exact (EQ_MP (@lem2641875) (@lem940073)). Qed.
Lemma lem2641877 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641878 : term118 = term31.
Proof. exact (MK_COMB (@lem2641877) (@lem2641876)). Qed.
Lemma lem2641879 : term117 = term31.
Proof. exact (TRANS (@lem2641874) (@lem2641878)). Qed.
Lemma lem2641881 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641882 : term131 = term38.
Proof. exact (@lem2641881 term32). Qed.
Lemma lem2641883 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2641884 : term236 = term230.
Proof. exact (MK_COMB (@lem2641883) (@lem2641882)). Qed.
Lemma lem2641885 : term235 = term109.
Proof. exact (MK_COMB (@lem2641884) (@lem2641879)). Qed.
Lemma lem2641887 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641888 : term109 = term110.
Proof. exact (@lem2641887 (NUMERAL 0) term32). Qed.
Lemma lem2641889 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641890 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641891 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641890 h1) (fun h1 : term110 = True => @lem2641889)). Qed.
Lemma lem2641892 : term110 = True.
Proof. exact (EQ_MP (@lem2641891) (@lem2641889)). Qed.
Lemma lem2641893 : term109 = True.
Proof. exact (TRANS (@lem2641888) (@lem2641892)). Qed.
Lemma lem2641894 : term235 = True.
Proof. exact (TRANS (@lem2641885) (@lem2641893)). Qed.
Lemma lem2641895 : term232 = True.
Proof. exact (TRANS (@lem2641871) (@lem2641894)). Qed.
Lemma lem2641896 : term109 = True.
Proof. exact (TRANS (@lem2641848) (@lem2641895)). Qed.
Lemma lem2641897 : term229 = True.
Proof. exact (TRANS (@lem2641839) (@lem2641896)). Qed.
Lemma lem2641898 : True = term229.
Proof. exact (SYM (@lem2641897)). Qed.
Lemma lem2641899 : term229.
Proof. exact (EQ_MP (@lem2641898) (@lem0)). Qed.
Lemma lem2641900 (m : int) (n : int) (h1 : term964 m n) : term237 m.
Proof. exact (conj (@lem2641899) (@lem2641759 m n h1)). Qed.
Lemma lem2641902 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2641903 (m : int) : term239 m.
Proof. exact (@lem2641902 term31 (term154 m)). Qed.
Lemma lem2641904 (m : int) (n : int) (h1 : term964 m n) : term240 m.
Proof. exact (@lem2641903 m (@lem2641900 m n h1)). Qed.
Lemma lem2641905 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2641906 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2641907 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2641906) (@lem2641905 m)). Qed.
Lemma lem2641908 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2641909 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2641907 m) (@lem2641908)). Qed.
Lemma lem2641910 (m : int) (n : int) (h1 : term964 m n) : term158 m.
Proof. exact (EQ_MP (@lem2641909 m) (@lem2641904 m n h1)). Qed.
Lemma lem2641911 (m : int) (n : int) (h1 : term964 m n) : term1133 m.
Proof. exact (conj (@lem2641910 m n h1) (@lem2641836 m n h1)). Qed.
Lemma lem2641913 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2641914 (m : int) : term1135 m.
Proof. exact (@lem2641913 (term154 m) (real_of_int m)). Qed.
Lemma lem2641915 (m : int) (n : int) (h1 : term964 m n) : term1136 m.
Proof. exact (@lem2641914 m (@lem2641911 m n h1)). Qed.
Lemma lem2641916 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2641917 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2641919 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2641920 : term31 = term99.
Proof. exact (@lem2641919 term32). Qed.
Lemma lem2641922 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2641923 : term97 = term102.
Proof. exact (@lem2641922 term32). Qed.
Lemma lem2641924 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641925 : term103 = term104.
Proof. exact (MK_COMB (@lem2641924) (@lem2641923)). Qed.
Lemma lem2641926 : term105 = term106.
Proof. exact (MK_COMB (@lem2641925) (@lem2641920)). Qed.
Lemma lem2641927 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2641929 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641930 : term109 = term110.
Proof. exact (@lem2641929 (NUMERAL 0) term32). Qed.
Lemma lem2641931 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641932 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641933 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641932 h1) (fun h1 : term110 = True => @lem2641931)). Qed.
Lemma lem2641934 : term110 = True.
Proof. exact (EQ_MP (@lem2641933) (@lem2641931)). Qed.
Lemma lem2641935 : term109 = True.
Proof. exact (TRANS (@lem2641930) (@lem2641934)). Qed.
Lemma lem2641936 : True = term109.
Proof. exact (SYM (@lem2641935)). Qed.
Lemma lem2641937 : term109.
Proof. exact (EQ_MP (@lem2641936) (@lem0)). Qed.
Lemma lem2641938 : term112.
Proof. exact (@lem2641927 (@lem2641937)). Qed.
Lemma lem2641940 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641941 : term109 = term110.
Proof. exact (@lem2641940 (NUMERAL 0) term32). Qed.
Lemma lem2641942 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641943 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641944 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641943 h1) (fun h1 : term110 = True => @lem2641942)). Qed.
Lemma lem2641945 : term110 = True.
Proof. exact (EQ_MP (@lem2641944) (@lem2641942)). Qed.
Lemma lem2641946 : term109 = True.
Proof. exact (TRANS (@lem2641941) (@lem2641945)). Qed.
Lemma lem2641947 : True = term109.
Proof. exact (SYM (@lem2641946)). Qed.
Lemma lem2641948 : term109.
Proof. exact (EQ_MP (@lem2641947) (@lem0)). Qed.
Lemma lem2641949 : term113.
Proof. exact (@lem2641938 (@lem2641948)). Qed.
Lemma lem2641951 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2641952 : term109 = term110.
Proof. exact (@lem2641951 (NUMERAL 0) term32). Qed.
Lemma lem2641953 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2641954 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2641955 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2641954 h1) (fun h1 : term110 = True => @lem2641953)). Qed.
Lemma lem2641956 : term110 = True.
Proof. exact (EQ_MP (@lem2641955) (@lem2641953)). Qed.
Lemma lem2641957 : term109 = True.
Proof. exact (TRANS (@lem2641952) (@lem2641956)). Qed.
Lemma lem2641958 : True = term109.
Proof. exact (SYM (@lem2641957)). Qed.
Lemma lem2641959 : term109.
Proof. exact (EQ_MP (@lem2641958) (@lem0)). Qed.
Lemma lem2641960 : term114.
Proof. exact (@lem2641949 (@lem2641959)). Qed.
Lemma lem2641962 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641963 : term117 = term118.
Proof. exact (@lem2641962 term32 term32). Qed.
Lemma lem2641964 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641965 : term120 = term32.
Proof. exact (EQ_MP (@lem2641964) (@lem940073)). Qed.
Lemma lem2641966 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641967 : term118 = term31.
Proof. exact (MK_COMB (@lem2641966) (@lem2641965)). Qed.
Lemma lem2641968 : term117 = term31.
Proof. exact (TRANS (@lem2641963) (@lem2641967)). Qed.
Lemma lem2641970 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2641971 : term123 = term124.
Proof. exact (@lem2641970 term32 term32). Qed.
Lemma lem2641972 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641973 : term120 = term32.
Proof. exact (EQ_MP (@lem2641972) (@lem940073)). Qed.
Lemma lem2641974 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2641975 : term118 = term31.
Proof. exact (MK_COMB (@lem2641974) (@lem2641973)). Qed.
Lemma lem2641976 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2641977 : term124 = term97.
Proof. exact (MK_COMB (@lem2641976) (@lem2641975)). Qed.
Lemma lem2641978 : term123 = term97.
Proof. exact (TRANS (@lem2641971) (@lem2641977)). Qed.
Lemma lem2641979 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2641980 : term125 = term103.
Proof. exact (MK_COMB (@lem2641979) (@lem2641978)). Qed.
Lemma lem2641981 : term126 = term105.
Proof. exact (MK_COMB (@lem2641980) (@lem2641968)). Qed.
Lemma lem2641983 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2641984 : term105 = term38.
Proof. exact (@lem2641983 term32). Qed.
Lemma lem2641985 : term126 = term38.
Proof. exact (TRANS (@lem2641981) (@lem2641984)). Qed.
Lemma lem2641986 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2641987 : term128 = term129.
Proof. exact (MK_COMB (@lem2641986) (@lem2641985)). Qed.
Lemma lem2641988 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2641989 : term130 = term131.
Proof. exact (MK_COMB (@lem2641987) (@lem2641988)). Qed.
Lemma lem2641991 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2641992 : term131 = term38.
Proof. exact (@lem2641991 term32). Qed.
Lemma lem2641993 : term130 = term38.
Proof. exact (TRANS (@lem2641989) (@lem2641992)). Qed.
Lemma lem2641995 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2641996 : term117 = term118.
Proof. exact (@lem2641995 term32 term32). Qed.
Lemma lem2641997 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2641998 : term120 = term32.
Proof. exact (EQ_MP (@lem2641997) (@lem940073)). Qed.
Lemma lem2641999 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642000 : term118 = term31.
Proof. exact (MK_COMB (@lem2641999) (@lem2641998)). Qed.
Lemma lem2642001 : term117 = term31.
Proof. exact (TRANS (@lem2641996) (@lem2642000)). Qed.
Lemma lem2642002 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2642003 : term133 = term131.
Proof. exact (MK_COMB (@lem2642002) (@lem2642001)). Qed.
Lemma lem2642005 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642006 : term131 = term38.
Proof. exact (@lem2642005 term32). Qed.
Lemma lem2642007 : term133 = term38.
Proof. exact (TRANS (@lem2642003) (@lem2642006)). Qed.
Lemma lem2642008 : term38 = term133.
Proof. exact (SYM (@lem2642007)). Qed.
Lemma lem2642009 : term130 = term133.
Proof. exact (TRANS (@lem2641993) (@lem2642008)). Qed.
Lemma lem2642010 : term106 = term134.
Proof. exact (@lem2641960 (@lem2642009)). Qed.
Lemma lem2642011 : term105 = term134.
Proof. exact (TRANS (@lem2641926) (@lem2642010)). Qed.
Lemma lem2642013 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2642014 : term134 = term38.
Proof. exact (@lem2642013 term38). Qed.
Lemma lem2642015 : term105 = term38.
Proof. exact (TRANS (@lem2642011) (@lem2642014)). Qed.
Lemma lem2642016 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642017 : term136 = term129.
Proof. exact (MK_COMB (@lem2642016) (@lem2642015)). Qed.
Lemma lem2642018 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2642019 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2642017) (@lem2642018 m)). Qed.
Lemma lem2642020 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2641917 m) (@lem2642019 m)). Qed.
Lemma lem2642021 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2642022 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2642020 m) (@lem2642021 m)). Qed.
Lemma lem2642023 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642024 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2642023) (@lem2642022 m)). Qed.
Lemma lem2642025 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2642026 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2642024 m) (@lem2642025)). Qed.
Lemma lem2642027 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2641916 m) (@lem2642026 m)). Qed.
Lemma lem2642028 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2642029 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2642027 m) (@lem2642028)). Qed.
Lemma lem2642030 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642031 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2642030) (@lem2642029 m)). Qed.
Lemma lem2642032 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642033 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2642031 m) (@lem2642032)). Qed.
Lemma lem2642034 (m : int) (n : int) (h1 : term964 m n) : term257.
Proof. exact (EQ_MP (@lem2642033 m) (@lem2641915 m n h1)). Qed.
Lemma lem2642036 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2642037 : term257 = term258.
Proof. exact (@lem2642036 term38 term97). Qed.
Lemma lem2642039 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642040 : term97 = term102.
Proof. exact (@lem2642039 term32). Qed.
Lemma lem2642042 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642043 : term38 = term134.
Proof. exact (@lem2642042 (NUMERAL 0)). Qed.
Lemma lem2642044 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642045 : term259 = term260.
Proof. exact (MK_COMB (@lem2642044) (@lem2642043)). Qed.
Lemma lem2642046 : term258 = term261.
Proof. exact (MK_COMB (@lem2642045) (@lem2642040)). Qed.
Lemma lem2642047 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2642049 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642050 : term109 = term110.
Proof. exact (@lem2642049 (NUMERAL 0) term32). Qed.
Lemma lem2642051 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642052 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642053 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642052 h1) (fun h1 : term110 = True => @lem2642051)). Qed.
Lemma lem2642054 : term110 = True.
Proof. exact (EQ_MP (@lem2642053) (@lem2642051)). Qed.
Lemma lem2642055 : term109 = True.
Proof. exact (TRANS (@lem2642050) (@lem2642054)). Qed.
Lemma lem2642056 : True = term109.
Proof. exact (SYM (@lem2642055)). Qed.
Lemma lem2642057 : term109.
Proof. exact (EQ_MP (@lem2642056) (@lem0)). Qed.
Lemma lem2642058 : term263.
Proof. exact (@lem2642047 (@lem2642057)). Qed.
Lemma lem2642060 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642061 : term109 = term110.
Proof. exact (@lem2642060 (NUMERAL 0) term32). Qed.
Lemma lem2642062 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642063 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642064 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642063 h1) (fun h1 : term110 = True => @lem2642062)). Qed.
Lemma lem2642065 : term110 = True.
Proof. exact (EQ_MP (@lem2642064) (@lem2642062)). Qed.
Lemma lem2642066 : term109 = True.
Proof. exact (TRANS (@lem2642061) (@lem2642065)). Qed.
Lemma lem2642067 : True = term109.
Proof. exact (SYM (@lem2642066)). Qed.
Lemma lem2642068 : term109.
Proof. exact (EQ_MP (@lem2642067) (@lem0)). Qed.
Lemma lem2642069 : term261 = term264.
Proof. exact (@lem2642058 (@lem2642068)). Qed.
Lemma lem2642071 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642072 : term123 = term124.
Proof. exact (@lem2642071 term32 term32). Qed.
Lemma lem2642073 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642074 : term120 = term32.
Proof. exact (EQ_MP (@lem2642073) (@lem940073)). Qed.
Lemma lem2642075 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642076 : term118 = term31.
Proof. exact (MK_COMB (@lem2642075) (@lem2642074)). Qed.
Lemma lem2642077 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642078 : term124 = term97.
Proof. exact (MK_COMB (@lem2642077) (@lem2642076)). Qed.
Lemma lem2642079 : term123 = term97.
Proof. exact (TRANS (@lem2642072) (@lem2642078)). Qed.
Lemma lem2642081 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642082 : term131 = term38.
Proof. exact (@lem2642081 term32). Qed.
Lemma lem2642083 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642084 : term265 = term259.
Proof. exact (MK_COMB (@lem2642083) (@lem2642082)). Qed.
Lemma lem2642085 : term264 = term258.
Proof. exact (MK_COMB (@lem2642084) (@lem2642079)). Qed.
Lemma lem2642087 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2642088 : term258 = term268.
Proof. exact (@lem2642087 (NUMERAL 0) term32). Qed.
Lemma lem2642089 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642090 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2642091 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642090 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2642089)). Qed.
Lemma lem2642092 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2642091) (@lem2642089)). Qed.
Lemma lem2642093 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2642094 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2642095 : term269 = (and True).
Proof. exact (MK_COMB (@lem2642094) (@lem2642093)). Qed.
Lemma lem2642096 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2642095) (@lem2642092)). Qed.
Lemma lem2642098 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2642099 : term268 = False.
Proof. exact (TRANS (@lem2642096) (@lem2642098)). Qed.
Lemma lem2642100 : term258 = False.
Proof. exact (TRANS (@lem2642088) (@lem2642099)). Qed.
Lemma lem2642101 : term264 = False.
Proof. exact (TRANS (@lem2642085) (@lem2642100)). Qed.
Lemma lem2642102 : term261 = False.
Proof. exact (TRANS (@lem2642069) (@lem2642101)). Qed.
Lemma lem2642103 : term258 = False.
Proof. exact (TRANS (@lem2642046) (@lem2642102)). Qed.
Lemma lem2642104 : term257 = False.
Proof. exact (TRANS (@lem2642037) (@lem2642103)). Qed.
Lemma lem2642105 (m : int) (n : int) (h1 : term964 m n) : False.
Proof. exact (EQ_MP (@lem2642104) (@lem2642034 m n h1)). Qed.
Lemma lem2642106 (m : int) (n : int) (h1 : term966 m n) : term966 m n.
Proof. exact (h1). Qed.
Lemma lem2642107 (m : int) (n : int) (h1 : term966 m n) : term965 m n.
Proof. exact (proj2 (@lem2642106 m n h1)). Qed.
Lemma lem2642109 (m : int) (n : int) (h1 : term966 m n) : term751 m n.
Proof. exact (proj2 (@lem2642107 m n h1)). Qed.
Lemma lem2642110 (m : int) (n : int) (h1 : term966 m n) : term599 m n.
Proof. exact (proj1 (@lem2642107 m n h1)). Qed.
Lemma lem2642112 (m : int) (n : int) (h1 : term966 m n) : term556 n m.
Proof. exact (proj1 (@lem2642110 m n h1)). Qed.
Lemma lem2642113 (m : int) (n : int) (h1 : term966 m n) : term158 m.
Proof. exact (proj2 (@lem2642112 m n h1)). Qed.
Lemma lem2642116 (m : int) (n : int) (h1 : term966 m n) : term457 m.
Proof. exact (proj1 (@lem2642109 m n h1)). Qed.
Lemma lem2642118 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2642119 : term229 = term109.
Proof. exact (@lem2642118 term38 term31). Qed.
Lemma lem2642121 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642122 : term31 = term99.
Proof. exact (@lem2642121 term32). Qed.
Lemma lem2642124 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642125 : term38 = term134.
Proof. exact (@lem2642124 (NUMERAL 0)). Qed.
Lemma lem2642126 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642127 : term230 = term231.
Proof. exact (MK_COMB (@lem2642126) (@lem2642125)). Qed.
Lemma lem2642128 : term109 = term232.
Proof. exact (MK_COMB (@lem2642127) (@lem2642122)). Qed.
Lemma lem2642129 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2642131 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642132 : term109 = term110.
Proof. exact (@lem2642131 (NUMERAL 0) term32). Qed.
Lemma lem2642133 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642134 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642135 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642134 h1) (fun h1 : term110 = True => @lem2642133)). Qed.
Lemma lem2642136 : term110 = True.
Proof. exact (EQ_MP (@lem2642135) (@lem2642133)). Qed.
Lemma lem2642137 : term109 = True.
Proof. exact (TRANS (@lem2642132) (@lem2642136)). Qed.
Lemma lem2642138 : True = term109.
Proof. exact (SYM (@lem2642137)). Qed.
Lemma lem2642139 : term109.
Proof. exact (EQ_MP (@lem2642138) (@lem0)). Qed.
Lemma lem2642140 : term234.
Proof. exact (@lem2642129 (@lem2642139)). Qed.
Lemma lem2642142 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642143 : term109 = term110.
Proof. exact (@lem2642142 (NUMERAL 0) term32). Qed.
Lemma lem2642144 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642145 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642146 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642145 h1) (fun h1 : term110 = True => @lem2642144)). Qed.
Lemma lem2642147 : term110 = True.
Proof. exact (EQ_MP (@lem2642146) (@lem2642144)). Qed.
Lemma lem2642148 : term109 = True.
Proof. exact (TRANS (@lem2642143) (@lem2642147)). Qed.
Lemma lem2642149 : True = term109.
Proof. exact (SYM (@lem2642148)). Qed.
Lemma lem2642150 : term109.
Proof. exact (EQ_MP (@lem2642149) (@lem0)). Qed.
Lemma lem2642151 : term232 = term235.
Proof. exact (@lem2642140 (@lem2642150)). Qed.
Lemma lem2642153 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642154 : term117 = term118.
Proof. exact (@lem2642153 term32 term32). Qed.
Lemma lem2642155 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642156 : term120 = term32.
Proof. exact (EQ_MP (@lem2642155) (@lem940073)). Qed.
Lemma lem2642157 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642158 : term118 = term31.
Proof. exact (MK_COMB (@lem2642157) (@lem2642156)). Qed.
Lemma lem2642159 : term117 = term31.
Proof. exact (TRANS (@lem2642154) (@lem2642158)). Qed.
Lemma lem2642161 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642162 : term131 = term38.
Proof. exact (@lem2642161 term32). Qed.
Lemma lem2642163 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642164 : term236 = term230.
Proof. exact (MK_COMB (@lem2642163) (@lem2642162)). Qed.
Lemma lem2642165 : term235 = term109.
Proof. exact (MK_COMB (@lem2642164) (@lem2642159)). Qed.
Lemma lem2642167 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642168 : term109 = term110.
Proof. exact (@lem2642167 (NUMERAL 0) term32). Qed.
Lemma lem2642169 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642170 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642171 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642170 h1) (fun h1 : term110 = True => @lem2642169)). Qed.
Lemma lem2642172 : term110 = True.
Proof. exact (EQ_MP (@lem2642171) (@lem2642169)). Qed.
Lemma lem2642173 : term109 = True.
Proof. exact (TRANS (@lem2642168) (@lem2642172)). Qed.
Lemma lem2642174 : term235 = True.
Proof. exact (TRANS (@lem2642165) (@lem2642173)). Qed.
Lemma lem2642175 : term232 = True.
Proof. exact (TRANS (@lem2642151) (@lem2642174)). Qed.
Lemma lem2642176 : term109 = True.
Proof. exact (TRANS (@lem2642128) (@lem2642175)). Qed.
Lemma lem2642177 : term229 = True.
Proof. exact (TRANS (@lem2642119) (@lem2642176)). Qed.
Lemma lem2642178 : True = term229.
Proof. exact (SYM (@lem2642177)). Qed.
Lemma lem2642179 : term229.
Proof. exact (EQ_MP (@lem2642178) (@lem0)). Qed.
Lemma lem2642180 (m : int) (n : int) (h1 : term966 m n) : term1129 m.
Proof. exact (conj (@lem2642179) (@lem2642116 m n h1)). Qed.
Lemma lem2642182 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2642183 (m : int) : term1130 m.
Proof. exact (@lem2642182 term31 (real_of_int m)). Qed.
Lemma lem2642184 (m : int) (n : int) (h1 : term966 m n) : term1131 m.
Proof. exact (@lem2642183 m (@lem2642180 m n h1)). Qed.
Lemma lem2642185 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2642186 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642187 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2642186) (@lem2642185 m)). Qed.
Lemma lem2642188 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642189 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2642187 m) (@lem2642188)). Qed.
Lemma lem2642190 (m : int) (n : int) (h1 : term966 m n) : term457 m.
Proof. exact (EQ_MP (@lem2642189 m) (@lem2642184 m n h1)). Qed.
Lemma lem2642192 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2642193 : term229 = term109.
Proof. exact (@lem2642192 term38 term31). Qed.
Lemma lem2642195 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642196 : term31 = term99.
Proof. exact (@lem2642195 term32). Qed.
Lemma lem2642198 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642199 : term38 = term134.
Proof. exact (@lem2642198 (NUMERAL 0)). Qed.
Lemma lem2642200 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642201 : term230 = term231.
Proof. exact (MK_COMB (@lem2642200) (@lem2642199)). Qed.
Lemma lem2642202 : term109 = term232.
Proof. exact (MK_COMB (@lem2642201) (@lem2642196)). Qed.
Lemma lem2642203 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2642205 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642206 : term109 = term110.
Proof. exact (@lem2642205 (NUMERAL 0) term32). Qed.
Lemma lem2642207 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642208 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642209 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642208 h1) (fun h1 : term110 = True => @lem2642207)). Qed.
Lemma lem2642210 : term110 = True.
Proof. exact (EQ_MP (@lem2642209) (@lem2642207)). Qed.
Lemma lem2642211 : term109 = True.
Proof. exact (TRANS (@lem2642206) (@lem2642210)). Qed.
Lemma lem2642212 : True = term109.
Proof. exact (SYM (@lem2642211)). Qed.
Lemma lem2642213 : term109.
Proof. exact (EQ_MP (@lem2642212) (@lem0)). Qed.
Lemma lem2642214 : term234.
Proof. exact (@lem2642203 (@lem2642213)). Qed.
Lemma lem2642216 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642217 : term109 = term110.
Proof. exact (@lem2642216 (NUMERAL 0) term32). Qed.
Lemma lem2642218 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642219 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642220 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642219 h1) (fun h1 : term110 = True => @lem2642218)). Qed.
Lemma lem2642221 : term110 = True.
Proof. exact (EQ_MP (@lem2642220) (@lem2642218)). Qed.
Lemma lem2642222 : term109 = True.
Proof. exact (TRANS (@lem2642217) (@lem2642221)). Qed.
Lemma lem2642223 : True = term109.
Proof. exact (SYM (@lem2642222)). Qed.
Lemma lem2642224 : term109.
Proof. exact (EQ_MP (@lem2642223) (@lem0)). Qed.
Lemma lem2642225 : term232 = term235.
Proof. exact (@lem2642214 (@lem2642224)). Qed.
Lemma lem2642227 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642228 : term117 = term118.
Proof. exact (@lem2642227 term32 term32). Qed.
Lemma lem2642229 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642230 : term120 = term32.
Proof. exact (EQ_MP (@lem2642229) (@lem940073)). Qed.
Lemma lem2642231 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642232 : term118 = term31.
Proof. exact (MK_COMB (@lem2642231) (@lem2642230)). Qed.
Lemma lem2642233 : term117 = term31.
Proof. exact (TRANS (@lem2642228) (@lem2642232)). Qed.
Lemma lem2642235 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642236 : term131 = term38.
Proof. exact (@lem2642235 term32). Qed.
Lemma lem2642237 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642238 : term236 = term230.
Proof. exact (MK_COMB (@lem2642237) (@lem2642236)). Qed.
Lemma lem2642239 : term235 = term109.
Proof. exact (MK_COMB (@lem2642238) (@lem2642233)). Qed.
Lemma lem2642241 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642242 : term109 = term110.
Proof. exact (@lem2642241 (NUMERAL 0) term32). Qed.
Lemma lem2642243 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642244 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642245 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642244 h1) (fun h1 : term110 = True => @lem2642243)). Qed.
Lemma lem2642246 : term110 = True.
Proof. exact (EQ_MP (@lem2642245) (@lem2642243)). Qed.
Lemma lem2642247 : term109 = True.
Proof. exact (TRANS (@lem2642242) (@lem2642246)). Qed.
Lemma lem2642248 : term235 = True.
Proof. exact (TRANS (@lem2642239) (@lem2642247)). Qed.
Lemma lem2642249 : term232 = True.
Proof. exact (TRANS (@lem2642225) (@lem2642248)). Qed.
Lemma lem2642250 : term109 = True.
Proof. exact (TRANS (@lem2642202) (@lem2642249)). Qed.
Lemma lem2642251 : term229 = True.
Proof. exact (TRANS (@lem2642193) (@lem2642250)). Qed.
Lemma lem2642252 : True = term229.
Proof. exact (SYM (@lem2642251)). Qed.
Lemma lem2642253 : term229.
Proof. exact (EQ_MP (@lem2642252) (@lem0)). Qed.
Lemma lem2642254 (m : int) (n : int) (h1 : term966 m n) : term237 m.
Proof. exact (conj (@lem2642253) (@lem2642113 m n h1)). Qed.
Lemma lem2642256 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2642257 (m : int) : term239 m.
Proof. exact (@lem2642256 term31 (term154 m)). Qed.
Lemma lem2642258 (m : int) (n : int) (h1 : term966 m n) : term240 m.
Proof. exact (@lem2642257 m (@lem2642254 m n h1)). Qed.
Lemma lem2642259 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2642260 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642261 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2642260) (@lem2642259 m)). Qed.
Lemma lem2642262 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642263 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2642261 m) (@lem2642262)). Qed.
Lemma lem2642264 (m : int) (n : int) (h1 : term966 m n) : term158 m.
Proof. exact (EQ_MP (@lem2642263 m) (@lem2642258 m n h1)). Qed.
Lemma lem2642265 (m : int) (n : int) (h1 : term966 m n) : term1133 m.
Proof. exact (conj (@lem2642264 m n h1) (@lem2642190 m n h1)). Qed.
Lemma lem2642267 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2642268 (m : int) : term1135 m.
Proof. exact (@lem2642267 (term154 m) (real_of_int m)). Qed.
Lemma lem2642269 (m : int) (n : int) (h1 : term966 m n) : term1136 m.
Proof. exact (@lem2642268 m (@lem2642265 m n h1)). Qed.
Lemma lem2642270 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2642271 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2642273 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642274 : term31 = term99.
Proof. exact (@lem2642273 term32). Qed.
Lemma lem2642276 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642277 : term97 = term102.
Proof. exact (@lem2642276 term32). Qed.
Lemma lem2642278 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642279 : term103 = term104.
Proof. exact (MK_COMB (@lem2642278) (@lem2642277)). Qed.
Lemma lem2642280 : term105 = term106.
Proof. exact (MK_COMB (@lem2642279) (@lem2642274)). Qed.
Lemma lem2642281 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2642283 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642284 : term109 = term110.
Proof. exact (@lem2642283 (NUMERAL 0) term32). Qed.
Lemma lem2642285 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642286 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642287 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642286 h1) (fun h1 : term110 = True => @lem2642285)). Qed.
Lemma lem2642288 : term110 = True.
Proof. exact (EQ_MP (@lem2642287) (@lem2642285)). Qed.
Lemma lem2642289 : term109 = True.
Proof. exact (TRANS (@lem2642284) (@lem2642288)). Qed.
Lemma lem2642290 : True = term109.
Proof. exact (SYM (@lem2642289)). Qed.
Lemma lem2642291 : term109.
Proof. exact (EQ_MP (@lem2642290) (@lem0)). Qed.
Lemma lem2642292 : term112.
Proof. exact (@lem2642281 (@lem2642291)). Qed.
Lemma lem2642294 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642295 : term109 = term110.
Proof. exact (@lem2642294 (NUMERAL 0) term32). Qed.
Lemma lem2642296 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642297 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642298 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642297 h1) (fun h1 : term110 = True => @lem2642296)). Qed.
Lemma lem2642299 : term110 = True.
Proof. exact (EQ_MP (@lem2642298) (@lem2642296)). Qed.
Lemma lem2642300 : term109 = True.
Proof. exact (TRANS (@lem2642295) (@lem2642299)). Qed.
Lemma lem2642301 : True = term109.
Proof. exact (SYM (@lem2642300)). Qed.
Lemma lem2642302 : term109.
Proof. exact (EQ_MP (@lem2642301) (@lem0)). Qed.
Lemma lem2642303 : term113.
Proof. exact (@lem2642292 (@lem2642302)). Qed.
Lemma lem2642305 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642306 : term109 = term110.
Proof. exact (@lem2642305 (NUMERAL 0) term32). Qed.
Lemma lem2642307 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642308 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642309 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642308 h1) (fun h1 : term110 = True => @lem2642307)). Qed.
Lemma lem2642310 : term110 = True.
Proof. exact (EQ_MP (@lem2642309) (@lem2642307)). Qed.
Lemma lem2642311 : term109 = True.
Proof. exact (TRANS (@lem2642306) (@lem2642310)). Qed.
Lemma lem2642312 : True = term109.
Proof. exact (SYM (@lem2642311)). Qed.
Lemma lem2642313 : term109.
Proof. exact (EQ_MP (@lem2642312) (@lem0)). Qed.
Lemma lem2642314 : term114.
Proof. exact (@lem2642303 (@lem2642313)). Qed.
Lemma lem2642316 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642317 : term117 = term118.
Proof. exact (@lem2642316 term32 term32). Qed.
Lemma lem2642318 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642319 : term120 = term32.
Proof. exact (EQ_MP (@lem2642318) (@lem940073)). Qed.
Lemma lem2642320 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642321 : term118 = term31.
Proof. exact (MK_COMB (@lem2642320) (@lem2642319)). Qed.
Lemma lem2642322 : term117 = term31.
Proof. exact (TRANS (@lem2642317) (@lem2642321)). Qed.
Lemma lem2642324 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642325 : term123 = term124.
Proof. exact (@lem2642324 term32 term32). Qed.
Lemma lem2642326 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642327 : term120 = term32.
Proof. exact (EQ_MP (@lem2642326) (@lem940073)). Qed.
Lemma lem2642328 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642329 : term118 = term31.
Proof. exact (MK_COMB (@lem2642328) (@lem2642327)). Qed.
Lemma lem2642330 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642331 : term124 = term97.
Proof. exact (MK_COMB (@lem2642330) (@lem2642329)). Qed.
Lemma lem2642332 : term123 = term97.
Proof. exact (TRANS (@lem2642325) (@lem2642331)). Qed.
Lemma lem2642333 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642334 : term125 = term103.
Proof. exact (MK_COMB (@lem2642333) (@lem2642332)). Qed.
Lemma lem2642335 : term126 = term105.
Proof. exact (MK_COMB (@lem2642334) (@lem2642322)). Qed.
Lemma lem2642337 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2642338 : term105 = term38.
Proof. exact (@lem2642337 term32). Qed.
Lemma lem2642339 : term126 = term38.
Proof. exact (TRANS (@lem2642335) (@lem2642338)). Qed.
Lemma lem2642340 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642341 : term128 = term129.
Proof. exact (MK_COMB (@lem2642340) (@lem2642339)). Qed.
Lemma lem2642342 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2642343 : term130 = term131.
Proof. exact (MK_COMB (@lem2642341) (@lem2642342)). Qed.
Lemma lem2642345 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642346 : term131 = term38.
Proof. exact (@lem2642345 term32). Qed.
Lemma lem2642347 : term130 = term38.
Proof. exact (TRANS (@lem2642343) (@lem2642346)). Qed.
Lemma lem2642349 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642350 : term117 = term118.
Proof. exact (@lem2642349 term32 term32). Qed.
Lemma lem2642351 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642352 : term120 = term32.
Proof. exact (EQ_MP (@lem2642351) (@lem940073)). Qed.
Lemma lem2642353 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642354 : term118 = term31.
Proof. exact (MK_COMB (@lem2642353) (@lem2642352)). Qed.
Lemma lem2642355 : term117 = term31.
Proof. exact (TRANS (@lem2642350) (@lem2642354)). Qed.
Lemma lem2642356 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2642357 : term133 = term131.
Proof. exact (MK_COMB (@lem2642356) (@lem2642355)). Qed.
Lemma lem2642359 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642360 : term131 = term38.
Proof. exact (@lem2642359 term32). Qed.
Lemma lem2642361 : term133 = term38.
Proof. exact (TRANS (@lem2642357) (@lem2642360)). Qed.
Lemma lem2642362 : term38 = term133.
Proof. exact (SYM (@lem2642361)). Qed.
Lemma lem2642363 : term130 = term133.
Proof. exact (TRANS (@lem2642347) (@lem2642362)). Qed.
Lemma lem2642364 : term106 = term134.
Proof. exact (@lem2642314 (@lem2642363)). Qed.
Lemma lem2642365 : term105 = term134.
Proof. exact (TRANS (@lem2642280) (@lem2642364)). Qed.
Lemma lem2642367 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2642368 : term134 = term38.
Proof. exact (@lem2642367 term38). Qed.
Lemma lem2642369 : term105 = term38.
Proof. exact (TRANS (@lem2642365) (@lem2642368)). Qed.
Lemma lem2642370 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642371 : term136 = term129.
Proof. exact (MK_COMB (@lem2642370) (@lem2642369)). Qed.
Lemma lem2642372 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2642373 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2642371) (@lem2642372 m)). Qed.
Lemma lem2642374 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2642271 m) (@lem2642373 m)). Qed.
Lemma lem2642375 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2642376 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2642374 m) (@lem2642375 m)). Qed.
Lemma lem2642377 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642378 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2642377) (@lem2642376 m)). Qed.
Lemma lem2642379 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2642380 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2642378 m) (@lem2642379)). Qed.
Lemma lem2642381 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2642270 m) (@lem2642380 m)). Qed.
Lemma lem2642382 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2642383 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2642381 m) (@lem2642382)). Qed.
Lemma lem2642384 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642385 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2642384) (@lem2642383 m)). Qed.
Lemma lem2642386 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642387 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2642385 m) (@lem2642386)). Qed.
Lemma lem2642388 (m : int) (n : int) (h1 : term966 m n) : term257.
Proof. exact (EQ_MP (@lem2642387 m) (@lem2642269 m n h1)). Qed.
Lemma lem2642390 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2642391 : term257 = term258.
Proof. exact (@lem2642390 term38 term97). Qed.
Lemma lem2642393 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642394 : term97 = term102.
Proof. exact (@lem2642393 term32). Qed.
Lemma lem2642396 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642397 : term38 = term134.
Proof. exact (@lem2642396 (NUMERAL 0)). Qed.
Lemma lem2642398 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642399 : term259 = term260.
Proof. exact (MK_COMB (@lem2642398) (@lem2642397)). Qed.
Lemma lem2642400 : term258 = term261.
Proof. exact (MK_COMB (@lem2642399) (@lem2642394)). Qed.
Lemma lem2642401 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2642403 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642404 : term109 = term110.
Proof. exact (@lem2642403 (NUMERAL 0) term32). Qed.
Lemma lem2642405 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642406 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642407 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642406 h1) (fun h1 : term110 = True => @lem2642405)). Qed.
Lemma lem2642408 : term110 = True.
Proof. exact (EQ_MP (@lem2642407) (@lem2642405)). Qed.
Lemma lem2642409 : term109 = True.
Proof. exact (TRANS (@lem2642404) (@lem2642408)). Qed.
Lemma lem2642410 : True = term109.
Proof. exact (SYM (@lem2642409)). Qed.
Lemma lem2642411 : term109.
Proof. exact (EQ_MP (@lem2642410) (@lem0)). Qed.
Lemma lem2642412 : term263.
Proof. exact (@lem2642401 (@lem2642411)). Qed.
Lemma lem2642414 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642415 : term109 = term110.
Proof. exact (@lem2642414 (NUMERAL 0) term32). Qed.
Lemma lem2642416 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642417 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642418 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642417 h1) (fun h1 : term110 = True => @lem2642416)). Qed.
Lemma lem2642419 : term110 = True.
Proof. exact (EQ_MP (@lem2642418) (@lem2642416)). Qed.
Lemma lem2642420 : term109 = True.
Proof. exact (TRANS (@lem2642415) (@lem2642419)). Qed.
Lemma lem2642421 : True = term109.
Proof. exact (SYM (@lem2642420)). Qed.
Lemma lem2642422 : term109.
Proof. exact (EQ_MP (@lem2642421) (@lem0)). Qed.
Lemma lem2642423 : term261 = term264.
Proof. exact (@lem2642412 (@lem2642422)). Qed.
Lemma lem2642425 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642426 : term123 = term124.
Proof. exact (@lem2642425 term32 term32). Qed.
Lemma lem2642427 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642428 : term120 = term32.
Proof. exact (EQ_MP (@lem2642427) (@lem940073)). Qed.
Lemma lem2642429 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642430 : term118 = term31.
Proof. exact (MK_COMB (@lem2642429) (@lem2642428)). Qed.
Lemma lem2642431 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642432 : term124 = term97.
Proof. exact (MK_COMB (@lem2642431) (@lem2642430)). Qed.
Lemma lem2642433 : term123 = term97.
Proof. exact (TRANS (@lem2642426) (@lem2642432)). Qed.
Lemma lem2642435 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642436 : term131 = term38.
Proof. exact (@lem2642435 term32). Qed.
Lemma lem2642437 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642438 : term265 = term259.
Proof. exact (MK_COMB (@lem2642437) (@lem2642436)). Qed.
Lemma lem2642439 : term264 = term258.
Proof. exact (MK_COMB (@lem2642438) (@lem2642433)). Qed.
Lemma lem2642441 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2642442 : term258 = term268.
Proof. exact (@lem2642441 (NUMERAL 0) term32). Qed.
Lemma lem2642443 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642444 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2642445 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642444 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2642443)). Qed.
Lemma lem2642446 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2642445) (@lem2642443)). Qed.
Lemma lem2642447 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2642448 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2642449 : term269 = (and True).
Proof. exact (MK_COMB (@lem2642448) (@lem2642447)). Qed.
Lemma lem2642450 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2642449) (@lem2642446)). Qed.
Lemma lem2642452 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2642453 : term268 = False.
Proof. exact (TRANS (@lem2642450) (@lem2642452)). Qed.
Lemma lem2642454 : term258 = False.
Proof. exact (TRANS (@lem2642442) (@lem2642453)). Qed.
Lemma lem2642455 : term264 = False.
Proof. exact (TRANS (@lem2642439) (@lem2642454)). Qed.
Lemma lem2642456 : term261 = False.
Proof. exact (TRANS (@lem2642423) (@lem2642455)). Qed.
Lemma lem2642457 : term258 = False.
Proof. exact (TRANS (@lem2642400) (@lem2642456)). Qed.
Lemma lem2642458 : term257 = False.
Proof. exact (TRANS (@lem2642391) (@lem2642457)). Qed.
Lemma lem2642459 (m : int) (n : int) (h1 : term966 m n) : False.
Proof. exact (EQ_MP (@lem2642458) (@lem2642388 m n h1)). Qed.
Lemma lem2642460 (m : int) (n : int) (h1 : term968 m n) : False.
Proof. exact (or_elim (@lem2641751 m n h1) (fun h0 : term964 m n => @lem2642105 m n h0) (fun h0 : term966 m n => @lem2642459 m n h0)). Qed.
Lemma lem2642461 (m : int) (n : int) (h1 : term971 m n) : False.
Proof. exact (or_elim (@lem2641040 m n h1) (fun h0 : term944 m n => @lem2641750 m n h0) (fun h0 : term968 m n => @lem2642460 m n h0)). Qed.
Lemma lem2642462 (m : int) (n : int) (h1 : term1020 m n) : term1020 m n.
Proof. exact (h1). Qed.
Lemma lem2642463 (m : int) (n : int) (h1 : term994 m n) : term994 m n.
Proof. exact (h1). Qed.
Lemma lem2642464 (m : int) (n : int) (h1 : term990 m n) : term990 m n.
Proof. exact (h1). Qed.
Lemma lem2642465 (m : int) (n : int) (h1 : term990 m n) : term989 m n.
Proof. exact (proj2 (@lem2642464 m n h1)). Qed.
Lemma lem2642467 (m : int) (n : int) (h1 : term990 m n) : term716 m n.
Proof. exact (proj2 (@lem2642465 m n h1)). Qed.
Lemma lem2642468 (m : int) (n : int) (h1 : term990 m n) : term889 m n.
Proof. exact (proj1 (@lem2642465 m n h1)). Qed.
Lemma lem2642470 (m : int) (n : int) (h1 : term990 m n) : term808 m n.
Proof. exact (proj1 (@lem2642468 m n h1)). Qed.
Lemma lem2642471 (m : int) (n : int) (h1 : term990 m n) : term807 m n.
Proof. exact (proj2 (@lem2642470 m n h1)). Qed.
Lemma lem2642474 (m : int) (n : int) (h1 : term990 m n) : term829 m n.
Proof. exact (proj1 (@lem2642471 m n h1)). Qed.
Lemma lem2642475 (m : int) (n : int) (h1 : term990 m n) : term714 m n.
Proof. exact (proj2 (@lem2642467 m n h1)). Qed.
Lemma lem2642478 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2642479 : term229 = term109.
Proof. exact (@lem2642478 term38 term31). Qed.
Lemma lem2642481 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642482 : term31 = term99.
Proof. exact (@lem2642481 term32). Qed.
Lemma lem2642484 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642485 : term38 = term134.
Proof. exact (@lem2642484 (NUMERAL 0)). Qed.
Lemma lem2642486 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642487 : term230 = term231.
Proof. exact (MK_COMB (@lem2642486) (@lem2642485)). Qed.
Lemma lem2642488 : term109 = term232.
Proof. exact (MK_COMB (@lem2642487) (@lem2642482)). Qed.
Lemma lem2642489 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2642491 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642492 : term109 = term110.
Proof. exact (@lem2642491 (NUMERAL 0) term32). Qed.
Lemma lem2642493 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642494 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642495 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642494 h1) (fun h1 : term110 = True => @lem2642493)). Qed.
Lemma lem2642496 : term110 = True.
Proof. exact (EQ_MP (@lem2642495) (@lem2642493)). Qed.
Lemma lem2642497 : term109 = True.
Proof. exact (TRANS (@lem2642492) (@lem2642496)). Qed.
Lemma lem2642498 : True = term109.
Proof. exact (SYM (@lem2642497)). Qed.
Lemma lem2642499 : term109.
Proof. exact (EQ_MP (@lem2642498) (@lem0)). Qed.
Lemma lem2642500 : term234.
Proof. exact (@lem2642489 (@lem2642499)). Qed.
Lemma lem2642502 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642503 : term109 = term110.
Proof. exact (@lem2642502 (NUMERAL 0) term32). Qed.
Lemma lem2642504 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642505 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642506 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642505 h1) (fun h1 : term110 = True => @lem2642504)). Qed.
Lemma lem2642507 : term110 = True.
Proof. exact (EQ_MP (@lem2642506) (@lem2642504)). Qed.
Lemma lem2642508 : term109 = True.
Proof. exact (TRANS (@lem2642503) (@lem2642507)). Qed.
Lemma lem2642509 : True = term109.
Proof. exact (SYM (@lem2642508)). Qed.
Lemma lem2642510 : term109.
Proof. exact (EQ_MP (@lem2642509) (@lem0)). Qed.
Lemma lem2642511 : term232 = term235.
Proof. exact (@lem2642500 (@lem2642510)). Qed.
Lemma lem2642513 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642514 : term117 = term118.
Proof. exact (@lem2642513 term32 term32). Qed.
Lemma lem2642515 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642516 : term120 = term32.
Proof. exact (EQ_MP (@lem2642515) (@lem940073)). Qed.
Lemma lem2642517 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642518 : term118 = term31.
Proof. exact (MK_COMB (@lem2642517) (@lem2642516)). Qed.
Lemma lem2642519 : term117 = term31.
Proof. exact (TRANS (@lem2642514) (@lem2642518)). Qed.
Lemma lem2642521 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642522 : term131 = term38.
Proof. exact (@lem2642521 term32). Qed.
Lemma lem2642523 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642524 : term236 = term230.
Proof. exact (MK_COMB (@lem2642523) (@lem2642522)). Qed.
Lemma lem2642525 : term235 = term109.
Proof. exact (MK_COMB (@lem2642524) (@lem2642519)). Qed.
Lemma lem2642527 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642528 : term109 = term110.
Proof. exact (@lem2642527 (NUMERAL 0) term32). Qed.
Lemma lem2642529 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642530 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642531 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642530 h1) (fun h1 : term110 = True => @lem2642529)). Qed.
Lemma lem2642532 : term110 = True.
Proof. exact (EQ_MP (@lem2642531) (@lem2642529)). Qed.
Lemma lem2642533 : term109 = True.
Proof. exact (TRANS (@lem2642528) (@lem2642532)). Qed.
Lemma lem2642534 : term235 = True.
Proof. exact (TRANS (@lem2642525) (@lem2642533)). Qed.
Lemma lem2642535 : term232 = True.
Proof. exact (TRANS (@lem2642511) (@lem2642534)). Qed.
Lemma lem2642536 : term109 = True.
Proof. exact (TRANS (@lem2642488) (@lem2642535)). Qed.
Lemma lem2642537 : term229 = True.
Proof. exact (TRANS (@lem2642479) (@lem2642536)). Qed.
Lemma lem2642538 : True = term229.
Proof. exact (SYM (@lem2642537)). Qed.
Lemma lem2642539 : term229.
Proof. exact (EQ_MP (@lem2642538) (@lem0)). Qed.
Lemma lem2642540 (m : int) (n : int) (h1 : term990 m n) : term1157 m n.
Proof. exact (conj (@lem2642539) (@lem2642474 m n h1)). Qed.
Lemma lem2642542 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2642543 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2642542 term31 (term88 m n)). Qed.
Lemma lem2642544 (m : int) (n : int) (h1 : term990 m n) : term1159 m n.
Proof. exact (@lem2642543 m n (@lem2642540 m n h1)). Qed.
Lemma lem2642545 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2642546 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642547 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2642546) (@lem2642545 m n)). Qed.
Lemma lem2642548 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642549 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2642547 m n) (@lem2642548)). Qed.
Lemma lem2642550 (m : int) (n : int) (h1 : term990 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2642549 m n) (@lem2642544 m n h1)). Qed.
Lemma lem2642552 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2642553 : term229 = term109.
Proof. exact (@lem2642552 term38 term31). Qed.
Lemma lem2642555 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642556 : term31 = term99.
Proof. exact (@lem2642555 term32). Qed.
Lemma lem2642558 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642559 : term38 = term134.
Proof. exact (@lem2642558 (NUMERAL 0)). Qed.
Lemma lem2642560 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642561 : term230 = term231.
Proof. exact (MK_COMB (@lem2642560) (@lem2642559)). Qed.
Lemma lem2642562 : term109 = term232.
Proof. exact (MK_COMB (@lem2642561) (@lem2642556)). Qed.
Lemma lem2642563 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2642565 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642566 : term109 = term110.
Proof. exact (@lem2642565 (NUMERAL 0) term32). Qed.
Lemma lem2642567 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642568 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642569 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642568 h1) (fun h1 : term110 = True => @lem2642567)). Qed.
Lemma lem2642570 : term110 = True.
Proof. exact (EQ_MP (@lem2642569) (@lem2642567)). Qed.
Lemma lem2642571 : term109 = True.
Proof. exact (TRANS (@lem2642566) (@lem2642570)). Qed.
Lemma lem2642572 : True = term109.
Proof. exact (SYM (@lem2642571)). Qed.
Lemma lem2642573 : term109.
Proof. exact (EQ_MP (@lem2642572) (@lem0)). Qed.
Lemma lem2642574 : term234.
Proof. exact (@lem2642563 (@lem2642573)). Qed.
Lemma lem2642576 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642577 : term109 = term110.
Proof. exact (@lem2642576 (NUMERAL 0) term32). Qed.
Lemma lem2642578 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642579 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642580 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642579 h1) (fun h1 : term110 = True => @lem2642578)). Qed.
Lemma lem2642581 : term110 = True.
Proof. exact (EQ_MP (@lem2642580) (@lem2642578)). Qed.
Lemma lem2642582 : term109 = True.
Proof. exact (TRANS (@lem2642577) (@lem2642581)). Qed.
Lemma lem2642583 : True = term109.
Proof. exact (SYM (@lem2642582)). Qed.
Lemma lem2642584 : term109.
Proof. exact (EQ_MP (@lem2642583) (@lem0)). Qed.
Lemma lem2642585 : term232 = term235.
Proof. exact (@lem2642574 (@lem2642584)). Qed.
Lemma lem2642587 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642588 : term117 = term118.
Proof. exact (@lem2642587 term32 term32). Qed.
Lemma lem2642589 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642590 : term120 = term32.
Proof. exact (EQ_MP (@lem2642589) (@lem940073)). Qed.
Lemma lem2642591 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642592 : term118 = term31.
Proof. exact (MK_COMB (@lem2642591) (@lem2642590)). Qed.
Lemma lem2642593 : term117 = term31.
Proof. exact (TRANS (@lem2642588) (@lem2642592)). Qed.
Lemma lem2642595 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642596 : term131 = term38.
Proof. exact (@lem2642595 term32). Qed.
Lemma lem2642597 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642598 : term236 = term230.
Proof. exact (MK_COMB (@lem2642597) (@lem2642596)). Qed.
Lemma lem2642599 : term235 = term109.
Proof. exact (MK_COMB (@lem2642598) (@lem2642593)). Qed.
Lemma lem2642601 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642602 : term109 = term110.
Proof. exact (@lem2642601 (NUMERAL 0) term32). Qed.
Lemma lem2642603 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642604 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642605 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642604 h1) (fun h1 : term110 = True => @lem2642603)). Qed.
Lemma lem2642606 : term110 = True.
Proof. exact (EQ_MP (@lem2642605) (@lem2642603)). Qed.
Lemma lem2642607 : term109 = True.
Proof. exact (TRANS (@lem2642602) (@lem2642606)). Qed.
Lemma lem2642608 : term235 = True.
Proof. exact (TRANS (@lem2642599) (@lem2642607)). Qed.
Lemma lem2642609 : term232 = True.
Proof. exact (TRANS (@lem2642585) (@lem2642608)). Qed.
Lemma lem2642610 : term109 = True.
Proof. exact (TRANS (@lem2642562) (@lem2642609)). Qed.
Lemma lem2642611 : term229 = True.
Proof. exact (TRANS (@lem2642553) (@lem2642610)). Qed.
Lemma lem2642612 : True = term229.
Proof. exact (SYM (@lem2642611)). Qed.
Lemma lem2642613 : term229.
Proof. exact (EQ_MP (@lem2642612) (@lem0)). Qed.
Lemma lem2642614 (m : int) (n : int) (h1 : term990 m n) : term1162 m n.
Proof. exact (conj (@lem2642613) (@lem2642475 m n h1)). Qed.
Lemma lem2642616 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2642617 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2642616 term31 (term196 m n)). Qed.
Lemma lem2642618 (m : int) (n : int) (h1 : term990 m n) : term1164 m n.
Proof. exact (@lem2642617 m n (@lem2642614 m n h1)). Qed.
Lemma lem2642619 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2642620 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642621 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2642620) (@lem2642619 m n)). Qed.
Lemma lem2642622 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642623 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2642621 m n) (@lem2642622)). Qed.
Lemma lem2642624 (m : int) (n : int) (h1 : term990 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2642623 m n) (@lem2642618 m n h1)). Qed.
Lemma lem2642625 (m : int) (n : int) (h1 : term990 m n) : term1167 m n.
Proof. exact (conj (@lem2642624 m n h1) (@lem2642550 m n h1)). Qed.
Lemma lem2642627 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2642628 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2642627 (term196 m n) (term88 m n)). Qed.
Lemma lem2642629 (m : int) (n : int) (h1 : term990 m n) : term1169 m n.
Proof. exact (@lem2642628 m n (@lem2642625 m n h1)). Qed.
Lemma lem2642630 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2642631 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2642633 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642634 : term31 = term99.
Proof. exact (@lem2642633 term32). Qed.
Lemma lem2642636 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642637 : term97 = term102.
Proof. exact (@lem2642636 term32). Qed.
Lemma lem2642638 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642639 : term103 = term104.
Proof. exact (MK_COMB (@lem2642638) (@lem2642637)). Qed.
Lemma lem2642640 : term105 = term106.
Proof. exact (MK_COMB (@lem2642639) (@lem2642634)). Qed.
Lemma lem2642641 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2642643 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642644 : term109 = term110.
Proof. exact (@lem2642643 (NUMERAL 0) term32). Qed.
Lemma lem2642645 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642646 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642647 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642646 h1) (fun h1 : term110 = True => @lem2642645)). Qed.
Lemma lem2642648 : term110 = True.
Proof. exact (EQ_MP (@lem2642647) (@lem2642645)). Qed.
Lemma lem2642649 : term109 = True.
Proof. exact (TRANS (@lem2642644) (@lem2642648)). Qed.
Lemma lem2642650 : True = term109.
Proof. exact (SYM (@lem2642649)). Qed.
Lemma lem2642651 : term109.
Proof. exact (EQ_MP (@lem2642650) (@lem0)). Qed.
Lemma lem2642652 : term112.
Proof. exact (@lem2642641 (@lem2642651)). Qed.
Lemma lem2642654 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642655 : term109 = term110.
Proof. exact (@lem2642654 (NUMERAL 0) term32). Qed.
Lemma lem2642656 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642657 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642658 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642657 h1) (fun h1 : term110 = True => @lem2642656)). Qed.
Lemma lem2642659 : term110 = True.
Proof. exact (EQ_MP (@lem2642658) (@lem2642656)). Qed.
Lemma lem2642660 : term109 = True.
Proof. exact (TRANS (@lem2642655) (@lem2642659)). Qed.
Lemma lem2642661 : True = term109.
Proof. exact (SYM (@lem2642660)). Qed.
Lemma lem2642662 : term109.
Proof. exact (EQ_MP (@lem2642661) (@lem0)). Qed.
Lemma lem2642663 : term113.
Proof. exact (@lem2642652 (@lem2642662)). Qed.
Lemma lem2642665 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642666 : term109 = term110.
Proof. exact (@lem2642665 (NUMERAL 0) term32). Qed.
Lemma lem2642667 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642668 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642669 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642668 h1) (fun h1 : term110 = True => @lem2642667)). Qed.
Lemma lem2642670 : term110 = True.
Proof. exact (EQ_MP (@lem2642669) (@lem2642667)). Qed.
Lemma lem2642671 : term109 = True.
Proof. exact (TRANS (@lem2642666) (@lem2642670)). Qed.
Lemma lem2642672 : True = term109.
Proof. exact (SYM (@lem2642671)). Qed.
Lemma lem2642673 : term109.
Proof. exact (EQ_MP (@lem2642672) (@lem0)). Qed.
Lemma lem2642674 : term114.
Proof. exact (@lem2642663 (@lem2642673)). Qed.
Lemma lem2642676 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642677 : term117 = term118.
Proof. exact (@lem2642676 term32 term32). Qed.
Lemma lem2642678 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642679 : term120 = term32.
Proof. exact (EQ_MP (@lem2642678) (@lem940073)). Qed.
Lemma lem2642680 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642681 : term118 = term31.
Proof. exact (MK_COMB (@lem2642680) (@lem2642679)). Qed.
Lemma lem2642682 : term117 = term31.
Proof. exact (TRANS (@lem2642677) (@lem2642681)). Qed.
Lemma lem2642684 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642685 : term123 = term124.
Proof. exact (@lem2642684 term32 term32). Qed.
Lemma lem2642686 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642687 : term120 = term32.
Proof. exact (EQ_MP (@lem2642686) (@lem940073)). Qed.
Lemma lem2642688 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642689 : term118 = term31.
Proof. exact (MK_COMB (@lem2642688) (@lem2642687)). Qed.
Lemma lem2642690 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642691 : term124 = term97.
Proof. exact (MK_COMB (@lem2642690) (@lem2642689)). Qed.
Lemma lem2642692 : term123 = term97.
Proof. exact (TRANS (@lem2642685) (@lem2642691)). Qed.
Lemma lem2642693 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642694 : term125 = term103.
Proof. exact (MK_COMB (@lem2642693) (@lem2642692)). Qed.
Lemma lem2642695 : term126 = term105.
Proof. exact (MK_COMB (@lem2642694) (@lem2642682)). Qed.
Lemma lem2642697 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2642698 : term105 = term38.
Proof. exact (@lem2642697 term32). Qed.
Lemma lem2642699 : term126 = term38.
Proof. exact (TRANS (@lem2642695) (@lem2642698)). Qed.
Lemma lem2642700 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642701 : term128 = term129.
Proof. exact (MK_COMB (@lem2642700) (@lem2642699)). Qed.
Lemma lem2642702 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2642703 : term130 = term131.
Proof. exact (MK_COMB (@lem2642701) (@lem2642702)). Qed.
Lemma lem2642705 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642706 : term131 = term38.
Proof. exact (@lem2642705 term32). Qed.
Lemma lem2642707 : term130 = term38.
Proof. exact (TRANS (@lem2642703) (@lem2642706)). Qed.
Lemma lem2642709 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642710 : term117 = term118.
Proof. exact (@lem2642709 term32 term32). Qed.
Lemma lem2642711 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642712 : term120 = term32.
Proof. exact (EQ_MP (@lem2642711) (@lem940073)). Qed.
Lemma lem2642713 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642714 : term118 = term31.
Proof. exact (MK_COMB (@lem2642713) (@lem2642712)). Qed.
Lemma lem2642715 : term117 = term31.
Proof. exact (TRANS (@lem2642710) (@lem2642714)). Qed.
Lemma lem2642716 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2642717 : term133 = term131.
Proof. exact (MK_COMB (@lem2642716) (@lem2642715)). Qed.
Lemma lem2642719 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642720 : term131 = term38.
Proof. exact (@lem2642719 term32). Qed.
Lemma lem2642721 : term133 = term38.
Proof. exact (TRANS (@lem2642717) (@lem2642720)). Qed.
Lemma lem2642722 : term38 = term133.
Proof. exact (SYM (@lem2642721)). Qed.
Lemma lem2642723 : term130 = term133.
Proof. exact (TRANS (@lem2642707) (@lem2642722)). Qed.
Lemma lem2642724 : term106 = term134.
Proof. exact (@lem2642674 (@lem2642723)). Qed.
Lemma lem2642725 : term105 = term134.
Proof. exact (TRANS (@lem2642640) (@lem2642724)). Qed.
Lemma lem2642727 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2642728 : term134 = term38.
Proof. exact (@lem2642727 term38). Qed.
Lemma lem2642729 : term105 = term38.
Proof. exact (TRANS (@lem2642725) (@lem2642728)). Qed.
Lemma lem2642730 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642731 : term136 = term129.
Proof. exact (MK_COMB (@lem2642730) (@lem2642729)). Qed.
Lemma lem2642732 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2642733 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2642731) (@lem2642732 m)). Qed.
Lemma lem2642734 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2642631 m) (@lem2642733 m)). Qed.
Lemma lem2642735 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2642736 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2642734 m) (@lem2642735 m)). Qed.
Lemma lem2642737 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642738 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2642737) (@lem2642736 m)). Qed.
Lemma lem2642739 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2642740 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2642742 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642743 : term31 = term99.
Proof. exact (@lem2642742 term32). Qed.
Lemma lem2642745 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642746 : term97 = term102.
Proof. exact (@lem2642745 term32). Qed.
Lemma lem2642747 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642748 : term103 = term104.
Proof. exact (MK_COMB (@lem2642747) (@lem2642746)). Qed.
Lemma lem2642749 : term105 = term106.
Proof. exact (MK_COMB (@lem2642748) (@lem2642743)). Qed.
Lemma lem2642750 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2642752 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642753 : term109 = term110.
Proof. exact (@lem2642752 (NUMERAL 0) term32). Qed.
Lemma lem2642754 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642755 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642756 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642755 h1) (fun h1 : term110 = True => @lem2642754)). Qed.
Lemma lem2642757 : term110 = True.
Proof. exact (EQ_MP (@lem2642756) (@lem2642754)). Qed.
Lemma lem2642758 : term109 = True.
Proof. exact (TRANS (@lem2642753) (@lem2642757)). Qed.
Lemma lem2642759 : True = term109.
Proof. exact (SYM (@lem2642758)). Qed.
Lemma lem2642760 : term109.
Proof. exact (EQ_MP (@lem2642759) (@lem0)). Qed.
Lemma lem2642761 : term112.
Proof. exact (@lem2642750 (@lem2642760)). Qed.
Lemma lem2642763 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642764 : term109 = term110.
Proof. exact (@lem2642763 (NUMERAL 0) term32). Qed.
Lemma lem2642765 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642766 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642767 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642766 h1) (fun h1 : term110 = True => @lem2642765)). Qed.
Lemma lem2642768 : term110 = True.
Proof. exact (EQ_MP (@lem2642767) (@lem2642765)). Qed.
Lemma lem2642769 : term109 = True.
Proof. exact (TRANS (@lem2642764) (@lem2642768)). Qed.
Lemma lem2642770 : True = term109.
Proof. exact (SYM (@lem2642769)). Qed.
Lemma lem2642771 : term109.
Proof. exact (EQ_MP (@lem2642770) (@lem0)). Qed.
Lemma lem2642772 : term113.
Proof. exact (@lem2642761 (@lem2642771)). Qed.
Lemma lem2642774 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642775 : term109 = term110.
Proof. exact (@lem2642774 (NUMERAL 0) term32). Qed.
Lemma lem2642776 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642777 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642778 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642777 h1) (fun h1 : term110 = True => @lem2642776)). Qed.
Lemma lem2642779 : term110 = True.
Proof. exact (EQ_MP (@lem2642778) (@lem2642776)). Qed.
Lemma lem2642780 : term109 = True.
Proof. exact (TRANS (@lem2642775) (@lem2642779)). Qed.
Lemma lem2642781 : True = term109.
Proof. exact (SYM (@lem2642780)). Qed.
Lemma lem2642782 : term109.
Proof. exact (EQ_MP (@lem2642781) (@lem0)). Qed.
Lemma lem2642783 : term114.
Proof. exact (@lem2642772 (@lem2642782)). Qed.
Lemma lem2642785 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642786 : term117 = term118.
Proof. exact (@lem2642785 term32 term32). Qed.
Lemma lem2642787 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642788 : term120 = term32.
Proof. exact (EQ_MP (@lem2642787) (@lem940073)). Qed.
Lemma lem2642789 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642790 : term118 = term31.
Proof. exact (MK_COMB (@lem2642789) (@lem2642788)). Qed.
Lemma lem2642791 : term117 = term31.
Proof. exact (TRANS (@lem2642786) (@lem2642790)). Qed.
Lemma lem2642793 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642794 : term123 = term124.
Proof. exact (@lem2642793 term32 term32). Qed.
Lemma lem2642795 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642796 : term120 = term32.
Proof. exact (EQ_MP (@lem2642795) (@lem940073)). Qed.
Lemma lem2642797 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642798 : term118 = term31.
Proof. exact (MK_COMB (@lem2642797) (@lem2642796)). Qed.
Lemma lem2642799 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642800 : term124 = term97.
Proof. exact (MK_COMB (@lem2642799) (@lem2642798)). Qed.
Lemma lem2642801 : term123 = term97.
Proof. exact (TRANS (@lem2642794) (@lem2642800)). Qed.
Lemma lem2642802 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642803 : term125 = term103.
Proof. exact (MK_COMB (@lem2642802) (@lem2642801)). Qed.
Lemma lem2642804 : term126 = term105.
Proof. exact (MK_COMB (@lem2642803) (@lem2642791)). Qed.
Lemma lem2642806 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2642807 : term105 = term38.
Proof. exact (@lem2642806 term32). Qed.
Lemma lem2642808 : term126 = term38.
Proof. exact (TRANS (@lem2642804) (@lem2642807)). Qed.
Lemma lem2642809 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642810 : term128 = term129.
Proof. exact (MK_COMB (@lem2642809) (@lem2642808)). Qed.
Lemma lem2642811 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2642812 : term130 = term131.
Proof. exact (MK_COMB (@lem2642810) (@lem2642811)). Qed.
Lemma lem2642814 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642815 : term131 = term38.
Proof. exact (@lem2642814 term32). Qed.
Lemma lem2642816 : term130 = term38.
Proof. exact (TRANS (@lem2642812) (@lem2642815)). Qed.
Lemma lem2642818 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642819 : term117 = term118.
Proof. exact (@lem2642818 term32 term32). Qed.
Lemma lem2642820 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642821 : term120 = term32.
Proof. exact (EQ_MP (@lem2642820) (@lem940073)). Qed.
Lemma lem2642822 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642823 : term118 = term31.
Proof. exact (MK_COMB (@lem2642822) (@lem2642821)). Qed.
Lemma lem2642824 : term117 = term31.
Proof. exact (TRANS (@lem2642819) (@lem2642823)). Qed.
Lemma lem2642825 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2642826 : term133 = term131.
Proof. exact (MK_COMB (@lem2642825) (@lem2642824)). Qed.
Lemma lem2642828 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642829 : term131 = term38.
Proof. exact (@lem2642828 term32). Qed.
Lemma lem2642830 : term133 = term38.
Proof. exact (TRANS (@lem2642826) (@lem2642829)). Qed.
Lemma lem2642831 : term38 = term133.
Proof. exact (SYM (@lem2642830)). Qed.
Lemma lem2642832 : term130 = term133.
Proof. exact (TRANS (@lem2642816) (@lem2642831)). Qed.
Lemma lem2642833 : term106 = term134.
Proof. exact (@lem2642783 (@lem2642832)). Qed.
Lemma lem2642834 : term105 = term134.
Proof. exact (TRANS (@lem2642749) (@lem2642833)). Qed.
Lemma lem2642836 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2642837 : term134 = term38.
Proof. exact (@lem2642836 term38). Qed.
Lemma lem2642838 : term105 = term38.
Proof. exact (TRANS (@lem2642834) (@lem2642837)). Qed.
Lemma lem2642839 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2642840 : term136 = term129.
Proof. exact (MK_COMB (@lem2642839) (@lem2642838)). Qed.
Lemma lem2642841 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2642842 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2642840) (@lem2642841 n)). Qed.
Lemma lem2642843 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2642740 n) (@lem2642842 n)). Qed.
Lemma lem2642844 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2642845 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2642843 n) (@lem2642844 n)). Qed.
Lemma lem2642846 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2642847 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2642846) (@lem2642845 n)). Qed.
Lemma lem2642848 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2642849 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2642847 n) (@lem2642848)). Qed.
Lemma lem2642850 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2642739 n) (@lem2642849 n)). Qed.
Lemma lem2642851 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2642852 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2642850 n) (@lem2642851)). Qed.
Lemma lem2642853 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2642738 m) (@lem2642852 n)). Qed.
Lemma lem2642854 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2642630 m n) (@lem2642853 m n)). Qed.
Lemma lem2642855 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2642856 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2642854 m n) (@lem2642855)). Qed.
Lemma lem2642857 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2642858 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2642857) (@lem2642856 m n)). Qed.
Lemma lem2642859 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2642860 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2642858 m n) (@lem2642859)). Qed.
Lemma lem2642861 (m : int) (n : int) (h1 : term990 m n) : term257.
Proof. exact (EQ_MP (@lem2642860 m n) (@lem2642629 m n h1)). Qed.
Lemma lem2642863 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2642864 : term257 = term258.
Proof. exact (@lem2642863 term38 term97). Qed.
Lemma lem2642866 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2642867 : term97 = term102.
Proof. exact (@lem2642866 term32). Qed.
Lemma lem2642869 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642870 : term38 = term134.
Proof. exact (@lem2642869 (NUMERAL 0)). Qed.
Lemma lem2642871 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642872 : term259 = term260.
Proof. exact (MK_COMB (@lem2642871) (@lem2642870)). Qed.
Lemma lem2642873 : term258 = term261.
Proof. exact (MK_COMB (@lem2642872) (@lem2642867)). Qed.
Lemma lem2642874 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2642876 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642877 : term109 = term110.
Proof. exact (@lem2642876 (NUMERAL 0) term32). Qed.
Lemma lem2642878 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642879 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642880 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642879 h1) (fun h1 : term110 = True => @lem2642878)). Qed.
Lemma lem2642881 : term110 = True.
Proof. exact (EQ_MP (@lem2642880) (@lem2642878)). Qed.
Lemma lem2642882 : term109 = True.
Proof. exact (TRANS (@lem2642877) (@lem2642881)). Qed.
Lemma lem2642883 : True = term109.
Proof. exact (SYM (@lem2642882)). Qed.
Lemma lem2642884 : term109.
Proof. exact (EQ_MP (@lem2642883) (@lem0)). Qed.
Lemma lem2642885 : term263.
Proof. exact (@lem2642874 (@lem2642884)). Qed.
Lemma lem2642887 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642888 : term109 = term110.
Proof. exact (@lem2642887 (NUMERAL 0) term32). Qed.
Lemma lem2642889 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642890 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642891 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642890 h1) (fun h1 : term110 = True => @lem2642889)). Qed.
Lemma lem2642892 : term110 = True.
Proof. exact (EQ_MP (@lem2642891) (@lem2642889)). Qed.
Lemma lem2642893 : term109 = True.
Proof. exact (TRANS (@lem2642888) (@lem2642892)). Qed.
Lemma lem2642894 : True = term109.
Proof. exact (SYM (@lem2642893)). Qed.
Lemma lem2642895 : term109.
Proof. exact (EQ_MP (@lem2642894) (@lem0)). Qed.
Lemma lem2642896 : term261 = term264.
Proof. exact (@lem2642885 (@lem2642895)). Qed.
Lemma lem2642898 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2642899 : term123 = term124.
Proof. exact (@lem2642898 term32 term32). Qed.
Lemma lem2642900 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642901 : term120 = term32.
Proof. exact (EQ_MP (@lem2642900) (@lem940073)). Qed.
Lemma lem2642902 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642903 : term118 = term31.
Proof. exact (MK_COMB (@lem2642902) (@lem2642901)). Qed.
Lemma lem2642904 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2642905 : term124 = term97.
Proof. exact (MK_COMB (@lem2642904) (@lem2642903)). Qed.
Lemma lem2642906 : term123 = term97.
Proof. exact (TRANS (@lem2642899) (@lem2642905)). Qed.
Lemma lem2642908 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642909 : term131 = term38.
Proof. exact (@lem2642908 term32). Qed.
Lemma lem2642910 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2642911 : term265 = term259.
Proof. exact (MK_COMB (@lem2642910) (@lem2642909)). Qed.
Lemma lem2642912 : term264 = term258.
Proof. exact (MK_COMB (@lem2642911) (@lem2642906)). Qed.
Lemma lem2642914 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2642915 : term258 = term268.
Proof. exact (@lem2642914 (NUMERAL 0) term32). Qed.
Lemma lem2642916 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642917 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2642918 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642917 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2642916)). Qed.
Lemma lem2642919 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2642918) (@lem2642916)). Qed.
Lemma lem2642920 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2642921 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2642922 : term269 = (and True).
Proof. exact (MK_COMB (@lem2642921) (@lem2642920)). Qed.
Lemma lem2642923 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2642922) (@lem2642919)). Qed.
Lemma lem2642925 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2642926 : term268 = False.
Proof. exact (TRANS (@lem2642923) (@lem2642925)). Qed.
Lemma lem2642927 : term258 = False.
Proof. exact (TRANS (@lem2642915) (@lem2642926)). Qed.
Lemma lem2642928 : term264 = False.
Proof. exact (TRANS (@lem2642912) (@lem2642927)). Qed.
Lemma lem2642929 : term261 = False.
Proof. exact (TRANS (@lem2642896) (@lem2642928)). Qed.
Lemma lem2642930 : term258 = False.
Proof. exact (TRANS (@lem2642873) (@lem2642929)). Qed.
Lemma lem2642931 : term257 = False.
Proof. exact (TRANS (@lem2642864) (@lem2642930)). Qed.
Lemma lem2642932 (m : int) (n : int) (h1 : term990 m n) : False.
Proof. exact (EQ_MP (@lem2642931) (@lem2642861 m n h1)). Qed.
Lemma lem2642933 (m : int) (n : int) (h1 : term992 m n) : term992 m n.
Proof. exact (h1). Qed.
Lemma lem2642934 (m : int) (n : int) (h1 : term992 m n) : term991 m n.
Proof. exact (proj2 (@lem2642933 m n h1)). Qed.
Lemma lem2642936 (m : int) (n : int) (h1 : term992 m n) : term751 m n.
Proof. exact (proj2 (@lem2642934 m n h1)). Qed.
Lemma lem2642937 (m : int) (n : int) (h1 : term992 m n) : term889 m n.
Proof. exact (proj1 (@lem2642934 m n h1)). Qed.
Lemma lem2642939 (m : int) (n : int) (h1 : term992 m n) : term808 m n.
Proof. exact (proj1 (@lem2642937 m n h1)). Qed.
Lemma lem2642940 (m : int) (n : int) (h1 : term992 m n) : term807 m n.
Proof. exact (proj2 (@lem2642939 m n h1)). Qed.
Lemma lem2642942 (m : int) (n : int) (h1 : term992 m n) : term805 m n.
Proof. exact (proj2 (@lem2642940 m n h1)). Qed.
Lemma lem2642944 (m : int) (n : int) (h1 : term992 m n) : term749 m n.
Proof. exact (proj2 (@lem2642936 m n h1)). Qed.
Lemma lem2642947 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2642948 : term229 = term109.
Proof. exact (@lem2642947 term38 term31). Qed.
Lemma lem2642950 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642951 : term31 = term99.
Proof. exact (@lem2642950 term32). Qed.
Lemma lem2642953 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2642954 : term38 = term134.
Proof. exact (@lem2642953 (NUMERAL 0)). Qed.
Lemma lem2642955 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642956 : term230 = term231.
Proof. exact (MK_COMB (@lem2642955) (@lem2642954)). Qed.
Lemma lem2642957 : term109 = term232.
Proof. exact (MK_COMB (@lem2642956) (@lem2642951)). Qed.
Lemma lem2642958 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2642960 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642961 : term109 = term110.
Proof. exact (@lem2642960 (NUMERAL 0) term32). Qed.
Lemma lem2642962 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642963 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642964 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642963 h1) (fun h1 : term110 = True => @lem2642962)). Qed.
Lemma lem2642965 : term110 = True.
Proof. exact (EQ_MP (@lem2642964) (@lem2642962)). Qed.
Lemma lem2642966 : term109 = True.
Proof. exact (TRANS (@lem2642961) (@lem2642965)). Qed.
Lemma lem2642967 : True = term109.
Proof. exact (SYM (@lem2642966)). Qed.
Lemma lem2642968 : term109.
Proof. exact (EQ_MP (@lem2642967) (@lem0)). Qed.
Lemma lem2642969 : term234.
Proof. exact (@lem2642958 (@lem2642968)). Qed.
Lemma lem2642971 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642972 : term109 = term110.
Proof. exact (@lem2642971 (NUMERAL 0) term32). Qed.
Lemma lem2642973 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642974 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2642975 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642974 h1) (fun h1 : term110 = True => @lem2642973)). Qed.
Lemma lem2642976 : term110 = True.
Proof. exact (EQ_MP (@lem2642975) (@lem2642973)). Qed.
Lemma lem2642977 : term109 = True.
Proof. exact (TRANS (@lem2642972) (@lem2642976)). Qed.
Lemma lem2642978 : True = term109.
Proof. exact (SYM (@lem2642977)). Qed.
Lemma lem2642979 : term109.
Proof. exact (EQ_MP (@lem2642978) (@lem0)). Qed.
Lemma lem2642980 : term232 = term235.
Proof. exact (@lem2642969 (@lem2642979)). Qed.
Lemma lem2642982 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2642983 : term117 = term118.
Proof. exact (@lem2642982 term32 term32). Qed.
Lemma lem2642984 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2642985 : term120 = term32.
Proof. exact (EQ_MP (@lem2642984) (@lem940073)). Qed.
Lemma lem2642986 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2642987 : term118 = term31.
Proof. exact (MK_COMB (@lem2642986) (@lem2642985)). Qed.
Lemma lem2642988 : term117 = term31.
Proof. exact (TRANS (@lem2642983) (@lem2642987)). Qed.
Lemma lem2642990 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2642991 : term131 = term38.
Proof. exact (@lem2642990 term32). Qed.
Lemma lem2642992 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2642993 : term236 = term230.
Proof. exact (MK_COMB (@lem2642992) (@lem2642991)). Qed.
Lemma lem2642994 : term235 = term109.
Proof. exact (MK_COMB (@lem2642993) (@lem2642988)). Qed.
Lemma lem2642996 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2642997 : term109 = term110.
Proof. exact (@lem2642996 (NUMERAL 0) term32). Qed.
Lemma lem2642998 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2642999 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643000 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2642999 h1) (fun h1 : term110 = True => @lem2642998)). Qed.
Lemma lem2643001 : term110 = True.
Proof. exact (EQ_MP (@lem2643000) (@lem2642998)). Qed.
Lemma lem2643002 : term109 = True.
Proof. exact (TRANS (@lem2642997) (@lem2643001)). Qed.
Lemma lem2643003 : term235 = True.
Proof. exact (TRANS (@lem2642994) (@lem2643002)). Qed.
Lemma lem2643004 : term232 = True.
Proof. exact (TRANS (@lem2642980) (@lem2643003)). Qed.
Lemma lem2643005 : term109 = True.
Proof. exact (TRANS (@lem2642957) (@lem2643004)). Qed.
Lemma lem2643006 : term229 = True.
Proof. exact (TRANS (@lem2642948) (@lem2643005)). Qed.
Lemma lem2643007 : True = term229.
Proof. exact (SYM (@lem2643006)). Qed.
Lemma lem2643008 : term229.
Proof. exact (EQ_MP (@lem2643007) (@lem0)). Qed.
Lemma lem2643009 (m : int) (n : int) (h1 : term992 m n) : term1174 m n.
Proof. exact (conj (@lem2643008) (@lem2642942 m n h1)). Qed.
Lemma lem2643011 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2643012 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2643011 term31 (term25 m n)). Qed.
Lemma lem2643013 (m : int) (n : int) (h1 : term992 m n) : term1176 m n.
Proof. exact (@lem2643012 m n (@lem2643009 m n h1)). Qed.
Lemma lem2643014 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2643015 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643016 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2643015) (@lem2643014 m n)). Qed.
Lemma lem2643017 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643018 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2643016 m n) (@lem2643017)). Qed.
Lemma lem2643019 (m : int) (n : int) (h1 : term992 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2643018 m n) (@lem2643013 m n h1)). Qed.
Lemma lem2643021 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2643022 : term229 = term109.
Proof. exact (@lem2643021 term38 term31). Qed.
Lemma lem2643024 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643025 : term31 = term99.
Proof. exact (@lem2643024 term32). Qed.
Lemma lem2643027 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643028 : term38 = term134.
Proof. exact (@lem2643027 (NUMERAL 0)). Qed.
Lemma lem2643029 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643030 : term230 = term231.
Proof. exact (MK_COMB (@lem2643029) (@lem2643028)). Qed.
Lemma lem2643031 : term109 = term232.
Proof. exact (MK_COMB (@lem2643030) (@lem2643025)). Qed.
Lemma lem2643032 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2643034 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643035 : term109 = term110.
Proof. exact (@lem2643034 (NUMERAL 0) term32). Qed.
Lemma lem2643036 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643037 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643038 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643037 h1) (fun h1 : term110 = True => @lem2643036)). Qed.
Lemma lem2643039 : term110 = True.
Proof. exact (EQ_MP (@lem2643038) (@lem2643036)). Qed.
Lemma lem2643040 : term109 = True.
Proof. exact (TRANS (@lem2643035) (@lem2643039)). Qed.
Lemma lem2643041 : True = term109.
Proof. exact (SYM (@lem2643040)). Qed.
Lemma lem2643042 : term109.
Proof. exact (EQ_MP (@lem2643041) (@lem0)). Qed.
Lemma lem2643043 : term234.
Proof. exact (@lem2643032 (@lem2643042)). Qed.
Lemma lem2643045 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643046 : term109 = term110.
Proof. exact (@lem2643045 (NUMERAL 0) term32). Qed.
Lemma lem2643047 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643048 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643049 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643048 h1) (fun h1 : term110 = True => @lem2643047)). Qed.
Lemma lem2643050 : term110 = True.
Proof. exact (EQ_MP (@lem2643049) (@lem2643047)). Qed.
Lemma lem2643051 : term109 = True.
Proof. exact (TRANS (@lem2643046) (@lem2643050)). Qed.
Lemma lem2643052 : True = term109.
Proof. exact (SYM (@lem2643051)). Qed.
Lemma lem2643053 : term109.
Proof. exact (EQ_MP (@lem2643052) (@lem0)). Qed.
Lemma lem2643054 : term232 = term235.
Proof. exact (@lem2643043 (@lem2643053)). Qed.
Lemma lem2643056 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643057 : term117 = term118.
Proof. exact (@lem2643056 term32 term32). Qed.
Lemma lem2643058 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643059 : term120 = term32.
Proof. exact (EQ_MP (@lem2643058) (@lem940073)). Qed.
Lemma lem2643060 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643061 : term118 = term31.
Proof. exact (MK_COMB (@lem2643060) (@lem2643059)). Qed.
Lemma lem2643062 : term117 = term31.
Proof. exact (TRANS (@lem2643057) (@lem2643061)). Qed.
Lemma lem2643064 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643065 : term131 = term38.
Proof. exact (@lem2643064 term32). Qed.
Lemma lem2643066 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643067 : term236 = term230.
Proof. exact (MK_COMB (@lem2643066) (@lem2643065)). Qed.
Lemma lem2643068 : term235 = term109.
Proof. exact (MK_COMB (@lem2643067) (@lem2643062)). Qed.
Lemma lem2643070 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643071 : term109 = term110.
Proof. exact (@lem2643070 (NUMERAL 0) term32). Qed.
Lemma lem2643072 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643073 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643074 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643073 h1) (fun h1 : term110 = True => @lem2643072)). Qed.
Lemma lem2643075 : term110 = True.
Proof. exact (EQ_MP (@lem2643074) (@lem2643072)). Qed.
Lemma lem2643076 : term109 = True.
Proof. exact (TRANS (@lem2643071) (@lem2643075)). Qed.
Lemma lem2643077 : term235 = True.
Proof. exact (TRANS (@lem2643068) (@lem2643076)). Qed.
Lemma lem2643078 : term232 = True.
Proof. exact (TRANS (@lem2643054) (@lem2643077)). Qed.
Lemma lem2643079 : term109 = True.
Proof. exact (TRANS (@lem2643031) (@lem2643078)). Qed.
Lemma lem2643080 : term229 = True.
Proof. exact (TRANS (@lem2643022) (@lem2643079)). Qed.
Lemma lem2643081 : True = term229.
Proof. exact (SYM (@lem2643080)). Qed.
Lemma lem2643082 : term229.
Proof. exact (EQ_MP (@lem2643081) (@lem0)). Qed.
Lemma lem2643083 (m : int) (n : int) (h1 : term992 m n) : term1179 m n.
Proof. exact (conj (@lem2643082) (@lem2642944 m n h1)). Qed.
Lemma lem2643085 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2643086 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2643085 term31 (term739 m n)). Qed.
Lemma lem2643087 (m : int) (n : int) (h1 : term992 m n) : term1181 m n.
Proof. exact (@lem2643086 m n (@lem2643083 m n h1)). Qed.
Lemma lem2643088 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2643089 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643090 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2643089) (@lem2643088 m n)). Qed.
Lemma lem2643091 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643092 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2643090 m n) (@lem2643091)). Qed.
Lemma lem2643093 (m : int) (n : int) (h1 : term992 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2643092 m n) (@lem2643087 m n h1)). Qed.
Lemma lem2643094 (m : int) (n : int) (h1 : term992 m n) : term1184 m n.
Proof. exact (conj (@lem2643093 m n h1) (@lem2643019 m n h1)). Qed.
Lemma lem2643096 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2643097 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2643096 (term739 m n) (term25 m n)). Qed.
Lemma lem2643098 (m : int) (n : int) (h1 : term992 m n) : term1186 m n.
Proof. exact (@lem2643097 m n (@lem2643094 m n h1)). Qed.
Lemma lem2643099 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2643100 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2643102 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643103 : term31 = term99.
Proof. exact (@lem2643102 term32). Qed.
Lemma lem2643105 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643106 : term97 = term102.
Proof. exact (@lem2643105 term32). Qed.
Lemma lem2643107 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643108 : term103 = term104.
Proof. exact (MK_COMB (@lem2643107) (@lem2643106)). Qed.
Lemma lem2643109 : term105 = term106.
Proof. exact (MK_COMB (@lem2643108) (@lem2643103)). Qed.
Lemma lem2643110 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2643112 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643113 : term109 = term110.
Proof. exact (@lem2643112 (NUMERAL 0) term32). Qed.
Lemma lem2643114 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643115 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643116 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643115 h1) (fun h1 : term110 = True => @lem2643114)). Qed.
Lemma lem2643117 : term110 = True.
Proof. exact (EQ_MP (@lem2643116) (@lem2643114)). Qed.
Lemma lem2643118 : term109 = True.
Proof. exact (TRANS (@lem2643113) (@lem2643117)). Qed.
Lemma lem2643119 : True = term109.
Proof. exact (SYM (@lem2643118)). Qed.
Lemma lem2643120 : term109.
Proof. exact (EQ_MP (@lem2643119) (@lem0)). Qed.
Lemma lem2643121 : term112.
Proof. exact (@lem2643110 (@lem2643120)). Qed.
Lemma lem2643123 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643124 : term109 = term110.
Proof. exact (@lem2643123 (NUMERAL 0) term32). Qed.
Lemma lem2643125 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643126 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643127 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643126 h1) (fun h1 : term110 = True => @lem2643125)). Qed.
Lemma lem2643128 : term110 = True.
Proof. exact (EQ_MP (@lem2643127) (@lem2643125)). Qed.
Lemma lem2643129 : term109 = True.
Proof. exact (TRANS (@lem2643124) (@lem2643128)). Qed.
Lemma lem2643130 : True = term109.
Proof. exact (SYM (@lem2643129)). Qed.
Lemma lem2643131 : term109.
Proof. exact (EQ_MP (@lem2643130) (@lem0)). Qed.
Lemma lem2643132 : term113.
Proof. exact (@lem2643121 (@lem2643131)). Qed.
Lemma lem2643134 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643135 : term109 = term110.
Proof. exact (@lem2643134 (NUMERAL 0) term32). Qed.
Lemma lem2643136 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643137 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643138 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643137 h1) (fun h1 : term110 = True => @lem2643136)). Qed.
Lemma lem2643139 : term110 = True.
Proof. exact (EQ_MP (@lem2643138) (@lem2643136)). Qed.
Lemma lem2643140 : term109 = True.
Proof. exact (TRANS (@lem2643135) (@lem2643139)). Qed.
Lemma lem2643141 : True = term109.
Proof. exact (SYM (@lem2643140)). Qed.
Lemma lem2643142 : term109.
Proof. exact (EQ_MP (@lem2643141) (@lem0)). Qed.
Lemma lem2643143 : term114.
Proof. exact (@lem2643132 (@lem2643142)). Qed.
Lemma lem2643145 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643146 : term117 = term118.
Proof. exact (@lem2643145 term32 term32). Qed.
Lemma lem2643147 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643148 : term120 = term32.
Proof. exact (EQ_MP (@lem2643147) (@lem940073)). Qed.
Lemma lem2643149 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643150 : term118 = term31.
Proof. exact (MK_COMB (@lem2643149) (@lem2643148)). Qed.
Lemma lem2643151 : term117 = term31.
Proof. exact (TRANS (@lem2643146) (@lem2643150)). Qed.
Lemma lem2643153 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643154 : term123 = term124.
Proof. exact (@lem2643153 term32 term32). Qed.
Lemma lem2643155 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643156 : term120 = term32.
Proof. exact (EQ_MP (@lem2643155) (@lem940073)). Qed.
Lemma lem2643157 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643158 : term118 = term31.
Proof. exact (MK_COMB (@lem2643157) (@lem2643156)). Qed.
Lemma lem2643159 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643160 : term124 = term97.
Proof. exact (MK_COMB (@lem2643159) (@lem2643158)). Qed.
Lemma lem2643161 : term123 = term97.
Proof. exact (TRANS (@lem2643154) (@lem2643160)). Qed.
Lemma lem2643162 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643163 : term125 = term103.
Proof. exact (MK_COMB (@lem2643162) (@lem2643161)). Qed.
Lemma lem2643164 : term126 = term105.
Proof. exact (MK_COMB (@lem2643163) (@lem2643151)). Qed.
Lemma lem2643166 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2643167 : term105 = term38.
Proof. exact (@lem2643166 term32). Qed.
Lemma lem2643168 : term126 = term38.
Proof. exact (TRANS (@lem2643164) (@lem2643167)). Qed.
Lemma lem2643169 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643170 : term128 = term129.
Proof. exact (MK_COMB (@lem2643169) (@lem2643168)). Qed.
Lemma lem2643171 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2643172 : term130 = term131.
Proof. exact (MK_COMB (@lem2643170) (@lem2643171)). Qed.
Lemma lem2643174 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643175 : term131 = term38.
Proof. exact (@lem2643174 term32). Qed.
Lemma lem2643176 : term130 = term38.
Proof. exact (TRANS (@lem2643172) (@lem2643175)). Qed.
Lemma lem2643178 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643179 : term117 = term118.
Proof. exact (@lem2643178 term32 term32). Qed.
Lemma lem2643180 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643181 : term120 = term32.
Proof. exact (EQ_MP (@lem2643180) (@lem940073)). Qed.
Lemma lem2643182 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643183 : term118 = term31.
Proof. exact (MK_COMB (@lem2643182) (@lem2643181)). Qed.
Lemma lem2643184 : term117 = term31.
Proof. exact (TRANS (@lem2643179) (@lem2643183)). Qed.
Lemma lem2643185 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2643186 : term133 = term131.
Proof. exact (MK_COMB (@lem2643185) (@lem2643184)). Qed.
Lemma lem2643188 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643189 : term131 = term38.
Proof. exact (@lem2643188 term32). Qed.
Lemma lem2643190 : term133 = term38.
Proof. exact (TRANS (@lem2643186) (@lem2643189)). Qed.
Lemma lem2643191 : term38 = term133.
Proof. exact (SYM (@lem2643190)). Qed.
Lemma lem2643192 : term130 = term133.
Proof. exact (TRANS (@lem2643176) (@lem2643191)). Qed.
Lemma lem2643193 : term106 = term134.
Proof. exact (@lem2643143 (@lem2643192)). Qed.
Lemma lem2643194 : term105 = term134.
Proof. exact (TRANS (@lem2643109) (@lem2643193)). Qed.
Lemma lem2643196 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2643197 : term134 = term38.
Proof. exact (@lem2643196 term38). Qed.
Lemma lem2643198 : term105 = term38.
Proof. exact (TRANS (@lem2643194) (@lem2643197)). Qed.
Lemma lem2643199 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643200 : term136 = term129.
Proof. exact (MK_COMB (@lem2643199) (@lem2643198)). Qed.
Lemma lem2643201 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2643202 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2643200) (@lem2643201 m)). Qed.
Lemma lem2643203 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2643100 m) (@lem2643202 m)). Qed.
Lemma lem2643204 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2643205 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2643203 m) (@lem2643204 m)). Qed.
Lemma lem2643206 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643207 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2643206) (@lem2643205 m)). Qed.
Lemma lem2643208 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2643209 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2643211 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643212 : term31 = term99.
Proof. exact (@lem2643211 term32). Qed.
Lemma lem2643214 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643215 : term97 = term102.
Proof. exact (@lem2643214 term32). Qed.
Lemma lem2643216 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643217 : term103 = term104.
Proof. exact (MK_COMB (@lem2643216) (@lem2643215)). Qed.
Lemma lem2643218 : term105 = term106.
Proof. exact (MK_COMB (@lem2643217) (@lem2643212)). Qed.
Lemma lem2643219 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2643221 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643222 : term109 = term110.
Proof. exact (@lem2643221 (NUMERAL 0) term32). Qed.
Lemma lem2643223 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643224 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643225 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643224 h1) (fun h1 : term110 = True => @lem2643223)). Qed.
Lemma lem2643226 : term110 = True.
Proof. exact (EQ_MP (@lem2643225) (@lem2643223)). Qed.
Lemma lem2643227 : term109 = True.
Proof. exact (TRANS (@lem2643222) (@lem2643226)). Qed.
Lemma lem2643228 : True = term109.
Proof. exact (SYM (@lem2643227)). Qed.
Lemma lem2643229 : term109.
Proof. exact (EQ_MP (@lem2643228) (@lem0)). Qed.
Lemma lem2643230 : term112.
Proof. exact (@lem2643219 (@lem2643229)). Qed.
Lemma lem2643232 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643233 : term109 = term110.
Proof. exact (@lem2643232 (NUMERAL 0) term32). Qed.
Lemma lem2643234 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643235 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643236 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643235 h1) (fun h1 : term110 = True => @lem2643234)). Qed.
Lemma lem2643237 : term110 = True.
Proof. exact (EQ_MP (@lem2643236) (@lem2643234)). Qed.
Lemma lem2643238 : term109 = True.
Proof. exact (TRANS (@lem2643233) (@lem2643237)). Qed.
Lemma lem2643239 : True = term109.
Proof. exact (SYM (@lem2643238)). Qed.
Lemma lem2643240 : term109.
Proof. exact (EQ_MP (@lem2643239) (@lem0)). Qed.
Lemma lem2643241 : term113.
Proof. exact (@lem2643230 (@lem2643240)). Qed.
Lemma lem2643243 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643244 : term109 = term110.
Proof. exact (@lem2643243 (NUMERAL 0) term32). Qed.
Lemma lem2643245 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643246 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643247 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643246 h1) (fun h1 : term110 = True => @lem2643245)). Qed.
Lemma lem2643248 : term110 = True.
Proof. exact (EQ_MP (@lem2643247) (@lem2643245)). Qed.
Lemma lem2643249 : term109 = True.
Proof. exact (TRANS (@lem2643244) (@lem2643248)). Qed.
Lemma lem2643250 : True = term109.
Proof. exact (SYM (@lem2643249)). Qed.
Lemma lem2643251 : term109.
Proof. exact (EQ_MP (@lem2643250) (@lem0)). Qed.
Lemma lem2643252 : term114.
Proof. exact (@lem2643241 (@lem2643251)). Qed.
Lemma lem2643254 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643255 : term117 = term118.
Proof. exact (@lem2643254 term32 term32). Qed.
Lemma lem2643256 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643257 : term120 = term32.
Proof. exact (EQ_MP (@lem2643256) (@lem940073)). Qed.
Lemma lem2643258 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643259 : term118 = term31.
Proof. exact (MK_COMB (@lem2643258) (@lem2643257)). Qed.
Lemma lem2643260 : term117 = term31.
Proof. exact (TRANS (@lem2643255) (@lem2643259)). Qed.
Lemma lem2643262 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643263 : term123 = term124.
Proof. exact (@lem2643262 term32 term32). Qed.
Lemma lem2643264 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643265 : term120 = term32.
Proof. exact (EQ_MP (@lem2643264) (@lem940073)). Qed.
Lemma lem2643266 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643267 : term118 = term31.
Proof. exact (MK_COMB (@lem2643266) (@lem2643265)). Qed.
Lemma lem2643268 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643269 : term124 = term97.
Proof. exact (MK_COMB (@lem2643268) (@lem2643267)). Qed.
Lemma lem2643270 : term123 = term97.
Proof. exact (TRANS (@lem2643263) (@lem2643269)). Qed.
Lemma lem2643271 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643272 : term125 = term103.
Proof. exact (MK_COMB (@lem2643271) (@lem2643270)). Qed.
Lemma lem2643273 : term126 = term105.
Proof. exact (MK_COMB (@lem2643272) (@lem2643260)). Qed.
Lemma lem2643275 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2643276 : term105 = term38.
Proof. exact (@lem2643275 term32). Qed.
Lemma lem2643277 : term126 = term38.
Proof. exact (TRANS (@lem2643273) (@lem2643276)). Qed.
Lemma lem2643278 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643279 : term128 = term129.
Proof. exact (MK_COMB (@lem2643278) (@lem2643277)). Qed.
Lemma lem2643280 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2643281 : term130 = term131.
Proof. exact (MK_COMB (@lem2643279) (@lem2643280)). Qed.
Lemma lem2643283 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643284 : term131 = term38.
Proof. exact (@lem2643283 term32). Qed.
Lemma lem2643285 : term130 = term38.
Proof. exact (TRANS (@lem2643281) (@lem2643284)). Qed.
Lemma lem2643287 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643288 : term117 = term118.
Proof. exact (@lem2643287 term32 term32). Qed.
Lemma lem2643289 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643290 : term120 = term32.
Proof. exact (EQ_MP (@lem2643289) (@lem940073)). Qed.
Lemma lem2643291 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643292 : term118 = term31.
Proof. exact (MK_COMB (@lem2643291) (@lem2643290)). Qed.
Lemma lem2643293 : term117 = term31.
Proof. exact (TRANS (@lem2643288) (@lem2643292)). Qed.
Lemma lem2643294 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2643295 : term133 = term131.
Proof. exact (MK_COMB (@lem2643294) (@lem2643293)). Qed.
Lemma lem2643297 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643298 : term131 = term38.
Proof. exact (@lem2643297 term32). Qed.
Lemma lem2643299 : term133 = term38.
Proof. exact (TRANS (@lem2643295) (@lem2643298)). Qed.
Lemma lem2643300 : term38 = term133.
Proof. exact (SYM (@lem2643299)). Qed.
Lemma lem2643301 : term130 = term133.
Proof. exact (TRANS (@lem2643285) (@lem2643300)). Qed.
Lemma lem2643302 : term106 = term134.
Proof. exact (@lem2643252 (@lem2643301)). Qed.
Lemma lem2643303 : term105 = term134.
Proof. exact (TRANS (@lem2643218) (@lem2643302)). Qed.
Lemma lem2643305 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2643306 : term134 = term38.
Proof. exact (@lem2643305 term38). Qed.
Lemma lem2643307 : term105 = term38.
Proof. exact (TRANS (@lem2643303) (@lem2643306)). Qed.
Lemma lem2643308 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643309 : term136 = term129.
Proof. exact (MK_COMB (@lem2643308) (@lem2643307)). Qed.
Lemma lem2643310 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2643311 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2643309) (@lem2643310 n)). Qed.
Lemma lem2643312 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2643209 n) (@lem2643311 n)). Qed.
Lemma lem2643313 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2643314 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2643312 n) (@lem2643313 n)). Qed.
Lemma lem2643315 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643316 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2643315) (@lem2643314 n)). Qed.
Lemma lem2643317 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2643318 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2643316 n) (@lem2643317)). Qed.
Lemma lem2643319 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2643208 n) (@lem2643318 n)). Qed.
Lemma lem2643320 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2643321 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2643319 n) (@lem2643320)). Qed.
Lemma lem2643322 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2643207 m) (@lem2643321 n)). Qed.
Lemma lem2643323 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2643099 m n) (@lem2643322 m n)). Qed.
Lemma lem2643324 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2643325 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2643323 m n) (@lem2643324)). Qed.
Lemma lem2643326 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643327 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2643326) (@lem2643325 m n)). Qed.
Lemma lem2643328 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643329 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2643327 m n) (@lem2643328)). Qed.
Lemma lem2643330 (m : int) (n : int) (h1 : term992 m n) : term257.
Proof. exact (EQ_MP (@lem2643329 m n) (@lem2643098 m n h1)). Qed.
Lemma lem2643332 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2643333 : term257 = term258.
Proof. exact (@lem2643332 term38 term97). Qed.
Lemma lem2643335 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643336 : term97 = term102.
Proof. exact (@lem2643335 term32). Qed.
Lemma lem2643338 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643339 : term38 = term134.
Proof. exact (@lem2643338 (NUMERAL 0)). Qed.
Lemma lem2643340 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2643341 : term259 = term260.
Proof. exact (MK_COMB (@lem2643340) (@lem2643339)). Qed.
Lemma lem2643342 : term258 = term261.
Proof. exact (MK_COMB (@lem2643341) (@lem2643336)). Qed.
Lemma lem2643343 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2643345 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643346 : term109 = term110.
Proof. exact (@lem2643345 (NUMERAL 0) term32). Qed.
Lemma lem2643347 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643348 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643349 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643348 h1) (fun h1 : term110 = True => @lem2643347)). Qed.
Lemma lem2643350 : term110 = True.
Proof. exact (EQ_MP (@lem2643349) (@lem2643347)). Qed.
Lemma lem2643351 : term109 = True.
Proof. exact (TRANS (@lem2643346) (@lem2643350)). Qed.
Lemma lem2643352 : True = term109.
Proof. exact (SYM (@lem2643351)). Qed.
Lemma lem2643353 : term109.
Proof. exact (EQ_MP (@lem2643352) (@lem0)). Qed.
Lemma lem2643354 : term263.
Proof. exact (@lem2643343 (@lem2643353)). Qed.
Lemma lem2643356 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643357 : term109 = term110.
Proof. exact (@lem2643356 (NUMERAL 0) term32). Qed.
Lemma lem2643358 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643359 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643360 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643359 h1) (fun h1 : term110 = True => @lem2643358)). Qed.
Lemma lem2643361 : term110 = True.
Proof. exact (EQ_MP (@lem2643360) (@lem2643358)). Qed.
Lemma lem2643362 : term109 = True.
Proof. exact (TRANS (@lem2643357) (@lem2643361)). Qed.
Lemma lem2643363 : True = term109.
Proof. exact (SYM (@lem2643362)). Qed.
Lemma lem2643364 : term109.
Proof. exact (EQ_MP (@lem2643363) (@lem0)). Qed.
Lemma lem2643365 : term261 = term264.
Proof. exact (@lem2643354 (@lem2643364)). Qed.
Lemma lem2643367 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643368 : term123 = term124.
Proof. exact (@lem2643367 term32 term32). Qed.
Lemma lem2643369 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643370 : term120 = term32.
Proof. exact (EQ_MP (@lem2643369) (@lem940073)). Qed.
Lemma lem2643371 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643372 : term118 = term31.
Proof. exact (MK_COMB (@lem2643371) (@lem2643370)). Qed.
Lemma lem2643373 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643374 : term124 = term97.
Proof. exact (MK_COMB (@lem2643373) (@lem2643372)). Qed.
Lemma lem2643375 : term123 = term97.
Proof. exact (TRANS (@lem2643368) (@lem2643374)). Qed.
Lemma lem2643377 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643378 : term131 = term38.
Proof. exact (@lem2643377 term32). Qed.
Lemma lem2643379 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2643380 : term265 = term259.
Proof. exact (MK_COMB (@lem2643379) (@lem2643378)). Qed.
Lemma lem2643381 : term264 = term258.
Proof. exact (MK_COMB (@lem2643380) (@lem2643375)). Qed.
Lemma lem2643383 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2643384 : term258 = term268.
Proof. exact (@lem2643383 (NUMERAL 0) term32). Qed.
Lemma lem2643385 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643386 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2643387 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643386 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2643385)). Qed.
Lemma lem2643388 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2643387) (@lem2643385)). Qed.
Lemma lem2643389 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2643390 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2643391 : term269 = (and True).
Proof. exact (MK_COMB (@lem2643390) (@lem2643389)). Qed.
Lemma lem2643392 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2643391) (@lem2643388)). Qed.
Lemma lem2643394 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2643395 : term268 = False.
Proof. exact (TRANS (@lem2643392) (@lem2643394)). Qed.
Lemma lem2643396 : term258 = False.
Proof. exact (TRANS (@lem2643384) (@lem2643395)). Qed.
Lemma lem2643397 : term264 = False.
Proof. exact (TRANS (@lem2643381) (@lem2643396)). Qed.
Lemma lem2643398 : term261 = False.
Proof. exact (TRANS (@lem2643365) (@lem2643397)). Qed.
Lemma lem2643399 : term258 = False.
Proof. exact (TRANS (@lem2643342) (@lem2643398)). Qed.
Lemma lem2643400 : term257 = False.
Proof. exact (TRANS (@lem2643333) (@lem2643399)). Qed.
Lemma lem2643401 (m : int) (n : int) (h1 : term992 m n) : False.
Proof. exact (EQ_MP (@lem2643400) (@lem2643330 m n h1)). Qed.
Lemma lem2643402 (m : int) (n : int) (h1 : term994 m n) : False.
Proof. exact (or_elim (@lem2642463 m n h1) (fun h0 : term990 m n => @lem2642932 m n h0) (fun h0 : term992 m n => @lem2643401 m n h0)). Qed.
Lemma lem2643403 (m : int) (n : int) (h1 : term1017 m n) : term1017 m n.
Proof. exact (h1). Qed.
Lemma lem2643404 (m : int) (n : int) (h1 : term1013 m n) : term1013 m n.
Proof. exact (h1). Qed.
Lemma lem2643405 (m : int) (n : int) (h1 : term1013 m n) : term1012 m n.
Proof. exact (proj2 (@lem2643404 m n h1)). Qed.
Lemma lem2643407 (m : int) (n : int) (h1 : term1013 m n) : term716 m n.
Proof. exact (proj2 (@lem2643405 m n h1)). Qed.
Lemma lem2643408 (m : int) (n : int) (h1 : term1013 m n) : term896 m n.
Proof. exact (proj1 (@lem2643405 m n h1)). Qed.
Lemma lem2643410 (m : int) (n : int) (h1 : term1013 m n) : term853 m n.
Proof. exact (proj1 (@lem2643408 m n h1)). Qed.
Lemma lem2643411 (m : int) (n : int) (h1 : term1013 m n) : term807 m n.
Proof. exact (proj2 (@lem2643410 m n h1)). Qed.
Lemma lem2643414 (m : int) (n : int) (h1 : term1013 m n) : term829 m n.
Proof. exact (proj1 (@lem2643411 m n h1)). Qed.
Lemma lem2643415 (m : int) (n : int) (h1 : term1013 m n) : term714 m n.
Proof. exact (proj2 (@lem2643407 m n h1)). Qed.
Lemma lem2643418 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2643419 : term229 = term109.
Proof. exact (@lem2643418 term38 term31). Qed.
Lemma lem2643421 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643422 : term31 = term99.
Proof. exact (@lem2643421 term32). Qed.
Lemma lem2643424 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643425 : term38 = term134.
Proof. exact (@lem2643424 (NUMERAL 0)). Qed.
Lemma lem2643426 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643427 : term230 = term231.
Proof. exact (MK_COMB (@lem2643426) (@lem2643425)). Qed.
Lemma lem2643428 : term109 = term232.
Proof. exact (MK_COMB (@lem2643427) (@lem2643422)). Qed.
Lemma lem2643429 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2643431 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643432 : term109 = term110.
Proof. exact (@lem2643431 (NUMERAL 0) term32). Qed.
Lemma lem2643433 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643434 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643435 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643434 h1) (fun h1 : term110 = True => @lem2643433)). Qed.
Lemma lem2643436 : term110 = True.
Proof. exact (EQ_MP (@lem2643435) (@lem2643433)). Qed.
Lemma lem2643437 : term109 = True.
Proof. exact (TRANS (@lem2643432) (@lem2643436)). Qed.
Lemma lem2643438 : True = term109.
Proof. exact (SYM (@lem2643437)). Qed.
Lemma lem2643439 : term109.
Proof. exact (EQ_MP (@lem2643438) (@lem0)). Qed.
Lemma lem2643440 : term234.
Proof. exact (@lem2643429 (@lem2643439)). Qed.
Lemma lem2643442 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643443 : term109 = term110.
Proof. exact (@lem2643442 (NUMERAL 0) term32). Qed.
Lemma lem2643444 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643445 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643446 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643445 h1) (fun h1 : term110 = True => @lem2643444)). Qed.
Lemma lem2643447 : term110 = True.
Proof. exact (EQ_MP (@lem2643446) (@lem2643444)). Qed.
Lemma lem2643448 : term109 = True.
Proof. exact (TRANS (@lem2643443) (@lem2643447)). Qed.
Lemma lem2643449 : True = term109.
Proof. exact (SYM (@lem2643448)). Qed.
Lemma lem2643450 : term109.
Proof. exact (EQ_MP (@lem2643449) (@lem0)). Qed.
Lemma lem2643451 : term232 = term235.
Proof. exact (@lem2643440 (@lem2643450)). Qed.
Lemma lem2643453 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643454 : term117 = term118.
Proof. exact (@lem2643453 term32 term32). Qed.
Lemma lem2643455 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643456 : term120 = term32.
Proof. exact (EQ_MP (@lem2643455) (@lem940073)). Qed.
Lemma lem2643457 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643458 : term118 = term31.
Proof. exact (MK_COMB (@lem2643457) (@lem2643456)). Qed.
Lemma lem2643459 : term117 = term31.
Proof. exact (TRANS (@lem2643454) (@lem2643458)). Qed.
Lemma lem2643461 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643462 : term131 = term38.
Proof. exact (@lem2643461 term32). Qed.
Lemma lem2643463 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643464 : term236 = term230.
Proof. exact (MK_COMB (@lem2643463) (@lem2643462)). Qed.
Lemma lem2643465 : term235 = term109.
Proof. exact (MK_COMB (@lem2643464) (@lem2643459)). Qed.
Lemma lem2643467 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643468 : term109 = term110.
Proof. exact (@lem2643467 (NUMERAL 0) term32). Qed.
Lemma lem2643469 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643470 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643471 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643470 h1) (fun h1 : term110 = True => @lem2643469)). Qed.
Lemma lem2643472 : term110 = True.
Proof. exact (EQ_MP (@lem2643471) (@lem2643469)). Qed.
Lemma lem2643473 : term109 = True.
Proof. exact (TRANS (@lem2643468) (@lem2643472)). Qed.
Lemma lem2643474 : term235 = True.
Proof. exact (TRANS (@lem2643465) (@lem2643473)). Qed.
Lemma lem2643475 : term232 = True.
Proof. exact (TRANS (@lem2643451) (@lem2643474)). Qed.
Lemma lem2643476 : term109 = True.
Proof. exact (TRANS (@lem2643428) (@lem2643475)). Qed.
Lemma lem2643477 : term229 = True.
Proof. exact (TRANS (@lem2643419) (@lem2643476)). Qed.
Lemma lem2643478 : True = term229.
Proof. exact (SYM (@lem2643477)). Qed.
Lemma lem2643479 : term229.
Proof. exact (EQ_MP (@lem2643478) (@lem0)). Qed.
Lemma lem2643480 (m : int) (n : int) (h1 : term1013 m n) : term1157 m n.
Proof. exact (conj (@lem2643479) (@lem2643414 m n h1)). Qed.
Lemma lem2643482 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2643483 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2643482 term31 (term88 m n)). Qed.
Lemma lem2643484 (m : int) (n : int) (h1 : term1013 m n) : term1159 m n.
Proof. exact (@lem2643483 m n (@lem2643480 m n h1)). Qed.
Lemma lem2643485 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2643486 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643487 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2643486) (@lem2643485 m n)). Qed.
Lemma lem2643488 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643489 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2643487 m n) (@lem2643488)). Qed.
Lemma lem2643490 (m : int) (n : int) (h1 : term1013 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2643489 m n) (@lem2643484 m n h1)). Qed.
Lemma lem2643492 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2643493 : term229 = term109.
Proof. exact (@lem2643492 term38 term31). Qed.
Lemma lem2643495 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643496 : term31 = term99.
Proof. exact (@lem2643495 term32). Qed.
Lemma lem2643498 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643499 : term38 = term134.
Proof. exact (@lem2643498 (NUMERAL 0)). Qed.
Lemma lem2643500 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643501 : term230 = term231.
Proof. exact (MK_COMB (@lem2643500) (@lem2643499)). Qed.
Lemma lem2643502 : term109 = term232.
Proof. exact (MK_COMB (@lem2643501) (@lem2643496)). Qed.
Lemma lem2643503 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2643505 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643506 : term109 = term110.
Proof. exact (@lem2643505 (NUMERAL 0) term32). Qed.
Lemma lem2643507 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643508 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643509 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643508 h1) (fun h1 : term110 = True => @lem2643507)). Qed.
Lemma lem2643510 : term110 = True.
Proof. exact (EQ_MP (@lem2643509) (@lem2643507)). Qed.
Lemma lem2643511 : term109 = True.
Proof. exact (TRANS (@lem2643506) (@lem2643510)). Qed.
Lemma lem2643512 : True = term109.
Proof. exact (SYM (@lem2643511)). Qed.
Lemma lem2643513 : term109.
Proof. exact (EQ_MP (@lem2643512) (@lem0)). Qed.
Lemma lem2643514 : term234.
Proof. exact (@lem2643503 (@lem2643513)). Qed.
Lemma lem2643516 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643517 : term109 = term110.
Proof. exact (@lem2643516 (NUMERAL 0) term32). Qed.
Lemma lem2643518 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643519 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643520 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643519 h1) (fun h1 : term110 = True => @lem2643518)). Qed.
Lemma lem2643521 : term110 = True.
Proof. exact (EQ_MP (@lem2643520) (@lem2643518)). Qed.
Lemma lem2643522 : term109 = True.
Proof. exact (TRANS (@lem2643517) (@lem2643521)). Qed.
Lemma lem2643523 : True = term109.
Proof. exact (SYM (@lem2643522)). Qed.
Lemma lem2643524 : term109.
Proof. exact (EQ_MP (@lem2643523) (@lem0)). Qed.
Lemma lem2643525 : term232 = term235.
Proof. exact (@lem2643514 (@lem2643524)). Qed.
Lemma lem2643527 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643528 : term117 = term118.
Proof. exact (@lem2643527 term32 term32). Qed.
Lemma lem2643529 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643530 : term120 = term32.
Proof. exact (EQ_MP (@lem2643529) (@lem940073)). Qed.
Lemma lem2643531 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643532 : term118 = term31.
Proof. exact (MK_COMB (@lem2643531) (@lem2643530)). Qed.
Lemma lem2643533 : term117 = term31.
Proof. exact (TRANS (@lem2643528) (@lem2643532)). Qed.
Lemma lem2643535 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643536 : term131 = term38.
Proof. exact (@lem2643535 term32). Qed.
Lemma lem2643537 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643538 : term236 = term230.
Proof. exact (MK_COMB (@lem2643537) (@lem2643536)). Qed.
Lemma lem2643539 : term235 = term109.
Proof. exact (MK_COMB (@lem2643538) (@lem2643533)). Qed.
Lemma lem2643541 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643542 : term109 = term110.
Proof. exact (@lem2643541 (NUMERAL 0) term32). Qed.
Lemma lem2643543 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643544 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643545 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643544 h1) (fun h1 : term110 = True => @lem2643543)). Qed.
Lemma lem2643546 : term110 = True.
Proof. exact (EQ_MP (@lem2643545) (@lem2643543)). Qed.
Lemma lem2643547 : term109 = True.
Proof. exact (TRANS (@lem2643542) (@lem2643546)). Qed.
Lemma lem2643548 : term235 = True.
Proof. exact (TRANS (@lem2643539) (@lem2643547)). Qed.
Lemma lem2643549 : term232 = True.
Proof. exact (TRANS (@lem2643525) (@lem2643548)). Qed.
Lemma lem2643550 : term109 = True.
Proof. exact (TRANS (@lem2643502) (@lem2643549)). Qed.
Lemma lem2643551 : term229 = True.
Proof. exact (TRANS (@lem2643493) (@lem2643550)). Qed.
Lemma lem2643552 : True = term229.
Proof. exact (SYM (@lem2643551)). Qed.
Lemma lem2643553 : term229.
Proof. exact (EQ_MP (@lem2643552) (@lem0)). Qed.
Lemma lem2643554 (m : int) (n : int) (h1 : term1013 m n) : term1162 m n.
Proof. exact (conj (@lem2643553) (@lem2643415 m n h1)). Qed.
Lemma lem2643556 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2643557 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2643556 term31 (term196 m n)). Qed.
Lemma lem2643558 (m : int) (n : int) (h1 : term1013 m n) : term1164 m n.
Proof. exact (@lem2643557 m n (@lem2643554 m n h1)). Qed.
Lemma lem2643559 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2643560 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643561 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2643560) (@lem2643559 m n)). Qed.
Lemma lem2643562 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643563 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2643561 m n) (@lem2643562)). Qed.
Lemma lem2643564 (m : int) (n : int) (h1 : term1013 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2643563 m n) (@lem2643558 m n h1)). Qed.
Lemma lem2643565 (m : int) (n : int) (h1 : term1013 m n) : term1167 m n.
Proof. exact (conj (@lem2643564 m n h1) (@lem2643490 m n h1)). Qed.
Lemma lem2643567 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2643568 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2643567 (term196 m n) (term88 m n)). Qed.
Lemma lem2643569 (m : int) (n : int) (h1 : term1013 m n) : term1169 m n.
Proof. exact (@lem2643568 m n (@lem2643565 m n h1)). Qed.
Lemma lem2643570 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2643571 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2643573 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643574 : term31 = term99.
Proof. exact (@lem2643573 term32). Qed.
Lemma lem2643576 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643577 : term97 = term102.
Proof. exact (@lem2643576 term32). Qed.
Lemma lem2643578 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643579 : term103 = term104.
Proof. exact (MK_COMB (@lem2643578) (@lem2643577)). Qed.
Lemma lem2643580 : term105 = term106.
Proof. exact (MK_COMB (@lem2643579) (@lem2643574)). Qed.
Lemma lem2643581 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2643583 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643584 : term109 = term110.
Proof. exact (@lem2643583 (NUMERAL 0) term32). Qed.
Lemma lem2643585 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643586 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643587 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643586 h1) (fun h1 : term110 = True => @lem2643585)). Qed.
Lemma lem2643588 : term110 = True.
Proof. exact (EQ_MP (@lem2643587) (@lem2643585)). Qed.
Lemma lem2643589 : term109 = True.
Proof. exact (TRANS (@lem2643584) (@lem2643588)). Qed.
Lemma lem2643590 : True = term109.
Proof. exact (SYM (@lem2643589)). Qed.
Lemma lem2643591 : term109.
Proof. exact (EQ_MP (@lem2643590) (@lem0)). Qed.
Lemma lem2643592 : term112.
Proof. exact (@lem2643581 (@lem2643591)). Qed.
Lemma lem2643594 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643595 : term109 = term110.
Proof. exact (@lem2643594 (NUMERAL 0) term32). Qed.
Lemma lem2643596 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643597 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643598 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643597 h1) (fun h1 : term110 = True => @lem2643596)). Qed.
Lemma lem2643599 : term110 = True.
Proof. exact (EQ_MP (@lem2643598) (@lem2643596)). Qed.
Lemma lem2643600 : term109 = True.
Proof. exact (TRANS (@lem2643595) (@lem2643599)). Qed.
Lemma lem2643601 : True = term109.
Proof. exact (SYM (@lem2643600)). Qed.
Lemma lem2643602 : term109.
Proof. exact (EQ_MP (@lem2643601) (@lem0)). Qed.
Lemma lem2643603 : term113.
Proof. exact (@lem2643592 (@lem2643602)). Qed.
Lemma lem2643605 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643606 : term109 = term110.
Proof. exact (@lem2643605 (NUMERAL 0) term32). Qed.
Lemma lem2643607 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643608 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643609 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643608 h1) (fun h1 : term110 = True => @lem2643607)). Qed.
Lemma lem2643610 : term110 = True.
Proof. exact (EQ_MP (@lem2643609) (@lem2643607)). Qed.
Lemma lem2643611 : term109 = True.
Proof. exact (TRANS (@lem2643606) (@lem2643610)). Qed.
Lemma lem2643612 : True = term109.
Proof. exact (SYM (@lem2643611)). Qed.
Lemma lem2643613 : term109.
Proof. exact (EQ_MP (@lem2643612) (@lem0)). Qed.
Lemma lem2643614 : term114.
Proof. exact (@lem2643603 (@lem2643613)). Qed.
Lemma lem2643616 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643617 : term117 = term118.
Proof. exact (@lem2643616 term32 term32). Qed.
Lemma lem2643618 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643619 : term120 = term32.
Proof. exact (EQ_MP (@lem2643618) (@lem940073)). Qed.
Lemma lem2643620 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643621 : term118 = term31.
Proof. exact (MK_COMB (@lem2643620) (@lem2643619)). Qed.
Lemma lem2643622 : term117 = term31.
Proof. exact (TRANS (@lem2643617) (@lem2643621)). Qed.
Lemma lem2643624 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643625 : term123 = term124.
Proof. exact (@lem2643624 term32 term32). Qed.
Lemma lem2643626 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643627 : term120 = term32.
Proof. exact (EQ_MP (@lem2643626) (@lem940073)). Qed.
Lemma lem2643628 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643629 : term118 = term31.
Proof. exact (MK_COMB (@lem2643628) (@lem2643627)). Qed.
Lemma lem2643630 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643631 : term124 = term97.
Proof. exact (MK_COMB (@lem2643630) (@lem2643629)). Qed.
Lemma lem2643632 : term123 = term97.
Proof. exact (TRANS (@lem2643625) (@lem2643631)). Qed.
Lemma lem2643633 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643634 : term125 = term103.
Proof. exact (MK_COMB (@lem2643633) (@lem2643632)). Qed.
Lemma lem2643635 : term126 = term105.
Proof. exact (MK_COMB (@lem2643634) (@lem2643622)). Qed.
Lemma lem2643637 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2643638 : term105 = term38.
Proof. exact (@lem2643637 term32). Qed.
Lemma lem2643639 : term126 = term38.
Proof. exact (TRANS (@lem2643635) (@lem2643638)). Qed.
Lemma lem2643640 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643641 : term128 = term129.
Proof. exact (MK_COMB (@lem2643640) (@lem2643639)). Qed.
Lemma lem2643642 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2643643 : term130 = term131.
Proof. exact (MK_COMB (@lem2643641) (@lem2643642)). Qed.
Lemma lem2643645 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643646 : term131 = term38.
Proof. exact (@lem2643645 term32). Qed.
Lemma lem2643647 : term130 = term38.
Proof. exact (TRANS (@lem2643643) (@lem2643646)). Qed.
Lemma lem2643649 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643650 : term117 = term118.
Proof. exact (@lem2643649 term32 term32). Qed.
Lemma lem2643651 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643652 : term120 = term32.
Proof. exact (EQ_MP (@lem2643651) (@lem940073)). Qed.
Lemma lem2643653 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643654 : term118 = term31.
Proof. exact (MK_COMB (@lem2643653) (@lem2643652)). Qed.
Lemma lem2643655 : term117 = term31.
Proof. exact (TRANS (@lem2643650) (@lem2643654)). Qed.
Lemma lem2643656 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2643657 : term133 = term131.
Proof. exact (MK_COMB (@lem2643656) (@lem2643655)). Qed.
Lemma lem2643659 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643660 : term131 = term38.
Proof. exact (@lem2643659 term32). Qed.
Lemma lem2643661 : term133 = term38.
Proof. exact (TRANS (@lem2643657) (@lem2643660)). Qed.
Lemma lem2643662 : term38 = term133.
Proof. exact (SYM (@lem2643661)). Qed.
Lemma lem2643663 : term130 = term133.
Proof. exact (TRANS (@lem2643647) (@lem2643662)). Qed.
Lemma lem2643664 : term106 = term134.
Proof. exact (@lem2643614 (@lem2643663)). Qed.
Lemma lem2643665 : term105 = term134.
Proof. exact (TRANS (@lem2643580) (@lem2643664)). Qed.
Lemma lem2643667 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2643668 : term134 = term38.
Proof. exact (@lem2643667 term38). Qed.
Lemma lem2643669 : term105 = term38.
Proof. exact (TRANS (@lem2643665) (@lem2643668)). Qed.
Lemma lem2643670 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643671 : term136 = term129.
Proof. exact (MK_COMB (@lem2643670) (@lem2643669)). Qed.
Lemma lem2643672 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2643673 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2643671) (@lem2643672 m)). Qed.
Lemma lem2643674 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2643571 m) (@lem2643673 m)). Qed.
Lemma lem2643675 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2643676 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2643674 m) (@lem2643675 m)). Qed.
Lemma lem2643677 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643678 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2643677) (@lem2643676 m)). Qed.
Lemma lem2643679 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2643680 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2643682 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643683 : term31 = term99.
Proof. exact (@lem2643682 term32). Qed.
Lemma lem2643685 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643686 : term97 = term102.
Proof. exact (@lem2643685 term32). Qed.
Lemma lem2643687 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643688 : term103 = term104.
Proof. exact (MK_COMB (@lem2643687) (@lem2643686)). Qed.
Lemma lem2643689 : term105 = term106.
Proof. exact (MK_COMB (@lem2643688) (@lem2643683)). Qed.
Lemma lem2643690 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2643692 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643693 : term109 = term110.
Proof. exact (@lem2643692 (NUMERAL 0) term32). Qed.
Lemma lem2643694 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643695 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643696 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643695 h1) (fun h1 : term110 = True => @lem2643694)). Qed.
Lemma lem2643697 : term110 = True.
Proof. exact (EQ_MP (@lem2643696) (@lem2643694)). Qed.
Lemma lem2643698 : term109 = True.
Proof. exact (TRANS (@lem2643693) (@lem2643697)). Qed.
Lemma lem2643699 : True = term109.
Proof. exact (SYM (@lem2643698)). Qed.
Lemma lem2643700 : term109.
Proof. exact (EQ_MP (@lem2643699) (@lem0)). Qed.
Lemma lem2643701 : term112.
Proof. exact (@lem2643690 (@lem2643700)). Qed.
Lemma lem2643703 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643704 : term109 = term110.
Proof. exact (@lem2643703 (NUMERAL 0) term32). Qed.
Lemma lem2643705 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643706 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643707 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643706 h1) (fun h1 : term110 = True => @lem2643705)). Qed.
Lemma lem2643708 : term110 = True.
Proof. exact (EQ_MP (@lem2643707) (@lem2643705)). Qed.
Lemma lem2643709 : term109 = True.
Proof. exact (TRANS (@lem2643704) (@lem2643708)). Qed.
Lemma lem2643710 : True = term109.
Proof. exact (SYM (@lem2643709)). Qed.
Lemma lem2643711 : term109.
Proof. exact (EQ_MP (@lem2643710) (@lem0)). Qed.
Lemma lem2643712 : term113.
Proof. exact (@lem2643701 (@lem2643711)). Qed.
Lemma lem2643714 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643715 : term109 = term110.
Proof. exact (@lem2643714 (NUMERAL 0) term32). Qed.
Lemma lem2643716 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643717 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643718 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643717 h1) (fun h1 : term110 = True => @lem2643716)). Qed.
Lemma lem2643719 : term110 = True.
Proof. exact (EQ_MP (@lem2643718) (@lem2643716)). Qed.
Lemma lem2643720 : term109 = True.
Proof. exact (TRANS (@lem2643715) (@lem2643719)). Qed.
Lemma lem2643721 : True = term109.
Proof. exact (SYM (@lem2643720)). Qed.
Lemma lem2643722 : term109.
Proof. exact (EQ_MP (@lem2643721) (@lem0)). Qed.
Lemma lem2643723 : term114.
Proof. exact (@lem2643712 (@lem2643722)). Qed.
Lemma lem2643725 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643726 : term117 = term118.
Proof. exact (@lem2643725 term32 term32). Qed.
Lemma lem2643727 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643728 : term120 = term32.
Proof. exact (EQ_MP (@lem2643727) (@lem940073)). Qed.
Lemma lem2643729 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643730 : term118 = term31.
Proof. exact (MK_COMB (@lem2643729) (@lem2643728)). Qed.
Lemma lem2643731 : term117 = term31.
Proof. exact (TRANS (@lem2643726) (@lem2643730)). Qed.
Lemma lem2643733 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643734 : term123 = term124.
Proof. exact (@lem2643733 term32 term32). Qed.
Lemma lem2643735 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643736 : term120 = term32.
Proof. exact (EQ_MP (@lem2643735) (@lem940073)). Qed.
Lemma lem2643737 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643738 : term118 = term31.
Proof. exact (MK_COMB (@lem2643737) (@lem2643736)). Qed.
Lemma lem2643739 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643740 : term124 = term97.
Proof. exact (MK_COMB (@lem2643739) (@lem2643738)). Qed.
Lemma lem2643741 : term123 = term97.
Proof. exact (TRANS (@lem2643734) (@lem2643740)). Qed.
Lemma lem2643742 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643743 : term125 = term103.
Proof. exact (MK_COMB (@lem2643742) (@lem2643741)). Qed.
Lemma lem2643744 : term126 = term105.
Proof. exact (MK_COMB (@lem2643743) (@lem2643731)). Qed.
Lemma lem2643746 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2643747 : term105 = term38.
Proof. exact (@lem2643746 term32). Qed.
Lemma lem2643748 : term126 = term38.
Proof. exact (TRANS (@lem2643744) (@lem2643747)). Qed.
Lemma lem2643749 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643750 : term128 = term129.
Proof. exact (MK_COMB (@lem2643749) (@lem2643748)). Qed.
Lemma lem2643751 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2643752 : term130 = term131.
Proof. exact (MK_COMB (@lem2643750) (@lem2643751)). Qed.
Lemma lem2643754 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643755 : term131 = term38.
Proof. exact (@lem2643754 term32). Qed.
Lemma lem2643756 : term130 = term38.
Proof. exact (TRANS (@lem2643752) (@lem2643755)). Qed.
Lemma lem2643758 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643759 : term117 = term118.
Proof. exact (@lem2643758 term32 term32). Qed.
Lemma lem2643760 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643761 : term120 = term32.
Proof. exact (EQ_MP (@lem2643760) (@lem940073)). Qed.
Lemma lem2643762 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643763 : term118 = term31.
Proof. exact (MK_COMB (@lem2643762) (@lem2643761)). Qed.
Lemma lem2643764 : term117 = term31.
Proof. exact (TRANS (@lem2643759) (@lem2643763)). Qed.
Lemma lem2643765 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2643766 : term133 = term131.
Proof. exact (MK_COMB (@lem2643765) (@lem2643764)). Qed.
Lemma lem2643768 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643769 : term131 = term38.
Proof. exact (@lem2643768 term32). Qed.
Lemma lem2643770 : term133 = term38.
Proof. exact (TRANS (@lem2643766) (@lem2643769)). Qed.
Lemma lem2643771 : term38 = term133.
Proof. exact (SYM (@lem2643770)). Qed.
Lemma lem2643772 : term130 = term133.
Proof. exact (TRANS (@lem2643756) (@lem2643771)). Qed.
Lemma lem2643773 : term106 = term134.
Proof. exact (@lem2643723 (@lem2643772)). Qed.
Lemma lem2643774 : term105 = term134.
Proof. exact (TRANS (@lem2643689) (@lem2643773)). Qed.
Lemma lem2643776 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2643777 : term134 = term38.
Proof. exact (@lem2643776 term38). Qed.
Lemma lem2643778 : term105 = term38.
Proof. exact (TRANS (@lem2643774) (@lem2643777)). Qed.
Lemma lem2643779 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2643780 : term136 = term129.
Proof. exact (MK_COMB (@lem2643779) (@lem2643778)). Qed.
Lemma lem2643781 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2643782 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2643780) (@lem2643781 n)). Qed.
Lemma lem2643783 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2643680 n) (@lem2643782 n)). Qed.
Lemma lem2643784 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2643785 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2643783 n) (@lem2643784 n)). Qed.
Lemma lem2643786 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2643787 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2643786) (@lem2643785 n)). Qed.
Lemma lem2643788 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2643789 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2643787 n) (@lem2643788)). Qed.
Lemma lem2643790 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2643679 n) (@lem2643789 n)). Qed.
Lemma lem2643791 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2643792 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2643790 n) (@lem2643791)). Qed.
Lemma lem2643793 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2643678 m) (@lem2643792 n)). Qed.
Lemma lem2643794 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2643570 m n) (@lem2643793 m n)). Qed.
Lemma lem2643795 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2643796 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2643794 m n) (@lem2643795)). Qed.
Lemma lem2643797 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643798 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2643797) (@lem2643796 m n)). Qed.
Lemma lem2643799 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643800 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2643798 m n) (@lem2643799)). Qed.
Lemma lem2643801 (m : int) (n : int) (h1 : term1013 m n) : term257.
Proof. exact (EQ_MP (@lem2643800 m n) (@lem2643569 m n h1)). Qed.
Lemma lem2643803 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2643804 : term257 = term258.
Proof. exact (@lem2643803 term38 term97). Qed.
Lemma lem2643806 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2643807 : term97 = term102.
Proof. exact (@lem2643806 term32). Qed.
Lemma lem2643809 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643810 : term38 = term134.
Proof. exact (@lem2643809 (NUMERAL 0)). Qed.
Lemma lem2643811 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2643812 : term259 = term260.
Proof. exact (MK_COMB (@lem2643811) (@lem2643810)). Qed.
Lemma lem2643813 : term258 = term261.
Proof. exact (MK_COMB (@lem2643812) (@lem2643807)). Qed.
Lemma lem2643814 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2643816 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643817 : term109 = term110.
Proof. exact (@lem2643816 (NUMERAL 0) term32). Qed.
Lemma lem2643818 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643819 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643820 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643819 h1) (fun h1 : term110 = True => @lem2643818)). Qed.
Lemma lem2643821 : term110 = True.
Proof. exact (EQ_MP (@lem2643820) (@lem2643818)). Qed.
Lemma lem2643822 : term109 = True.
Proof. exact (TRANS (@lem2643817) (@lem2643821)). Qed.
Lemma lem2643823 : True = term109.
Proof. exact (SYM (@lem2643822)). Qed.
Lemma lem2643824 : term109.
Proof. exact (EQ_MP (@lem2643823) (@lem0)). Qed.
Lemma lem2643825 : term263.
Proof. exact (@lem2643814 (@lem2643824)). Qed.
Lemma lem2643827 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643828 : term109 = term110.
Proof. exact (@lem2643827 (NUMERAL 0) term32). Qed.
Lemma lem2643829 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643830 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643831 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643830 h1) (fun h1 : term110 = True => @lem2643829)). Qed.
Lemma lem2643832 : term110 = True.
Proof. exact (EQ_MP (@lem2643831) (@lem2643829)). Qed.
Lemma lem2643833 : term109 = True.
Proof. exact (TRANS (@lem2643828) (@lem2643832)). Qed.
Lemma lem2643834 : True = term109.
Proof. exact (SYM (@lem2643833)). Qed.
Lemma lem2643835 : term109.
Proof. exact (EQ_MP (@lem2643834) (@lem0)). Qed.
Lemma lem2643836 : term261 = term264.
Proof. exact (@lem2643825 (@lem2643835)). Qed.
Lemma lem2643838 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2643839 : term123 = term124.
Proof. exact (@lem2643838 term32 term32). Qed.
Lemma lem2643840 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643841 : term120 = term32.
Proof. exact (EQ_MP (@lem2643840) (@lem940073)). Qed.
Lemma lem2643842 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643843 : term118 = term31.
Proof. exact (MK_COMB (@lem2643842) (@lem2643841)). Qed.
Lemma lem2643844 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2643845 : term124 = term97.
Proof. exact (MK_COMB (@lem2643844) (@lem2643843)). Qed.
Lemma lem2643846 : term123 = term97.
Proof. exact (TRANS (@lem2643839) (@lem2643845)). Qed.
Lemma lem2643848 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643849 : term131 = term38.
Proof. exact (@lem2643848 term32). Qed.
Lemma lem2643850 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2643851 : term265 = term259.
Proof. exact (MK_COMB (@lem2643850) (@lem2643849)). Qed.
Lemma lem2643852 : term264 = term258.
Proof. exact (MK_COMB (@lem2643851) (@lem2643846)). Qed.
Lemma lem2643854 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2643855 : term258 = term268.
Proof. exact (@lem2643854 (NUMERAL 0) term32). Qed.
Lemma lem2643856 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643857 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2643858 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643857 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2643856)). Qed.
Lemma lem2643859 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2643858) (@lem2643856)). Qed.
Lemma lem2643860 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2643861 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2643862 : term269 = (and True).
Proof. exact (MK_COMB (@lem2643861) (@lem2643860)). Qed.
Lemma lem2643863 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2643862) (@lem2643859)). Qed.
Lemma lem2643865 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2643866 : term268 = False.
Proof. exact (TRANS (@lem2643863) (@lem2643865)). Qed.
Lemma lem2643867 : term258 = False.
Proof. exact (TRANS (@lem2643855) (@lem2643866)). Qed.
Lemma lem2643868 : term264 = False.
Proof. exact (TRANS (@lem2643852) (@lem2643867)). Qed.
Lemma lem2643869 : term261 = False.
Proof. exact (TRANS (@lem2643836) (@lem2643868)). Qed.
Lemma lem2643870 : term258 = False.
Proof. exact (TRANS (@lem2643813) (@lem2643869)). Qed.
Lemma lem2643871 : term257 = False.
Proof. exact (TRANS (@lem2643804) (@lem2643870)). Qed.
Lemma lem2643872 (m : int) (n : int) (h1 : term1013 m n) : False.
Proof. exact (EQ_MP (@lem2643871) (@lem2643801 m n h1)). Qed.
Lemma lem2643873 (m : int) (n : int) (h1 : term1015 m n) : term1015 m n.
Proof. exact (h1). Qed.
Lemma lem2643874 (m : int) (n : int) (h1 : term1015 m n) : term1014 m n.
Proof. exact (proj2 (@lem2643873 m n h1)). Qed.
Lemma lem2643876 (m : int) (n : int) (h1 : term1015 m n) : term751 m n.
Proof. exact (proj2 (@lem2643874 m n h1)). Qed.
Lemma lem2643877 (m : int) (n : int) (h1 : term1015 m n) : term896 m n.
Proof. exact (proj1 (@lem2643874 m n h1)). Qed.
Lemma lem2643879 (m : int) (n : int) (h1 : term1015 m n) : term853 m n.
Proof. exact (proj1 (@lem2643877 m n h1)). Qed.
Lemma lem2643880 (m : int) (n : int) (h1 : term1015 m n) : term807 m n.
Proof. exact (proj2 (@lem2643879 m n h1)). Qed.
Lemma lem2643882 (m : int) (n : int) (h1 : term1015 m n) : term805 m n.
Proof. exact (proj2 (@lem2643880 m n h1)). Qed.
Lemma lem2643884 (m : int) (n : int) (h1 : term1015 m n) : term749 m n.
Proof. exact (proj2 (@lem2643876 m n h1)). Qed.
Lemma lem2643887 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2643888 : term229 = term109.
Proof. exact (@lem2643887 term38 term31). Qed.
Lemma lem2643890 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643891 : term31 = term99.
Proof. exact (@lem2643890 term32). Qed.
Lemma lem2643893 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643894 : term38 = term134.
Proof. exact (@lem2643893 (NUMERAL 0)). Qed.
Lemma lem2643895 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643896 : term230 = term231.
Proof. exact (MK_COMB (@lem2643895) (@lem2643894)). Qed.
Lemma lem2643897 : term109 = term232.
Proof. exact (MK_COMB (@lem2643896) (@lem2643891)). Qed.
Lemma lem2643898 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2643900 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643901 : term109 = term110.
Proof. exact (@lem2643900 (NUMERAL 0) term32). Qed.
Lemma lem2643902 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643903 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643904 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643903 h1) (fun h1 : term110 = True => @lem2643902)). Qed.
Lemma lem2643905 : term110 = True.
Proof. exact (EQ_MP (@lem2643904) (@lem2643902)). Qed.
Lemma lem2643906 : term109 = True.
Proof. exact (TRANS (@lem2643901) (@lem2643905)). Qed.
Lemma lem2643907 : True = term109.
Proof. exact (SYM (@lem2643906)). Qed.
Lemma lem2643908 : term109.
Proof. exact (EQ_MP (@lem2643907) (@lem0)). Qed.
Lemma lem2643909 : term234.
Proof. exact (@lem2643898 (@lem2643908)). Qed.
Lemma lem2643911 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643912 : term109 = term110.
Proof. exact (@lem2643911 (NUMERAL 0) term32). Qed.
Lemma lem2643913 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643914 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643915 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643914 h1) (fun h1 : term110 = True => @lem2643913)). Qed.
Lemma lem2643916 : term110 = True.
Proof. exact (EQ_MP (@lem2643915) (@lem2643913)). Qed.
Lemma lem2643917 : term109 = True.
Proof. exact (TRANS (@lem2643912) (@lem2643916)). Qed.
Lemma lem2643918 : True = term109.
Proof. exact (SYM (@lem2643917)). Qed.
Lemma lem2643919 : term109.
Proof. exact (EQ_MP (@lem2643918) (@lem0)). Qed.
Lemma lem2643920 : term232 = term235.
Proof. exact (@lem2643909 (@lem2643919)). Qed.
Lemma lem2643922 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643923 : term117 = term118.
Proof. exact (@lem2643922 term32 term32). Qed.
Lemma lem2643924 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643925 : term120 = term32.
Proof. exact (EQ_MP (@lem2643924) (@lem940073)). Qed.
Lemma lem2643926 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2643927 : term118 = term31.
Proof. exact (MK_COMB (@lem2643926) (@lem2643925)). Qed.
Lemma lem2643928 : term117 = term31.
Proof. exact (TRANS (@lem2643923) (@lem2643927)). Qed.
Lemma lem2643930 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2643931 : term131 = term38.
Proof. exact (@lem2643930 term32). Qed.
Lemma lem2643932 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643933 : term236 = term230.
Proof. exact (MK_COMB (@lem2643932) (@lem2643931)). Qed.
Lemma lem2643934 : term235 = term109.
Proof. exact (MK_COMB (@lem2643933) (@lem2643928)). Qed.
Lemma lem2643936 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643937 : term109 = term110.
Proof. exact (@lem2643936 (NUMERAL 0) term32). Qed.
Lemma lem2643938 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643939 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643940 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643939 h1) (fun h1 : term110 = True => @lem2643938)). Qed.
Lemma lem2643941 : term110 = True.
Proof. exact (EQ_MP (@lem2643940) (@lem2643938)). Qed.
Lemma lem2643942 : term109 = True.
Proof. exact (TRANS (@lem2643937) (@lem2643941)). Qed.
Lemma lem2643943 : term235 = True.
Proof. exact (TRANS (@lem2643934) (@lem2643942)). Qed.
Lemma lem2643944 : term232 = True.
Proof. exact (TRANS (@lem2643920) (@lem2643943)). Qed.
Lemma lem2643945 : term109 = True.
Proof. exact (TRANS (@lem2643897) (@lem2643944)). Qed.
Lemma lem2643946 : term229 = True.
Proof. exact (TRANS (@lem2643888) (@lem2643945)). Qed.
Lemma lem2643947 : True = term229.
Proof. exact (SYM (@lem2643946)). Qed.
Lemma lem2643948 : term229.
Proof. exact (EQ_MP (@lem2643947) (@lem0)). Qed.
Lemma lem2643949 (m : int) (n : int) (h1 : term1015 m n) : term1174 m n.
Proof. exact (conj (@lem2643948) (@lem2643882 m n h1)). Qed.
Lemma lem2643951 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2643952 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2643951 term31 (term25 m n)). Qed.
Lemma lem2643953 (m : int) (n : int) (h1 : term1015 m n) : term1176 m n.
Proof. exact (@lem2643952 m n (@lem2643949 m n h1)). Qed.
Lemma lem2643954 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2643955 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2643956 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2643955) (@lem2643954 m n)). Qed.
Lemma lem2643957 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2643958 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2643956 m n) (@lem2643957)). Qed.
Lemma lem2643959 (m : int) (n : int) (h1 : term1015 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2643958 m n) (@lem2643953 m n h1)). Qed.
Lemma lem2643961 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2643962 : term229 = term109.
Proof. exact (@lem2643961 term38 term31). Qed.
Lemma lem2643964 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643965 : term31 = term99.
Proof. exact (@lem2643964 term32). Qed.
Lemma lem2643967 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2643968 : term38 = term134.
Proof. exact (@lem2643967 (NUMERAL 0)). Qed.
Lemma lem2643969 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2643970 : term230 = term231.
Proof. exact (MK_COMB (@lem2643969) (@lem2643968)). Qed.
Lemma lem2643971 : term109 = term232.
Proof. exact (MK_COMB (@lem2643970) (@lem2643965)). Qed.
Lemma lem2643972 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2643974 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643975 : term109 = term110.
Proof. exact (@lem2643974 (NUMERAL 0) term32). Qed.
Lemma lem2643976 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643977 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643978 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643977 h1) (fun h1 : term110 = True => @lem2643976)). Qed.
Lemma lem2643979 : term110 = True.
Proof. exact (EQ_MP (@lem2643978) (@lem2643976)). Qed.
Lemma lem2643980 : term109 = True.
Proof. exact (TRANS (@lem2643975) (@lem2643979)). Qed.
Lemma lem2643981 : True = term109.
Proof. exact (SYM (@lem2643980)). Qed.
Lemma lem2643982 : term109.
Proof. exact (EQ_MP (@lem2643981) (@lem0)). Qed.
Lemma lem2643983 : term234.
Proof. exact (@lem2643972 (@lem2643982)). Qed.
Lemma lem2643985 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2643986 : term109 = term110.
Proof. exact (@lem2643985 (NUMERAL 0) term32). Qed.
Lemma lem2643987 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2643988 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2643989 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2643988 h1) (fun h1 : term110 = True => @lem2643987)). Qed.
Lemma lem2643990 : term110 = True.
Proof. exact (EQ_MP (@lem2643989) (@lem2643987)). Qed.
Lemma lem2643991 : term109 = True.
Proof. exact (TRANS (@lem2643986) (@lem2643990)). Qed.
Lemma lem2643992 : True = term109.
Proof. exact (SYM (@lem2643991)). Qed.
Lemma lem2643993 : term109.
Proof. exact (EQ_MP (@lem2643992) (@lem0)). Qed.
Lemma lem2643994 : term232 = term235.
Proof. exact (@lem2643983 (@lem2643993)). Qed.
Lemma lem2643996 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2643997 : term117 = term118.
Proof. exact (@lem2643996 term32 term32). Qed.
Lemma lem2643998 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2643999 : term120 = term32.
Proof. exact (EQ_MP (@lem2643998) (@lem940073)). Qed.
Lemma lem2644000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644001 : term118 = term31.
Proof. exact (MK_COMB (@lem2644000) (@lem2643999)). Qed.
Lemma lem2644002 : term117 = term31.
Proof. exact (TRANS (@lem2643997) (@lem2644001)). Qed.
Lemma lem2644004 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644005 : term131 = term38.
Proof. exact (@lem2644004 term32). Qed.
Lemma lem2644006 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644007 : term236 = term230.
Proof. exact (MK_COMB (@lem2644006) (@lem2644005)). Qed.
Lemma lem2644008 : term235 = term109.
Proof. exact (MK_COMB (@lem2644007) (@lem2644002)). Qed.
Lemma lem2644010 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644011 : term109 = term110.
Proof. exact (@lem2644010 (NUMERAL 0) term32). Qed.
Lemma lem2644012 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644013 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644014 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644013 h1) (fun h1 : term110 = True => @lem2644012)). Qed.
Lemma lem2644015 : term110 = True.
Proof. exact (EQ_MP (@lem2644014) (@lem2644012)). Qed.
Lemma lem2644016 : term109 = True.
Proof. exact (TRANS (@lem2644011) (@lem2644015)). Qed.
Lemma lem2644017 : term235 = True.
Proof. exact (TRANS (@lem2644008) (@lem2644016)). Qed.
Lemma lem2644018 : term232 = True.
Proof. exact (TRANS (@lem2643994) (@lem2644017)). Qed.
Lemma lem2644019 : term109 = True.
Proof. exact (TRANS (@lem2643971) (@lem2644018)). Qed.
Lemma lem2644020 : term229 = True.
Proof. exact (TRANS (@lem2643962) (@lem2644019)). Qed.
Lemma lem2644021 : True = term229.
Proof. exact (SYM (@lem2644020)). Qed.
Lemma lem2644022 : term229.
Proof. exact (EQ_MP (@lem2644021) (@lem0)). Qed.
Lemma lem2644023 (m : int) (n : int) (h1 : term1015 m n) : term1179 m n.
Proof. exact (conj (@lem2644022) (@lem2643884 m n h1)). Qed.
Lemma lem2644025 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2644026 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2644025 term31 (term739 m n)). Qed.
Lemma lem2644027 (m : int) (n : int) (h1 : term1015 m n) : term1181 m n.
Proof. exact (@lem2644026 m n (@lem2644023 m n h1)). Qed.
Lemma lem2644028 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2644029 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644030 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2644029) (@lem2644028 m n)). Qed.
Lemma lem2644031 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644032 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2644030 m n) (@lem2644031)). Qed.
Lemma lem2644033 (m : int) (n : int) (h1 : term1015 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2644032 m n) (@lem2644027 m n h1)). Qed.
Lemma lem2644034 (m : int) (n : int) (h1 : term1015 m n) : term1184 m n.
Proof. exact (conj (@lem2644033 m n h1) (@lem2643959 m n h1)). Qed.
Lemma lem2644036 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2644037 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2644036 (term739 m n) (term25 m n)). Qed.
Lemma lem2644038 (m : int) (n : int) (h1 : term1015 m n) : term1186 m n.
Proof. exact (@lem2644037 m n (@lem2644034 m n h1)). Qed.
Lemma lem2644039 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2644040 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2644042 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644043 : term31 = term99.
Proof. exact (@lem2644042 term32). Qed.
Lemma lem2644045 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644046 : term97 = term102.
Proof. exact (@lem2644045 term32). Qed.
Lemma lem2644047 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644048 : term103 = term104.
Proof. exact (MK_COMB (@lem2644047) (@lem2644046)). Qed.
Lemma lem2644049 : term105 = term106.
Proof. exact (MK_COMB (@lem2644048) (@lem2644043)). Qed.
Lemma lem2644050 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2644052 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644053 : term109 = term110.
Proof. exact (@lem2644052 (NUMERAL 0) term32). Qed.
Lemma lem2644054 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644055 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644056 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644055 h1) (fun h1 : term110 = True => @lem2644054)). Qed.
Lemma lem2644057 : term110 = True.
Proof. exact (EQ_MP (@lem2644056) (@lem2644054)). Qed.
Lemma lem2644058 : term109 = True.
Proof. exact (TRANS (@lem2644053) (@lem2644057)). Qed.
Lemma lem2644059 : True = term109.
Proof. exact (SYM (@lem2644058)). Qed.
Lemma lem2644060 : term109.
Proof. exact (EQ_MP (@lem2644059) (@lem0)). Qed.
Lemma lem2644061 : term112.
Proof. exact (@lem2644050 (@lem2644060)). Qed.
Lemma lem2644063 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644064 : term109 = term110.
Proof. exact (@lem2644063 (NUMERAL 0) term32). Qed.
Lemma lem2644065 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644066 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644067 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644066 h1) (fun h1 : term110 = True => @lem2644065)). Qed.
Lemma lem2644068 : term110 = True.
Proof. exact (EQ_MP (@lem2644067) (@lem2644065)). Qed.
Lemma lem2644069 : term109 = True.
Proof. exact (TRANS (@lem2644064) (@lem2644068)). Qed.
Lemma lem2644070 : True = term109.
Proof. exact (SYM (@lem2644069)). Qed.
Lemma lem2644071 : term109.
Proof. exact (EQ_MP (@lem2644070) (@lem0)). Qed.
Lemma lem2644072 : term113.
Proof. exact (@lem2644061 (@lem2644071)). Qed.
Lemma lem2644074 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644075 : term109 = term110.
Proof. exact (@lem2644074 (NUMERAL 0) term32). Qed.
Lemma lem2644076 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644077 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644078 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644077 h1) (fun h1 : term110 = True => @lem2644076)). Qed.
Lemma lem2644079 : term110 = True.
Proof. exact (EQ_MP (@lem2644078) (@lem2644076)). Qed.
Lemma lem2644080 : term109 = True.
Proof. exact (TRANS (@lem2644075) (@lem2644079)). Qed.
Lemma lem2644081 : True = term109.
Proof. exact (SYM (@lem2644080)). Qed.
Lemma lem2644082 : term109.
Proof. exact (EQ_MP (@lem2644081) (@lem0)). Qed.
Lemma lem2644083 : term114.
Proof. exact (@lem2644072 (@lem2644082)). Qed.
Lemma lem2644085 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644086 : term117 = term118.
Proof. exact (@lem2644085 term32 term32). Qed.
Lemma lem2644087 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644088 : term120 = term32.
Proof. exact (EQ_MP (@lem2644087) (@lem940073)). Qed.
Lemma lem2644089 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644090 : term118 = term31.
Proof. exact (MK_COMB (@lem2644089) (@lem2644088)). Qed.
Lemma lem2644091 : term117 = term31.
Proof. exact (TRANS (@lem2644086) (@lem2644090)). Qed.
Lemma lem2644093 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644094 : term123 = term124.
Proof. exact (@lem2644093 term32 term32). Qed.
Lemma lem2644095 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644096 : term120 = term32.
Proof. exact (EQ_MP (@lem2644095) (@lem940073)). Qed.
Lemma lem2644097 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644098 : term118 = term31.
Proof. exact (MK_COMB (@lem2644097) (@lem2644096)). Qed.
Lemma lem2644099 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644100 : term124 = term97.
Proof. exact (MK_COMB (@lem2644099) (@lem2644098)). Qed.
Lemma lem2644101 : term123 = term97.
Proof. exact (TRANS (@lem2644094) (@lem2644100)). Qed.
Lemma lem2644102 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644103 : term125 = term103.
Proof. exact (MK_COMB (@lem2644102) (@lem2644101)). Qed.
Lemma lem2644104 : term126 = term105.
Proof. exact (MK_COMB (@lem2644103) (@lem2644091)). Qed.
Lemma lem2644106 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2644107 : term105 = term38.
Proof. exact (@lem2644106 term32). Qed.
Lemma lem2644108 : term126 = term38.
Proof. exact (TRANS (@lem2644104) (@lem2644107)). Qed.
Lemma lem2644109 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644110 : term128 = term129.
Proof. exact (MK_COMB (@lem2644109) (@lem2644108)). Qed.
Lemma lem2644111 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2644112 : term130 = term131.
Proof. exact (MK_COMB (@lem2644110) (@lem2644111)). Qed.
Lemma lem2644114 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644115 : term131 = term38.
Proof. exact (@lem2644114 term32). Qed.
Lemma lem2644116 : term130 = term38.
Proof. exact (TRANS (@lem2644112) (@lem2644115)). Qed.
Lemma lem2644118 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644119 : term117 = term118.
Proof. exact (@lem2644118 term32 term32). Qed.
Lemma lem2644120 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644121 : term120 = term32.
Proof. exact (EQ_MP (@lem2644120) (@lem940073)). Qed.
Lemma lem2644122 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644123 : term118 = term31.
Proof. exact (MK_COMB (@lem2644122) (@lem2644121)). Qed.
Lemma lem2644124 : term117 = term31.
Proof. exact (TRANS (@lem2644119) (@lem2644123)). Qed.
Lemma lem2644125 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2644126 : term133 = term131.
Proof. exact (MK_COMB (@lem2644125) (@lem2644124)). Qed.
Lemma lem2644128 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644129 : term131 = term38.
Proof. exact (@lem2644128 term32). Qed.
Lemma lem2644130 : term133 = term38.
Proof. exact (TRANS (@lem2644126) (@lem2644129)). Qed.
Lemma lem2644131 : term38 = term133.
Proof. exact (SYM (@lem2644130)). Qed.
Lemma lem2644132 : term130 = term133.
Proof. exact (TRANS (@lem2644116) (@lem2644131)). Qed.
Lemma lem2644133 : term106 = term134.
Proof. exact (@lem2644083 (@lem2644132)). Qed.
Lemma lem2644134 : term105 = term134.
Proof. exact (TRANS (@lem2644049) (@lem2644133)). Qed.
Lemma lem2644136 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2644137 : term134 = term38.
Proof. exact (@lem2644136 term38). Qed.
Lemma lem2644138 : term105 = term38.
Proof. exact (TRANS (@lem2644134) (@lem2644137)). Qed.
Lemma lem2644139 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644140 : term136 = term129.
Proof. exact (MK_COMB (@lem2644139) (@lem2644138)). Qed.
Lemma lem2644141 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2644142 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2644140) (@lem2644141 m)). Qed.
Lemma lem2644143 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2644040 m) (@lem2644142 m)). Qed.
Lemma lem2644144 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2644145 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2644143 m) (@lem2644144 m)). Qed.
Lemma lem2644146 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644147 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2644146) (@lem2644145 m)). Qed.
Lemma lem2644148 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2644149 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2644151 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644152 : term31 = term99.
Proof. exact (@lem2644151 term32). Qed.
Lemma lem2644154 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644155 : term97 = term102.
Proof. exact (@lem2644154 term32). Qed.
Lemma lem2644156 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644157 : term103 = term104.
Proof. exact (MK_COMB (@lem2644156) (@lem2644155)). Qed.
Lemma lem2644158 : term105 = term106.
Proof. exact (MK_COMB (@lem2644157) (@lem2644152)). Qed.
Lemma lem2644159 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2644161 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644162 : term109 = term110.
Proof. exact (@lem2644161 (NUMERAL 0) term32). Qed.
Lemma lem2644163 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644164 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644165 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644164 h1) (fun h1 : term110 = True => @lem2644163)). Qed.
Lemma lem2644166 : term110 = True.
Proof. exact (EQ_MP (@lem2644165) (@lem2644163)). Qed.
Lemma lem2644167 : term109 = True.
Proof. exact (TRANS (@lem2644162) (@lem2644166)). Qed.
Lemma lem2644168 : True = term109.
Proof. exact (SYM (@lem2644167)). Qed.
Lemma lem2644169 : term109.
Proof. exact (EQ_MP (@lem2644168) (@lem0)). Qed.
Lemma lem2644170 : term112.
Proof. exact (@lem2644159 (@lem2644169)). Qed.
Lemma lem2644172 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644173 : term109 = term110.
Proof. exact (@lem2644172 (NUMERAL 0) term32). Qed.
Lemma lem2644174 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644175 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644176 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644175 h1) (fun h1 : term110 = True => @lem2644174)). Qed.
Lemma lem2644177 : term110 = True.
Proof. exact (EQ_MP (@lem2644176) (@lem2644174)). Qed.
Lemma lem2644178 : term109 = True.
Proof. exact (TRANS (@lem2644173) (@lem2644177)). Qed.
Lemma lem2644179 : True = term109.
Proof. exact (SYM (@lem2644178)). Qed.
Lemma lem2644180 : term109.
Proof. exact (EQ_MP (@lem2644179) (@lem0)). Qed.
Lemma lem2644181 : term113.
Proof. exact (@lem2644170 (@lem2644180)). Qed.
Lemma lem2644183 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644184 : term109 = term110.
Proof. exact (@lem2644183 (NUMERAL 0) term32). Qed.
Lemma lem2644185 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644186 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644187 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644186 h1) (fun h1 : term110 = True => @lem2644185)). Qed.
Lemma lem2644188 : term110 = True.
Proof. exact (EQ_MP (@lem2644187) (@lem2644185)). Qed.
Lemma lem2644189 : term109 = True.
Proof. exact (TRANS (@lem2644184) (@lem2644188)). Qed.
Lemma lem2644190 : True = term109.
Proof. exact (SYM (@lem2644189)). Qed.
Lemma lem2644191 : term109.
Proof. exact (EQ_MP (@lem2644190) (@lem0)). Qed.
Lemma lem2644192 : term114.
Proof. exact (@lem2644181 (@lem2644191)). Qed.
Lemma lem2644194 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644195 : term117 = term118.
Proof. exact (@lem2644194 term32 term32). Qed.
Lemma lem2644196 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644197 : term120 = term32.
Proof. exact (EQ_MP (@lem2644196) (@lem940073)). Qed.
Lemma lem2644198 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644199 : term118 = term31.
Proof. exact (MK_COMB (@lem2644198) (@lem2644197)). Qed.
Lemma lem2644200 : term117 = term31.
Proof. exact (TRANS (@lem2644195) (@lem2644199)). Qed.
Lemma lem2644202 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644203 : term123 = term124.
Proof. exact (@lem2644202 term32 term32). Qed.
Lemma lem2644204 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644205 : term120 = term32.
Proof. exact (EQ_MP (@lem2644204) (@lem940073)). Qed.
Lemma lem2644206 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644207 : term118 = term31.
Proof. exact (MK_COMB (@lem2644206) (@lem2644205)). Qed.
Lemma lem2644208 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644209 : term124 = term97.
Proof. exact (MK_COMB (@lem2644208) (@lem2644207)). Qed.
Lemma lem2644210 : term123 = term97.
Proof. exact (TRANS (@lem2644203) (@lem2644209)). Qed.
Lemma lem2644211 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644212 : term125 = term103.
Proof. exact (MK_COMB (@lem2644211) (@lem2644210)). Qed.
Lemma lem2644213 : term126 = term105.
Proof. exact (MK_COMB (@lem2644212) (@lem2644200)). Qed.
Lemma lem2644215 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2644216 : term105 = term38.
Proof. exact (@lem2644215 term32). Qed.
Lemma lem2644217 : term126 = term38.
Proof. exact (TRANS (@lem2644213) (@lem2644216)). Qed.
Lemma lem2644218 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644219 : term128 = term129.
Proof. exact (MK_COMB (@lem2644218) (@lem2644217)). Qed.
Lemma lem2644220 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2644221 : term130 = term131.
Proof. exact (MK_COMB (@lem2644219) (@lem2644220)). Qed.
Lemma lem2644223 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644224 : term131 = term38.
Proof. exact (@lem2644223 term32). Qed.
Lemma lem2644225 : term130 = term38.
Proof. exact (TRANS (@lem2644221) (@lem2644224)). Qed.
Lemma lem2644227 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644228 : term117 = term118.
Proof. exact (@lem2644227 term32 term32). Qed.
Lemma lem2644229 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644230 : term120 = term32.
Proof. exact (EQ_MP (@lem2644229) (@lem940073)). Qed.
Lemma lem2644231 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644232 : term118 = term31.
Proof. exact (MK_COMB (@lem2644231) (@lem2644230)). Qed.
Lemma lem2644233 : term117 = term31.
Proof. exact (TRANS (@lem2644228) (@lem2644232)). Qed.
Lemma lem2644234 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2644235 : term133 = term131.
Proof. exact (MK_COMB (@lem2644234) (@lem2644233)). Qed.
Lemma lem2644237 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644238 : term131 = term38.
Proof. exact (@lem2644237 term32). Qed.
Lemma lem2644239 : term133 = term38.
Proof. exact (TRANS (@lem2644235) (@lem2644238)). Qed.
Lemma lem2644240 : term38 = term133.
Proof. exact (SYM (@lem2644239)). Qed.
Lemma lem2644241 : term130 = term133.
Proof. exact (TRANS (@lem2644225) (@lem2644240)). Qed.
Lemma lem2644242 : term106 = term134.
Proof. exact (@lem2644192 (@lem2644241)). Qed.
Lemma lem2644243 : term105 = term134.
Proof. exact (TRANS (@lem2644158) (@lem2644242)). Qed.
Lemma lem2644245 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2644246 : term134 = term38.
Proof. exact (@lem2644245 term38). Qed.
Lemma lem2644247 : term105 = term38.
Proof. exact (TRANS (@lem2644243) (@lem2644246)). Qed.
Lemma lem2644248 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644249 : term136 = term129.
Proof. exact (MK_COMB (@lem2644248) (@lem2644247)). Qed.
Lemma lem2644250 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2644251 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2644249) (@lem2644250 n)). Qed.
Lemma lem2644252 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2644149 n) (@lem2644251 n)). Qed.
Lemma lem2644253 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2644254 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2644252 n) (@lem2644253 n)). Qed.
Lemma lem2644255 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644256 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2644255) (@lem2644254 n)). Qed.
Lemma lem2644257 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2644258 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2644256 n) (@lem2644257)). Qed.
Lemma lem2644259 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2644148 n) (@lem2644258 n)). Qed.
Lemma lem2644260 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2644261 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2644259 n) (@lem2644260)). Qed.
Lemma lem2644262 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2644147 m) (@lem2644261 n)). Qed.
Lemma lem2644263 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2644039 m n) (@lem2644262 m n)). Qed.
Lemma lem2644264 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2644265 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2644263 m n) (@lem2644264)). Qed.
Lemma lem2644266 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644267 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2644266) (@lem2644265 m n)). Qed.
Lemma lem2644268 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644269 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2644267 m n) (@lem2644268)). Qed.
Lemma lem2644270 (m : int) (n : int) (h1 : term1015 m n) : term257.
Proof. exact (EQ_MP (@lem2644269 m n) (@lem2644038 m n h1)). Qed.
Lemma lem2644272 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2644273 : term257 = term258.
Proof. exact (@lem2644272 term38 term97). Qed.
Lemma lem2644275 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644276 : term97 = term102.
Proof. exact (@lem2644275 term32). Qed.
Lemma lem2644278 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644279 : term38 = term134.
Proof. exact (@lem2644278 (NUMERAL 0)). Qed.
Lemma lem2644280 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2644281 : term259 = term260.
Proof. exact (MK_COMB (@lem2644280) (@lem2644279)). Qed.
Lemma lem2644282 : term258 = term261.
Proof. exact (MK_COMB (@lem2644281) (@lem2644276)). Qed.
Lemma lem2644283 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2644285 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644286 : term109 = term110.
Proof. exact (@lem2644285 (NUMERAL 0) term32). Qed.
Lemma lem2644287 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644288 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644289 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644288 h1) (fun h1 : term110 = True => @lem2644287)). Qed.
Lemma lem2644290 : term110 = True.
Proof. exact (EQ_MP (@lem2644289) (@lem2644287)). Qed.
Lemma lem2644291 : term109 = True.
Proof. exact (TRANS (@lem2644286) (@lem2644290)). Qed.
Lemma lem2644292 : True = term109.
Proof. exact (SYM (@lem2644291)). Qed.
Lemma lem2644293 : term109.
Proof. exact (EQ_MP (@lem2644292) (@lem0)). Qed.
Lemma lem2644294 : term263.
Proof. exact (@lem2644283 (@lem2644293)). Qed.
Lemma lem2644296 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644297 : term109 = term110.
Proof. exact (@lem2644296 (NUMERAL 0) term32). Qed.
Lemma lem2644298 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644299 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644300 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644299 h1) (fun h1 : term110 = True => @lem2644298)). Qed.
Lemma lem2644301 : term110 = True.
Proof. exact (EQ_MP (@lem2644300) (@lem2644298)). Qed.
Lemma lem2644302 : term109 = True.
Proof. exact (TRANS (@lem2644297) (@lem2644301)). Qed.
Lemma lem2644303 : True = term109.
Proof. exact (SYM (@lem2644302)). Qed.
Lemma lem2644304 : term109.
Proof. exact (EQ_MP (@lem2644303) (@lem0)). Qed.
Lemma lem2644305 : term261 = term264.
Proof. exact (@lem2644294 (@lem2644304)). Qed.
Lemma lem2644307 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644308 : term123 = term124.
Proof. exact (@lem2644307 term32 term32). Qed.
Lemma lem2644309 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644310 : term120 = term32.
Proof. exact (EQ_MP (@lem2644309) (@lem940073)). Qed.
Lemma lem2644311 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644312 : term118 = term31.
Proof. exact (MK_COMB (@lem2644311) (@lem2644310)). Qed.
Lemma lem2644313 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644314 : term124 = term97.
Proof. exact (MK_COMB (@lem2644313) (@lem2644312)). Qed.
Lemma lem2644315 : term123 = term97.
Proof. exact (TRANS (@lem2644308) (@lem2644314)). Qed.
Lemma lem2644317 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644318 : term131 = term38.
Proof. exact (@lem2644317 term32). Qed.
Lemma lem2644319 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2644320 : term265 = term259.
Proof. exact (MK_COMB (@lem2644319) (@lem2644318)). Qed.
Lemma lem2644321 : term264 = term258.
Proof. exact (MK_COMB (@lem2644320) (@lem2644315)). Qed.
Lemma lem2644323 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2644324 : term258 = term268.
Proof. exact (@lem2644323 (NUMERAL 0) term32). Qed.
Lemma lem2644325 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644326 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2644327 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644326 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2644325)). Qed.
Lemma lem2644328 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2644327) (@lem2644325)). Qed.
Lemma lem2644329 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2644330 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2644331 : term269 = (and True).
Proof. exact (MK_COMB (@lem2644330) (@lem2644329)). Qed.
Lemma lem2644332 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2644331) (@lem2644328)). Qed.
Lemma lem2644334 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2644335 : term268 = False.
Proof. exact (TRANS (@lem2644332) (@lem2644334)). Qed.
Lemma lem2644336 : term258 = False.
Proof. exact (TRANS (@lem2644324) (@lem2644335)). Qed.
Lemma lem2644337 : term264 = False.
Proof. exact (TRANS (@lem2644321) (@lem2644336)). Qed.
Lemma lem2644338 : term261 = False.
Proof. exact (TRANS (@lem2644305) (@lem2644337)). Qed.
Lemma lem2644339 : term258 = False.
Proof. exact (TRANS (@lem2644282) (@lem2644338)). Qed.
Lemma lem2644340 : term257 = False.
Proof. exact (TRANS (@lem2644273) (@lem2644339)). Qed.
Lemma lem2644341 (m : int) (n : int) (h1 : term1015 m n) : False.
Proof. exact (EQ_MP (@lem2644340) (@lem2644270 m n h1)). Qed.
Lemma lem2644342 (m : int) (n : int) (h1 : term1017 m n) : False.
Proof. exact (or_elim (@lem2643403 m n h1) (fun h0 : term1013 m n => @lem2643872 m n h0) (fun h0 : term1015 m n => @lem2644341 m n h0)). Qed.
Lemma lem2644343 (m : int) (n : int) (h1 : term1020 m n) : False.
Proof. exact (or_elim (@lem2642462 m n h1) (fun h0 : term994 m n => @lem2643402 m n h0) (fun h0 : term1017 m n => @lem2644342 m n h0)). Qed.
Lemma lem2644344 (m : int) (n : int) (h1 : term1022 m n) : False.
Proof. exact (or_elim (@lem2641039 m n h1) (fun h0 : term971 m n => @lem2642461 m n h0) (fun h0 : term1020 m n => @lem2644343 m n h0)). Qed.
Lemma lem2644345 (m : int) (n : int) (h1 : term1122 m n) : term1122 m n.
Proof. exact (h1). Qed.
Lemma lem2644346 (m : int) (n : int) (h1 : term1071 m n) : term1071 m n.
Proof. exact (h1). Qed.
Lemma lem2644347 (m : int) (n : int) (h1 : term1045 m n) : term1045 m n.
Proof. exact (h1). Qed.
Lemma lem2644348 (m : int) (n : int) (h1 : term1041 m n) : term1041 m n.
Proof. exact (h1). Qed.
Lemma lem2644349 (m : int) (n : int) (h1 : term1041 m n) : term1040 m n.
Proof. exact (proj2 (@lem2644348 m n h1)). Qed.
Lemma lem2644351 (m : int) (n : int) (h1 : term1041 m n) : term716 m n.
Proof. exact (proj2 (@lem2644349 m n h1)). Qed.
Lemma lem2644352 (m : int) (n : int) (h1 : term1041 m n) : term585 m n.
Proof. exact (proj1 (@lem2644349 m n h1)). Qed.
Lemma lem2644354 (m : int) (n : int) (h1 : term1041 m n) : term555 n m.
Proof. exact (proj1 (@lem2644352 m n h1)). Qed.
Lemma lem2644355 (m : int) (n : int) (h1 : term1041 m n) : term158 m.
Proof. exact (proj2 (@lem2644354 m n h1)). Qed.
Lemma lem2644358 (m : int) (n : int) (h1 : term1041 m n) : term457 m.
Proof. exact (proj1 (@lem2644351 m n h1)). Qed.
Lemma lem2644360 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2644361 : term229 = term109.
Proof. exact (@lem2644360 term38 term31). Qed.
Lemma lem2644363 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644364 : term31 = term99.
Proof. exact (@lem2644363 term32). Qed.
Lemma lem2644366 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644367 : term38 = term134.
Proof. exact (@lem2644366 (NUMERAL 0)). Qed.
Lemma lem2644368 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644369 : term230 = term231.
Proof. exact (MK_COMB (@lem2644368) (@lem2644367)). Qed.
Lemma lem2644370 : term109 = term232.
Proof. exact (MK_COMB (@lem2644369) (@lem2644364)). Qed.
Lemma lem2644371 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2644373 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644374 : term109 = term110.
Proof. exact (@lem2644373 (NUMERAL 0) term32). Qed.
Lemma lem2644375 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644376 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644377 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644376 h1) (fun h1 : term110 = True => @lem2644375)). Qed.
Lemma lem2644378 : term110 = True.
Proof. exact (EQ_MP (@lem2644377) (@lem2644375)). Qed.
Lemma lem2644379 : term109 = True.
Proof. exact (TRANS (@lem2644374) (@lem2644378)). Qed.
Lemma lem2644380 : True = term109.
Proof. exact (SYM (@lem2644379)). Qed.
Lemma lem2644381 : term109.
Proof. exact (EQ_MP (@lem2644380) (@lem0)). Qed.
Lemma lem2644382 : term234.
Proof. exact (@lem2644371 (@lem2644381)). Qed.
Lemma lem2644384 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644385 : term109 = term110.
Proof. exact (@lem2644384 (NUMERAL 0) term32). Qed.
Lemma lem2644386 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644387 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644388 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644387 h1) (fun h1 : term110 = True => @lem2644386)). Qed.
Lemma lem2644389 : term110 = True.
Proof. exact (EQ_MP (@lem2644388) (@lem2644386)). Qed.
Lemma lem2644390 : term109 = True.
Proof. exact (TRANS (@lem2644385) (@lem2644389)). Qed.
Lemma lem2644391 : True = term109.
Proof. exact (SYM (@lem2644390)). Qed.
Lemma lem2644392 : term109.
Proof. exact (EQ_MP (@lem2644391) (@lem0)). Qed.
Lemma lem2644393 : term232 = term235.
Proof. exact (@lem2644382 (@lem2644392)). Qed.
Lemma lem2644395 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644396 : term117 = term118.
Proof. exact (@lem2644395 term32 term32). Qed.
Lemma lem2644397 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644398 : term120 = term32.
Proof. exact (EQ_MP (@lem2644397) (@lem940073)). Qed.
Lemma lem2644399 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644400 : term118 = term31.
Proof. exact (MK_COMB (@lem2644399) (@lem2644398)). Qed.
Lemma lem2644401 : term117 = term31.
Proof. exact (TRANS (@lem2644396) (@lem2644400)). Qed.
Lemma lem2644403 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644404 : term131 = term38.
Proof. exact (@lem2644403 term32). Qed.
Lemma lem2644405 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644406 : term236 = term230.
Proof. exact (MK_COMB (@lem2644405) (@lem2644404)). Qed.
Lemma lem2644407 : term235 = term109.
Proof. exact (MK_COMB (@lem2644406) (@lem2644401)). Qed.
Lemma lem2644409 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644410 : term109 = term110.
Proof. exact (@lem2644409 (NUMERAL 0) term32). Qed.
Lemma lem2644411 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644412 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644413 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644412 h1) (fun h1 : term110 = True => @lem2644411)). Qed.
Lemma lem2644414 : term110 = True.
Proof. exact (EQ_MP (@lem2644413) (@lem2644411)). Qed.
Lemma lem2644415 : term109 = True.
Proof. exact (TRANS (@lem2644410) (@lem2644414)). Qed.
Lemma lem2644416 : term235 = True.
Proof. exact (TRANS (@lem2644407) (@lem2644415)). Qed.
Lemma lem2644417 : term232 = True.
Proof. exact (TRANS (@lem2644393) (@lem2644416)). Qed.
Lemma lem2644418 : term109 = True.
Proof. exact (TRANS (@lem2644370) (@lem2644417)). Qed.
Lemma lem2644419 : term229 = True.
Proof. exact (TRANS (@lem2644361) (@lem2644418)). Qed.
Lemma lem2644420 : True = term229.
Proof. exact (SYM (@lem2644419)). Qed.
Lemma lem2644421 : term229.
Proof. exact (EQ_MP (@lem2644420) (@lem0)). Qed.
Lemma lem2644422 (m : int) (n : int) (h1 : term1041 m n) : term1129 m.
Proof. exact (conj (@lem2644421) (@lem2644358 m n h1)). Qed.
Lemma lem2644424 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2644425 (m : int) : term1130 m.
Proof. exact (@lem2644424 term31 (real_of_int m)). Qed.
Lemma lem2644426 (m : int) (n : int) (h1 : term1041 m n) : term1131 m.
Proof. exact (@lem2644425 m (@lem2644422 m n h1)). Qed.
Lemma lem2644427 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2644428 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644429 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2644428) (@lem2644427 m)). Qed.
Lemma lem2644430 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644431 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2644429 m) (@lem2644430)). Qed.
Lemma lem2644432 (m : int) (n : int) (h1 : term1041 m n) : term457 m.
Proof. exact (EQ_MP (@lem2644431 m) (@lem2644426 m n h1)). Qed.
Lemma lem2644434 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2644435 : term229 = term109.
Proof. exact (@lem2644434 term38 term31). Qed.
Lemma lem2644437 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644438 : term31 = term99.
Proof. exact (@lem2644437 term32). Qed.
Lemma lem2644440 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644441 : term38 = term134.
Proof. exact (@lem2644440 (NUMERAL 0)). Qed.
Lemma lem2644442 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644443 : term230 = term231.
Proof. exact (MK_COMB (@lem2644442) (@lem2644441)). Qed.
Lemma lem2644444 : term109 = term232.
Proof. exact (MK_COMB (@lem2644443) (@lem2644438)). Qed.
Lemma lem2644445 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2644447 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644448 : term109 = term110.
Proof. exact (@lem2644447 (NUMERAL 0) term32). Qed.
Lemma lem2644449 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644450 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644451 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644450 h1) (fun h1 : term110 = True => @lem2644449)). Qed.
Lemma lem2644452 : term110 = True.
Proof. exact (EQ_MP (@lem2644451) (@lem2644449)). Qed.
Lemma lem2644453 : term109 = True.
Proof. exact (TRANS (@lem2644448) (@lem2644452)). Qed.
Lemma lem2644454 : True = term109.
Proof. exact (SYM (@lem2644453)). Qed.
Lemma lem2644455 : term109.
Proof. exact (EQ_MP (@lem2644454) (@lem0)). Qed.
Lemma lem2644456 : term234.
Proof. exact (@lem2644445 (@lem2644455)). Qed.
Lemma lem2644458 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644459 : term109 = term110.
Proof. exact (@lem2644458 (NUMERAL 0) term32). Qed.
Lemma lem2644460 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644461 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644462 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644461 h1) (fun h1 : term110 = True => @lem2644460)). Qed.
Lemma lem2644463 : term110 = True.
Proof. exact (EQ_MP (@lem2644462) (@lem2644460)). Qed.
Lemma lem2644464 : term109 = True.
Proof. exact (TRANS (@lem2644459) (@lem2644463)). Qed.
Lemma lem2644465 : True = term109.
Proof. exact (SYM (@lem2644464)). Qed.
Lemma lem2644466 : term109.
Proof. exact (EQ_MP (@lem2644465) (@lem0)). Qed.
Lemma lem2644467 : term232 = term235.
Proof. exact (@lem2644456 (@lem2644466)). Qed.
Lemma lem2644469 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644470 : term117 = term118.
Proof. exact (@lem2644469 term32 term32). Qed.
Lemma lem2644471 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644472 : term120 = term32.
Proof. exact (EQ_MP (@lem2644471) (@lem940073)). Qed.
Lemma lem2644473 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644474 : term118 = term31.
Proof. exact (MK_COMB (@lem2644473) (@lem2644472)). Qed.
Lemma lem2644475 : term117 = term31.
Proof. exact (TRANS (@lem2644470) (@lem2644474)). Qed.
Lemma lem2644477 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644478 : term131 = term38.
Proof. exact (@lem2644477 term32). Qed.
Lemma lem2644479 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644480 : term236 = term230.
Proof. exact (MK_COMB (@lem2644479) (@lem2644478)). Qed.
Lemma lem2644481 : term235 = term109.
Proof. exact (MK_COMB (@lem2644480) (@lem2644475)). Qed.
Lemma lem2644483 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644484 : term109 = term110.
Proof. exact (@lem2644483 (NUMERAL 0) term32). Qed.
Lemma lem2644485 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644486 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644487 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644486 h1) (fun h1 : term110 = True => @lem2644485)). Qed.
Lemma lem2644488 : term110 = True.
Proof. exact (EQ_MP (@lem2644487) (@lem2644485)). Qed.
Lemma lem2644489 : term109 = True.
Proof. exact (TRANS (@lem2644484) (@lem2644488)). Qed.
Lemma lem2644490 : term235 = True.
Proof. exact (TRANS (@lem2644481) (@lem2644489)). Qed.
Lemma lem2644491 : term232 = True.
Proof. exact (TRANS (@lem2644467) (@lem2644490)). Qed.
Lemma lem2644492 : term109 = True.
Proof. exact (TRANS (@lem2644444) (@lem2644491)). Qed.
Lemma lem2644493 : term229 = True.
Proof. exact (TRANS (@lem2644435) (@lem2644492)). Qed.
Lemma lem2644494 : True = term229.
Proof. exact (SYM (@lem2644493)). Qed.
Lemma lem2644495 : term229.
Proof. exact (EQ_MP (@lem2644494) (@lem0)). Qed.
Lemma lem2644496 (m : int) (n : int) (h1 : term1041 m n) : term237 m.
Proof. exact (conj (@lem2644495) (@lem2644355 m n h1)). Qed.
Lemma lem2644498 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2644499 (m : int) : term239 m.
Proof. exact (@lem2644498 term31 (term154 m)). Qed.
Lemma lem2644500 (m : int) (n : int) (h1 : term1041 m n) : term240 m.
Proof. exact (@lem2644499 m (@lem2644496 m n h1)). Qed.
Lemma lem2644501 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2644502 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644503 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2644502) (@lem2644501 m)). Qed.
Lemma lem2644504 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644505 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2644503 m) (@lem2644504)). Qed.
Lemma lem2644506 (m : int) (n : int) (h1 : term1041 m n) : term158 m.
Proof. exact (EQ_MP (@lem2644505 m) (@lem2644500 m n h1)). Qed.
Lemma lem2644507 (m : int) (n : int) (h1 : term1041 m n) : term1133 m.
Proof. exact (conj (@lem2644506 m n h1) (@lem2644432 m n h1)). Qed.
Lemma lem2644509 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2644510 (m : int) : term1135 m.
Proof. exact (@lem2644509 (term154 m) (real_of_int m)). Qed.
Lemma lem2644511 (m : int) (n : int) (h1 : term1041 m n) : term1136 m.
Proof. exact (@lem2644510 m (@lem2644507 m n h1)). Qed.
Lemma lem2644512 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2644513 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2644515 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644516 : term31 = term99.
Proof. exact (@lem2644515 term32). Qed.
Lemma lem2644518 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644519 : term97 = term102.
Proof. exact (@lem2644518 term32). Qed.
Lemma lem2644520 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644521 : term103 = term104.
Proof. exact (MK_COMB (@lem2644520) (@lem2644519)). Qed.
Lemma lem2644522 : term105 = term106.
Proof. exact (MK_COMB (@lem2644521) (@lem2644516)). Qed.
Lemma lem2644523 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2644525 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644526 : term109 = term110.
Proof. exact (@lem2644525 (NUMERAL 0) term32). Qed.
Lemma lem2644527 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644528 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644529 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644528 h1) (fun h1 : term110 = True => @lem2644527)). Qed.
Lemma lem2644530 : term110 = True.
Proof. exact (EQ_MP (@lem2644529) (@lem2644527)). Qed.
Lemma lem2644531 : term109 = True.
Proof. exact (TRANS (@lem2644526) (@lem2644530)). Qed.
Lemma lem2644532 : True = term109.
Proof. exact (SYM (@lem2644531)). Qed.
Lemma lem2644533 : term109.
Proof. exact (EQ_MP (@lem2644532) (@lem0)). Qed.
Lemma lem2644534 : term112.
Proof. exact (@lem2644523 (@lem2644533)). Qed.
Lemma lem2644536 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644537 : term109 = term110.
Proof. exact (@lem2644536 (NUMERAL 0) term32). Qed.
Lemma lem2644538 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644539 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644540 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644539 h1) (fun h1 : term110 = True => @lem2644538)). Qed.
Lemma lem2644541 : term110 = True.
Proof. exact (EQ_MP (@lem2644540) (@lem2644538)). Qed.
Lemma lem2644542 : term109 = True.
Proof. exact (TRANS (@lem2644537) (@lem2644541)). Qed.
Lemma lem2644543 : True = term109.
Proof. exact (SYM (@lem2644542)). Qed.
Lemma lem2644544 : term109.
Proof. exact (EQ_MP (@lem2644543) (@lem0)). Qed.
Lemma lem2644545 : term113.
Proof. exact (@lem2644534 (@lem2644544)). Qed.
Lemma lem2644547 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644548 : term109 = term110.
Proof. exact (@lem2644547 (NUMERAL 0) term32). Qed.
Lemma lem2644549 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644550 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644551 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644550 h1) (fun h1 : term110 = True => @lem2644549)). Qed.
Lemma lem2644552 : term110 = True.
Proof. exact (EQ_MP (@lem2644551) (@lem2644549)). Qed.
Lemma lem2644553 : term109 = True.
Proof. exact (TRANS (@lem2644548) (@lem2644552)). Qed.
Lemma lem2644554 : True = term109.
Proof. exact (SYM (@lem2644553)). Qed.
Lemma lem2644555 : term109.
Proof. exact (EQ_MP (@lem2644554) (@lem0)). Qed.
Lemma lem2644556 : term114.
Proof. exact (@lem2644545 (@lem2644555)). Qed.
Lemma lem2644558 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644559 : term117 = term118.
Proof. exact (@lem2644558 term32 term32). Qed.
Lemma lem2644560 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644561 : term120 = term32.
Proof. exact (EQ_MP (@lem2644560) (@lem940073)). Qed.
Lemma lem2644562 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644563 : term118 = term31.
Proof. exact (MK_COMB (@lem2644562) (@lem2644561)). Qed.
Lemma lem2644564 : term117 = term31.
Proof. exact (TRANS (@lem2644559) (@lem2644563)). Qed.
Lemma lem2644566 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644567 : term123 = term124.
Proof. exact (@lem2644566 term32 term32). Qed.
Lemma lem2644568 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644569 : term120 = term32.
Proof. exact (EQ_MP (@lem2644568) (@lem940073)). Qed.
Lemma lem2644570 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644571 : term118 = term31.
Proof. exact (MK_COMB (@lem2644570) (@lem2644569)). Qed.
Lemma lem2644572 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644573 : term124 = term97.
Proof. exact (MK_COMB (@lem2644572) (@lem2644571)). Qed.
Lemma lem2644574 : term123 = term97.
Proof. exact (TRANS (@lem2644567) (@lem2644573)). Qed.
Lemma lem2644575 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644576 : term125 = term103.
Proof. exact (MK_COMB (@lem2644575) (@lem2644574)). Qed.
Lemma lem2644577 : term126 = term105.
Proof. exact (MK_COMB (@lem2644576) (@lem2644564)). Qed.
Lemma lem2644579 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2644580 : term105 = term38.
Proof. exact (@lem2644579 term32). Qed.
Lemma lem2644581 : term126 = term38.
Proof. exact (TRANS (@lem2644577) (@lem2644580)). Qed.
Lemma lem2644582 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644583 : term128 = term129.
Proof. exact (MK_COMB (@lem2644582) (@lem2644581)). Qed.
Lemma lem2644584 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2644585 : term130 = term131.
Proof. exact (MK_COMB (@lem2644583) (@lem2644584)). Qed.
Lemma lem2644587 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644588 : term131 = term38.
Proof. exact (@lem2644587 term32). Qed.
Lemma lem2644589 : term130 = term38.
Proof. exact (TRANS (@lem2644585) (@lem2644588)). Qed.
Lemma lem2644591 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644592 : term117 = term118.
Proof. exact (@lem2644591 term32 term32). Qed.
Lemma lem2644593 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644594 : term120 = term32.
Proof. exact (EQ_MP (@lem2644593) (@lem940073)). Qed.
Lemma lem2644595 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644596 : term118 = term31.
Proof. exact (MK_COMB (@lem2644595) (@lem2644594)). Qed.
Lemma lem2644597 : term117 = term31.
Proof. exact (TRANS (@lem2644592) (@lem2644596)). Qed.
Lemma lem2644598 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2644599 : term133 = term131.
Proof. exact (MK_COMB (@lem2644598) (@lem2644597)). Qed.
Lemma lem2644601 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644602 : term131 = term38.
Proof. exact (@lem2644601 term32). Qed.
Lemma lem2644603 : term133 = term38.
Proof. exact (TRANS (@lem2644599) (@lem2644602)). Qed.
Lemma lem2644604 : term38 = term133.
Proof. exact (SYM (@lem2644603)). Qed.
Lemma lem2644605 : term130 = term133.
Proof. exact (TRANS (@lem2644589) (@lem2644604)). Qed.
Lemma lem2644606 : term106 = term134.
Proof. exact (@lem2644556 (@lem2644605)). Qed.
Lemma lem2644607 : term105 = term134.
Proof. exact (TRANS (@lem2644522) (@lem2644606)). Qed.
Lemma lem2644609 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2644610 : term134 = term38.
Proof. exact (@lem2644609 term38). Qed.
Lemma lem2644611 : term105 = term38.
Proof. exact (TRANS (@lem2644607) (@lem2644610)). Qed.
Lemma lem2644612 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644613 : term136 = term129.
Proof. exact (MK_COMB (@lem2644612) (@lem2644611)). Qed.
Lemma lem2644614 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2644615 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2644613) (@lem2644614 m)). Qed.
Lemma lem2644616 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2644513 m) (@lem2644615 m)). Qed.
Lemma lem2644617 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2644618 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2644616 m) (@lem2644617 m)). Qed.
Lemma lem2644619 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644620 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2644619) (@lem2644618 m)). Qed.
Lemma lem2644621 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2644622 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2644620 m) (@lem2644621)). Qed.
Lemma lem2644623 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2644512 m) (@lem2644622 m)). Qed.
Lemma lem2644624 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2644625 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2644623 m) (@lem2644624)). Qed.
Lemma lem2644626 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644627 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2644626) (@lem2644625 m)). Qed.
Lemma lem2644628 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644629 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2644627 m) (@lem2644628)). Qed.
Lemma lem2644630 (m : int) (n : int) (h1 : term1041 m n) : term257.
Proof. exact (EQ_MP (@lem2644629 m) (@lem2644511 m n h1)). Qed.
Lemma lem2644632 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2644633 : term257 = term258.
Proof. exact (@lem2644632 term38 term97). Qed.
Lemma lem2644635 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644636 : term97 = term102.
Proof. exact (@lem2644635 term32). Qed.
Lemma lem2644638 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644639 : term38 = term134.
Proof. exact (@lem2644638 (NUMERAL 0)). Qed.
Lemma lem2644640 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2644641 : term259 = term260.
Proof. exact (MK_COMB (@lem2644640) (@lem2644639)). Qed.
Lemma lem2644642 : term258 = term261.
Proof. exact (MK_COMB (@lem2644641) (@lem2644636)). Qed.
Lemma lem2644643 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2644645 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644646 : term109 = term110.
Proof. exact (@lem2644645 (NUMERAL 0) term32). Qed.
Lemma lem2644647 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644648 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644649 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644648 h1) (fun h1 : term110 = True => @lem2644647)). Qed.
Lemma lem2644650 : term110 = True.
Proof. exact (EQ_MP (@lem2644649) (@lem2644647)). Qed.
Lemma lem2644651 : term109 = True.
Proof. exact (TRANS (@lem2644646) (@lem2644650)). Qed.
Lemma lem2644652 : True = term109.
Proof. exact (SYM (@lem2644651)). Qed.
Lemma lem2644653 : term109.
Proof. exact (EQ_MP (@lem2644652) (@lem0)). Qed.
Lemma lem2644654 : term263.
Proof. exact (@lem2644643 (@lem2644653)). Qed.
Lemma lem2644656 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644657 : term109 = term110.
Proof. exact (@lem2644656 (NUMERAL 0) term32). Qed.
Lemma lem2644658 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644659 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644660 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644659 h1) (fun h1 : term110 = True => @lem2644658)). Qed.
Lemma lem2644661 : term110 = True.
Proof. exact (EQ_MP (@lem2644660) (@lem2644658)). Qed.
Lemma lem2644662 : term109 = True.
Proof. exact (TRANS (@lem2644657) (@lem2644661)). Qed.
Lemma lem2644663 : True = term109.
Proof. exact (SYM (@lem2644662)). Qed.
Lemma lem2644664 : term109.
Proof. exact (EQ_MP (@lem2644663) (@lem0)). Qed.
Lemma lem2644665 : term261 = term264.
Proof. exact (@lem2644654 (@lem2644664)). Qed.
Lemma lem2644667 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644668 : term123 = term124.
Proof. exact (@lem2644667 term32 term32). Qed.
Lemma lem2644669 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644670 : term120 = term32.
Proof. exact (EQ_MP (@lem2644669) (@lem940073)). Qed.
Lemma lem2644671 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644672 : term118 = term31.
Proof. exact (MK_COMB (@lem2644671) (@lem2644670)). Qed.
Lemma lem2644673 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644674 : term124 = term97.
Proof. exact (MK_COMB (@lem2644673) (@lem2644672)). Qed.
Lemma lem2644675 : term123 = term97.
Proof. exact (TRANS (@lem2644668) (@lem2644674)). Qed.
Lemma lem2644677 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644678 : term131 = term38.
Proof. exact (@lem2644677 term32). Qed.
Lemma lem2644679 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2644680 : term265 = term259.
Proof. exact (MK_COMB (@lem2644679) (@lem2644678)). Qed.
Lemma lem2644681 : term264 = term258.
Proof. exact (MK_COMB (@lem2644680) (@lem2644675)). Qed.
Lemma lem2644683 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2644684 : term258 = term268.
Proof. exact (@lem2644683 (NUMERAL 0) term32). Qed.
Lemma lem2644685 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644686 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2644687 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644686 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2644685)). Qed.
Lemma lem2644688 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2644687) (@lem2644685)). Qed.
Lemma lem2644689 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2644690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2644691 : term269 = (and True).
Proof. exact (MK_COMB (@lem2644690) (@lem2644689)). Qed.
Lemma lem2644692 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2644691) (@lem2644688)). Qed.
Lemma lem2644694 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2644695 : term268 = False.
Proof. exact (TRANS (@lem2644692) (@lem2644694)). Qed.
Lemma lem2644696 : term258 = False.
Proof. exact (TRANS (@lem2644684) (@lem2644695)). Qed.
Lemma lem2644697 : term264 = False.
Proof. exact (TRANS (@lem2644681) (@lem2644696)). Qed.
Lemma lem2644698 : term261 = False.
Proof. exact (TRANS (@lem2644665) (@lem2644697)). Qed.
Lemma lem2644699 : term258 = False.
Proof. exact (TRANS (@lem2644642) (@lem2644698)). Qed.
Lemma lem2644700 : term257 = False.
Proof. exact (TRANS (@lem2644633) (@lem2644699)). Qed.
Lemma lem2644701 (m : int) (n : int) (h1 : term1041 m n) : False.
Proof. exact (EQ_MP (@lem2644700) (@lem2644630 m n h1)). Qed.
Lemma lem2644702 (m : int) (n : int) (h1 : term1043 m n) : term1043 m n.
Proof. exact (h1). Qed.
Lemma lem2644703 (m : int) (n : int) (h1 : term1043 m n) : term1042 m n.
Proof. exact (proj2 (@lem2644702 m n h1)). Qed.
Lemma lem2644705 (m : int) (n : int) (h1 : term1043 m n) : term751 m n.
Proof. exact (proj2 (@lem2644703 m n h1)). Qed.
Lemma lem2644706 (m : int) (n : int) (h1 : term1043 m n) : term585 m n.
Proof. exact (proj1 (@lem2644703 m n h1)). Qed.
Lemma lem2644708 (m : int) (n : int) (h1 : term1043 m n) : term555 n m.
Proof. exact (proj1 (@lem2644706 m n h1)). Qed.
Lemma lem2644709 (m : int) (n : int) (h1 : term1043 m n) : term158 m.
Proof. exact (proj2 (@lem2644708 m n h1)). Qed.
Lemma lem2644712 (m : int) (n : int) (h1 : term1043 m n) : term457 m.
Proof. exact (proj1 (@lem2644705 m n h1)). Qed.
Lemma lem2644714 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2644715 : term229 = term109.
Proof. exact (@lem2644714 term38 term31). Qed.
Lemma lem2644717 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644718 : term31 = term99.
Proof. exact (@lem2644717 term32). Qed.
Lemma lem2644720 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644721 : term38 = term134.
Proof. exact (@lem2644720 (NUMERAL 0)). Qed.
Lemma lem2644722 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644723 : term230 = term231.
Proof. exact (MK_COMB (@lem2644722) (@lem2644721)). Qed.
Lemma lem2644724 : term109 = term232.
Proof. exact (MK_COMB (@lem2644723) (@lem2644718)). Qed.
Lemma lem2644725 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2644727 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644728 : term109 = term110.
Proof. exact (@lem2644727 (NUMERAL 0) term32). Qed.
Lemma lem2644729 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644730 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644731 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644730 h1) (fun h1 : term110 = True => @lem2644729)). Qed.
Lemma lem2644732 : term110 = True.
Proof. exact (EQ_MP (@lem2644731) (@lem2644729)). Qed.
Lemma lem2644733 : term109 = True.
Proof. exact (TRANS (@lem2644728) (@lem2644732)). Qed.
Lemma lem2644734 : True = term109.
Proof. exact (SYM (@lem2644733)). Qed.
Lemma lem2644735 : term109.
Proof. exact (EQ_MP (@lem2644734) (@lem0)). Qed.
Lemma lem2644736 : term234.
Proof. exact (@lem2644725 (@lem2644735)). Qed.
Lemma lem2644738 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644739 : term109 = term110.
Proof. exact (@lem2644738 (NUMERAL 0) term32). Qed.
Lemma lem2644740 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644741 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644742 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644741 h1) (fun h1 : term110 = True => @lem2644740)). Qed.
Lemma lem2644743 : term110 = True.
Proof. exact (EQ_MP (@lem2644742) (@lem2644740)). Qed.
Lemma lem2644744 : term109 = True.
Proof. exact (TRANS (@lem2644739) (@lem2644743)). Qed.
Lemma lem2644745 : True = term109.
Proof. exact (SYM (@lem2644744)). Qed.
Lemma lem2644746 : term109.
Proof. exact (EQ_MP (@lem2644745) (@lem0)). Qed.
Lemma lem2644747 : term232 = term235.
Proof. exact (@lem2644736 (@lem2644746)). Qed.
Lemma lem2644749 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644750 : term117 = term118.
Proof. exact (@lem2644749 term32 term32). Qed.
Lemma lem2644751 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644752 : term120 = term32.
Proof. exact (EQ_MP (@lem2644751) (@lem940073)). Qed.
Lemma lem2644753 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644754 : term118 = term31.
Proof. exact (MK_COMB (@lem2644753) (@lem2644752)). Qed.
Lemma lem2644755 : term117 = term31.
Proof. exact (TRANS (@lem2644750) (@lem2644754)). Qed.
Lemma lem2644757 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644758 : term131 = term38.
Proof. exact (@lem2644757 term32). Qed.
Lemma lem2644759 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644760 : term236 = term230.
Proof. exact (MK_COMB (@lem2644759) (@lem2644758)). Qed.
Lemma lem2644761 : term235 = term109.
Proof. exact (MK_COMB (@lem2644760) (@lem2644755)). Qed.
Lemma lem2644763 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644764 : term109 = term110.
Proof. exact (@lem2644763 (NUMERAL 0) term32). Qed.
Lemma lem2644765 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644766 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644767 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644766 h1) (fun h1 : term110 = True => @lem2644765)). Qed.
Lemma lem2644768 : term110 = True.
Proof. exact (EQ_MP (@lem2644767) (@lem2644765)). Qed.
Lemma lem2644769 : term109 = True.
Proof. exact (TRANS (@lem2644764) (@lem2644768)). Qed.
Lemma lem2644770 : term235 = True.
Proof. exact (TRANS (@lem2644761) (@lem2644769)). Qed.
Lemma lem2644771 : term232 = True.
Proof. exact (TRANS (@lem2644747) (@lem2644770)). Qed.
Lemma lem2644772 : term109 = True.
Proof. exact (TRANS (@lem2644724) (@lem2644771)). Qed.
Lemma lem2644773 : term229 = True.
Proof. exact (TRANS (@lem2644715) (@lem2644772)). Qed.
Lemma lem2644774 : True = term229.
Proof. exact (SYM (@lem2644773)). Qed.
Lemma lem2644775 : term229.
Proof. exact (EQ_MP (@lem2644774) (@lem0)). Qed.
Lemma lem2644776 (m : int) (n : int) (h1 : term1043 m n) : term1129 m.
Proof. exact (conj (@lem2644775) (@lem2644712 m n h1)). Qed.
Lemma lem2644778 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2644779 (m : int) : term1130 m.
Proof. exact (@lem2644778 term31 (real_of_int m)). Qed.
Lemma lem2644780 (m : int) (n : int) (h1 : term1043 m n) : term1131 m.
Proof. exact (@lem2644779 m (@lem2644776 m n h1)). Qed.
Lemma lem2644781 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2644782 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644783 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2644782) (@lem2644781 m)). Qed.
Lemma lem2644784 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644785 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2644783 m) (@lem2644784)). Qed.
Lemma lem2644786 (m : int) (n : int) (h1 : term1043 m n) : term457 m.
Proof. exact (EQ_MP (@lem2644785 m) (@lem2644780 m n h1)). Qed.
Lemma lem2644788 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2644789 : term229 = term109.
Proof. exact (@lem2644788 term38 term31). Qed.
Lemma lem2644791 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644792 : term31 = term99.
Proof. exact (@lem2644791 term32). Qed.
Lemma lem2644794 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644795 : term38 = term134.
Proof. exact (@lem2644794 (NUMERAL 0)). Qed.
Lemma lem2644796 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644797 : term230 = term231.
Proof. exact (MK_COMB (@lem2644796) (@lem2644795)). Qed.
Lemma lem2644798 : term109 = term232.
Proof. exact (MK_COMB (@lem2644797) (@lem2644792)). Qed.
Lemma lem2644799 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2644801 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644802 : term109 = term110.
Proof. exact (@lem2644801 (NUMERAL 0) term32). Qed.
Lemma lem2644803 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644804 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644805 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644804 h1) (fun h1 : term110 = True => @lem2644803)). Qed.
Lemma lem2644806 : term110 = True.
Proof. exact (EQ_MP (@lem2644805) (@lem2644803)). Qed.
Lemma lem2644807 : term109 = True.
Proof. exact (TRANS (@lem2644802) (@lem2644806)). Qed.
Lemma lem2644808 : True = term109.
Proof. exact (SYM (@lem2644807)). Qed.
Lemma lem2644809 : term109.
Proof. exact (EQ_MP (@lem2644808) (@lem0)). Qed.
Lemma lem2644810 : term234.
Proof. exact (@lem2644799 (@lem2644809)). Qed.
Lemma lem2644812 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644813 : term109 = term110.
Proof. exact (@lem2644812 (NUMERAL 0) term32). Qed.
Lemma lem2644814 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644815 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644816 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644815 h1) (fun h1 : term110 = True => @lem2644814)). Qed.
Lemma lem2644817 : term110 = True.
Proof. exact (EQ_MP (@lem2644816) (@lem2644814)). Qed.
Lemma lem2644818 : term109 = True.
Proof. exact (TRANS (@lem2644813) (@lem2644817)). Qed.
Lemma lem2644819 : True = term109.
Proof. exact (SYM (@lem2644818)). Qed.
Lemma lem2644820 : term109.
Proof. exact (EQ_MP (@lem2644819) (@lem0)). Qed.
Lemma lem2644821 : term232 = term235.
Proof. exact (@lem2644810 (@lem2644820)). Qed.
Lemma lem2644823 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644824 : term117 = term118.
Proof. exact (@lem2644823 term32 term32). Qed.
Lemma lem2644825 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644826 : term120 = term32.
Proof. exact (EQ_MP (@lem2644825) (@lem940073)). Qed.
Lemma lem2644827 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644828 : term118 = term31.
Proof. exact (MK_COMB (@lem2644827) (@lem2644826)). Qed.
Lemma lem2644829 : term117 = term31.
Proof. exact (TRANS (@lem2644824) (@lem2644828)). Qed.
Lemma lem2644831 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644832 : term131 = term38.
Proof. exact (@lem2644831 term32). Qed.
Lemma lem2644833 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2644834 : term236 = term230.
Proof. exact (MK_COMB (@lem2644833) (@lem2644832)). Qed.
Lemma lem2644835 : term235 = term109.
Proof. exact (MK_COMB (@lem2644834) (@lem2644829)). Qed.
Lemma lem2644837 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644838 : term109 = term110.
Proof. exact (@lem2644837 (NUMERAL 0) term32). Qed.
Lemma lem2644839 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644840 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644841 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644840 h1) (fun h1 : term110 = True => @lem2644839)). Qed.
Lemma lem2644842 : term110 = True.
Proof. exact (EQ_MP (@lem2644841) (@lem2644839)). Qed.
Lemma lem2644843 : term109 = True.
Proof. exact (TRANS (@lem2644838) (@lem2644842)). Qed.
Lemma lem2644844 : term235 = True.
Proof. exact (TRANS (@lem2644835) (@lem2644843)). Qed.
Lemma lem2644845 : term232 = True.
Proof. exact (TRANS (@lem2644821) (@lem2644844)). Qed.
Lemma lem2644846 : term109 = True.
Proof. exact (TRANS (@lem2644798) (@lem2644845)). Qed.
Lemma lem2644847 : term229 = True.
Proof. exact (TRANS (@lem2644789) (@lem2644846)). Qed.
Lemma lem2644848 : True = term229.
Proof. exact (SYM (@lem2644847)). Qed.
Lemma lem2644849 : term229.
Proof. exact (EQ_MP (@lem2644848) (@lem0)). Qed.
Lemma lem2644850 (m : int) (n : int) (h1 : term1043 m n) : term237 m.
Proof. exact (conj (@lem2644849) (@lem2644709 m n h1)). Qed.
Lemma lem2644852 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2644853 (m : int) : term239 m.
Proof. exact (@lem2644852 term31 (term154 m)). Qed.
Lemma lem2644854 (m : int) (n : int) (h1 : term1043 m n) : term240 m.
Proof. exact (@lem2644853 m (@lem2644850 m n h1)). Qed.
Lemma lem2644855 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2644856 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644857 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2644856) (@lem2644855 m)). Qed.
Lemma lem2644858 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644859 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2644857 m) (@lem2644858)). Qed.
Lemma lem2644860 (m : int) (n : int) (h1 : term1043 m n) : term158 m.
Proof. exact (EQ_MP (@lem2644859 m) (@lem2644854 m n h1)). Qed.
Lemma lem2644861 (m : int) (n : int) (h1 : term1043 m n) : term1133 m.
Proof. exact (conj (@lem2644860 m n h1) (@lem2644786 m n h1)). Qed.
Lemma lem2644863 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2644864 (m : int) : term1135 m.
Proof. exact (@lem2644863 (term154 m) (real_of_int m)). Qed.
Lemma lem2644865 (m : int) (n : int) (h1 : term1043 m n) : term1136 m.
Proof. exact (@lem2644864 m (@lem2644861 m n h1)). Qed.
Lemma lem2644866 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2644867 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2644869 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644870 : term31 = term99.
Proof. exact (@lem2644869 term32). Qed.
Lemma lem2644872 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644873 : term97 = term102.
Proof. exact (@lem2644872 term32). Qed.
Lemma lem2644874 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644875 : term103 = term104.
Proof. exact (MK_COMB (@lem2644874) (@lem2644873)). Qed.
Lemma lem2644876 : term105 = term106.
Proof. exact (MK_COMB (@lem2644875) (@lem2644870)). Qed.
Lemma lem2644877 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2644879 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644880 : term109 = term110.
Proof. exact (@lem2644879 (NUMERAL 0) term32). Qed.
Lemma lem2644881 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644882 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644883 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644882 h1) (fun h1 : term110 = True => @lem2644881)). Qed.
Lemma lem2644884 : term110 = True.
Proof. exact (EQ_MP (@lem2644883) (@lem2644881)). Qed.
Lemma lem2644885 : term109 = True.
Proof. exact (TRANS (@lem2644880) (@lem2644884)). Qed.
Lemma lem2644886 : True = term109.
Proof. exact (SYM (@lem2644885)). Qed.
Lemma lem2644887 : term109.
Proof. exact (EQ_MP (@lem2644886) (@lem0)). Qed.
Lemma lem2644888 : term112.
Proof. exact (@lem2644877 (@lem2644887)). Qed.
Lemma lem2644890 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644891 : term109 = term110.
Proof. exact (@lem2644890 (NUMERAL 0) term32). Qed.
Lemma lem2644892 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644893 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644894 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644893 h1) (fun h1 : term110 = True => @lem2644892)). Qed.
Lemma lem2644895 : term110 = True.
Proof. exact (EQ_MP (@lem2644894) (@lem2644892)). Qed.
Lemma lem2644896 : term109 = True.
Proof. exact (TRANS (@lem2644891) (@lem2644895)). Qed.
Lemma lem2644897 : True = term109.
Proof. exact (SYM (@lem2644896)). Qed.
Lemma lem2644898 : term109.
Proof. exact (EQ_MP (@lem2644897) (@lem0)). Qed.
Lemma lem2644899 : term113.
Proof. exact (@lem2644888 (@lem2644898)). Qed.
Lemma lem2644901 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2644902 : term109 = term110.
Proof. exact (@lem2644901 (NUMERAL 0) term32). Qed.
Lemma lem2644903 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2644904 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2644905 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2644904 h1) (fun h1 : term110 = True => @lem2644903)). Qed.
Lemma lem2644906 : term110 = True.
Proof. exact (EQ_MP (@lem2644905) (@lem2644903)). Qed.
Lemma lem2644907 : term109 = True.
Proof. exact (TRANS (@lem2644902) (@lem2644906)). Qed.
Lemma lem2644908 : True = term109.
Proof. exact (SYM (@lem2644907)). Qed.
Lemma lem2644909 : term109.
Proof. exact (EQ_MP (@lem2644908) (@lem0)). Qed.
Lemma lem2644910 : term114.
Proof. exact (@lem2644899 (@lem2644909)). Qed.
Lemma lem2644912 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644913 : term117 = term118.
Proof. exact (@lem2644912 term32 term32). Qed.
Lemma lem2644914 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644915 : term120 = term32.
Proof. exact (EQ_MP (@lem2644914) (@lem940073)). Qed.
Lemma lem2644916 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644917 : term118 = term31.
Proof. exact (MK_COMB (@lem2644916) (@lem2644915)). Qed.
Lemma lem2644918 : term117 = term31.
Proof. exact (TRANS (@lem2644913) (@lem2644917)). Qed.
Lemma lem2644920 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2644921 : term123 = term124.
Proof. exact (@lem2644920 term32 term32). Qed.
Lemma lem2644922 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644923 : term120 = term32.
Proof. exact (EQ_MP (@lem2644922) (@lem940073)). Qed.
Lemma lem2644924 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644925 : term118 = term31.
Proof. exact (MK_COMB (@lem2644924) (@lem2644923)). Qed.
Lemma lem2644926 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2644927 : term124 = term97.
Proof. exact (MK_COMB (@lem2644926) (@lem2644925)). Qed.
Lemma lem2644928 : term123 = term97.
Proof. exact (TRANS (@lem2644921) (@lem2644927)). Qed.
Lemma lem2644929 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644930 : term125 = term103.
Proof. exact (MK_COMB (@lem2644929) (@lem2644928)). Qed.
Lemma lem2644931 : term126 = term105.
Proof. exact (MK_COMB (@lem2644930) (@lem2644918)). Qed.
Lemma lem2644933 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2644934 : term105 = term38.
Proof. exact (@lem2644933 term32). Qed.
Lemma lem2644935 : term126 = term38.
Proof. exact (TRANS (@lem2644931) (@lem2644934)). Qed.
Lemma lem2644936 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644937 : term128 = term129.
Proof. exact (MK_COMB (@lem2644936) (@lem2644935)). Qed.
Lemma lem2644938 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2644939 : term130 = term131.
Proof. exact (MK_COMB (@lem2644937) (@lem2644938)). Qed.
Lemma lem2644941 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644942 : term131 = term38.
Proof. exact (@lem2644941 term32). Qed.
Lemma lem2644943 : term130 = term38.
Proof. exact (TRANS (@lem2644939) (@lem2644942)). Qed.
Lemma lem2644945 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2644946 : term117 = term118.
Proof. exact (@lem2644945 term32 term32). Qed.
Lemma lem2644947 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2644948 : term120 = term32.
Proof. exact (EQ_MP (@lem2644947) (@lem940073)). Qed.
Lemma lem2644949 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2644950 : term118 = term31.
Proof. exact (MK_COMB (@lem2644949) (@lem2644948)). Qed.
Lemma lem2644951 : term117 = term31.
Proof. exact (TRANS (@lem2644946) (@lem2644950)). Qed.
Lemma lem2644952 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2644953 : term133 = term131.
Proof. exact (MK_COMB (@lem2644952) (@lem2644951)). Qed.
Lemma lem2644955 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2644956 : term131 = term38.
Proof. exact (@lem2644955 term32). Qed.
Lemma lem2644957 : term133 = term38.
Proof. exact (TRANS (@lem2644953) (@lem2644956)). Qed.
Lemma lem2644958 : term38 = term133.
Proof. exact (SYM (@lem2644957)). Qed.
Lemma lem2644959 : term130 = term133.
Proof. exact (TRANS (@lem2644943) (@lem2644958)). Qed.
Lemma lem2644960 : term106 = term134.
Proof. exact (@lem2644910 (@lem2644959)). Qed.
Lemma lem2644961 : term105 = term134.
Proof. exact (TRANS (@lem2644876) (@lem2644960)). Qed.
Lemma lem2644963 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2644964 : term134 = term38.
Proof. exact (@lem2644963 term38). Qed.
Lemma lem2644965 : term105 = term38.
Proof. exact (TRANS (@lem2644961) (@lem2644964)). Qed.
Lemma lem2644966 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2644967 : term136 = term129.
Proof. exact (MK_COMB (@lem2644966) (@lem2644965)). Qed.
Lemma lem2644968 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2644969 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2644967) (@lem2644968 m)). Qed.
Lemma lem2644970 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2644867 m) (@lem2644969 m)). Qed.
Lemma lem2644971 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2644972 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2644970 m) (@lem2644971 m)). Qed.
Lemma lem2644973 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2644974 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2644973) (@lem2644972 m)). Qed.
Lemma lem2644975 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2644976 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2644974 m) (@lem2644975)). Qed.
Lemma lem2644977 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2644866 m) (@lem2644976 m)). Qed.
Lemma lem2644978 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2644979 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2644977 m) (@lem2644978)). Qed.
Lemma lem2644980 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2644981 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2644980) (@lem2644979 m)). Qed.
Lemma lem2644982 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2644983 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2644981 m) (@lem2644982)). Qed.
Lemma lem2644984 (m : int) (n : int) (h1 : term1043 m n) : term257.
Proof. exact (EQ_MP (@lem2644983 m) (@lem2644865 m n h1)). Qed.
Lemma lem2644986 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2644987 : term257 = term258.
Proof. exact (@lem2644986 term38 term97). Qed.
Lemma lem2644989 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2644990 : term97 = term102.
Proof. exact (@lem2644989 term32). Qed.
Lemma lem2644992 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2644993 : term38 = term134.
Proof. exact (@lem2644992 (NUMERAL 0)). Qed.
Lemma lem2644994 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2644995 : term259 = term260.
Proof. exact (MK_COMB (@lem2644994) (@lem2644993)). Qed.
Lemma lem2644996 : term258 = term261.
Proof. exact (MK_COMB (@lem2644995) (@lem2644990)). Qed.
Lemma lem2644997 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2644999 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645000 : term109 = term110.
Proof. exact (@lem2644999 (NUMERAL 0) term32). Qed.
Lemma lem2645001 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645002 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645003 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645002 h1) (fun h1 : term110 = True => @lem2645001)). Qed.
Lemma lem2645004 : term110 = True.
Proof. exact (EQ_MP (@lem2645003) (@lem2645001)). Qed.
Lemma lem2645005 : term109 = True.
Proof. exact (TRANS (@lem2645000) (@lem2645004)). Qed.
Lemma lem2645006 : True = term109.
Proof. exact (SYM (@lem2645005)). Qed.
Lemma lem2645007 : term109.
Proof. exact (EQ_MP (@lem2645006) (@lem0)). Qed.
Lemma lem2645008 : term263.
Proof. exact (@lem2644997 (@lem2645007)). Qed.
Lemma lem2645010 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645011 : term109 = term110.
Proof. exact (@lem2645010 (NUMERAL 0) term32). Qed.
Lemma lem2645012 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645013 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645014 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645013 h1) (fun h1 : term110 = True => @lem2645012)). Qed.
Lemma lem2645015 : term110 = True.
Proof. exact (EQ_MP (@lem2645014) (@lem2645012)). Qed.
Lemma lem2645016 : term109 = True.
Proof. exact (TRANS (@lem2645011) (@lem2645015)). Qed.
Lemma lem2645017 : True = term109.
Proof. exact (SYM (@lem2645016)). Qed.
Lemma lem2645018 : term109.
Proof. exact (EQ_MP (@lem2645017) (@lem0)). Qed.
Lemma lem2645019 : term261 = term264.
Proof. exact (@lem2645008 (@lem2645018)). Qed.
Lemma lem2645021 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645022 : term123 = term124.
Proof. exact (@lem2645021 term32 term32). Qed.
Lemma lem2645023 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645024 : term120 = term32.
Proof. exact (EQ_MP (@lem2645023) (@lem940073)). Qed.
Lemma lem2645025 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645026 : term118 = term31.
Proof. exact (MK_COMB (@lem2645025) (@lem2645024)). Qed.
Lemma lem2645027 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645028 : term124 = term97.
Proof. exact (MK_COMB (@lem2645027) (@lem2645026)). Qed.
Lemma lem2645029 : term123 = term97.
Proof. exact (TRANS (@lem2645022) (@lem2645028)). Qed.
Lemma lem2645031 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645032 : term131 = term38.
Proof. exact (@lem2645031 term32). Qed.
Lemma lem2645033 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2645034 : term265 = term259.
Proof. exact (MK_COMB (@lem2645033) (@lem2645032)). Qed.
Lemma lem2645035 : term264 = term258.
Proof. exact (MK_COMB (@lem2645034) (@lem2645029)). Qed.
Lemma lem2645037 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2645038 : term258 = term268.
Proof. exact (@lem2645037 (NUMERAL 0) term32). Qed.
Lemma lem2645039 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645040 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2645041 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645040 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2645039)). Qed.
Lemma lem2645042 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2645041) (@lem2645039)). Qed.
Lemma lem2645043 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2645044 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2645045 : term269 = (and True).
Proof. exact (MK_COMB (@lem2645044) (@lem2645043)). Qed.
Lemma lem2645046 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2645045) (@lem2645042)). Qed.
Lemma lem2645048 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2645049 : term268 = False.
Proof. exact (TRANS (@lem2645046) (@lem2645048)). Qed.
Lemma lem2645050 : term258 = False.
Proof. exact (TRANS (@lem2645038) (@lem2645049)). Qed.
Lemma lem2645051 : term264 = False.
Proof. exact (TRANS (@lem2645035) (@lem2645050)). Qed.
Lemma lem2645052 : term261 = False.
Proof. exact (TRANS (@lem2645019) (@lem2645051)). Qed.
Lemma lem2645053 : term258 = False.
Proof. exact (TRANS (@lem2644996) (@lem2645052)). Qed.
Lemma lem2645054 : term257 = False.
Proof. exact (TRANS (@lem2644987) (@lem2645053)). Qed.
Lemma lem2645055 (m : int) (n : int) (h1 : term1043 m n) : False.
Proof. exact (EQ_MP (@lem2645054) (@lem2644984 m n h1)). Qed.
Lemma lem2645056 (m : int) (n : int) (h1 : term1045 m n) : False.
Proof. exact (or_elim (@lem2644347 m n h1) (fun h0 : term1041 m n => @lem2644701 m n h0) (fun h0 : term1043 m n => @lem2645055 m n h0)). Qed.
Lemma lem2645057 (m : int) (n : int) (h1 : term1068 m n) : term1068 m n.
Proof. exact (h1). Qed.
Lemma lem2645058 (m : int) (n : int) (h1 : term1064 m n) : term1064 m n.
Proof. exact (h1). Qed.
Lemma lem2645059 (m : int) (n : int) (h1 : term1064 m n) : term1063 m n.
Proof. exact (proj2 (@lem2645058 m n h1)). Qed.
Lemma lem2645061 (m : int) (n : int) (h1 : term1064 m n) : term716 m n.
Proof. exact (proj2 (@lem2645059 m n h1)). Qed.
Lemma lem2645062 (m : int) (n : int) (h1 : term1064 m n) : term586 m n.
Proof. exact (proj1 (@lem2645059 m n h1)). Qed.
Lemma lem2645064 (m : int) (n : int) (h1 : term1064 m n) : term556 n m.
Proof. exact (proj1 (@lem2645062 m n h1)). Qed.
Lemma lem2645065 (m : int) (n : int) (h1 : term1064 m n) : term158 m.
Proof. exact (proj2 (@lem2645064 m n h1)). Qed.
Lemma lem2645068 (m : int) (n : int) (h1 : term1064 m n) : term457 m.
Proof. exact (proj1 (@lem2645061 m n h1)). Qed.
Lemma lem2645070 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645071 : term229 = term109.
Proof. exact (@lem2645070 term38 term31). Qed.
Lemma lem2645073 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645074 : term31 = term99.
Proof. exact (@lem2645073 term32). Qed.
Lemma lem2645076 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645077 : term38 = term134.
Proof. exact (@lem2645076 (NUMERAL 0)). Qed.
Lemma lem2645078 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645079 : term230 = term231.
Proof. exact (MK_COMB (@lem2645078) (@lem2645077)). Qed.
Lemma lem2645080 : term109 = term232.
Proof. exact (MK_COMB (@lem2645079) (@lem2645074)). Qed.
Lemma lem2645081 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645083 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645084 : term109 = term110.
Proof. exact (@lem2645083 (NUMERAL 0) term32). Qed.
Lemma lem2645085 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645086 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645087 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645086 h1) (fun h1 : term110 = True => @lem2645085)). Qed.
Lemma lem2645088 : term110 = True.
Proof. exact (EQ_MP (@lem2645087) (@lem2645085)). Qed.
Lemma lem2645089 : term109 = True.
Proof. exact (TRANS (@lem2645084) (@lem2645088)). Qed.
Lemma lem2645090 : True = term109.
Proof. exact (SYM (@lem2645089)). Qed.
Lemma lem2645091 : term109.
Proof. exact (EQ_MP (@lem2645090) (@lem0)). Qed.
Lemma lem2645092 : term234.
Proof. exact (@lem2645081 (@lem2645091)). Qed.
Lemma lem2645094 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645095 : term109 = term110.
Proof. exact (@lem2645094 (NUMERAL 0) term32). Qed.
Lemma lem2645096 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645097 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645098 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645097 h1) (fun h1 : term110 = True => @lem2645096)). Qed.
Lemma lem2645099 : term110 = True.
Proof. exact (EQ_MP (@lem2645098) (@lem2645096)). Qed.
Lemma lem2645100 : term109 = True.
Proof. exact (TRANS (@lem2645095) (@lem2645099)). Qed.
Lemma lem2645101 : True = term109.
Proof. exact (SYM (@lem2645100)). Qed.
Lemma lem2645102 : term109.
Proof. exact (EQ_MP (@lem2645101) (@lem0)). Qed.
Lemma lem2645103 : term232 = term235.
Proof. exact (@lem2645092 (@lem2645102)). Qed.
Lemma lem2645105 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645106 : term117 = term118.
Proof. exact (@lem2645105 term32 term32). Qed.
Lemma lem2645107 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645108 : term120 = term32.
Proof. exact (EQ_MP (@lem2645107) (@lem940073)). Qed.
Lemma lem2645109 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645110 : term118 = term31.
Proof. exact (MK_COMB (@lem2645109) (@lem2645108)). Qed.
Lemma lem2645111 : term117 = term31.
Proof. exact (TRANS (@lem2645106) (@lem2645110)). Qed.
Lemma lem2645113 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645114 : term131 = term38.
Proof. exact (@lem2645113 term32). Qed.
Lemma lem2645115 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645116 : term236 = term230.
Proof. exact (MK_COMB (@lem2645115) (@lem2645114)). Qed.
Lemma lem2645117 : term235 = term109.
Proof. exact (MK_COMB (@lem2645116) (@lem2645111)). Qed.
Lemma lem2645119 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645120 : term109 = term110.
Proof. exact (@lem2645119 (NUMERAL 0) term32). Qed.
Lemma lem2645121 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645122 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645123 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645122 h1) (fun h1 : term110 = True => @lem2645121)). Qed.
Lemma lem2645124 : term110 = True.
Proof. exact (EQ_MP (@lem2645123) (@lem2645121)). Qed.
Lemma lem2645125 : term109 = True.
Proof. exact (TRANS (@lem2645120) (@lem2645124)). Qed.
Lemma lem2645126 : term235 = True.
Proof. exact (TRANS (@lem2645117) (@lem2645125)). Qed.
Lemma lem2645127 : term232 = True.
Proof. exact (TRANS (@lem2645103) (@lem2645126)). Qed.
Lemma lem2645128 : term109 = True.
Proof. exact (TRANS (@lem2645080) (@lem2645127)). Qed.
Lemma lem2645129 : term229 = True.
Proof. exact (TRANS (@lem2645071) (@lem2645128)). Qed.
Lemma lem2645130 : True = term229.
Proof. exact (SYM (@lem2645129)). Qed.
Lemma lem2645131 : term229.
Proof. exact (EQ_MP (@lem2645130) (@lem0)). Qed.
Lemma lem2645132 (m : int) (n : int) (h1 : term1064 m n) : term1129 m.
Proof. exact (conj (@lem2645131) (@lem2645068 m n h1)). Qed.
Lemma lem2645134 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645135 (m : int) : term1130 m.
Proof. exact (@lem2645134 term31 (real_of_int m)). Qed.
Lemma lem2645136 (m : int) (n : int) (h1 : term1064 m n) : term1131 m.
Proof. exact (@lem2645135 m (@lem2645132 m n h1)). Qed.
Lemma lem2645137 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2645138 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645139 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2645138) (@lem2645137 m)). Qed.
Lemma lem2645140 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645141 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2645139 m) (@lem2645140)). Qed.
Lemma lem2645142 (m : int) (n : int) (h1 : term1064 m n) : term457 m.
Proof. exact (EQ_MP (@lem2645141 m) (@lem2645136 m n h1)). Qed.
Lemma lem2645144 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645145 : term229 = term109.
Proof. exact (@lem2645144 term38 term31). Qed.
Lemma lem2645147 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645148 : term31 = term99.
Proof. exact (@lem2645147 term32). Qed.
Lemma lem2645150 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645151 : term38 = term134.
Proof. exact (@lem2645150 (NUMERAL 0)). Qed.
Lemma lem2645152 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645153 : term230 = term231.
Proof. exact (MK_COMB (@lem2645152) (@lem2645151)). Qed.
Lemma lem2645154 : term109 = term232.
Proof. exact (MK_COMB (@lem2645153) (@lem2645148)). Qed.
Lemma lem2645155 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645157 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645158 : term109 = term110.
Proof. exact (@lem2645157 (NUMERAL 0) term32). Qed.
Lemma lem2645159 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645160 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645161 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645160 h1) (fun h1 : term110 = True => @lem2645159)). Qed.
Lemma lem2645162 : term110 = True.
Proof. exact (EQ_MP (@lem2645161) (@lem2645159)). Qed.
Lemma lem2645163 : term109 = True.
Proof. exact (TRANS (@lem2645158) (@lem2645162)). Qed.
Lemma lem2645164 : True = term109.
Proof. exact (SYM (@lem2645163)). Qed.
Lemma lem2645165 : term109.
Proof. exact (EQ_MP (@lem2645164) (@lem0)). Qed.
Lemma lem2645166 : term234.
Proof. exact (@lem2645155 (@lem2645165)). Qed.
Lemma lem2645168 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645169 : term109 = term110.
Proof. exact (@lem2645168 (NUMERAL 0) term32). Qed.
Lemma lem2645170 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645171 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645172 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645171 h1) (fun h1 : term110 = True => @lem2645170)). Qed.
Lemma lem2645173 : term110 = True.
Proof. exact (EQ_MP (@lem2645172) (@lem2645170)). Qed.
Lemma lem2645174 : term109 = True.
Proof. exact (TRANS (@lem2645169) (@lem2645173)). Qed.
Lemma lem2645175 : True = term109.
Proof. exact (SYM (@lem2645174)). Qed.
Lemma lem2645176 : term109.
Proof. exact (EQ_MP (@lem2645175) (@lem0)). Qed.
Lemma lem2645177 : term232 = term235.
Proof. exact (@lem2645166 (@lem2645176)). Qed.
Lemma lem2645179 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645180 : term117 = term118.
Proof. exact (@lem2645179 term32 term32). Qed.
Lemma lem2645181 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645182 : term120 = term32.
Proof. exact (EQ_MP (@lem2645181) (@lem940073)). Qed.
Lemma lem2645183 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645184 : term118 = term31.
Proof. exact (MK_COMB (@lem2645183) (@lem2645182)). Qed.
Lemma lem2645185 : term117 = term31.
Proof. exact (TRANS (@lem2645180) (@lem2645184)). Qed.
Lemma lem2645187 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645188 : term131 = term38.
Proof. exact (@lem2645187 term32). Qed.
Lemma lem2645189 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645190 : term236 = term230.
Proof. exact (MK_COMB (@lem2645189) (@lem2645188)). Qed.
Lemma lem2645191 : term235 = term109.
Proof. exact (MK_COMB (@lem2645190) (@lem2645185)). Qed.
Lemma lem2645193 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645194 : term109 = term110.
Proof. exact (@lem2645193 (NUMERAL 0) term32). Qed.
Lemma lem2645195 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645196 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645197 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645196 h1) (fun h1 : term110 = True => @lem2645195)). Qed.
Lemma lem2645198 : term110 = True.
Proof. exact (EQ_MP (@lem2645197) (@lem2645195)). Qed.
Lemma lem2645199 : term109 = True.
Proof. exact (TRANS (@lem2645194) (@lem2645198)). Qed.
Lemma lem2645200 : term235 = True.
Proof. exact (TRANS (@lem2645191) (@lem2645199)). Qed.
Lemma lem2645201 : term232 = True.
Proof. exact (TRANS (@lem2645177) (@lem2645200)). Qed.
Lemma lem2645202 : term109 = True.
Proof. exact (TRANS (@lem2645154) (@lem2645201)). Qed.
Lemma lem2645203 : term229 = True.
Proof. exact (TRANS (@lem2645145) (@lem2645202)). Qed.
Lemma lem2645204 : True = term229.
Proof. exact (SYM (@lem2645203)). Qed.
Lemma lem2645205 : term229.
Proof. exact (EQ_MP (@lem2645204) (@lem0)). Qed.
Lemma lem2645206 (m : int) (n : int) (h1 : term1064 m n) : term237 m.
Proof. exact (conj (@lem2645205) (@lem2645065 m n h1)). Qed.
Lemma lem2645208 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645209 (m : int) : term239 m.
Proof. exact (@lem2645208 term31 (term154 m)). Qed.
Lemma lem2645210 (m : int) (n : int) (h1 : term1064 m n) : term240 m.
Proof. exact (@lem2645209 m (@lem2645206 m n h1)). Qed.
Lemma lem2645211 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2645212 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645213 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2645212) (@lem2645211 m)). Qed.
Lemma lem2645214 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645215 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2645213 m) (@lem2645214)). Qed.
Lemma lem2645216 (m : int) (n : int) (h1 : term1064 m n) : term158 m.
Proof. exact (EQ_MP (@lem2645215 m) (@lem2645210 m n h1)). Qed.
Lemma lem2645217 (m : int) (n : int) (h1 : term1064 m n) : term1133 m.
Proof. exact (conj (@lem2645216 m n h1) (@lem2645142 m n h1)). Qed.
Lemma lem2645219 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2645220 (m : int) : term1135 m.
Proof. exact (@lem2645219 (term154 m) (real_of_int m)). Qed.
Lemma lem2645221 (m : int) (n : int) (h1 : term1064 m n) : term1136 m.
Proof. exact (@lem2645220 m (@lem2645217 m n h1)). Qed.
Lemma lem2645222 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2645223 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2645225 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645226 : term31 = term99.
Proof. exact (@lem2645225 term32). Qed.
Lemma lem2645228 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2645229 : term97 = term102.
Proof. exact (@lem2645228 term32). Qed.
Lemma lem2645230 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645231 : term103 = term104.
Proof. exact (MK_COMB (@lem2645230) (@lem2645229)). Qed.
Lemma lem2645232 : term105 = term106.
Proof. exact (MK_COMB (@lem2645231) (@lem2645226)). Qed.
Lemma lem2645233 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2645235 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645236 : term109 = term110.
Proof. exact (@lem2645235 (NUMERAL 0) term32). Qed.
Lemma lem2645237 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645238 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645239 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645238 h1) (fun h1 : term110 = True => @lem2645237)). Qed.
Lemma lem2645240 : term110 = True.
Proof. exact (EQ_MP (@lem2645239) (@lem2645237)). Qed.
Lemma lem2645241 : term109 = True.
Proof. exact (TRANS (@lem2645236) (@lem2645240)). Qed.
Lemma lem2645242 : True = term109.
Proof. exact (SYM (@lem2645241)). Qed.
Lemma lem2645243 : term109.
Proof. exact (EQ_MP (@lem2645242) (@lem0)). Qed.
Lemma lem2645244 : term112.
Proof. exact (@lem2645233 (@lem2645243)). Qed.
Lemma lem2645246 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645247 : term109 = term110.
Proof. exact (@lem2645246 (NUMERAL 0) term32). Qed.
Lemma lem2645248 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645249 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645250 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645249 h1) (fun h1 : term110 = True => @lem2645248)). Qed.
Lemma lem2645251 : term110 = True.
Proof. exact (EQ_MP (@lem2645250) (@lem2645248)). Qed.
Lemma lem2645252 : term109 = True.
Proof. exact (TRANS (@lem2645247) (@lem2645251)). Qed.
Lemma lem2645253 : True = term109.
Proof. exact (SYM (@lem2645252)). Qed.
Lemma lem2645254 : term109.
Proof. exact (EQ_MP (@lem2645253) (@lem0)). Qed.
Lemma lem2645255 : term113.
Proof. exact (@lem2645244 (@lem2645254)). Qed.
Lemma lem2645257 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645258 : term109 = term110.
Proof. exact (@lem2645257 (NUMERAL 0) term32). Qed.
Lemma lem2645259 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645260 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645261 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645260 h1) (fun h1 : term110 = True => @lem2645259)). Qed.
Lemma lem2645262 : term110 = True.
Proof. exact (EQ_MP (@lem2645261) (@lem2645259)). Qed.
Lemma lem2645263 : term109 = True.
Proof. exact (TRANS (@lem2645258) (@lem2645262)). Qed.
Lemma lem2645264 : True = term109.
Proof. exact (SYM (@lem2645263)). Qed.
Lemma lem2645265 : term109.
Proof. exact (EQ_MP (@lem2645264) (@lem0)). Qed.
Lemma lem2645266 : term114.
Proof. exact (@lem2645255 (@lem2645265)). Qed.
Lemma lem2645268 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645269 : term117 = term118.
Proof. exact (@lem2645268 term32 term32). Qed.
Lemma lem2645270 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645271 : term120 = term32.
Proof. exact (EQ_MP (@lem2645270) (@lem940073)). Qed.
Lemma lem2645272 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645273 : term118 = term31.
Proof. exact (MK_COMB (@lem2645272) (@lem2645271)). Qed.
Lemma lem2645274 : term117 = term31.
Proof. exact (TRANS (@lem2645269) (@lem2645273)). Qed.
Lemma lem2645276 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645277 : term123 = term124.
Proof. exact (@lem2645276 term32 term32). Qed.
Lemma lem2645278 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645279 : term120 = term32.
Proof. exact (EQ_MP (@lem2645278) (@lem940073)). Qed.
Lemma lem2645280 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645281 : term118 = term31.
Proof. exact (MK_COMB (@lem2645280) (@lem2645279)). Qed.
Lemma lem2645282 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645283 : term124 = term97.
Proof. exact (MK_COMB (@lem2645282) (@lem2645281)). Qed.
Lemma lem2645284 : term123 = term97.
Proof. exact (TRANS (@lem2645277) (@lem2645283)). Qed.
Lemma lem2645285 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645286 : term125 = term103.
Proof. exact (MK_COMB (@lem2645285) (@lem2645284)). Qed.
Lemma lem2645287 : term126 = term105.
Proof. exact (MK_COMB (@lem2645286) (@lem2645274)). Qed.
Lemma lem2645289 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2645290 : term105 = term38.
Proof. exact (@lem2645289 term32). Qed.
Lemma lem2645291 : term126 = term38.
Proof. exact (TRANS (@lem2645287) (@lem2645290)). Qed.
Lemma lem2645292 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2645293 : term128 = term129.
Proof. exact (MK_COMB (@lem2645292) (@lem2645291)). Qed.
Lemma lem2645294 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2645295 : term130 = term131.
Proof. exact (MK_COMB (@lem2645293) (@lem2645294)). Qed.
Lemma lem2645297 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645298 : term131 = term38.
Proof. exact (@lem2645297 term32). Qed.
Lemma lem2645299 : term130 = term38.
Proof. exact (TRANS (@lem2645295) (@lem2645298)). Qed.
Lemma lem2645301 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645302 : term117 = term118.
Proof. exact (@lem2645301 term32 term32). Qed.
Lemma lem2645303 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645304 : term120 = term32.
Proof. exact (EQ_MP (@lem2645303) (@lem940073)). Qed.
Lemma lem2645305 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645306 : term118 = term31.
Proof. exact (MK_COMB (@lem2645305) (@lem2645304)). Qed.
Lemma lem2645307 : term117 = term31.
Proof. exact (TRANS (@lem2645302) (@lem2645306)). Qed.
Lemma lem2645308 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2645309 : term133 = term131.
Proof. exact (MK_COMB (@lem2645308) (@lem2645307)). Qed.
Lemma lem2645311 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645312 : term131 = term38.
Proof. exact (@lem2645311 term32). Qed.
Lemma lem2645313 : term133 = term38.
Proof. exact (TRANS (@lem2645309) (@lem2645312)). Qed.
Lemma lem2645314 : term38 = term133.
Proof. exact (SYM (@lem2645313)). Qed.
Lemma lem2645315 : term130 = term133.
Proof. exact (TRANS (@lem2645299) (@lem2645314)). Qed.
Lemma lem2645316 : term106 = term134.
Proof. exact (@lem2645266 (@lem2645315)). Qed.
Lemma lem2645317 : term105 = term134.
Proof. exact (TRANS (@lem2645232) (@lem2645316)). Qed.
Lemma lem2645319 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2645320 : term134 = term38.
Proof. exact (@lem2645319 term38). Qed.
Lemma lem2645321 : term105 = term38.
Proof. exact (TRANS (@lem2645317) (@lem2645320)). Qed.
Lemma lem2645322 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2645323 : term136 = term129.
Proof. exact (MK_COMB (@lem2645322) (@lem2645321)). Qed.
Lemma lem2645324 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2645325 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2645323) (@lem2645324 m)). Qed.
Lemma lem2645326 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2645223 m) (@lem2645325 m)). Qed.
Lemma lem2645327 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2645328 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2645326 m) (@lem2645327 m)). Qed.
Lemma lem2645329 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645330 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2645329) (@lem2645328 m)). Qed.
Lemma lem2645331 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2645332 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2645330 m) (@lem2645331)). Qed.
Lemma lem2645333 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2645222 m) (@lem2645332 m)). Qed.
Lemma lem2645334 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2645335 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2645333 m) (@lem2645334)). Qed.
Lemma lem2645336 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645337 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2645336) (@lem2645335 m)). Qed.
Lemma lem2645338 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645339 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2645337 m) (@lem2645338)). Qed.
Lemma lem2645340 (m : int) (n : int) (h1 : term1064 m n) : term257.
Proof. exact (EQ_MP (@lem2645339 m) (@lem2645221 m n h1)). Qed.
Lemma lem2645342 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2645343 : term257 = term258.
Proof. exact (@lem2645342 term38 term97). Qed.
Lemma lem2645345 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2645346 : term97 = term102.
Proof. exact (@lem2645345 term32). Qed.
Lemma lem2645348 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645349 : term38 = term134.
Proof. exact (@lem2645348 (NUMERAL 0)). Qed.
Lemma lem2645350 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2645351 : term259 = term260.
Proof. exact (MK_COMB (@lem2645350) (@lem2645349)). Qed.
Lemma lem2645352 : term258 = term261.
Proof. exact (MK_COMB (@lem2645351) (@lem2645346)). Qed.
Lemma lem2645353 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2645355 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645356 : term109 = term110.
Proof. exact (@lem2645355 (NUMERAL 0) term32). Qed.
Lemma lem2645357 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645358 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645359 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645358 h1) (fun h1 : term110 = True => @lem2645357)). Qed.
Lemma lem2645360 : term110 = True.
Proof. exact (EQ_MP (@lem2645359) (@lem2645357)). Qed.
Lemma lem2645361 : term109 = True.
Proof. exact (TRANS (@lem2645356) (@lem2645360)). Qed.
Lemma lem2645362 : True = term109.
Proof. exact (SYM (@lem2645361)). Qed.
Lemma lem2645363 : term109.
Proof. exact (EQ_MP (@lem2645362) (@lem0)). Qed.
Lemma lem2645364 : term263.
Proof. exact (@lem2645353 (@lem2645363)). Qed.
Lemma lem2645366 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645367 : term109 = term110.
Proof. exact (@lem2645366 (NUMERAL 0) term32). Qed.
Lemma lem2645368 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645369 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645370 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645369 h1) (fun h1 : term110 = True => @lem2645368)). Qed.
Lemma lem2645371 : term110 = True.
Proof. exact (EQ_MP (@lem2645370) (@lem2645368)). Qed.
Lemma lem2645372 : term109 = True.
Proof. exact (TRANS (@lem2645367) (@lem2645371)). Qed.
Lemma lem2645373 : True = term109.
Proof. exact (SYM (@lem2645372)). Qed.
Lemma lem2645374 : term109.
Proof. exact (EQ_MP (@lem2645373) (@lem0)). Qed.
Lemma lem2645375 : term261 = term264.
Proof. exact (@lem2645364 (@lem2645374)). Qed.
Lemma lem2645377 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645378 : term123 = term124.
Proof. exact (@lem2645377 term32 term32). Qed.
Lemma lem2645379 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645380 : term120 = term32.
Proof. exact (EQ_MP (@lem2645379) (@lem940073)). Qed.
Lemma lem2645381 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645382 : term118 = term31.
Proof. exact (MK_COMB (@lem2645381) (@lem2645380)). Qed.
Lemma lem2645383 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645384 : term124 = term97.
Proof. exact (MK_COMB (@lem2645383) (@lem2645382)). Qed.
Lemma lem2645385 : term123 = term97.
Proof. exact (TRANS (@lem2645378) (@lem2645384)). Qed.
Lemma lem2645387 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645388 : term131 = term38.
Proof. exact (@lem2645387 term32). Qed.
Lemma lem2645389 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2645390 : term265 = term259.
Proof. exact (MK_COMB (@lem2645389) (@lem2645388)). Qed.
Lemma lem2645391 : term264 = term258.
Proof. exact (MK_COMB (@lem2645390) (@lem2645385)). Qed.
Lemma lem2645393 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2645394 : term258 = term268.
Proof. exact (@lem2645393 (NUMERAL 0) term32). Qed.
Lemma lem2645395 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645396 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2645397 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645396 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2645395)). Qed.
Lemma lem2645398 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2645397) (@lem2645395)). Qed.
Lemma lem2645399 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2645400 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2645401 : term269 = (and True).
Proof. exact (MK_COMB (@lem2645400) (@lem2645399)). Qed.
Lemma lem2645402 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2645401) (@lem2645398)). Qed.
Lemma lem2645404 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2645405 : term268 = False.
Proof. exact (TRANS (@lem2645402) (@lem2645404)). Qed.
Lemma lem2645406 : term258 = False.
Proof. exact (TRANS (@lem2645394) (@lem2645405)). Qed.
Lemma lem2645407 : term264 = False.
Proof. exact (TRANS (@lem2645391) (@lem2645406)). Qed.
Lemma lem2645408 : term261 = False.
Proof. exact (TRANS (@lem2645375) (@lem2645407)). Qed.
Lemma lem2645409 : term258 = False.
Proof. exact (TRANS (@lem2645352) (@lem2645408)). Qed.
Lemma lem2645410 : term257 = False.
Proof. exact (TRANS (@lem2645343) (@lem2645409)). Qed.
Lemma lem2645411 (m : int) (n : int) (h1 : term1064 m n) : False.
Proof. exact (EQ_MP (@lem2645410) (@lem2645340 m n h1)). Qed.
Lemma lem2645412 (m : int) (n : int) (h1 : term1066 m n) : term1066 m n.
Proof. exact (h1). Qed.
Lemma lem2645413 (m : int) (n : int) (h1 : term1066 m n) : term1065 m n.
Proof. exact (proj2 (@lem2645412 m n h1)). Qed.
Lemma lem2645415 (m : int) (n : int) (h1 : term1066 m n) : term751 m n.
Proof. exact (proj2 (@lem2645413 m n h1)). Qed.
Lemma lem2645416 (m : int) (n : int) (h1 : term1066 m n) : term586 m n.
Proof. exact (proj1 (@lem2645413 m n h1)). Qed.
Lemma lem2645418 (m : int) (n : int) (h1 : term1066 m n) : term556 n m.
Proof. exact (proj1 (@lem2645416 m n h1)). Qed.
Lemma lem2645419 (m : int) (n : int) (h1 : term1066 m n) : term158 m.
Proof. exact (proj2 (@lem2645418 m n h1)). Qed.
Lemma lem2645422 (m : int) (n : int) (h1 : term1066 m n) : term457 m.
Proof. exact (proj1 (@lem2645415 m n h1)). Qed.
Lemma lem2645424 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645425 : term229 = term109.
Proof. exact (@lem2645424 term38 term31). Qed.
Lemma lem2645427 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645428 : term31 = term99.
Proof. exact (@lem2645427 term32). Qed.
Lemma lem2645430 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645431 : term38 = term134.
Proof. exact (@lem2645430 (NUMERAL 0)). Qed.
Lemma lem2645432 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645433 : term230 = term231.
Proof. exact (MK_COMB (@lem2645432) (@lem2645431)). Qed.
Lemma lem2645434 : term109 = term232.
Proof. exact (MK_COMB (@lem2645433) (@lem2645428)). Qed.
Lemma lem2645435 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645437 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645438 : term109 = term110.
Proof. exact (@lem2645437 (NUMERAL 0) term32). Qed.
Lemma lem2645439 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645440 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645441 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645440 h1) (fun h1 : term110 = True => @lem2645439)). Qed.
Lemma lem2645442 : term110 = True.
Proof. exact (EQ_MP (@lem2645441) (@lem2645439)). Qed.
Lemma lem2645443 : term109 = True.
Proof. exact (TRANS (@lem2645438) (@lem2645442)). Qed.
Lemma lem2645444 : True = term109.
Proof. exact (SYM (@lem2645443)). Qed.
Lemma lem2645445 : term109.
Proof. exact (EQ_MP (@lem2645444) (@lem0)). Qed.
Lemma lem2645446 : term234.
Proof. exact (@lem2645435 (@lem2645445)). Qed.
Lemma lem2645448 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645449 : term109 = term110.
Proof. exact (@lem2645448 (NUMERAL 0) term32). Qed.
Lemma lem2645450 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645451 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645452 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645451 h1) (fun h1 : term110 = True => @lem2645450)). Qed.
Lemma lem2645453 : term110 = True.
Proof. exact (EQ_MP (@lem2645452) (@lem2645450)). Qed.
Lemma lem2645454 : term109 = True.
Proof. exact (TRANS (@lem2645449) (@lem2645453)). Qed.
Lemma lem2645455 : True = term109.
Proof. exact (SYM (@lem2645454)). Qed.
Lemma lem2645456 : term109.
Proof. exact (EQ_MP (@lem2645455) (@lem0)). Qed.
Lemma lem2645457 : term232 = term235.
Proof. exact (@lem2645446 (@lem2645456)). Qed.
Lemma lem2645459 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645460 : term117 = term118.
Proof. exact (@lem2645459 term32 term32). Qed.
Lemma lem2645461 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645462 : term120 = term32.
Proof. exact (EQ_MP (@lem2645461) (@lem940073)). Qed.
Lemma lem2645463 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645464 : term118 = term31.
Proof. exact (MK_COMB (@lem2645463) (@lem2645462)). Qed.
Lemma lem2645465 : term117 = term31.
Proof. exact (TRANS (@lem2645460) (@lem2645464)). Qed.
Lemma lem2645467 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645468 : term131 = term38.
Proof. exact (@lem2645467 term32). Qed.
Lemma lem2645469 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645470 : term236 = term230.
Proof. exact (MK_COMB (@lem2645469) (@lem2645468)). Qed.
Lemma lem2645471 : term235 = term109.
Proof. exact (MK_COMB (@lem2645470) (@lem2645465)). Qed.
Lemma lem2645473 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645474 : term109 = term110.
Proof. exact (@lem2645473 (NUMERAL 0) term32). Qed.
Lemma lem2645475 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645476 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645477 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645476 h1) (fun h1 : term110 = True => @lem2645475)). Qed.
Lemma lem2645478 : term110 = True.
Proof. exact (EQ_MP (@lem2645477) (@lem2645475)). Qed.
Lemma lem2645479 : term109 = True.
Proof. exact (TRANS (@lem2645474) (@lem2645478)). Qed.
Lemma lem2645480 : term235 = True.
Proof. exact (TRANS (@lem2645471) (@lem2645479)). Qed.
Lemma lem2645481 : term232 = True.
Proof. exact (TRANS (@lem2645457) (@lem2645480)). Qed.
Lemma lem2645482 : term109 = True.
Proof. exact (TRANS (@lem2645434) (@lem2645481)). Qed.
Lemma lem2645483 : term229 = True.
Proof. exact (TRANS (@lem2645425) (@lem2645482)). Qed.
Lemma lem2645484 : True = term229.
Proof. exact (SYM (@lem2645483)). Qed.
Lemma lem2645485 : term229.
Proof. exact (EQ_MP (@lem2645484) (@lem0)). Qed.
Lemma lem2645486 (m : int) (n : int) (h1 : term1066 m n) : term1129 m.
Proof. exact (conj (@lem2645485) (@lem2645422 m n h1)). Qed.
Lemma lem2645488 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645489 (m : int) : term1130 m.
Proof. exact (@lem2645488 term31 (real_of_int m)). Qed.
Lemma lem2645490 (m : int) (n : int) (h1 : term1066 m n) : term1131 m.
Proof. exact (@lem2645489 m (@lem2645486 m n h1)). Qed.
Lemma lem2645491 (m : int) : (term194 m) = (real_of_int m).
Proof. exact (@lem1982733 (real_of_int m)). Qed.
Lemma lem2645492 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645493 (m : int) : (term1132 m) = (term456 m).
Proof. exact (MK_COMB (@lem2645492) (@lem2645491 m)). Qed.
Lemma lem2645494 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645495 (m : int) : (term1131 m) = (term457 m).
Proof. exact (MK_COMB (@lem2645493 m) (@lem2645494)). Qed.
Lemma lem2645496 (m : int) (n : int) (h1 : term1066 m n) : term457 m.
Proof. exact (EQ_MP (@lem2645495 m) (@lem2645490 m n h1)). Qed.
Lemma lem2645498 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645499 : term229 = term109.
Proof. exact (@lem2645498 term38 term31). Qed.
Lemma lem2645501 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645502 : term31 = term99.
Proof. exact (@lem2645501 term32). Qed.
Lemma lem2645504 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645505 : term38 = term134.
Proof. exact (@lem2645504 (NUMERAL 0)). Qed.
Lemma lem2645506 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645507 : term230 = term231.
Proof. exact (MK_COMB (@lem2645506) (@lem2645505)). Qed.
Lemma lem2645508 : term109 = term232.
Proof. exact (MK_COMB (@lem2645507) (@lem2645502)). Qed.
Lemma lem2645509 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645511 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645512 : term109 = term110.
Proof. exact (@lem2645511 (NUMERAL 0) term32). Qed.
Lemma lem2645513 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645514 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645515 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645514 h1) (fun h1 : term110 = True => @lem2645513)). Qed.
Lemma lem2645516 : term110 = True.
Proof. exact (EQ_MP (@lem2645515) (@lem2645513)). Qed.
Lemma lem2645517 : term109 = True.
Proof. exact (TRANS (@lem2645512) (@lem2645516)). Qed.
Lemma lem2645518 : True = term109.
Proof. exact (SYM (@lem2645517)). Qed.
Lemma lem2645519 : term109.
Proof. exact (EQ_MP (@lem2645518) (@lem0)). Qed.
Lemma lem2645520 : term234.
Proof. exact (@lem2645509 (@lem2645519)). Qed.
Lemma lem2645522 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645523 : term109 = term110.
Proof. exact (@lem2645522 (NUMERAL 0) term32). Qed.
Lemma lem2645524 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645525 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645526 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645525 h1) (fun h1 : term110 = True => @lem2645524)). Qed.
Lemma lem2645527 : term110 = True.
Proof. exact (EQ_MP (@lem2645526) (@lem2645524)). Qed.
Lemma lem2645528 : term109 = True.
Proof. exact (TRANS (@lem2645523) (@lem2645527)). Qed.
Lemma lem2645529 : True = term109.
Proof. exact (SYM (@lem2645528)). Qed.
Lemma lem2645530 : term109.
Proof. exact (EQ_MP (@lem2645529) (@lem0)). Qed.
Lemma lem2645531 : term232 = term235.
Proof. exact (@lem2645520 (@lem2645530)). Qed.
Lemma lem2645533 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645534 : term117 = term118.
Proof. exact (@lem2645533 term32 term32). Qed.
Lemma lem2645535 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645536 : term120 = term32.
Proof. exact (EQ_MP (@lem2645535) (@lem940073)). Qed.
Lemma lem2645537 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645538 : term118 = term31.
Proof. exact (MK_COMB (@lem2645537) (@lem2645536)). Qed.
Lemma lem2645539 : term117 = term31.
Proof. exact (TRANS (@lem2645534) (@lem2645538)). Qed.
Lemma lem2645541 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645542 : term131 = term38.
Proof. exact (@lem2645541 term32). Qed.
Lemma lem2645543 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645544 : term236 = term230.
Proof. exact (MK_COMB (@lem2645543) (@lem2645542)). Qed.
Lemma lem2645545 : term235 = term109.
Proof. exact (MK_COMB (@lem2645544) (@lem2645539)). Qed.
Lemma lem2645547 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645548 : term109 = term110.
Proof. exact (@lem2645547 (NUMERAL 0) term32). Qed.
Lemma lem2645549 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645550 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645551 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645550 h1) (fun h1 : term110 = True => @lem2645549)). Qed.
Lemma lem2645552 : term110 = True.
Proof. exact (EQ_MP (@lem2645551) (@lem2645549)). Qed.
Lemma lem2645553 : term109 = True.
Proof. exact (TRANS (@lem2645548) (@lem2645552)). Qed.
Lemma lem2645554 : term235 = True.
Proof. exact (TRANS (@lem2645545) (@lem2645553)). Qed.
Lemma lem2645555 : term232 = True.
Proof. exact (TRANS (@lem2645531) (@lem2645554)). Qed.
Lemma lem2645556 : term109 = True.
Proof. exact (TRANS (@lem2645508) (@lem2645555)). Qed.
Lemma lem2645557 : term229 = True.
Proof. exact (TRANS (@lem2645499) (@lem2645556)). Qed.
Lemma lem2645558 : True = term229.
Proof. exact (SYM (@lem2645557)). Qed.
Lemma lem2645559 : term229.
Proof. exact (EQ_MP (@lem2645558) (@lem0)). Qed.
Lemma lem2645560 (m : int) (n : int) (h1 : term1066 m n) : term237 m.
Proof. exact (conj (@lem2645559) (@lem2645419 m n h1)). Qed.
Lemma lem2645562 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645563 (m : int) : term239 m.
Proof. exact (@lem2645562 term31 (term154 m)). Qed.
Lemma lem2645564 (m : int) (n : int) (h1 : term1066 m n) : term240 m.
Proof. exact (@lem2645563 m (@lem2645560 m n h1)). Qed.
Lemma lem2645565 (m : int) : (term241 m) = (term154 m).
Proof. exact (@lem1982733 (term154 m)). Qed.
Lemma lem2645566 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645567 (m : int) : (term242 m) = (term157 m).
Proof. exact (MK_COMB (@lem2645566) (@lem2645565 m)). Qed.
Lemma lem2645568 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645569 (m : int) : (term240 m) = (term158 m).
Proof. exact (MK_COMB (@lem2645567 m) (@lem2645568)). Qed.
Lemma lem2645570 (m : int) (n : int) (h1 : term1066 m n) : term158 m.
Proof. exact (EQ_MP (@lem2645569 m) (@lem2645564 m n h1)). Qed.
Lemma lem2645571 (m : int) (n : int) (h1 : term1066 m n) : term1133 m.
Proof. exact (conj (@lem2645570 m n h1) (@lem2645496 m n h1)). Qed.
Lemma lem2645573 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2645574 (m : int) : term1135 m.
Proof. exact (@lem2645573 (term154 m) (real_of_int m)). Qed.
Lemma lem2645575 (m : int) (n : int) (h1 : term1066 m n) : term1136 m.
Proof. exact (@lem2645574 m (@lem2645571 m n h1)). Qed.
Lemma lem2645576 (m : int) : (term1137 m) = (term282 m).
Proof. exact (@lem1982759 (term94 m) (real_of_int m) term97). Qed.
Lemma lem2645577 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2645579 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645580 : term31 = term99.
Proof. exact (@lem2645579 term32). Qed.
Lemma lem2645582 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2645583 : term97 = term102.
Proof. exact (@lem2645582 term32). Qed.
Lemma lem2645584 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645585 : term103 = term104.
Proof. exact (MK_COMB (@lem2645584) (@lem2645583)). Qed.
Lemma lem2645586 : term105 = term106.
Proof. exact (MK_COMB (@lem2645585) (@lem2645580)). Qed.
Lemma lem2645587 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2645589 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645590 : term109 = term110.
Proof. exact (@lem2645589 (NUMERAL 0) term32). Qed.
Lemma lem2645591 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645592 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645593 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645592 h1) (fun h1 : term110 = True => @lem2645591)). Qed.
Lemma lem2645594 : term110 = True.
Proof. exact (EQ_MP (@lem2645593) (@lem2645591)). Qed.
Lemma lem2645595 : term109 = True.
Proof. exact (TRANS (@lem2645590) (@lem2645594)). Qed.
Lemma lem2645596 : True = term109.
Proof. exact (SYM (@lem2645595)). Qed.
Lemma lem2645597 : term109.
Proof. exact (EQ_MP (@lem2645596) (@lem0)). Qed.
Lemma lem2645598 : term112.
Proof. exact (@lem2645587 (@lem2645597)). Qed.
Lemma lem2645600 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645601 : term109 = term110.
Proof. exact (@lem2645600 (NUMERAL 0) term32). Qed.
Lemma lem2645602 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645603 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645604 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645603 h1) (fun h1 : term110 = True => @lem2645602)). Qed.
Lemma lem2645605 : term110 = True.
Proof. exact (EQ_MP (@lem2645604) (@lem2645602)). Qed.
Lemma lem2645606 : term109 = True.
Proof. exact (TRANS (@lem2645601) (@lem2645605)). Qed.
Lemma lem2645607 : True = term109.
Proof. exact (SYM (@lem2645606)). Qed.
Lemma lem2645608 : term109.
Proof. exact (EQ_MP (@lem2645607) (@lem0)). Qed.
Lemma lem2645609 : term113.
Proof. exact (@lem2645598 (@lem2645608)). Qed.
Lemma lem2645611 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645612 : term109 = term110.
Proof. exact (@lem2645611 (NUMERAL 0) term32). Qed.
Lemma lem2645613 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645614 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645615 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645614 h1) (fun h1 : term110 = True => @lem2645613)). Qed.
Lemma lem2645616 : term110 = True.
Proof. exact (EQ_MP (@lem2645615) (@lem2645613)). Qed.
Lemma lem2645617 : term109 = True.
Proof. exact (TRANS (@lem2645612) (@lem2645616)). Qed.
Lemma lem2645618 : True = term109.
Proof. exact (SYM (@lem2645617)). Qed.
Lemma lem2645619 : term109.
Proof. exact (EQ_MP (@lem2645618) (@lem0)). Qed.
Lemma lem2645620 : term114.
Proof. exact (@lem2645609 (@lem2645619)). Qed.
Lemma lem2645622 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645623 : term117 = term118.
Proof. exact (@lem2645622 term32 term32). Qed.
Lemma lem2645624 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645625 : term120 = term32.
Proof. exact (EQ_MP (@lem2645624) (@lem940073)). Qed.
Lemma lem2645626 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645627 : term118 = term31.
Proof. exact (MK_COMB (@lem2645626) (@lem2645625)). Qed.
Lemma lem2645628 : term117 = term31.
Proof. exact (TRANS (@lem2645623) (@lem2645627)). Qed.
Lemma lem2645630 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645631 : term123 = term124.
Proof. exact (@lem2645630 term32 term32). Qed.
Lemma lem2645632 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645633 : term120 = term32.
Proof. exact (EQ_MP (@lem2645632) (@lem940073)). Qed.
Lemma lem2645634 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645635 : term118 = term31.
Proof. exact (MK_COMB (@lem2645634) (@lem2645633)). Qed.
Lemma lem2645636 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645637 : term124 = term97.
Proof. exact (MK_COMB (@lem2645636) (@lem2645635)). Qed.
Lemma lem2645638 : term123 = term97.
Proof. exact (TRANS (@lem2645631) (@lem2645637)). Qed.
Lemma lem2645639 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645640 : term125 = term103.
Proof. exact (MK_COMB (@lem2645639) (@lem2645638)). Qed.
Lemma lem2645641 : term126 = term105.
Proof. exact (MK_COMB (@lem2645640) (@lem2645628)). Qed.
Lemma lem2645643 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2645644 : term105 = term38.
Proof. exact (@lem2645643 term32). Qed.
Lemma lem2645645 : term126 = term38.
Proof. exact (TRANS (@lem2645641) (@lem2645644)). Qed.
Lemma lem2645646 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2645647 : term128 = term129.
Proof. exact (MK_COMB (@lem2645646) (@lem2645645)). Qed.
Lemma lem2645648 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2645649 : term130 = term131.
Proof. exact (MK_COMB (@lem2645647) (@lem2645648)). Qed.
Lemma lem2645651 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645652 : term131 = term38.
Proof. exact (@lem2645651 term32). Qed.
Lemma lem2645653 : term130 = term38.
Proof. exact (TRANS (@lem2645649) (@lem2645652)). Qed.
Lemma lem2645655 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645656 : term117 = term118.
Proof. exact (@lem2645655 term32 term32). Qed.
Lemma lem2645657 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645658 : term120 = term32.
Proof. exact (EQ_MP (@lem2645657) (@lem940073)). Qed.
Lemma lem2645659 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645660 : term118 = term31.
Proof. exact (MK_COMB (@lem2645659) (@lem2645658)). Qed.
Lemma lem2645661 : term117 = term31.
Proof. exact (TRANS (@lem2645656) (@lem2645660)). Qed.
Lemma lem2645662 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2645663 : term133 = term131.
Proof. exact (MK_COMB (@lem2645662) (@lem2645661)). Qed.
Lemma lem2645665 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645666 : term131 = term38.
Proof. exact (@lem2645665 term32). Qed.
Lemma lem2645667 : term133 = term38.
Proof. exact (TRANS (@lem2645663) (@lem2645666)). Qed.
Lemma lem2645668 : term38 = term133.
Proof. exact (SYM (@lem2645667)). Qed.
Lemma lem2645669 : term130 = term133.
Proof. exact (TRANS (@lem2645653) (@lem2645668)). Qed.
Lemma lem2645670 : term106 = term134.
Proof. exact (@lem2645620 (@lem2645669)). Qed.
Lemma lem2645671 : term105 = term134.
Proof. exact (TRANS (@lem2645586) (@lem2645670)). Qed.
Lemma lem2645673 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2645674 : term134 = term38.
Proof. exact (@lem2645673 term38). Qed.
Lemma lem2645675 : term105 = term38.
Proof. exact (TRANS (@lem2645671) (@lem2645674)). Qed.
Lemma lem2645676 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2645677 : term136 = term129.
Proof. exact (MK_COMB (@lem2645676) (@lem2645675)). Qed.
Lemma lem2645678 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2645679 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2645677) (@lem2645678 m)). Qed.
Lemma lem2645680 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2645577 m) (@lem2645679 m)). Qed.
Lemma lem2645681 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2645682 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2645680 m) (@lem2645681 m)). Qed.
Lemma lem2645683 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645684 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2645683) (@lem2645682 m)). Qed.
Lemma lem2645685 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2645686 (m : int) : (term282 m) = term254.
Proof. exact (MK_COMB (@lem2645684 m) (@lem2645685)). Qed.
Lemma lem2645687 (m : int) : (term1137 m) = term254.
Proof. exact (TRANS (@lem2645576 m) (@lem2645686 m)). Qed.
Lemma lem2645688 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2645689 (m : int) : (term1137 m) = term97.
Proof. exact (TRANS (@lem2645687 m) (@lem2645688)). Qed.
Lemma lem2645690 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645691 (m : int) : (term1138 m) = term256.
Proof. exact (MK_COMB (@lem2645690) (@lem2645689 m)). Qed.
Lemma lem2645692 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645693 (m : int) : (term1136 m) = term257.
Proof. exact (MK_COMB (@lem2645691 m) (@lem2645692)). Qed.
Lemma lem2645694 (m : int) (n : int) (h1 : term1066 m n) : term257.
Proof. exact (EQ_MP (@lem2645693 m) (@lem2645575 m n h1)). Qed.
Lemma lem2645696 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2645697 : term257 = term258.
Proof. exact (@lem2645696 term38 term97). Qed.
Lemma lem2645699 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2645700 : term97 = term102.
Proof. exact (@lem2645699 term32). Qed.
Lemma lem2645702 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645703 : term38 = term134.
Proof. exact (@lem2645702 (NUMERAL 0)). Qed.
Lemma lem2645704 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2645705 : term259 = term260.
Proof. exact (MK_COMB (@lem2645704) (@lem2645703)). Qed.
Lemma lem2645706 : term258 = term261.
Proof. exact (MK_COMB (@lem2645705) (@lem2645700)). Qed.
Lemma lem2645707 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2645709 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645710 : term109 = term110.
Proof. exact (@lem2645709 (NUMERAL 0) term32). Qed.
Lemma lem2645711 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645712 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645713 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645712 h1) (fun h1 : term110 = True => @lem2645711)). Qed.
Lemma lem2645714 : term110 = True.
Proof. exact (EQ_MP (@lem2645713) (@lem2645711)). Qed.
Lemma lem2645715 : term109 = True.
Proof. exact (TRANS (@lem2645710) (@lem2645714)). Qed.
Lemma lem2645716 : True = term109.
Proof. exact (SYM (@lem2645715)). Qed.
Lemma lem2645717 : term109.
Proof. exact (EQ_MP (@lem2645716) (@lem0)). Qed.
Lemma lem2645718 : term263.
Proof. exact (@lem2645707 (@lem2645717)). Qed.
Lemma lem2645720 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645721 : term109 = term110.
Proof. exact (@lem2645720 (NUMERAL 0) term32). Qed.
Lemma lem2645722 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645723 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645724 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645723 h1) (fun h1 : term110 = True => @lem2645722)). Qed.
Lemma lem2645725 : term110 = True.
Proof. exact (EQ_MP (@lem2645724) (@lem2645722)). Qed.
Lemma lem2645726 : term109 = True.
Proof. exact (TRANS (@lem2645721) (@lem2645725)). Qed.
Lemma lem2645727 : True = term109.
Proof. exact (SYM (@lem2645726)). Qed.
Lemma lem2645728 : term109.
Proof. exact (EQ_MP (@lem2645727) (@lem0)). Qed.
Lemma lem2645729 : term261 = term264.
Proof. exact (@lem2645718 (@lem2645728)). Qed.
Lemma lem2645731 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645732 : term123 = term124.
Proof. exact (@lem2645731 term32 term32). Qed.
Lemma lem2645733 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645734 : term120 = term32.
Proof. exact (EQ_MP (@lem2645733) (@lem940073)). Qed.
Lemma lem2645735 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645736 : term118 = term31.
Proof. exact (MK_COMB (@lem2645735) (@lem2645734)). Qed.
Lemma lem2645737 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645738 : term124 = term97.
Proof. exact (MK_COMB (@lem2645737) (@lem2645736)). Qed.
Lemma lem2645739 : term123 = term97.
Proof. exact (TRANS (@lem2645732) (@lem2645738)). Qed.
Lemma lem2645741 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645742 : term131 = term38.
Proof. exact (@lem2645741 term32). Qed.
Lemma lem2645743 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2645744 : term265 = term259.
Proof. exact (MK_COMB (@lem2645743) (@lem2645742)). Qed.
Lemma lem2645745 : term264 = term258.
Proof. exact (MK_COMB (@lem2645744) (@lem2645739)). Qed.
Lemma lem2645747 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2645748 : term258 = term268.
Proof. exact (@lem2645747 (NUMERAL 0) term32). Qed.
Lemma lem2645749 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645750 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2645751 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645750 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2645749)). Qed.
Lemma lem2645752 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2645751) (@lem2645749)). Qed.
Lemma lem2645753 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2645754 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2645755 : term269 = (and True).
Proof. exact (MK_COMB (@lem2645754) (@lem2645753)). Qed.
Lemma lem2645756 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2645755) (@lem2645752)). Qed.
Lemma lem2645758 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2645759 : term268 = False.
Proof. exact (TRANS (@lem2645756) (@lem2645758)). Qed.
Lemma lem2645760 : term258 = False.
Proof. exact (TRANS (@lem2645748) (@lem2645759)). Qed.
Lemma lem2645761 : term264 = False.
Proof. exact (TRANS (@lem2645745) (@lem2645760)). Qed.
Lemma lem2645762 : term261 = False.
Proof. exact (TRANS (@lem2645729) (@lem2645761)). Qed.
Lemma lem2645763 : term258 = False.
Proof. exact (TRANS (@lem2645706) (@lem2645762)). Qed.
Lemma lem2645764 : term257 = False.
Proof. exact (TRANS (@lem2645697) (@lem2645763)). Qed.
Lemma lem2645765 (m : int) (n : int) (h1 : term1066 m n) : False.
Proof. exact (EQ_MP (@lem2645764) (@lem2645694 m n h1)). Qed.
Lemma lem2645766 (m : int) (n : int) (h1 : term1068 m n) : False.
Proof. exact (or_elim (@lem2645057 m n h1) (fun h0 : term1064 m n => @lem2645411 m n h0) (fun h0 : term1066 m n => @lem2645765 m n h0)). Qed.
Lemma lem2645767 (m : int) (n : int) (h1 : term1071 m n) : False.
Proof. exact (or_elim (@lem2644346 m n h1) (fun h0 : term1045 m n => @lem2645056 m n h0) (fun h0 : term1068 m n => @lem2645766 m n h0)). Qed.
Lemma lem2645768 (m : int) (n : int) (h1 : term1120 m n) : term1120 m n.
Proof. exact (h1). Qed.
Lemma lem2645769 (m : int) (n : int) (h1 : term1094 m n) : term1094 m n.
Proof. exact (h1). Qed.
Lemma lem2645770 (m : int) (n : int) (h1 : term1090 m n) : term1090 m n.
Proof. exact (h1). Qed.
Lemma lem2645771 (m : int) (n : int) (h1 : term1090 m n) : term1089 m n.
Proof. exact (proj2 (@lem2645770 m n h1)). Qed.
Lemma lem2645773 (m : int) (n : int) (h1 : term1090 m n) : term716 m n.
Proof. exact (proj2 (@lem2645771 m n h1)). Qed.
Lemma lem2645774 (m : int) (n : int) (h1 : term1090 m n) : term905 m n.
Proof. exact (proj1 (@lem2645771 m n h1)). Qed.
Lemma lem2645776 (m : int) (n : int) (h1 : term1090 m n) : term808 m n.
Proof. exact (proj1 (@lem2645774 m n h1)). Qed.
Lemma lem2645777 (m : int) (n : int) (h1 : term1090 m n) : term807 m n.
Proof. exact (proj2 (@lem2645776 m n h1)). Qed.
Lemma lem2645780 (m : int) (n : int) (h1 : term1090 m n) : term829 m n.
Proof. exact (proj1 (@lem2645777 m n h1)). Qed.
Lemma lem2645781 (m : int) (n : int) (h1 : term1090 m n) : term714 m n.
Proof. exact (proj2 (@lem2645773 m n h1)). Qed.
Lemma lem2645784 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645785 : term229 = term109.
Proof. exact (@lem2645784 term38 term31). Qed.
Lemma lem2645787 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645788 : term31 = term99.
Proof. exact (@lem2645787 term32). Qed.
Lemma lem2645790 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645791 : term38 = term134.
Proof. exact (@lem2645790 (NUMERAL 0)). Qed.
Lemma lem2645792 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645793 : term230 = term231.
Proof. exact (MK_COMB (@lem2645792) (@lem2645791)). Qed.
Lemma lem2645794 : term109 = term232.
Proof. exact (MK_COMB (@lem2645793) (@lem2645788)). Qed.
Lemma lem2645795 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645797 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645798 : term109 = term110.
Proof. exact (@lem2645797 (NUMERAL 0) term32). Qed.
Lemma lem2645799 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645800 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645801 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645800 h1) (fun h1 : term110 = True => @lem2645799)). Qed.
Lemma lem2645802 : term110 = True.
Proof. exact (EQ_MP (@lem2645801) (@lem2645799)). Qed.
Lemma lem2645803 : term109 = True.
Proof. exact (TRANS (@lem2645798) (@lem2645802)). Qed.
Lemma lem2645804 : True = term109.
Proof. exact (SYM (@lem2645803)). Qed.
Lemma lem2645805 : term109.
Proof. exact (EQ_MP (@lem2645804) (@lem0)). Qed.
Lemma lem2645806 : term234.
Proof. exact (@lem2645795 (@lem2645805)). Qed.
Lemma lem2645808 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645809 : term109 = term110.
Proof. exact (@lem2645808 (NUMERAL 0) term32). Qed.
Lemma lem2645810 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645811 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645812 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645811 h1) (fun h1 : term110 = True => @lem2645810)). Qed.
Lemma lem2645813 : term110 = True.
Proof. exact (EQ_MP (@lem2645812) (@lem2645810)). Qed.
Lemma lem2645814 : term109 = True.
Proof. exact (TRANS (@lem2645809) (@lem2645813)). Qed.
Lemma lem2645815 : True = term109.
Proof. exact (SYM (@lem2645814)). Qed.
Lemma lem2645816 : term109.
Proof. exact (EQ_MP (@lem2645815) (@lem0)). Qed.
Lemma lem2645817 : term232 = term235.
Proof. exact (@lem2645806 (@lem2645816)). Qed.
Lemma lem2645819 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645820 : term117 = term118.
Proof. exact (@lem2645819 term32 term32). Qed.
Lemma lem2645821 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645822 : term120 = term32.
Proof. exact (EQ_MP (@lem2645821) (@lem940073)). Qed.
Lemma lem2645823 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645824 : term118 = term31.
Proof. exact (MK_COMB (@lem2645823) (@lem2645822)). Qed.
Lemma lem2645825 : term117 = term31.
Proof. exact (TRANS (@lem2645820) (@lem2645824)). Qed.
Lemma lem2645827 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645828 : term131 = term38.
Proof. exact (@lem2645827 term32). Qed.
Lemma lem2645829 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645830 : term236 = term230.
Proof. exact (MK_COMB (@lem2645829) (@lem2645828)). Qed.
Lemma lem2645831 : term235 = term109.
Proof. exact (MK_COMB (@lem2645830) (@lem2645825)). Qed.
Lemma lem2645833 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645834 : term109 = term110.
Proof. exact (@lem2645833 (NUMERAL 0) term32). Qed.
Lemma lem2645835 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645836 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645837 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645836 h1) (fun h1 : term110 = True => @lem2645835)). Qed.
Lemma lem2645838 : term110 = True.
Proof. exact (EQ_MP (@lem2645837) (@lem2645835)). Qed.
Lemma lem2645839 : term109 = True.
Proof. exact (TRANS (@lem2645834) (@lem2645838)). Qed.
Lemma lem2645840 : term235 = True.
Proof. exact (TRANS (@lem2645831) (@lem2645839)). Qed.
Lemma lem2645841 : term232 = True.
Proof. exact (TRANS (@lem2645817) (@lem2645840)). Qed.
Lemma lem2645842 : term109 = True.
Proof. exact (TRANS (@lem2645794) (@lem2645841)). Qed.
Lemma lem2645843 : term229 = True.
Proof. exact (TRANS (@lem2645785) (@lem2645842)). Qed.
Lemma lem2645844 : True = term229.
Proof. exact (SYM (@lem2645843)). Qed.
Lemma lem2645845 : term229.
Proof. exact (EQ_MP (@lem2645844) (@lem0)). Qed.
Lemma lem2645846 (m : int) (n : int) (h1 : term1090 m n) : term1157 m n.
Proof. exact (conj (@lem2645845) (@lem2645780 m n h1)). Qed.
Lemma lem2645848 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645849 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2645848 term31 (term88 m n)). Qed.
Lemma lem2645850 (m : int) (n : int) (h1 : term1090 m n) : term1159 m n.
Proof. exact (@lem2645849 m n (@lem2645846 m n h1)). Qed.
Lemma lem2645851 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2645852 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645853 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2645852) (@lem2645851 m n)). Qed.
Lemma lem2645854 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645855 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2645853 m n) (@lem2645854)). Qed.
Lemma lem2645856 (m : int) (n : int) (h1 : term1090 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2645855 m n) (@lem2645850 m n h1)). Qed.
Lemma lem2645858 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2645859 : term229 = term109.
Proof. exact (@lem2645858 term38 term31). Qed.
Lemma lem2645861 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645862 : term31 = term99.
Proof. exact (@lem2645861 term32). Qed.
Lemma lem2645864 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645865 : term38 = term134.
Proof. exact (@lem2645864 (NUMERAL 0)). Qed.
Lemma lem2645866 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645867 : term230 = term231.
Proof. exact (MK_COMB (@lem2645866) (@lem2645865)). Qed.
Lemma lem2645868 : term109 = term232.
Proof. exact (MK_COMB (@lem2645867) (@lem2645862)). Qed.
Lemma lem2645869 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2645871 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645872 : term109 = term110.
Proof. exact (@lem2645871 (NUMERAL 0) term32). Qed.
Lemma lem2645873 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645874 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645875 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645874 h1) (fun h1 : term110 = True => @lem2645873)). Qed.
Lemma lem2645876 : term110 = True.
Proof. exact (EQ_MP (@lem2645875) (@lem2645873)). Qed.
Lemma lem2645877 : term109 = True.
Proof. exact (TRANS (@lem2645872) (@lem2645876)). Qed.
Lemma lem2645878 : True = term109.
Proof. exact (SYM (@lem2645877)). Qed.
Lemma lem2645879 : term109.
Proof. exact (EQ_MP (@lem2645878) (@lem0)). Qed.
Lemma lem2645880 : term234.
Proof. exact (@lem2645869 (@lem2645879)). Qed.
Lemma lem2645882 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645883 : term109 = term110.
Proof. exact (@lem2645882 (NUMERAL 0) term32). Qed.
Lemma lem2645884 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645885 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645886 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645885 h1) (fun h1 : term110 = True => @lem2645884)). Qed.
Lemma lem2645887 : term110 = True.
Proof. exact (EQ_MP (@lem2645886) (@lem2645884)). Qed.
Lemma lem2645888 : term109 = True.
Proof. exact (TRANS (@lem2645883) (@lem2645887)). Qed.
Lemma lem2645889 : True = term109.
Proof. exact (SYM (@lem2645888)). Qed.
Lemma lem2645890 : term109.
Proof. exact (EQ_MP (@lem2645889) (@lem0)). Qed.
Lemma lem2645891 : term232 = term235.
Proof. exact (@lem2645880 (@lem2645890)). Qed.
Lemma lem2645893 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645894 : term117 = term118.
Proof. exact (@lem2645893 term32 term32). Qed.
Lemma lem2645895 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645896 : term120 = term32.
Proof. exact (EQ_MP (@lem2645895) (@lem940073)). Qed.
Lemma lem2645897 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645898 : term118 = term31.
Proof. exact (MK_COMB (@lem2645897) (@lem2645896)). Qed.
Lemma lem2645899 : term117 = term31.
Proof. exact (TRANS (@lem2645894) (@lem2645898)). Qed.
Lemma lem2645901 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2645902 : term131 = term38.
Proof. exact (@lem2645901 term32). Qed.
Lemma lem2645903 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2645904 : term236 = term230.
Proof. exact (MK_COMB (@lem2645903) (@lem2645902)). Qed.
Lemma lem2645905 : term235 = term109.
Proof. exact (MK_COMB (@lem2645904) (@lem2645899)). Qed.
Lemma lem2645907 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645908 : term109 = term110.
Proof. exact (@lem2645907 (NUMERAL 0) term32). Qed.
Lemma lem2645909 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645910 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645911 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645910 h1) (fun h1 : term110 = True => @lem2645909)). Qed.
Lemma lem2645912 : term110 = True.
Proof. exact (EQ_MP (@lem2645911) (@lem2645909)). Qed.
Lemma lem2645913 : term109 = True.
Proof. exact (TRANS (@lem2645908) (@lem2645912)). Qed.
Lemma lem2645914 : term235 = True.
Proof. exact (TRANS (@lem2645905) (@lem2645913)). Qed.
Lemma lem2645915 : term232 = True.
Proof. exact (TRANS (@lem2645891) (@lem2645914)). Qed.
Lemma lem2645916 : term109 = True.
Proof. exact (TRANS (@lem2645868) (@lem2645915)). Qed.
Lemma lem2645917 : term229 = True.
Proof. exact (TRANS (@lem2645859) (@lem2645916)). Qed.
Lemma lem2645918 : True = term229.
Proof. exact (SYM (@lem2645917)). Qed.
Lemma lem2645919 : term229.
Proof. exact (EQ_MP (@lem2645918) (@lem0)). Qed.
Lemma lem2645920 (m : int) (n : int) (h1 : term1090 m n) : term1162 m n.
Proof. exact (conj (@lem2645919) (@lem2645781 m n h1)). Qed.
Lemma lem2645922 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2645923 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2645922 term31 (term196 m n)). Qed.
Lemma lem2645924 (m : int) (n : int) (h1 : term1090 m n) : term1164 m n.
Proof. exact (@lem2645923 m n (@lem2645920 m n h1)). Qed.
Lemma lem2645925 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2645926 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2645927 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2645926) (@lem2645925 m n)). Qed.
Lemma lem2645928 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2645929 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2645927 m n) (@lem2645928)). Qed.
Lemma lem2645930 (m : int) (n : int) (h1 : term1090 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2645929 m n) (@lem2645924 m n h1)). Qed.
Lemma lem2645931 (m : int) (n : int) (h1 : term1090 m n) : term1167 m n.
Proof. exact (conj (@lem2645930 m n h1) (@lem2645856 m n h1)). Qed.
Lemma lem2645933 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2645934 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2645933 (term196 m n) (term88 m n)). Qed.
Lemma lem2645935 (m : int) (n : int) (h1 : term1090 m n) : term1169 m n.
Proof. exact (@lem2645934 m n (@lem2645931 m n h1)). Qed.
Lemma lem2645936 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2645937 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2645939 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2645940 : term31 = term99.
Proof. exact (@lem2645939 term32). Qed.
Lemma lem2645942 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2645943 : term97 = term102.
Proof. exact (@lem2645942 term32). Qed.
Lemma lem2645944 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2645945 : term103 = term104.
Proof. exact (MK_COMB (@lem2645944) (@lem2645943)). Qed.
Lemma lem2645946 : term105 = term106.
Proof. exact (MK_COMB (@lem2645945) (@lem2645940)). Qed.
Lemma lem2645947 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2645949 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645950 : term109 = term110.
Proof. exact (@lem2645949 (NUMERAL 0) term32). Qed.
Lemma lem2645951 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645952 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645953 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645952 h1) (fun h1 : term110 = True => @lem2645951)). Qed.
Lemma lem2645954 : term110 = True.
Proof. exact (EQ_MP (@lem2645953) (@lem2645951)). Qed.
Lemma lem2645955 : term109 = True.
Proof. exact (TRANS (@lem2645950) (@lem2645954)). Qed.
Lemma lem2645956 : True = term109.
Proof. exact (SYM (@lem2645955)). Qed.
Lemma lem2645957 : term109.
Proof. exact (EQ_MP (@lem2645956) (@lem0)). Qed.
Lemma lem2645958 : term112.
Proof. exact (@lem2645947 (@lem2645957)). Qed.
Lemma lem2645960 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645961 : term109 = term110.
Proof. exact (@lem2645960 (NUMERAL 0) term32). Qed.
Lemma lem2645962 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645963 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645964 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645963 h1) (fun h1 : term110 = True => @lem2645962)). Qed.
Lemma lem2645965 : term110 = True.
Proof. exact (EQ_MP (@lem2645964) (@lem2645962)). Qed.
Lemma lem2645966 : term109 = True.
Proof. exact (TRANS (@lem2645961) (@lem2645965)). Qed.
Lemma lem2645967 : True = term109.
Proof. exact (SYM (@lem2645966)). Qed.
Lemma lem2645968 : term109.
Proof. exact (EQ_MP (@lem2645967) (@lem0)). Qed.
Lemma lem2645969 : term113.
Proof. exact (@lem2645958 (@lem2645968)). Qed.
Lemma lem2645971 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2645972 : term109 = term110.
Proof. exact (@lem2645971 (NUMERAL 0) term32). Qed.
Lemma lem2645973 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2645974 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2645975 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2645974 h1) (fun h1 : term110 = True => @lem2645973)). Qed.
Lemma lem2645976 : term110 = True.
Proof. exact (EQ_MP (@lem2645975) (@lem2645973)). Qed.
Lemma lem2645977 : term109 = True.
Proof. exact (TRANS (@lem2645972) (@lem2645976)). Qed.
Lemma lem2645978 : True = term109.
Proof. exact (SYM (@lem2645977)). Qed.
Lemma lem2645979 : term109.
Proof. exact (EQ_MP (@lem2645978) (@lem0)). Qed.
Lemma lem2645980 : term114.
Proof. exact (@lem2645969 (@lem2645979)). Qed.
Lemma lem2645982 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2645983 : term117 = term118.
Proof. exact (@lem2645982 term32 term32). Qed.
Lemma lem2645984 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645985 : term120 = term32.
Proof. exact (EQ_MP (@lem2645984) (@lem940073)). Qed.
Lemma lem2645986 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645987 : term118 = term31.
Proof. exact (MK_COMB (@lem2645986) (@lem2645985)). Qed.
Lemma lem2645988 : term117 = term31.
Proof. exact (TRANS (@lem2645983) (@lem2645987)). Qed.
Lemma lem2645990 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2645991 : term123 = term124.
Proof. exact (@lem2645990 term32 term32). Qed.
Lemma lem2645992 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2645993 : term120 = term32.
Proof. exact (EQ_MP (@lem2645992) (@lem940073)). Qed.
Lemma lem2645994 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2645995 : term118 = term31.
Proof. exact (MK_COMB (@lem2645994) (@lem2645993)). Qed.
Lemma lem2645996 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2645997 : term124 = term97.
Proof. exact (MK_COMB (@lem2645996) (@lem2645995)). Qed.
Lemma lem2645998 : term123 = term97.
Proof. exact (TRANS (@lem2645991) (@lem2645997)). Qed.
Lemma lem2645999 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646000 : term125 = term103.
Proof. exact (MK_COMB (@lem2645999) (@lem2645998)). Qed.
Lemma lem2646001 : term126 = term105.
Proof. exact (MK_COMB (@lem2646000) (@lem2645988)). Qed.
Lemma lem2646003 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2646004 : term105 = term38.
Proof. exact (@lem2646003 term32). Qed.
Lemma lem2646005 : term126 = term38.
Proof. exact (TRANS (@lem2646001) (@lem2646004)). Qed.
Lemma lem2646006 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646007 : term128 = term129.
Proof. exact (MK_COMB (@lem2646006) (@lem2646005)). Qed.
Lemma lem2646008 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2646009 : term130 = term131.
Proof. exact (MK_COMB (@lem2646007) (@lem2646008)). Qed.
Lemma lem2646011 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646012 : term131 = term38.
Proof. exact (@lem2646011 term32). Qed.
Lemma lem2646013 : term130 = term38.
Proof. exact (TRANS (@lem2646009) (@lem2646012)). Qed.
Lemma lem2646015 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646016 : term117 = term118.
Proof. exact (@lem2646015 term32 term32). Qed.
Lemma lem2646017 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646018 : term120 = term32.
Proof. exact (EQ_MP (@lem2646017) (@lem940073)). Qed.
Lemma lem2646019 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646020 : term118 = term31.
Proof. exact (MK_COMB (@lem2646019) (@lem2646018)). Qed.
Lemma lem2646021 : term117 = term31.
Proof. exact (TRANS (@lem2646016) (@lem2646020)). Qed.
Lemma lem2646022 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2646023 : term133 = term131.
Proof. exact (MK_COMB (@lem2646022) (@lem2646021)). Qed.
Lemma lem2646025 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646026 : term131 = term38.
Proof. exact (@lem2646025 term32). Qed.
Lemma lem2646027 : term133 = term38.
Proof. exact (TRANS (@lem2646023) (@lem2646026)). Qed.
Lemma lem2646028 : term38 = term133.
Proof. exact (SYM (@lem2646027)). Qed.
Lemma lem2646029 : term130 = term133.
Proof. exact (TRANS (@lem2646013) (@lem2646028)). Qed.
Lemma lem2646030 : term106 = term134.
Proof. exact (@lem2645980 (@lem2646029)). Qed.
Lemma lem2646031 : term105 = term134.
Proof. exact (TRANS (@lem2645946) (@lem2646030)). Qed.
Lemma lem2646033 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2646034 : term134 = term38.
Proof. exact (@lem2646033 term38). Qed.
Lemma lem2646035 : term105 = term38.
Proof. exact (TRANS (@lem2646031) (@lem2646034)). Qed.
Lemma lem2646036 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646037 : term136 = term129.
Proof. exact (MK_COMB (@lem2646036) (@lem2646035)). Qed.
Lemma lem2646038 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2646039 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2646037) (@lem2646038 m)). Qed.
Lemma lem2646040 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2645937 m) (@lem2646039 m)). Qed.
Lemma lem2646041 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2646042 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2646040 m) (@lem2646041 m)). Qed.
Lemma lem2646043 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646044 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2646043) (@lem2646042 m)). Qed.
Lemma lem2646045 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2646046 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2646048 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646049 : term31 = term99.
Proof. exact (@lem2646048 term32). Qed.
Lemma lem2646051 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646052 : term97 = term102.
Proof. exact (@lem2646051 term32). Qed.
Lemma lem2646053 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646054 : term103 = term104.
Proof. exact (MK_COMB (@lem2646053) (@lem2646052)). Qed.
Lemma lem2646055 : term105 = term106.
Proof. exact (MK_COMB (@lem2646054) (@lem2646049)). Qed.
Lemma lem2646056 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2646058 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646059 : term109 = term110.
Proof. exact (@lem2646058 (NUMERAL 0) term32). Qed.
Lemma lem2646060 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646061 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646062 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646061 h1) (fun h1 : term110 = True => @lem2646060)). Qed.
Lemma lem2646063 : term110 = True.
Proof. exact (EQ_MP (@lem2646062) (@lem2646060)). Qed.
Lemma lem2646064 : term109 = True.
Proof. exact (TRANS (@lem2646059) (@lem2646063)). Qed.
Lemma lem2646065 : True = term109.
Proof. exact (SYM (@lem2646064)). Qed.
Lemma lem2646066 : term109.
Proof. exact (EQ_MP (@lem2646065) (@lem0)). Qed.
Lemma lem2646067 : term112.
Proof. exact (@lem2646056 (@lem2646066)). Qed.
Lemma lem2646069 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646070 : term109 = term110.
Proof. exact (@lem2646069 (NUMERAL 0) term32). Qed.
Lemma lem2646071 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646072 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646073 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646072 h1) (fun h1 : term110 = True => @lem2646071)). Qed.
Lemma lem2646074 : term110 = True.
Proof. exact (EQ_MP (@lem2646073) (@lem2646071)). Qed.
Lemma lem2646075 : term109 = True.
Proof. exact (TRANS (@lem2646070) (@lem2646074)). Qed.
Lemma lem2646076 : True = term109.
Proof. exact (SYM (@lem2646075)). Qed.
Lemma lem2646077 : term109.
Proof. exact (EQ_MP (@lem2646076) (@lem0)). Qed.
Lemma lem2646078 : term113.
Proof. exact (@lem2646067 (@lem2646077)). Qed.
Lemma lem2646080 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646081 : term109 = term110.
Proof. exact (@lem2646080 (NUMERAL 0) term32). Qed.
Lemma lem2646082 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646083 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646084 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646083 h1) (fun h1 : term110 = True => @lem2646082)). Qed.
Lemma lem2646085 : term110 = True.
Proof. exact (EQ_MP (@lem2646084) (@lem2646082)). Qed.
Lemma lem2646086 : term109 = True.
Proof. exact (TRANS (@lem2646081) (@lem2646085)). Qed.
Lemma lem2646087 : True = term109.
Proof. exact (SYM (@lem2646086)). Qed.
Lemma lem2646088 : term109.
Proof. exact (EQ_MP (@lem2646087) (@lem0)). Qed.
Lemma lem2646089 : term114.
Proof. exact (@lem2646078 (@lem2646088)). Qed.
Lemma lem2646091 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646092 : term117 = term118.
Proof. exact (@lem2646091 term32 term32). Qed.
Lemma lem2646093 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646094 : term120 = term32.
Proof. exact (EQ_MP (@lem2646093) (@lem940073)). Qed.
Lemma lem2646095 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646096 : term118 = term31.
Proof. exact (MK_COMB (@lem2646095) (@lem2646094)). Qed.
Lemma lem2646097 : term117 = term31.
Proof. exact (TRANS (@lem2646092) (@lem2646096)). Qed.
Lemma lem2646099 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646100 : term123 = term124.
Proof. exact (@lem2646099 term32 term32). Qed.
Lemma lem2646101 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646102 : term120 = term32.
Proof. exact (EQ_MP (@lem2646101) (@lem940073)). Qed.
Lemma lem2646103 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646104 : term118 = term31.
Proof. exact (MK_COMB (@lem2646103) (@lem2646102)). Qed.
Lemma lem2646105 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646106 : term124 = term97.
Proof. exact (MK_COMB (@lem2646105) (@lem2646104)). Qed.
Lemma lem2646107 : term123 = term97.
Proof. exact (TRANS (@lem2646100) (@lem2646106)). Qed.
Lemma lem2646108 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646109 : term125 = term103.
Proof. exact (MK_COMB (@lem2646108) (@lem2646107)). Qed.
Lemma lem2646110 : term126 = term105.
Proof. exact (MK_COMB (@lem2646109) (@lem2646097)). Qed.
Lemma lem2646112 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2646113 : term105 = term38.
Proof. exact (@lem2646112 term32). Qed.
Lemma lem2646114 : term126 = term38.
Proof. exact (TRANS (@lem2646110) (@lem2646113)). Qed.
Lemma lem2646115 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646116 : term128 = term129.
Proof. exact (MK_COMB (@lem2646115) (@lem2646114)). Qed.
Lemma lem2646117 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2646118 : term130 = term131.
Proof. exact (MK_COMB (@lem2646116) (@lem2646117)). Qed.
Lemma lem2646120 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646121 : term131 = term38.
Proof. exact (@lem2646120 term32). Qed.
Lemma lem2646122 : term130 = term38.
Proof. exact (TRANS (@lem2646118) (@lem2646121)). Qed.
Lemma lem2646124 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646125 : term117 = term118.
Proof. exact (@lem2646124 term32 term32). Qed.
Lemma lem2646126 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646127 : term120 = term32.
Proof. exact (EQ_MP (@lem2646126) (@lem940073)). Qed.
Lemma lem2646128 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646129 : term118 = term31.
Proof. exact (MK_COMB (@lem2646128) (@lem2646127)). Qed.
Lemma lem2646130 : term117 = term31.
Proof. exact (TRANS (@lem2646125) (@lem2646129)). Qed.
Lemma lem2646131 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2646132 : term133 = term131.
Proof. exact (MK_COMB (@lem2646131) (@lem2646130)). Qed.
Lemma lem2646134 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646135 : term131 = term38.
Proof. exact (@lem2646134 term32). Qed.
Lemma lem2646136 : term133 = term38.
Proof. exact (TRANS (@lem2646132) (@lem2646135)). Qed.
Lemma lem2646137 : term38 = term133.
Proof. exact (SYM (@lem2646136)). Qed.
Lemma lem2646138 : term130 = term133.
Proof. exact (TRANS (@lem2646122) (@lem2646137)). Qed.
Lemma lem2646139 : term106 = term134.
Proof. exact (@lem2646089 (@lem2646138)). Qed.
Lemma lem2646140 : term105 = term134.
Proof. exact (TRANS (@lem2646055) (@lem2646139)). Qed.
Lemma lem2646142 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2646143 : term134 = term38.
Proof. exact (@lem2646142 term38). Qed.
Lemma lem2646144 : term105 = term38.
Proof. exact (TRANS (@lem2646140) (@lem2646143)). Qed.
Lemma lem2646145 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646146 : term136 = term129.
Proof. exact (MK_COMB (@lem2646145) (@lem2646144)). Qed.
Lemma lem2646147 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2646148 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2646146) (@lem2646147 n)). Qed.
Lemma lem2646149 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2646046 n) (@lem2646148 n)). Qed.
Lemma lem2646150 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2646151 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2646149 n) (@lem2646150 n)). Qed.
Lemma lem2646152 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646153 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2646152) (@lem2646151 n)). Qed.
Lemma lem2646154 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2646155 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2646153 n) (@lem2646154)). Qed.
Lemma lem2646156 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2646045 n) (@lem2646155 n)). Qed.
Lemma lem2646157 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2646158 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2646156 n) (@lem2646157)). Qed.
Lemma lem2646159 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2646044 m) (@lem2646158 n)). Qed.
Lemma lem2646160 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2645936 m n) (@lem2646159 m n)). Qed.
Lemma lem2646161 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2646162 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2646160 m n) (@lem2646161)). Qed.
Lemma lem2646163 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646164 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2646163) (@lem2646162 m n)). Qed.
Lemma lem2646165 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646166 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2646164 m n) (@lem2646165)). Qed.
Lemma lem2646167 (m : int) (n : int) (h1 : term1090 m n) : term257.
Proof. exact (EQ_MP (@lem2646166 m n) (@lem2645935 m n h1)). Qed.
Lemma lem2646169 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2646170 : term257 = term258.
Proof. exact (@lem2646169 term38 term97). Qed.
Lemma lem2646172 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646173 : term97 = term102.
Proof. exact (@lem2646172 term32). Qed.
Lemma lem2646175 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646176 : term38 = term134.
Proof. exact (@lem2646175 (NUMERAL 0)). Qed.
Lemma lem2646177 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2646178 : term259 = term260.
Proof. exact (MK_COMB (@lem2646177) (@lem2646176)). Qed.
Lemma lem2646179 : term258 = term261.
Proof. exact (MK_COMB (@lem2646178) (@lem2646173)). Qed.
Lemma lem2646180 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2646182 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646183 : term109 = term110.
Proof. exact (@lem2646182 (NUMERAL 0) term32). Qed.
Lemma lem2646184 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646185 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646186 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646185 h1) (fun h1 : term110 = True => @lem2646184)). Qed.
Lemma lem2646187 : term110 = True.
Proof. exact (EQ_MP (@lem2646186) (@lem2646184)). Qed.
Lemma lem2646188 : term109 = True.
Proof. exact (TRANS (@lem2646183) (@lem2646187)). Qed.
Lemma lem2646189 : True = term109.
Proof. exact (SYM (@lem2646188)). Qed.
Lemma lem2646190 : term109.
Proof. exact (EQ_MP (@lem2646189) (@lem0)). Qed.
Lemma lem2646191 : term263.
Proof. exact (@lem2646180 (@lem2646190)). Qed.
Lemma lem2646193 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646194 : term109 = term110.
Proof. exact (@lem2646193 (NUMERAL 0) term32). Qed.
Lemma lem2646195 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646196 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646197 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646196 h1) (fun h1 : term110 = True => @lem2646195)). Qed.
Lemma lem2646198 : term110 = True.
Proof. exact (EQ_MP (@lem2646197) (@lem2646195)). Qed.
Lemma lem2646199 : term109 = True.
Proof. exact (TRANS (@lem2646194) (@lem2646198)). Qed.
Lemma lem2646200 : True = term109.
Proof. exact (SYM (@lem2646199)). Qed.
Lemma lem2646201 : term109.
Proof. exact (EQ_MP (@lem2646200) (@lem0)). Qed.
Lemma lem2646202 : term261 = term264.
Proof. exact (@lem2646191 (@lem2646201)). Qed.
Lemma lem2646204 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646205 : term123 = term124.
Proof. exact (@lem2646204 term32 term32). Qed.
Lemma lem2646206 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646207 : term120 = term32.
Proof. exact (EQ_MP (@lem2646206) (@lem940073)). Qed.
Lemma lem2646208 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646209 : term118 = term31.
Proof. exact (MK_COMB (@lem2646208) (@lem2646207)). Qed.
Lemma lem2646210 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646211 : term124 = term97.
Proof. exact (MK_COMB (@lem2646210) (@lem2646209)). Qed.
Lemma lem2646212 : term123 = term97.
Proof. exact (TRANS (@lem2646205) (@lem2646211)). Qed.
Lemma lem2646214 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646215 : term131 = term38.
Proof. exact (@lem2646214 term32). Qed.
Lemma lem2646216 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2646217 : term265 = term259.
Proof. exact (MK_COMB (@lem2646216) (@lem2646215)). Qed.
Lemma lem2646218 : term264 = term258.
Proof. exact (MK_COMB (@lem2646217) (@lem2646212)). Qed.
Lemma lem2646220 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2646221 : term258 = term268.
Proof. exact (@lem2646220 (NUMERAL 0) term32). Qed.
Lemma lem2646222 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646223 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2646224 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646223 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2646222)). Qed.
Lemma lem2646225 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2646224) (@lem2646222)). Qed.
Lemma lem2646226 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2646227 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2646228 : term269 = (and True).
Proof. exact (MK_COMB (@lem2646227) (@lem2646226)). Qed.
Lemma lem2646229 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2646228) (@lem2646225)). Qed.
Lemma lem2646231 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2646232 : term268 = False.
Proof. exact (TRANS (@lem2646229) (@lem2646231)). Qed.
Lemma lem2646233 : term258 = False.
Proof. exact (TRANS (@lem2646221) (@lem2646232)). Qed.
Lemma lem2646234 : term264 = False.
Proof. exact (TRANS (@lem2646218) (@lem2646233)). Qed.
Lemma lem2646235 : term261 = False.
Proof. exact (TRANS (@lem2646202) (@lem2646234)). Qed.
Lemma lem2646236 : term258 = False.
Proof. exact (TRANS (@lem2646179) (@lem2646235)). Qed.
Lemma lem2646237 : term257 = False.
Proof. exact (TRANS (@lem2646170) (@lem2646236)). Qed.
Lemma lem2646238 (m : int) (n : int) (h1 : term1090 m n) : False.
Proof. exact (EQ_MP (@lem2646237) (@lem2646167 m n h1)). Qed.
Lemma lem2646239 (m : int) (n : int) (h1 : term1092 m n) : term1092 m n.
Proof. exact (h1). Qed.
Lemma lem2646240 (m : int) (n : int) (h1 : term1092 m n) : term1091 m n.
Proof. exact (proj2 (@lem2646239 m n h1)). Qed.
Lemma lem2646242 (m : int) (n : int) (h1 : term1092 m n) : term751 m n.
Proof. exact (proj2 (@lem2646240 m n h1)). Qed.
Lemma lem2646243 (m : int) (n : int) (h1 : term1092 m n) : term905 m n.
Proof. exact (proj1 (@lem2646240 m n h1)). Qed.
Lemma lem2646245 (m : int) (n : int) (h1 : term1092 m n) : term808 m n.
Proof. exact (proj1 (@lem2646243 m n h1)). Qed.
Lemma lem2646246 (m : int) (n : int) (h1 : term1092 m n) : term807 m n.
Proof. exact (proj2 (@lem2646245 m n h1)). Qed.
Lemma lem2646248 (m : int) (n : int) (h1 : term1092 m n) : term805 m n.
Proof. exact (proj2 (@lem2646246 m n h1)). Qed.
Lemma lem2646250 (m : int) (n : int) (h1 : term1092 m n) : term749 m n.
Proof. exact (proj2 (@lem2646242 m n h1)). Qed.
Lemma lem2646253 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2646254 : term229 = term109.
Proof. exact (@lem2646253 term38 term31). Qed.
Lemma lem2646256 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646257 : term31 = term99.
Proof. exact (@lem2646256 term32). Qed.
Lemma lem2646259 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646260 : term38 = term134.
Proof. exact (@lem2646259 (NUMERAL 0)). Qed.
Lemma lem2646261 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646262 : term230 = term231.
Proof. exact (MK_COMB (@lem2646261) (@lem2646260)). Qed.
Lemma lem2646263 : term109 = term232.
Proof. exact (MK_COMB (@lem2646262) (@lem2646257)). Qed.
Lemma lem2646264 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2646266 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646267 : term109 = term110.
Proof. exact (@lem2646266 (NUMERAL 0) term32). Qed.
Lemma lem2646268 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646269 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646270 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646269 h1) (fun h1 : term110 = True => @lem2646268)). Qed.
Lemma lem2646271 : term110 = True.
Proof. exact (EQ_MP (@lem2646270) (@lem2646268)). Qed.
Lemma lem2646272 : term109 = True.
Proof. exact (TRANS (@lem2646267) (@lem2646271)). Qed.
Lemma lem2646273 : True = term109.
Proof. exact (SYM (@lem2646272)). Qed.
Lemma lem2646274 : term109.
Proof. exact (EQ_MP (@lem2646273) (@lem0)). Qed.
Lemma lem2646275 : term234.
Proof. exact (@lem2646264 (@lem2646274)). Qed.
Lemma lem2646277 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646278 : term109 = term110.
Proof. exact (@lem2646277 (NUMERAL 0) term32). Qed.
Lemma lem2646279 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646280 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646281 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646280 h1) (fun h1 : term110 = True => @lem2646279)). Qed.
Lemma lem2646282 : term110 = True.
Proof. exact (EQ_MP (@lem2646281) (@lem2646279)). Qed.
Lemma lem2646283 : term109 = True.
Proof. exact (TRANS (@lem2646278) (@lem2646282)). Qed.
Lemma lem2646284 : True = term109.
Proof. exact (SYM (@lem2646283)). Qed.
Lemma lem2646285 : term109.
Proof. exact (EQ_MP (@lem2646284) (@lem0)). Qed.
Lemma lem2646286 : term232 = term235.
Proof. exact (@lem2646275 (@lem2646285)). Qed.
Lemma lem2646288 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646289 : term117 = term118.
Proof. exact (@lem2646288 term32 term32). Qed.
Lemma lem2646290 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646291 : term120 = term32.
Proof. exact (EQ_MP (@lem2646290) (@lem940073)). Qed.
Lemma lem2646292 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646293 : term118 = term31.
Proof. exact (MK_COMB (@lem2646292) (@lem2646291)). Qed.
Lemma lem2646294 : term117 = term31.
Proof. exact (TRANS (@lem2646289) (@lem2646293)). Qed.
Lemma lem2646296 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646297 : term131 = term38.
Proof. exact (@lem2646296 term32). Qed.
Lemma lem2646298 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646299 : term236 = term230.
Proof. exact (MK_COMB (@lem2646298) (@lem2646297)). Qed.
Lemma lem2646300 : term235 = term109.
Proof. exact (MK_COMB (@lem2646299) (@lem2646294)). Qed.
Lemma lem2646302 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646303 : term109 = term110.
Proof. exact (@lem2646302 (NUMERAL 0) term32). Qed.
Lemma lem2646304 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646305 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646306 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646305 h1) (fun h1 : term110 = True => @lem2646304)). Qed.
Lemma lem2646307 : term110 = True.
Proof. exact (EQ_MP (@lem2646306) (@lem2646304)). Qed.
Lemma lem2646308 : term109 = True.
Proof. exact (TRANS (@lem2646303) (@lem2646307)). Qed.
Lemma lem2646309 : term235 = True.
Proof. exact (TRANS (@lem2646300) (@lem2646308)). Qed.
Lemma lem2646310 : term232 = True.
Proof. exact (TRANS (@lem2646286) (@lem2646309)). Qed.
Lemma lem2646311 : term109 = True.
Proof. exact (TRANS (@lem2646263) (@lem2646310)). Qed.
Lemma lem2646312 : term229 = True.
Proof. exact (TRANS (@lem2646254) (@lem2646311)). Qed.
Lemma lem2646313 : True = term229.
Proof. exact (SYM (@lem2646312)). Qed.
Lemma lem2646314 : term229.
Proof. exact (EQ_MP (@lem2646313) (@lem0)). Qed.
Lemma lem2646315 (m : int) (n : int) (h1 : term1092 m n) : term1174 m n.
Proof. exact (conj (@lem2646314) (@lem2646248 m n h1)). Qed.
Lemma lem2646317 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2646318 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2646317 term31 (term25 m n)). Qed.
Lemma lem2646319 (m : int) (n : int) (h1 : term1092 m n) : term1176 m n.
Proof. exact (@lem2646318 m n (@lem2646315 m n h1)). Qed.
Lemma lem2646320 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2646321 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646322 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2646321) (@lem2646320 m n)). Qed.
Lemma lem2646323 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646324 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2646322 m n) (@lem2646323)). Qed.
Lemma lem2646325 (m : int) (n : int) (h1 : term1092 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2646324 m n) (@lem2646319 m n h1)). Qed.
Lemma lem2646327 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2646328 : term229 = term109.
Proof. exact (@lem2646327 term38 term31). Qed.
Lemma lem2646330 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646331 : term31 = term99.
Proof. exact (@lem2646330 term32). Qed.
Lemma lem2646333 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646334 : term38 = term134.
Proof. exact (@lem2646333 (NUMERAL 0)). Qed.
Lemma lem2646335 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646336 : term230 = term231.
Proof. exact (MK_COMB (@lem2646335) (@lem2646334)). Qed.
Lemma lem2646337 : term109 = term232.
Proof. exact (MK_COMB (@lem2646336) (@lem2646331)). Qed.
Lemma lem2646338 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2646340 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646341 : term109 = term110.
Proof. exact (@lem2646340 (NUMERAL 0) term32). Qed.
Lemma lem2646342 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646343 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646344 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646343 h1) (fun h1 : term110 = True => @lem2646342)). Qed.
Lemma lem2646345 : term110 = True.
Proof. exact (EQ_MP (@lem2646344) (@lem2646342)). Qed.
Lemma lem2646346 : term109 = True.
Proof. exact (TRANS (@lem2646341) (@lem2646345)). Qed.
Lemma lem2646347 : True = term109.
Proof. exact (SYM (@lem2646346)). Qed.
Lemma lem2646348 : term109.
Proof. exact (EQ_MP (@lem2646347) (@lem0)). Qed.
Lemma lem2646349 : term234.
Proof. exact (@lem2646338 (@lem2646348)). Qed.
Lemma lem2646351 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646352 : term109 = term110.
Proof. exact (@lem2646351 (NUMERAL 0) term32). Qed.
Lemma lem2646353 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646354 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646355 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646354 h1) (fun h1 : term110 = True => @lem2646353)). Qed.
Lemma lem2646356 : term110 = True.
Proof. exact (EQ_MP (@lem2646355) (@lem2646353)). Qed.
Lemma lem2646357 : term109 = True.
Proof. exact (TRANS (@lem2646352) (@lem2646356)). Qed.
Lemma lem2646358 : True = term109.
Proof. exact (SYM (@lem2646357)). Qed.
Lemma lem2646359 : term109.
Proof. exact (EQ_MP (@lem2646358) (@lem0)). Qed.
Lemma lem2646360 : term232 = term235.
Proof. exact (@lem2646349 (@lem2646359)). Qed.
Lemma lem2646362 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646363 : term117 = term118.
Proof. exact (@lem2646362 term32 term32). Qed.
Lemma lem2646364 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646365 : term120 = term32.
Proof. exact (EQ_MP (@lem2646364) (@lem940073)). Qed.
Lemma lem2646366 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646367 : term118 = term31.
Proof. exact (MK_COMB (@lem2646366) (@lem2646365)). Qed.
Lemma lem2646368 : term117 = term31.
Proof. exact (TRANS (@lem2646363) (@lem2646367)). Qed.
Lemma lem2646370 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646371 : term131 = term38.
Proof. exact (@lem2646370 term32). Qed.
Lemma lem2646372 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646373 : term236 = term230.
Proof. exact (MK_COMB (@lem2646372) (@lem2646371)). Qed.
Lemma lem2646374 : term235 = term109.
Proof. exact (MK_COMB (@lem2646373) (@lem2646368)). Qed.
Lemma lem2646376 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646377 : term109 = term110.
Proof. exact (@lem2646376 (NUMERAL 0) term32). Qed.
Lemma lem2646378 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646379 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646380 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646379 h1) (fun h1 : term110 = True => @lem2646378)). Qed.
Lemma lem2646381 : term110 = True.
Proof. exact (EQ_MP (@lem2646380) (@lem2646378)). Qed.
Lemma lem2646382 : term109 = True.
Proof. exact (TRANS (@lem2646377) (@lem2646381)). Qed.
Lemma lem2646383 : term235 = True.
Proof. exact (TRANS (@lem2646374) (@lem2646382)). Qed.
Lemma lem2646384 : term232 = True.
Proof. exact (TRANS (@lem2646360) (@lem2646383)). Qed.
Lemma lem2646385 : term109 = True.
Proof. exact (TRANS (@lem2646337) (@lem2646384)). Qed.
Lemma lem2646386 : term229 = True.
Proof. exact (TRANS (@lem2646328) (@lem2646385)). Qed.
Lemma lem2646387 : True = term229.
Proof. exact (SYM (@lem2646386)). Qed.
Lemma lem2646388 : term229.
Proof. exact (EQ_MP (@lem2646387) (@lem0)). Qed.
Lemma lem2646389 (m : int) (n : int) (h1 : term1092 m n) : term1179 m n.
Proof. exact (conj (@lem2646388) (@lem2646250 m n h1)). Qed.
Lemma lem2646391 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2646392 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2646391 term31 (term739 m n)). Qed.
Lemma lem2646393 (m : int) (n : int) (h1 : term1092 m n) : term1181 m n.
Proof. exact (@lem2646392 m n (@lem2646389 m n h1)). Qed.
Lemma lem2646394 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2646395 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646396 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2646395) (@lem2646394 m n)). Qed.
Lemma lem2646397 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646398 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2646396 m n) (@lem2646397)). Qed.
Lemma lem2646399 (m : int) (n : int) (h1 : term1092 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2646398 m n) (@lem2646393 m n h1)). Qed.
Lemma lem2646400 (m : int) (n : int) (h1 : term1092 m n) : term1184 m n.
Proof. exact (conj (@lem2646399 m n h1) (@lem2646325 m n h1)). Qed.
Lemma lem2646402 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2646403 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2646402 (term739 m n) (term25 m n)). Qed.
Lemma lem2646404 (m : int) (n : int) (h1 : term1092 m n) : term1186 m n.
Proof. exact (@lem2646403 m n (@lem2646400 m n h1)). Qed.
Lemma lem2646405 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2646406 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2646408 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646409 : term31 = term99.
Proof. exact (@lem2646408 term32). Qed.
Lemma lem2646411 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646412 : term97 = term102.
Proof. exact (@lem2646411 term32). Qed.
Lemma lem2646413 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646414 : term103 = term104.
Proof. exact (MK_COMB (@lem2646413) (@lem2646412)). Qed.
Lemma lem2646415 : term105 = term106.
Proof. exact (MK_COMB (@lem2646414) (@lem2646409)). Qed.
Lemma lem2646416 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2646418 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646419 : term109 = term110.
Proof. exact (@lem2646418 (NUMERAL 0) term32). Qed.
Lemma lem2646420 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646421 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646422 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646421 h1) (fun h1 : term110 = True => @lem2646420)). Qed.
Lemma lem2646423 : term110 = True.
Proof. exact (EQ_MP (@lem2646422) (@lem2646420)). Qed.
Lemma lem2646424 : term109 = True.
Proof. exact (TRANS (@lem2646419) (@lem2646423)). Qed.
Lemma lem2646425 : True = term109.
Proof. exact (SYM (@lem2646424)). Qed.
Lemma lem2646426 : term109.
Proof. exact (EQ_MP (@lem2646425) (@lem0)). Qed.
Lemma lem2646427 : term112.
Proof. exact (@lem2646416 (@lem2646426)). Qed.
Lemma lem2646429 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646430 : term109 = term110.
Proof. exact (@lem2646429 (NUMERAL 0) term32). Qed.
Lemma lem2646431 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646432 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646433 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646432 h1) (fun h1 : term110 = True => @lem2646431)). Qed.
Lemma lem2646434 : term110 = True.
Proof. exact (EQ_MP (@lem2646433) (@lem2646431)). Qed.
Lemma lem2646435 : term109 = True.
Proof. exact (TRANS (@lem2646430) (@lem2646434)). Qed.
Lemma lem2646436 : True = term109.
Proof. exact (SYM (@lem2646435)). Qed.
Lemma lem2646437 : term109.
Proof. exact (EQ_MP (@lem2646436) (@lem0)). Qed.
Lemma lem2646438 : term113.
Proof. exact (@lem2646427 (@lem2646437)). Qed.
Lemma lem2646440 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646441 : term109 = term110.
Proof. exact (@lem2646440 (NUMERAL 0) term32). Qed.
Lemma lem2646442 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646443 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646444 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646443 h1) (fun h1 : term110 = True => @lem2646442)). Qed.
Lemma lem2646445 : term110 = True.
Proof. exact (EQ_MP (@lem2646444) (@lem2646442)). Qed.
Lemma lem2646446 : term109 = True.
Proof. exact (TRANS (@lem2646441) (@lem2646445)). Qed.
Lemma lem2646447 : True = term109.
Proof. exact (SYM (@lem2646446)). Qed.
Lemma lem2646448 : term109.
Proof. exact (EQ_MP (@lem2646447) (@lem0)). Qed.
Lemma lem2646449 : term114.
Proof. exact (@lem2646438 (@lem2646448)). Qed.
Lemma lem2646451 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646452 : term117 = term118.
Proof. exact (@lem2646451 term32 term32). Qed.
Lemma lem2646453 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646454 : term120 = term32.
Proof. exact (EQ_MP (@lem2646453) (@lem940073)). Qed.
Lemma lem2646455 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646456 : term118 = term31.
Proof. exact (MK_COMB (@lem2646455) (@lem2646454)). Qed.
Lemma lem2646457 : term117 = term31.
Proof. exact (TRANS (@lem2646452) (@lem2646456)). Qed.
Lemma lem2646459 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646460 : term123 = term124.
Proof. exact (@lem2646459 term32 term32). Qed.
Lemma lem2646461 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646462 : term120 = term32.
Proof. exact (EQ_MP (@lem2646461) (@lem940073)). Qed.
Lemma lem2646463 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646464 : term118 = term31.
Proof. exact (MK_COMB (@lem2646463) (@lem2646462)). Qed.
Lemma lem2646465 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646466 : term124 = term97.
Proof. exact (MK_COMB (@lem2646465) (@lem2646464)). Qed.
Lemma lem2646467 : term123 = term97.
Proof. exact (TRANS (@lem2646460) (@lem2646466)). Qed.
Lemma lem2646468 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646469 : term125 = term103.
Proof. exact (MK_COMB (@lem2646468) (@lem2646467)). Qed.
Lemma lem2646470 : term126 = term105.
Proof. exact (MK_COMB (@lem2646469) (@lem2646457)). Qed.
Lemma lem2646472 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2646473 : term105 = term38.
Proof. exact (@lem2646472 term32). Qed.
Lemma lem2646474 : term126 = term38.
Proof. exact (TRANS (@lem2646470) (@lem2646473)). Qed.
Lemma lem2646475 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646476 : term128 = term129.
Proof. exact (MK_COMB (@lem2646475) (@lem2646474)). Qed.
Lemma lem2646477 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2646478 : term130 = term131.
Proof. exact (MK_COMB (@lem2646476) (@lem2646477)). Qed.
Lemma lem2646480 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646481 : term131 = term38.
Proof. exact (@lem2646480 term32). Qed.
Lemma lem2646482 : term130 = term38.
Proof. exact (TRANS (@lem2646478) (@lem2646481)). Qed.
Lemma lem2646484 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646485 : term117 = term118.
Proof. exact (@lem2646484 term32 term32). Qed.
Lemma lem2646486 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646487 : term120 = term32.
Proof. exact (EQ_MP (@lem2646486) (@lem940073)). Qed.
Lemma lem2646488 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646489 : term118 = term31.
Proof. exact (MK_COMB (@lem2646488) (@lem2646487)). Qed.
Lemma lem2646490 : term117 = term31.
Proof. exact (TRANS (@lem2646485) (@lem2646489)). Qed.
Lemma lem2646491 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2646492 : term133 = term131.
Proof. exact (MK_COMB (@lem2646491) (@lem2646490)). Qed.
Lemma lem2646494 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646495 : term131 = term38.
Proof. exact (@lem2646494 term32). Qed.
Lemma lem2646496 : term133 = term38.
Proof. exact (TRANS (@lem2646492) (@lem2646495)). Qed.
Lemma lem2646497 : term38 = term133.
Proof. exact (SYM (@lem2646496)). Qed.
Lemma lem2646498 : term130 = term133.
Proof. exact (TRANS (@lem2646482) (@lem2646497)). Qed.
Lemma lem2646499 : term106 = term134.
Proof. exact (@lem2646449 (@lem2646498)). Qed.
Lemma lem2646500 : term105 = term134.
Proof. exact (TRANS (@lem2646415) (@lem2646499)). Qed.
Lemma lem2646502 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2646503 : term134 = term38.
Proof. exact (@lem2646502 term38). Qed.
Lemma lem2646504 : term105 = term38.
Proof. exact (TRANS (@lem2646500) (@lem2646503)). Qed.
Lemma lem2646505 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646506 : term136 = term129.
Proof. exact (MK_COMB (@lem2646505) (@lem2646504)). Qed.
Lemma lem2646507 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2646508 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2646506) (@lem2646507 m)). Qed.
Lemma lem2646509 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2646406 m) (@lem2646508 m)). Qed.
Lemma lem2646510 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2646511 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2646509 m) (@lem2646510 m)). Qed.
Lemma lem2646512 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646513 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2646512) (@lem2646511 m)). Qed.
Lemma lem2646514 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2646515 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2646517 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646518 : term31 = term99.
Proof. exact (@lem2646517 term32). Qed.
Lemma lem2646520 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646521 : term97 = term102.
Proof. exact (@lem2646520 term32). Qed.
Lemma lem2646522 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646523 : term103 = term104.
Proof. exact (MK_COMB (@lem2646522) (@lem2646521)). Qed.
Lemma lem2646524 : term105 = term106.
Proof. exact (MK_COMB (@lem2646523) (@lem2646518)). Qed.
Lemma lem2646525 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2646527 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646528 : term109 = term110.
Proof. exact (@lem2646527 (NUMERAL 0) term32). Qed.
Lemma lem2646529 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646530 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646531 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646530 h1) (fun h1 : term110 = True => @lem2646529)). Qed.
Lemma lem2646532 : term110 = True.
Proof. exact (EQ_MP (@lem2646531) (@lem2646529)). Qed.
Lemma lem2646533 : term109 = True.
Proof. exact (TRANS (@lem2646528) (@lem2646532)). Qed.
Lemma lem2646534 : True = term109.
Proof. exact (SYM (@lem2646533)). Qed.
Lemma lem2646535 : term109.
Proof. exact (EQ_MP (@lem2646534) (@lem0)). Qed.
Lemma lem2646536 : term112.
Proof. exact (@lem2646525 (@lem2646535)). Qed.
Lemma lem2646538 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646539 : term109 = term110.
Proof. exact (@lem2646538 (NUMERAL 0) term32). Qed.
Lemma lem2646540 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646541 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646542 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646541 h1) (fun h1 : term110 = True => @lem2646540)). Qed.
Lemma lem2646543 : term110 = True.
Proof. exact (EQ_MP (@lem2646542) (@lem2646540)). Qed.
Lemma lem2646544 : term109 = True.
Proof. exact (TRANS (@lem2646539) (@lem2646543)). Qed.
Lemma lem2646545 : True = term109.
Proof. exact (SYM (@lem2646544)). Qed.
Lemma lem2646546 : term109.
Proof. exact (EQ_MP (@lem2646545) (@lem0)). Qed.
Lemma lem2646547 : term113.
Proof. exact (@lem2646536 (@lem2646546)). Qed.
Lemma lem2646549 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646550 : term109 = term110.
Proof. exact (@lem2646549 (NUMERAL 0) term32). Qed.
Lemma lem2646551 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646552 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646553 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646552 h1) (fun h1 : term110 = True => @lem2646551)). Qed.
Lemma lem2646554 : term110 = True.
Proof. exact (EQ_MP (@lem2646553) (@lem2646551)). Qed.
Lemma lem2646555 : term109 = True.
Proof. exact (TRANS (@lem2646550) (@lem2646554)). Qed.
Lemma lem2646556 : True = term109.
Proof. exact (SYM (@lem2646555)). Qed.
Lemma lem2646557 : term109.
Proof. exact (EQ_MP (@lem2646556) (@lem0)). Qed.
Lemma lem2646558 : term114.
Proof. exact (@lem2646547 (@lem2646557)). Qed.
Lemma lem2646560 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646561 : term117 = term118.
Proof. exact (@lem2646560 term32 term32). Qed.
Lemma lem2646562 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646563 : term120 = term32.
Proof. exact (EQ_MP (@lem2646562) (@lem940073)). Qed.
Lemma lem2646564 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646565 : term118 = term31.
Proof. exact (MK_COMB (@lem2646564) (@lem2646563)). Qed.
Lemma lem2646566 : term117 = term31.
Proof. exact (TRANS (@lem2646561) (@lem2646565)). Qed.
Lemma lem2646568 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646569 : term123 = term124.
Proof. exact (@lem2646568 term32 term32). Qed.
Lemma lem2646570 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646571 : term120 = term32.
Proof. exact (EQ_MP (@lem2646570) (@lem940073)). Qed.
Lemma lem2646572 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646573 : term118 = term31.
Proof. exact (MK_COMB (@lem2646572) (@lem2646571)). Qed.
Lemma lem2646574 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646575 : term124 = term97.
Proof. exact (MK_COMB (@lem2646574) (@lem2646573)). Qed.
Lemma lem2646576 : term123 = term97.
Proof. exact (TRANS (@lem2646569) (@lem2646575)). Qed.
Lemma lem2646577 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646578 : term125 = term103.
Proof. exact (MK_COMB (@lem2646577) (@lem2646576)). Qed.
Lemma lem2646579 : term126 = term105.
Proof. exact (MK_COMB (@lem2646578) (@lem2646566)). Qed.
Lemma lem2646581 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2646582 : term105 = term38.
Proof. exact (@lem2646581 term32). Qed.
Lemma lem2646583 : term126 = term38.
Proof. exact (TRANS (@lem2646579) (@lem2646582)). Qed.
Lemma lem2646584 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646585 : term128 = term129.
Proof. exact (MK_COMB (@lem2646584) (@lem2646583)). Qed.
Lemma lem2646586 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2646587 : term130 = term131.
Proof. exact (MK_COMB (@lem2646585) (@lem2646586)). Qed.
Lemma lem2646589 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646590 : term131 = term38.
Proof. exact (@lem2646589 term32). Qed.
Lemma lem2646591 : term130 = term38.
Proof. exact (TRANS (@lem2646587) (@lem2646590)). Qed.
Lemma lem2646593 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646594 : term117 = term118.
Proof. exact (@lem2646593 term32 term32). Qed.
Lemma lem2646595 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646596 : term120 = term32.
Proof. exact (EQ_MP (@lem2646595) (@lem940073)). Qed.
Lemma lem2646597 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646598 : term118 = term31.
Proof. exact (MK_COMB (@lem2646597) (@lem2646596)). Qed.
Lemma lem2646599 : term117 = term31.
Proof. exact (TRANS (@lem2646594) (@lem2646598)). Qed.
Lemma lem2646600 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2646601 : term133 = term131.
Proof. exact (MK_COMB (@lem2646600) (@lem2646599)). Qed.
Lemma lem2646603 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646604 : term131 = term38.
Proof. exact (@lem2646603 term32). Qed.
Lemma lem2646605 : term133 = term38.
Proof. exact (TRANS (@lem2646601) (@lem2646604)). Qed.
Lemma lem2646606 : term38 = term133.
Proof. exact (SYM (@lem2646605)). Qed.
Lemma lem2646607 : term130 = term133.
Proof. exact (TRANS (@lem2646591) (@lem2646606)). Qed.
Lemma lem2646608 : term106 = term134.
Proof. exact (@lem2646558 (@lem2646607)). Qed.
Lemma lem2646609 : term105 = term134.
Proof. exact (TRANS (@lem2646524) (@lem2646608)). Qed.
Lemma lem2646611 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2646612 : term134 = term38.
Proof. exact (@lem2646611 term38). Qed.
Lemma lem2646613 : term105 = term38.
Proof. exact (TRANS (@lem2646609) (@lem2646612)). Qed.
Lemma lem2646614 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646615 : term136 = term129.
Proof. exact (MK_COMB (@lem2646614) (@lem2646613)). Qed.
Lemma lem2646616 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2646617 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2646615) (@lem2646616 n)). Qed.
Lemma lem2646618 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2646515 n) (@lem2646617 n)). Qed.
Lemma lem2646619 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2646620 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2646618 n) (@lem2646619 n)). Qed.
Lemma lem2646621 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646622 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2646621) (@lem2646620 n)). Qed.
Lemma lem2646623 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2646624 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2646622 n) (@lem2646623)). Qed.
Lemma lem2646625 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2646514 n) (@lem2646624 n)). Qed.
Lemma lem2646626 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2646627 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2646625 n) (@lem2646626)). Qed.
Lemma lem2646628 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2646513 m) (@lem2646627 n)). Qed.
Lemma lem2646629 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2646405 m n) (@lem2646628 m n)). Qed.
Lemma lem2646630 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2646631 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2646629 m n) (@lem2646630)). Qed.
Lemma lem2646632 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646633 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2646632) (@lem2646631 m n)). Qed.
Lemma lem2646634 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646635 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2646633 m n) (@lem2646634)). Qed.
Lemma lem2646636 (m : int) (n : int) (h1 : term1092 m n) : term257.
Proof. exact (EQ_MP (@lem2646635 m n) (@lem2646404 m n h1)). Qed.
Lemma lem2646638 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2646639 : term257 = term258.
Proof. exact (@lem2646638 term38 term97). Qed.
Lemma lem2646641 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646642 : term97 = term102.
Proof. exact (@lem2646641 term32). Qed.
Lemma lem2646644 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646645 : term38 = term134.
Proof. exact (@lem2646644 (NUMERAL 0)). Qed.
Lemma lem2646646 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2646647 : term259 = term260.
Proof. exact (MK_COMB (@lem2646646) (@lem2646645)). Qed.
Lemma lem2646648 : term258 = term261.
Proof. exact (MK_COMB (@lem2646647) (@lem2646642)). Qed.
Lemma lem2646649 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2646651 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646652 : term109 = term110.
Proof. exact (@lem2646651 (NUMERAL 0) term32). Qed.
Lemma lem2646653 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646654 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646655 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646654 h1) (fun h1 : term110 = True => @lem2646653)). Qed.
Lemma lem2646656 : term110 = True.
Proof. exact (EQ_MP (@lem2646655) (@lem2646653)). Qed.
Lemma lem2646657 : term109 = True.
Proof. exact (TRANS (@lem2646652) (@lem2646656)). Qed.
Lemma lem2646658 : True = term109.
Proof. exact (SYM (@lem2646657)). Qed.
Lemma lem2646659 : term109.
Proof. exact (EQ_MP (@lem2646658) (@lem0)). Qed.
Lemma lem2646660 : term263.
Proof. exact (@lem2646649 (@lem2646659)). Qed.
Lemma lem2646662 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646663 : term109 = term110.
Proof. exact (@lem2646662 (NUMERAL 0) term32). Qed.
Lemma lem2646664 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646665 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646666 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646665 h1) (fun h1 : term110 = True => @lem2646664)). Qed.
Lemma lem2646667 : term110 = True.
Proof. exact (EQ_MP (@lem2646666) (@lem2646664)). Qed.
Lemma lem2646668 : term109 = True.
Proof. exact (TRANS (@lem2646663) (@lem2646667)). Qed.
Lemma lem2646669 : True = term109.
Proof. exact (SYM (@lem2646668)). Qed.
Lemma lem2646670 : term109.
Proof. exact (EQ_MP (@lem2646669) (@lem0)). Qed.
Lemma lem2646671 : term261 = term264.
Proof. exact (@lem2646660 (@lem2646670)). Qed.
Lemma lem2646673 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646674 : term123 = term124.
Proof. exact (@lem2646673 term32 term32). Qed.
Lemma lem2646675 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646676 : term120 = term32.
Proof. exact (EQ_MP (@lem2646675) (@lem940073)). Qed.
Lemma lem2646677 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646678 : term118 = term31.
Proof. exact (MK_COMB (@lem2646677) (@lem2646676)). Qed.
Lemma lem2646679 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646680 : term124 = term97.
Proof. exact (MK_COMB (@lem2646679) (@lem2646678)). Qed.
Lemma lem2646681 : term123 = term97.
Proof. exact (TRANS (@lem2646674) (@lem2646680)). Qed.
Lemma lem2646683 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646684 : term131 = term38.
Proof. exact (@lem2646683 term32). Qed.
Lemma lem2646685 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2646686 : term265 = term259.
Proof. exact (MK_COMB (@lem2646685) (@lem2646684)). Qed.
Lemma lem2646687 : term264 = term258.
Proof. exact (MK_COMB (@lem2646686) (@lem2646681)). Qed.
Lemma lem2646689 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2646690 : term258 = term268.
Proof. exact (@lem2646689 (NUMERAL 0) term32). Qed.
Lemma lem2646691 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646692 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2646693 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646692 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2646691)). Qed.
Lemma lem2646694 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2646693) (@lem2646691)). Qed.
Lemma lem2646695 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2646696 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2646697 : term269 = (and True).
Proof. exact (MK_COMB (@lem2646696) (@lem2646695)). Qed.
Lemma lem2646698 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2646697) (@lem2646694)). Qed.
Lemma lem2646700 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2646701 : term268 = False.
Proof. exact (TRANS (@lem2646698) (@lem2646700)). Qed.
Lemma lem2646702 : term258 = False.
Proof. exact (TRANS (@lem2646690) (@lem2646701)). Qed.
Lemma lem2646703 : term264 = False.
Proof. exact (TRANS (@lem2646687) (@lem2646702)). Qed.
Lemma lem2646704 : term261 = False.
Proof. exact (TRANS (@lem2646671) (@lem2646703)). Qed.
Lemma lem2646705 : term258 = False.
Proof. exact (TRANS (@lem2646648) (@lem2646704)). Qed.
Lemma lem2646706 : term257 = False.
Proof. exact (TRANS (@lem2646639) (@lem2646705)). Qed.
Lemma lem2646707 (m : int) (n : int) (h1 : term1092 m n) : False.
Proof. exact (EQ_MP (@lem2646706) (@lem2646636 m n h1)). Qed.
Lemma lem2646708 (m : int) (n : int) (h1 : term1094 m n) : False.
Proof. exact (or_elim (@lem2645769 m n h1) (fun h0 : term1090 m n => @lem2646238 m n h0) (fun h0 : term1092 m n => @lem2646707 m n h0)). Qed.
Lemma lem2646709 (m : int) (n : int) (h1 : term1117 m n) : term1117 m n.
Proof. exact (h1). Qed.
Lemma lem2646710 (m : int) (n : int) (h1 : term1113 m n) : term1113 m n.
Proof. exact (h1). Qed.
Lemma lem2646711 (m : int) (n : int) (h1 : term1113 m n) : term1112 m n.
Proof. exact (proj2 (@lem2646710 m n h1)). Qed.
Lemma lem2646713 (m : int) (n : int) (h1 : term1113 m n) : term716 m n.
Proof. exact (proj2 (@lem2646711 m n h1)). Qed.
Lemma lem2646714 (m : int) (n : int) (h1 : term1113 m n) : term910 m n.
Proof. exact (proj1 (@lem2646711 m n h1)). Qed.
Lemma lem2646716 (m : int) (n : int) (h1 : term1113 m n) : term853 m n.
Proof. exact (proj1 (@lem2646714 m n h1)). Qed.
Lemma lem2646717 (m : int) (n : int) (h1 : term1113 m n) : term807 m n.
Proof. exact (proj2 (@lem2646716 m n h1)). Qed.
Lemma lem2646720 (m : int) (n : int) (h1 : term1113 m n) : term829 m n.
Proof. exact (proj1 (@lem2646717 m n h1)). Qed.
Lemma lem2646721 (m : int) (n : int) (h1 : term1113 m n) : term714 m n.
Proof. exact (proj2 (@lem2646713 m n h1)). Qed.
Lemma lem2646724 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2646725 : term229 = term109.
Proof. exact (@lem2646724 term38 term31). Qed.
Lemma lem2646727 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646728 : term31 = term99.
Proof. exact (@lem2646727 term32). Qed.
Lemma lem2646730 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646731 : term38 = term134.
Proof. exact (@lem2646730 (NUMERAL 0)). Qed.
Lemma lem2646732 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646733 : term230 = term231.
Proof. exact (MK_COMB (@lem2646732) (@lem2646731)). Qed.
Lemma lem2646734 : term109 = term232.
Proof. exact (MK_COMB (@lem2646733) (@lem2646728)). Qed.
Lemma lem2646735 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2646737 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646738 : term109 = term110.
Proof. exact (@lem2646737 (NUMERAL 0) term32). Qed.
Lemma lem2646739 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646740 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646741 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646740 h1) (fun h1 : term110 = True => @lem2646739)). Qed.
Lemma lem2646742 : term110 = True.
Proof. exact (EQ_MP (@lem2646741) (@lem2646739)). Qed.
Lemma lem2646743 : term109 = True.
Proof. exact (TRANS (@lem2646738) (@lem2646742)). Qed.
Lemma lem2646744 : True = term109.
Proof. exact (SYM (@lem2646743)). Qed.
Lemma lem2646745 : term109.
Proof. exact (EQ_MP (@lem2646744) (@lem0)). Qed.
Lemma lem2646746 : term234.
Proof. exact (@lem2646735 (@lem2646745)). Qed.
Lemma lem2646748 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646749 : term109 = term110.
Proof. exact (@lem2646748 (NUMERAL 0) term32). Qed.
Lemma lem2646750 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646751 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646752 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646751 h1) (fun h1 : term110 = True => @lem2646750)). Qed.
Lemma lem2646753 : term110 = True.
Proof. exact (EQ_MP (@lem2646752) (@lem2646750)). Qed.
Lemma lem2646754 : term109 = True.
Proof. exact (TRANS (@lem2646749) (@lem2646753)). Qed.
Lemma lem2646755 : True = term109.
Proof. exact (SYM (@lem2646754)). Qed.
Lemma lem2646756 : term109.
Proof. exact (EQ_MP (@lem2646755) (@lem0)). Qed.
Lemma lem2646757 : term232 = term235.
Proof. exact (@lem2646746 (@lem2646756)). Qed.
Lemma lem2646759 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646760 : term117 = term118.
Proof. exact (@lem2646759 term32 term32). Qed.
Lemma lem2646761 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646762 : term120 = term32.
Proof. exact (EQ_MP (@lem2646761) (@lem940073)). Qed.
Lemma lem2646763 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646764 : term118 = term31.
Proof. exact (MK_COMB (@lem2646763) (@lem2646762)). Qed.
Lemma lem2646765 : term117 = term31.
Proof. exact (TRANS (@lem2646760) (@lem2646764)). Qed.
Lemma lem2646767 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646768 : term131 = term38.
Proof. exact (@lem2646767 term32). Qed.
Lemma lem2646769 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646770 : term236 = term230.
Proof. exact (MK_COMB (@lem2646769) (@lem2646768)). Qed.
Lemma lem2646771 : term235 = term109.
Proof. exact (MK_COMB (@lem2646770) (@lem2646765)). Qed.
Lemma lem2646773 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646774 : term109 = term110.
Proof. exact (@lem2646773 (NUMERAL 0) term32). Qed.
Lemma lem2646775 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646776 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646777 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646776 h1) (fun h1 : term110 = True => @lem2646775)). Qed.
Lemma lem2646778 : term110 = True.
Proof. exact (EQ_MP (@lem2646777) (@lem2646775)). Qed.
Lemma lem2646779 : term109 = True.
Proof. exact (TRANS (@lem2646774) (@lem2646778)). Qed.
Lemma lem2646780 : term235 = True.
Proof. exact (TRANS (@lem2646771) (@lem2646779)). Qed.
Lemma lem2646781 : term232 = True.
Proof. exact (TRANS (@lem2646757) (@lem2646780)). Qed.
Lemma lem2646782 : term109 = True.
Proof. exact (TRANS (@lem2646734) (@lem2646781)). Qed.
Lemma lem2646783 : term229 = True.
Proof. exact (TRANS (@lem2646725) (@lem2646782)). Qed.
Lemma lem2646784 : True = term229.
Proof. exact (SYM (@lem2646783)). Qed.
Lemma lem2646785 : term229.
Proof. exact (EQ_MP (@lem2646784) (@lem0)). Qed.
Lemma lem2646786 (m : int) (n : int) (h1 : term1113 m n) : term1157 m n.
Proof. exact (conj (@lem2646785) (@lem2646720 m n h1)). Qed.
Lemma lem2646788 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2646789 (m : int) (n : int) : term1158 m n.
Proof. exact (@lem2646788 term31 (term88 m n)). Qed.
Lemma lem2646790 (m : int) (n : int) (h1 : term1113 m n) : term1159 m n.
Proof. exact (@lem2646789 m n (@lem2646786 m n h1)). Qed.
Lemma lem2646791 (m : int) (n : int) : (term1160 m n) = (term88 m n).
Proof. exact (@lem1982733 (term88 m n)). Qed.
Lemma lem2646792 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646793 (m : int) (n : int) : (term1161 m n) = (term835 m n).
Proof. exact (MK_COMB (@lem2646792) (@lem2646791 m n)). Qed.
Lemma lem2646794 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646795 (m : int) (n : int) : (term1159 m n) = (term829 m n).
Proof. exact (MK_COMB (@lem2646793 m n) (@lem2646794)). Qed.
Lemma lem2646796 (m : int) (n : int) (h1 : term1113 m n) : term829 m n.
Proof. exact (EQ_MP (@lem2646795 m n) (@lem2646790 m n h1)). Qed.
Lemma lem2646798 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2646799 : term229 = term109.
Proof. exact (@lem2646798 term38 term31). Qed.
Lemma lem2646801 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646802 : term31 = term99.
Proof. exact (@lem2646801 term32). Qed.
Lemma lem2646804 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646805 : term38 = term134.
Proof. exact (@lem2646804 (NUMERAL 0)). Qed.
Lemma lem2646806 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646807 : term230 = term231.
Proof. exact (MK_COMB (@lem2646806) (@lem2646805)). Qed.
Lemma lem2646808 : term109 = term232.
Proof. exact (MK_COMB (@lem2646807) (@lem2646802)). Qed.
Lemma lem2646809 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2646811 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646812 : term109 = term110.
Proof. exact (@lem2646811 (NUMERAL 0) term32). Qed.
Lemma lem2646813 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646814 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646815 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646814 h1) (fun h1 : term110 = True => @lem2646813)). Qed.
Lemma lem2646816 : term110 = True.
Proof. exact (EQ_MP (@lem2646815) (@lem2646813)). Qed.
Lemma lem2646817 : term109 = True.
Proof. exact (TRANS (@lem2646812) (@lem2646816)). Qed.
Lemma lem2646818 : True = term109.
Proof. exact (SYM (@lem2646817)). Qed.
Lemma lem2646819 : term109.
Proof. exact (EQ_MP (@lem2646818) (@lem0)). Qed.
Lemma lem2646820 : term234.
Proof. exact (@lem2646809 (@lem2646819)). Qed.
Lemma lem2646822 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646823 : term109 = term110.
Proof. exact (@lem2646822 (NUMERAL 0) term32). Qed.
Lemma lem2646824 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646825 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646826 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646825 h1) (fun h1 : term110 = True => @lem2646824)). Qed.
Lemma lem2646827 : term110 = True.
Proof. exact (EQ_MP (@lem2646826) (@lem2646824)). Qed.
Lemma lem2646828 : term109 = True.
Proof. exact (TRANS (@lem2646823) (@lem2646827)). Qed.
Lemma lem2646829 : True = term109.
Proof. exact (SYM (@lem2646828)). Qed.
Lemma lem2646830 : term109.
Proof. exact (EQ_MP (@lem2646829) (@lem0)). Qed.
Lemma lem2646831 : term232 = term235.
Proof. exact (@lem2646820 (@lem2646830)). Qed.
Lemma lem2646833 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646834 : term117 = term118.
Proof. exact (@lem2646833 term32 term32). Qed.
Lemma lem2646835 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646836 : term120 = term32.
Proof. exact (EQ_MP (@lem2646835) (@lem940073)). Qed.
Lemma lem2646837 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646838 : term118 = term31.
Proof. exact (MK_COMB (@lem2646837) (@lem2646836)). Qed.
Lemma lem2646839 : term117 = term31.
Proof. exact (TRANS (@lem2646834) (@lem2646838)). Qed.
Lemma lem2646841 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646842 : term131 = term38.
Proof. exact (@lem2646841 term32). Qed.
Lemma lem2646843 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2646844 : term236 = term230.
Proof. exact (MK_COMB (@lem2646843) (@lem2646842)). Qed.
Lemma lem2646845 : term235 = term109.
Proof. exact (MK_COMB (@lem2646844) (@lem2646839)). Qed.
Lemma lem2646847 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646848 : term109 = term110.
Proof. exact (@lem2646847 (NUMERAL 0) term32). Qed.
Lemma lem2646849 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646850 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646851 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646850 h1) (fun h1 : term110 = True => @lem2646849)). Qed.
Lemma lem2646852 : term110 = True.
Proof. exact (EQ_MP (@lem2646851) (@lem2646849)). Qed.
Lemma lem2646853 : term109 = True.
Proof. exact (TRANS (@lem2646848) (@lem2646852)). Qed.
Lemma lem2646854 : term235 = True.
Proof. exact (TRANS (@lem2646845) (@lem2646853)). Qed.
Lemma lem2646855 : term232 = True.
Proof. exact (TRANS (@lem2646831) (@lem2646854)). Qed.
Lemma lem2646856 : term109 = True.
Proof. exact (TRANS (@lem2646808) (@lem2646855)). Qed.
Lemma lem2646857 : term229 = True.
Proof. exact (TRANS (@lem2646799) (@lem2646856)). Qed.
Lemma lem2646858 : True = term229.
Proof. exact (SYM (@lem2646857)). Qed.
Lemma lem2646859 : term229.
Proof. exact (EQ_MP (@lem2646858) (@lem0)). Qed.
Lemma lem2646860 (m : int) (n : int) (h1 : term1113 m n) : term1162 m n.
Proof. exact (conj (@lem2646859) (@lem2646721 m n h1)). Qed.
Lemma lem2646862 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2646863 (m : int) (n : int) : term1163 m n.
Proof. exact (@lem2646862 term31 (term196 m n)). Qed.
Lemma lem2646864 (m : int) (n : int) (h1 : term1113 m n) : term1164 m n.
Proof. exact (@lem2646863 m n (@lem2646860 m n h1)). Qed.
Lemma lem2646865 (m : int) (n : int) : (term1165 m n) = (term196 m n).
Proof. exact (@lem1982733 (term196 m n)). Qed.
Lemma lem2646866 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2646867 (m : int) (n : int) : (term1166 m n) = (term713 m n).
Proof. exact (MK_COMB (@lem2646866) (@lem2646865 m n)). Qed.
Lemma lem2646868 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2646869 (m : int) (n : int) : (term1164 m n) = (term714 m n).
Proof. exact (MK_COMB (@lem2646867 m n) (@lem2646868)). Qed.
Lemma lem2646870 (m : int) (n : int) (h1 : term1113 m n) : term714 m n.
Proof. exact (EQ_MP (@lem2646869 m n) (@lem2646864 m n h1)). Qed.
Lemma lem2646871 (m : int) (n : int) (h1 : term1113 m n) : term1167 m n.
Proof. exact (conj (@lem2646870 m n h1) (@lem2646796 m n h1)). Qed.
Lemma lem2646873 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2646874 (m : int) (n : int) : term1168 m n.
Proof. exact (@lem2646873 (term196 m n) (term88 m n)). Qed.
Lemma lem2646875 (m : int) (n : int) (h1 : term1113 m n) : term1169 m n.
Proof. exact (@lem2646874 m n (@lem2646871 m n h1)). Qed.
Lemma lem2646876 (m : int) (n : int) : (term1170 m n) = (term1171 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term164 n) (term94 n)). Qed.
Lemma lem2646877 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2646879 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646880 : term31 = term99.
Proof. exact (@lem2646879 term32). Qed.
Lemma lem2646882 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646883 : term97 = term102.
Proof. exact (@lem2646882 term32). Qed.
Lemma lem2646884 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646885 : term103 = term104.
Proof. exact (MK_COMB (@lem2646884) (@lem2646883)). Qed.
Lemma lem2646886 : term105 = term106.
Proof. exact (MK_COMB (@lem2646885) (@lem2646880)). Qed.
Lemma lem2646887 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2646889 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646890 : term109 = term110.
Proof. exact (@lem2646889 (NUMERAL 0) term32). Qed.
Lemma lem2646891 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646892 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646893 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646892 h1) (fun h1 : term110 = True => @lem2646891)). Qed.
Lemma lem2646894 : term110 = True.
Proof. exact (EQ_MP (@lem2646893) (@lem2646891)). Qed.
Lemma lem2646895 : term109 = True.
Proof. exact (TRANS (@lem2646890) (@lem2646894)). Qed.
Lemma lem2646896 : True = term109.
Proof. exact (SYM (@lem2646895)). Qed.
Lemma lem2646897 : term109.
Proof. exact (EQ_MP (@lem2646896) (@lem0)). Qed.
Lemma lem2646898 : term112.
Proof. exact (@lem2646887 (@lem2646897)). Qed.
Lemma lem2646900 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646901 : term109 = term110.
Proof. exact (@lem2646900 (NUMERAL 0) term32). Qed.
Lemma lem2646902 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646903 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646904 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646903 h1) (fun h1 : term110 = True => @lem2646902)). Qed.
Lemma lem2646905 : term110 = True.
Proof. exact (EQ_MP (@lem2646904) (@lem2646902)). Qed.
Lemma lem2646906 : term109 = True.
Proof. exact (TRANS (@lem2646901) (@lem2646905)). Qed.
Lemma lem2646907 : True = term109.
Proof. exact (SYM (@lem2646906)). Qed.
Lemma lem2646908 : term109.
Proof. exact (EQ_MP (@lem2646907) (@lem0)). Qed.
Lemma lem2646909 : term113.
Proof. exact (@lem2646898 (@lem2646908)). Qed.
Lemma lem2646911 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646912 : term109 = term110.
Proof. exact (@lem2646911 (NUMERAL 0) term32). Qed.
Lemma lem2646913 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2646914 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2646915 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2646914 h1) (fun h1 : term110 = True => @lem2646913)). Qed.
Lemma lem2646916 : term110 = True.
Proof. exact (EQ_MP (@lem2646915) (@lem2646913)). Qed.
Lemma lem2646917 : term109 = True.
Proof. exact (TRANS (@lem2646912) (@lem2646916)). Qed.
Lemma lem2646918 : True = term109.
Proof. exact (SYM (@lem2646917)). Qed.
Lemma lem2646919 : term109.
Proof. exact (EQ_MP (@lem2646918) (@lem0)). Qed.
Lemma lem2646920 : term114.
Proof. exact (@lem2646909 (@lem2646919)). Qed.
Lemma lem2646922 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646923 : term117 = term118.
Proof. exact (@lem2646922 term32 term32). Qed.
Lemma lem2646924 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646925 : term120 = term32.
Proof. exact (EQ_MP (@lem2646924) (@lem940073)). Qed.
Lemma lem2646926 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646927 : term118 = term31.
Proof. exact (MK_COMB (@lem2646926) (@lem2646925)). Qed.
Lemma lem2646928 : term117 = term31.
Proof. exact (TRANS (@lem2646923) (@lem2646927)). Qed.
Lemma lem2646930 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2646931 : term123 = term124.
Proof. exact (@lem2646930 term32 term32). Qed.
Lemma lem2646932 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646933 : term120 = term32.
Proof. exact (EQ_MP (@lem2646932) (@lem940073)). Qed.
Lemma lem2646934 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646935 : term118 = term31.
Proof. exact (MK_COMB (@lem2646934) (@lem2646933)). Qed.
Lemma lem2646936 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2646937 : term124 = term97.
Proof. exact (MK_COMB (@lem2646936) (@lem2646935)). Qed.
Lemma lem2646938 : term123 = term97.
Proof. exact (TRANS (@lem2646931) (@lem2646937)). Qed.
Lemma lem2646939 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646940 : term125 = term103.
Proof. exact (MK_COMB (@lem2646939) (@lem2646938)). Qed.
Lemma lem2646941 : term126 = term105.
Proof. exact (MK_COMB (@lem2646940) (@lem2646928)). Qed.
Lemma lem2646943 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2646944 : term105 = term38.
Proof. exact (@lem2646943 term32). Qed.
Lemma lem2646945 : term126 = term38.
Proof. exact (TRANS (@lem2646941) (@lem2646944)). Qed.
Lemma lem2646946 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646947 : term128 = term129.
Proof. exact (MK_COMB (@lem2646946) (@lem2646945)). Qed.
Lemma lem2646948 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2646949 : term130 = term131.
Proof. exact (MK_COMB (@lem2646947) (@lem2646948)). Qed.
Lemma lem2646951 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646952 : term131 = term38.
Proof. exact (@lem2646951 term32). Qed.
Lemma lem2646953 : term130 = term38.
Proof. exact (TRANS (@lem2646949) (@lem2646952)). Qed.
Lemma lem2646955 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2646956 : term117 = term118.
Proof. exact (@lem2646955 term32 term32). Qed.
Lemma lem2646957 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2646958 : term120 = term32.
Proof. exact (EQ_MP (@lem2646957) (@lem940073)). Qed.
Lemma lem2646959 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2646960 : term118 = term31.
Proof. exact (MK_COMB (@lem2646959) (@lem2646958)). Qed.
Lemma lem2646961 : term117 = term31.
Proof. exact (TRANS (@lem2646956) (@lem2646960)). Qed.
Lemma lem2646962 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2646963 : term133 = term131.
Proof. exact (MK_COMB (@lem2646962) (@lem2646961)). Qed.
Lemma lem2646965 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2646966 : term131 = term38.
Proof. exact (@lem2646965 term32). Qed.
Lemma lem2646967 : term133 = term38.
Proof. exact (TRANS (@lem2646963) (@lem2646966)). Qed.
Lemma lem2646968 : term38 = term133.
Proof. exact (SYM (@lem2646967)). Qed.
Lemma lem2646969 : term130 = term133.
Proof. exact (TRANS (@lem2646953) (@lem2646968)). Qed.
Lemma lem2646970 : term106 = term134.
Proof. exact (@lem2646920 (@lem2646969)). Qed.
Lemma lem2646971 : term105 = term134.
Proof. exact (TRANS (@lem2646886) (@lem2646970)). Qed.
Lemma lem2646973 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2646974 : term134 = term38.
Proof. exact (@lem2646973 term38). Qed.
Lemma lem2646975 : term105 = term38.
Proof. exact (TRANS (@lem2646971) (@lem2646974)). Qed.
Lemma lem2646976 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2646977 : term136 = term129.
Proof. exact (MK_COMB (@lem2646976) (@lem2646975)). Qed.
Lemma lem2646978 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2646979 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2646977) (@lem2646978 m)). Qed.
Lemma lem2646980 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2646877 m) (@lem2646979 m)). Qed.
Lemma lem2646981 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2646982 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2646980 m) (@lem2646981 m)). Qed.
Lemma lem2646983 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646984 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2646983) (@lem2646982 m)). Qed.
Lemma lem2646985 (n : int) : (term1172 n) = (term253 n).
Proof. exact (@lem1982759 (real_of_int n) (term94 n) term97). Qed.
Lemma lem2646986 (n : int) : (term95 n) = (term96 n).
Proof. exact (@lem1982715 term97 (real_of_int n)). Qed.
Lemma lem2646988 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2646989 : term31 = term99.
Proof. exact (@lem2646988 term32). Qed.
Lemma lem2646991 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2646992 : term97 = term102.
Proof. exact (@lem2646991 term32). Qed.
Lemma lem2646993 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2646994 : term103 = term104.
Proof. exact (MK_COMB (@lem2646993) (@lem2646992)). Qed.
Lemma lem2646995 : term105 = term106.
Proof. exact (MK_COMB (@lem2646994) (@lem2646989)). Qed.
Lemma lem2646996 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2646998 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2646999 : term109 = term110.
Proof. exact (@lem2646998 (NUMERAL 0) term32). Qed.
Lemma lem2647000 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647001 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647002 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647001 h1) (fun h1 : term110 = True => @lem2647000)). Qed.
Lemma lem2647003 : term110 = True.
Proof. exact (EQ_MP (@lem2647002) (@lem2647000)). Qed.
Lemma lem2647004 : term109 = True.
Proof. exact (TRANS (@lem2646999) (@lem2647003)). Qed.
Lemma lem2647005 : True = term109.
Proof. exact (SYM (@lem2647004)). Qed.
Lemma lem2647006 : term109.
Proof. exact (EQ_MP (@lem2647005) (@lem0)). Qed.
Lemma lem2647007 : term112.
Proof. exact (@lem2646996 (@lem2647006)). Qed.
Lemma lem2647009 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647010 : term109 = term110.
Proof. exact (@lem2647009 (NUMERAL 0) term32). Qed.
Lemma lem2647011 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647012 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647013 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647012 h1) (fun h1 : term110 = True => @lem2647011)). Qed.
Lemma lem2647014 : term110 = True.
Proof. exact (EQ_MP (@lem2647013) (@lem2647011)). Qed.
Lemma lem2647015 : term109 = True.
Proof. exact (TRANS (@lem2647010) (@lem2647014)). Qed.
Lemma lem2647016 : True = term109.
Proof. exact (SYM (@lem2647015)). Qed.
Lemma lem2647017 : term109.
Proof. exact (EQ_MP (@lem2647016) (@lem0)). Qed.
Lemma lem2647018 : term113.
Proof. exact (@lem2647007 (@lem2647017)). Qed.
Lemma lem2647020 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647021 : term109 = term110.
Proof. exact (@lem2647020 (NUMERAL 0) term32). Qed.
Lemma lem2647022 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647023 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647024 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647023 h1) (fun h1 : term110 = True => @lem2647022)). Qed.
Lemma lem2647025 : term110 = True.
Proof. exact (EQ_MP (@lem2647024) (@lem2647022)). Qed.
Lemma lem2647026 : term109 = True.
Proof. exact (TRANS (@lem2647021) (@lem2647025)). Qed.
Lemma lem2647027 : True = term109.
Proof. exact (SYM (@lem2647026)). Qed.
Lemma lem2647028 : term109.
Proof. exact (EQ_MP (@lem2647027) (@lem0)). Qed.
Lemma lem2647029 : term114.
Proof. exact (@lem2647018 (@lem2647028)). Qed.
Lemma lem2647031 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647032 : term117 = term118.
Proof. exact (@lem2647031 term32 term32). Qed.
Lemma lem2647033 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647034 : term120 = term32.
Proof. exact (EQ_MP (@lem2647033) (@lem940073)). Qed.
Lemma lem2647035 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647036 : term118 = term31.
Proof. exact (MK_COMB (@lem2647035) (@lem2647034)). Qed.
Lemma lem2647037 : term117 = term31.
Proof. exact (TRANS (@lem2647032) (@lem2647036)). Qed.
Lemma lem2647039 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2647040 : term123 = term124.
Proof. exact (@lem2647039 term32 term32). Qed.
Lemma lem2647041 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647042 : term120 = term32.
Proof. exact (EQ_MP (@lem2647041) (@lem940073)). Qed.
Lemma lem2647043 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647044 : term118 = term31.
Proof. exact (MK_COMB (@lem2647043) (@lem2647042)). Qed.
Lemma lem2647045 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2647046 : term124 = term97.
Proof. exact (MK_COMB (@lem2647045) (@lem2647044)). Qed.
Lemma lem2647047 : term123 = term97.
Proof. exact (TRANS (@lem2647040) (@lem2647046)). Qed.
Lemma lem2647048 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647049 : term125 = term103.
Proof. exact (MK_COMB (@lem2647048) (@lem2647047)). Qed.
Lemma lem2647050 : term126 = term105.
Proof. exact (MK_COMB (@lem2647049) (@lem2647037)). Qed.
Lemma lem2647052 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2647053 : term105 = term38.
Proof. exact (@lem2647052 term32). Qed.
Lemma lem2647054 : term126 = term38.
Proof. exact (TRANS (@lem2647050) (@lem2647053)). Qed.
Lemma lem2647055 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647056 : term128 = term129.
Proof. exact (MK_COMB (@lem2647055) (@lem2647054)). Qed.
Lemma lem2647057 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2647058 : term130 = term131.
Proof. exact (MK_COMB (@lem2647056) (@lem2647057)). Qed.
Lemma lem2647060 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647061 : term131 = term38.
Proof. exact (@lem2647060 term32). Qed.
Lemma lem2647062 : term130 = term38.
Proof. exact (TRANS (@lem2647058) (@lem2647061)). Qed.
Lemma lem2647064 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647065 : term117 = term118.
Proof. exact (@lem2647064 term32 term32). Qed.
Lemma lem2647066 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647067 : term120 = term32.
Proof. exact (EQ_MP (@lem2647066) (@lem940073)). Qed.
Lemma lem2647068 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647069 : term118 = term31.
Proof. exact (MK_COMB (@lem2647068) (@lem2647067)). Qed.
Lemma lem2647070 : term117 = term31.
Proof. exact (TRANS (@lem2647065) (@lem2647069)). Qed.
Lemma lem2647071 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2647072 : term133 = term131.
Proof. exact (MK_COMB (@lem2647071) (@lem2647070)). Qed.
Lemma lem2647074 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647075 : term131 = term38.
Proof. exact (@lem2647074 term32). Qed.
Lemma lem2647076 : term133 = term38.
Proof. exact (TRANS (@lem2647072) (@lem2647075)). Qed.
Lemma lem2647077 : term38 = term133.
Proof. exact (SYM (@lem2647076)). Qed.
Lemma lem2647078 : term130 = term133.
Proof. exact (TRANS (@lem2647062) (@lem2647077)). Qed.
Lemma lem2647079 : term106 = term134.
Proof. exact (@lem2647029 (@lem2647078)). Qed.
Lemma lem2647080 : term105 = term134.
Proof. exact (TRANS (@lem2646995) (@lem2647079)). Qed.
Lemma lem2647082 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2647083 : term134 = term38.
Proof. exact (@lem2647082 term38). Qed.
Lemma lem2647084 : term105 = term38.
Proof. exact (TRANS (@lem2647080) (@lem2647083)). Qed.
Lemma lem2647085 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647086 : term136 = term129.
Proof. exact (MK_COMB (@lem2647085) (@lem2647084)). Qed.
Lemma lem2647087 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2647088 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2647086) (@lem2647087 n)). Qed.
Lemma lem2647089 (n : int) : (term95 n) = (term137 n).
Proof. exact (TRANS (@lem2646986 n) (@lem2647088 n)). Qed.
Lemma lem2647090 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2647091 (n : int) : (term95 n) = term38.
Proof. exact (TRANS (@lem2647089 n) (@lem2647090 n)). Qed.
Lemma lem2647092 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647093 (n : int) : (term138 n) = term48.
Proof. exact (MK_COMB (@lem2647092) (@lem2647091 n)). Qed.
Lemma lem2647094 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2647095 (n : int) : (term253 n) = term254.
Proof. exact (MK_COMB (@lem2647093 n) (@lem2647094)). Qed.
Lemma lem2647096 (n : int) : (term1172 n) = term254.
Proof. exact (TRANS (@lem2646985 n) (@lem2647095 n)). Qed.
Lemma lem2647097 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2647098 (n : int) : (term1172 n) = term97.
Proof. exact (TRANS (@lem2647096 n) (@lem2647097)). Qed.
Lemma lem2647099 (m : int) (n : int) : (term1171 m n) = term254.
Proof. exact (MK_COMB (@lem2646984 m) (@lem2647098 n)). Qed.
Lemma lem2647100 (m : int) (n : int) : (term1170 m n) = term254.
Proof. exact (TRANS (@lem2646876 m n) (@lem2647099 m n)). Qed.
Lemma lem2647101 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2647102 (m : int) (n : int) : (term1170 m n) = term97.
Proof. exact (TRANS (@lem2647100 m n) (@lem2647101)). Qed.
Lemma lem2647103 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2647104 (m : int) (n : int) : (term1173 m n) = term256.
Proof. exact (MK_COMB (@lem2647103) (@lem2647102 m n)). Qed.
Lemma lem2647105 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2647106 (m : int) (n : int) : (term1169 m n) = term257.
Proof. exact (MK_COMB (@lem2647104 m n) (@lem2647105)). Qed.
Lemma lem2647107 (m : int) (n : int) (h1 : term1113 m n) : term257.
Proof. exact (EQ_MP (@lem2647106 m n) (@lem2646875 m n h1)). Qed.
Lemma lem2647109 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2647110 : term257 = term258.
Proof. exact (@lem2647109 term38 term97). Qed.
Lemma lem2647112 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2647113 : term97 = term102.
Proof. exact (@lem2647112 term32). Qed.
Lemma lem2647115 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647116 : term38 = term134.
Proof. exact (@lem2647115 (NUMERAL 0)). Qed.
Lemma lem2647117 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2647118 : term259 = term260.
Proof. exact (MK_COMB (@lem2647117) (@lem2647116)). Qed.
Lemma lem2647119 : term258 = term261.
Proof. exact (MK_COMB (@lem2647118) (@lem2647113)). Qed.
Lemma lem2647120 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2647122 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647123 : term109 = term110.
Proof. exact (@lem2647122 (NUMERAL 0) term32). Qed.
Lemma lem2647124 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647125 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647126 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647125 h1) (fun h1 : term110 = True => @lem2647124)). Qed.
Lemma lem2647127 : term110 = True.
Proof. exact (EQ_MP (@lem2647126) (@lem2647124)). Qed.
Lemma lem2647128 : term109 = True.
Proof. exact (TRANS (@lem2647123) (@lem2647127)). Qed.
Lemma lem2647129 : True = term109.
Proof. exact (SYM (@lem2647128)). Qed.
Lemma lem2647130 : term109.
Proof. exact (EQ_MP (@lem2647129) (@lem0)). Qed.
Lemma lem2647131 : term263.
Proof. exact (@lem2647120 (@lem2647130)). Qed.
Lemma lem2647133 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647134 : term109 = term110.
Proof. exact (@lem2647133 (NUMERAL 0) term32). Qed.
Lemma lem2647135 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647136 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647137 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647136 h1) (fun h1 : term110 = True => @lem2647135)). Qed.
Lemma lem2647138 : term110 = True.
Proof. exact (EQ_MP (@lem2647137) (@lem2647135)). Qed.
Lemma lem2647139 : term109 = True.
Proof. exact (TRANS (@lem2647134) (@lem2647138)). Qed.
Lemma lem2647140 : True = term109.
Proof. exact (SYM (@lem2647139)). Qed.
Lemma lem2647141 : term109.
Proof. exact (EQ_MP (@lem2647140) (@lem0)). Qed.
Lemma lem2647142 : term261 = term264.
Proof. exact (@lem2647131 (@lem2647141)). Qed.
Lemma lem2647144 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2647145 : term123 = term124.
Proof. exact (@lem2647144 term32 term32). Qed.
Lemma lem2647146 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647147 : term120 = term32.
Proof. exact (EQ_MP (@lem2647146) (@lem940073)). Qed.
Lemma lem2647148 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647149 : term118 = term31.
Proof. exact (MK_COMB (@lem2647148) (@lem2647147)). Qed.
Lemma lem2647150 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2647151 : term124 = term97.
Proof. exact (MK_COMB (@lem2647150) (@lem2647149)). Qed.
Lemma lem2647152 : term123 = term97.
Proof. exact (TRANS (@lem2647145) (@lem2647151)). Qed.
Lemma lem2647154 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647155 : term131 = term38.
Proof. exact (@lem2647154 term32). Qed.
Lemma lem2647156 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2647157 : term265 = term259.
Proof. exact (MK_COMB (@lem2647156) (@lem2647155)). Qed.
Lemma lem2647158 : term264 = term258.
Proof. exact (MK_COMB (@lem2647157) (@lem2647152)). Qed.
Lemma lem2647160 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2647161 : term258 = term268.
Proof. exact (@lem2647160 (NUMERAL 0) term32). Qed.
Lemma lem2647162 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647163 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2647164 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647163 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2647162)). Qed.
Lemma lem2647165 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2647164) (@lem2647162)). Qed.
Lemma lem2647166 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2647167 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2647168 : term269 = (and True).
Proof. exact (MK_COMB (@lem2647167) (@lem2647166)). Qed.
Lemma lem2647169 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2647168) (@lem2647165)). Qed.
Lemma lem2647171 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2647172 : term268 = False.
Proof. exact (TRANS (@lem2647169) (@lem2647171)). Qed.
Lemma lem2647173 : term258 = False.
Proof. exact (TRANS (@lem2647161) (@lem2647172)). Qed.
Lemma lem2647174 : term264 = False.
Proof. exact (TRANS (@lem2647158) (@lem2647173)). Qed.
Lemma lem2647175 : term261 = False.
Proof. exact (TRANS (@lem2647142) (@lem2647174)). Qed.
Lemma lem2647176 : term258 = False.
Proof. exact (TRANS (@lem2647119) (@lem2647175)). Qed.
Lemma lem2647177 : term257 = False.
Proof. exact (TRANS (@lem2647110) (@lem2647176)). Qed.
Lemma lem2647178 (m : int) (n : int) (h1 : term1113 m n) : False.
Proof. exact (EQ_MP (@lem2647177) (@lem2647107 m n h1)). Qed.
Lemma lem2647179 (m : int) (n : int) (h1 : term1115 m n) : term1115 m n.
Proof. exact (h1). Qed.
Lemma lem2647180 (m : int) (n : int) (h1 : term1115 m n) : term1114 m n.
Proof. exact (proj2 (@lem2647179 m n h1)). Qed.
Lemma lem2647182 (m : int) (n : int) (h1 : term1115 m n) : term751 m n.
Proof. exact (proj2 (@lem2647180 m n h1)). Qed.
Lemma lem2647183 (m : int) (n : int) (h1 : term1115 m n) : term910 m n.
Proof. exact (proj1 (@lem2647180 m n h1)). Qed.
Lemma lem2647185 (m : int) (n : int) (h1 : term1115 m n) : term853 m n.
Proof. exact (proj1 (@lem2647183 m n h1)). Qed.
Lemma lem2647186 (m : int) (n : int) (h1 : term1115 m n) : term807 m n.
Proof. exact (proj2 (@lem2647185 m n h1)). Qed.
Lemma lem2647188 (m : int) (n : int) (h1 : term1115 m n) : term805 m n.
Proof. exact (proj2 (@lem2647186 m n h1)). Qed.
Lemma lem2647190 (m : int) (n : int) (h1 : term1115 m n) : term749 m n.
Proof. exact (proj2 (@lem2647182 m n h1)). Qed.
Lemma lem2647193 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2647194 : term229 = term109.
Proof. exact (@lem2647193 term38 term31). Qed.
Lemma lem2647196 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647197 : term31 = term99.
Proof. exact (@lem2647196 term32). Qed.
Lemma lem2647199 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647200 : term38 = term134.
Proof. exact (@lem2647199 (NUMERAL 0)). Qed.
Lemma lem2647201 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2647202 : term230 = term231.
Proof. exact (MK_COMB (@lem2647201) (@lem2647200)). Qed.
Lemma lem2647203 : term109 = term232.
Proof. exact (MK_COMB (@lem2647202) (@lem2647197)). Qed.
Lemma lem2647204 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2647206 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647207 : term109 = term110.
Proof. exact (@lem2647206 (NUMERAL 0) term32). Qed.
Lemma lem2647208 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647209 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647210 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647209 h1) (fun h1 : term110 = True => @lem2647208)). Qed.
Lemma lem2647211 : term110 = True.
Proof. exact (EQ_MP (@lem2647210) (@lem2647208)). Qed.
Lemma lem2647212 : term109 = True.
Proof. exact (TRANS (@lem2647207) (@lem2647211)). Qed.
Lemma lem2647213 : True = term109.
Proof. exact (SYM (@lem2647212)). Qed.
Lemma lem2647214 : term109.
Proof. exact (EQ_MP (@lem2647213) (@lem0)). Qed.
Lemma lem2647215 : term234.
Proof. exact (@lem2647204 (@lem2647214)). Qed.
Lemma lem2647217 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647218 : term109 = term110.
Proof. exact (@lem2647217 (NUMERAL 0) term32). Qed.
Lemma lem2647219 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647220 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647221 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647220 h1) (fun h1 : term110 = True => @lem2647219)). Qed.
Lemma lem2647222 : term110 = True.
Proof. exact (EQ_MP (@lem2647221) (@lem2647219)). Qed.
Lemma lem2647223 : term109 = True.
Proof. exact (TRANS (@lem2647218) (@lem2647222)). Qed.
Lemma lem2647224 : True = term109.
Proof. exact (SYM (@lem2647223)). Qed.
Lemma lem2647225 : term109.
Proof. exact (EQ_MP (@lem2647224) (@lem0)). Qed.
Lemma lem2647226 : term232 = term235.
Proof. exact (@lem2647215 (@lem2647225)). Qed.
Lemma lem2647228 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647229 : term117 = term118.
Proof. exact (@lem2647228 term32 term32). Qed.
Lemma lem2647230 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647231 : term120 = term32.
Proof. exact (EQ_MP (@lem2647230) (@lem940073)). Qed.
Lemma lem2647232 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647233 : term118 = term31.
Proof. exact (MK_COMB (@lem2647232) (@lem2647231)). Qed.
Lemma lem2647234 : term117 = term31.
Proof. exact (TRANS (@lem2647229) (@lem2647233)). Qed.
Lemma lem2647236 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647237 : term131 = term38.
Proof. exact (@lem2647236 term32). Qed.
Lemma lem2647238 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2647239 : term236 = term230.
Proof. exact (MK_COMB (@lem2647238) (@lem2647237)). Qed.
Lemma lem2647240 : term235 = term109.
Proof. exact (MK_COMB (@lem2647239) (@lem2647234)). Qed.
Lemma lem2647242 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647243 : term109 = term110.
Proof. exact (@lem2647242 (NUMERAL 0) term32). Qed.
Lemma lem2647244 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647245 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647246 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647245 h1) (fun h1 : term110 = True => @lem2647244)). Qed.
Lemma lem2647247 : term110 = True.
Proof. exact (EQ_MP (@lem2647246) (@lem2647244)). Qed.
Lemma lem2647248 : term109 = True.
Proof. exact (TRANS (@lem2647243) (@lem2647247)). Qed.
Lemma lem2647249 : term235 = True.
Proof. exact (TRANS (@lem2647240) (@lem2647248)). Qed.
Lemma lem2647250 : term232 = True.
Proof. exact (TRANS (@lem2647226) (@lem2647249)). Qed.
Lemma lem2647251 : term109 = True.
Proof. exact (TRANS (@lem2647203) (@lem2647250)). Qed.
Lemma lem2647252 : term229 = True.
Proof. exact (TRANS (@lem2647194) (@lem2647251)). Qed.
Lemma lem2647253 : True = term229.
Proof. exact (SYM (@lem2647252)). Qed.
Lemma lem2647254 : term229.
Proof. exact (EQ_MP (@lem2647253) (@lem0)). Qed.
Lemma lem2647255 (m : int) (n : int) (h1 : term1115 m n) : term1174 m n.
Proof. exact (conj (@lem2647254) (@lem2647188 m n h1)). Qed.
Lemma lem2647257 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2647258 (m : int) (n : int) : term1175 m n.
Proof. exact (@lem2647257 term31 (term25 m n)). Qed.
Lemma lem2647259 (m : int) (n : int) (h1 : term1115 m n) : term1176 m n.
Proof. exact (@lem2647258 m n (@lem2647255 m n h1)). Qed.
Lemma lem2647260 (m : int) (n : int) : (term1177 m n) = (term25 m n).
Proof. exact (@lem1982733 (term25 m n)). Qed.
Lemma lem2647261 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2647262 (m : int) (n : int) : (term1178 m n) = (term803 m n).
Proof. exact (MK_COMB (@lem2647261) (@lem2647260 m n)). Qed.
Lemma lem2647263 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2647264 (m : int) (n : int) : (term1176 m n) = (term805 m n).
Proof. exact (MK_COMB (@lem2647262 m n) (@lem2647263)). Qed.
Lemma lem2647265 (m : int) (n : int) (h1 : term1115 m n) : term805 m n.
Proof. exact (EQ_MP (@lem2647264 m n) (@lem2647259 m n h1)). Qed.
Lemma lem2647267 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem2647268 : term229 = term109.
Proof. exact (@lem2647267 term38 term31). Qed.
Lemma lem2647270 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647271 : term31 = term99.
Proof. exact (@lem2647270 term32). Qed.
Lemma lem2647273 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647274 : term38 = term134.
Proof. exact (@lem2647273 (NUMERAL 0)). Qed.
Lemma lem2647275 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2647276 : term230 = term231.
Proof. exact (MK_COMB (@lem2647275) (@lem2647274)). Qed.
Lemma lem2647277 : term109 = term232.
Proof. exact (MK_COMB (@lem2647276) (@lem2647271)). Qed.
Lemma lem2647278 : term233.
Proof. exact (@lem1980255 term38 term31 term31 term31). Qed.
Lemma lem2647280 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647281 : term109 = term110.
Proof. exact (@lem2647280 (NUMERAL 0) term32). Qed.
Lemma lem2647282 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647283 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647284 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647283 h1) (fun h1 : term110 = True => @lem2647282)). Qed.
Lemma lem2647285 : term110 = True.
Proof. exact (EQ_MP (@lem2647284) (@lem2647282)). Qed.
Lemma lem2647286 : term109 = True.
Proof. exact (TRANS (@lem2647281) (@lem2647285)). Qed.
Lemma lem2647287 : True = term109.
Proof. exact (SYM (@lem2647286)). Qed.
Lemma lem2647288 : term109.
Proof. exact (EQ_MP (@lem2647287) (@lem0)). Qed.
Lemma lem2647289 : term234.
Proof. exact (@lem2647278 (@lem2647288)). Qed.
Lemma lem2647291 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647292 : term109 = term110.
Proof. exact (@lem2647291 (NUMERAL 0) term32). Qed.
Lemma lem2647293 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647294 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647295 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647294 h1) (fun h1 : term110 = True => @lem2647293)). Qed.
Lemma lem2647296 : term110 = True.
Proof. exact (EQ_MP (@lem2647295) (@lem2647293)). Qed.
Lemma lem2647297 : term109 = True.
Proof. exact (TRANS (@lem2647292) (@lem2647296)). Qed.
Lemma lem2647298 : True = term109.
Proof. exact (SYM (@lem2647297)). Qed.
Lemma lem2647299 : term109.
Proof. exact (EQ_MP (@lem2647298) (@lem0)). Qed.
Lemma lem2647300 : term232 = term235.
Proof. exact (@lem2647289 (@lem2647299)). Qed.
Lemma lem2647302 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647303 : term117 = term118.
Proof. exact (@lem2647302 term32 term32). Qed.
Lemma lem2647304 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647305 : term120 = term32.
Proof. exact (EQ_MP (@lem2647304) (@lem940073)). Qed.
Lemma lem2647306 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647307 : term118 = term31.
Proof. exact (MK_COMB (@lem2647306) (@lem2647305)). Qed.
Lemma lem2647308 : term117 = term31.
Proof. exact (TRANS (@lem2647303) (@lem2647307)). Qed.
Lemma lem2647310 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647311 : term131 = term38.
Proof. exact (@lem2647310 term32). Qed.
Lemma lem2647312 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem2647313 : term236 = term230.
Proof. exact (MK_COMB (@lem2647312) (@lem2647311)). Qed.
Lemma lem2647314 : term235 = term109.
Proof. exact (MK_COMB (@lem2647313) (@lem2647308)). Qed.
Lemma lem2647316 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647317 : term109 = term110.
Proof. exact (@lem2647316 (NUMERAL 0) term32). Qed.
Lemma lem2647318 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647319 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647320 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647319 h1) (fun h1 : term110 = True => @lem2647318)). Qed.
Lemma lem2647321 : term110 = True.
Proof. exact (EQ_MP (@lem2647320) (@lem2647318)). Qed.
Lemma lem2647322 : term109 = True.
Proof. exact (TRANS (@lem2647317) (@lem2647321)). Qed.
Lemma lem2647323 : term235 = True.
Proof. exact (TRANS (@lem2647314) (@lem2647322)). Qed.
Lemma lem2647324 : term232 = True.
Proof. exact (TRANS (@lem2647300) (@lem2647323)). Qed.
Lemma lem2647325 : term109 = True.
Proof. exact (TRANS (@lem2647277) (@lem2647324)). Qed.
Lemma lem2647326 : term229 = True.
Proof. exact (TRANS (@lem2647268) (@lem2647325)). Qed.
Lemma lem2647327 : True = term229.
Proof. exact (SYM (@lem2647326)). Qed.
Lemma lem2647328 : term229.
Proof. exact (EQ_MP (@lem2647327) (@lem0)). Qed.
Lemma lem2647329 (m : int) (n : int) (h1 : term1115 m n) : term1179 m n.
Proof. exact (conj (@lem2647328) (@lem2647190 m n h1)). Qed.
Lemma lem2647331 (x : real) (y : real) : term238 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem2647332 (m : int) (n : int) : term1180 m n.
Proof. exact (@lem2647331 term31 (term739 m n)). Qed.
Lemma lem2647333 (m : int) (n : int) (h1 : term1115 m n) : term1181 m n.
Proof. exact (@lem2647332 m n (@lem2647329 m n h1)). Qed.
Lemma lem2647334 (m : int) (n : int) : (term1182 m n) = (term739 m n).
Proof. exact (@lem1982733 (term739 m n)). Qed.
Lemma lem2647335 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2647336 (m : int) (n : int) : (term1183 m n) = (term748 m n).
Proof. exact (MK_COMB (@lem2647335) (@lem2647334 m n)). Qed.
Lemma lem2647337 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2647338 (m : int) (n : int) : (term1181 m n) = (term749 m n).
Proof. exact (MK_COMB (@lem2647336 m n) (@lem2647337)). Qed.
Lemma lem2647339 (m : int) (n : int) (h1 : term1115 m n) : term749 m n.
Proof. exact (EQ_MP (@lem2647338 m n) (@lem2647333 m n h1)). Qed.
Lemma lem2647340 (m : int) (n : int) (h1 : term1115 m n) : term1184 m n.
Proof. exact (conj (@lem2647339 m n h1) (@lem2647265 m n h1)). Qed.
Lemma lem2647342 (x : real) (y : real) : term1134 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem2647343 (m : int) (n : int) : term1185 m n.
Proof. exact (@lem2647342 (term739 m n) (term25 m n)). Qed.
Lemma lem2647344 (m : int) (n : int) (h1 : term1115 m n) : term1186 m n.
Proof. exact (@lem2647343 m n (@lem2647340 m n h1)). Qed.
Lemma lem2647345 (m : int) (n : int) : (term1187 m n) = (term1188 m n).
Proof. exact (@lem1982753 (term94 m) (real_of_int m) (term154 n) (real_of_int n)). Qed.
Lemma lem2647346 (m : int) : (term283 m) = (term96 m).
Proof. exact (@lem1982713 term97 (real_of_int m)). Qed.
Lemma lem2647348 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647349 : term31 = term99.
Proof. exact (@lem2647348 term32). Qed.
Lemma lem2647351 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2647352 : term97 = term102.
Proof. exact (@lem2647351 term32). Qed.
Lemma lem2647353 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647354 : term103 = term104.
Proof. exact (MK_COMB (@lem2647353) (@lem2647352)). Qed.
Lemma lem2647355 : term105 = term106.
Proof. exact (MK_COMB (@lem2647354) (@lem2647349)). Qed.
Lemma lem2647356 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2647358 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647359 : term109 = term110.
Proof. exact (@lem2647358 (NUMERAL 0) term32). Qed.
Lemma lem2647360 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647361 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647362 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647361 h1) (fun h1 : term110 = True => @lem2647360)). Qed.
Lemma lem2647363 : term110 = True.
Proof. exact (EQ_MP (@lem2647362) (@lem2647360)). Qed.
Lemma lem2647364 : term109 = True.
Proof. exact (TRANS (@lem2647359) (@lem2647363)). Qed.
Lemma lem2647365 : True = term109.
Proof. exact (SYM (@lem2647364)). Qed.
Lemma lem2647366 : term109.
Proof. exact (EQ_MP (@lem2647365) (@lem0)). Qed.
Lemma lem2647367 : term112.
Proof. exact (@lem2647356 (@lem2647366)). Qed.
Lemma lem2647369 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647370 : term109 = term110.
Proof. exact (@lem2647369 (NUMERAL 0) term32). Qed.
Lemma lem2647371 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647372 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647373 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647372 h1) (fun h1 : term110 = True => @lem2647371)). Qed.
Lemma lem2647374 : term110 = True.
Proof. exact (EQ_MP (@lem2647373) (@lem2647371)). Qed.
Lemma lem2647375 : term109 = True.
Proof. exact (TRANS (@lem2647370) (@lem2647374)). Qed.
Lemma lem2647376 : True = term109.
Proof. exact (SYM (@lem2647375)). Qed.
Lemma lem2647377 : term109.
Proof. exact (EQ_MP (@lem2647376) (@lem0)). Qed.
Lemma lem2647378 : term113.
Proof. exact (@lem2647367 (@lem2647377)). Qed.
Lemma lem2647380 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647381 : term109 = term110.
Proof. exact (@lem2647380 (NUMERAL 0) term32). Qed.
Lemma lem2647382 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647383 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647384 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647383 h1) (fun h1 : term110 = True => @lem2647382)). Qed.
Lemma lem2647385 : term110 = True.
Proof. exact (EQ_MP (@lem2647384) (@lem2647382)). Qed.
Lemma lem2647386 : term109 = True.
Proof. exact (TRANS (@lem2647381) (@lem2647385)). Qed.
Lemma lem2647387 : True = term109.
Proof. exact (SYM (@lem2647386)). Qed.
Lemma lem2647388 : term109.
Proof. exact (EQ_MP (@lem2647387) (@lem0)). Qed.
Lemma lem2647389 : term114.
Proof. exact (@lem2647378 (@lem2647388)). Qed.
Lemma lem2647391 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647392 : term117 = term118.
Proof. exact (@lem2647391 term32 term32). Qed.
Lemma lem2647393 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647394 : term120 = term32.
Proof. exact (EQ_MP (@lem2647393) (@lem940073)). Qed.
Lemma lem2647395 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647396 : term118 = term31.
Proof. exact (MK_COMB (@lem2647395) (@lem2647394)). Qed.
Lemma lem2647397 : term117 = term31.
Proof. exact (TRANS (@lem2647392) (@lem2647396)). Qed.
Lemma lem2647399 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2647400 : term123 = term124.
Proof. exact (@lem2647399 term32 term32). Qed.
Lemma lem2647401 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647402 : term120 = term32.
Proof. exact (EQ_MP (@lem2647401) (@lem940073)). Qed.
Lemma lem2647403 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647404 : term118 = term31.
Proof. exact (MK_COMB (@lem2647403) (@lem2647402)). Qed.
Lemma lem2647405 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2647406 : term124 = term97.
Proof. exact (MK_COMB (@lem2647405) (@lem2647404)). Qed.
Lemma lem2647407 : term123 = term97.
Proof. exact (TRANS (@lem2647400) (@lem2647406)). Qed.
Lemma lem2647408 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647409 : term125 = term103.
Proof. exact (MK_COMB (@lem2647408) (@lem2647407)). Qed.
Lemma lem2647410 : term126 = term105.
Proof. exact (MK_COMB (@lem2647409) (@lem2647397)). Qed.
Lemma lem2647412 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2647413 : term105 = term38.
Proof. exact (@lem2647412 term32). Qed.
Lemma lem2647414 : term126 = term38.
Proof. exact (TRANS (@lem2647410) (@lem2647413)). Qed.
Lemma lem2647415 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647416 : term128 = term129.
Proof. exact (MK_COMB (@lem2647415) (@lem2647414)). Qed.
Lemma lem2647417 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2647418 : term130 = term131.
Proof. exact (MK_COMB (@lem2647416) (@lem2647417)). Qed.
Lemma lem2647420 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647421 : term131 = term38.
Proof. exact (@lem2647420 term32). Qed.
Lemma lem2647422 : term130 = term38.
Proof. exact (TRANS (@lem2647418) (@lem2647421)). Qed.
Lemma lem2647424 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647425 : term117 = term118.
Proof. exact (@lem2647424 term32 term32). Qed.
Lemma lem2647426 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647427 : term120 = term32.
Proof. exact (EQ_MP (@lem2647426) (@lem940073)). Qed.
Lemma lem2647428 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647429 : term118 = term31.
Proof. exact (MK_COMB (@lem2647428) (@lem2647427)). Qed.
Lemma lem2647430 : term117 = term31.
Proof. exact (TRANS (@lem2647425) (@lem2647429)). Qed.
Lemma lem2647431 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2647432 : term133 = term131.
Proof. exact (MK_COMB (@lem2647431) (@lem2647430)). Qed.
Lemma lem2647434 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647435 : term131 = term38.
Proof. exact (@lem2647434 term32). Qed.
Lemma lem2647436 : term133 = term38.
Proof. exact (TRANS (@lem2647432) (@lem2647435)). Qed.
Lemma lem2647437 : term38 = term133.
Proof. exact (SYM (@lem2647436)). Qed.
Lemma lem2647438 : term130 = term133.
Proof. exact (TRANS (@lem2647422) (@lem2647437)). Qed.
Lemma lem2647439 : term106 = term134.
Proof. exact (@lem2647389 (@lem2647438)). Qed.
Lemma lem2647440 : term105 = term134.
Proof. exact (TRANS (@lem2647355) (@lem2647439)). Qed.
Lemma lem2647442 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2647443 : term134 = term38.
Proof. exact (@lem2647442 term38). Qed.
Lemma lem2647444 : term105 = term38.
Proof. exact (TRANS (@lem2647440) (@lem2647443)). Qed.
Lemma lem2647445 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647446 : term136 = term129.
Proof. exact (MK_COMB (@lem2647445) (@lem2647444)). Qed.
Lemma lem2647447 (m : int) : (real_of_int m) = (real_of_int m).
Proof. exact (eq_refl (real_of_int m)). Qed.
Lemma lem2647448 (m : int) : (term96 m) = (term137 m).
Proof. exact (MK_COMB (@lem2647446) (@lem2647447 m)). Qed.
Lemma lem2647449 (m : int) : (term283 m) = (term137 m).
Proof. exact (TRANS (@lem2647346 m) (@lem2647448 m)). Qed.
Lemma lem2647450 (m : int) : (term137 m) = term38.
Proof. exact (@lem1982719 (real_of_int m)). Qed.
Lemma lem2647451 (m : int) : (term283 m) = term38.
Proof. exact (TRANS (@lem2647449 m) (@lem2647450 m)). Qed.
Lemma lem2647452 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647453 (m : int) : (term284 m) = term48.
Proof. exact (MK_COMB (@lem2647452) (@lem2647451 m)). Qed.
Lemma lem2647454 (n : int) : (term1137 n) = (term282 n).
Proof. exact (@lem1982759 (term94 n) (real_of_int n) term97). Qed.
Lemma lem2647455 (n : int) : (term283 n) = (term96 n).
Proof. exact (@lem1982713 term97 (real_of_int n)). Qed.
Lemma lem2647457 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647458 : term31 = term99.
Proof. exact (@lem2647457 term32). Qed.
Lemma lem2647460 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2647461 : term97 = term102.
Proof. exact (@lem2647460 term32). Qed.
Lemma lem2647462 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647463 : term103 = term104.
Proof. exact (MK_COMB (@lem2647462) (@lem2647461)). Qed.
Lemma lem2647464 : term105 = term106.
Proof. exact (MK_COMB (@lem2647463) (@lem2647458)). Qed.
Lemma lem2647465 : term107.
Proof. exact (@lem1981473 term97 term31 term31 term31 term38 term31). Qed.
Lemma lem2647467 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647468 : term109 = term110.
Proof. exact (@lem2647467 (NUMERAL 0) term32). Qed.
Lemma lem2647469 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647470 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647471 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647470 h1) (fun h1 : term110 = True => @lem2647469)). Qed.
Lemma lem2647472 : term110 = True.
Proof. exact (EQ_MP (@lem2647471) (@lem2647469)). Qed.
Lemma lem2647473 : term109 = True.
Proof. exact (TRANS (@lem2647468) (@lem2647472)). Qed.
Lemma lem2647474 : True = term109.
Proof. exact (SYM (@lem2647473)). Qed.
Lemma lem2647475 : term109.
Proof. exact (EQ_MP (@lem2647474) (@lem0)). Qed.
Lemma lem2647476 : term112.
Proof. exact (@lem2647465 (@lem2647475)). Qed.
Lemma lem2647478 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647479 : term109 = term110.
Proof. exact (@lem2647478 (NUMERAL 0) term32). Qed.
Lemma lem2647480 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647481 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647482 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647481 h1) (fun h1 : term110 = True => @lem2647480)). Qed.
Lemma lem2647483 : term110 = True.
Proof. exact (EQ_MP (@lem2647482) (@lem2647480)). Qed.
Lemma lem2647484 : term109 = True.
Proof. exact (TRANS (@lem2647479) (@lem2647483)). Qed.
Lemma lem2647485 : True = term109.
Proof. exact (SYM (@lem2647484)). Qed.
Lemma lem2647486 : term109.
Proof. exact (EQ_MP (@lem2647485) (@lem0)). Qed.
Lemma lem2647487 : term113.
Proof. exact (@lem2647476 (@lem2647486)). Qed.
Lemma lem2647489 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647490 : term109 = term110.
Proof. exact (@lem2647489 (NUMERAL 0) term32). Qed.
Lemma lem2647491 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647492 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647493 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647492 h1) (fun h1 : term110 = True => @lem2647491)). Qed.
Lemma lem2647494 : term110 = True.
Proof. exact (EQ_MP (@lem2647493) (@lem2647491)). Qed.
Lemma lem2647495 : term109 = True.
Proof. exact (TRANS (@lem2647490) (@lem2647494)). Qed.
Lemma lem2647496 : True = term109.
Proof. exact (SYM (@lem2647495)). Qed.
Lemma lem2647497 : term109.
Proof. exact (EQ_MP (@lem2647496) (@lem0)). Qed.
Lemma lem2647498 : term114.
Proof. exact (@lem2647487 (@lem2647497)). Qed.
Lemma lem2647500 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647501 : term117 = term118.
Proof. exact (@lem2647500 term32 term32). Qed.
Lemma lem2647502 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647503 : term120 = term32.
Proof. exact (EQ_MP (@lem2647502) (@lem940073)). Qed.
Lemma lem2647504 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647505 : term118 = term31.
Proof. exact (MK_COMB (@lem2647504) (@lem2647503)). Qed.
Lemma lem2647506 : term117 = term31.
Proof. exact (TRANS (@lem2647501) (@lem2647505)). Qed.
Lemma lem2647508 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2647509 : term123 = term124.
Proof. exact (@lem2647508 term32 term32). Qed.
Lemma lem2647510 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647511 : term120 = term32.
Proof. exact (EQ_MP (@lem2647510) (@lem940073)). Qed.
Lemma lem2647512 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647513 : term118 = term31.
Proof. exact (MK_COMB (@lem2647512) (@lem2647511)). Qed.
Lemma lem2647514 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2647515 : term124 = term97.
Proof. exact (MK_COMB (@lem2647514) (@lem2647513)). Qed.
Lemma lem2647516 : term123 = term97.
Proof. exact (TRANS (@lem2647509) (@lem2647515)). Qed.
Lemma lem2647517 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647518 : term125 = term103.
Proof. exact (MK_COMB (@lem2647517) (@lem2647516)). Qed.
Lemma lem2647519 : term126 = term105.
Proof. exact (MK_COMB (@lem2647518) (@lem2647506)). Qed.
Lemma lem2647521 (m : nat) : (term127 m) = term38.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem2647522 : term105 = term38.
Proof. exact (@lem2647521 term32). Qed.
Lemma lem2647523 : term126 = term38.
Proof. exact (TRANS (@lem2647519) (@lem2647522)). Qed.
Lemma lem2647524 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647525 : term128 = term129.
Proof. exact (MK_COMB (@lem2647524) (@lem2647523)). Qed.
Lemma lem2647526 : term31 = term31.
Proof. exact (eq_refl term31). Qed.
Lemma lem2647527 : term130 = term131.
Proof. exact (MK_COMB (@lem2647525) (@lem2647526)). Qed.
Lemma lem2647529 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647530 : term131 = term38.
Proof. exact (@lem2647529 term32). Qed.
Lemma lem2647531 : term130 = term38.
Proof. exact (TRANS (@lem2647527) (@lem2647530)). Qed.
Lemma lem2647533 (m : nat) (n : nat) : (term115 m n) = (term116 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem2647534 : term117 = term118.
Proof. exact (@lem2647533 term32 term32). Qed.
Lemma lem2647535 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647536 : term120 = term32.
Proof. exact (EQ_MP (@lem2647535) (@lem940073)). Qed.
Lemma lem2647537 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647538 : term118 = term31.
Proof. exact (MK_COMB (@lem2647537) (@lem2647536)). Qed.
Lemma lem2647539 : term117 = term31.
Proof. exact (TRANS (@lem2647534) (@lem2647538)). Qed.
Lemma lem2647540 : term129 = term129.
Proof. exact (eq_refl term129). Qed.
Lemma lem2647541 : term133 = term131.
Proof. exact (MK_COMB (@lem2647540) (@lem2647539)). Qed.
Lemma lem2647543 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647544 : term131 = term38.
Proof. exact (@lem2647543 term32). Qed.
Lemma lem2647545 : term133 = term38.
Proof. exact (TRANS (@lem2647541) (@lem2647544)). Qed.
Lemma lem2647546 : term38 = term133.
Proof. exact (SYM (@lem2647545)). Qed.
Lemma lem2647547 : term130 = term133.
Proof. exact (TRANS (@lem2647531) (@lem2647546)). Qed.
Lemma lem2647548 : term106 = term134.
Proof. exact (@lem2647498 (@lem2647547)). Qed.
Lemma lem2647549 : term105 = term134.
Proof. exact (TRANS (@lem2647464) (@lem2647548)). Qed.
Lemma lem2647551 (x : real) : (term135 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem2647552 : term134 = term38.
Proof. exact (@lem2647551 term38). Qed.
Lemma lem2647553 : term105 = term38.
Proof. exact (TRANS (@lem2647549) (@lem2647552)). Qed.
Lemma lem2647554 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem2647555 : term136 = term129.
Proof. exact (MK_COMB (@lem2647554) (@lem2647553)). Qed.
Lemma lem2647556 (n : int) : (real_of_int n) = (real_of_int n).
Proof. exact (eq_refl (real_of_int n)). Qed.
Lemma lem2647557 (n : int) : (term96 n) = (term137 n).
Proof. exact (MK_COMB (@lem2647555) (@lem2647556 n)). Qed.
Lemma lem2647558 (n : int) : (term283 n) = (term137 n).
Proof. exact (TRANS (@lem2647455 n) (@lem2647557 n)). Qed.
Lemma lem2647559 (n : int) : (term137 n) = term38.
Proof. exact (@lem1982719 (real_of_int n)). Qed.
Lemma lem2647560 (n : int) : (term283 n) = term38.
Proof. exact (TRANS (@lem2647558 n) (@lem2647559 n)). Qed.
Lemma lem2647561 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem2647562 (n : int) : (term284 n) = term48.
Proof. exact (MK_COMB (@lem2647561) (@lem2647560 n)). Qed.
Lemma lem2647563 : term97 = term97.
Proof. exact (eq_refl term97). Qed.
Lemma lem2647564 (n : int) : (term282 n) = term254.
Proof. exact (MK_COMB (@lem2647562 n) (@lem2647563)). Qed.
Lemma lem2647565 (n : int) : (term1137 n) = term254.
Proof. exact (TRANS (@lem2647454 n) (@lem2647564 n)). Qed.
Lemma lem2647566 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2647567 (n : int) : (term1137 n) = term97.
Proof. exact (TRANS (@lem2647565 n) (@lem2647566)). Qed.
Lemma lem2647568 (m : int) (n : int) : (term1188 m n) = term254.
Proof. exact (MK_COMB (@lem2647453 m) (@lem2647567 n)). Qed.
Lemma lem2647569 (m : int) (n : int) : (term1187 m n) = term254.
Proof. exact (TRANS (@lem2647345 m n) (@lem2647568 m n)). Qed.
Lemma lem2647570 : term254 = term97.
Proof. exact (@lem1982721 term97). Qed.
Lemma lem2647571 (m : int) (n : int) : (term1187 m n) = term97.
Proof. exact (TRANS (@lem2647569 m n) (@lem2647570)). Qed.
Lemma lem2647572 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem2647573 (m : int) (n : int) : (term1189 m n) = term256.
Proof. exact (MK_COMB (@lem2647572) (@lem2647571 m n)). Qed.
Lemma lem2647574 : term38 = term38.
Proof. exact (eq_refl term38). Qed.
Lemma lem2647575 (m : int) (n : int) : (term1186 m n) = term257.
Proof. exact (MK_COMB (@lem2647573 m n) (@lem2647574)). Qed.
Lemma lem2647576 (m : int) (n : int) (h1 : term1115 m n) : term257.
Proof. exact (EQ_MP (@lem2647575 m n) (@lem2647344 m n h1)). Qed.
Lemma lem2647578 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem2647579 : term257 = term258.
Proof. exact (@lem2647578 term38 term97). Qed.
Lemma lem2647581 (x : nat) : (term100 x) = (term101 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem2647582 : term97 = term102.
Proof. exact (@lem2647581 term32). Qed.
Lemma lem2647584 (x : nat) : (real_of_num x) = (term98 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem2647585 : term38 = term134.
Proof. exact (@lem2647584 (NUMERAL 0)). Qed.
Lemma lem2647586 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2647587 : term259 = term260.
Proof. exact (MK_COMB (@lem2647586) (@lem2647585)). Qed.
Lemma lem2647588 : term258 = term261.
Proof. exact (MK_COMB (@lem2647587) (@lem2647582)). Qed.
Lemma lem2647589 : term262.
Proof. exact (@lem1980026 term38 term31 term97 term31). Qed.
Lemma lem2647591 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647592 : term109 = term110.
Proof. exact (@lem2647591 (NUMERAL 0) term32). Qed.
Lemma lem2647593 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647594 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647595 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647594 h1) (fun h1 : term110 = True => @lem2647593)). Qed.
Lemma lem2647596 : term110 = True.
Proof. exact (EQ_MP (@lem2647595) (@lem2647593)). Qed.
Lemma lem2647597 : term109 = True.
Proof. exact (TRANS (@lem2647592) (@lem2647596)). Qed.
Lemma lem2647598 : True = term109.
Proof. exact (SYM (@lem2647597)). Qed.
Lemma lem2647599 : term109.
Proof. exact (EQ_MP (@lem2647598) (@lem0)). Qed.
Lemma lem2647600 : term263.
Proof. exact (@lem2647589 (@lem2647599)). Qed.
Lemma lem2647602 (m : nat) (n : nat) : (term108 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem2647603 : term109 = term110.
Proof. exact (@lem2647602 (NUMERAL 0) term32). Qed.
Lemma lem2647604 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647605 (h1 : term111 = (BIT1 0)) : term110 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem2647606 : (term111 = (BIT1 0)) = (term110 = True).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647605 h1) (fun h1 : term110 = True => @lem2647604)). Qed.
Lemma lem2647607 : term110 = True.
Proof. exact (EQ_MP (@lem2647606) (@lem2647604)). Qed.
Lemma lem2647608 : term109 = True.
Proof. exact (TRANS (@lem2647603) (@lem2647607)). Qed.
Lemma lem2647609 : True = term109.
Proof. exact (SYM (@lem2647608)). Qed.
Lemma lem2647610 : term109.
Proof. exact (EQ_MP (@lem2647609) (@lem0)). Qed.
Lemma lem2647611 : term261 = term264.
Proof. exact (@lem2647600 (@lem2647610)). Qed.
Lemma lem2647613 (m : nat) (n : nat) : (term121 m n) = (term122 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem2647614 : term123 = term124.
Proof. exact (@lem2647613 term32 term32). Qed.
Lemma lem2647615 : (term119 = (BIT1 0)) = (term120 = term32).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem2647616 : term120 = term32.
Proof. exact (EQ_MP (@lem2647615) (@lem940073)). Qed.
Lemma lem2647617 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem2647618 : term118 = term31.
Proof. exact (MK_COMB (@lem2647617) (@lem2647616)). Qed.
Lemma lem2647619 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem2647620 : term124 = term97.
Proof. exact (MK_COMB (@lem2647619) (@lem2647618)). Qed.
Lemma lem2647621 : term123 = term97.
Proof. exact (TRANS (@lem2647614) (@lem2647620)). Qed.
Lemma lem2647623 (x : nat) : (term132 x) = term38.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem2647624 : term131 = term38.
Proof. exact (@lem2647623 term32). Qed.
Lemma lem2647625 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem2647626 : term265 = term259.
Proof. exact (MK_COMB (@lem2647625) (@lem2647624)). Qed.
Lemma lem2647627 : term264 = term258.
Proof. exact (MK_COMB (@lem2647626) (@lem2647621)). Qed.
Lemma lem2647629 (m : nat) (n : nat) : (term266 m n) = (term267 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem2647630 : term258 = term268.
Proof. exact (@lem2647629 (NUMERAL 0) term32). Qed.
Lemma lem2647631 : term111 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem2647632 (h1 : term111 = (BIT1 0)) : (term32 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem2647633 : (term111 = (BIT1 0)) = ((term32 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term111 = (BIT1 0) => @lem2647632 h1) (fun h1 : (term32 = (NUMERAL 0)) = False => @lem2647631)). Qed.
Lemma lem2647634 : (term32 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem2647633) (@lem2647631)). Qed.
Lemma lem2647635 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem2647636 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem2647637 : term269 = (and True).
Proof. exact (MK_COMB (@lem2647636) (@lem2647635)). Qed.
Lemma lem2647638 : term268 = (True /\ False).
Proof. exact (MK_COMB (@lem2647637) (@lem2647634)). Qed.
Lemma lem2647640 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem2647641 : term268 = False.
Proof. exact (TRANS (@lem2647638) (@lem2647640)). Qed.
Lemma lem2647642 : term258 = False.
Proof. exact (TRANS (@lem2647630) (@lem2647641)). Qed.
Lemma lem2647643 : term264 = False.
Proof. exact (TRANS (@lem2647627) (@lem2647642)). Qed.
Lemma lem2647644 : term261 = False.
Proof. exact (TRANS (@lem2647611) (@lem2647643)). Qed.
Lemma lem2647645 : term258 = False.
Proof. exact (TRANS (@lem2647588) (@lem2647644)). Qed.
Lemma lem2647646 : term257 = False.
Proof. exact (TRANS (@lem2647579) (@lem2647645)). Qed.
Lemma lem2647647 (m : int) (n : int) (h1 : term1115 m n) : False.
Proof. exact (EQ_MP (@lem2647646) (@lem2647576 m n h1)). Qed.
Lemma lem2647648 (m : int) (n : int) (h1 : term1117 m n) : False.
Proof. exact (or_elim (@lem2646709 m n h1) (fun h0 : term1113 m n => @lem2647178 m n h0) (fun h0 : term1115 m n => @lem2647647 m n h0)). Qed.
Lemma lem2647649 (m : int) (n : int) (h1 : term1120 m n) : False.
Proof. exact (or_elim (@lem2645768 m n h1) (fun h0 : term1094 m n => @lem2646708 m n h0) (fun h0 : term1117 m n => @lem2647648 m n h0)). Qed.
Lemma lem2647650 (m : int) (n : int) (h1 : term1122 m n) : False.
Proof. exact (or_elim (@lem2644345 m n h1) (fun h0 : term1071 m n => @lem2645767 m n h0) (fun h0 : term1120 m n => @lem2647649 m n h0)). Qed.
Lemma lem2647651 (m : int) (n : int) (h1 : term1124 m n) : False.
Proof. exact (or_elim (@lem2641038 m n h1) (fun h0 : term1022 m n => @lem2644344 m n h0) (fun h0 : term1122 m n => @lem2647650 m n h0)). Qed.
Lemma lem2647652 (m : int) (n : int) (h1 : term1126 m n) : False.
Proof. exact (or_elim (@lem2638703 m n h1) (fun h0 : term920 m n => @lem2641037 m n h0) (fun h0 : term1124 m n => @lem2647651 m n h0)). Qed.
Lemma lem2647653 (m : int) (n : int) (h1 : term1128 m n) : False.
Proof. exact (or_elim (@lem2633104 m n h1) (fun h0 : term886 m n => @lem2638702 m n h0) (fun h0 : term1126 m n => @lem2647652 m n h0)). Qed.
Lemma lem2647654 (n : int) (m : int) (h1 : term680 n m) : term680 n m.
Proof. exact (h1). Qed.
Lemma lem2647655 (n : int) (m : int) (h1 : term680 n m) : term1128 m n.
Proof. exact (EQ_MP (@lem2633103 m n) (@lem2647654 n m h1)). Qed.
Lemma lem2647656 (n : int) (m : int) (h1 : term680 n m) : (term1128 m n) = False.
Proof. exact (prop_ext (fun h2 : term1128 m n => @lem2647653 m n h2) (fun h2 : False => @lem2647655 n m h1)). Qed.
Lemma lem2647657 (n : int) (m : int) (h1 : term680 n m) : False.
Proof. exact (EQ_MP (@lem2647656 n m h1) (@lem2647655 n m h1)). Qed.
Lemma lem2647658 (m : int) (h1 : term682 m) : term682 m.
Proof. exact (h1). Qed.
Lemma lem2647659 (m : int) (h1 : term682 m) : False.
Proof. exact (ex_elim (@lem2647658 m h1) (fun n : int => fun h0 : term681 m n => @lem2647657 n m h0)). Qed.
Lemma lem2647660 (h1 : term684) : term684.
Proof. exact (h1). Qed.
Lemma lem2647661 (h1 : term684) : False.
Proof. exact (ex_elim (@lem2647660 h1) (fun m : int => fun h0 : term683 m => @lem2647659 m h0)). Qed.
Lemma lem2647662 (h1 : term407) : term407.
Proof. exact (h1). Qed.
Lemma lem2647663 (h1 : term407) : term684.
Proof. exact (EQ_MP (@lem2631005) (@lem2647662 h1)). Qed.
Lemma lem2647664 (h1 : term407) : term684 = False.
Proof. exact (prop_ext (fun h2 : term684 => @lem2647661 h2) (fun h2 : False => @lem2647663 h1)). Qed.
Lemma lem2647665 (h1 : term407) : False.
Proof. exact (EQ_MP (@lem2647664 h1) (@lem2647663 h1)). Qed.
Lemma lem2647666 : term1194.
Proof. exact (fun h0 : term407 => @lem2647665 h0). Qed.
Lemma lem2647667 : term1195.
Proof. exact (@lem1386578 term1196). Qed.
Lemma lem2647670 : term1196.
Proof. exact (@lem2647667 (@lem2647666)). Qed.
Lemma lem2647671 : term406 = term358.
Proof. exact (SYM (@lem2629030)). Qed.
Lemma lem2647672 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem2647673 : term1196 = term322.
Proof. exact (MK_COMB (@lem2647672) (@lem2647671)). Qed.
Lemma lem2647674 : term322.
Proof. exact (EQ_MP (@lem2647673) (@lem2647670)). Qed.
Lemma lem2647675 : term321.
Proof. exact (EQ_MP (@lem2628473) (@lem2647674)). Qed.
Lemma lem2647676 : term321 = (term321 = True).
Proof. exact (@lem7 term321). Qed.
Lemma lem2647677 : term321 = True.
Proof. exact (EQ_MP (@lem2647676) (@lem2647675)). Qed.
Lemma lem2647678 : True = term321.
Proof. exact (SYM (@lem2647677)). Qed.
Lemma lem2647679 : term321.
Proof. exact (EQ_MP (@lem2647678) (@lem0)). Qed.
Lemma lem2647680 : term312.
Proof. exact (EQ_MP (@lem2628472) (@lem2647679)). Qed.
Lemma lem2647681 : term311.
Proof. exact (EQ_MP (@lem2628413) (@lem2647680)). Qed.
