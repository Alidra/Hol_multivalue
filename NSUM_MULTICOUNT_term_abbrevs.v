Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term24 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := ((x1 = x0) /\ (x0 = x2)) -> x1 = x2.
Definition term66 (a0 : Type') (x0 : nat) := (fun y0 : nat => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@nsum a0 y1 (fun y2 : a0 => y0)) = (Nat.mul (@CARD a0 y1) y0)) x0.
Definition term32 (a0 : Type') := (forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) -> forall y0 : a0, forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1.
Definition term42 (a0 : Type') (x0 : nat) := fun y0 : a0 => x0.
Definition term25 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := (x0 = x1) /\ (x1 = x2).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) (x3 : a1 -> nat) := (forall y0 : type1413 a0 a1, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y1) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y0 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y1 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y0 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x2) /\ (x1 y0 y2)) y2)))) = (@nsum a1 x2 (fun y0 : a1 => x3 y0)).
Definition term53 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0)).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3).
Definition term65 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1) := @eq nat (@CARD a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1 x2)) y1))).
Definition term81 (a0 : Type') (a1 : Type') := forall y0 : type1413 a0 a1, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, forall y3 : nat, ((@FINITE a0 y1) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y0 y6 y4)) y6))) = y3))) -> (@nsum a0 y1 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y0 y4 y6)) y6)))) = (Nat.mul y3 (@CARD a1 y2)).
Definition term80 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, forall y2 : nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y1) /\ (forall y3 : a1, (@IN a1 y3 y1) -> (@CARD a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (x0 y5 y3)) y5))) = y2))) -> (@nsum a0 y0 (fun y3 : a0 => @CARD a1 (@GSPEC a1 (fun y4 : a1 => exists y5 : a1, @SETSPEC a1 y4 ((@IN a1 y5 y1) /\ (x0 y3 y5)) y5)))) = (Nat.mul y2 (@CARD a1 y1)).
Definition term14 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y0) /\ (y1 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y0 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y1 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : a1 -> Prop, forall y2 : a1 -> nat, ((@FINITE a0 x0) /\ ((@FINITE a1 y1) /\ (forall y3 : a1, (@IN a1 y3 y1) -> (@CARD a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 x0) /\ (y0 y5 y3)) y5))) = (y2 y3)))) -> (@nsum a0 x0 (fun y3 : a0 => @CARD a1 (@GSPEC a1 (fun y4 : a1 => exists y5 : a1, @SETSPEC a1 y4 ((@IN a1 y5 y1) /\ (y0 y3 y5)) y5)))) = (@nsum a1 y1 (fun y3 : a1 => y2 y3)).
Definition term2 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, forall y2 : a1 -> nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y1) /\ (forall y3 : a1, (@IN a1 y3 y1) -> (@CARD a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (x0 y5 y3)) y5))) = (y2 y3)))) -> (@nsum a0 y0 (fun y3 : a0 => @CARD a1 (@GSPEC a1 (fun y4 : a1 => exists y5 : a1, @SETSPEC a1 y4 ((@IN a1 y5 y1) /\ (x0 y3 y5)) y5)))) = (@nsum a1 y1 (fun y3 : a1 => y2 y3)).
Definition term0 (a0 : Type') (a1 : Type') := forall y0 : type1413 a0 a1, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y1) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y0 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y1 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y0 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4)).
Definition term58 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := @nsum a0 x0 (fun y0 : a0 => (fun y1 : a0 => x1) y0).
Definition term64 (a0 : Type') := forall y0 : a0, True.
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y0) /\ (y1 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y0 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y1 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4))) x0.
Definition term1 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y1) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y0 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y1 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y0 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4))) x0.
Definition term76 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a1 -> Prop) := fun y0 : nat => ((@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x3) /\ (x1 y1 y3)) y3)))) = y0) /\ (y0 = (Nat.mul x2 (@CARD a1 x3))).
Definition term22 (a0 : Type') (x0 : a0) (x1 : a0) := forall y0 : a0, ((x1 = x0) /\ (x0 = y0)) -> x1 = y0.
Definition term19 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) x0.
Definition term15 (a0 : Type') (a1 : Type') := (forall y0 : type1413 a0 a1, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y1) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y0 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y1 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y0 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4))) -> forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : a1 -> Prop, forall y3 : a1 -> nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y2) /\ (forall y4 : a1, (@IN a1 y4 y2) -> (@CARD a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y0) /\ (y1 y6 y4)) y6))) = (y3 y4)))) -> (@nsum a0 y0 (fun y4 : a0 => @CARD a1 (@GSPEC a1 (fun y5 : a1 => exists y6 : a1, @SETSPEC a1 y5 ((@IN a1 y6 y2) /\ (y1 y4 y6)) y6)))) = (@nsum a1 y2 (fun y4 : a1 => y3 y4)).
Definition term10 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : type1413 a0 a1) := @nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x1) /\ (x2 y0 y2)) y2))).
Definition term33 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1) x0.
Definition term77 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a1 -> Prop) := ((@FINITE a0 x0) /\ ((@FINITE a1 x3) /\ (forall y0 : a1, (@IN a1 y0 x3) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2 y0)) y2))) = x2))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x3) /\ (x1 y0 y2)) y2)))) = (Nat.mul x2 (@CARD a1 x3)).
Definition term50 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a1 => (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3.
Definition term37 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3.
Definition term23 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := (fun y0 : a0 => ((x1 = x0) /\ (x0 = y0)) -> x1 = y0) x2.
Definition term49 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a1 => (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0).
Definition term28 (a0 : Type') (x0 : a0) (x1 : a0) := fun y0 : a0 => (x0 = y0) /\ (y0 = x1).
Definition term67 (a0 : Type') (x0 : nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@nsum a0 y0 (fun y1 : a0 => x0)) = (Nat.mul (@CARD a0 y0) x0).
Definition term62 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : a1) := (fun y0 : a1 => (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3) x4.
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : a1 -> nat, ((@FINITE a0 x0) /\ ((@FINITE a1 y0) /\ (forall y2 : a1, (@IN a1 y2 y0) -> (@CARD a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 x0) /\ (x1 y4 y2)) y4))) = (y1 y2)))) -> (@nsum a0 x0 (fun y2 : a0 => @CARD a1 (@GSPEC a1 (fun y3 : a1 => exists y4 : a1, @SETSPEC a1 y3 ((@IN a1 y4 y0) /\ (x1 y2 y4)) y4)))) = (@nsum a1 y0 (fun y2 : a1 => y1 y2))) x2.
Definition term54 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@FINITE a0 x1) /\ ((@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0))).
Definition term35 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@FINITE a0 x1) /\ ((@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3)).
Definition term9 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a1 -> nat) := (@FINITE a0 x1) /\ ((@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = (x3 y0))).
Definition term52 (a0 : Type') (x0 : a0 -> Prop) := and (@FINITE a0 x0).
Definition term68 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@nsum a0 y0 (fun y1 : a0 => x0)) = (Nat.mul (@CARD a0 y0) x0)) x1.
Definition term30 (a0 : Type') (x0 : a0) := forall y0 : a0, (exists y1 : a0, (x0 = y1) /\ (y1 = y0)) -> x0 = y0.
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) (x3 : a1 -> nat) := (fun y0 : a1 -> nat => ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y1 : a1, (@IN a1 y1 x2) -> (@CARD a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3 y1)) y3))) = (y0 y1)))) -> (@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x2) /\ (x1 y1 y3)) y3)))) = (@nsum a1 x2 (fun y1 : a1 => y0 y1))) x3.
Definition term41 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) (x3 : nat) := ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y0 : a1, (@IN a1 y0 x2) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0)))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x2) /\ (x1 y0 y2)) y2)))) = (@nsum a1 x2 (fun y0 : a1 => (fun y1 : a1 => x3) y0)).
Definition term71 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq nat (@nsum a0 x0 (fun y0 : a0 => x1)).
Definition term39 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a1 -> Prop) := (exists y0 : nat, ((@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x3) /\ (x1 y1 y3)) y3)))) = y0) /\ (y0 = (Nat.mul x2 (@CARD a1 x3)))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x3) /\ (x1 y0 y2)) y2)))) = (Nat.mul x2 (@CARD a1 x3)).
Definition term11 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @nsum a0 x0 (fun y0 : a0 => x1 y0).
Definition term34 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => (exists y1 : a0, (x0 = y1) /\ (y1 = y0)) -> x0 = y0) x1.
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : a1 -> Prop, forall y2 : a1 -> nat, ((@FINITE a0 x0) /\ ((@FINITE a1 y1) /\ (forall y3 : a1, (@IN a1 y3 y1) -> (@CARD a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 x0) /\ (y0 y5 y3)) y5))) = (y2 y3)))) -> (@nsum a0 x0 (fun y3 : a0 => @CARD a1 (@GSPEC a1 (fun y4 : a1 => exists y5 : a1, @SETSPEC a1 y4 ((@IN a1 y5 y1) /\ (y0 y3 y5)) y5)))) = (@nsum a1 y1 (fun y3 : a1 => y2 y3))) x1.
Definition term3 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, forall y2 : a1 -> nat, ((@FINITE a0 y0) /\ ((@FINITE a1 y1) /\ (forall y3 : a1, (@IN a1 y3 y1) -> (@CARD a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (x0 y5 y3)) y5))) = (y2 y3)))) -> (@nsum a0 y0 (fun y3 : a0 => @CARD a1 (@GSPEC a1 (fun y4 : a1 => exists y5 : a1, @SETSPEC a1 y4 ((@IN a1 y5 y1) /\ (x0 y3 y5)) y5)))) = (@nsum a1 y1 (fun y3 : a1 => y2 y3))) x1.
Definition term21 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => forall y1 : a0, ((x0 = y0) /\ (y0 = y1)) -> x0 = y1) x1.
Definition term27 (a0 : Type') (x0 : a0) (x1 : a0) := exists y0 : a0, (x0 = y0) /\ (y0 = x1).
Definition term43 (a0 : Type') (x0 : nat) (x1 : a0) := (fun y0 : a0 => x0) x1.
Definition term63 (a0 : Type') := fun y0 : a0 => True.
Definition term40 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) := Nat.mul x0 (@CARD a0 x1).
Definition term29 (a0 : Type') (x0 : a0) (x1 : a0) := (exists y0 : a0, (x0 = y0) /\ (y0 = x1)) -> x0 = x1.
Definition term72 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq nat (Nat.mul (@CARD a0 x0) x1).
Definition term18 (a0 : Type') := forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2.
Definition term74 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a1 -> Prop) := ((@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x3) /\ (x1 y0 y2)) y2)))) = (@nsum a1 x3 (fun y0 : a1 => x2))) /\ ((@nsum a1 x3 (fun y0 : a1 => x2)) = (Nat.mul x2 (@CARD a1 x3))).
Definition term51 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0).
Definition term69 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) -> (@nsum a0 x0 (fun y0 : a0 => x1)) = (Nat.mul (@CARD a0 x0) x1).
Definition term26 (a0 : Type') (x0 : a0) (x1 : a0) := (forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) -> x0 = x1.
Definition term38 (x0 : nat) (x1 : nat) := (exists y0 : nat, (x0 = y0) /\ (y0 = x1)) -> x0 = x1.
Definition term46 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp (@IN a0 x0 x1).
Definition term75 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a1 -> Prop) := exists y0 : nat, ((@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x3) /\ (x1 y1 y3)) y3)))) = y0) /\ (y0 = (Nat.mul x2 (@CARD a1 x3))).
Definition term70 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := Nat.mul (@CARD a0 x0) x1.
Definition term79 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := forall y0 : a1 -> Prop, forall y1 : nat, ((@FINITE a0 x0) /\ ((@FINITE a1 y0) /\ (forall y2 : a1, (@IN a1 y2 y0) -> (@CARD a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 x0) /\ (x1 y4 y2)) y4))) = y1))) -> (@nsum a0 x0 (fun y2 : a0 => @CARD a1 (@GSPEC a1 (fun y3 : a1 => exists y4 : a1, @SETSPEC a1 y3 ((@IN a1 y4 y0) /\ (x1 y2 y4)) y4)))) = (Nat.mul y1 (@CARD a1 y0)).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := forall y0 : a1 -> Prop, forall y1 : a1 -> nat, ((@FINITE a0 x0) /\ ((@FINITE a1 y0) /\ (forall y2 : a1, (@IN a1 y2 y0) -> (@CARD a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 x0) /\ (x1 y4 y2)) y4))) = (y1 y2)))) -> (@nsum a0 x0 (fun y2 : a0 => @CARD a1 (@GSPEC a1 (fun y3 : a1 => exists y4 : a1, @SETSPEC a1 y3 ((@IN a1 y4 y0) /\ (x1 y2 y4)) y4)))) = (@nsum a1 y0 (fun y2 : a1 => y1 y2)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) (x3 : a1 -> nat) := ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y0 : a1, (@IN a1 y0 x2) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2 y0)) y2))) = (x3 y0)))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x2) /\ (x1 y0 y2)) y2)))) = (@nsum a1 x2 (fun y0 : a1 => x3 y0)).
Definition term73 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) := @eq nat (Nat.mul x0 (@CARD a0 x1)).
Definition term31 (a0 : Type') := forall y0 : a0, forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1.
Definition term20 (a0 : Type') (x0 : a0) := forall y0 : a0, forall y1 : a0, ((x0 = y0) /\ (y0 = y1)) -> x0 = y1.
Definition term57 (a0 : Type') (x0 : nat) := fun y0 : a0 => (fun y1 : a0 => x0) y0.
Definition term47 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : a1) := (@IN a1 x4 x0) -> (@CARD a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1 x4)) y1))) = ((fun y0 : a1 => x3) x4).
Definition term59 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := @nsum a0 x0 (fun y0 : a0 => x1).
Definition term48 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a1) (x4 : nat) := (@IN a1 x3 x0) -> (@CARD a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1 x3)) y1))) = x4.
Definition term56 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp ((@FINITE a0 x1) /\ ((@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = x3))).
Definition term55 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp ((@FINITE a0 x1) /\ ((@FINITE a1 x0) /\ (forall y0 : a1, (@IN a1 y0 x0) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (x2 y2 y0)) y2))) = ((fun y1 : a1 => x3) y0)))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) := forall y0 : a1 -> nat, ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y1 : a1, (@IN a1 y1 x2) -> (@CARD a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3 y1)) y3))) = (y0 y1)))) -> (@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x2) /\ (x1 y1 y3)) y3)))) = (@nsum a1 x2 (fun y1 : a1 => y0 y1)).
Definition term78 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) := forall y0 : nat, ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y1 : a1, (@IN a1 y1 x2) -> (@CARD a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3 y1)) y3))) = y0))) -> (@nsum a0 x0 (fun y1 : a0 => @CARD a1 (@GSPEC a1 (fun y2 : a1 => exists y3 : a1, @SETSPEC a1 y2 ((@IN a1 y3 x2) /\ (x1 y1 y3)) y3)))) = (Nat.mul y0 (@CARD a1 x2)).
Definition term61 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1 -> Prop) (x3 : nat) := ((@FINITE a0 x0) /\ ((@FINITE a1 x2) /\ (forall y0 : a1, (@IN a1 y0 x2) -> (@CARD a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2 y0)) y2))) = x3))) -> (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x2) /\ (x1 y0 y2)) y2)))) = (@nsum a1 x2 (fun y0 : a1 => x3)).
Definition term45 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a1) := @CARD a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1 x2)) y1)).
Definition term60 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : type1413 a0 a1) := @eq nat (@nsum a0 x0 (fun y0 : a0 => @CARD a1 (@GSPEC a1 (fun y1 : a1 => exists y2 : a1, @SETSPEC a1 y1 ((@IN a1 y2 x1) /\ (x2 y0 y2)) y2)))).
