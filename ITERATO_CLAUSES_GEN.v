Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ITERATO_CLAUSES_GEN_term_abbrevs.
Require Import COND_SWAP_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXCLUDED_MIDDLE_spec.
Require Import FINITE_INSERT_spec.
Require Import FINITE_SUBSET_spec.
Require Import IN_DIFF_spec.
Require Import IN_INSERT_spec.
Require Import IN_SING_spec.
Require Import ITERATO_SUPPORT_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import NOT_EXISTS_THM_spec.
Require Import NOT_IN_EMPTY_spec.
Require Import SELECT_UNIQUE_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm11004_spec.
Require Import thm11005_spec.
Require Import thm12653_spec.
Require Import thm13473_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1812_spec.
Require Import thm1813_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm1831_spec.
Require Import thm1832_spec.
Require Import thm1833_spec.
Require Import thm1834_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1844_spec.
Require Import thm1845_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm19732_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21749_spec.
Require Import thm21751_spec.
Require Import thm21760_spec.
Require Import thm21762_spec.
Require Import thm21773_spec.
Require Import thm21774_spec.
Require Import thm21780_spec.
Require Import thm32_spec.
Require Import thm3211609_spec.
Require Import thm3211610_spec.
Require Import thm3211640_spec.
Require Import thm3211641_spec.
Require Import thm3211683_spec.
Require Import thm3211684_spec.
Require Import thm3211692_spec.
Require Import thm3211693_spec.
Require Import thm3211701_spec.
Require Import thm3211702_spec.
Require Import thm3211729_spec.
Require Import thm3211730_spec.
Require Import thm3211750_spec.
Require Import thm3211751_spec.
Require Import thm3211756_spec.
Require Import thm3211757_spec.
Require Import thm3399706_spec.
Require Import thm3399757_spec.
Require Import thm4211_spec.
Require Import thm51_spec.
Require Import thm57691_spec.
Require Import thm57692_spec.
Require Import thm57694_spec.
Require Import thm57695_spec.
Require Import thm6401305_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm82_spec.
Lemma lem6449479 {K : Type'} (j : K) (i : K) : term0 K j i.
Proof. exact (@lem9784 (j = i)). Qed.
Lemma lem6449480 {K : Type'} (j : K) (i : K) : (term0 K j i) = (term1 K j i).
Proof. exact (eq_refl (term0 K j i)). Qed.
Lemma lem6449481 {K : Type'} (j : K) (i : K) : term1 K j i.
Proof. exact (EQ_MP (@lem6449480 K j i) (@lem6449479 K j i)). Qed.
Lemma lem6449483 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : term2 K j i.
Proof. exact (h1). Qed.
Lemma lem6449484 {A : Type'} (h1 : term3 A) : term3 A.
Proof. exact (h1). Qed.
Lemma lem6449485 {A : Type'} (P : A -> Prop) (h1 : term3 A) : term4 A P.
Proof. exact (@lem6449484 A h1 P). Qed.
Lemma lem6449486 {A : Type'} (P : A -> Prop) : (term4 A P) = (term5 A P).
Proof. exact (eq_refl (term4 A P)). Qed.
Lemma lem6449487 {A : Type'} (P : A -> Prop) (h1 : term3 A) : term5 A P.
Proof. exact (EQ_MP (@lem6449486 A P) (@lem6449485 A P h1)). Qed.
Lemma lem6449488 {A : Type'} (P : A -> Prop) (x : A) (h1 : term3 A) : term6 A P x.
Proof. exact (@lem6449487 A P h1 x). Qed.
Lemma lem6449489 {A : Type'} (P : A -> Prop) (x : A) : (term6 A P x) = (term7 A P x).
Proof. exact (eq_refl (term6 A P x)). Qed.
Lemma lem6449490 {A : Type'} (P : A -> Prop) (x : A) (h1 : term3 A) : term7 A P x.
Proof. exact (EQ_MP (@lem6449489 A P x) (@lem6449488 A P x h1)). Qed.
Lemma lem6449491 {A : Type'} (P : A -> Prop) (x : A) (h1 : term8 A P x) : term8 A P x.
Proof. exact (h1). Qed.
Lemma lem6449492 {A : Type'} (P : A -> Prop) (x : A) (h1 : term8 A P x) (h2 : term3 A) : (@Îµ A P) = x.
Proof. exact (@lem6449490 A P x h2 (@lem6449491 A P x h1)). Qed.
Lemma lem6449493 {A : Type'} (P : A -> Prop) (x : A) (h1 : term8 A P x) : term9 A P x.
Proof. exact (fun h0 : term3 A => @lem6449492 A P x h1 h0). Qed.
Lemma lem6449494 {A : Type'} (h1 : term3 A) : term3 A.
Proof. exact (h1). Qed.
Lemma lem6449495 {A : Type'} (P : A -> Prop) (x : A) (h1 : term8 A P x) (h2 : term3 A) : (@Îµ A P) = x.
Proof. exact (@lem6449493 A P x h1 (@lem6449494 A h2)). Qed.
Lemma lem6449496 {A : Type'} (P : A -> Prop) (x : A) (h1 : term3 A) : term7 A P x.
Proof. exact (fun h0 : term8 A P x => @lem6449495 A P x h0 h1). Qed.
Lemma lem6449497 {A : Type'} (P : A -> Prop) (h1 : term3 A) : term5 A P.
Proof. exact (fun x : A => @lem6449496 A P x h1). Qed.
Lemma lem6449498 {A : Type'} (h1 : term3 A) : term3 A.
Proof. exact (fun P : A -> Prop => @lem6449497 A P h1). Qed.
Lemma lem6449499 {A : Type'} : term10 A.
Proof. exact (fun h0 : term3 A => @lem6449498 A h0). Qed.
Lemma lem6449500 {A : Type'} : term3 A.
Proof. exact (@lem6449499 A (@lem9522 A)). Qed.
Lemma lem6449501 {A : Type'} (P : A -> Prop) : term4 A P.
Proof. exact (@lem6449500 A P). Qed.
Lemma lem6449502 {A : Type'} (P : A -> Prop) : (term4 A P) = (term5 A P).
Proof. exact (eq_refl (term4 A P)). Qed.
Lemma lem6449503 {A : Type'} (P : A -> Prop) : term5 A P.
Proof. exact (EQ_MP (@lem6449502 A P) (@lem6449501 A P)). Qed.
Lemma lem6449504 {A : Type'} (P : A -> Prop) (x : A) : term6 A P x.
Proof. exact (@lem6449503 A P x). Qed.
Lemma lem6449505 {A : Type'} (P : A -> Prop) (x : A) : (term6 A P x) = (term7 A P x).
Proof. exact (eq_refl (term6 A P x)). Qed.
Lemma lem6449507 {A K : Type'} (dom : A -> Prop) : term11 A K dom.
Proof. exact (@lem6449238 A K dom). Qed.
Lemma lem6449508 {A K : Type'} (dom : A -> Prop) : (term11 A K dom) = (term12 A K dom).
Proof. exact (eq_refl (term11 A K dom)). Qed.
Lemma lem6449509 {A K : Type'} (dom : A -> Prop) : term12 A K dom.
Proof. exact (EQ_MP (@lem6449508 A K dom) (@lem6449507 A K dom)). Qed.
Lemma lem6449510 {A K : Type'} (dom : A -> Prop) (neut : A) : term13 A K dom neut.
Proof. exact (@lem6449509 A K dom neut). Qed.
Lemma lem6449511 {A K : Type'} (dom : A -> Prop) (neut : A) : (term13 A K dom neut) = (term14 A K dom neut).
Proof. exact (eq_refl (term13 A K dom neut)). Qed.
Lemma lem6449512 {A K : Type'} (dom : A -> Prop) (neut : A) : term14 A K dom neut.
Proof. exact (EQ_MP (@lem6449511 A K dom neut) (@lem6449510 A K dom neut)). Qed.
Lemma lem6449513 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term15 A K dom neut op.
Proof. exact (@lem6449512 A K dom neut op). Qed.
Lemma lem6449514 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : (term15 A K dom neut op) = (term16 A K dom neut op).
Proof. exact (eq_refl (term15 A K dom neut op)). Qed.
Lemma lem6449515 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term16 A K dom neut op.
Proof. exact (EQ_MP (@lem6449514 A K dom neut op) (@lem6449513 A K dom neut op)). Qed.
Lemma lem6449516 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term17 A K dom neut op ltle.
Proof. exact (@lem6449515 A K dom neut op ltle). Qed.
Lemma lem6449517 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (term17 A K dom neut op ltle) = (term18 A K dom neut op ltle).
Proof. exact (eq_refl (term17 A K dom neut op ltle)). Qed.
Lemma lem6449518 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term18 A K dom neut op ltle.
Proof. exact (EQ_MP (@lem6449517 A K dom neut op ltle) (@lem6449516 A K dom neut op ltle)). Qed.
Lemma lem6449519 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) : term19 A K dom neut op ltle k.
Proof. exact (@lem6449518 A K dom neut op ltle k). Qed.
Lemma lem6449520 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) : (term19 A K dom neut op ltle k) = (term20 A K dom neut op ltle k).
Proof. exact (eq_refl (term19 A K dom neut op ltle k)). Qed.
Lemma lem6449521 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) : term20 A K dom neut op ltle k.
Proof. exact (EQ_MP (@lem6449520 A K dom neut op ltle k) (@lem6449519 A K dom neut op ltle k)). Qed.
Lemma lem6449522 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term21 A K dom neut op ltle k f.
Proof. exact (@lem6449521 A K dom neut op ltle k f). Qed.
Lemma lem6449523 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term21 A K dom neut op ltle k f) = ((term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)).
Proof. exact (eq_refl (term21 A K dom neut op ltle k f)). Qed.
Lemma lem6449540 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term23 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem6449541 {_124523 : Type'} (s : _124523 -> Prop) (t : _124523 -> Prop) : (s = t) = (term23 _124523 s t).
Proof. exact (@lem6449540 _124523 s t). Qed.
Lemma lem6449542 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : ((term24 _124523 k i) = k) = (term25 _124523 i k).
Proof. exact (@lem6449541 _124523 (term24 _124523 k i) k). Qed.
Lemma lem6449551 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term26 _124523 i k) = (term26 _124523 i k).
Proof. exact (eq_refl (term26 _124523 i k)). Qed.
Lemma lem6449552 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term27 _124523 i k) = (term28 _124523 i k).
Proof. exact (MK_COMB (@lem6449551 _124523 i k) (@lem6449542 _124523 i k)). Qed.
Lemma lem6449555 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term28 _124523 i k) = (term27 _124523 i k).
Proof. exact (SYM (@lem6449552 _124523 i k)). Qed.
Lemma lem6449559 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6449560 {_124523 : Type'} (P : _124523 -> Prop) (x : _124523) : (@IN _124523 x P) = (P x).
Proof. exact (@lem6449559 _124523 P x). Qed.
Lemma lem6449561 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (@IN _124523 i k) = (k i).
Proof. exact (@lem6449560 _124523 k i). Qed.
Lemma lem6449562 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6449563 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term29 _124523 i k) = (term30 _124523 k i).
Proof. exact (MK_COMB (@lem6449562) (@lem6449561 _124523 k i)). Qed.
Lemma lem6449564 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6449565 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term26 _124523 i k) = (term31 _124523 k i).
Proof. exact (MK_COMB (@lem6449564) (@lem6449563 _124523 k i)). Qed.
Lemma lem6449573 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term32 A x s y) = (term33 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem6449574 {_124523 : Type'} (s : _124523 -> Prop) (x : _124523) (y : _124523) : (term32 _124523 x s y) = (term33 _124523 s x y).
Proof. exact (@lem6449573 _124523 s x y). Qed.
Lemma lem6449575 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term34 _124523 x k i) = (term35 _124523 k x i).
Proof. exact (@lem6449574 _124523 (@INSERT _124523 i k) x i). Qed.
Lemma lem6449579 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6449580 {_124523 : Type'} (y : _124523) (x : _124523) (s : _124523 -> Prop) : (term36 _124523 x y s) = (term37 _124523 y x s).
Proof. exact (@lem6449579 _124523 y x s). Qed.
Lemma lem6449581 {_124523 : Type'} (i : _124523) (x : _124523) (k : _124523 -> Prop) : (term36 _124523 x i k) = (term37 _124523 i x k).
Proof. exact (@lem6449580 _124523 i x k). Qed.
Lemma lem6449587 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6449588 {_124523 : Type'} (P : _124523 -> Prop) (x : _124523) : (@IN _124523 x P) = (P x).
Proof. exact (@lem6449587 _124523 P x). Qed.
Lemma lem6449589 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (@IN _124523 x k) = (k x).
Proof. exact (@lem6449588 _124523 k x). Qed.
Lemma lem6449590 {_124523 : Type'} (x : _124523) (i : _124523) : (term38 _124523 x i) = (term38 _124523 x i).
Proof. exact (eq_refl (term38 _124523 x i)). Qed.
Lemma lem6449591 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term37 _124523 i x k) = (term39 _124523 i k x).
Proof. exact (MK_COMB (@lem6449590 _124523 x i) (@lem6449589 _124523 k x)). Qed.
Lemma lem6449594 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term36 _124523 x i k) = (term39 _124523 i k x).
Proof. exact (TRANS (@lem6449581 _124523 i x k) (@lem6449591 _124523 i k x)). Qed.
Lemma lem6449595 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6449596 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term40 _124523 x i k) = (term41 _124523 i k x).
Proof. exact (MK_COMB (@lem6449595) (@lem6449594 _124523 i k x)). Qed.
Lemma lem6449599 {_124523 : Type'} (x : _124523) (i : _124523) : (term2 _124523 x i) = (term2 _124523 x i).
Proof. exact (eq_refl (term2 _124523 x i)). Qed.
Lemma lem6449600 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term35 _124523 k x i) = (term42 _124523 k x i).
Proof. exact (MK_COMB (@lem6449596 _124523 i k x) (@lem6449599 _124523 x i)). Qed.
Lemma lem6449603 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term34 _124523 x k i) = (term42 _124523 k x i).
Proof. exact (TRANS (@lem6449575 _124523 k x i) (@lem6449600 _124523 k x i)). Qed.
Lemma lem6449604 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6449605 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term43 _124523 x k i) = (term44 _124523 k x i).
Proof. exact (MK_COMB (@lem6449604) (@lem6449603 _124523 k x i)). Qed.
Lemma lem6449607 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6449608 {_124523 : Type'} (P : _124523 -> Prop) (x : _124523) : (@IN _124523 x P) = (P x).
Proof. exact (@lem6449607 _124523 P x). Qed.
Lemma lem6449609 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (@IN _124523 x k) = (k x).
Proof. exact (@lem6449608 _124523 k x). Qed.
Lemma lem6449610 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : ((term34 _124523 x k i) = (@IN _124523 x k)) = ((term42 _124523 k x i) = (k x)).
Proof. exact (MK_COMB (@lem6449605 _124523 k x i) (@lem6449609 _124523 k x)). Qed.
Lemma lem6449613 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term45 _124523 i k) = (term46 _124523 i k).
Proof. exact (fun_ext (fun x : _124523 => @lem6449610 _124523 i k x)). Qed.
Lemma lem6449614 {_124523 : Type'} : (@all _124523) = (@all _124523).
Proof. exact (eq_refl (@all _124523)). Qed.
Lemma lem6449615 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term25 _124523 i k) = (term47 _124523 i k).
Proof. exact (MK_COMB (@lem6449614 _124523) (@lem6449613 _124523 i k)). Qed.
Lemma lem6449620 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term28 _124523 i k) = (term48 _124523 i k).
Proof. exact (MK_COMB (@lem6449565 _124523 k i) (@lem6449615 _124523 i k)). Qed.
Lemma lem6449623 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term48 _124523 i k) = (term28 _124523 i k).
Proof. exact (SYM (@lem6449620 _124523 i k)). Qed.
Lemma lem6449625 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6449626 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term48 _124523 i k) = (term50 _124523 i k).
Proof. exact (@lem6449625 (term48 _124523 i k)). Qed.
Lemma lem6449627 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term50 _124523 i k) = (term48 _124523 i k).
Proof. exact (SYM (@lem6449626 _124523 i k)). Qed.
Lemma lem6449628 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term51 _124523 i k) : term51 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6449631 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term50 _124523 i k) : term50 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6449632 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term52 _124523 i k.
Proof. exact (fun h0 : term50 _124523 i k => @lem6449631 _124523 i k h0). Qed.
Lemma lem6449633 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term52 _124523 i k) : term52 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6449634 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term50 _124523 i k) : term50 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6449635 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term50 _124523 i k) (h2 : term52 _124523 i k) : term50 _124523 i k.
Proof. exact (@lem6449633 _124523 i k h2 (@lem6449634 _124523 i k h1)). Qed.
Lemma lem6449636 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term50 _124523 i k) : term53 _124523 i k.
Proof. exact (fun h0 : term52 _124523 i k => @lem6449635 _124523 i k h1 h0). Qed.
Lemma lem6449637 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term52 _124523 i k) : term52 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6449638 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term50 _124523 i k) (h2 : term52 _124523 i k) : term50 _124523 i k.
Proof. exact (@lem6449636 _124523 i k h1 (@lem6449637 _124523 i k h2)). Qed.
Lemma lem6449639 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term52 _124523 i k) : term52 _124523 i k.
Proof. exact (fun h0 : term50 _124523 i k => @lem6449638 _124523 i k h0 h1). Qed.
Lemma lem6449640 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term54 _124523 i k.
Proof. exact (fun h0 : term52 _124523 i k => @lem6449639 _124523 i k h0). Qed.
Lemma lem6449643 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term52 _124523 i k.
Proof. exact (@lem6449640 _124523 i k (@lem6449632 _124523 i k)). Qed.
Lemma lem6449644 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term52 _124523 i k.
Proof. exact (@lem6449643 _124523 i k). Qed.
Lemma lem6449654 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6449655 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term50 _124523 i k) = (term55 _124523 i k).
Proof. exact (@lem6449654 (term51 _124523 i k)). Qed.
Lemma lem6449657 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6449658 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term55 _124523 i k) = (term48 _124523 i k).
Proof. exact (@lem6449657 (term48 _124523 i k)). Qed.
Lemma lem6449661 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term50 _124523 i k) = (term48 _124523 i k).
Proof. exact (TRANS (@lem6449655 _124523 i k) (@lem6449658 _124523 i k)). Qed.
Lemma lem6449670 {_124523 : Type'} (k : _124523 -> Prop) : (term57 _124523 k) = (term58 _124523 k).
Proof. exact (fun_ext (fun i : _124523 => @lem6449661 _124523 i k)). Qed.
Lemma lem6449671 {_124523 : Type'} : (@all _124523) = (@all _124523).
Proof. exact (eq_refl (@all _124523)). Qed.
Lemma lem6449672 {_124523 : Type'} (k : _124523 -> Prop) : (term59 _124523 k) = (term60 _124523 k).
Proof. exact (MK_COMB (@lem6449671 _124523) (@lem6449670 _124523 k)). Qed.
Lemma lem6449677 {_124523 : Type'} : (term61 _124523) = (term62 _124523).
Proof. exact (fun_ext (fun k : _124523 -> Prop => @lem6449672 _124523 k)). Qed.
Lemma lem6449678 {_124523 : Type'} : (@all (_124523 -> Prop)) = (@all (_124523 -> Prop)).
Proof. exact (eq_refl (@all (_124523 -> Prop))). Qed.
Lemma lem6449687 {_124523 : Type'} : (term63 _124523) = (term64 _124523).
Proof. exact (MK_COMB (@lem6449678 _124523) (@lem6449677 _124523)). Qed.
Lemma lem6449702 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : ((term42 _124523 k x i) = (k x)) = ((term42 _124523 k x i) = (k x)).
Proof. exact (eq_refl ((term42 _124523 k x i) = (k x))). Qed.
Lemma lem6449703 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term46 _124523 i k) = (term46 _124523 i k).
Proof. exact (fun_ext (fun x : _124523 => @lem6449702 _124523 i k x)). Qed.
Lemma lem6449704 {_124523 : Type'} : (@all _124523) = (@all _124523).
Proof. exact (eq_refl (@all _124523)). Qed.
Lemma lem6449705 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term47 _124523 i k) = (term47 _124523 i k).
Proof. exact (MK_COMB (@lem6449704 _124523) (@lem6449703 _124523 i k)). Qed.
Lemma lem6449710 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term31 _124523 k i) = (term31 _124523 k i).
Proof. exact (eq_refl (term31 _124523 k i)). Qed.
Lemma lem6449711 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term48 _124523 i k) = (term48 _124523 i k).
Proof. exact (MK_COMB (@lem6449710 _124523 k i) (@lem6449705 _124523 i k)). Qed.
Lemma lem6449712 {_124523 : Type'} (k : _124523 -> Prop) : (term58 _124523 k) = (term58 _124523 k).
Proof. exact (fun_ext (fun i : _124523 => @lem6449711 _124523 i k)). Qed.
Lemma lem6449713 {_124523 : Type'} : (@all _124523) = (@all _124523).
Proof. exact (eq_refl (@all _124523)). Qed.
Lemma lem6449714 {_124523 : Type'} (k : _124523 -> Prop) : (term60 _124523 k) = (term60 _124523 k).
Proof. exact (MK_COMB (@lem6449713 _124523) (@lem6449712 _124523 k)). Qed.
Lemma lem6449715 {_124523 : Type'} : (term62 _124523) = (term62 _124523).
Proof. exact (fun_ext (fun k : _124523 -> Prop => @lem6449714 _124523 k)). Qed.
Lemma lem6449716 {_124523 : Type'} : (@all (_124523 -> Prop)) = (@all (_124523 -> Prop)).
Proof. exact (eq_refl (@all (_124523 -> Prop))). Qed.
Lemma lem6449717 {_124523 : Type'} : (term64 _124523) = (term64 _124523).
Proof. exact (MK_COMB (@lem6449716 _124523) (@lem6449715 _124523)). Qed.
Lemma lem6449744 {_124523 : Type'} : (term63 _124523) = (term64 _124523).
Proof. exact (TRANS (@lem6449687 _124523) (@lem6449717 _124523)). Qed.
Lemma lem6449745 {_124523 : Type'} : (term64 _124523) = (term63 _124523).
Proof. exact (SYM (@lem6449744 _124523)). Qed.
Lemma lem6449748 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6449749 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : ((term42 _124523 k x i) = (k x)) = (term65 _124523 i k x).
Proof. exact (@lem6449748 ((term42 _124523 k x i) = (k x))). Qed.
Lemma lem6449750 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term65 _124523 i k x) = ((term42 _124523 k x i) = (k x)).
Proof. exact (SYM (@lem6449749 _124523 i k x)). Qed.
Lemma lem6449751 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term66 _124523 i k x) : term66 _124523 i k x.
Proof. exact (h1). Qed.
Lemma lem6449757 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term30 _124523 k i.
Proof. exact (h1). Qed.
Lemma lem6449766 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term67 _124523 i k x) = (term68 _124523 i k x).
Proof. exact (@lem17160 (x = i) (k x)). Qed.
Lemma lem6449773 {_124523 : Type'} (x : _124523) (i : _124523) : (term69 _124523 x i) = (x = i).
Proof. exact (@lem16933 (x = i)). Qed.
Lemma lem6449774 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6449775 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term70 _124523 i k x) = (term71 _124523 i k x).
Proof. exact (MK_COMB (@lem6449774) (@lem6449766 _124523 i k x)). Qed.
Lemma lem6449776 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term72 _124523 k x i) = (term73 _124523 k x i).
Proof. exact (MK_COMB (@lem6449775 _124523 i k x) (@lem6449773 _124523 x i)). Qed.
Lemma lem6449777 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term74 _124523 k x i) = (term72 _124523 k x i).
Proof. exact (@lem17045 (term39 _124523 i k x) (term2 _124523 x i)). Qed.
Lemma lem6449778 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term74 _124523 k x i) = (term73 _124523 k x i).
Proof. exact (TRANS (@lem6449777 _124523 k x i) (@lem6449776 _124523 k x i)). Qed.
Lemma lem6449783 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (k x) = (k x).
Proof. exact (eq_refl (k x)). Qed.
Lemma lem6449784 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6449785 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) : (term75 _124523 k x i) = (term76 _124523 k x i).
Proof. exact (MK_COMB (@lem6449784) (@lem6449778 _124523 k x i)). Qed.
Lemma lem6449786 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term77 _124523 i k x) = (term78 _124523 i k x).
Proof. exact (MK_COMB (@lem6449785 _124523 k x i) (@lem6449783 _124523 k x)). Qed.
Lemma lem6449791 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term79 _124523 i k x) = (term79 _124523 i k x).
Proof. exact (eq_refl (term79 _124523 i k x)). Qed.
Lemma lem6449792 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term80 _124523 i k x) = (term81 _124523 i k x).
Proof. exact (MK_COMB (@lem6449791 _124523 i k x) (@lem6449786 _124523 i k x)). Qed.
Lemma lem6449793 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term66 _124523 i k x) = (term80 _124523 i k x).
Proof. exact (@lem17646 (term42 _124523 k x i) (k x)). Qed.
Lemma lem6449798 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) : (term66 _124523 i k x) = (term81 _124523 i k x).
Proof. exact (TRANS (@lem6449793 _124523 i k x) (@lem6449792 _124523 i k x)). Qed.
Lemma lem6449805 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term30 _124523 k i.
Proof. exact (h1). Qed.
Lemma lem6449867 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term66 _124523 i k x) : term81 _124523 i k x.
Proof. exact (EQ_MP (@lem6449798 _124523 i k x) (@lem6449751 _124523 i k x h1)). Qed.
Lemma lem6449868 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term82 _124523 i k x.
Proof. exact (h1). Qed.
Lemma lem6449869 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : term78 _124523 i k x.
Proof. exact (h1). Qed.
Lemma lem6449871 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term42 _124523 k x i.
Proof. exact (proj1 (@lem6449868 _124523 i k x h1)). Qed.
Lemma lem6449873 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term39 _124523 i k x.
Proof. exact (proj1 (@lem6449871 _124523 i k x h1)). Qed.
Lemma lem6449877 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : term73 _124523 k x i.
Proof. exact (proj1 (@lem6449869 _124523 i k x h1)). Qed.
Lemma lem6449878 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) : term68 _124523 i k x.
Proof. exact (h1). Qed.
Lemma lem6449897 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6449913 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6449933 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term30 _124523 k i.
Proof. exact (h1). Qed.
Lemma lem6449941 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6449947 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term2 _124523 x i.
Proof. exact (proj2 (@lem6449871 _124523 i k x h1)). Qed.
Lemma lem6449949 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6449953 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term30 _124523 k x.
Proof. exact (proj2 (@lem6449868 _124523 i k x h1)). Qed.
Lemma lem6449957 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6449965 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) : term30 _124523 k x.
Proof. exact (proj2 (@lem6449878 _124523 i k x h1)). Qed.
Lemma lem6449967 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term30 _124523 k i.
Proof. exact (h1). Qed.
Lemma lem6449969 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : k x.
Proof. exact (proj2 (@lem6449869 _124523 i k x h1)). Qed.
Lemma lem6449971 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6450013 {_124523 : Type'} (i : _124523) : (term83 _124523 i) = (term83 _124523 i).
Proof. exact (eq_refl (term83 _124523 i)). Qed.
Lemma lem6450014 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : (term84 _124523 i x) = (term85 _124523 i).
Proof. exact (MK_COMB (@lem6450013 _124523 i) (@lem6449949 _124523 x i h1)). Qed.
Lemma lem6450015 {_124523 : Type'} (i : _124523) : (term85 _124523 i) = (term86 _124523 i).
Proof. exact (eq_refl (term85 _124523 i)). Qed.
Lemma lem6450016 {_124523 : Type'} (i : _124523) (x : _124523) : (term87 _124523 i x) = (term87 _124523 i x).
Proof. exact (eq_refl (term87 _124523 i x)). Qed.
Lemma lem6450017 {_124523 : Type'} (x : _124523) (i : _124523) : ((term84 _124523 i x) = (term85 _124523 i)) = ((term84 _124523 i x) = (term86 _124523 i)).
Proof. exact (MK_COMB (@lem6450016 _124523 i x) (@lem6450015 _124523 i)). Qed.
Lemma lem6450018 {_124523 : Type'} (x : _124523) (i : _124523) : (term84 _124523 i x) = (term2 _124523 x i).
Proof. exact (eq_refl (term84 _124523 i x)). Qed.
Lemma lem6450019 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6450020 {_124523 : Type'} (x : _124523) (i : _124523) : (term87 _124523 i x) = (term88 _124523 x i).
Proof. exact (MK_COMB (@lem6450019) (@lem6450018 _124523 x i)). Qed.
Lemma lem6450021 {_124523 : Type'} (i : _124523) : (term86 _124523 i) = (term86 _124523 i).
Proof. exact (eq_refl (term86 _124523 i)). Qed.
Lemma lem6450022 {_124523 : Type'} (x : _124523) (i : _124523) : ((term84 _124523 i x) = (term86 _124523 i)) = ((term2 _124523 x i) = (term86 _124523 i)).
Proof. exact (MK_COMB (@lem6450020 _124523 x i) (@lem6450021 _124523 i)). Qed.
Lemma lem6450023 {_124523 : Type'} (x : _124523) (i : _124523) : ((term84 _124523 i x) = (term85 _124523 i)) = ((term2 _124523 x i) = (term86 _124523 i)).
Proof. exact (TRANS (@lem6450017 _124523 x i) (@lem6450022 _124523 x i)). Qed.
Lemma lem6450024 {_124523 : Type'} (x : _124523) (i : _124523) (h1 : x = i) : (term2 _124523 x i) = (term86 _124523 i).
Proof. exact (EQ_MP (@lem6450023 _124523 x i) (@lem6450014 _124523 x i h1)). Qed.
Lemma lem6450025 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : term86 _124523 i.
Proof. exact (EQ_MP (@lem6450024 _124523 x i h2) (@lem6449947 _124523 i k x h1)). Qed.
Lemma lem6450053 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term30 _124523 k i.
Proof. exact (h1). Qed.
Lemma lem6450054 {_124523 : Type'} (k : _124523 -> Prop) : (term89 _124523 k) = (term89 _124523 k).
Proof. exact (eq_refl (term89 _124523 k)). Qed.
Lemma lem6450055 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : x = i) : (term90 _124523 k x) = (term90 _124523 k i).
Proof. exact (MK_COMB (@lem6450054 _124523 k) (@lem6449971 _124523 x i h1)). Qed.
Lemma lem6450056 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term90 _124523 k i) = (k i).
Proof. exact (eq_refl (term90 _124523 k i)). Qed.
Lemma lem6450057 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term91 _124523 k x) = (term91 _124523 k x).
Proof. exact (eq_refl (term91 _124523 k x)). Qed.
Lemma lem6450058 {_124523 : Type'} (x : _124523) (k : _124523 -> Prop) (i : _124523) : ((term90 _124523 k x) = (term90 _124523 k i)) = ((term90 _124523 k x) = (k i)).
Proof. exact (MK_COMB (@lem6450057 _124523 k x) (@lem6450056 _124523 k i)). Qed.
Lemma lem6450059 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term90 _124523 k x) = (k x).
Proof. exact (eq_refl (term90 _124523 k x)). Qed.
Lemma lem6450060 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6450061 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term91 _124523 k x) = (term92 _124523 k x).
Proof. exact (MK_COMB (@lem6450060) (@lem6450059 _124523 k x)). Qed.
Lemma lem6450062 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (k i) = (k i).
Proof. exact (eq_refl (k i)). Qed.
Lemma lem6450063 {_124523 : Type'} (x : _124523) (k : _124523 -> Prop) (i : _124523) : ((term90 _124523 k x) = (k i)) = ((k x) = (k i)).
Proof. exact (MK_COMB (@lem6450061 _124523 k x) (@lem6450062 _124523 k i)). Qed.
Lemma lem6450064 {_124523 : Type'} (x : _124523) (k : _124523 -> Prop) (i : _124523) : ((term90 _124523 k x) = (term90 _124523 k i)) = ((k x) = (k i)).
Proof. exact (TRANS (@lem6450058 _124523 x k i) (@lem6450063 _124523 x k i)). Qed.
Lemma lem6450065 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : x = i) : (k x) = (k i).
Proof. exact (EQ_MP (@lem6450064 _124523 x k i) (@lem6450055 _124523 k x i h1)). Qed.
Lemma lem6450082 {_124523 : Type'} (x : _124523) : x = x.
Proof. exact (@lem21386 _124523 x). Qed.
Lemma lem6450083 {_124523 : Type'} (x : _124523) : x = x.
Proof. exact (@lem6450082 _124523 x). Qed.
Lemma lem6450084 {_124523 : Type'} (i : _124523) : i = i.
Proof. exact (@lem6450083 _124523 i). Qed.
Lemma lem6450085 {_124523 : Type'} (i : _124523) : term93 _124523 i.
Proof. exact (fun h0 : term86 _124523 i => @lem6450084 _124523 i). Qed.
Lemma lem6450087 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450088 {_124523 : Type'} (i : _124523) : (term93 _124523 i) = (i = i).
Proof. exact (@lem6450087 (i = i)). Qed.
Lemma lem6450089 {_124523 : Type'} (i : _124523) : i = i.
Proof. exact (EQ_MP (@lem6450088 _124523 i) (@lem6450085 _124523 i)). Qed.
Lemma lem6450092 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6450094 {_124523 : Type'} (i : _124523) : (term86 _124523 i) = (term95 _124523 i).
Proof. exact (@lem6450092 (i = i)). Qed.
Lemma lem6450097 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : term95 _124523 i.
Proof. exact (EQ_MP (@lem6450094 _124523 i) (@lem6450025 _124523 k x i h1 h2)). Qed.
Lemma lem6450100 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : False.
Proof. exact (@lem6450097 _124523 k x i h1 h2 (@lem6450089 _124523 i)). Qed.
Lemma lem6450101 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6450100 _124523 k x i h1 h2). Qed.
Lemma lem6450103 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450104 : term96 = False.
Proof. exact (@lem6450103 False). Qed.
Lemma lem6450121 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6450122 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (h1 : k x) : term97 _124523 k x.
Proof. exact (fun h0 : term30 _124523 k x => @lem6450121 _124523 k x h1). Qed.
Lemma lem6450124 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450125 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term97 _124523 k x) = (k x).
Proof. exact (@lem6450124 (k x)). Qed.
Lemma lem6450126 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (h1 : k x) : k x.
Proof. exact (EQ_MP (@lem6450125 _124523 k x) (@lem6450122 _124523 k x h1)). Qed.
Lemma lem6450129 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6450131 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term30 _124523 k x) = (term98 _124523 k x).
Proof. exact (@lem6450129 (k x)). Qed.
Lemma lem6450134 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : term98 _124523 k x.
Proof. exact (EQ_MP (@lem6450131 _124523 k x) (@lem6449953 _124523 i k x h1)). Qed.
Lemma lem6450137 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : False.
Proof. exact (@lem6450134 _124523 i k x h2 (@lem6450126 _124523 k x h1)). Qed.
Lemma lem6450138 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6450137 _124523 i k x h1 h2). Qed.
Lemma lem6450140 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450141 : term96 = False.
Proof. exact (@lem6450140 False). Qed.
Lemma lem6450142 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450141) (@lem6450138 _124523 i k x h1 h2)). Qed.
Lemma lem6450158 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : k x.
Proof. exact (proj2 (@lem6449869 _124523 i k x h1)). Qed.
Lemma lem6450159 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : term97 _124523 k x.
Proof. exact (fun h0 : term30 _124523 k x => @lem6450158 _124523 i k x h1). Qed.
Lemma lem6450161 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450162 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term97 _124523 k x) = (k x).
Proof. exact (@lem6450161 (k x)). Qed.
Lemma lem6450163 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term78 _124523 i k x) : k x.
Proof. exact (EQ_MP (@lem6450162 _124523 k x) (@lem6450159 _124523 i k x h1)). Qed.
Lemma lem6450166 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6450168 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) : (term30 _124523 k x) = (term98 _124523 k x).
Proof. exact (@lem6450166 (k x)). Qed.
Lemma lem6450171 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) : term98 _124523 k x.
Proof. exact (EQ_MP (@lem6450168 _124523 k x) (@lem6449965 _124523 i k x h1)). Qed.
Lemma lem6450174 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) (h2 : term78 _124523 i k x) : False.
Proof. exact (@lem6450171 _124523 i k x h1 (@lem6450163 _124523 i k x h2)). Qed.
Lemma lem6450175 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) (h2 : term78 _124523 i k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6450174 _124523 i k x h1 h2). Qed.
Lemma lem6450177 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450178 : term96 = False.
Proof. exact (@lem6450177 False). Qed.
Lemma lem6450179 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term68 _124523 i k x) (h2 : term78 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450178) (@lem6450175 _124523 i k x h1 h2)). Qed.
Lemma lem6450181 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term78 _124523 i k x) (h2 : x = i) : k i.
Proof. exact (EQ_MP (@lem6450065 _124523 k x i h2) (@lem6449969 _124523 i k x h1)). Qed.
Lemma lem6450182 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term78 _124523 i k x) (h2 : x = i) : term97 _124523 k i.
Proof. exact (fun h0 : term30 _124523 k i => @lem6450181 _124523 k x i h1 h2). Qed.
Lemma lem6450184 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450185 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term97 _124523 k i) = (k i).
Proof. exact (@lem6450184 (k i)). Qed.
Lemma lem6450186 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term78 _124523 i k x) (h2 : x = i) : k i.
Proof. exact (EQ_MP (@lem6450185 _124523 k i) (@lem6450182 _124523 k x i h1 h2)). Qed.
Lemma lem6450189 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6450191 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : (term30 _124523 k i) = (term98 _124523 k i).
Proof. exact (@lem6450189 (k i)). Qed.
Lemma lem6450194 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term98 _124523 k i.
Proof. exact (EQ_MP (@lem6450191 _124523 k i) (@lem6450053 _124523 k i h1)). Qed.
Lemma lem6450197 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (@lem6450194 _124523 k i h1 (@lem6450186 _124523 k x i h2 h3)). Qed.
Lemma lem6450198 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6450197 _124523 k x i h1 h2 h3). Qed.
Lemma lem6450200 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6450201 : term96 = False.
Proof. exact (@lem6450200 False). Qed.
Lemma lem6450202 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450201) (@lem6450198 _124523 k x i h1 h2 h3)). Qed.
Lemma lem6450203 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h4 : term30 _124523 k i => @lem6450202 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6450053 _124523 k i h1)). Qed.
Lemma lem6450205 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450203 _124523 k x i h1 h2 h3) (@lem6450053 _124523 k i h1)). Qed.
Lemma lem6450206 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6450104) (@lem6450101 _124523 k x i h1 h2)). Qed.
Lemma lem6450207 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6450205 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449971 _124523 x i h3)). Qed.
Lemma lem6450208 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450207 _124523 k x i h1 h2 h3) (@lem6449971 _124523 x i h3)). Qed.
Lemma lem6450209 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h4 : term30 _124523 k i => @lem6450208 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449967 _124523 k i h1)). Qed.
Lemma lem6450210 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450209 _124523 k x i h1 h2 h3) (@lem6449967 _124523 k i h1)). Qed.
Lemma lem6450211 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6450142 _124523 i k x h1 h2) (fun h3 : False => @lem6449957 _124523 k x h1)). Qed.
Lemma lem6450212 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450211 _124523 i k x h1 h2) (@lem6449957 _124523 k x h1)). Qed.
Lemma lem6450213 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6450206 _124523 k x i h1 h2) (fun h3 : False => @lem6449949 _124523 x i h2)). Qed.
Lemma lem6450214 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6450213 _124523 k x i h1 h2) (@lem6449949 _124523 x i h2)). Qed.
Lemma lem6450215 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6450210 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449941 _124523 x i h3)). Qed.
Lemma lem6450216 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450215 _124523 k x i h1 h2 h3) (@lem6449941 _124523 x i h3)). Qed.
Lemma lem6450217 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h4 : term30 _124523 k i => @lem6450216 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449933 _124523 k i h1)). Qed.
Lemma lem6450218 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450217 _124523 k x i h1 h2 h3) (@lem6449933 _124523 k i h1)). Qed.
Lemma lem6450219 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6450212 _124523 i k x h1 h2) (fun h3 : False => @lem6449913 _124523 k x h1)). Qed.
Lemma lem6450220 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450219 _124523 i k x h1 h2) (@lem6449913 _124523 k x h1)). Qed.
Lemma lem6450221 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6450214 _124523 k x i h1 h2) (fun h3 : False => @lem6449897 _124523 x i h2)). Qed.
Lemma lem6450222 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6450221 _124523 k x i h1 h2) (@lem6449897 _124523 x i h2)). Qed.
Lemma lem6450223 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6450218 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449941 _124523 x i h3)). Qed.
Lemma lem6450224 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450223 _124523 k x i h1 h2 h3) (@lem6449941 _124523 x i h3)). Qed.
Lemma lem6450225 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h4 : term30 _124523 k i => @lem6450224 _124523 k x i h1 h2 h3) (fun h4 : False => @lem6449933 _124523 k i h1)). Qed.
Lemma lem6450226 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6450225 _124523 k x i h1 h2 h3) (@lem6449933 _124523 k i h1)). Qed.
Lemma lem6450227 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6450220 _124523 i k x h1 h2) (fun h3 : False => @lem6449913 _124523 k x h1)). Qed.
Lemma lem6450228 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : k x) (h2 : term82 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450227 _124523 i k x h1 h2) (@lem6449913 _124523 k x h1)). Qed.
Lemma lem6450229 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6450222 _124523 k x i h1 h2) (fun h3 : False => @lem6449897 _124523 x i h2)). Qed.
Lemma lem6450230 {_124523 : Type'} (k : _124523 -> Prop) (x : _124523) (i : _124523) (h1 : term82 _124523 i k x) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6450229 _124523 k x i h1 h2) (@lem6449897 _124523 x i h2)). Qed.
Lemma lem6450231 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term78 _124523 i k x) : False.
Proof. exact (or_elim (@lem6449877 _124523 i k x h2) (fun h0 : term68 _124523 i k x => @lem6450179 _124523 i k x h0 h2) (fun h0 : x = i => @lem6450226 _124523 k x i h1 h2 h0)). Qed.
Lemma lem6450232 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term82 _124523 i k x) : False.
Proof. exact (or_elim (@lem6449873 _124523 i k x h1) (fun h0 : x = i => @lem6450230 _124523 k x i h1 h0) (fun h0 : k x => @lem6450228 _124523 i k x h0 h1)). Qed.
Lemma lem6450233 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : False.
Proof. exact (or_elim (@lem6449867 _124523 i k x h2) (fun h0 : term82 _124523 i k x => @lem6450232 _124523 i k x h0) (fun h0 : term78 _124523 i k x => @lem6450231 _124523 i k x h1 h0)). Qed.
Lemma lem6450234 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h3 : term30 _124523 k i => @lem6450233 _124523 i k x h1 h2) (fun h3 : False => @lem6449805 _124523 k i h1)). Qed.
Lemma lem6450235 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450234 _124523 i k x h1 h2) (@lem6449805 _124523 k i h1)). Qed.
Lemma lem6450236 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : (term30 _124523 k i) = False.
Proof. exact (prop_ext (fun h3 : term30 _124523 k i => @lem6450235 _124523 i k x h1 h2) (fun h3 : False => @lem6449757 _124523 k i h1)). Qed.
Lemma lem6450237 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450236 _124523 i k x h1 h2) (@lem6449757 _124523 k i h1)). Qed.
Lemma lem6450238 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : (term66 _124523 i k x) = False.
Proof. exact (prop_ext (fun h3 : term66 _124523 i k x => @lem6450237 _124523 i k x h1 h2) (fun h3 : False => @lem6449751 _124523 i k x h2)). Qed.
Lemma lem6450239 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (x : _124523) (h1 : term30 _124523 k i) (h2 : term66 _124523 i k x) : False.
Proof. exact (EQ_MP (@lem6450238 _124523 i k x h1 h2) (@lem6449751 _124523 i k x h2)). Qed.
Lemma lem6450240 {_124523 : Type'} (x : _124523) (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term65 _124523 i k x.
Proof. exact (fun h0 : term66 _124523 i k x => @lem6450239 _124523 i k x h1 h0). Qed.
Lemma lem6450241 {_124523 : Type'} (x : _124523) (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : (term42 _124523 k x i) = (k x).
Proof. exact (EQ_MP (@lem6449750 _124523 i k x) (@lem6450240 _124523 x k i h1)). Qed.
Lemma lem6450246 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) (h1 : term30 _124523 k i) : term47 _124523 i k.
Proof. exact (fun x : _124523 => @lem6450241 _124523 x k i h1). Qed.
Lemma lem6450247 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term48 _124523 i k.
Proof. exact (fun h0 : term30 _124523 k i => @lem6450246 _124523 k i h0). Qed.
Lemma lem6450252 {_124523 : Type'} (k : _124523 -> Prop) : term60 _124523 k.
Proof. exact (fun i : _124523 => @lem6450247 _124523 i k). Qed.
Lemma lem6450257 {_124523 : Type'} : term64 _124523.
Proof. exact (fun k : _124523 -> Prop => @lem6450252 _124523 k). Qed.
Lemma lem6450258 {_124523 : Type'} : term63 _124523.
Proof. exact (EQ_MP (@lem6449745 _124523) (@lem6450257 _124523)). Qed.
Lemma lem6450259 {_124523 : Type'} (k : _124523 -> Prop) : term99 _124523 k.
Proof. exact (@lem6450258 _124523 k). Qed.
Lemma lem6450260 {_124523 : Type'} (k : _124523 -> Prop) : (term99 _124523 k) = (term59 _124523 k).
Proof. exact (eq_refl (term99 _124523 k)). Qed.
Lemma lem6450261 {_124523 : Type'} (k : _124523 -> Prop) : term59 _124523 k.
Proof. exact (EQ_MP (@lem6450260 _124523 k) (@lem6450259 _124523 k)). Qed.
Lemma lem6450262 {_124523 : Type'} (k : _124523 -> Prop) (i : _124523) : term100 _124523 k i.
Proof. exact (@lem6450261 _124523 k i). Qed.
Lemma lem6450263 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : (term100 _124523 k i) = (term50 _124523 i k).
Proof. exact (eq_refl (term100 _124523 k i)). Qed.
Lemma lem6450264 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term50 _124523 i k.
Proof. exact (EQ_MP (@lem6450263 _124523 i k) (@lem6450262 _124523 k i)). Qed.
Lemma lem6450266 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term50 _124523 i k.
Proof. exact (@lem6449644 _124523 i k (@lem6450264 _124523 i k)). Qed.
Lemma lem6450267 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term51 _124523 i k) : False.
Proof. exact (@lem6450266 _124523 i k (@lem6449628 _124523 i k h1)). Qed.
Lemma lem6450268 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term51 _124523 i k) : (term51 _124523 i k) = False.
Proof. exact (prop_ext (fun h2 : term51 _124523 i k => @lem6450267 _124523 i k h1) (fun h2 : False => @lem6449628 _124523 i k h1)). Qed.
Lemma lem6450269 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term51 _124523 i k) : False.
Proof. exact (EQ_MP (@lem6450268 _124523 i k h1) (@lem6449628 _124523 i k h1)). Qed.
Lemma lem6450270 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term50 _124523 i k.
Proof. exact (fun h0 : term51 _124523 i k => @lem6450269 _124523 i k h0). Qed.
Lemma lem6450271 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term48 _124523 i k.
Proof. exact (EQ_MP (@lem6449627 _124523 i k) (@lem6450270 _124523 i k)). Qed.
Lemma lem6450272 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term28 _124523 i k.
Proof. exact (EQ_MP (@lem6449623 _124523 i k) (@lem6450271 _124523 i k)). Qed.
Lemma lem6450273 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term27 _124523 i k.
Proof. exact (EQ_MP (@lem6449555 _124523 i k) (@lem6450272 _124523 i k)). Qed.
Lemma lem6450274 {A : Type'} (P : A -> Prop) : term101 A P.
Proof. exact (@lem10660 A P). Qed.
Lemma lem6450275 {A : Type'} (P : A -> Prop) : (term101 A P) = ((term102 A P) = (term103 A P)).
Proof. exact (eq_refl (term101 A P)). Qed.
Lemma lem6450277 {A : Type'} (h1 : term104 A) : term104 A.
Proof. exact (h1). Qed.
Lemma lem6450278 {A : Type'} (s : A -> Prop) (h1 : term104 A) : term105 A s.
Proof. exact (@lem6450277 A h1 s). Qed.
Lemma lem6450279 {A : Type'} (s : A -> Prop) : (term105 A s) = (term106 A s).
Proof. exact (eq_refl (term105 A s)). Qed.
Lemma lem6450280 {A : Type'} (s : A -> Prop) (h1 : term104 A) : term106 A s.
Proof. exact (EQ_MP (@lem6450279 A s) (@lem6450278 A s h1)). Qed.
Lemma lem6450281 {A : Type'} (s : A -> Prop) (t : A -> Prop) (h1 : term104 A) : term107 A s t.
Proof. exact (@lem6450280 A s h1 t). Qed.
Lemma lem6450282 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term107 A s t) = (term108 A t s).
Proof. exact (eq_refl (term107 A s t)). Qed.
Lemma lem6450283 {A : Type'} (t : A -> Prop) (s : A -> Prop) (h1 : term104 A) : term108 A t s.
Proof. exact (EQ_MP (@lem6450282 A t s) (@lem6450281 A s t h1)). Qed.
Lemma lem6450284 {A : Type'} (s : A -> Prop) (t : A -> Prop) (h1 : term109 A s t) : term109 A s t.
Proof. exact (h1). Qed.
Lemma lem6450285 {A : Type'} (s : A -> Prop) (t : A -> Prop) (h1 : term104 A) (h2 : term109 A s t) : @FINITE A s.
Proof. exact (@lem6450283 A t s h1 (@lem6450284 A s t h2)). Qed.
Lemma lem6450286 {A : Type'} (s : A -> Prop) (t : A -> Prop) (h1 : term109 A s t) : term110 A s.
Proof. exact (fun h0 : term104 A => @lem6450285 A s t h0 h1). Qed.
Lemma lem6450287 {A : Type'} (s : A -> Prop) (h1 : term111 A s) : term111 A s.
Proof. exact (h1). Qed.
Lemma lem6450288 {A : Type'} (s : A -> Prop) (h1 : term111 A s) : term110 A s.
Proof. exact (ex_elim (@lem6450287 A s h1) (fun t : A -> Prop => fun h0 : term112 A s t => @lem6450286 A s t h0)). Qed.
Lemma lem6450289 {A : Type'} (h1 : term104 A) : term104 A.
Proof. exact (h1). Qed.
Lemma lem6450290 {A : Type'} (s : A -> Prop) (h1 : term104 A) (h2 : term111 A s) : @FINITE A s.
Proof. exact (@lem6450288 A s h2 (@lem6450289 A h1)). Qed.
Lemma lem6450291 {A : Type'} (s : A -> Prop) (h1 : term104 A) : term113 A s.
Proof. exact (fun h0 : term111 A s => @lem6450290 A s h1 h0). Qed.
Lemma lem6450292 {A : Type'} (h1 : term104 A) : term114 A.
Proof. exact (fun s : A -> Prop => @lem6450291 A s h1). Qed.
Lemma lem6450293 {A : Type'} : term115 A.
Proof. exact (fun h0 : term104 A => @lem6450292 A h0). Qed.
Lemma lem6450294 {A : Type'} : term114 A.
Proof. exact (@lem6450293 A (@lem3599924 A)). Qed.
Lemma lem6450295 {A : Type'} (s : A -> Prop) : term116 A s.
Proof. exact (@lem6450294 A s). Qed.
Lemma lem6450296 {A : Type'} (s : A -> Prop) : (term116 A s) = (term113 A s).
Proof. exact (eq_refl (term116 A s)). Qed.
Lemma lem6450309 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6450310 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term117 _124629 p q x y z) = (term118 _124629 p q x y z).
Proof. exact (@lem6450309 (term117 _124629 p q x y z)). Qed.
Lemma lem6450311 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term118 _124629 p q x y z) = (term117 _124629 p q x y z).
Proof. exact (SYM (@lem6450310 _124629 p q x y z)). Qed.
Lemma lem6450312 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term119 _124629 p q x y z) : term119 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450315 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term118 _124629 p q x y z) : term118 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450316 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term120 _124629 p q x y z.
Proof. exact (fun h0 : term118 _124629 p q x y z => @lem6450315 _124629 p q x y z h0). Qed.
Lemma lem6450317 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term120 _124629 p q x y z) : term120 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450318 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term118 _124629 p q x y z) : term118 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450319 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term118 _124629 p q x y z) (h2 : term120 _124629 p q x y z) : term118 _124629 p q x y z.
Proof. exact (@lem6450317 _124629 p q x y z h2 (@lem6450318 _124629 p q x y z h1)). Qed.
Lemma lem6450320 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term118 _124629 p q x y z) : term121 _124629 p q x y z.
Proof. exact (fun h0 : term120 _124629 p q x y z => @lem6450319 _124629 p q x y z h1 h0). Qed.
Lemma lem6450321 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term120 _124629 p q x y z) : term120 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450322 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term118 _124629 p q x y z) (h2 : term120 _124629 p q x y z) : term118 _124629 p q x y z.
Proof. exact (@lem6450320 _124629 p q x y z h1 (@lem6450321 _124629 p q x y z h2)). Qed.
Lemma lem6450323 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term120 _124629 p q x y z) : term120 _124629 p q x y z.
Proof. exact (fun h0 : term118 _124629 p q x y z => @lem6450322 _124629 p q x y z h0 h1). Qed.
Lemma lem6450324 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term122 _124629 p q x y z.
Proof. exact (fun h0 : term120 _124629 p q x y z => @lem6450323 _124629 p q x y z h0). Qed.
Lemma lem6450327 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term120 _124629 p q x y z.
Proof. exact (@lem6450324 _124629 p q x y z (@lem6450316 _124629 p q x y z)). Qed.
Lemma lem6450328 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term120 _124629 p q x y z.
Proof. exact (@lem6450327 _124629 p q x y z). Qed.
Lemma lem6450350 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6450351 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term118 _124629 p q x y z) = (term123 _124629 p q x y z).
Proof. exact (@lem6450350 (term119 _124629 p q x y z)). Qed.
Lemma lem6450353 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6450354 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term123 _124629 p q x y z) = (term117 _124629 p q x y z).
Proof. exact (@lem6450353 (term117 _124629 p q x y z)). Qed.
Lemma lem6450357 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term118 _124629 p q x y z) = (term117 _124629 p q x y z).
Proof. exact (TRANS (@lem6450351 _124629 p q x y z) (@lem6450354 _124629 p q x y z)). Qed.
Lemma lem6450364 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term124 _124629 q x y z) = (term125 _124629 q x y z).
Proof. exact (fun_ext (fun p : Prop => @lem6450357 _124629 p q x y z)). Qed.
Lemma lem6450365 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450366 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term126 _124629 q x y z) = (term127 _124629 q x y z).
Proof. exact (MK_COMB (@lem6450365) (@lem6450364 _124629 q x y z)). Qed.
Lemma lem6450371 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term128 _124629 x y z) = (term129 _124629 x y z).
Proof. exact (fun_ext (fun q : Prop => @lem6450366 _124629 q x y z)). Qed.
Lemma lem6450372 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450373 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term130 _124629 x y z) = (term131 _124629 x y z).
Proof. exact (MK_COMB (@lem6450372) (@lem6450371 _124629 x y z)). Qed.
Lemma lem6450378 {_124629 : Type'} (y : _124629) (z : _124629) : (term132 _124629 y z) = (term133 _124629 y z).
Proof. exact (fun_ext (fun x : _124629 => @lem6450373 _124629 x y z)). Qed.
Lemma lem6450379 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450380 {_124629 : Type'} (y : _124629) (z : _124629) : (term134 _124629 y z) = (term135 _124629 y z).
Proof. exact (MK_COMB (@lem6450379 _124629) (@lem6450378 _124629 y z)). Qed.
Lemma lem6450385 {_124629 : Type'} (z : _124629) : (term136 _124629 z) = (term137 _124629 z).
Proof. exact (fun_ext (fun y : _124629 => @lem6450380 _124629 y z)). Qed.
Lemma lem6450386 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450387 {_124629 : Type'} (z : _124629) : (term138 _124629 z) = (term139 _124629 z).
Proof. exact (MK_COMB (@lem6450386 _124629) (@lem6450385 _124629 z)). Qed.
Lemma lem6450392 {_124629 : Type'} : (term140 _124629) = (term141 _124629).
Proof. exact (fun_ext (fun z : _124629 => @lem6450387 _124629 z)). Qed.
Lemma lem6450393 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450402 {_124629 : Type'} : (term142 _124629) = (term143 _124629).
Proof. exact (MK_COMB (@lem6450393 _124629) (@lem6450392 _124629)). Qed.
Lemma lem6450412 (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (p /\ q) = False.
Proof. exact (h1). Qed.
Lemma lem6450413 {_124629 : Type'} : (@COND _124629) = (@COND _124629).
Proof. exact (eq_refl (@COND _124629)). Qed.
Lemma lem6450414 {_124629 : Type'} (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term144 _124629 p q) = (@COND _124629 False).
Proof. exact (MK_COMB (@lem6450413 _124629) (@lem6450412 p q h1)). Qed.
Lemma lem6450415 {_124629 : Type'} (x : _124629) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6450416 {_124629 : Type'} (x : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term145 _124629 p q x) = (@COND _124629 False x).
Proof. exact (MK_COMB (@lem6450414 _124629 p q h1) (@lem6450415 _124629 x)). Qed.
Lemma lem6450417 {_124629 : Type'} (y : _124629) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6450418 {_124629 : Type'} (x : _124629) (y : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term146 _124629 p q x y) = (@COND _124629 False x y).
Proof. exact (MK_COMB (@lem6450416 _124629 x p q h1) (@lem6450417 _124629 y)). Qed.
Lemma lem6450420 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6450421 {_124629 : Type'} (t1 : _124629) (t2 : _124629) : (@COND _124629 False t1 t2) = t2.
Proof. exact (@lem6450420 _124629 t1 t2). Qed.
Lemma lem6450422 {_124629 : Type'} (x : _124629) (y : _124629) : (@COND _124629 False x y) = y.
Proof. exact (@lem6450421 _124629 x y). Qed.
Lemma lem6450423 {_124629 : Type'} (x : _124629) (y : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term146 _124629 p q x y) = y.
Proof. exact (TRANS (@lem6450418 _124629 x y p q h1) (@lem6450422 _124629 x y)). Qed.
Lemma lem6450424 {_124629 : Type'} : (@eq _124629) = (@eq _124629).
Proof. exact (eq_refl (@eq _124629)). Qed.
Lemma lem6450425 {_124629 : Type'} (x : _124629) (y : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term147 _124629 p q x y) = (@eq _124629 y).
Proof. exact (MK_COMB (@lem6450424 _124629) (@lem6450423 _124629 x y p q h1)). Qed.
Lemma lem6450426 {_124629 : Type'} (z : _124629) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6450427 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : ((term146 _124629 p q x y) = z) = (y = z).
Proof. exact (MK_COMB (@lem6450425 _124629 x y p q h1) (@lem6450426 _124629 z)). Qed.
Lemma lem6450430 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (z : _124629) : (term148 _124629 q p x z) = (term148 _124629 q p x z).
Proof. exact (eq_refl (term148 _124629 q p x z)). Qed.
Lemma lem6450431 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = False) : (term117 _124629 p q x y z) = (term149 _124629 q p x y z).
Proof. exact (MK_COMB (@lem6450430 _124629 q p x z) (@lem6450427 _124629 x y z p q h1)). Qed.
Lemma lem6450434 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (y : _124629) (z : _124629) : term150 _124629 q p x y z.
Proof. exact (fun h0 : (p /\ q) = False => @lem6450431 _124629 x y z p q h0). Qed.
Lemma lem6450442 (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (p /\ q) = True.
Proof. exact (h1). Qed.
Lemma lem6450443 {_124629 : Type'} : (@COND _124629) = (@COND _124629).
Proof. exact (eq_refl (@COND _124629)). Qed.
Lemma lem6450444 {_124629 : Type'} (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term144 _124629 p q) = (@COND _124629 True).
Proof. exact (MK_COMB (@lem6450443 _124629) (@lem6450442 p q h1)). Qed.
Lemma lem6450445 {_124629 : Type'} (x : _124629) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6450446 {_124629 : Type'} (x : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term145 _124629 p q x) = (@COND _124629 True x).
Proof. exact (MK_COMB (@lem6450444 _124629 p q h1) (@lem6450445 _124629 x)). Qed.
Lemma lem6450447 {_124629 : Type'} (y : _124629) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6450448 {_124629 : Type'} (x : _124629) (y : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term146 _124629 p q x y) = (@COND _124629 True x y).
Proof. exact (MK_COMB (@lem6450446 _124629 x p q h1) (@lem6450447 _124629 y)). Qed.
Lemma lem6450450 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6450451 {_124629 : Type'} (t2 : _124629) (t1 : _124629) : (@COND _124629 True t1 t2) = t1.
Proof. exact (@lem6450450 _124629 t2 t1). Qed.
Lemma lem6450452 {_124629 : Type'} (y : _124629) (x : _124629) : (@COND _124629 True x y) = x.
Proof. exact (@lem6450451 _124629 y x). Qed.
Lemma lem6450453 {_124629 : Type'} (y : _124629) (x : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term146 _124629 p q x y) = x.
Proof. exact (TRANS (@lem6450448 _124629 x y p q h1) (@lem6450452 _124629 y x)). Qed.
Lemma lem6450454 {_124629 : Type'} : (@eq _124629) = (@eq _124629).
Proof. exact (eq_refl (@eq _124629)). Qed.
Lemma lem6450455 {_124629 : Type'} (y : _124629) (x : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term147 _124629 p q x y) = (@eq _124629 x).
Proof. exact (MK_COMB (@lem6450454 _124629) (@lem6450453 _124629 y x p q h1)). Qed.
Lemma lem6450456 {_124629 : Type'} (z : _124629) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6450457 {_124629 : Type'} (y : _124629) (x : _124629) (z : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : ((term146 _124629 p q x y) = z) = (x = z).
Proof. exact (MK_COMB (@lem6450455 _124629 y x p q h1) (@lem6450456 _124629 z)). Qed.
Lemma lem6450460 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (z : _124629) : (term148 _124629 q p x z) = (term148 _124629 q p x z).
Proof. exact (eq_refl (term148 _124629 q p x z)). Qed.
Lemma lem6450461 {_124629 : Type'} (y : _124629) (x : _124629) (z : _124629) (p : Prop) (q : Prop) (h1 : (p /\ q) = True) : (term117 _124629 p q x y z) = (term151 _124629 q p x z).
Proof. exact (MK_COMB (@lem6450460 _124629 q p x z) (@lem6450457 _124629 y x z p q h1)). Qed.
Lemma lem6450464 {_124629 : Type'} (y : _124629) (q : Prop) (p : Prop) (x : _124629) (z : _124629) : term152 _124629 y q p x z.
Proof. exact (fun h0 : (p /\ q) = True => @lem6450461 _124629 y x z p q h0). Qed.
Lemma lem6450465 {_124629 : Type'} (y : _124629) (q : Prop) (p : Prop) (x : _124629) (z : _124629) : term153 _124629 y q p x z.
Proof. exact (conj (@lem6450434 _124629 q p x y z) (@lem6450464 _124629 y q p x z)). Qed.
Lemma lem6450467 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term154 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem6450468 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (y : _124629) (z : _124629) : term155 _124629 q p x y z.
Proof. exact (@lem6450467 (term117 _124629 p q x y z) (term151 _124629 q p x z) (p /\ q) (term149 _124629 q p x y z)). Qed.
Lemma lem6450533 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (y : _124629) (z : _124629) : (term117 _124629 p q x y z) = (term156 _124629 q p x y z).
Proof. exact (@lem6450468 _124629 q p x y z (@lem6450465 _124629 y q p x z)). Qed.
Lemma lem6450534 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term125 _124629 q x y z) = (term157 _124629 q x y z).
Proof. exact (fun_ext (fun p : Prop => @lem6450533 _124629 q p x y z)). Qed.
Lemma lem6450535 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450536 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term127 _124629 q x y z) = (term158 _124629 q x y z).
Proof. exact (MK_COMB (@lem6450535) (@lem6450534 _124629 q x y z)). Qed.
Lemma lem6450537 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term129 _124629 x y z) = (term159 _124629 x y z).
Proof. exact (fun_ext (fun q : Prop => @lem6450536 _124629 q x y z)). Qed.
Lemma lem6450538 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450539 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term131 _124629 x y z) = (term160 _124629 x y z).
Proof. exact (MK_COMB (@lem6450538) (@lem6450537 _124629 x y z)). Qed.
Lemma lem6450540 {_124629 : Type'} (y : _124629) (z : _124629) : (term133 _124629 y z) = (term161 _124629 y z).
Proof. exact (fun_ext (fun x : _124629 => @lem6450539 _124629 x y z)). Qed.
Lemma lem6450541 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450542 {_124629 : Type'} (y : _124629) (z : _124629) : (term135 _124629 y z) = (term162 _124629 y z).
Proof. exact (MK_COMB (@lem6450541 _124629) (@lem6450540 _124629 y z)). Qed.
Lemma lem6450543 {_124629 : Type'} (z : _124629) : (term137 _124629 z) = (term163 _124629 z).
Proof. exact (fun_ext (fun y : _124629 => @lem6450542 _124629 y z)). Qed.
Lemma lem6450544 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450545 {_124629 : Type'} (z : _124629) : (term139 _124629 z) = (term164 _124629 z).
Proof. exact (MK_COMB (@lem6450544 _124629) (@lem6450543 _124629 z)). Qed.
Lemma lem6450546 {_124629 : Type'} : (term141 _124629) = (term165 _124629).
Proof. exact (fun_ext (fun z : _124629 => @lem6450545 _124629 z)). Qed.
Lemma lem6450547 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450548 {_124629 : Type'} : (term143 _124629) = (term166 _124629).
Proof. exact (MK_COMB (@lem6450547 _124629) (@lem6450546 _124629)). Qed.
Lemma lem6450549 {_124629 : Type'} : (term142 _124629) = (term166 _124629).
Proof. exact (TRANS (@lem6450402 _124629) (@lem6450548 _124629)). Qed.
Lemma lem6450573 (P : Prop -> Prop) : (term167 P) = (term168 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6450574 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term169 _124629 x y z) = (term170 _124629 x y z).
Proof. exact (@lem6450573 (term159 _124629 x y z)). Qed.
Lemma lem6450575 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term171 _124629 x y z q) = (term158 _124629 q x y z).
Proof. exact (eq_refl (term171 _124629 x y z q)). Qed.
Lemma lem6450576 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term172 _124629 x y z) = (term159 _124629 x y z).
Proof. exact (fun_ext (fun q : Prop => @lem6450575 _124629 q x y z)). Qed.
Lemma lem6450577 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450578 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term169 _124629 x y z) = (term160 _124629 x y z).
Proof. exact (MK_COMB (@lem6450577) (@lem6450576 _124629 x y z)). Qed.
Lemma lem6450579 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6450580 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term173 _124629 x y z) = (term174 _124629 x y z).
Proof. exact (MK_COMB (@lem6450579) (@lem6450578 _124629 x y z)). Qed.
Lemma lem6450581 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term175 _124629 x y z) = (term176 _124629 x y z).
Proof. exact (eq_refl (term175 _124629 x y z)). Qed.
Lemma lem6450582 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450583 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term177 _124629 x y z) = (term178 _124629 x y z).
Proof. exact (MK_COMB (@lem6450582) (@lem6450581 _124629 x y z)). Qed.
Lemma lem6450584 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term179 _124629 x y z) = (term180 _124629 x y z).
Proof. exact (eq_refl (term179 _124629 x y z)). Qed.
Lemma lem6450585 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term170 _124629 x y z) = (term181 _124629 x y z).
Proof. exact (MK_COMB (@lem6450583 _124629 x y z) (@lem6450584 _124629 x y z)). Qed.
Lemma lem6450586 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : ((term169 _124629 x y z) = (term170 _124629 x y z)) = ((term160 _124629 x y z) = (term181 _124629 x y z)).
Proof. exact (MK_COMB (@lem6450580 _124629 x y z) (@lem6450585 _124629 x y z)). Qed.
Lemma lem6450587 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term160 _124629 x y z) = (term181 _124629 x y z).
Proof. exact (EQ_MP (@lem6450586 _124629 x y z) (@lem6450574 _124629 x y z)). Qed.
Lemma lem6450595 (P : Prop -> Prop) : (term167 P) = (term168 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6450596 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term182 _124629 x y z) = (term183 _124629 x y z).
Proof. exact (@lem6450595 (term184 _124629 x y z)). Qed.
Lemma lem6450597 {_124629 : Type'} (p : Prop) (x : _124629) (y : _124629) (z : _124629) : (term185 _124629 x y z p) = (term186 _124629 p x y z).
Proof. exact (eq_refl (term185 _124629 x y z p)). Qed.
Lemma lem6450598 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term187 _124629 x y z) = (term184 _124629 x y z).
Proof. exact (fun_ext (fun p : Prop => @lem6450597 _124629 p x y z)). Qed.
Lemma lem6450599 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450600 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term182 _124629 x y z) = (term176 _124629 x y z).
Proof. exact (MK_COMB (@lem6450599) (@lem6450598 _124629 x y z)). Qed.
Lemma lem6450601 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6450602 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term188 _124629 x y z) = (term189 _124629 x y z).
Proof. exact (MK_COMB (@lem6450601) (@lem6450600 _124629 x y z)). Qed.
Lemma lem6450603 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term190 _124629 x y z) = (term191 _124629 x y z).
Proof. exact (eq_refl (term190 _124629 x y z)). Qed.
Lemma lem6450604 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450605 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term192 _124629 x y z) = (term193 _124629 x y z).
Proof. exact (MK_COMB (@lem6450604) (@lem6450603 _124629 x y z)). Qed.
Lemma lem6450606 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term194 _124629 x y z) = (term195 _124629 x y z).
Proof. exact (eq_refl (term194 _124629 x y z)). Qed.
Lemma lem6450607 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term183 _124629 x y z) = (term196 _124629 x y z).
Proof. exact (MK_COMB (@lem6450605 _124629 x y z) (@lem6450606 _124629 x y z)). Qed.
Lemma lem6450608 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : ((term182 _124629 x y z) = (term183 _124629 x y z)) = ((term176 _124629 x y z) = (term196 _124629 x y z)).
Proof. exact (MK_COMB (@lem6450602 _124629 x y z) (@lem6450607 _124629 x y z)). Qed.
Lemma lem6450609 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term176 _124629 x y z) = (term196 _124629 x y z).
Proof. exact (EQ_MP (@lem6450608 _124629 x y z) (@lem6450596 _124629 x y z)). Qed.
Lemma lem6450617 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450618 : (True /\ True) = True.
Proof. exact (@lem6450617 True). Qed.
Lemma lem6450619 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6450620 : term197 = (~ True).
Proof. exact (MK_COMB (@lem6450619) (@lem6450618)). Qed.
Lemma lem6450622 : (~ True) = False.
Proof. exact (proj1 (@lem21780)). Qed.
Lemma lem6450623 : term197 = False.
Proof. exact (TRANS (@lem6450620) (@lem6450622)). Qed.
Lemma lem6450624 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450625 : term198 = (or False).
Proof. exact (MK_COMB (@lem6450624) (@lem6450623)). Qed.
Lemma lem6450629 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450630 {_124629 : Type'} (x : _124629) (z : _124629) : (term199 _124629 x z) = (term200 _124629 x z).
Proof. exact (@lem6450629 (term200 _124629 x z)). Qed.
Lemma lem6450632 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450633 {_124629 : Type'} (x : _124629) (z : _124629) : (term200 _124629 x z) = (x = z).
Proof. exact (@lem6450632 (x = z)). Qed.
Lemma lem6450634 {_124629 : Type'} (x : _124629) (z : _124629) : (term199 _124629 x z) = (x = z).
Proof. exact (TRANS (@lem6450630 _124629 x z) (@lem6450633 _124629 x z)). Qed.
Lemma lem6450635 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450636 {_124629 : Type'} (x : _124629) (z : _124629) : (term201 _124629 x z) = (term202 _124629 x z).
Proof. exact (MK_COMB (@lem6450635) (@lem6450634 _124629 x z)). Qed.
Lemma lem6450637 {_124629 : Type'} (x : _124629) (z : _124629) : (x = z) = (x = z).
Proof. exact (eq_refl (x = z)). Qed.
Lemma lem6450638 {_124629 : Type'} (x : _124629) (z : _124629) : (term203 _124629 x z) = (term204 _124629 x z).
Proof. exact (MK_COMB (@lem6450636 _124629 x z) (@lem6450637 _124629 x z)). Qed.
Lemma lem6450640 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem21774 t)). Qed.
Lemma lem6450641 {_124629 : Type'} (x : _124629) (z : _124629) : (term204 _124629 x z) = True.
Proof. exact (@lem6450640 (x = z)). Qed.
Lemma lem6450642 {_124629 : Type'} (x : _124629) (z : _124629) : (term203 _124629 x z) = True.
Proof. exact (TRANS (@lem6450638 _124629 x z) (@lem6450641 _124629 x z)). Qed.
Lemma lem6450643 {_124629 : Type'} (x : _124629) (z : _124629) : (term205 _124629 x z) = (False \/ True).
Proof. exact (MK_COMB (@lem6450625) (@lem6450642 _124629 x z)). Qed.
Lemma lem6450645 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem21751 t)). Qed.
Lemma lem6450646 : (False \/ True) = True.
Proof. exact (@lem6450645 True). Qed.
Lemma lem6450647 {_124629 : Type'} (x : _124629) (z : _124629) : (term205 _124629 x z) = True.
Proof. exact (TRANS (@lem6450643 _124629 x z) (@lem6450646)). Qed.
Lemma lem6450648 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450649 {_124629 : Type'} (x : _124629) (z : _124629) : (term206 _124629 x z) = (and True).
Proof. exact (MK_COMB (@lem6450648) (@lem6450647 _124629 x z)). Qed.
Lemma lem6450653 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450654 : (True /\ True) = True.
Proof. exact (@lem6450653 True). Qed.
Lemma lem6450655 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450656 : term207 = (or True).
Proof. exact (MK_COMB (@lem6450655) (@lem6450654)). Qed.
Lemma lem6450660 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450661 {_124629 : Type'} (x : _124629) (z : _124629) : (term199 _124629 x z) = (term200 _124629 x z).
Proof. exact (@lem6450660 (term200 _124629 x z)). Qed.
Lemma lem6450663 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450664 {_124629 : Type'} (x : _124629) (z : _124629) : (term200 _124629 x z) = (x = z).
Proof. exact (@lem6450663 (x = z)). Qed.
Lemma lem6450665 {_124629 : Type'} (x : _124629) (z : _124629) : (term199 _124629 x z) = (x = z).
Proof. exact (TRANS (@lem6450661 _124629 x z) (@lem6450664 _124629 x z)). Qed.
Lemma lem6450666 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450667 {_124629 : Type'} (x : _124629) (z : _124629) : (term201 _124629 x z) = (term202 _124629 x z).
Proof. exact (MK_COMB (@lem6450666) (@lem6450665 _124629 x z)). Qed.
Lemma lem6450668 {_124629 : Type'} (y : _124629) (z : _124629) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6450669 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term208 _124629 x y z) = (term209 _124629 x y z).
Proof. exact (MK_COMB (@lem6450667 _124629 x z) (@lem6450668 _124629 y z)). Qed.
Lemma lem6450672 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term210 _124629 x y z) = (term211 _124629 x y z).
Proof. exact (MK_COMB (@lem6450656) (@lem6450669 _124629 x y z)). Qed.
Lemma lem6450674 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem21749 t)). Qed.
Lemma lem6450675 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term211 _124629 x y z) = True.
Proof. exact (@lem6450674 (term209 _124629 x y z)). Qed.
Lemma lem6450676 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term210 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450672 _124629 x y z) (@lem6450675 _124629 x y z)). Qed.
Lemma lem6450677 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term191 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450649 _124629 x z) (@lem6450676 _124629 x y z)). Qed.
Lemma lem6450679 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450680 : (True /\ True) = True.
Proof. exact (@lem6450679 True). Qed.
Lemma lem6450681 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term191 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450677 _124629 x y z) (@lem6450680)). Qed.
Lemma lem6450682 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450683 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term193 _124629 x y z) = (and True).
Proof. exact (MK_COMB (@lem6450682) (@lem6450681 _124629 x y z)). Qed.
Lemma lem6450689 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450690 : (False /\ True) = False.
Proof. exact (@lem6450689 True). Qed.
Lemma lem6450691 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6450692 : term212 = (~ False).
Proof. exact (MK_COMB (@lem6450691) (@lem6450690)). Qed.
Lemma lem6450694 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6450695 : term212 = True.
Proof. exact (TRANS (@lem6450692) (@lem6450694)). Qed.
Lemma lem6450696 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450697 : term213 = (or True).
Proof. exact (MK_COMB (@lem6450696) (@lem6450695)). Qed.
Lemma lem6450701 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450702 {_124629 : Type'} (x : _124629) (z : _124629) : (term214 _124629 x z) = (term215 _124629 x z).
Proof. exact (@lem6450701 (term215 _124629 x z)). Qed.
Lemma lem6450704 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450705 {_124629 : Type'} (x : _124629) (z : _124629) : (term215 _124629 x z) = False.
Proof. exact (@lem6450704 (x = z)). Qed.
Lemma lem6450706 {_124629 : Type'} (x : _124629) (z : _124629) : (term214 _124629 x z) = False.
Proof. exact (TRANS (@lem6450702 _124629 x z) (@lem6450705 _124629 x z)). Qed.
Lemma lem6450707 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450708 {_124629 : Type'} (x : _124629) (z : _124629) : (term216 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450707) (@lem6450706 _124629 x z)). Qed.
Lemma lem6450709 {_124629 : Type'} (x : _124629) (z : _124629) : (x = z) = (x = z).
Proof. exact (eq_refl (x = z)). Qed.
Lemma lem6450710 {_124629 : Type'} (x : _124629) (z : _124629) : (term217 _124629 x z) = (term218 _124629 x z).
Proof. exact (MK_COMB (@lem6450708 _124629 x z) (@lem6450709 _124629 x z)). Qed.
Lemma lem6450712 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450713 {_124629 : Type'} (x : _124629) (z : _124629) : (term218 _124629 x z) = True.
Proof. exact (@lem6450712 (x = z)). Qed.
Lemma lem6450714 {_124629 : Type'} (x : _124629) (z : _124629) : (term217 _124629 x z) = True.
Proof. exact (TRANS (@lem6450710 _124629 x z) (@lem6450713 _124629 x z)). Qed.
Lemma lem6450715 {_124629 : Type'} (x : _124629) (z : _124629) : (term219 _124629 x z) = (True \/ True).
Proof. exact (MK_COMB (@lem6450697) (@lem6450714 _124629 x z)). Qed.
Lemma lem6450717 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem21749 t)). Qed.
Lemma lem6450718 : (True \/ True) = True.
Proof. exact (@lem6450717 True). Qed.
Lemma lem6450719 {_124629 : Type'} (x : _124629) (z : _124629) : (term219 _124629 x z) = True.
Proof. exact (TRANS (@lem6450715 _124629 x z) (@lem6450718)). Qed.
Lemma lem6450720 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450721 {_124629 : Type'} (x : _124629) (z : _124629) : (term220 _124629 x z) = (and True).
Proof. exact (MK_COMB (@lem6450720) (@lem6450719 _124629 x z)). Qed.
Lemma lem6450725 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450726 : (False /\ True) = False.
Proof. exact (@lem6450725 True). Qed.
Lemma lem6450727 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450728 : term221 = (or False).
Proof. exact (MK_COMB (@lem6450727) (@lem6450726)). Qed.
Lemma lem6450732 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450733 {_124629 : Type'} (x : _124629) (z : _124629) : (term214 _124629 x z) = (term215 _124629 x z).
Proof. exact (@lem6450732 (term215 _124629 x z)). Qed.
Lemma lem6450735 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450736 {_124629 : Type'} (x : _124629) (z : _124629) : (term215 _124629 x z) = False.
Proof. exact (@lem6450735 (x = z)). Qed.
Lemma lem6450737 {_124629 : Type'} (x : _124629) (z : _124629) : (term214 _124629 x z) = False.
Proof. exact (TRANS (@lem6450733 _124629 x z) (@lem6450736 _124629 x z)). Qed.
Lemma lem6450738 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450739 {_124629 : Type'} (x : _124629) (z : _124629) : (term216 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450738) (@lem6450737 _124629 x z)). Qed.
Lemma lem6450740 {_124629 : Type'} (y : _124629) (z : _124629) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6450741 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term222 _124629 x y z) = (term218 _124629 y z).
Proof. exact (MK_COMB (@lem6450739 _124629 x z) (@lem6450740 _124629 y z)). Qed.
Lemma lem6450743 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450744 {_124629 : Type'} (y : _124629) (z : _124629) : (term218 _124629 y z) = True.
Proof. exact (@lem6450743 (y = z)). Qed.
Lemma lem6450745 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term222 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450741 _124629 x y z) (@lem6450744 _124629 y z)). Qed.
Lemma lem6450746 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term223 _124629 x y z) = (False \/ True).
Proof. exact (MK_COMB (@lem6450728) (@lem6450745 _124629 x y z)). Qed.
Lemma lem6450748 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem21751 t)). Qed.
Lemma lem6450749 : (False \/ True) = True.
Proof. exact (@lem6450748 True). Qed.
Lemma lem6450750 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term223 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450746 _124629 x y z) (@lem6450749)). Qed.
Lemma lem6450751 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term195 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450721 _124629 x z) (@lem6450750 _124629 x y z)). Qed.
Lemma lem6450753 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450754 : (True /\ True) = True.
Proof. exact (@lem6450753 True). Qed.
Lemma lem6450755 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term195 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450751 _124629 x y z) (@lem6450754)). Qed.
Lemma lem6450756 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term196 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450683 _124629 x y z) (@lem6450755 _124629 x y z)). Qed.
Lemma lem6450758 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450759 : (True /\ True) = True.
Proof. exact (@lem6450758 True). Qed.
Lemma lem6450760 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term196 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450756 _124629 x y z) (@lem6450759)). Qed.
Lemma lem6450761 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term176 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450609 _124629 x y z) (@lem6450760 _124629 x y z)). Qed.
Lemma lem6450762 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450763 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term178 _124629 x y z) = (and True).
Proof. exact (MK_COMB (@lem6450762) (@lem6450761 _124629 x y z)). Qed.
Lemma lem6450769 (P : Prop -> Prop) : (term167 P) = (term168 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6450770 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term224 _124629 x y z) = (term225 _124629 x y z).
Proof. exact (@lem6450769 (term226 _124629 x y z)). Qed.
Lemma lem6450771 {_124629 : Type'} (p : Prop) (x : _124629) (y : _124629) (z : _124629) : (term227 _124629 x y z p) = (term228 _124629 p x y z).
Proof. exact (eq_refl (term227 _124629 x y z p)). Qed.
Lemma lem6450772 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term229 _124629 x y z) = (term226 _124629 x y z).
Proof. exact (fun_ext (fun p : Prop => @lem6450771 _124629 p x y z)). Qed.
Lemma lem6450773 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6450774 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term224 _124629 x y z) = (term180 _124629 x y z).
Proof. exact (MK_COMB (@lem6450773) (@lem6450772 _124629 x y z)). Qed.
Lemma lem6450775 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6450776 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term230 _124629 x y z) = (term231 _124629 x y z).
Proof. exact (MK_COMB (@lem6450775) (@lem6450774 _124629 x y z)). Qed.
Lemma lem6450777 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term232 _124629 x y z) = (term233 _124629 x y z).
Proof. exact (eq_refl (term232 _124629 x y z)). Qed.
Lemma lem6450778 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450779 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term234 _124629 x y z) = (term235 _124629 x y z).
Proof. exact (MK_COMB (@lem6450778) (@lem6450777 _124629 x y z)). Qed.
Lemma lem6450780 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term236 _124629 x y z) = (term237 _124629 x y z).
Proof. exact (eq_refl (term236 _124629 x y z)). Qed.
Lemma lem6450781 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term225 _124629 x y z) = (term238 _124629 x y z).
Proof. exact (MK_COMB (@lem6450779 _124629 x y z) (@lem6450780 _124629 x y z)). Qed.
Lemma lem6450782 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : ((term224 _124629 x y z) = (term225 _124629 x y z)) = ((term180 _124629 x y z) = (term238 _124629 x y z)).
Proof. exact (MK_COMB (@lem6450776 _124629 x y z) (@lem6450781 _124629 x y z)). Qed.
Lemma lem6450783 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term180 _124629 x y z) = (term238 _124629 x y z).
Proof. exact (EQ_MP (@lem6450782 _124629 x y z) (@lem6450770 _124629 x y z)). Qed.
Lemma lem6450791 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450792 : (True /\ False) = False.
Proof. exact (@lem6450791 False). Qed.
Lemma lem6450793 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6450794 : term239 = (~ False).
Proof. exact (MK_COMB (@lem6450793) (@lem6450792)). Qed.
Lemma lem6450796 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6450797 : term239 = True.
Proof. exact (TRANS (@lem6450794) (@lem6450796)). Qed.
Lemma lem6450798 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450799 : term240 = (or True).
Proof. exact (MK_COMB (@lem6450798) (@lem6450797)). Qed.
Lemma lem6450803 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450804 {_124629 : Type'} (x : _124629) (z : _124629) : (term241 _124629 x z) = False.
Proof. exact (@lem6450803 (term200 _124629 x z)). Qed.
Lemma lem6450805 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450806 {_124629 : Type'} (x : _124629) (z : _124629) : (term242 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450805) (@lem6450804 _124629 x z)). Qed.
Lemma lem6450807 {_124629 : Type'} (x : _124629) (z : _124629) : (x = z) = (x = z).
Proof. exact (eq_refl (x = z)). Qed.
Lemma lem6450808 {_124629 : Type'} (x : _124629) (z : _124629) : (term243 _124629 x z) = (term218 _124629 x z).
Proof. exact (MK_COMB (@lem6450806 _124629 x z) (@lem6450807 _124629 x z)). Qed.
Lemma lem6450810 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450811 {_124629 : Type'} (x : _124629) (z : _124629) : (term218 _124629 x z) = True.
Proof. exact (@lem6450810 (x = z)). Qed.
Lemma lem6450812 {_124629 : Type'} (x : _124629) (z : _124629) : (term243 _124629 x z) = True.
Proof. exact (TRANS (@lem6450808 _124629 x z) (@lem6450811 _124629 x z)). Qed.
Lemma lem6450813 {_124629 : Type'} (x : _124629) (z : _124629) : (term244 _124629 x z) = (True \/ True).
Proof. exact (MK_COMB (@lem6450799) (@lem6450812 _124629 x z)). Qed.
Lemma lem6450815 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem21749 t)). Qed.
Lemma lem6450816 : (True \/ True) = True.
Proof. exact (@lem6450815 True). Qed.
Lemma lem6450817 {_124629 : Type'} (x : _124629) (z : _124629) : (term244 _124629 x z) = True.
Proof. exact (TRANS (@lem6450813 _124629 x z) (@lem6450816)). Qed.
Lemma lem6450818 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450819 {_124629 : Type'} (x : _124629) (z : _124629) : (term245 _124629 x z) = (and True).
Proof. exact (MK_COMB (@lem6450818) (@lem6450817 _124629 x z)). Qed.
Lemma lem6450823 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450824 : (True /\ False) = False.
Proof. exact (@lem6450823 False). Qed.
Lemma lem6450825 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450826 : term246 = (or False).
Proof. exact (MK_COMB (@lem6450825) (@lem6450824)). Qed.
Lemma lem6450830 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450831 {_124629 : Type'} (x : _124629) (z : _124629) : (term241 _124629 x z) = False.
Proof. exact (@lem6450830 (term200 _124629 x z)). Qed.
Lemma lem6450832 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450833 {_124629 : Type'} (x : _124629) (z : _124629) : (term242 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450832) (@lem6450831 _124629 x z)). Qed.
Lemma lem6450834 {_124629 : Type'} (y : _124629) (z : _124629) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6450835 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term247 _124629 x y z) = (term218 _124629 y z).
Proof. exact (MK_COMB (@lem6450833 _124629 x z) (@lem6450834 _124629 y z)). Qed.
Lemma lem6450837 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450838 {_124629 : Type'} (y : _124629) (z : _124629) : (term218 _124629 y z) = True.
Proof. exact (@lem6450837 (y = z)). Qed.
Lemma lem6450839 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term247 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450835 _124629 x y z) (@lem6450838 _124629 y z)). Qed.
Lemma lem6450840 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term248 _124629 x y z) = (False \/ True).
Proof. exact (MK_COMB (@lem6450826) (@lem6450839 _124629 x y z)). Qed.
Lemma lem6450842 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem21751 t)). Qed.
Lemma lem6450843 : (False \/ True) = True.
Proof. exact (@lem6450842 True). Qed.
Lemma lem6450844 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term248 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450840 _124629 x y z) (@lem6450843)). Qed.
Lemma lem6450845 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term233 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450819 _124629 x z) (@lem6450844 _124629 x y z)). Qed.
Lemma lem6450847 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450848 : (True /\ True) = True.
Proof. exact (@lem6450847 True). Qed.
Lemma lem6450849 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term233 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450845 _124629 x y z) (@lem6450848)). Qed.
Lemma lem6450850 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450851 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term235 _124629 x y z) = (and True).
Proof. exact (MK_COMB (@lem6450850) (@lem6450849 _124629 x y z)). Qed.
Lemma lem6450857 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450858 : (False /\ False) = False.
Proof. exact (@lem6450857 False). Qed.
Lemma lem6450859 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6450860 : term249 = (~ False).
Proof. exact (MK_COMB (@lem6450859) (@lem6450858)). Qed.
Lemma lem6450862 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6450863 : term249 = True.
Proof. exact (TRANS (@lem6450860) (@lem6450862)). Qed.
Lemma lem6450864 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450865 : term250 = (or True).
Proof. exact (MK_COMB (@lem6450864) (@lem6450863)). Qed.
Lemma lem6450869 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450870 {_124629 : Type'} (x : _124629) (z : _124629) : (term251 _124629 x z) = False.
Proof. exact (@lem6450869 (term215 _124629 x z)). Qed.
Lemma lem6450871 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450872 {_124629 : Type'} (x : _124629) (z : _124629) : (term252 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450871) (@lem6450870 _124629 x z)). Qed.
Lemma lem6450873 {_124629 : Type'} (x : _124629) (z : _124629) : (x = z) = (x = z).
Proof. exact (eq_refl (x = z)). Qed.
Lemma lem6450874 {_124629 : Type'} (x : _124629) (z : _124629) : (term253 _124629 x z) = (term218 _124629 x z).
Proof. exact (MK_COMB (@lem6450872 _124629 x z) (@lem6450873 _124629 x z)). Qed.
Lemma lem6450876 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450877 {_124629 : Type'} (x : _124629) (z : _124629) : (term218 _124629 x z) = True.
Proof. exact (@lem6450876 (x = z)). Qed.
Lemma lem6450878 {_124629 : Type'} (x : _124629) (z : _124629) : (term253 _124629 x z) = True.
Proof. exact (TRANS (@lem6450874 _124629 x z) (@lem6450877 _124629 x z)). Qed.
Lemma lem6450879 {_124629 : Type'} (x : _124629) (z : _124629) : (term254 _124629 x z) = (True \/ True).
Proof. exact (MK_COMB (@lem6450865) (@lem6450878 _124629 x z)). Qed.
Lemma lem6450881 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem21749 t)). Qed.
Lemma lem6450882 : (True \/ True) = True.
Proof. exact (@lem6450881 True). Qed.
Lemma lem6450883 {_124629 : Type'} (x : _124629) (z : _124629) : (term254 _124629 x z) = True.
Proof. exact (TRANS (@lem6450879 _124629 x z) (@lem6450882)). Qed.
Lemma lem6450884 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6450885 {_124629 : Type'} (x : _124629) (z : _124629) : (term255 _124629 x z) = (and True).
Proof. exact (MK_COMB (@lem6450884) (@lem6450883 _124629 x z)). Qed.
Lemma lem6450889 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450890 : (False /\ False) = False.
Proof. exact (@lem6450889 False). Qed.
Lemma lem6450891 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6450892 : term256 = (or False).
Proof. exact (MK_COMB (@lem6450891) (@lem6450890)). Qed.
Lemma lem6450896 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6450897 {_124629 : Type'} (x : _124629) (z : _124629) : (term251 _124629 x z) = False.
Proof. exact (@lem6450896 (term215 _124629 x z)). Qed.
Lemma lem6450898 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6450899 {_124629 : Type'} (x : _124629) (z : _124629) : (term252 _124629 x z) = (imp False).
Proof. exact (MK_COMB (@lem6450898) (@lem6450897 _124629 x z)). Qed.
Lemma lem6450900 {_124629 : Type'} (y : _124629) (z : _124629) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6450901 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term257 _124629 x y z) = (term218 _124629 y z).
Proof. exact (MK_COMB (@lem6450899 _124629 x z) (@lem6450900 _124629 y z)). Qed.
Lemma lem6450903 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem21773 t)). Qed.
Lemma lem6450904 {_124629 : Type'} (y : _124629) (z : _124629) : (term218 _124629 y z) = True.
Proof. exact (@lem6450903 (y = z)). Qed.
Lemma lem6450905 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term257 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450901 _124629 x y z) (@lem6450904 _124629 y z)). Qed.
Lemma lem6450906 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term258 _124629 x y z) = (False \/ True).
Proof. exact (MK_COMB (@lem6450892) (@lem6450905 _124629 x y z)). Qed.
Lemma lem6450908 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem21751 t)). Qed.
Lemma lem6450909 : (False \/ True) = True.
Proof. exact (@lem6450908 True). Qed.
Lemma lem6450910 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term258 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450906 _124629 x y z) (@lem6450909)). Qed.
Lemma lem6450911 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term237 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450885 _124629 x z) (@lem6450910 _124629 x y z)). Qed.
Lemma lem6450913 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450914 : (True /\ True) = True.
Proof. exact (@lem6450913 True). Qed.
Lemma lem6450915 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term237 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450911 _124629 x y z) (@lem6450914)). Qed.
Lemma lem6450916 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term238 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450851 _124629 x y z) (@lem6450915 _124629 x y z)). Qed.
Lemma lem6450918 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450919 : (True /\ True) = True.
Proof. exact (@lem6450918 True). Qed.
Lemma lem6450920 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term238 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450916 _124629 x y z) (@lem6450919)). Qed.
Lemma lem6450921 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term180 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450783 _124629 x y z) (@lem6450920 _124629 x y z)). Qed.
Lemma lem6450922 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term181 _124629 x y z) = (True /\ True).
Proof. exact (MK_COMB (@lem6450763 _124629 x y z) (@lem6450921 _124629 x y z)). Qed.
Lemma lem6450924 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6450925 : (True /\ True) = True.
Proof. exact (@lem6450924 True). Qed.
Lemma lem6450926 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term181 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450922 _124629 x y z) (@lem6450925)). Qed.
Lemma lem6450927 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term160 _124629 x y z) = True.
Proof. exact (TRANS (@lem6450587 _124629 x y z) (@lem6450926 _124629 x y z)). Qed.
Lemma lem6450928 {_124629 : Type'} (y : _124629) (z : _124629) : (term161 _124629 y z) = (term259 _124629).
Proof. exact (fun_ext (fun x : _124629 => @lem6450927 _124629 x y z)). Qed.
Lemma lem6450929 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450930 {_124629 : Type'} (y : _124629) (z : _124629) : (term162 _124629 y z) = (term260 _124629).
Proof. exact (MK_COMB (@lem6450929 _124629) (@lem6450928 _124629 y z)). Qed.
Lemma lem6450932 {A : Type'} (t : Prop) : (term261 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6450933 {_124629 : Type'} (t : Prop) : (term261 _124629 t) = t.
Proof. exact (@lem6450932 _124629 t). Qed.
Lemma lem6450934 {_124629 : Type'} : (term260 _124629) = True.
Proof. exact (@lem6450933 _124629 True). Qed.
Lemma lem6450935 {_124629 : Type'} (y : _124629) (z : _124629) : (term162 _124629 y z) = True.
Proof. exact (TRANS (@lem6450930 _124629 y z) (@lem6450934 _124629)). Qed.
Lemma lem6450936 {_124629 : Type'} (z : _124629) : (term163 _124629 z) = (term259 _124629).
Proof. exact (fun_ext (fun y : _124629 => @lem6450935 _124629 y z)). Qed.
Lemma lem6450937 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450938 {_124629 : Type'} (z : _124629) : (term164 _124629 z) = (term260 _124629).
Proof. exact (MK_COMB (@lem6450937 _124629) (@lem6450936 _124629 z)). Qed.
Lemma lem6450940 {A : Type'} (t : Prop) : (term261 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6450941 {_124629 : Type'} (t : Prop) : (term261 _124629 t) = t.
Proof. exact (@lem6450940 _124629 t). Qed.
Lemma lem6450942 {_124629 : Type'} : (term260 _124629) = True.
Proof. exact (@lem6450941 _124629 True). Qed.
Lemma lem6450943 {_124629 : Type'} (z : _124629) : (term164 _124629 z) = True.
Proof. exact (TRANS (@lem6450938 _124629 z) (@lem6450942 _124629)). Qed.
Lemma lem6450944 {_124629 : Type'} : (term165 _124629) = (term259 _124629).
Proof. exact (fun_ext (fun z : _124629 => @lem6450943 _124629 z)). Qed.
Lemma lem6450945 {_124629 : Type'} : (@all _124629) = (@all _124629).
Proof. exact (eq_refl (@all _124629)). Qed.
Lemma lem6450946 {_124629 : Type'} : (term166 _124629) = (term260 _124629).
Proof. exact (MK_COMB (@lem6450945 _124629) (@lem6450944 _124629)). Qed.
Lemma lem6450948 {A : Type'} (t : Prop) : (term261 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6450949 {_124629 : Type'} (t : Prop) : (term261 _124629 t) = t.
Proof. exact (@lem6450948 _124629 t). Qed.
Lemma lem6450950 {_124629 : Type'} : (term260 _124629) = True.
Proof. exact (@lem6450949 _124629 True). Qed.
Lemma lem6450951 {_124629 : Type'} : (term166 _124629) = True.
Proof. exact (TRANS (@lem6450946 _124629) (@lem6450950 _124629)). Qed.
Lemma lem6450952 {_124629 : Type'} : (term142 _124629) = True.
Proof. exact (TRANS (@lem6450549 _124629) (@lem6450951 _124629)). Qed.
Lemma lem6450953 {_124629 : Type'} : True = (term142 _124629).
Proof. exact (SYM (@lem6450952 _124629)). Qed.
Lemma lem6450954 {_124629 : Type'} : term142 _124629.
Proof. exact (EQ_MP (@lem6450953 _124629) (@lem0)). Qed.
Lemma lem6450955 {_124629 : Type'} (z : _124629) : term262 _124629 z.
Proof. exact (@lem6450954 _124629 z). Qed.
Lemma lem6450956 {_124629 : Type'} (z : _124629) : (term262 _124629 z) = (term138 _124629 z).
Proof. exact (eq_refl (term262 _124629 z)). Qed.
Lemma lem6450957 {_124629 : Type'} (z : _124629) : term138 _124629 z.
Proof. exact (EQ_MP (@lem6450956 _124629 z) (@lem6450955 _124629 z)). Qed.
Lemma lem6450958 {_124629 : Type'} (z : _124629) (y : _124629) : term263 _124629 z y.
Proof. exact (@lem6450957 _124629 z y). Qed.
Lemma lem6450959 {_124629 : Type'} (y : _124629) (z : _124629) : (term263 _124629 z y) = (term134 _124629 y z).
Proof. exact (eq_refl (term263 _124629 z y)). Qed.
Lemma lem6450960 {_124629 : Type'} (y : _124629) (z : _124629) : term134 _124629 y z.
Proof. exact (EQ_MP (@lem6450959 _124629 y z) (@lem6450958 _124629 z y)). Qed.
Lemma lem6450961 {_124629 : Type'} (y : _124629) (z : _124629) (x : _124629) : term264 _124629 y z x.
Proof. exact (@lem6450960 _124629 y z x). Qed.
Lemma lem6450962 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : (term264 _124629 y z x) = (term130 _124629 x y z).
Proof. exact (eq_refl (term264 _124629 y z x)). Qed.
Lemma lem6450963 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) : term130 _124629 x y z.
Proof. exact (EQ_MP (@lem6450962 _124629 x y z) (@lem6450961 _124629 y z x)). Qed.
Lemma lem6450964 {_124629 : Type'} (x : _124629) (y : _124629) (z : _124629) (q : Prop) : term265 _124629 x y z q.
Proof. exact (@lem6450963 _124629 x y z q). Qed.
Lemma lem6450965 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term265 _124629 x y z q) = (term126 _124629 q x y z).
Proof. exact (eq_refl (term265 _124629 x y z q)). Qed.
Lemma lem6450966 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term126 _124629 q x y z.
Proof. exact (EQ_MP (@lem6450965 _124629 q x y z) (@lem6450964 _124629 x y z q)). Qed.
Lemma lem6450967 {_124629 : Type'} (q : Prop) (x : _124629) (y : _124629) (z : _124629) (p : Prop) : term266 _124629 q x y z p.
Proof. exact (@lem6450966 _124629 q x y z p). Qed.
Lemma lem6450968 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : (term266 _124629 q x y z p) = (term118 _124629 p q x y z).
Proof. exact (eq_refl (term266 _124629 q x y z p)). Qed.
Lemma lem6450969 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term118 _124629 p q x y z.
Proof. exact (EQ_MP (@lem6450968 _124629 p q x y z) (@lem6450967 _124629 q x y z p)). Qed.
Lemma lem6450971 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term118 _124629 p q x y z.
Proof. exact (@lem6450328 _124629 p q x y z (@lem6450969 _124629 p q x y z)). Qed.
Lemma lem6450972 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term119 _124629 p q x y z) : False.
Proof. exact (@lem6450971 _124629 p q x y z (@lem6450312 _124629 p q x y z h1)). Qed.
Lemma lem6450973 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term119 _124629 p q x y z) : (term119 _124629 p q x y z) = False.
Proof. exact (prop_ext (fun h2 : term119 _124629 p q x y z => @lem6450972 _124629 p q x y z h1) (fun h2 : False => @lem6450312 _124629 p q x y z h1)). Qed.
Lemma lem6450974 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term119 _124629 p q x y z) : False.
Proof. exact (EQ_MP (@lem6450973 _124629 p q x y z h1) (@lem6450312 _124629 p q x y z h1)). Qed.
Lemma lem6450975 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term118 _124629 p q x y z.
Proof. exact (fun h0 : term119 _124629 p q x y z => @lem6450974 _124629 p q x y z h0). Qed.
Lemma lem6450976 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term117 _124629 p q x y z.
Proof. exact (EQ_MP (@lem6450311 _124629 p q x y z) (@lem6450975 _124629 p q x y z)). Qed.
Lemma lem6450977 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term117 _124629 p q x y z) : term117 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450978 {_124629 : Type'} (q : Prop) (p : Prop) (x : _124629) (z : _124629) (h1 : term267 _124629 q p x z) : term267 _124629 q p x z.
Proof. exact (h1). Qed.
Lemma lem6450979 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term267 _124629 q p x z) (h2 : term117 _124629 p q x y z) : (term146 _124629 p q x y) = z.
Proof. exact (@lem6450977 _124629 p q x y z h2 (@lem6450978 _124629 q p x z h1)). Qed.
Lemma lem6450980 {_124629 : Type'} (y : _124629) (q : Prop) (p : Prop) (x : _124629) (z : _124629) (h1 : term267 _124629 q p x z) : term268 _124629 p q x y z.
Proof. exact (fun h0 : term117 _124629 p q x y z => @lem6450979 _124629 p q x y z h1 h0). Qed.
Lemma lem6450981 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term117 _124629 p q x y z) : term117 _124629 p q x y z.
Proof. exact (h1). Qed.
Lemma lem6450982 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term267 _124629 q p x z) (h2 : term117 _124629 p q x y z) : (term146 _124629 p q x y) = z.
Proof. exact (@lem6450980 _124629 y q p x z h1 (@lem6450981 _124629 p q x y z h2)). Qed.
Lemma lem6450983 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) (h1 : term117 _124629 p q x y z) : term117 _124629 p q x y z.
Proof. exact (fun h0 : term267 _124629 q p x z => @lem6450982 _124629 p q x y z h0 h1). Qed.
Lemma lem6450984 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term269 _124629 p q x y z.
Proof. exact (fun h0 : term117 _124629 p q x y z => @lem6450983 _124629 p q x y z h0). Qed.
Lemma lem6450992 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (h1). Qed.
Lemma lem6450993 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (SYM (@lem6450992 A K dom neut op ltle k f h1)). Qed.
Lemma lem6450994 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f)) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (h1). Qed.
Lemma lem6450995 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f)) : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (SYM (@lem6450994 A K op ltle k dom neut f h1)). Qed.
Lemma lem6450996 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) = ((@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f)).
Proof. exact (prop_ext (fun h1 : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f) => @lem6450993 A K dom neut op ltle k f h1) (fun h1 : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f) => @lem6450995 A K op ltle k dom neut f h1)). Qed.
Lemma lem6450997 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term270 A K dom neut op ltle k) = (term271 A K op ltle k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6450996 A K op ltle k dom neut f)). Qed.
Lemma lem6450998 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6450999 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term20 A K dom neut op ltle k) = (term272 A K op ltle k dom neut).
Proof. exact (MK_COMB (@lem6450998 A K) (@lem6450997 A K op ltle k dom neut)). Qed.
Lemma lem6451000 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term273 A K dom neut op ltle) = (term274 A K op ltle dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6450999 A K op ltle k dom neut)). Qed.
Lemma lem6451001 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6451002 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term18 A K dom neut op ltle) = (term275 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6451001 K) (@lem6451000 A K op ltle dom neut)). Qed.
Lemma lem6451003 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term276 A K dom neut op) = (term277 A K op dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6451002 A K op ltle dom neut)). Qed.
Lemma lem6451004 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6451005 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term16 A K dom neut op) = (term278 A K op dom neut).
Proof. exact (MK_COMB (@lem6451004 K) (@lem6451003 A K op dom neut)). Qed.
Lemma lem6451006 {A K : Type'} (dom : A -> Prop) (neut : A) : (term279 A K dom neut) = (term280 A K dom neut).
Proof. exact (fun_ext (fun op : type1400 A => @lem6451005 A K op dom neut)). Qed.
Lemma lem6451007 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6451008 {A K : Type'} (dom : A -> Prop) (neut : A) : (term14 A K dom neut) = (term281 A K dom neut).
Proof. exact (MK_COMB (@lem6451007 A) (@lem6451006 A K dom neut)). Qed.
Lemma lem6451009 {A K : Type'} (dom : A -> Prop) : (term282 A K dom) = (term283 A K dom).
Proof. exact (fun_ext (fun neut : A => @lem6451008 A K dom neut)). Qed.
Lemma lem6451010 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6451011 {A K : Type'} (dom : A -> Prop) : (term12 A K dom) = (term284 A K dom).
Proof. exact (MK_COMB (@lem6451010 A) (@lem6451009 A K dom)). Qed.
Lemma lem6451012 {A K : Type'} : (term285 A K) = (term286 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6451011 A K dom)). Qed.
Lemma lem6451013 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6451014 {A K : Type'} : (term287 A K) = (term288 A K).
Proof. exact (MK_COMB (@lem6451013 A) (@lem6451012 A K)). Qed.
Lemma lem6451015 {A K : Type'} : term288 A K.
Proof. exact (EQ_MP (@lem6451014 A K) (@lem6449238 A K)). Qed.
Lemma lem6451016 {A K : Type'} (dom : A -> Prop) : term289 A K dom.
Proof. exact (@lem6451015 A K dom). Qed.
Lemma lem6451017 {A K : Type'} (dom : A -> Prop) : (term289 A K dom) = (term284 A K dom).
Proof. exact (eq_refl (term289 A K dom)). Qed.
Lemma lem6451018 {A K : Type'} (dom : A -> Prop) : term284 A K dom.
Proof. exact (EQ_MP (@lem6451017 A K dom) (@lem6451016 A K dom)). Qed.
Lemma lem6451019 {A K : Type'} (dom : A -> Prop) (neut : A) : term290 A K dom neut.
Proof. exact (@lem6451018 A K dom neut). Qed.
Lemma lem6451020 {A K : Type'} (dom : A -> Prop) (neut : A) : (term290 A K dom neut) = (term281 A K dom neut).
Proof. exact (eq_refl (term290 A K dom neut)). Qed.
Lemma lem6451021 {A K : Type'} (dom : A -> Prop) (neut : A) : term281 A K dom neut.
Proof. exact (EQ_MP (@lem6451020 A K dom neut) (@lem6451019 A K dom neut)). Qed.
Lemma lem6451022 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term291 A K dom neut op.
Proof. exact (@lem6451021 A K dom neut op). Qed.
Lemma lem6451023 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term291 A K dom neut op) = (term278 A K op dom neut).
Proof. exact (eq_refl (term291 A K dom neut op)). Qed.
Lemma lem6451024 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term278 A K op dom neut.
Proof. exact (EQ_MP (@lem6451023 A K op dom neut) (@lem6451022 A K dom neut op)). Qed.
Lemma lem6451025 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term292 A K op dom neut ltle.
Proof. exact (@lem6451024 A K op dom neut ltle). Qed.
Lemma lem6451026 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term292 A K op dom neut ltle) = (term275 A K op ltle dom neut).
Proof. exact (eq_refl (term292 A K op dom neut ltle)). Qed.
Lemma lem6451027 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term275 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6451026 A K op ltle dom neut) (@lem6451025 A K op dom neut ltle)). Qed.
Lemma lem6451028 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term293 A K op ltle dom neut k.
Proof. exact (@lem6451027 A K op ltle dom neut k). Qed.
Lemma lem6451029 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term293 A K op ltle dom neut k) = (term272 A K op ltle k dom neut).
Proof. exact (eq_refl (term293 A K op ltle dom neut k)). Qed.
Lemma lem6451030 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : term272 A K op ltle k dom neut.
Proof. exact (EQ_MP (@lem6451029 A K op ltle k dom neut) (@lem6451028 A K op ltle dom neut k)). Qed.
Lemma lem6451031 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term294 A K op ltle k dom neut f.
Proof. exact (@lem6451030 A K op ltle k dom neut f). Qed.
Lemma lem6451032 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term294 A K op ltle k dom neut f) = ((@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f)).
Proof. exact (eq_refl (term294 A K op ltle k dom neut f)). Qed.
Lemma lem6451034 {A : Type'} (x : A) : term295 A x.
Proof. exact (@lem3205876 A x). Qed.
Lemma lem6451035 {A : Type'} (x : A) : (term295 A x) = (term296 A x).
Proof. exact (eq_refl (term295 A x)). Qed.
Lemma lem6451036 {A : Type'} (x : A) : term296 A x.
Proof. exact (EQ_MP (@lem6451035 A x) (@lem6451034 A x)). Qed.
Lemma lem6451037 {A : Type'} (x : A) (y : A) : term297 A x y.
Proof. exact (@lem6451036 A x y). Qed.
Lemma lem6451038 {A : Type'} (x : A) (y : A) : (term297 A x y) = ((term298 A x y) = (x = y)).
Proof. exact (eq_refl (term297 A x y)). Qed.
Lemma lem6451040 {A : Type'} (s : A -> Prop) : term299 A s.
Proof. exact (@lem3205495 A s). Qed.
Lemma lem6451041 {A : Type'} (s : A -> Prop) : (term299 A s) = (term300 A s).
Proof. exact (eq_refl (term299 A s)). Qed.
Lemma lem6451042 {A : Type'} (s : A -> Prop) : term300 A s.
Proof. exact (EQ_MP (@lem6451041 A s) (@lem6451040 A s)). Qed.
Lemma lem6451043 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term301 A s t.
Proof. exact (@lem6451042 A s t). Qed.
Lemma lem6451044 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term301 A s t) = (term302 A s t).
Proof. exact (eq_refl (term301 A s t)). Qed.
Lemma lem6451045 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term302 A s t.
Proof. exact (EQ_MP (@lem6451044 A s t) (@lem6451043 A s t)). Qed.
Lemma lem6451046 {A : Type'} (s : A -> Prop) (t : A -> Prop) (x : A) : term303 A s t x.
Proof. exact (@lem6451045 A s t x). Qed.
Lemma lem6451047 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term303 A s t x) = ((term304 A x s t) = (term305 A s x t)).
Proof. exact (eq_refl (term303 A s t x)). Qed.
Lemma lem6451049 {A K : Type'} (dom : A -> Prop) : term306 A K dom.
Proof. exact (@lem6401305 A K dom). Qed.
Lemma lem6451050 {A K : Type'} (dom : A -> Prop) : (term306 A K dom) = (term307 A K dom).
Proof. exact (eq_refl (term306 A K dom)). Qed.
Lemma lem6451051 {A K : Type'} (dom : A -> Prop) : term307 A K dom.
Proof. exact (EQ_MP (@lem6451050 A K dom) (@lem6451049 A K dom)). Qed.
Lemma lem6451052 {A K : Type'} (dom : A -> Prop) (neut : A) : term308 A K dom neut.
Proof. exact (@lem6451051 A K dom neut). Qed.
Lemma lem6451053 {A K : Type'} (dom : A -> Prop) (neut : A) : (term308 A K dom neut) = (term309 A K dom neut).
Proof. exact (eq_refl (term308 A K dom neut)). Qed.
Lemma lem6451054 {A K : Type'} (dom : A -> Prop) (neut : A) : term309 A K dom neut.
Proof. exact (EQ_MP (@lem6451053 A K dom neut) (@lem6451052 A K dom neut)). Qed.
Lemma lem6451055 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term310 A K dom neut op.
Proof. exact (@lem6451054 A K dom neut op). Qed.
Lemma lem6451056 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term310 A K dom neut op) = (term311 A K op dom neut).
Proof. exact (eq_refl (term310 A K dom neut op)). Qed.
Lemma lem6451057 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term311 A K op dom neut.
Proof. exact (EQ_MP (@lem6451056 A K op dom neut) (@lem6451055 A K dom neut op)). Qed.
Lemma lem6451058 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term312 A K op dom neut ltle.
Proof. exact (@lem6451057 A K op dom neut ltle). Qed.
Lemma lem6451059 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term312 A K op dom neut ltle) = (term313 A K op ltle dom neut).
Proof. exact (eq_refl (term312 A K op dom neut ltle)). Qed.
Lemma lem6451060 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term313 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6451059 A K op ltle dom neut) (@lem6451058 A K op dom neut ltle)). Qed.
Lemma lem6451061 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term314 A K op ltle dom neut k.
Proof. exact (@lem6451060 A K op ltle dom neut k). Qed.
Lemma lem6451062 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term314 A K op ltle dom neut k) = (term315 A K op ltle k dom neut).
Proof. exact (eq_refl (term314 A K op ltle dom neut k)). Qed.
Lemma lem6451063 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : term315 A K op ltle k dom neut.
Proof. exact (EQ_MP (@lem6451062 A K op ltle k dom neut) (@lem6451061 A K op ltle dom neut k)). Qed.
Lemma lem6451064 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term316 A K op ltle k dom neut f.
Proof. exact (@lem6451063 A K op ltle k dom neut f). Qed.
Lemma lem6451065 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term316 A K op ltle k dom neut f) = ((@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut)).
Proof. exact (eq_refl (term316 A K op ltle k dom neut f)). Qed.
Lemma lem6451067 {A : Type'} (p : Prop) : term318 A p.
Proof. exact (@lem13262 A p). Qed.
Lemma lem6451068 {A : Type'} (p : Prop) : (term318 A p) = (term319 A p).
Proof. exact (eq_refl (term318 A p)). Qed.
Lemma lem6451069 {A : Type'} (p : Prop) : term319 A p.
Proof. exact (EQ_MP (@lem6451068 A p) (@lem6451067 A p)). Qed.
Lemma lem6451070 {A : Type'} (p : Prop) (x : A) : term320 A p x.
Proof. exact (@lem6451069 A p x). Qed.
Lemma lem6451071 {A : Type'} (p : Prop) (x : A) : (term320 A p x) = (term321 A p x).
Proof. exact (eq_refl (term320 A p x)). Qed.
Lemma lem6451072 {A : Type'} (p : Prop) (x : A) : term321 A p x.
Proof. exact (EQ_MP (@lem6451071 A p x) (@lem6451070 A p x)). Qed.
Lemma lem6451073 {A : Type'} (p : Prop) (x : A) (y : A) : term322 A p x y.
Proof. exact (@lem6451072 A p x y). Qed.
Lemma lem6451074 {A : Type'} (p : Prop) (y : A) (x : A) : (term322 A p x y) = ((term323 A p x y) = (@COND A p y x)).
Proof. exact (eq_refl (term322 A p x y)). Qed.
Lemma lem6451103 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6451104 {_124659 : Type'} (P : _124659 -> Prop) (x : _124659) : (@IN _124659 x P) = (P x).
Proof. exact (@lem6451103 _124659 P x). Qed.
Lemma lem6451105 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (@IN _124659 x dom) = (dom x).
Proof. exact (@lem6451104 _124659 dom x). Qed.
Lemma lem6451106 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6451107 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term324 _124659 x dom) = (term325 _124659 dom x).
Proof. exact (MK_COMB (@lem6451106) (@lem6451105 _124659 dom x)). Qed.
Lemma lem6451110 {_124659 : Type'} (x : _124659) (a : _124659) : (x = a) = (x = a).
Proof. exact (eq_refl (x = a)). Qed.
Lemma lem6451111 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term326 _124659 dom x a) = (term327 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451107 _124659 dom x) (@lem6451110 _124659 x a)). Qed.
Lemma lem6451114 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6451115 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term328 _124659 dom x a) = (term329 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451114) (@lem6451111 _124659 dom x a)). Qed.
Lemma lem6451117 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6451118 {_124659 : Type'} (s : _124659 -> Prop) (x : _124659) (t : _124659 -> Prop) : (term304 _124659 x s t) = (term305 _124659 s x t).
Proof. exact (@lem6451117 _124659 s x t). Qed.
Lemma lem6451119 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term330 _124659 x dom a) = (term331 _124659 dom x a).
Proof. exact (@lem6451118 _124659 dom x (@INSERT _124659 a (@EMPTY _124659))). Qed.
Lemma lem6451123 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6451124 {_124659 : Type'} (P : _124659 -> Prop) (x : _124659) : (@IN _124659 x P) = (P x).
Proof. exact (@lem6451123 _124659 P x). Qed.
Lemma lem6451125 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (@IN _124659 x dom) = (dom x).
Proof. exact (@lem6451124 _124659 dom x). Qed.
Lemma lem6451126 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6451127 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term332 _124659 x dom) = (term333 _124659 dom x).
Proof. exact (MK_COMB (@lem6451126) (@lem6451125 _124659 dom x)). Qed.
Lemma lem6451129 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6451130 {_124659 : Type'} (y : _124659) (x : _124659) (s : _124659 -> Prop) : (term36 _124659 x y s) = (term37 _124659 y x s).
Proof. exact (@lem6451129 _124659 y x s). Qed.
Lemma lem6451131 {_124659 : Type'} (a : _124659) (x : _124659) : (term298 _124659 x a) = (term334 _124659 a x).
Proof. exact (@lem6451130 _124659 a x (@EMPTY _124659)). Qed.
Lemma lem6451137 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6451138 {_124659 : Type'} (x : _124659) : (@IN _124659 x (@EMPTY _124659)) = False.
Proof. exact (@lem6451137 _124659 x). Qed.
Lemma lem6451139 {_124659 : Type'} (x : _124659) (a : _124659) : (term38 _124659 x a) = (term38 _124659 x a).
Proof. exact (eq_refl (term38 _124659 x a)). Qed.
Lemma lem6451140 {_124659 : Type'} (x : _124659) (a : _124659) : (term334 _124659 a x) = (term335 _124659 x a).
Proof. exact (MK_COMB (@lem6451139 _124659 x a) (@lem6451138 _124659 x)). Qed.
Lemma lem6451142 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6451143 {_124659 : Type'} (x : _124659) (a : _124659) : (term335 _124659 x a) = (x = a).
Proof. exact (@lem6451142 (x = a)). Qed.
Lemma lem6451146 {_124659 : Type'} (x : _124659) (a : _124659) : (term334 _124659 a x) = (x = a).
Proof. exact (TRANS (@lem6451140 _124659 x a) (@lem6451143 _124659 x a)). Qed.
Lemma lem6451147 {_124659 : Type'} (x : _124659) (a : _124659) : (term298 _124659 x a) = (x = a).
Proof. exact (TRANS (@lem6451131 _124659 a x) (@lem6451146 _124659 x a)). Qed.
Lemma lem6451148 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6451149 {_124659 : Type'} (x : _124659) (a : _124659) : (term336 _124659 x a) = (term2 _124659 x a).
Proof. exact (MK_COMB (@lem6451148) (@lem6451147 _124659 x a)). Qed.
Lemma lem6451150 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term331 _124659 dom x a) = (term337 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451127 _124659 dom x) (@lem6451149 _124659 x a)). Qed.
Lemma lem6451153 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term330 _124659 x dom a) = (term337 _124659 dom x a).
Proof. exact (TRANS (@lem6451119 _124659 dom x a) (@lem6451150 _124659 dom x a)). Qed.
Lemma lem6451154 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6451155 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term338 _124659 x dom a) = (term339 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451154) (@lem6451153 _124659 dom x a)). Qed.
Lemma lem6451156 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : ((term326 _124659 dom x a) = (term338 _124659 x dom a)) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (MK_COMB (@lem6451115 _124659 dom x a) (@lem6451155 _124659 dom x a)). Qed.
Lemma lem6451159 {_124659 : Type'} (x : _124659) (dom : _124659 -> Prop) (a : _124659) : ((term327 _124659 dom x a) = (term339 _124659 dom x a)) = ((term326 _124659 dom x a) = (term338 _124659 x dom a)).
Proof. exact (SYM (@lem6451156 _124659 dom x a)). Qed.
Lemma lem6451161 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6451162 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : ((term327 _124659 dom x a) = (term339 _124659 dom x a)) = (term340 _124659 dom x a).
Proof. exact (@lem6451161 ((term327 _124659 dom x a) = (term339 _124659 dom x a))). Qed.
Lemma lem6451163 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term340 _124659 dom x a) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (SYM (@lem6451162 _124659 dom x a)). Qed.
Lemma lem6451164 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : term341 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451167 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term340 _124659 dom x a) : term340 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451168 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term342 _124659 dom x a.
Proof. exact (fun h0 : term340 _124659 dom x a => @lem6451167 _124659 dom x a h0). Qed.
Lemma lem6451169 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term342 _124659 dom x a) : term342 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451170 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term340 _124659 dom x a) : term340 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451171 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term340 _124659 dom x a) (h2 : term342 _124659 dom x a) : term340 _124659 dom x a.
Proof. exact (@lem6451169 _124659 dom x a h2 (@lem6451170 _124659 dom x a h1)). Qed.
Lemma lem6451172 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term340 _124659 dom x a) : term343 _124659 dom x a.
Proof. exact (fun h0 : term342 _124659 dom x a => @lem6451171 _124659 dom x a h1 h0). Qed.
Lemma lem6451173 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term342 _124659 dom x a) : term342 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451174 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term340 _124659 dom x a) (h2 : term342 _124659 dom x a) : term340 _124659 dom x a.
Proof. exact (@lem6451172 _124659 dom x a h1 (@lem6451173 _124659 dom x a h2)). Qed.
Lemma lem6451175 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term342 _124659 dom x a) : term342 _124659 dom x a.
Proof. exact (fun h0 : term340 _124659 dom x a => @lem6451174 _124659 dom x a h0 h1). Qed.
Lemma lem6451176 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term344 _124659 dom x a.
Proof. exact (fun h0 : term342 _124659 dom x a => @lem6451175 _124659 dom x a h0). Qed.
Lemma lem6451179 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term342 _124659 dom x a.
Proof. exact (@lem6451176 _124659 dom x a (@lem6451168 _124659 dom x a)). Qed.
Lemma lem6451180 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term342 _124659 dom x a.
Proof. exact (@lem6451179 _124659 dom x a). Qed.
Lemma lem6451194 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6451195 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term340 _124659 dom x a) = (term345 _124659 dom x a).
Proof. exact (@lem6451194 (term341 _124659 dom x a)). Qed.
Lemma lem6451197 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6451198 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term345 _124659 dom x a) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (@lem6451197 ((term327 _124659 dom x a) = (term339 _124659 dom x a))). Qed.
Lemma lem6451199 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term340 _124659 dom x a) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (TRANS (@lem6451195 _124659 dom x a) (@lem6451198 _124659 dom x a)). Qed.
Lemma lem6451204 {_124659 : Type'} (x : _124659) (a : _124659) : (term346 _124659 x a) = (term347 _124659 x a).
Proof. exact (fun_ext (fun dom : _124659 -> Prop => @lem6451199 _124659 dom x a)). Qed.
Lemma lem6451205 {_124659 : Type'} : (@all (_124659 -> Prop)) = (@all (_124659 -> Prop)).
Proof. exact (eq_refl (@all (_124659 -> Prop))). Qed.
Lemma lem6451206 {_124659 : Type'} (x : _124659) (a : _124659) : (term348 _124659 x a) = (term349 _124659 x a).
Proof. exact (MK_COMB (@lem6451205 _124659) (@lem6451204 _124659 x a)). Qed.
Lemma lem6451211 {_124659 : Type'} (a : _124659) : (term350 _124659 a) = (term351 _124659 a).
Proof. exact (fun_ext (fun x : _124659 => @lem6451206 _124659 x a)). Qed.
Lemma lem6451212 {_124659 : Type'} : (@all _124659) = (@all _124659).
Proof. exact (eq_refl (@all _124659)). Qed.
Lemma lem6451213 {_124659 : Type'} (a : _124659) : (term352 _124659 a) = (term353 _124659 a).
Proof. exact (MK_COMB (@lem6451212 _124659) (@lem6451211 _124659 a)). Qed.
Lemma lem6451218 {_124659 : Type'} : (term354 _124659) = (term355 _124659).
Proof. exact (fun_ext (fun a : _124659 => @lem6451213 _124659 a)). Qed.
Lemma lem6451219 {_124659 : Type'} : (@all _124659) = (@all _124659).
Proof. exact (eq_refl (@all _124659)). Qed.
Lemma lem6451228 {_124659 : Type'} : (term356 _124659) = (term357 _124659).
Proof. exact (MK_COMB (@lem6451219 _124659) (@lem6451218 _124659)). Qed.
Lemma lem6451245 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : ((term327 _124659 dom x a) = (term339 _124659 dom x a)) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (eq_refl ((term327 _124659 dom x a) = (term339 _124659 dom x a))). Qed.
Lemma lem6451246 {_124659 : Type'} (x : _124659) (a : _124659) : (term347 _124659 x a) = (term347 _124659 x a).
Proof. exact (fun_ext (fun dom : _124659 -> Prop => @lem6451245 _124659 dom x a)). Qed.
Lemma lem6451247 {_124659 : Type'} : (@all (_124659 -> Prop)) = (@all (_124659 -> Prop)).
Proof. exact (eq_refl (@all (_124659 -> Prop))). Qed.
Lemma lem6451248 {_124659 : Type'} (x : _124659) (a : _124659) : (term349 _124659 x a) = (term349 _124659 x a).
Proof. exact (MK_COMB (@lem6451247 _124659) (@lem6451246 _124659 x a)). Qed.
Lemma lem6451249 {_124659 : Type'} (a : _124659) : (term351 _124659 a) = (term351 _124659 a).
Proof. exact (fun_ext (fun x : _124659 => @lem6451248 _124659 x a)). Qed.
Lemma lem6451250 {_124659 : Type'} : (@all _124659) = (@all _124659).
Proof. exact (eq_refl (@all _124659)). Qed.
Lemma lem6451251 {_124659 : Type'} (a : _124659) : (term353 _124659 a) = (term353 _124659 a).
Proof. exact (MK_COMB (@lem6451250 _124659) (@lem6451249 _124659 a)). Qed.
Lemma lem6451252 {_124659 : Type'} : (term355 _124659) = (term355 _124659).
Proof. exact (fun_ext (fun a : _124659 => @lem6451251 _124659 a)). Qed.
Lemma lem6451253 {_124659 : Type'} : (@all _124659) = (@all _124659).
Proof. exact (eq_refl (@all _124659)). Qed.
Lemma lem6451254 {_124659 : Type'} : (term357 _124659) = (term357 _124659).
Proof. exact (MK_COMB (@lem6451253 _124659) (@lem6451252 _124659)). Qed.
Lemma lem6451279 {_124659 : Type'} : (term356 _124659) = (term357 _124659).
Proof. exact (TRANS (@lem6451228 _124659) (@lem6451254 _124659)). Qed.
Lemma lem6451280 {_124659 : Type'} : (term357 _124659) = (term356 _124659).
Proof. exact (SYM (@lem6451279 _124659)). Qed.
Lemma lem6451282 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6451283 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : ((term327 _124659 dom x a) = (term339 _124659 dom x a)) = (term340 _124659 dom x a).
Proof. exact (@lem6451282 ((term327 _124659 dom x a) = (term339 _124659 dom x a))). Qed.
Lemma lem6451284 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term340 _124659 dom x a) = ((term327 _124659 dom x a) = (term339 _124659 dom x a)).
Proof. exact (SYM (@lem6451283 _124659 dom x a)). Qed.
Lemma lem6451285 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : term341 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451294 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term358 _124659 dom x a) = (term337 _124659 dom x a).
Proof. exact (@lem17362 (dom x) (x = a)). Qed.
Lemma lem6451299 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term327 _124659 dom x a) = (term359 _124659 dom x a).
Proof. exact (@lem17265 (dom x) (x = a)). Qed.
Lemma lem6451305 {_124659 : Type'} (x : _124659) (a : _124659) : (term69 _124659 x a) = (x = a).
Proof. exact (@lem16933 (x = a)). Qed.
Lemma lem6451307 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term360 _124659 dom x) = (term360 _124659 dom x).
Proof. exact (eq_refl (term360 _124659 dom x)). Qed.
Lemma lem6451308 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term361 _124659 dom x a) = (term359 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451307 _124659 dom x) (@lem6451305 _124659 x a)). Qed.
Lemma lem6451309 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term339 _124659 dom x a) = (term361 _124659 dom x a).
Proof. exact (@lem17045 (dom x) (term2 _124659 x a)). Qed.
Lemma lem6451310 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term339 _124659 dom x a) = (term359 _124659 dom x a).
Proof. exact (TRANS (@lem6451309 _124659 dom x a) (@lem6451308 _124659 dom x a)). Qed.
Lemma lem6451315 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term362 _124659 dom x a) = (term337 _124659 dom x a).
Proof. exact (@lem16933 (term337 _124659 dom x a)). Qed.
Lemma lem6451316 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6451317 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term363 _124659 dom x a) = (term364 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451316) (@lem6451294 _124659 dom x a)). Qed.
Lemma lem6451318 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term365 _124659 dom x a) = (term366 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451317 _124659 dom x a) (@lem6451310 _124659 dom x a)). Qed.
Lemma lem6451319 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6451320 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term367 _124659 dom x a) = (term368 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451319) (@lem6451299 _124659 dom x a)). Qed.
Lemma lem6451321 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term369 _124659 dom x a) = (term370 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451320 _124659 dom x a) (@lem6451315 _124659 dom x a)). Qed.
Lemma lem6451322 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6451323 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term371 _124659 dom x a) = (term372 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451322) (@lem6451321 _124659 dom x a)). Qed.
Lemma lem6451324 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term373 _124659 dom x a) = (term374 _124659 dom x a).
Proof. exact (MK_COMB (@lem6451323 _124659 dom x a) (@lem6451318 _124659 dom x a)). Qed.
Lemma lem6451325 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term341 _124659 dom x a) = (term373 _124659 dom x a).
Proof. exact (@lem17646 (term327 _124659 dom x a) (term339 _124659 dom x a)). Qed.
Lemma lem6451330 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term341 _124659 dom x a) = (term374 _124659 dom x a).
Proof. exact (TRANS (@lem6451325 _124659 dom x a) (@lem6451324 _124659 dom x a)). Qed.
Lemma lem6451393 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : term374 _124659 dom x a.
Proof. exact (EQ_MP (@lem6451330 _124659 dom x a) (@lem6451285 _124659 dom x a h1)). Qed.
Lemma lem6451394 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : term370 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451395 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : term366 _124659 dom x a.
Proof. exact (h1). Qed.
Lemma lem6451396 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : term337 _124659 dom x a.
Proof. exact (proj2 (@lem6451394 _124659 dom x a h1)). Qed.
Lemma lem6451397 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : term359 _124659 dom x a.
Proof. exact (proj1 (@lem6451394 _124659 dom x a h1)). Qed.
Lemma lem6451402 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : term359 _124659 dom x a.
Proof. exact (proj2 (@lem6451395 _124659 dom x a h1)). Qed.
Lemma lem6451403 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : term337 _124659 dom x a.
Proof. exact (proj1 (@lem6451395 _124659 dom x a h1)). Qed.
Lemma lem6451419 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term30 _124659 dom x.
Proof. exact (h1). Qed.
Lemma lem6451431 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : x = a.
Proof. exact (h1). Qed.
Lemma lem6451443 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term30 _124659 dom x.
Proof. exact (h1). Qed.
Lemma lem6451455 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : x = a.
Proof. exact (h1). Qed.
Lemma lem6451461 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term30 _124659 dom x.
Proof. exact (h1). Qed.
Lemma lem6451465 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : term2 _124659 x a.
Proof. exact (proj2 (@lem6451396 _124659 dom x a h1)). Qed.
Lemma lem6451467 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : x = a.
Proof. exact (h1). Qed.
Lemma lem6451473 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term30 _124659 dom x.
Proof. exact (h1). Qed.
Lemma lem6451477 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : term2 _124659 x a.
Proof. exact (proj2 (@lem6451403 _124659 dom x a h1)). Qed.
Lemma lem6451479 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : x = a.
Proof. exact (h1). Qed.
Lemma lem6451507 {_124659 : Type'} (a : _124659) : (term83 _124659 a) = (term83 _124659 a).
Proof. exact (eq_refl (term83 _124659 a)). Qed.
Lemma lem6451508 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : (term84 _124659 a x) = (term85 _124659 a).
Proof. exact (MK_COMB (@lem6451507 _124659 a) (@lem6451467 _124659 x a h1)). Qed.
Lemma lem6451509 {_124659 : Type'} (a : _124659) : (term85 _124659 a) = (term86 _124659 a).
Proof. exact (eq_refl (term85 _124659 a)). Qed.
Lemma lem6451510 {_124659 : Type'} (a : _124659) (x : _124659) : (term87 _124659 a x) = (term87 _124659 a x).
Proof. exact (eq_refl (term87 _124659 a x)). Qed.
Lemma lem6451511 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term85 _124659 a)) = ((term84 _124659 a x) = (term86 _124659 a)).
Proof. exact (MK_COMB (@lem6451510 _124659 a x) (@lem6451509 _124659 a)). Qed.
Lemma lem6451512 {_124659 : Type'} (x : _124659) (a : _124659) : (term84 _124659 a x) = (term2 _124659 x a).
Proof. exact (eq_refl (term84 _124659 a x)). Qed.
Lemma lem6451513 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6451514 {_124659 : Type'} (x : _124659) (a : _124659) : (term87 _124659 a x) = (term88 _124659 x a).
Proof. exact (MK_COMB (@lem6451513) (@lem6451512 _124659 x a)). Qed.
Lemma lem6451515 {_124659 : Type'} (a : _124659) : (term86 _124659 a) = (term86 _124659 a).
Proof. exact (eq_refl (term86 _124659 a)). Qed.
Lemma lem6451516 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term86 _124659 a)) = ((term2 _124659 x a) = (term86 _124659 a)).
Proof. exact (MK_COMB (@lem6451514 _124659 x a) (@lem6451515 _124659 a)). Qed.
Lemma lem6451517 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term85 _124659 a)) = ((term2 _124659 x a) = (term86 _124659 a)).
Proof. exact (TRANS (@lem6451511 _124659 x a) (@lem6451516 _124659 x a)). Qed.
Lemma lem6451518 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : (term2 _124659 x a) = (term86 _124659 a).
Proof. exact (EQ_MP (@lem6451517 _124659 x a) (@lem6451508 _124659 x a h1)). Qed.
Lemma lem6451519 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : term86 _124659 a.
Proof. exact (EQ_MP (@lem6451518 _124659 x a h2) (@lem6451465 _124659 dom x a h1)). Qed.
Lemma lem6451547 {_124659 : Type'} (a : _124659) : (term83 _124659 a) = (term83 _124659 a).
Proof. exact (eq_refl (term83 _124659 a)). Qed.
Lemma lem6451548 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : (term84 _124659 a x) = (term85 _124659 a).
Proof. exact (MK_COMB (@lem6451547 _124659 a) (@lem6451479 _124659 x a h1)). Qed.
Lemma lem6451549 {_124659 : Type'} (a : _124659) : (term85 _124659 a) = (term86 _124659 a).
Proof. exact (eq_refl (term85 _124659 a)). Qed.
Lemma lem6451550 {_124659 : Type'} (a : _124659) (x : _124659) : (term87 _124659 a x) = (term87 _124659 a x).
Proof. exact (eq_refl (term87 _124659 a x)). Qed.
Lemma lem6451551 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term85 _124659 a)) = ((term84 _124659 a x) = (term86 _124659 a)).
Proof. exact (MK_COMB (@lem6451550 _124659 a x) (@lem6451549 _124659 a)). Qed.
Lemma lem6451552 {_124659 : Type'} (x : _124659) (a : _124659) : (term84 _124659 a x) = (term2 _124659 x a).
Proof. exact (eq_refl (term84 _124659 a x)). Qed.
Lemma lem6451553 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6451554 {_124659 : Type'} (x : _124659) (a : _124659) : (term87 _124659 a x) = (term88 _124659 x a).
Proof. exact (MK_COMB (@lem6451553) (@lem6451552 _124659 x a)). Qed.
Lemma lem6451555 {_124659 : Type'} (a : _124659) : (term86 _124659 a) = (term86 _124659 a).
Proof. exact (eq_refl (term86 _124659 a)). Qed.
Lemma lem6451556 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term86 _124659 a)) = ((term2 _124659 x a) = (term86 _124659 a)).
Proof. exact (MK_COMB (@lem6451554 _124659 x a) (@lem6451555 _124659 a)). Qed.
Lemma lem6451557 {_124659 : Type'} (x : _124659) (a : _124659) : ((term84 _124659 a x) = (term85 _124659 a)) = ((term2 _124659 x a) = (term86 _124659 a)).
Proof. exact (TRANS (@lem6451551 _124659 x a) (@lem6451556 _124659 x a)). Qed.
Lemma lem6451558 {_124659 : Type'} (x : _124659) (a : _124659) (h1 : x = a) : (term2 _124659 x a) = (term86 _124659 a).
Proof. exact (EQ_MP (@lem6451557 _124659 x a) (@lem6451548 _124659 x a h1)). Qed.
Lemma lem6451559 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : term86 _124659 a.
Proof. exact (EQ_MP (@lem6451558 _124659 x a h2) (@lem6451477 _124659 dom x a h1)). Qed.
Lemma lem6451575 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : dom x.
Proof. exact (proj1 (@lem6451396 _124659 dom x a h1)). Qed.
Lemma lem6451576 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : term97 _124659 dom x.
Proof. exact (fun h0 : term30 _124659 dom x => @lem6451575 _124659 dom x a h1). Qed.
Lemma lem6451578 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451579 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term97 _124659 dom x) = (dom x).
Proof. exact (@lem6451578 (dom x)). Qed.
Lemma lem6451580 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : dom x.
Proof. exact (EQ_MP (@lem6451579 _124659 dom x) (@lem6451576 _124659 dom x a h1)). Qed.
Lemma lem6451583 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6451585 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term30 _124659 dom x) = (term98 _124659 dom x).
Proof. exact (@lem6451583 (dom x)). Qed.
Lemma lem6451588 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term98 _124659 dom x.
Proof. exact (EQ_MP (@lem6451585 _124659 dom x) (@lem6451461 _124659 dom x h1)). Qed.
Lemma lem6451591 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : False.
Proof. exact (@lem6451588 _124659 dom x h1 (@lem6451580 _124659 dom x a h2)). Qed.
Lemma lem6451592 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : term96.
Proof. exact (fun h0 : ~ False => @lem6451591 _124659 dom x a h1 h2). Qed.
Lemma lem6451594 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451595 : term96 = False.
Proof. exact (@lem6451594 False). Qed.
Lemma lem6451596 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451595) (@lem6451592 _124659 dom x a h1 h2)). Qed.
Lemma lem6451612 {_124659 : Type'} (x : _124659) : x = x.
Proof. exact (@lem21386 _124659 x). Qed.
Lemma lem6451613 {_124659 : Type'} (x : _124659) : x = x.
Proof. exact (@lem6451612 _124659 x). Qed.
Lemma lem6451614 {_124659 : Type'} (a : _124659) : a = a.
Proof. exact (@lem6451613 _124659 a). Qed.
Lemma lem6451615 {_124659 : Type'} (a : _124659) : term93 _124659 a.
Proof. exact (fun h0 : term86 _124659 a => @lem6451614 _124659 a). Qed.
Lemma lem6451617 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451618 {_124659 : Type'} (a : _124659) : (term93 _124659 a) = (a = a).
Proof. exact (@lem6451617 (a = a)). Qed.
Lemma lem6451619 {_124659 : Type'} (a : _124659) : a = a.
Proof. exact (EQ_MP (@lem6451618 _124659 a) (@lem6451615 _124659 a)). Qed.
Lemma lem6451622 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6451624 {_124659 : Type'} (a : _124659) : (term86 _124659 a) = (term95 _124659 a).
Proof. exact (@lem6451622 (a = a)). Qed.
Lemma lem6451627 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : term95 _124659 a.
Proof. exact (EQ_MP (@lem6451624 _124659 a) (@lem6451519 _124659 dom x a h1 h2)). Qed.
Lemma lem6451630 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (@lem6451627 _124659 dom x a h1 h2 (@lem6451619 _124659 a)). Qed.
Lemma lem6451631 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : term96.
Proof. exact (fun h0 : ~ False => @lem6451630 _124659 dom x a h1 h2). Qed.
Lemma lem6451633 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451634 : term96 = False.
Proof. exact (@lem6451633 False). Qed.
Lemma lem6451651 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : dom x.
Proof. exact (proj1 (@lem6451403 _124659 dom x a h1)). Qed.
Lemma lem6451652 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : term97 _124659 dom x.
Proof. exact (fun h0 : term30 _124659 dom x => @lem6451651 _124659 dom x a h1). Qed.
Lemma lem6451654 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451655 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term97 _124659 dom x) = (dom x).
Proof. exact (@lem6451654 (dom x)). Qed.
Lemma lem6451656 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : dom x.
Proof. exact (EQ_MP (@lem6451655 _124659 dom x) (@lem6451652 _124659 dom x a h1)). Qed.
Lemma lem6451659 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6451661 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) : (term30 _124659 dom x) = (term98 _124659 dom x).
Proof. exact (@lem6451659 (dom x)). Qed.
Lemma lem6451664 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (h1 : term30 _124659 dom x) : term98 _124659 dom x.
Proof. exact (EQ_MP (@lem6451661 _124659 dom x) (@lem6451473 _124659 dom x h1)). Qed.
Lemma lem6451667 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : False.
Proof. exact (@lem6451664 _124659 dom x h1 (@lem6451656 _124659 dom x a h2)). Qed.
Lemma lem6451668 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : term96.
Proof. exact (fun h0 : ~ False => @lem6451667 _124659 dom x a h1 h2). Qed.
Lemma lem6451670 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451671 : term96 = False.
Proof. exact (@lem6451670 False). Qed.
Lemma lem6451672 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451671) (@lem6451668 _124659 dom x a h1 h2)). Qed.
Lemma lem6451688 {_124659 : Type'} (x : _124659) : x = x.
Proof. exact (@lem21386 _124659 x). Qed.
Lemma lem6451689 {_124659 : Type'} (x : _124659) : x = x.
Proof. exact (@lem6451688 _124659 x). Qed.
Lemma lem6451690 {_124659 : Type'} (a : _124659) : a = a.
Proof. exact (@lem6451689 _124659 a). Qed.
Lemma lem6451691 {_124659 : Type'} (a : _124659) : term93 _124659 a.
Proof. exact (fun h0 : term86 _124659 a => @lem6451690 _124659 a). Qed.
Lemma lem6451693 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451694 {_124659 : Type'} (a : _124659) : (term93 _124659 a) = (a = a).
Proof. exact (@lem6451693 (a = a)). Qed.
Lemma lem6451695 {_124659 : Type'} (a : _124659) : a = a.
Proof. exact (EQ_MP (@lem6451694 _124659 a) (@lem6451691 _124659 a)). Qed.
Lemma lem6451698 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6451700 {_124659 : Type'} (a : _124659) : (term86 _124659 a) = (term95 _124659 a).
Proof. exact (@lem6451698 (a = a)). Qed.
Lemma lem6451703 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : term95 _124659 a.
Proof. exact (EQ_MP (@lem6451700 _124659 a) (@lem6451559 _124659 dom x a h1 h2)). Qed.
Lemma lem6451706 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (@lem6451703 _124659 dom x a h1 h2 (@lem6451695 _124659 a)). Qed.
Lemma lem6451707 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : term96.
Proof. exact (fun h0 : ~ False => @lem6451706 _124659 dom x a h1 h2). Qed.
Lemma lem6451709 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6451710 : term96 = False.
Proof. exact (@lem6451709 False). Qed.
Lemma lem6451712 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451710) (@lem6451707 _124659 dom x a h1 h2)). Qed.
Lemma lem6451713 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451634) (@lem6451631 _124659 dom x a h1 h2)). Qed.
Lemma lem6451714 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451712 _124659 dom x a h1 h2) (fun h3 : False => @lem6451479 _124659 x a h2)). Qed.
Lemma lem6451715 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451714 _124659 dom x a h1 h2) (@lem6451479 _124659 x a h2)). Qed.
Lemma lem6451716 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451672 _124659 dom x a h1 h2) (fun h3 : False => @lem6451473 _124659 dom x h1)). Qed.
Lemma lem6451717 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451716 _124659 dom x a h1 h2) (@lem6451473 _124659 dom x h1)). Qed.
Lemma lem6451718 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451713 _124659 dom x a h1 h2) (fun h3 : False => @lem6451467 _124659 x a h2)). Qed.
Lemma lem6451719 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451718 _124659 dom x a h1 h2) (@lem6451467 _124659 x a h2)). Qed.
Lemma lem6451720 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451596 _124659 dom x a h1 h2) (fun h3 : False => @lem6451461 _124659 dom x h1)). Qed.
Lemma lem6451721 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451720 _124659 dom x a h1 h2) (@lem6451461 _124659 dom x h1)). Qed.
Lemma lem6451722 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451715 _124659 dom x a h1 h2) (fun h3 : False => @lem6451455 _124659 x a h2)). Qed.
Lemma lem6451723 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451722 _124659 dom x a h1 h2) (@lem6451455 _124659 x a h2)). Qed.
Lemma lem6451724 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451717 _124659 dom x a h1 h2) (fun h3 : False => @lem6451443 _124659 dom x h1)). Qed.
Lemma lem6451725 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451724 _124659 dom x a h1 h2) (@lem6451443 _124659 dom x h1)). Qed.
Lemma lem6451726 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451719 _124659 dom x a h1 h2) (fun h3 : False => @lem6451431 _124659 x a h2)). Qed.
Lemma lem6451727 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451726 _124659 dom x a h1 h2) (@lem6451431 _124659 x a h2)). Qed.
Lemma lem6451728 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451721 _124659 dom x a h1 h2) (fun h3 : False => @lem6451419 _124659 dom x h1)). Qed.
Lemma lem6451729 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451728 _124659 dom x a h1 h2) (@lem6451419 _124659 dom x h1)). Qed.
Lemma lem6451730 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451723 _124659 dom x a h1 h2) (fun h3 : False => @lem6451455 _124659 x a h2)). Qed.
Lemma lem6451731 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451730 _124659 dom x a h1 h2) (@lem6451455 _124659 x a h2)). Qed.
Lemma lem6451732 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451725 _124659 dom x a h1 h2) (fun h3 : False => @lem6451443 _124659 dom x h1)). Qed.
Lemma lem6451733 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term366 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451732 _124659 dom x a h1 h2) (@lem6451443 _124659 dom x h1)). Qed.
Lemma lem6451734 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : (x = a) = False.
Proof. exact (prop_ext (fun h3 : x = a => @lem6451727 _124659 dom x a h1 h2) (fun h3 : False => @lem6451431 _124659 x a h2)). Qed.
Lemma lem6451735 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) (h2 : x = a) : False.
Proof. exact (EQ_MP (@lem6451734 _124659 dom x a h1 h2) (@lem6451431 _124659 x a h2)). Qed.
Lemma lem6451736 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : (term30 _124659 dom x) = False.
Proof. exact (prop_ext (fun h3 : term30 _124659 dom x => @lem6451729 _124659 dom x a h1 h2) (fun h3 : False => @lem6451419 _124659 dom x h1)). Qed.
Lemma lem6451737 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term30 _124659 dom x) (h2 : term370 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451736 _124659 dom x a h1 h2) (@lem6451419 _124659 dom x h1)). Qed.
Lemma lem6451738 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term366 _124659 dom x a) : False.
Proof. exact (or_elim (@lem6451402 _124659 dom x a h1) (fun h0 : term30 _124659 dom x => @lem6451733 _124659 dom x a h0 h1) (fun h0 : x = a => @lem6451731 _124659 dom x a h1 h0)). Qed.
Lemma lem6451739 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term370 _124659 dom x a) : False.
Proof. exact (or_elim (@lem6451397 _124659 dom x a h1) (fun h0 : term30 _124659 dom x => @lem6451737 _124659 dom x a h0 h1) (fun h0 : x = a => @lem6451735 _124659 dom x a h1 h0)). Qed.
Lemma lem6451740 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : False.
Proof. exact (or_elim (@lem6451393 _124659 dom x a h1) (fun h0 : term370 _124659 dom x a => @lem6451739 _124659 dom x a h0) (fun h0 : term366 _124659 dom x a => @lem6451738 _124659 dom x a h0)). Qed.
Lemma lem6451741 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : (term341 _124659 dom x a) = False.
Proof. exact (prop_ext (fun h2 : term341 _124659 dom x a => @lem6451740 _124659 dom x a h1) (fun h2 : False => @lem6451285 _124659 dom x a h1)). Qed.
Lemma lem6451742 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451741 _124659 dom x a h1) (@lem6451285 _124659 dom x a h1)). Qed.
Lemma lem6451743 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term340 _124659 dom x a.
Proof. exact (fun h0 : term341 _124659 dom x a => @lem6451742 _124659 dom x a h0). Qed.
Lemma lem6451744 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term327 _124659 dom x a) = (term339 _124659 dom x a).
Proof. exact (EQ_MP (@lem6451284 _124659 dom x a) (@lem6451743 _124659 dom x a)). Qed.
Lemma lem6451749 {_124659 : Type'} (x : _124659) (a : _124659) : term349 _124659 x a.
Proof. exact (fun dom : _124659 -> Prop => @lem6451744 _124659 dom x a). Qed.
Lemma lem6451754 {_124659 : Type'} (a : _124659) : term353 _124659 a.
Proof. exact (fun x : _124659 => @lem6451749 _124659 x a). Qed.
Lemma lem6451759 {_124659 : Type'} : term357 _124659.
Proof. exact (fun a : _124659 => @lem6451754 _124659 a). Qed.
Lemma lem6451760 {_124659 : Type'} : term356 _124659.
Proof. exact (EQ_MP (@lem6451280 _124659) (@lem6451759 _124659)). Qed.
Lemma lem6451761 {_124659 : Type'} (a : _124659) : term375 _124659 a.
Proof. exact (@lem6451760 _124659 a). Qed.
Lemma lem6451762 {_124659 : Type'} (a : _124659) : (term375 _124659 a) = (term352 _124659 a).
Proof. exact (eq_refl (term375 _124659 a)). Qed.
Lemma lem6451763 {_124659 : Type'} (a : _124659) : term352 _124659 a.
Proof. exact (EQ_MP (@lem6451762 _124659 a) (@lem6451761 _124659 a)). Qed.
Lemma lem6451764 {_124659 : Type'} (a : _124659) (x : _124659) : term376 _124659 a x.
Proof. exact (@lem6451763 _124659 a x). Qed.
Lemma lem6451765 {_124659 : Type'} (x : _124659) (a : _124659) : (term376 _124659 a x) = (term348 _124659 x a).
Proof. exact (eq_refl (term376 _124659 a x)). Qed.
Lemma lem6451766 {_124659 : Type'} (x : _124659) (a : _124659) : term348 _124659 x a.
Proof. exact (EQ_MP (@lem6451765 _124659 x a) (@lem6451764 _124659 a x)). Qed.
Lemma lem6451767 {_124659 : Type'} (x : _124659) (a : _124659) (dom : _124659 -> Prop) : term377 _124659 x a dom.
Proof. exact (@lem6451766 _124659 x a dom). Qed.
Lemma lem6451768 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term377 _124659 x a dom) = (term340 _124659 dom x a).
Proof. exact (eq_refl (term377 _124659 x a dom)). Qed.
Lemma lem6451769 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term340 _124659 dom x a.
Proof. exact (EQ_MP (@lem6451768 _124659 dom x a) (@lem6451767 _124659 x a dom)). Qed.
Lemma lem6451771 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term340 _124659 dom x a.
Proof. exact (@lem6451180 _124659 dom x a (@lem6451769 _124659 dom x a)). Qed.
Lemma lem6451772 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : False.
Proof. exact (@lem6451771 _124659 dom x a (@lem6451164 _124659 dom x a h1)). Qed.
Lemma lem6451773 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : (term341 _124659 dom x a) = False.
Proof. exact (prop_ext (fun h2 : term341 _124659 dom x a => @lem6451772 _124659 dom x a h1) (fun h2 : False => @lem6451164 _124659 dom x a h1)). Qed.
Lemma lem6451774 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) (h1 : term341 _124659 dom x a) : False.
Proof. exact (EQ_MP (@lem6451773 _124659 dom x a h1) (@lem6451164 _124659 dom x a h1)). Qed.
Lemma lem6451775 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : term340 _124659 dom x a.
Proof. exact (fun h0 : term341 _124659 dom x a => @lem6451774 _124659 dom x a h0). Qed.
Lemma lem6451776 {_124659 : Type'} (dom : _124659 -> Prop) (x : _124659) (a : _124659) : (term327 _124659 dom x a) = (term339 _124659 dom x a).
Proof. exact (EQ_MP (@lem6451163 _124659 dom x a) (@lem6451775 _124659 dom x a)). Qed.
Lemma lem6451794 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term23 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem6451795 {_124670 : Type'} (s : _124670 -> Prop) (t : _124670 -> Prop) : (s = t) = (term23 _124670 s t).
Proof. exact (@lem6451794 _124670 s t). Qed.
Lemma lem6451796 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : ((@INSERT _124670 i k) = k) = (term378 _124670 i k).
Proof. exact (@lem6451795 _124670 (@INSERT _124670 i k) k). Qed.
Lemma lem6451805 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term324 _124670 i k) = (term324 _124670 i k).
Proof. exact (eq_refl (term324 _124670 i k)). Qed.
Lemma lem6451806 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term379 _124670 i k) = (term380 _124670 i k).
Proof. exact (MK_COMB (@lem6451805 _124670 i k) (@lem6451796 _124670 i k)). Qed.
Lemma lem6451809 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term380 _124670 i k) = (term379 _124670 i k).
Proof. exact (SYM (@lem6451806 _124670 i k)). Qed.
Lemma lem6451813 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6451814 {_124670 : Type'} (P : _124670 -> Prop) (x : _124670) : (@IN _124670 x P) = (P x).
Proof. exact (@lem6451813 _124670 P x). Qed.
Lemma lem6451815 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (@IN _124670 i k) = (k i).
Proof. exact (@lem6451814 _124670 k i). Qed.
Lemma lem6451816 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6451817 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term324 _124670 i k) = (term325 _124670 k i).
Proof. exact (MK_COMB (@lem6451816) (@lem6451815 _124670 k i)). Qed.
Lemma lem6451825 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6451826 {_124670 : Type'} (y : _124670) (x : _124670) (s : _124670 -> Prop) : (term36 _124670 x y s) = (term37 _124670 y x s).
Proof. exact (@lem6451825 _124670 y x s). Qed.
Lemma lem6451827 {_124670 : Type'} (i : _124670) (x : _124670) (k : _124670 -> Prop) : (term36 _124670 x i k) = (term37 _124670 i x k).
Proof. exact (@lem6451826 _124670 i x k). Qed.
Lemma lem6451833 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6451834 {_124670 : Type'} (P : _124670 -> Prop) (x : _124670) : (@IN _124670 x P) = (P x).
Proof. exact (@lem6451833 _124670 P x). Qed.
Lemma lem6451835 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (@IN _124670 x k) = (k x).
Proof. exact (@lem6451834 _124670 k x). Qed.
Lemma lem6451836 {_124670 : Type'} (x : _124670) (i : _124670) : (term38 _124670 x i) = (term38 _124670 x i).
Proof. exact (eq_refl (term38 _124670 x i)). Qed.
Lemma lem6451837 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term37 _124670 i x k) = (term39 _124670 i k x).
Proof. exact (MK_COMB (@lem6451836 _124670 x i) (@lem6451835 _124670 k x)). Qed.
Lemma lem6451840 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term36 _124670 x i k) = (term39 _124670 i k x).
Proof. exact (TRANS (@lem6451827 _124670 i x k) (@lem6451837 _124670 i k x)). Qed.
Lemma lem6451841 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6451842 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term381 _124670 x i k) = (term382 _124670 i k x).
Proof. exact (MK_COMB (@lem6451841) (@lem6451840 _124670 i k x)). Qed.
Lemma lem6451844 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6451845 {_124670 : Type'} (P : _124670 -> Prop) (x : _124670) : (@IN _124670 x P) = (P x).
Proof. exact (@lem6451844 _124670 P x). Qed.
Lemma lem6451846 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (@IN _124670 x k) = (k x).
Proof. exact (@lem6451845 _124670 k x). Qed.
Lemma lem6451847 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : ((term36 _124670 x i k) = (@IN _124670 x k)) = ((term39 _124670 i k x) = (k x)).
Proof. exact (MK_COMB (@lem6451842 _124670 i k x) (@lem6451846 _124670 k x)). Qed.
Lemma lem6451850 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term383 _124670 i k) = (term384 _124670 i k).
Proof. exact (fun_ext (fun x : _124670 => @lem6451847 _124670 i k x)). Qed.
Lemma lem6451851 {_124670 : Type'} : (@all _124670) = (@all _124670).
Proof. exact (eq_refl (@all _124670)). Qed.
Lemma lem6451852 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term378 _124670 i k) = (term385 _124670 i k).
Proof. exact (MK_COMB (@lem6451851 _124670) (@lem6451850 _124670 i k)). Qed.
Lemma lem6451857 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term380 _124670 i k) = (term386 _124670 i k).
Proof. exact (MK_COMB (@lem6451817 _124670 k i) (@lem6451852 _124670 i k)). Qed.
Lemma lem6451860 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term386 _124670 i k) = (term380 _124670 i k).
Proof. exact (SYM (@lem6451857 _124670 i k)). Qed.
Lemma lem6451862 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6451863 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term386 _124670 i k) = (term387 _124670 i k).
Proof. exact (@lem6451862 (term386 _124670 i k)). Qed.
Lemma lem6451864 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term387 _124670 i k) = (term386 _124670 i k).
Proof. exact (SYM (@lem6451863 _124670 i k)). Qed.
Lemma lem6451865 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term388 _124670 i k) : term388 _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6451868 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term387 _124670 i k) : term387 _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6451869 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term389 _124670 i k.
Proof. exact (fun h0 : term387 _124670 i k => @lem6451868 _124670 i k h0). Qed.
Lemma lem6451870 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term389 _124670 i k) : term389 _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6451871 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term387 _124670 i k) : term387 _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6451872 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term387 _124670 i k) (h2 : term389 _124670 i k) : term387 _124670 i k.
Proof. exact (@lem6451870 _124670 i k h2 (@lem6451871 _124670 i k h1)). Qed.
Lemma lem6451873 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term387 _124670 i k) : term390 _124670 i k.
Proof. exact (fun h0 : term389 _124670 i k => @lem6451872 _124670 i k h1 h0). Qed.
Lemma lem6451874 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term389 _124670 i k) : term389 _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6451875 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term387 _124670 i k) (h2 : term389 _124670 i k) : term387 _124670 i k.
Proof. exact (@lem6451873 _124670 i k h1 (@lem6451874 _124670 i k h2)). Qed.
Lemma lem6451876 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term389 _124670 i k) : term389 _124670 i k.
Proof. exact (fun h0 : term387 _124670 i k => @lem6451875 _124670 i k h0 h1). Qed.
Lemma lem6451877 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term391 _124670 i k.
Proof. exact (fun h0 : term389 _124670 i k => @lem6451876 _124670 i k h0). Qed.
Lemma lem6451880 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term389 _124670 i k.
Proof. exact (@lem6451877 _124670 i k (@lem6451869 _124670 i k)). Qed.
Lemma lem6451881 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term389 _124670 i k.
Proof. exact (@lem6451880 _124670 i k). Qed.
Lemma lem6451891 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6451892 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term387 _124670 i k) = (term392 _124670 i k).
Proof. exact (@lem6451891 (term388 _124670 i k)). Qed.
Lemma lem6451894 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6451895 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term392 _124670 i k) = (term386 _124670 i k).
Proof. exact (@lem6451894 (term386 _124670 i k)). Qed.
Lemma lem6451898 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term387 _124670 i k) = (term386 _124670 i k).
Proof. exact (TRANS (@lem6451892 _124670 i k) (@lem6451895 _124670 i k)). Qed.
Lemma lem6451905 {_124670 : Type'} (k : _124670 -> Prop) : (term393 _124670 k) = (term394 _124670 k).
Proof. exact (fun_ext (fun i : _124670 => @lem6451898 _124670 i k)). Qed.
Lemma lem6451906 {_124670 : Type'} : (@all _124670) = (@all _124670).
Proof. exact (eq_refl (@all _124670)). Qed.
Lemma lem6451907 {_124670 : Type'} (k : _124670 -> Prop) : (term395 _124670 k) = (term396 _124670 k).
Proof. exact (MK_COMB (@lem6451906 _124670) (@lem6451905 _124670 k)). Qed.
Lemma lem6451912 {_124670 : Type'} : (term397 _124670) = (term398 _124670).
Proof. exact (fun_ext (fun k : _124670 -> Prop => @lem6451907 _124670 k)). Qed.
Lemma lem6451913 {_124670 : Type'} : (@all (_124670 -> Prop)) = (@all (_124670 -> Prop)).
Proof. exact (eq_refl (@all (_124670 -> Prop))). Qed.
Lemma lem6451922 {_124670 : Type'} : (term399 _124670) = (term400 _124670).
Proof. exact (MK_COMB (@lem6451913 _124670) (@lem6451912 _124670)). Qed.
Lemma lem6451931 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : ((term39 _124670 i k x) = (k x)) = ((term39 _124670 i k x) = (k x)).
Proof. exact (eq_refl ((term39 _124670 i k x) = (k x))). Qed.
Lemma lem6451932 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term384 _124670 i k) = (term384 _124670 i k).
Proof. exact (fun_ext (fun x : _124670 => @lem6451931 _124670 i k x)). Qed.
Lemma lem6451933 {_124670 : Type'} : (@all _124670) = (@all _124670).
Proof. exact (eq_refl (@all _124670)). Qed.
Lemma lem6451934 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term385 _124670 i k) = (term385 _124670 i k).
Proof. exact (MK_COMB (@lem6451933 _124670) (@lem6451932 _124670 i k)). Qed.
Lemma lem6451937 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term325 _124670 k i) = (term325 _124670 k i).
Proof. exact (eq_refl (term325 _124670 k i)). Qed.
Lemma lem6451938 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term386 _124670 i k) = (term386 _124670 i k).
Proof. exact (MK_COMB (@lem6451937 _124670 k i) (@lem6451934 _124670 i k)). Qed.
Lemma lem6451939 {_124670 : Type'} (k : _124670 -> Prop) : (term394 _124670 k) = (term394 _124670 k).
Proof. exact (fun_ext (fun i : _124670 => @lem6451938 _124670 i k)). Qed.
Lemma lem6451940 {_124670 : Type'} : (@all _124670) = (@all _124670).
Proof. exact (eq_refl (@all _124670)). Qed.
Lemma lem6451941 {_124670 : Type'} (k : _124670 -> Prop) : (term396 _124670 k) = (term396 _124670 k).
Proof. exact (MK_COMB (@lem6451940 _124670) (@lem6451939 _124670 k)). Qed.
Lemma lem6451942 {_124670 : Type'} : (term398 _124670) = (term398 _124670).
Proof. exact (fun_ext (fun k : _124670 -> Prop => @lem6451941 _124670 k)). Qed.
Lemma lem6451943 {_124670 : Type'} : (@all (_124670 -> Prop)) = (@all (_124670 -> Prop)).
Proof. exact (eq_refl (@all (_124670 -> Prop))). Qed.
Lemma lem6451944 {_124670 : Type'} : (term400 _124670) = (term400 _124670).
Proof. exact (MK_COMB (@lem6451943 _124670) (@lem6451942 _124670)). Qed.
Lemma lem6451969 {_124670 : Type'} : (term399 _124670) = (term400 _124670).
Proof. exact (TRANS (@lem6451922 _124670) (@lem6451944 _124670)). Qed.
Lemma lem6451970 {_124670 : Type'} : (term400 _124670) = (term399 _124670).
Proof. exact (SYM (@lem6451969 _124670)). Qed.
Lemma lem6451973 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6451974 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : ((term39 _124670 i k x) = (k x)) = (term401 _124670 i k x).
Proof. exact (@lem6451973 ((term39 _124670 i k x) = (k x))). Qed.
Lemma lem6451975 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term401 _124670 i k x) = ((term39 _124670 i k x) = (k x)).
Proof. exact (SYM (@lem6451974 _124670 i k x)). Qed.
Lemma lem6451976 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term402 _124670 i k x) : term402 _124670 i k x.
Proof. exact (h1). Qed.
Lemma lem6451982 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6451991 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term67 _124670 i k x) = (term68 _124670 i k x).
Proof. exact (@lem17160 (x = i) (k x)). Qed.
Lemma lem6451996 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (k x) = (k x).
Proof. exact (eq_refl (k x)). Qed.
Lemma lem6451997 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6451998 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term403 _124670 i k x) = (term404 _124670 i k x).
Proof. exact (MK_COMB (@lem6451997) (@lem6451991 _124670 i k x)). Qed.
Lemma lem6451999 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term405 _124670 i k x) = (term406 _124670 i k x).
Proof. exact (MK_COMB (@lem6451998 _124670 i k x) (@lem6451996 _124670 k x)). Qed.
Lemma lem6452004 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term407 _124670 i k x) = (term407 _124670 i k x).
Proof. exact (eq_refl (term407 _124670 i k x)). Qed.
Lemma lem6452005 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term408 _124670 i k x) = (term409 _124670 i k x).
Proof. exact (MK_COMB (@lem6452004 _124670 i k x) (@lem6451999 _124670 i k x)). Qed.
Lemma lem6452006 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term402 _124670 i k x) = (term408 _124670 i k x).
Proof. exact (@lem17646 (term39 _124670 i k x) (k x)). Qed.
Lemma lem6452011 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) : (term402 _124670 i k x) = (term409 _124670 i k x).
Proof. exact (TRANS (@lem6452006 _124670 i k x) (@lem6452005 _124670 i k x)). Qed.
Lemma lem6452016 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6452060 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term402 _124670 i k x) : term409 _124670 i k x.
Proof. exact (EQ_MP (@lem6452011 _124670 i k x) (@lem6451976 _124670 i k x h1)). Qed.
Lemma lem6452061 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term410 _124670 i k x) : term410 _124670 i k x.
Proof. exact (h1). Qed.
Lemma lem6452062 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term406 _124670 i k x.
Proof. exact (h1). Qed.
Lemma lem6452064 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term410 _124670 i k x) : term39 _124670 i k x.
Proof. exact (proj1 (@lem6452061 _124670 i k x h1)). Qed.
Lemma lem6452068 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term68 _124670 i k x.
Proof. exact (proj1 (@lem6452062 _124670 i k x h1)). Qed.
Lemma lem6452074 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6452082 {_124670 : Type'} (x : _124670) (i : _124670) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6452094 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6452112 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6452114 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term410 _124670 i k x) : term30 _124670 k x.
Proof. exact (proj2 (@lem6452061 _124670 i k x h1)). Qed.
Lemma lem6452116 {_124670 : Type'} (x : _124670) (i : _124670) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6452120 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term410 _124670 i k x) : term30 _124670 k x.
Proof. exact (proj2 (@lem6452061 _124670 i k x h1)). Qed.
Lemma lem6452122 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6452130 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term30 _124670 k x.
Proof. exact (proj2 (@lem6452068 _124670 i k x h1)). Qed.
Lemma lem6452158 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6452159 {_124670 : Type'} (k : _124670 -> Prop) : (term411 _124670 k) = (term411 _124670 k).
Proof. exact (eq_refl (term411 _124670 k)). Qed.
Lemma lem6452160 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : x = i) : (term412 _124670 k x) = (term412 _124670 k i).
Proof. exact (MK_COMB (@lem6452159 _124670 k) (@lem6452116 _124670 x i h1)). Qed.
Lemma lem6452161 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term412 _124670 k i) = (term30 _124670 k i).
Proof. exact (eq_refl (term412 _124670 k i)). Qed.
Lemma lem6452162 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term413 _124670 k x) = (term413 _124670 k x).
Proof. exact (eq_refl (term413 _124670 k x)). Qed.
Lemma lem6452163 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) : ((term412 _124670 k x) = (term412 _124670 k i)) = ((term412 _124670 k x) = (term30 _124670 k i)).
Proof. exact (MK_COMB (@lem6452162 _124670 k x) (@lem6452161 _124670 k i)). Qed.
Lemma lem6452164 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term412 _124670 k x) = (term30 _124670 k x).
Proof. exact (eq_refl (term412 _124670 k x)). Qed.
Lemma lem6452165 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6452166 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term413 _124670 k x) = (term414 _124670 k x).
Proof. exact (MK_COMB (@lem6452165) (@lem6452164 _124670 k x)). Qed.
Lemma lem6452167 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term30 _124670 k i) = (term30 _124670 k i).
Proof. exact (eq_refl (term30 _124670 k i)). Qed.
Lemma lem6452168 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) : ((term412 _124670 k x) = (term30 _124670 k i)) = ((term30 _124670 k x) = (term30 _124670 k i)).
Proof. exact (MK_COMB (@lem6452166 _124670 k x) (@lem6452167 _124670 k i)). Qed.
Lemma lem6452169 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) : ((term412 _124670 k x) = (term412 _124670 k i)) = ((term30 _124670 k x) = (term30 _124670 k i)).
Proof. exact (TRANS (@lem6452163 _124670 x k i) (@lem6452168 _124670 x k i)). Qed.
Lemma lem6452170 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : x = i) : (term30 _124670 k x) = (term30 _124670 k i).
Proof. exact (EQ_MP (@lem6452169 _124670 x k i) (@lem6452160 _124670 k x i h1)). Qed.
Lemma lem6452171 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : term410 _124670 i k x) (h2 : x = i) : term30 _124670 k i.
Proof. exact (EQ_MP (@lem6452170 _124670 k x i h2) (@lem6452114 _124670 i k x h1)). Qed.
Lemma lem6452173 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (h1). Qed.
Lemma lem6452174 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : term97 _124670 k i.
Proof. exact (fun h0 : term30 _124670 k i => @lem6452173 _124670 k i h1). Qed.
Lemma lem6452176 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452177 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term97 _124670 k i) = (k i).
Proof. exact (@lem6452176 (k i)). Qed.
Lemma lem6452178 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : k i.
Proof. exact (EQ_MP (@lem6452177 _124670 k i) (@lem6452174 _124670 k i h1)). Qed.
Lemma lem6452181 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6452183 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : (term30 _124670 k i) = (term98 _124670 k i).
Proof. exact (@lem6452181 (k i)). Qed.
Lemma lem6452186 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : term410 _124670 i k x) (h2 : x = i) : term98 _124670 k i.
Proof. exact (EQ_MP (@lem6452183 _124670 k i) (@lem6452171 _124670 k x i h1 h2)). Qed.
Lemma lem6452189 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (@lem6452186 _124670 k x i h2 h3 (@lem6452178 _124670 k i h1)). Qed.
Lemma lem6452190 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6452189 _124670 k x i h1 h2 h3). Qed.
Lemma lem6452192 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452193 : term96 = False.
Proof. exact (@lem6452192 False). Qed.
Lemma lem6452194 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452193) (@lem6452190 _124670 k x i h1 h2 h3)). Qed.
Lemma lem6452196 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (h1 : k x) : k x.
Proof. exact (h1). Qed.
Lemma lem6452197 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (h1 : k x) : term97 _124670 k x.
Proof. exact (fun h0 : term30 _124670 k x => @lem6452196 _124670 k x h1). Qed.
Lemma lem6452199 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452200 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term97 _124670 k x) = (k x).
Proof. exact (@lem6452199 (k x)). Qed.
Lemma lem6452201 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (h1 : k x) : k x.
Proof. exact (EQ_MP (@lem6452200 _124670 k x) (@lem6452197 _124670 k x h1)). Qed.
Lemma lem6452204 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6452206 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term30 _124670 k x) = (term98 _124670 k x).
Proof. exact (@lem6452204 (k x)). Qed.
Lemma lem6452209 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term410 _124670 i k x) : term98 _124670 k x.
Proof. exact (EQ_MP (@lem6452206 _124670 k x) (@lem6452120 _124670 i k x h1)). Qed.
Lemma lem6452212 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : False.
Proof. exact (@lem6452209 _124670 i k x h2 (@lem6452201 _124670 k x h1)). Qed.
Lemma lem6452213 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6452212 _124670 i k x h1 h2). Qed.
Lemma lem6452215 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452216 : term96 = False.
Proof. exact (@lem6452215 False). Qed.
Lemma lem6452217 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : False.
Proof. exact (EQ_MP (@lem6452216) (@lem6452213 _124670 i k x h1 h2)). Qed.
Lemma lem6452233 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : k x.
Proof. exact (proj2 (@lem6452062 _124670 i k x h1)). Qed.
Lemma lem6452234 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term97 _124670 k x.
Proof. exact (fun h0 : term30 _124670 k x => @lem6452233 _124670 i k x h1). Qed.
Lemma lem6452236 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452237 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term97 _124670 k x) = (k x).
Proof. exact (@lem6452236 (k x)). Qed.
Lemma lem6452238 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : k x.
Proof. exact (EQ_MP (@lem6452237 _124670 k x) (@lem6452234 _124670 i k x h1)). Qed.
Lemma lem6452241 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6452243 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) : (term30 _124670 k x) = (term98 _124670 k x).
Proof. exact (@lem6452241 (k x)). Qed.
Lemma lem6452246 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term98 _124670 k x.
Proof. exact (EQ_MP (@lem6452243 _124670 k x) (@lem6452130 _124670 i k x h1)). Qed.
Lemma lem6452249 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : False.
Proof. exact (@lem6452246 _124670 i k x h1 (@lem6452238 _124670 i k x h1)). Qed.
Lemma lem6452250 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6452249 _124670 i k x h1). Qed.
Lemma lem6452252 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6452253 : term96 = False.
Proof. exact (@lem6452252 False). Qed.
Lemma lem6452254 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : term406 _124670 i k x) : False.
Proof. exact (EQ_MP (@lem6452253) (@lem6452250 _124670 i k x h1)). Qed.
Lemma lem6452255 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (k i) = False.
Proof. exact (prop_ext (fun h4 : k i => @lem6452194 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452158 _124670 k i h1)). Qed.
Lemma lem6452257 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452255 _124670 k x i h1 h2 h3) (@lem6452158 _124670 k i h1)). Qed.
Lemma lem6452258 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6452217 _124670 i k x h1 h2) (fun h3 : False => @lem6452122 _124670 k x h1)). Qed.
Lemma lem6452259 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : False.
Proof. exact (EQ_MP (@lem6452258 _124670 i k x h1 h2) (@lem6452122 _124670 k x h1)). Qed.
Lemma lem6452260 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6452257 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452116 _124670 x i h3)). Qed.
Lemma lem6452261 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452260 _124670 k x i h1 h2 h3) (@lem6452116 _124670 x i h3)). Qed.
Lemma lem6452262 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (k i) = False.
Proof. exact (prop_ext (fun h4 : k i => @lem6452261 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452112 _124670 k i h1)). Qed.
Lemma lem6452263 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452262 _124670 k x i h1 h2 h3) (@lem6452112 _124670 k i h1)). Qed.
Lemma lem6452264 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6452259 _124670 i k x h1 h2) (fun h3 : False => @lem6452094 _124670 k x h1)). Qed.
Lemma lem6452265 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : False.
Proof. exact (EQ_MP (@lem6452264 _124670 i k x h1 h2) (@lem6452094 _124670 k x h1)). Qed.
Lemma lem6452266 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6452263 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452082 _124670 x i h3)). Qed.
Lemma lem6452267 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452266 _124670 k x i h1 h2 h3) (@lem6452082 _124670 x i h3)). Qed.
Lemma lem6452268 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (k i) = False.
Proof. exact (prop_ext (fun h4 : k i => @lem6452267 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452074 _124670 k i h1)). Qed.
Lemma lem6452269 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452268 _124670 k x i h1 h2 h3) (@lem6452074 _124670 k i h1)). Qed.
Lemma lem6452270 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : (k x) = False.
Proof. exact (prop_ext (fun h3 : k x => @lem6452265 _124670 i k x h1 h2) (fun h3 : False => @lem6452094 _124670 k x h1)). Qed.
Lemma lem6452271 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k x) (h2 : term410 _124670 i k x) : False.
Proof. exact (EQ_MP (@lem6452270 _124670 i k x h1 h2) (@lem6452094 _124670 k x h1)). Qed.
Lemma lem6452272 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6452269 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452082 _124670 x i h3)). Qed.
Lemma lem6452273 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452272 _124670 k x i h1 h2 h3) (@lem6452082 _124670 x i h3)). Qed.
Lemma lem6452274 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : (k i) = False.
Proof. exact (prop_ext (fun h4 : k i => @lem6452273 _124670 k x i h1 h2 h3) (fun h4 : False => @lem6452074 _124670 k i h1)). Qed.
Lemma lem6452275 {_124670 : Type'} (k : _124670 -> Prop) (x : _124670) (i : _124670) (h1 : k i) (h2 : term410 _124670 i k x) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6452274 _124670 k x i h1 h2 h3) (@lem6452074 _124670 k i h1)). Qed.
Lemma lem6452276 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (x : _124670) (h1 : k i) (h2 : term410 _124670 i k x) : False.
Proof. exact (or_elim (@lem6452064 _124670 i k x h2) (fun h0 : x = i => @lem6452275 _124670 k x i h1 h2 h0) (fun h0 : k x => @lem6452271 _124670 i k x h0 h2)). Qed.
Lemma lem6452277 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : False.
Proof. exact (or_elim (@lem6452060 _124670 i k x h1) (fun h0 : term410 _124670 i k x => @lem6452276 _124670 i k x h2 h0) (fun h0 : term406 _124670 i k x => @lem6452254 _124670 i k x h0)). Qed.
Lemma lem6452278 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : (k i) = False.
Proof. exact (prop_ext (fun h3 : k i => @lem6452277 _124670 x k i h1 h2) (fun h3 : False => @lem6452016 _124670 k i h2)). Qed.
Lemma lem6452279 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : False.
Proof. exact (EQ_MP (@lem6452278 _124670 x k i h1 h2) (@lem6452016 _124670 k i h2)). Qed.
Lemma lem6452280 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : (k i) = False.
Proof. exact (prop_ext (fun h3 : k i => @lem6452279 _124670 x k i h1 h2) (fun h3 : False => @lem6451982 _124670 k i h2)). Qed.
Lemma lem6452281 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : False.
Proof. exact (EQ_MP (@lem6452280 _124670 x k i h1 h2) (@lem6451982 _124670 k i h2)). Qed.
Lemma lem6452282 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : (term402 _124670 i k x) = False.
Proof. exact (prop_ext (fun h3 : term402 _124670 i k x => @lem6452281 _124670 x k i h1 h2) (fun h3 : False => @lem6451976 _124670 i k x h1)). Qed.
Lemma lem6452283 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : term402 _124670 i k x) (h2 : k i) : False.
Proof. exact (EQ_MP (@lem6452282 _124670 x k i h1 h2) (@lem6451976 _124670 i k x h1)). Qed.
Lemma lem6452284 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : k i) : term401 _124670 i k x.
Proof. exact (fun h0 : term402 _124670 i k x => @lem6452283 _124670 x k i h0 h1). Qed.
Lemma lem6452285 {_124670 : Type'} (x : _124670) (k : _124670 -> Prop) (i : _124670) (h1 : k i) : (term39 _124670 i k x) = (k x).
Proof. exact (EQ_MP (@lem6451975 _124670 i k x) (@lem6452284 _124670 x k i h1)). Qed.
Lemma lem6452290 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) (h1 : k i) : term385 _124670 i k.
Proof. exact (fun x : _124670 => @lem6452285 _124670 x k i h1). Qed.
Lemma lem6452291 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term386 _124670 i k.
Proof. exact (fun h0 : k i => @lem6452290 _124670 k i h0). Qed.
Lemma lem6452296 {_124670 : Type'} (k : _124670 -> Prop) : term396 _124670 k.
Proof. exact (fun i : _124670 => @lem6452291 _124670 i k). Qed.
Lemma lem6452301 {_124670 : Type'} : term400 _124670.
Proof. exact (fun k : _124670 -> Prop => @lem6452296 _124670 k). Qed.
Lemma lem6452302 {_124670 : Type'} : term399 _124670.
Proof. exact (EQ_MP (@lem6451970 _124670) (@lem6452301 _124670)). Qed.
Lemma lem6452303 {_124670 : Type'} (k : _124670 -> Prop) : term415 _124670 k.
Proof. exact (@lem6452302 _124670 k). Qed.
Lemma lem6452304 {_124670 : Type'} (k : _124670 -> Prop) : (term415 _124670 k) = (term395 _124670 k).
Proof. exact (eq_refl (term415 _124670 k)). Qed.
Lemma lem6452305 {_124670 : Type'} (k : _124670 -> Prop) : term395 _124670 k.
Proof. exact (EQ_MP (@lem6452304 _124670 k) (@lem6452303 _124670 k)). Qed.
Lemma lem6452306 {_124670 : Type'} (k : _124670 -> Prop) (i : _124670) : term416 _124670 k i.
Proof. exact (@lem6452305 _124670 k i). Qed.
Lemma lem6452307 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : (term416 _124670 k i) = (term387 _124670 i k).
Proof. exact (eq_refl (term416 _124670 k i)). Qed.
Lemma lem6452308 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term387 _124670 i k.
Proof. exact (EQ_MP (@lem6452307 _124670 i k) (@lem6452306 _124670 k i)). Qed.
Lemma lem6452310 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term387 _124670 i k.
Proof. exact (@lem6451881 _124670 i k (@lem6452308 _124670 i k)). Qed.
Lemma lem6452311 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term388 _124670 i k) : False.
Proof. exact (@lem6452310 _124670 i k (@lem6451865 _124670 i k h1)). Qed.
Lemma lem6452312 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term388 _124670 i k) : (term388 _124670 i k) = False.
Proof. exact (prop_ext (fun h2 : term388 _124670 i k => @lem6452311 _124670 i k h1) (fun h2 : False => @lem6451865 _124670 i k h1)). Qed.
Lemma lem6452313 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : term388 _124670 i k) : False.
Proof. exact (EQ_MP (@lem6452312 _124670 i k h1) (@lem6451865 _124670 i k h1)). Qed.
Lemma lem6452314 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term387 _124670 i k.
Proof. exact (fun h0 : term388 _124670 i k => @lem6452313 _124670 i k h0). Qed.
Lemma lem6452315 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term386 _124670 i k.
Proof. exact (EQ_MP (@lem6451864 _124670 i k) (@lem6452314 _124670 i k)). Qed.
Lemma lem6452316 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term380 _124670 i k.
Proof. exact (EQ_MP (@lem6451860 _124670 i k) (@lem6452315 _124670 i k)). Qed.
Lemma lem6452317 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term379 _124670 i k.
Proof. exact (EQ_MP (@lem6451809 _124670 i k) (@lem6452316 _124670 i k)). Qed.
Lemma lem6452318 {K : Type'} (i : K) (k : K -> Prop) : term417 K i k.
Proof. exact (@lem9784 (@IN K i k)). Qed.
Lemma lem6452319 {K : Type'} (i : K) (k : K -> Prop) : (term417 K i k) = (term418 K i k).
Proof. exact (eq_refl (term417 K i k)). Qed.
Lemma lem6452320 {K : Type'} (i : K) (k : K -> Prop) : term418 K i k.
Proof. exact (EQ_MP (@lem6452319 K i k) (@lem6452318 K i k)). Qed.
Lemma lem6452321 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : @IN K i k.
Proof. exact (h1). Qed.
Lemma lem6452322 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : term29 K i k.
Proof. exact (h1). Qed.
Lemma lem6452323 {A K : Type'} (dom : A -> Prop) : term306 A K dom.
Proof. exact (@lem6401305 A K dom). Qed.
Lemma lem6452324 {A K : Type'} (dom : A -> Prop) : (term306 A K dom) = (term307 A K dom).
Proof. exact (eq_refl (term306 A K dom)). Qed.
Lemma lem6452325 {A K : Type'} (dom : A -> Prop) : term307 A K dom.
Proof. exact (EQ_MP (@lem6452324 A K dom) (@lem6452323 A K dom)). Qed.
Lemma lem6452326 {A K : Type'} (dom : A -> Prop) (neut : A) : term308 A K dom neut.
Proof. exact (@lem6452325 A K dom neut). Qed.
Lemma lem6452327 {A K : Type'} (dom : A -> Prop) (neut : A) : (term308 A K dom neut) = (term309 A K dom neut).
Proof. exact (eq_refl (term308 A K dom neut)). Qed.
Lemma lem6452328 {A K : Type'} (dom : A -> Prop) (neut : A) : term309 A K dom neut.
Proof. exact (EQ_MP (@lem6452327 A K dom neut) (@lem6452326 A K dom neut)). Qed.
Lemma lem6452329 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term310 A K dom neut op.
Proof. exact (@lem6452328 A K dom neut op). Qed.
Lemma lem6452330 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term310 A K dom neut op) = (term311 A K op dom neut).
Proof. exact (eq_refl (term310 A K dom neut op)). Qed.
Lemma lem6452331 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term311 A K op dom neut.
Proof. exact (EQ_MP (@lem6452330 A K op dom neut) (@lem6452329 A K dom neut op)). Qed.
Lemma lem6452332 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term312 A K op dom neut ltle.
Proof. exact (@lem6452331 A K op dom neut ltle). Qed.
Lemma lem6452333 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term312 A K op dom neut ltle) = (term313 A K op ltle dom neut).
Proof. exact (eq_refl (term312 A K op dom neut ltle)). Qed.
Lemma lem6452334 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term313 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6452333 A K op ltle dom neut) (@lem6452332 A K op dom neut ltle)). Qed.
Lemma lem6452335 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term314 A K op ltle dom neut k.
Proof. exact (@lem6452334 A K op ltle dom neut k). Qed.
Lemma lem6452336 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term314 A K op ltle dom neut k) = (term315 A K op ltle k dom neut).
Proof. exact (eq_refl (term314 A K op ltle dom neut k)). Qed.
Lemma lem6452337 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : term315 A K op ltle k dom neut.
Proof. exact (EQ_MP (@lem6452336 A K op ltle k dom neut) (@lem6452335 A K op ltle dom neut k)). Qed.
Lemma lem6452338 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term316 A K op ltle k dom neut f.
Proof. exact (@lem6452337 A K op ltle k dom neut f). Qed.
Lemma lem6452339 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term316 A K op ltle k dom neut f) = ((@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut)).
Proof. exact (eq_refl (term316 A K op ltle k dom neut f)). Qed.
Lemma lem6452342 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut).
Proof. exact (EQ_MP (@lem6452339 A K op ltle k f dom neut) (@lem6452338 A K op ltle k dom neut f)). Qed.
Lemma lem6452343 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut).
Proof. exact (@lem6452342 A K op ltle k f dom neut). Qed.
Lemma lem6452344 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = (term419 A K op ltle f dom neut).
Proof. exact (@lem6452343 A K op ltle (@EMPTY K) f dom neut). Qed.
Lemma lem6452345 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6452346 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term420 A K dom neut op ltle f) = (term421 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6452345 A) (@lem6452344 A K op ltle f dom neut)). Qed.
Lemma lem6452347 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6452348 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((@iterato A K dom neut op ltle (@EMPTY K) f) = neut) = ((term419 A K op ltle f dom neut) = neut).
Proof. exact (MK_COMB (@lem6452346 A K op ltle f dom neut) (@lem6452347 A neut)). Qed.
Lemma lem6452349 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : ((term419 A K op ltle f dom neut) = neut) = ((@iterato A K dom neut op ltle (@EMPTY K) f) = neut).
Proof. exact (SYM (@lem6452348 A K op ltle f dom neut)). Qed.
Lemma lem6452350 {A : Type'} (x : A) : term422 A x.
Proof. exact (@lem3204775 A x). Qed.
Lemma lem6452351 {A : Type'} (x : A) : (term422 A x) = (term423 A x).
Proof. exact (eq_refl (term422 A x)). Qed.
Lemma lem6452352 {A : Type'} (x : A) : term423 A x.
Proof. exact (EQ_MP (@lem6452351 A x) (@lem6452350 A x)). Qed.
Lemma lem6452353 {A : Type'} (x : A) : term424 A x.
Proof. exact (@lem82 (@IN A x (@EMPTY A))). Qed.
Lemma lem6452366 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452367 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452366 K x). Qed.
Lemma lem6452368 {K : Type'} (i : K) : (@IN K i (@EMPTY K)) = False.
Proof. exact (@lem6452367 K i). Qed.
Lemma lem6452369 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452370 {K : Type'} (i : K) : (term425 K i) = (and False).
Proof. exact (MK_COMB (@lem6452369) (@lem6452368 K i)). Qed.
Lemma lem6452371 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term426 A K f i dom neut) = (term426 A K f i dom neut).
Proof. exact (eq_refl (term426 A K f i dom neut)). Qed.
Lemma lem6452372 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = (term428 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452370 K i) (@lem6452371 A K f i dom neut)). Qed.
Lemma lem6452374 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452375 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term428 A K f i dom neut) = False.
Proof. exact (@lem6452374 (term426 A K f i dom neut)). Qed.
Lemma lem6452376 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = False.
Proof. exact (TRANS (@lem6452372 A K f i dom neut) (@lem6452375 A K f i dom neut)). Qed.
Lemma lem6452377 {K : Type'} (GEN_PVAR_263 : K) : (@SETSPEC K GEN_PVAR_263) = (@SETSPEC K GEN_PVAR_263).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_263)). Qed.
Lemma lem6452378 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (GEN_PVAR_263 : K) : (term429 A K GEN_PVAR_263 f i dom neut) = (@SETSPEC K GEN_PVAR_263 False).
Proof. exact (MK_COMB (@lem6452377 K GEN_PVAR_263) (@lem6452376 A K f i dom neut)). Qed.
Lemma lem6452379 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6452380 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_263 : K) (i : K) : (term430 A K GEN_PVAR_263 f dom neut i) = (@SETSPEC K GEN_PVAR_263 False i).
Proof. exact (MK_COMB (@lem6452378 A K f i dom neut GEN_PVAR_263) (@lem6452379 K i)). Qed.
Lemma lem6452381 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_263 : K) : (term431 A K GEN_PVAR_263 f dom neut) = (term432 K GEN_PVAR_263).
Proof. exact (fun_ext (fun i : K => @lem6452380 A K f dom neut GEN_PVAR_263 i)). Qed.
Lemma lem6452382 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6452383 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_263 : K) : (term433 A K GEN_PVAR_263 f dom neut) = (term434 K GEN_PVAR_263).
Proof. exact (MK_COMB (@lem6452382 K) (@lem6452381 A K f dom neut GEN_PVAR_263)). Qed.
Lemma lem6452388 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term435 A K f dom neut) = (term436 K).
Proof. exact (fun_ext (fun GEN_PVAR_263 : K => @lem6452383 A K f dom neut GEN_PVAR_263)). Qed.
Lemma lem6452389 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6452390 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term437 A K f dom neut) = (term438 K).
Proof. exact (MK_COMB (@lem6452389 K) (@lem6452388 A K f dom neut)). Qed.
Lemma lem6452392 {_88295 : Type'} : (term438 _88295) = (@EMPTY _88295).
Proof. exact (EQ_MP (@lem3399706 _88295) (@lem3399757 _88295)). Qed.
Lemma lem6452393 {K : Type'} : (term438 K) = (@EMPTY K).
Proof. exact (@lem6452392 K). Qed.
Lemma lem6452394 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term437 A K f dom neut) = (@EMPTY K).
Proof. exact (TRANS (@lem6452390 A K f dom neut) (@lem6452393 K)). Qed.
Lemma lem6452395 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6452396 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term439 A K f dom neut) = (@FINITE K (@EMPTY K)).
Proof. exact (MK_COMB (@lem6452395 K) (@lem6452394 A K f dom neut)). Qed.
Lemma lem6452397 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452398 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term440 A K f dom neut) = (term441 K).
Proof. exact (MK_COMB (@lem6452397) (@lem6452396 A K f dom neut)). Qed.
Lemma lem6452408 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452409 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452408 K x). Qed.
Lemma lem6452410 {K : Type'} (i : K) : (@IN K i (@EMPTY K)) = False.
Proof. exact (@lem6452409 K i). Qed.
Lemma lem6452411 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452412 {K : Type'} (i : K) : (term425 K i) = (and False).
Proof. exact (MK_COMB (@lem6452411) (@lem6452410 K i)). Qed.
Lemma lem6452413 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term426 A K f i dom neut) = (term426 A K f i dom neut).
Proof. exact (eq_refl (term426 A K f i dom neut)). Qed.
Lemma lem6452414 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = (term428 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452412 K i) (@lem6452413 A K f i dom neut)). Qed.
Lemma lem6452416 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452417 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term428 A K f i dom neut) = False.
Proof. exact (@lem6452416 (term426 A K f i dom neut)). Qed.
Lemma lem6452418 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = False.
Proof. exact (TRANS (@lem6452414 A K f i dom neut) (@lem6452417 A K f i dom neut)). Qed.
Lemma lem6452419 {K : Type'} (GEN_PVAR_264 : K) : (@SETSPEC K GEN_PVAR_264) = (@SETSPEC K GEN_PVAR_264).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_264)). Qed.
Lemma lem6452420 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (GEN_PVAR_264 : K) : (term429 A K GEN_PVAR_264 f i dom neut) = (@SETSPEC K GEN_PVAR_264 False).
Proof. exact (MK_COMB (@lem6452419 K GEN_PVAR_264) (@lem6452418 A K f i dom neut)). Qed.
Lemma lem6452421 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6452422 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_264 : K) (i : K) : (term430 A K GEN_PVAR_264 f dom neut i) = (@SETSPEC K GEN_PVAR_264 False i).
Proof. exact (MK_COMB (@lem6452420 A K f i dom neut GEN_PVAR_264) (@lem6452421 K i)). Qed.
Lemma lem6452423 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_264 : K) : (term431 A K GEN_PVAR_264 f dom neut) = (term432 K GEN_PVAR_264).
Proof. exact (fun_ext (fun i : K => @lem6452422 A K f dom neut GEN_PVAR_264 i)). Qed.
Lemma lem6452424 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6452425 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (GEN_PVAR_264 : K) : (term433 A K GEN_PVAR_264 f dom neut) = (term434 K GEN_PVAR_264).
Proof. exact (MK_COMB (@lem6452424 K) (@lem6452423 A K f dom neut GEN_PVAR_264)). Qed.
Lemma lem6452430 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term435 A K f dom neut) = (term436 K).
Proof. exact (fun_ext (fun GEN_PVAR_264 : K => @lem6452425 A K f dom neut GEN_PVAR_264)). Qed.
Lemma lem6452431 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6452432 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term437 A K f dom neut) = (term438 K).
Proof. exact (MK_COMB (@lem6452431 K) (@lem6452430 A K f dom neut)). Qed.
Lemma lem6452434 {_88295 : Type'} : (term438 _88295) = (@EMPTY _88295).
Proof. exact (EQ_MP (@lem3399706 _88295) (@lem3399757 _88295)). Qed.
Lemma lem6452435 {K : Type'} : (term438 K) = (@EMPTY K).
Proof. exact (@lem6452434 K). Qed.
Lemma lem6452436 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term437 A K f dom neut) = (@EMPTY K).
Proof. exact (TRANS (@lem6452432 A K f dom neut) (@lem6452435 K)). Qed.
Lemma lem6452437 {K : Type'} : (@eq (K -> Prop)) = (@eq (K -> Prop)).
Proof. exact (eq_refl (@eq (K -> Prop))). Qed.
Lemma lem6452438 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term442 A K f dom neut) = (@eq (K -> Prop) (@EMPTY K)).
Proof. exact (MK_COMB (@lem6452437 K) (@lem6452436 A K f dom neut)). Qed.
Lemma lem6452439 {K : Type'} : (@EMPTY K) = (@EMPTY K).
Proof. exact (eq_refl (@EMPTY K)). Qed.
Lemma lem6452440 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : ((term437 A K f dom neut) = (@EMPTY K)) = ((@EMPTY K) = (@EMPTY K)).
Proof. exact (MK_COMB (@lem6452438 A K f dom neut) (@lem6452439 K)). Qed.
Lemma lem6452442 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6452443 {K : Type'} (x : K -> Prop) : (x = x) = True.
Proof. exact (@lem6452442 (K -> Prop) x). Qed.
Lemma lem6452444 {K : Type'} : ((@EMPTY K) = (@EMPTY K)) = True.
Proof. exact (@lem6452443 K (@EMPTY K)). Qed.
Lemma lem6452445 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : ((term437 A K f dom neut) = (@EMPTY K)) = True.
Proof. exact (TRANS (@lem6452440 A K f dom neut) (@lem6452444 K)). Qed.
Lemma lem6452446 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6452447 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term443 A K f dom neut) = (~ True).
Proof. exact (MK_COMB (@lem6452446) (@lem6452445 A K f dom neut)). Qed.
Lemma lem6452449 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem6452450 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term443 A K f dom neut) = False.
Proof. exact (TRANS (@lem6452447 A K f dom neut) (@lem6452449)). Qed.
Lemma lem6452451 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term444 A K f dom neut) = (term445 K).
Proof. exact (MK_COMB (@lem6452398 A K f dom neut) (@lem6452450 A K f dom neut)). Qed.
Lemma lem6452453 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem6452454 {K : Type'} : (term445 K) = False.
Proof. exact (@lem6452453 (@FINITE K (@EMPTY K))). Qed.
Lemma lem6452455 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term444 A K f dom neut) = False.
Proof. exact (TRANS (@lem6452451 A K f dom neut) (@lem6452454 K)). Qed.
Lemma lem6452456 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem6452457 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term446 A K f dom neut) = (@COND A False).
Proof. exact (MK_COMB (@lem6452456 A) (@lem6452455 A K f dom neut)). Qed.
Lemma lem6452471 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452472 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452471 K x). Qed.
Lemma lem6452473 {K : Type'} (i : K) : (@IN K i (@EMPTY K)) = False.
Proof. exact (@lem6452472 K i). Qed.
Lemma lem6452474 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452475 {K : Type'} (i : K) : (term425 K i) = (and False).
Proof. exact (MK_COMB (@lem6452474) (@lem6452473 K i)). Qed.
Lemma lem6452489 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452490 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452489 K x). Qed.
Lemma lem6452491 {K : Type'} (j : K) : (@IN K j (@EMPTY K)) = False.
Proof. exact (@lem6452490 K j). Qed.
Lemma lem6452492 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452493 {K : Type'} (j : K) : (term425 K j) = (and False).
Proof. exact (MK_COMB (@lem6452492) (@lem6452491 K j)). Qed.
Lemma lem6452494 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term426 A K f j dom neut) = (term426 A K f j dom neut).
Proof. exact (eq_refl (term426 A K f j dom neut)). Qed.
Lemma lem6452495 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term427 A K f j dom neut) = (term428 A K f j dom neut).
Proof. exact (MK_COMB (@lem6452493 K j) (@lem6452494 A K f j dom neut)). Qed.
Lemma lem6452497 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452498 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term428 A K f j dom neut) = False.
Proof. exact (@lem6452497 (term426 A K f j dom neut)). Qed.
Lemma lem6452499 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term427 A K f j dom neut) = False.
Proof. exact (TRANS (@lem6452495 A K f j dom neut) (@lem6452498 A K f j dom neut)). Qed.
Lemma lem6452500 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6452501 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (j : K) (i : K) : (term448 A K ltle i f j dom neut) = (term449 K ltle j i).
Proof. exact (MK_COMB (@lem6452500 K ltle j i) (@lem6452499 A K f j dom neut)). Qed.
Lemma lem6452503 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem6452504 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term449 K ltle j i) = False.
Proof. exact (@lem6452503 (ltle j i)). Qed.
Lemma lem6452505 {A K : Type'} (ltle : type1402 K) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term448 A K ltle i f j dom neut) = False.
Proof. exact (TRANS (@lem6452501 A K f dom neut ltle j i) (@lem6452504 K ltle j i)). Qed.
Lemma lem6452506 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6452507 {A K : Type'} (ltle : type1402 K) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term450 A K ltle i f j dom neut) = (imp False).
Proof. exact (MK_COMB (@lem6452506) (@lem6452505 A K ltle i f j dom neut)). Qed.
Lemma lem6452510 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6452511 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term451 A K ltle f dom neut j i) = (term218 K j i).
Proof. exact (MK_COMB (@lem6452507 A K ltle i f j dom neut) (@lem6452510 K j i)). Qed.
Lemma lem6452513 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6452514 {K : Type'} (j : K) (i : K) : (term218 K j i) = True.
Proof. exact (@lem6452513 (j = i)). Qed.
Lemma lem6452515 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term451 A K ltle f dom neut j i) = True.
Proof. exact (TRANS (@lem6452511 A K ltle f dom neut j i) (@lem6452514 K j i)). Qed.
Lemma lem6452516 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term452 A K ltle f dom neut i) = (term259 K).
Proof. exact (fun_ext (fun j : K => @lem6452515 A K ltle f dom neut j i)). Qed.
Lemma lem6452517 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6452518 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term453 A K ltle f dom neut i) = (term260 K).
Proof. exact (MK_COMB (@lem6452517 K) (@lem6452516 A K ltle f dom neut i)). Qed.
Lemma lem6452520 {A : Type'} (t : Prop) : (term261 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem6452521 {K : Type'} (t : Prop) : (term261 K t) = t.
Proof. exact (@lem6452520 K t). Qed.
Lemma lem6452522 {K : Type'} : (term260 K) = True.
Proof. exact (@lem6452521 K True). Qed.
Lemma lem6452523 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term453 A K ltle f dom neut i) = True.
Proof. exact (TRANS (@lem6452518 A K ltle f dom neut i) (@lem6452522 K)). Qed.
Lemma lem6452524 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term454 A K f i dom neut) = (term454 A K f i dom neut).
Proof. exact (eq_refl (term454 A K f i dom neut)). Qed.
Lemma lem6452525 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term455 A K ltle f dom neut i) = (term456 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452524 A K f i dom neut) (@lem6452523 A K ltle f dom neut i)). Qed.
Lemma lem6452527 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem6452528 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term456 A K f i dom neut) = (term426 A K f i dom neut).
Proof. exact (@lem6452527 (term426 A K f i dom neut)). Qed.
Lemma lem6452529 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term455 A K ltle f dom neut i) = (term426 A K f i dom neut).
Proof. exact (TRANS (@lem6452525 A K ltle f i dom neut) (@lem6452528 A K f i dom neut)). Qed.
Lemma lem6452530 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term457 A K ltle f dom neut i) = (term428 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452475 K i) (@lem6452529 A K ltle f i dom neut)). Qed.
Lemma lem6452532 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452533 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term428 A K f i dom neut) = False.
Proof. exact (@lem6452532 (term426 A K f i dom neut)). Qed.
Lemma lem6452534 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term457 A K ltle f dom neut i) = False.
Proof. exact (TRANS (@lem6452530 A K ltle f i dom neut) (@lem6452533 A K f i dom neut)). Qed.
Lemma lem6452535 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term458 A K ltle f dom neut) = (term459 K).
Proof. exact (fun_ext (fun i : K => @lem6452534 A K ltle f dom neut i)). Qed.
Lemma lem6452536 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6452537 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term460 A K ltle f dom neut) = (term461 K).
Proof. exact (MK_COMB (@lem6452536 K) (@lem6452535 A K ltle f dom neut)). Qed.
Lemma lem6452539 {A : Type'} (t : Prop) : (term462 A t) = t.
Proof. exact (EQ_MP (@lem1813 A t) (@lem1812 A t)). Qed.
Lemma lem6452540 {K : Type'} (t : Prop) : (term462 K t) = t.
Proof. exact (@lem6452539 K t). Qed.
Lemma lem6452541 {K : Type'} : (term461 K) = False.
Proof. exact (@lem6452540 K False). Qed.
Lemma lem6452542 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term460 A K ltle f dom neut) = False.
Proof. exact (TRANS (@lem6452537 A K ltle f dom neut) (@lem6452541 K)). Qed.
Lemma lem6452543 {K : Type'} : (@COND K) = (@COND K).
Proof. exact (eq_refl (@COND K)). Qed.
Lemma lem6452544 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term463 A K ltle f dom neut) = (@COND K False).
Proof. exact (MK_COMB (@lem6452543 K) (@lem6452542 A K ltle f dom neut)). Qed.
Lemma lem6452548 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452549 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452548 K x). Qed.
Lemma lem6452550 {K : Type'} (i : K) : (@IN K i (@EMPTY K)) = False.
Proof. exact (@lem6452549 K i). Qed.
Lemma lem6452551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452552 {K : Type'} (i : K) : (term425 K i) = (and False).
Proof. exact (MK_COMB (@lem6452551) (@lem6452550 K i)). Qed.
Lemma lem6452566 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452567 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452566 K x). Qed.
Lemma lem6452568 {K : Type'} (j : K) : (@IN K j (@EMPTY K)) = False.
Proof. exact (@lem6452567 K j). Qed.
Lemma lem6452569 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452570 {K : Type'} (j : K) : (term425 K j) = (and False).
Proof. exact (MK_COMB (@lem6452569) (@lem6452568 K j)). Qed.
Lemma lem6452571 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term426 A K f j dom neut) = (term426 A K f j dom neut).
Proof. exact (eq_refl (term426 A K f j dom neut)). Qed.
Lemma lem6452572 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term427 A K f j dom neut) = (term428 A K f j dom neut).
Proof. exact (MK_COMB (@lem6452570 K j) (@lem6452571 A K f j dom neut)). Qed.
Lemma lem6452574 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452575 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term428 A K f j dom neut) = False.
Proof. exact (@lem6452574 (term426 A K f j dom neut)). Qed.
Lemma lem6452576 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term427 A K f j dom neut) = False.
Proof. exact (TRANS (@lem6452572 A K f j dom neut) (@lem6452575 A K f j dom neut)). Qed.
Lemma lem6452577 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6452578 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (j : K) (i : K) : (term448 A K ltle i f j dom neut) = (term449 K ltle j i).
Proof. exact (MK_COMB (@lem6452577 K ltle j i) (@lem6452576 A K f j dom neut)). Qed.
Lemma lem6452580 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem6452581 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term449 K ltle j i) = False.
Proof. exact (@lem6452580 (ltle j i)). Qed.
Lemma lem6452582 {A K : Type'} (ltle : type1402 K) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term448 A K ltle i f j dom neut) = False.
Proof. exact (TRANS (@lem6452578 A K f dom neut ltle j i) (@lem6452581 K ltle j i)). Qed.
Lemma lem6452583 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6452584 {A K : Type'} (ltle : type1402 K) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term450 A K ltle i f j dom neut) = (imp False).
Proof. exact (MK_COMB (@lem6452583) (@lem6452582 A K ltle i f j dom neut)). Qed.
Lemma lem6452587 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6452588 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term451 A K ltle f dom neut j i) = (term218 K j i).
Proof. exact (MK_COMB (@lem6452584 A K ltle i f j dom neut) (@lem6452587 K j i)). Qed.
Lemma lem6452590 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6452591 {K : Type'} (j : K) (i : K) : (term218 K j i) = True.
Proof. exact (@lem6452590 (j = i)). Qed.
Lemma lem6452592 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term451 A K ltle f dom neut j i) = True.
Proof. exact (TRANS (@lem6452588 A K ltle f dom neut j i) (@lem6452591 K j i)). Qed.
Lemma lem6452593 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term452 A K ltle f dom neut i) = (term259 K).
Proof. exact (fun_ext (fun j : K => @lem6452592 A K ltle f dom neut j i)). Qed.
Lemma lem6452594 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6452595 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term453 A K ltle f dom neut i) = (term260 K).
Proof. exact (MK_COMB (@lem6452594 K) (@lem6452593 A K ltle f dom neut i)). Qed.
Lemma lem6452597 {A : Type'} (t : Prop) : (term261 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem6452598 {K : Type'} (t : Prop) : (term261 K t) = t.
Proof. exact (@lem6452597 K t). Qed.
Lemma lem6452599 {K : Type'} : (term260 K) = True.
Proof. exact (@lem6452598 K True). Qed.
Lemma lem6452600 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term453 A K ltle f dom neut i) = True.
Proof. exact (TRANS (@lem6452595 A K ltle f dom neut i) (@lem6452599 K)). Qed.
Lemma lem6452601 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term454 A K f i dom neut) = (term454 A K f i dom neut).
Proof. exact (eq_refl (term454 A K f i dom neut)). Qed.
Lemma lem6452602 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term455 A K ltle f dom neut i) = (term456 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452601 A K f i dom neut) (@lem6452600 A K ltle f dom neut i)). Qed.
Lemma lem6452604 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem6452605 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term456 A K f i dom neut) = (term426 A K f i dom neut).
Proof. exact (@lem6452604 (term426 A K f i dom neut)). Qed.
Lemma lem6452606 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term455 A K ltle f dom neut i) = (term426 A K f i dom neut).
Proof. exact (TRANS (@lem6452602 A K ltle f i dom neut) (@lem6452605 A K f i dom neut)). Qed.
Lemma lem6452607 {A K : Type'} (ltle : type1402 K) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term457 A K ltle f dom neut i) = (term428 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452552 K i) (@lem6452606 A K ltle f i dom neut)). Qed.
Lemma lem6452609 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452610 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term428 A K f i dom neut) = False.
Proof. exact (@lem6452609 (term426 A K f i dom neut)). Qed.
Lemma lem6452611 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term457 A K ltle f dom neut i) = False.
Proof. exact (TRANS (@lem6452607 A K ltle f i dom neut) (@lem6452610 A K f i dom neut)). Qed.
Lemma lem6452612 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term458 A K ltle f dom neut) = (term459 K).
Proof. exact (fun_ext (fun i : K => @lem6452611 A K ltle f dom neut i)). Qed.
Lemma lem6452613 {K : Type'} : (@Îµ K) = (@Îµ K).
Proof. exact (eq_refl (@Îµ K)). Qed.
Lemma lem6452614 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term464 A K ltle f dom neut) = (term465 K).
Proof. exact (MK_COMB (@lem6452613 K) (@lem6452612 A K ltle f dom neut)). Qed.
Lemma lem6452615 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term466 A K ltle f dom neut) = (term467 K).
Proof. exact (MK_COMB (@lem6452544 A K ltle f dom neut) (@lem6452614 A K ltle f dom neut)). Qed.
Lemma lem6452619 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6452353 A x (@lem6452352 A x)). Qed.
Lemma lem6452620 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6452619 K x). Qed.
Lemma lem6452621 {K : Type'} (i : K) : (@IN K i (@EMPTY K)) = False.
Proof. exact (@lem6452620 K i). Qed.
Lemma lem6452622 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6452623 {K : Type'} (i : K) : (term425 K i) = (and False).
Proof. exact (MK_COMB (@lem6452622) (@lem6452621 K i)). Qed.
Lemma lem6452624 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term426 A K f i dom neut) = (term426 A K f i dom neut).
Proof. exact (eq_refl (term426 A K f i dom neut)). Qed.
Lemma lem6452625 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = (term428 A K f i dom neut).
Proof. exact (MK_COMB (@lem6452623 K i) (@lem6452624 A K f i dom neut)). Qed.
Lemma lem6452627 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6452628 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term428 A K f i dom neut) = False.
Proof. exact (@lem6452627 (term426 A K f i dom neut)). Qed.
Lemma lem6452629 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term427 A K f i dom neut) = False.
Proof. exact (TRANS (@lem6452625 A K f i dom neut) (@lem6452628 A K f i dom neut)). Qed.
Lemma lem6452630 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term468 A K f dom neut) = (term459 K).
Proof. exact (fun_ext (fun i : K => @lem6452629 A K f i dom neut)). Qed.
Lemma lem6452631 {K : Type'} : (@Îµ K) = (@Îµ K).
Proof. exact (eq_refl (@Îµ K)). Qed.
Lemma lem6452632 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term469 A K f dom neut) = (term465 K).
Proof. exact (MK_COMB (@lem6452631 K) (@lem6452630 A K f dom neut)). Qed.
Lemma lem6452633 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term470 A K ltle f dom neut) = (term471 K).
Proof. exact (MK_COMB (@lem6452615 A K ltle f dom neut) (@lem6452632 A K f dom neut)). Qed.
Lemma lem6452635 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6452636 {K : Type'} (t1 : K) (t2 : K) : (@COND K False t1 t2) = t2.
Proof. exact (@lem6452635 K t1 t2). Qed.
Lemma lem6452637 {K : Type'} : (term471 K) = (term465 K).
Proof. exact (@lem6452636 K (term465 K) (term465 K)). Qed.
Lemma lem6452638 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term470 A K ltle f dom neut) = (term465 K).
Proof. exact (TRANS (@lem6452633 A K ltle f dom neut) (@lem6452637 K)). Qed.
Lemma lem6452639 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term472 A K op ltle dom neut f) = (term472 A K op ltle dom neut f).
Proof. exact (eq_refl (term472 A K op ltle dom neut f)). Qed.
Lemma lem6452640 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term473 A K op ltle f dom neut) = (term474 A K op ltle dom neut f).
Proof. exact (MK_COMB (@lem6452639 A K op ltle dom neut f) (@lem6452638 A K ltle f dom neut)). Qed.
Lemma lem6452641 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term475 A K op ltle f dom neut) = (term476 A K op ltle dom neut f).
Proof. exact (MK_COMB (@lem6452457 A K f dom neut) (@lem6452640 A K op ltle dom neut f)). Qed.
Lemma lem6452642 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6452643 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term419 A K op ltle f dom neut) = (term477 A K op ltle dom f neut).
Proof. exact (MK_COMB (@lem6452641 A K op ltle dom neut f) (@lem6452642 A neut)). Qed.
Lemma lem6452645 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6452646 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem6452645 A t1 t2). Qed.
Lemma lem6452647 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term477 A K op ltle dom f neut) = neut.
Proof. exact (@lem6452646 A (term474 A K op ltle dom neut f) neut). Qed.
Lemma lem6452648 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term419 A K op ltle f dom neut) = neut.
Proof. exact (TRANS (@lem6452643 A K op ltle dom f neut) (@lem6452647 A K op ltle dom f neut)). Qed.
Lemma lem6452649 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6452650 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term421 A K op ltle f dom neut) = (@eq A neut).
Proof. exact (MK_COMB (@lem6452649 A) (@lem6452648 A K op ltle f dom neut)). Qed.
Lemma lem6452651 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6452652 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term419 A K op ltle f dom neut) = neut) = (neut = neut).
Proof. exact (MK_COMB (@lem6452650 A K op ltle f dom neut) (@lem6452651 A neut)). Qed.
Lemma lem6452654 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6452655 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem6452654 A x). Qed.
Lemma lem6452656 {A : Type'} (neut : A) : (neut = neut) = True.
Proof. exact (@lem6452655 A neut). Qed.
Lemma lem6452657 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term419 A K op ltle f dom neut) = neut) = True.
Proof. exact (TRANS (@lem6452652 A K op ltle f dom neut) (@lem6452656 A neut)). Qed.
Lemma lem6452658 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : True = ((term419 A K op ltle f dom neut) = neut).
Proof. exact (SYM (@lem6452657 A K op ltle f dom neut)). Qed.
Lemma lem6452659 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term419 A K op ltle f dom neut) = neut.
Proof. exact (EQ_MP (@lem6452658 A K op ltle f dom neut) (@lem0)). Qed.
Lemma lem6452660 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = neut.
Proof. exact (EQ_MP (@lem6452349 A K dom op ltle f neut) (@lem6452659 A K op ltle f dom neut)). Qed.
Lemma lem6452661 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term478 A K ltle k f dom neut i) : term478 A K ltle k f dom neut i.
Proof. exact (h1). Qed.
Lemma lem6452662 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term479 A K ltle k f dom neut i) : term479 A K ltle k f dom neut i.
Proof. exact (h1). Qed.
Lemma lem6452663 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : term480 A K k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6452664 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term481 A K ltle k f dom neut i) : term481 A K ltle k f dom neut i.
Proof. exact (h1). Qed.
Lemma lem6452665 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) (h1 : term482 K k ltle i) : term482 K k ltle i.
Proof. exact (h1). Qed.
Lemma lem6452666 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : @IN _124670 i k) : @IN _124670 i k.
Proof. exact (h1). Qed.
Lemma lem6452667 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) (h1 : @IN _124670 i k) : (@INSERT _124670 i k) = k.
Proof. exact (@lem6452317 _124670 i k (@lem6452666 _124670 i k h1)). Qed.
Lemma lem6452706 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = ((@IN K i k) = True).
Proof. exact (@lem7 (@IN K i k)). Qed.
Lemma lem6452767 {_124670 : Type'} (i : _124670) (k : _124670 -> Prop) : term379 _124670 i k.
Proof. exact (fun h0 : @IN _124670 i k => @lem6452667 _124670 i k h0). Qed.
Lemma lem6452768 {K : Type'} (i : K) (k : K -> Prop) : term379 K i k.
Proof. exact (@lem6452767 K i k). Qed.
Lemma lem6452770 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (@IN K i k) = True.
Proof. exact (EQ_MP (@lem6452706 K i k) (@lem6452321 K i k h1)). Qed.
Lemma lem6452775 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : True = (@IN K i k).
Proof. exact (SYM (@lem6452770 K i k h1)). Qed.
Lemma lem6452776 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : @IN K i k.
Proof. exact (EQ_MP (@lem6452775 K i k h1) (@lem0)). Qed.
Lemma lem6452777 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (@INSERT K i k) = k.
Proof. exact (@lem6452768 K i k (@lem6452776 K i k h1)). Qed.
Lemma lem6452782 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6452783 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term483 A K dom neut op ltle i k) = (@iterato A K dom neut op ltle k).
Proof. exact (MK_COMB (@lem6452782 A K dom neut op ltle) (@lem6452777 K i k h1)). Qed.
Lemma lem6452832 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6452833 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6452783 A K dom neut op ltle i k h1) (@lem6452832 A K f)). Qed.
Lemma lem6452886 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6452887 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term485 A K dom neut op ltle i k f) = (term486 A K dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6452886 A) (@lem6452833 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6452953 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term487 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6452954 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term488 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6452953 _2963 g t e g' t' e'). Qed.
Lemma lem6452955 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term489 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6452954 _2963 g t e g' t'). Qed.
Lemma lem6452956 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term490 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6452955 _2963 g t e g'). Qed.
Lemma lem6452957 {A : Type'} (g : Prop) (t : A) (e : A) : term490 A g t e.
Proof. exact (@lem6452956 A g t e). Qed.
Lemma lem6452958 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term491 A K i dom neut op ltle k f.
Proof. exact (@lem6452957 A (term492 A K dom f neut i k) (@iterato A K dom neut op ltle k f) (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6452959 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : term494 A K i dom neut op ltle k f g'.
Proof. exact (@lem6452958 A K i dom neut op ltle k f g'). Qed.
Lemma lem6452960 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : (term494 A K i dom neut op ltle k f g') = (term495 A K i dom neut op ltle k f g').
Proof. exact (eq_refl (term494 A K i dom neut op ltle k f g')). Qed.
Lemma lem6452961 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : term495 A K i dom neut op ltle k f g'.
Proof. exact (EQ_MP (@lem6452960 A K i dom neut op ltle k f g') (@lem6452959 A K i dom neut op ltle k f g')). Qed.
Lemma lem6452962 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : term496 A K i dom neut op ltle k f g' t'.
Proof. exact (@lem6452961 A K i dom neut op ltle k f g' t'). Qed.
Lemma lem6452963 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : (term496 A K i dom neut op ltle k f g' t') = (term497 A K i dom neut op ltle k f g' t').
Proof. exact (eq_refl (term496 A K i dom neut op ltle k f g' t')). Qed.
Lemma lem6452964 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : term497 A K i dom neut op ltle k f g' t'.
Proof. exact (EQ_MP (@lem6452963 A K i dom neut op ltle k f g' t') (@lem6452962 A K i dom neut op ltle k f g' t')). Qed.
Lemma lem6452965 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : term498 A K i dom neut op ltle k f g' t' e'.
Proof. exact (@lem6452964 A K i dom neut op ltle k f g' t' e'). Qed.
Lemma lem6452966 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : (term498 A K i dom neut op ltle k f g' t' e') = (term499 A K i dom neut op ltle k f g' t' e').
Proof. exact (eq_refl (term498 A K i dom neut op ltle k f g' t' e')). Qed.
Lemma lem6452967 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : term499 A K i dom neut op ltle k f g' t' e'.
Proof. exact (EQ_MP (@lem6452966 A K i dom neut op ltle k f g' t' e') (@lem6452965 A K i dom neut op ltle k f g' t' e')). Qed.
Lemma lem6452975 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term500 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6452976 (p : Prop) (q : Prop) (p' : Prop) : term501 p q p'.
Proof. exact (fun q' : Prop => @lem6452975 p q p' q'). Qed.
Lemma lem6452977 (p : Prop) (q : Prop) : term502 p q.
Proof. exact (fun p' : Prop => @lem6452976 p q p'). Qed.
Lemma lem6452978 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) : term503 A K dom f neut i k.
Proof. exact (@lem6452977 (term504 A K f i dom) (term505 A K f neut i k)). Qed.
Lemma lem6452979 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : term506 A K dom f neut i k p'.
Proof. exact (@lem6452978 A K dom f neut i k p'). Qed.
Lemma lem6452980 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : (term506 A K dom f neut i k p') = (term507 A K dom f neut i k p').
Proof. exact (eq_refl (term506 A K dom f neut i k p')). Qed.
Lemma lem6452981 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : term507 A K dom f neut i k p'.
Proof. exact (EQ_MP (@lem6452980 A K dom f neut i k p') (@lem6452979 A K dom f neut i k p')). Qed.
Lemma lem6452982 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : term508 A K dom f neut i k p' q'.
Proof. exact (@lem6452981 A K dom f neut i k p' q'). Qed.
Lemma lem6452983 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : (term508 A K dom f neut i k p' q') = (term509 A K dom f neut i k p' q').
Proof. exact (eq_refl (term508 A K dom f neut i k p' q')). Qed.
Lemma lem6452984 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : term509 A K dom f neut i k p' q'.
Proof. exact (EQ_MP (@lem6452983 A K dom f neut i k p' q') (@lem6452982 A K dom f neut i k p' q')). Qed.
Lemma lem6470812 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term504 A K f i dom) = (term504 A K f i dom).
Proof. exact (eq_refl (term504 A K f i dom)). Qed.
Lemma lem6470813 {A K : Type'} (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (q' : Prop) : term510 A K neut k f i dom q'.
Proof. exact (@lem6452984 A K dom f neut i k (term504 A K f i dom) q'). Qed.
Lemma lem6470814 {A K : Type'} (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (q' : Prop) : term511 A K neut k f i dom q'.
Proof. exact (@lem6470813 A K neut k f i dom q' (@lem6470812 A K f i dom)). Qed.
Lemma lem6488662 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (@IN K i k) = True.
Proof. exact (EQ_MP (@lem6452706 K i k) (@lem6452321 K i k h1)). Qed.
Lemma lem6488667 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term512 A K f i neut) = (term512 A K f i neut).
Proof. exact (eq_refl (term512 A K f i neut)). Qed.
Lemma lem6488668 {A K : Type'} (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term505 A K f neut i k) = (term513 A K f i neut).
Proof. exact (MK_COMB (@lem6488667 A K f i neut) (@lem6488662 K i k h1)). Qed.
Lemma lem6488670 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem6488671 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term513 A K f i neut) = True.
Proof. exact (@lem6488670 ((f i) = neut)). Qed.
Lemma lem6488676 {A K : Type'} (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term505 A K f neut i k) = True.
Proof. exact (TRANS (@lem6488668 A K f neut i k h1) (@lem6488671 A K f i neut)). Qed.
Lemma lem6488677 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term514 A K dom f neut i k.
Proof. exact (fun h0 : term504 A K f i dom => @lem6488676 A K f neut i k h1). Qed.
Lemma lem6488678 {A K : Type'} (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) : term515 A K neut k f i dom.
Proof. exact (@lem6470814 A K neut k f i dom True). Qed.
Lemma lem6488679 {A K : Type'} (neut : A) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term492 A K dom f neut i k) = (term516 A K f i dom).
Proof. exact (@lem6488678 A K neut k f i dom (@lem6488677 A K dom f neut i k h1)). Qed.
Lemma lem6488681 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6488682 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term516 A K f i dom) = True.
Proof. exact (@lem6488681 (term504 A K f i dom)). Qed.
Lemma lem6488687 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term492 A K dom f neut i k) = True.
Proof. exact (TRANS (@lem6488679 A K neut f dom i k h1) (@lem6488682 A K f i dom)). Qed.
Lemma lem6488688 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (t' : A) (e' : A) : term517 A K i dom neut op ltle k f t' e'.
Proof. exact (@lem6452967 A K i dom neut op ltle k f True t' e'). Qed.
Lemma lem6488689 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (t' : A) (e' : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term518 A K i dom neut op ltle k f t' e'.
Proof. exact (@lem6488688 A K i dom neut op ltle k f t' e' (@lem6488687 A K dom f neut i k h1)). Qed.
Lemma lem6488747 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (eq_refl (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6488748 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term519 A K dom neut op ltle k f.
Proof. exact (fun h0 : True => @lem6488747 A K dom neut op ltle k f). Qed.
Lemma lem6488749 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (e' : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term520 A K i dom neut op ltle k f e'.
Proof. exact (@lem6488689 A K dom neut op ltle f (@iterato A K dom neut op ltle k f) e' i k h1). Qed.
Lemma lem6488750 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (e' : A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term521 A K i dom neut op ltle k f e'.
Proof. exact (@lem6488749 A K dom neut op ltle f e' i k h1 (@lem6488748 A K dom neut op ltle k f)). Qed.
Lemma lem6490946 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6490947 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term522 A K i dom neut op ltle k f.
Proof. exact (fun h0 : ~ True => @lem6490946 A K i dom neut op ltle k f). Qed.
Lemma lem6490948 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term523 A K i dom neut op ltle k f.
Proof. exact (@lem6488750 A K dom neut op ltle f (term493 A K i dom neut op ltle k f) i k h1). Qed.
Lemma lem6490949 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term524 A K i dom neut op ltle k f) = (term525 A K i dom neut op ltle k f).
Proof. exact (@lem6490948 A K dom neut op ltle f i k h1 (@lem6490947 A K i dom neut op ltle k f)). Qed.
Lemma lem6490951 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6490952 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem6490951 A t2 t1). Qed.
Lemma lem6490953 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term525 A K i dom neut op ltle k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (@lem6490952 A (term493 A K i dom neut op ltle k f) (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6491006 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term524 A K i dom neut op ltle k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (TRANS (@lem6490949 A K dom neut op ltle f i k h1) (@lem6490953 A K i dom neut op ltle k f)). Qed.
Lemma lem6491007 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)) = ((@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6452887 A K dom neut op ltle f i k h1) (@lem6491006 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6491009 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6491010 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem6491009 A x). Qed.
Lemma lem6491011 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle k f)) = True.
Proof. exact (@lem6491010 A (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6491016 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)) = True.
Proof. exact (TRANS (@lem6491007 A K dom neut op ltle f i k h1) (@lem6491011 A K dom neut op ltle k f)). Qed.
Lemma lem6491017 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : True = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6491016 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6491018 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6491017 A K dom neut op ltle f i k h1) (@lem0)). Qed.
Lemma lem6491059 {K : Type'} (i : K) (k : K -> Prop) : term526 K i k.
Proof. exact (@lem82 (@IN K i k)). Qed.
Lemma lem6493235 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term487 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6493236 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term488 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6493235 _2963 g t e g' t' e'). Qed.
Lemma lem6493237 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term489 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6493236 _2963 g t e g' t'). Qed.
Lemma lem6493238 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term490 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6493237 _2963 g t e g'). Qed.
Lemma lem6493239 {A : Type'} (g : Prop) (t : A) (e : A) : term490 A g t e.
Proof. exact (@lem6493238 A g t e). Qed.
Lemma lem6493240 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term491 A K i dom neut op ltle k f.
Proof. exact (@lem6493239 A (term492 A K dom f neut i k) (@iterato A K dom neut op ltle k f) (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6493241 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : term494 A K i dom neut op ltle k f g'.
Proof. exact (@lem6493240 A K i dom neut op ltle k f g'). Qed.
Lemma lem6493242 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : (term494 A K i dom neut op ltle k f g') = (term495 A K i dom neut op ltle k f g').
Proof. exact (eq_refl (term494 A K i dom neut op ltle k f g')). Qed.
Lemma lem6493243 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) : term495 A K i dom neut op ltle k f g'.
Proof. exact (EQ_MP (@lem6493242 A K i dom neut op ltle k f g') (@lem6493241 A K i dom neut op ltle k f g')). Qed.
Lemma lem6493244 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : term496 A K i dom neut op ltle k f g' t'.
Proof. exact (@lem6493243 A K i dom neut op ltle k f g' t'). Qed.
Lemma lem6493245 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : (term496 A K i dom neut op ltle k f g' t') = (term497 A K i dom neut op ltle k f g' t').
Proof. exact (eq_refl (term496 A K i dom neut op ltle k f g' t')). Qed.
Lemma lem6493246 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) : term497 A K i dom neut op ltle k f g' t'.
Proof. exact (EQ_MP (@lem6493245 A K i dom neut op ltle k f g' t') (@lem6493244 A K i dom neut op ltle k f g' t')). Qed.
Lemma lem6493247 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : term498 A K i dom neut op ltle k f g' t' e'.
Proof. exact (@lem6493246 A K i dom neut op ltle k f g' t' e'). Qed.
Lemma lem6493248 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : (term498 A K i dom neut op ltle k f g' t' e') = (term499 A K i dom neut op ltle k f g' t' e').
Proof. exact (eq_refl (term498 A K i dom neut op ltle k f g' t' e')). Qed.
Lemma lem6493249 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (g' : Prop) (t' : A) (e' : A) : term499 A K i dom neut op ltle k f g' t' e'.
Proof. exact (EQ_MP (@lem6493248 A K i dom neut op ltle k f g' t' e') (@lem6493247 A K i dom neut op ltle k f g' t' e')). Qed.
Lemma lem6493257 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term500 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6493258 (p : Prop) (q : Prop) (p' : Prop) : term501 p q p'.
Proof. exact (fun q' : Prop => @lem6493257 p q p' q'). Qed.
Lemma lem6493259 (p : Prop) (q : Prop) : term502 p q.
Proof. exact (fun p' : Prop => @lem6493258 p q p'). Qed.
Lemma lem6493260 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) : term503 A K dom f neut i k.
Proof. exact (@lem6493259 (term504 A K f i dom) (term505 A K f neut i k)). Qed.
Lemma lem6493261 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : term506 A K dom f neut i k p'.
Proof. exact (@lem6493260 A K dom f neut i k p'). Qed.
Lemma lem6493262 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : (term506 A K dom f neut i k p') = (term507 A K dom f neut i k p').
Proof. exact (eq_refl (term506 A K dom f neut i k p')). Qed.
Lemma lem6493263 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) : term507 A K dom f neut i k p'.
Proof. exact (EQ_MP (@lem6493262 A K dom f neut i k p') (@lem6493261 A K dom f neut i k p')). Qed.
Lemma lem6493264 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : term508 A K dom f neut i k p' q'.
Proof. exact (@lem6493263 A K dom f neut i k p' q'). Qed.
Lemma lem6493265 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : (term508 A K dom f neut i k p' q') = (term509 A K dom f neut i k p' q').
Proof. exact (eq_refl (term508 A K dom f neut i k p' q')). Qed.
Lemma lem6493266 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (p' : Prop) (q' : Prop) : term509 A K dom f neut i k p' q'.
Proof. exact (EQ_MP (@lem6493265 A K dom f neut i k p' q') (@lem6493264 A K dom f neut i k p' q')). Qed.
Lemma lem6495372 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term504 A K f i dom) = (term504 A K f i dom).
Proof. exact (eq_refl (term504 A K f i dom)). Qed.
Lemma lem6495373 {A K : Type'} (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (q' : Prop) : term510 A K neut k f i dom q'.
Proof. exact (@lem6493266 A K dom f neut i k (term504 A K f i dom) q'). Qed.
Lemma lem6495374 {A K : Type'} (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (q' : Prop) : term511 A K neut k f i dom q'.
Proof. exact (@lem6495373 A K neut k f i dom q' (@lem6495372 A K f i dom)). Qed.
Lemma lem6497500 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (@IN K i k) = False.
Proof. exact (@lem6491059 K i k (@lem6452322 K i k h1)). Qed.
Lemma lem6497505 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term512 A K f i neut) = (term512 A K f i neut).
Proof. exact (eq_refl (term512 A K f i neut)). Qed.
Lemma lem6497506 {A K : Type'} (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term505 A K f neut i k) = (term527 A K f i neut).
Proof. exact (MK_COMB (@lem6497505 A K f i neut) (@lem6497500 K i k h1)). Qed.
Lemma lem6497508 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6497509 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term527 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6497508 ((f i) = neut)). Qed.
Lemma lem6499617 {A K : Type'} (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term505 A K f neut i k) = ((f i) = neut).
Proof. exact (TRANS (@lem6497506 A K f neut i k h1) (@lem6497509 A K f i neut)). Qed.
Lemma lem6499618 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : term528 A K dom k f i neut.
Proof. exact (fun h0 : term504 A K f i dom => @lem6499617 A K f neut i k h1). Qed.
Lemma lem6499619 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : term529 A K k dom f i neut.
Proof. exact (@lem6495374 A K neut k f i dom ((f i) = neut)). Qed.
Lemma lem6499620 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term492 A K dom f neut i k) = (term530 A K dom f i neut).
Proof. exact (@lem6499619 A K k dom f i neut (@lem6499618 A K dom f neut i k h1)). Qed.
Lemma lem6508080 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (t' : A) (e' : A) : term531 A K op ltle k dom f i neut t' e'.
Proof. exact (@lem6493249 A K i dom neut op ltle k f (term530 A K dom f i neut) t' e'). Qed.
Lemma lem6508081 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (t' : A) (e' : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : term532 A K op ltle k dom f i neut t' e'.
Proof. exact (@lem6508080 A K op ltle k dom f i neut t' e' (@lem6499620 A K dom f neut i k h1)). Qed.
Lemma lem6508142 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (eq_refl (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6508143 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term533 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term530 A K dom f i neut => @lem6508142 A K dom neut op ltle k f). Qed.
Lemma lem6508144 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (e' : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : term534 A K i dom neut op ltle k f e'.
Proof. exact (@lem6508081 A K op ltle dom f neut (@iterato A K dom neut op ltle k f) e' i k h1). Qed.
Lemma lem6508145 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (e' : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : term535 A K i dom neut op ltle k f e'.
Proof. exact (@lem6508144 A K dom neut op ltle f e' i k h1 (@lem6508143 A K i dom neut op ltle k f)). Qed.
Lemma lem6510302 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6510303 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term536 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term537 A K dom f i neut => @lem6510302 A K i dom neut op ltle k f). Qed.
Lemma lem6510304 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : term538 A K i dom neut op ltle k f.
Proof. exact (@lem6508145 A K dom neut op ltle f (term493 A K i dom neut op ltle k f) i k h1). Qed.
Lemma lem6510305 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term524 A K i dom neut op ltle k f) = (term539 A K i dom neut op ltle k f).
Proof. exact (@lem6510304 A K dom neut op ltle f i k h1 (@lem6510303 A K i dom neut op ltle k f)). Qed.
Lemma lem6531688 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) : (term485 A K dom neut op ltle i k f) = (term485 A K dom neut op ltle i k f).
Proof. exact (eq_refl (term485 A K dom neut op ltle i k f)). Qed.
Lemma lem6531689 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term539 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6531688 A K dom neut op ltle i k f) (@lem6510305 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6555241 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : ((term484 A K dom neut op ltle i k f) = (term539 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6531689 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6555245 {_124659 : Type'} (x : _124659) (dom : _124659 -> Prop) (a : _124659) : (term326 _124659 dom x a) = (term338 _124659 x dom a).
Proof. exact (EQ_MP (@lem6451159 _124659 x dom a) (@lem6451776 _124659 dom x a)). Qed.
Lemma lem6555246 {A : Type'} (x : A) (dom : A -> Prop) (a : A) : (term326 A dom x a) = (term338 A x dom a).
Proof. exact (@lem6555245 A x dom a). Qed.
Lemma lem6555247 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term530 A K dom f i neut) = (term540 A K f i dom neut).
Proof. exact (@lem6555246 A (f i) dom neut). Qed.
Lemma lem6555248 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem6555249 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term541 A K dom f i neut) = (term542 A K f i dom neut).
Proof. exact (MK_COMB (@lem6555248 A) (@lem6555247 A K f i dom neut)). Qed.
Lemma lem6555250 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (eq_refl (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6555251 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term543 A K i dom neut op ltle k f) = (term544 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555249 A K f i dom neut) (@lem6555250 A K dom neut op ltle k f)). Qed.
Lemma lem6555252 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6555253 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term539 A K i dom neut op ltle k f) = (term545 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555251 A K i dom neut op ltle k f) (@lem6555252 A K i dom neut op ltle k f)). Qed.
Lemma lem6555254 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) : (term485 A K dom neut op ltle i k f) = (term485 A K dom neut op ltle i k f).
Proof. exact (eq_refl (term485 A K dom neut op ltle i k f)). Qed.
Lemma lem6555255 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term539 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term545 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6555254 A K dom neut op ltle i k f) (@lem6555253 A K i dom neut op ltle k f)). Qed.
Lemma lem6555258 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term545 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term539 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6555255 A K i dom neut op ltle k f)). Qed.
Lemma lem6555262 {A : Type'} (p : Prop) (y : A) (x : A) : (term323 A p x y) = (@COND A p y x).
Proof. exact (EQ_MP (@lem6451074 A p y x) (@lem6451073 A p x y)). Qed.
Lemma lem6555263 {A : Type'} (p : Prop) (y : A) (x : A) : (term323 A p x y) = (@COND A p y x).
Proof. exact (@lem6555262 A p y x). Qed.
Lemma lem6555264 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term545 A K i dom neut op ltle k f) = (term546 A K i dom neut op ltle k f).
Proof. exact (@lem6555263 A (term426 A K f i dom neut) (term493 A K i dom neut op ltle k f) (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6555265 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) : (term485 A K dom neut op ltle i k f) = (term485 A K dom neut op ltle i k f).
Proof. exact (eq_refl (term485 A K dom neut op ltle i k f)). Qed.
Lemma lem6555266 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term545 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6555265 A K dom neut op ltle i k f) (@lem6555264 A K i dom neut op ltle k f)). Qed.
Lemma lem6555269 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term545 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6555266 A K i dom neut op ltle k f)). Qed.
Lemma lem6555270 {A : Type'} (_474 : A) (_475 : Prop) (_476 : A -> Prop) (_477 : A) : (term547 A _476 _475 _474 _477) = (term548 A _474 _475 _476 _477).
Proof. exact (@lem13473 A _474 _475 _476 _477). Qed.
Lemma lem6555271 {A K : Type'} (_474 : A) (_475 : Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (_477 : A) : (term549 A K dom neut op ltle i k f _475 _474 _477) = (term550 A K _474 _475 dom neut op ltle i k f _477).
Proof. exact (@lem6555270 A _474 _475 (term551 A K dom neut op ltle i k f) _477). Qed.
Lemma lem6555272 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term552 A K i dom neut op ltle k f) = (term553 A K i dom neut op ltle k f).
Proof. exact (@lem6555271 A K (term493 A K i dom neut op ltle k f) (term426 A K f i dom neut) dom neut op ltle i k f (@iterato A K dom neut op ltle k f)). Qed.
Lemma lem6555273 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term554 A K i dom neut op ltle k f) = ((term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f)).
Proof. exact (eq_refl (term554 A K i dom neut op ltle k f)). Qed.
Lemma lem6555274 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term555 A K f i dom neut) = (term555 A K f i dom neut).
Proof. exact (eq_refl (term555 A K f i dom neut)). Qed.
Lemma lem6555275 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term556 A K i dom neut op ltle k f) = (term557 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555274 A K f i dom neut) (@lem6555273 A K i dom neut op ltle k f)). Qed.
Lemma lem6555276 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term558 A K i dom neut op ltle k f) = ((term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term558 A K i dom neut op ltle k f)). Qed.
Lemma lem6555277 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term559 A K f i dom neut) = (term559 A K f i dom neut).
Proof. exact (eq_refl (term559 A K f i dom neut)). Qed.
Lemma lem6555278 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term560 A K i dom neut op ltle k f) = (term561 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555277 A K f i dom neut) (@lem6555276 A K i dom neut op ltle k f)). Qed.
Lemma lem6555279 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555280 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term562 A K i dom neut op ltle k f) = (term563 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555279) (@lem6555278 A K i dom neut op ltle k f)). Qed.
Lemma lem6555281 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term553 A K i dom neut op ltle k f) = (term564 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555280 A K i dom neut op ltle k f) (@lem6555275 A K i dom neut op ltle k f)). Qed.
Lemma lem6555282 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term552 A K i dom neut op ltle k f) = ((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term552 A K i dom neut op ltle k f)). Qed.
Lemma lem6555283 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6555284 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term565 A K i dom neut op ltle k f) = (term566 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555283) (@lem6555282 A K i dom neut op ltle k f)). Qed.
Lemma lem6555285 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term552 A K i dom neut op ltle k f) = (term553 A K i dom neut op ltle k f)) = (((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)) = (term564 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6555284 A K i dom neut op ltle k f) (@lem6555281 A K i dom neut op ltle k f)). Qed.
Lemma lem6555286 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)) = (term564 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555285 A K i dom neut op ltle k f) (@lem6555272 A K i dom neut op ltle k f)). Qed.
Lemma lem6555287 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term564 A K i dom neut op ltle k f) = ((term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6555286 A K i dom neut op ltle k f)). Qed.
Lemma lem6555288 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term426 A K f i dom neut) : term426 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6555305 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term540 A K f i dom neut) : term540 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6555323 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut).
Proof. exact (EQ_MP (@lem6451065 A K op ltle k f dom neut) (@lem6451064 A K op ltle k dom neut f)). Qed.
Lemma lem6555324 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (@iterato A K dom neut op ltle k f) = (term317 A K op ltle k f dom neut).
Proof. exact (@lem6555323 A K op ltle k f dom neut). Qed.
Lemma lem6555325 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term484 A K dom neut op ltle i k f) = (term567 A K op ltle i k f dom neut).
Proof. exact (@lem6555324 A K op ltle (@INSERT K i k) f dom neut). Qed.
Lemma lem6555326 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6555327 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term485 A K dom neut op ltle i k f) = (term568 A K op ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6555326 A) (@lem6555325 A K op ltle i k f dom neut)). Qed.
Lemma lem6555328 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6555329 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f)) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6555327 A K op ltle i k f dom neut) (@lem6555328 A K i dom neut op ltle k f)). Qed.
Lemma lem6555330 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6555329 A K i dom neut op ltle k f)). Qed.
Lemma lem6555332 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem6451047 A s x t) (@lem6451046 A s t x)). Qed.
Lemma lem6555333 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555332 A s x t). Qed.
Lemma lem6555334 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term569 A K dom f i neut).
Proof. exact (@lem6555333 A dom (f i) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555335 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term426 A K f i dom neut) : term569 A K dom f i neut.
Proof. exact (EQ_MP (@lem6555334 A K dom f i neut) (@lem6555288 A K f i dom neut h1)). Qed.
Lemma lem6555341 {A : Type'} (x : A) (y : A) : (term298 A x y) = (x = y).
Proof. exact (EQ_MP (@lem6451038 A x y) (@lem6451037 A x y)). Qed.
Lemma lem6555342 {A : Type'} (x : A) (y : A) : (term298 A x y) = (x = y).
Proof. exact (@lem6555341 A x y). Qed.
Lemma lem6555343 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term570 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6555342 A (f i) neut). Qed.
Lemma lem6555346 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555347 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term571 A K f i neut) = (term572 A K f i neut).
Proof. exact (MK_COMB (@lem6555346) (@lem6555343 A K f i neut)). Qed.
Lemma lem6555348 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term573 A K f i dom) = (term573 A K f i dom).
Proof. exact (eq_refl (term573 A K f i dom)). Qed.
Lemma lem6555349 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term569 A K dom f i neut) = (term574 A K dom f i neut).
Proof. exact (MK_COMB (@lem6555348 A K f i dom) (@lem6555347 A K f i neut)). Qed.
Lemma lem6555352 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6555353 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term575 A K dom f i neut) = (term576 A K dom f i neut).
Proof. exact (MK_COMB (@lem6555352) (@lem6555349 A K dom f i neut)). Qed.
Lemma lem6555416 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f))). Qed.
Lemma lem6555417 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term577 A K i dom neut op ltle k f) = (term578 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6555353 A K dom f i neut) (@lem6555416 A K i dom neut op ltle k f)). Qed.
Lemma lem6555420 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term578 A K i dom neut op ltle k f) = (term577 A K i dom neut op ltle k f).
Proof. exact (SYM (@lem6555417 A K i dom neut op ltle k f)). Qed.
Lemma lem6555421 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term574 A K dom f i neut) : term574 A K dom f i neut.
Proof. exact (h1). Qed.
Lemma lem6555422 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : term572 A K f i neut) : term572 A K f i neut.
Proof. exact (h1). Qed.
Lemma lem6555423 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term504 A K f i dom) : term504 A K f i dom.
Proof. exact (h1). Qed.
Lemma lem6555427 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (EQ_MP (@lem6451032 A K op ltle k dom neut f) (@lem6451031 A K op ltle k dom neut f)). Qed.
Lemma lem6555428 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (@lem6555427 A K op ltle k dom neut f). Qed.
Lemma lem6555429 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term484 A K dom neut op ltle i k f) = (term579 A K op ltle i k dom neut f).
Proof. exact (@lem6555428 A K op ltle (@INSERT K i k) dom neut f). Qed.
Lemma lem6555430 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6555431 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term485 A K dom neut op ltle i k f) = (term580 A K op ltle i k dom neut f).
Proof. exact (MK_COMB (@lem6555430 A) (@lem6555429 A K op ltle i k dom neut f)). Qed.
Lemma lem6555433 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (EQ_MP (@lem6451032 A K op ltle k dom neut f) (@lem6451031 A K op ltle k dom neut f)). Qed.
Lemma lem6555434 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term22 A K op ltle k dom neut f).
Proof. exact (@lem6555433 A K op ltle k dom neut f). Qed.
Lemma lem6555435 {A K : Type'} (i : K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f)) = ((term579 A K op ltle i k dom neut f) = (term22 A K op ltle k dom neut f)).
Proof. exact (MK_COMB (@lem6555431 A K op ltle i k dom neut f) (@lem6555434 A K op ltle k dom neut f)). Qed.
Lemma lem6555436 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term579 A K op ltle i k dom neut f) = (term22 A K op ltle k dom neut f)) = ((term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f)).
Proof. exact (SYM (@lem6555435 A K i op ltle k dom neut f)). Qed.
Lemma lem6555437 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6555438 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6555449 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6555450 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6555449 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6555451 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6555450 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6555452 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : term584 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555305 A K f i dom neut h4) (@lem6555451 A K ltle f dom neut i k h1 h2 h3 h5)). Qed.
Lemma lem6555500 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term23 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem6555501 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = t) = (term23 K s t).
Proof. exact (@lem6555500 K s t). Qed.
Lemma lem6555502 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term585 A K i k f dom neut) = (term586 A K k f dom neut)) = (term587 A K i k f dom neut).
Proof. exact (@lem6555501 K (term585 A K i k f dom neut) (term586 A K k f dom neut)). Qed.
Lemma lem6555523 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term588 A K ltle i k f dom neut) = (term588 A K ltle i k f dom neut).
Proof. exact (eq_refl (term588 A K ltle i k f dom neut)). Qed.
Lemma lem6555524 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term589 A K ltle i k f dom neut) = (term590 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6555523 A K ltle i k f dom neut) (@lem6555502 A K i k f dom neut)). Qed.
Lemma lem6555527 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term590 A K ltle i k f dom neut) = (term589 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6555524 A K ltle i k f dom neut)). Qed.
Lemma lem6555533 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6555534 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555533 A s x t). Qed.
Lemma lem6555535 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term569 A K dom f i neut).
Proof. exact (@lem6555534 A dom (f i) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555539 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555540 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6555539 A P x). Qed.
Lemma lem6555541 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6555540 A dom (f i)). Qed.
Lemma lem6555542 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555543 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6555542) (@lem6555541 A K dom f i)). Qed.
Lemma lem6555545 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555546 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6555545 A y x s). Qed.
Lemma lem6555547 {A K : Type'} (neut : A) (f : K -> A) (i : K) : (term570 A K f i neut) = (term593 A K neut f i).
Proof. exact (@lem6555546 A neut (f i) (@EMPTY A)). Qed.
Lemma lem6555553 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6555554 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6555553 A x). Qed.
Lemma lem6555555 {A K : Type'} (f : K -> A) (i : K) : (term594 A K f i) = False.
Proof. exact (@lem6555554 A (f i)). Qed.
Lemma lem6555556 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term512 A K f i neut) = (term512 A K f i neut).
Proof. exact (eq_refl (term512 A K f i neut)). Qed.
Lemma lem6555557 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = (term527 A K f i neut).
Proof. exact (MK_COMB (@lem6555556 A K f i neut) (@lem6555555 A K f i)). Qed.
Lemma lem6555559 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6555560 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term527 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6555559 ((f i) = neut)). Qed.
Lemma lem6555563 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = ((f i) = neut).
Proof. exact (TRANS (@lem6555557 A K f i neut) (@lem6555560 A K f i neut)). Qed.
Lemma lem6555564 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term570 A K f i neut) = ((f i) = neut).
Proof. exact (TRANS (@lem6555547 A K neut f i) (@lem6555563 A K f i neut)). Qed.
Lemma lem6555565 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555566 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term571 A K f i neut) = (term572 A K f i neut).
Proof. exact (MK_COMB (@lem6555565) (@lem6555564 A K f i neut)). Qed.
Lemma lem6555567 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term569 A K dom f i neut) = (term595 A K dom f i neut).
Proof. exact (MK_COMB (@lem6555543 A K dom f i) (@lem6555566 A K f i neut)). Qed.
Lemma lem6555570 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term595 A K dom f i neut).
Proof. exact (TRANS (@lem6555535 A K dom f i neut) (@lem6555567 A K dom f i neut)). Qed.
Lemma lem6555571 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555572 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term540 A K f i dom neut) = (term596 A K dom f i neut).
Proof. exact (MK_COMB (@lem6555571) (@lem6555570 A K dom f i neut)). Qed.
Lemma lem6555573 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555574 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term597 A K f i dom neut) = (term598 A K dom f i neut).
Proof. exact (MK_COMB (@lem6555573) (@lem6555572 A K dom f i neut)). Qed.
Lemma lem6555578 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555579 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555578 K P x). Qed.
Lemma lem6555580 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6555579 K k i). Qed.
Lemma lem6555581 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555582 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6555581) (@lem6555580 K k i)). Qed.
Lemma lem6555583 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555584 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6555583) (@lem6555582 K k i)). Qed.
Lemma lem6555598 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555599 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555598 K P x). Qed.
Lemma lem6555600 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6555599 K k j). Qed.
Lemma lem6555601 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555602 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6555601) (@lem6555600 K k j)). Qed.
Lemma lem6555604 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6555605 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555604 A s x t). Qed.
Lemma lem6555606 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6555605 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555610 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555611 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6555610 A P x). Qed.
Lemma lem6555612 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6555611 A dom (f j)). Qed.
Lemma lem6555613 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555614 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6555613) (@lem6555612 A K dom f j)). Qed.
Lemma lem6555616 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555617 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6555616 A y x s). Qed.
Lemma lem6555618 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6555617 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6555624 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6555625 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6555624 A x). Qed.
Lemma lem6555626 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6555625 A (f j)). Qed.
Lemma lem6555627 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6555628 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6555627 A K f j neut) (@lem6555626 A K f j)). Qed.
Lemma lem6555630 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6555631 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6555630 ((f j) = neut)). Qed.
Lemma lem6555634 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6555628 A K f j neut) (@lem6555631 A K f j neut)). Qed.
Lemma lem6555635 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6555618 A K neut f j) (@lem6555634 A K f j neut)). Qed.
Lemma lem6555636 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555637 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6555636) (@lem6555635 A K f j neut)). Qed.
Lemma lem6555638 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6555614 A K dom f j) (@lem6555637 A K f j neut)). Qed.
Lemma lem6555641 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6555606 A K dom f j neut) (@lem6555638 A K dom f j neut)). Qed.
Lemma lem6555642 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6555602 K k j) (@lem6555641 A K dom f j neut)). Qed.
Lemma lem6555645 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6555646 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6555645 K ltle j i) (@lem6555642 A K k dom f j neut)). Qed.
Lemma lem6555649 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6555650 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6555649) (@lem6555646 A K ltle i k dom f j neut)). Qed.
Lemma lem6555653 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6555654 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6555650 A K ltle i k dom f j neut) (@lem6555653 K j i)). Qed.
Lemma lem6555657 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6555654 A K ltle k dom f neut j i)). Qed.
Lemma lem6555658 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6555659 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6555658 K) (@lem6555657 A K ltle k dom f neut i)). Qed.
Lemma lem6555664 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555665 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6555664) (@lem6555659 A K ltle k dom f neut i)). Qed.
Lemma lem6555675 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555676 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555675 K P x). Qed.
Lemma lem6555677 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6555676 K k j). Qed.
Lemma lem6555678 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6555679 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6555678) (@lem6555677 K k j)). Qed.
Lemma lem6555686 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6555687 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6555679 K k j) (@lem6555686 K ltle j i)). Qed.
Lemma lem6555690 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6555687 K k ltle j i)). Qed.
Lemma lem6555691 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6555692 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6555691 K) (@lem6555690 K k ltle i)). Qed.
Lemma lem6555697 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555698 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6555697) (@lem6555692 K k ltle i)). Qed.
Lemma lem6555706 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555707 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555706 K P x). Qed.
Lemma lem6555708 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6555707 K k j). Qed.
Lemma lem6555709 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555710 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6555709) (@lem6555708 K k j)). Qed.
Lemma lem6555712 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6555713 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555712 A s x t). Qed.
Lemma lem6555714 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6555713 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555718 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555719 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6555718 A P x). Qed.
Lemma lem6555720 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6555719 A dom (f j)). Qed.
Lemma lem6555721 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555722 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6555721) (@lem6555720 A K dom f j)). Qed.
Lemma lem6555724 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555725 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6555724 A y x s). Qed.
Lemma lem6555726 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6555725 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6555732 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6555733 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6555732 A x). Qed.
Lemma lem6555734 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6555733 A (f j)). Qed.
Lemma lem6555735 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6555736 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6555735 A K f j neut) (@lem6555734 A K f j)). Qed.
Lemma lem6555738 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6555739 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6555738 ((f j) = neut)). Qed.
Lemma lem6555742 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6555736 A K f j neut) (@lem6555739 A K f j neut)). Qed.
Lemma lem6555743 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6555726 A K neut f j) (@lem6555742 A K f j neut)). Qed.
Lemma lem6555744 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555745 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6555744) (@lem6555743 A K f j neut)). Qed.
Lemma lem6555746 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6555722 A K dom f j) (@lem6555745 A K f j neut)). Qed.
Lemma lem6555749 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6555714 A K dom f j neut) (@lem6555746 A K dom f j neut)). Qed.
Lemma lem6555750 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6555710 K k j) (@lem6555749 A K dom f j neut)). Qed.
Lemma lem6555753 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6555754 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6555753 K GEN_PVAR_272) (@lem6555750 A K k dom f j neut)). Qed.
Lemma lem6555755 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6555756 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6555754 A K GEN_PVAR_272 k dom f j neut) (@lem6555755 K j)). Qed.
Lemma lem6555757 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6555756 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6555758 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6555759 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6555758 K) (@lem6555757 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6555764 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6555759 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6555765 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6555766 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6555765 K) (@lem6555764 A K k dom f neut)). Qed.
Lemma lem6555767 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6555768 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6555767 K) (@lem6555766 A K k dom f neut)). Qed.
Lemma lem6555769 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555698 K k ltle i) (@lem6555768 A K k dom f neut)). Qed.
Lemma lem6555772 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555665 A K ltle k dom f neut i) (@lem6555769 A K ltle i k dom f neut)). Qed.
Lemma lem6555775 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555584 K k i) (@lem6555772 A K ltle i k dom f neut)). Qed.
Lemma lem6555778 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term584 A K ltle i k f dom neut) = (term637 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555574 A K dom f i neut) (@lem6555775 A K ltle i k dom f neut)). Qed.
Lemma lem6555781 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6555782 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term588 A K ltle i k f dom neut) = (term638 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555781) (@lem6555778 A K ltle i k dom f neut)). Qed.
Lemma lem6555790 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term639 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6555791 {K : Type'} (p : K -> Prop) (x : K) : (term639 K x p) = (p x).
Proof. exact (@lem6555790 K p x). Qed.
Lemma lem6555792 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term640 A K x i k f dom neut) = (term641 A K i k f dom neut x).
Proof. exact (@lem6555791 K (term642 A K i k f dom neut) x). Qed.
Lemma lem6555793 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut i') = (term643 A K i k f i' dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut i')). Qed.
Lemma lem6555794 {K : Type'} (GEN_PVAR_268 : K) : (@SETSPEC K GEN_PVAR_268) = (@SETSPEC K GEN_PVAR_268).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_268)). Qed.
Lemma lem6555795 {A K : Type'} (GEN_PVAR_268 : K) (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term644 A K GEN_PVAR_268 i k f dom neut i') = (term645 A K GEN_PVAR_268 i k f i' dom neut).
Proof. exact (MK_COMB (@lem6555794 K GEN_PVAR_268) (@lem6555793 A K i k f i' dom neut)). Qed.
Lemma lem6555796 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6555797 {A K : Type'} (GEN_PVAR_268 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term646 A K GEN_PVAR_268 i k f dom neut i') = (term647 A K GEN_PVAR_268 i k f dom neut i').
Proof. exact (MK_COMB (@lem6555795 A K GEN_PVAR_268 i k f i' dom neut) (@lem6555796 K i')). Qed.
Lemma lem6555798 {A K : Type'} (GEN_PVAR_268 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term648 A K GEN_PVAR_268 i k f dom neut) = (term649 A K GEN_PVAR_268 i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6555797 A K GEN_PVAR_268 i k f dom neut i')). Qed.
Lemma lem6555799 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6555800 {A K : Type'} (GEN_PVAR_268 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term650 A K GEN_PVAR_268 i k f dom neut) = (term651 A K GEN_PVAR_268 i k f dom neut).
Proof. exact (MK_COMB (@lem6555799 K) (@lem6555798 A K GEN_PVAR_268 i k f dom neut)). Qed.
Lemma lem6555801 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term652 A K i k f dom neut) = (term653 A K i k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_268 : K => @lem6555800 A K GEN_PVAR_268 i k f dom neut)). Qed.
Lemma lem6555802 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6555803 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term654 A K i k f dom neut) = (term585 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6555802 K) (@lem6555801 A K i k f dom neut)). Qed.
Lemma lem6555804 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6555805 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term640 A K x i k f dom neut) = (term655 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6555804 K x) (@lem6555803 A K i k f dom neut)). Qed.
Lemma lem6555806 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6555807 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term656 A K x i k f dom neut) = (term657 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6555806) (@lem6555805 A K x i k f dom neut)). Qed.
Lemma lem6555808 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut x) = (term643 A K i k f x dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut x)). Qed.
Lemma lem6555809 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term640 A K x i k f dom neut) = (term641 A K i k f dom neut x)) = ((term655 A K x i k f dom neut) = (term643 A K i k f x dom neut)).
Proof. exact (MK_COMB (@lem6555807 A K x i k f dom neut) (@lem6555808 A K i k f x dom neut)). Qed.
Lemma lem6555810 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term655 A K x i k f dom neut) = (term643 A K i k f x dom neut).
Proof. exact (EQ_MP (@lem6555809 A K i k f x dom neut) (@lem6555792 A K i k f dom neut x)). Qed.
Lemma lem6555814 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555815 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6555814 K y x s). Qed.
Lemma lem6555816 {K : Type'} (i : K) (x : K) (k : K -> Prop) : (term36 K x i k) = (term37 K i x k).
Proof. exact (@lem6555815 K i x k). Qed.
Lemma lem6555822 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555823 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555822 K P x). Qed.
Lemma lem6555824 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6555823 K k x). Qed.
Lemma lem6555825 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6555826 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term37 K i x k) = (term39 K i k x).
Proof. exact (MK_COMB (@lem6555825 K x i) (@lem6555824 K k x)). Qed.
Lemma lem6555829 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term36 K x i k) = (term39 K i k x).
Proof. exact (TRANS (@lem6555816 K i x k) (@lem6555826 K i k x)). Qed.
Lemma lem6555830 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555831 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term40 K x i k) = (term41 K i k x).
Proof. exact (MK_COMB (@lem6555830) (@lem6555829 K i k x)). Qed.
Lemma lem6555833 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6555834 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555833 A s x t). Qed.
Lemma lem6555835 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term569 A K dom f x neut).
Proof. exact (@lem6555834 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555839 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555840 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6555839 A P x). Qed.
Lemma lem6555841 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term504 A K f x dom) = (term591 A K dom f x).
Proof. exact (@lem6555840 A dom (f x)). Qed.
Lemma lem6555842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555843 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term573 A K f x dom) = (term592 A K dom f x).
Proof. exact (MK_COMB (@lem6555842) (@lem6555841 A K dom f x)). Qed.
Lemma lem6555845 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555846 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6555845 A y x s). Qed.
Lemma lem6555847 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term570 A K f x neut) = (term593 A K neut f x).
Proof. exact (@lem6555846 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6555853 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6555854 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6555853 A x). Qed.
Lemma lem6555855 {A K : Type'} (f : K -> A) (x : K) : (term594 A K f x) = False.
Proof. exact (@lem6555854 A (f x)). Qed.
Lemma lem6555856 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term512 A K f x neut) = (term512 A K f x neut).
Proof. exact (eq_refl (term512 A K f x neut)). Qed.
Lemma lem6555857 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = (term527 A K f x neut).
Proof. exact (MK_COMB (@lem6555856 A K f x neut) (@lem6555855 A K f x)). Qed.
Lemma lem6555859 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6555860 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term527 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6555859 ((f x) = neut)). Qed.
Lemma lem6555863 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6555857 A K f x neut) (@lem6555860 A K f x neut)). Qed.
Lemma lem6555864 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term570 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6555847 A K neut f x) (@lem6555863 A K f x neut)). Qed.
Lemma lem6555865 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555866 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term571 A K f x neut) = (term572 A K f x neut).
Proof. exact (MK_COMB (@lem6555865) (@lem6555864 A K f x neut)). Qed.
Lemma lem6555867 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term569 A K dom f x neut) = (term595 A K dom f x neut).
Proof. exact (MK_COMB (@lem6555843 A K dom f x) (@lem6555866 A K f x neut)). Qed.
Lemma lem6555870 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term595 A K dom f x neut).
Proof. exact (TRANS (@lem6555835 A K dom f x neut) (@lem6555867 A K dom f x neut)). Qed.
Lemma lem6555871 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term643 A K i k f x dom neut) = (term658 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6555831 K i k x) (@lem6555870 A K dom f x neut)). Qed.
Lemma lem6555874 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term655 A K x i k f dom neut) = (term658 A K i k dom f x neut).
Proof. exact (TRANS (@lem6555810 A K i k f x dom neut) (@lem6555871 A K i k dom f x neut)). Qed.
Lemma lem6555875 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6555876 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term657 A K x i k f dom neut) = (term659 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6555875) (@lem6555874 A K i k dom f x neut)). Qed.
Lemma lem6555878 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term639 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6555879 {K : Type'} (p : K -> Prop) (x : K) : (term639 K x p) = (p x).
Proof. exact (@lem6555878 K p x). Qed.
Lemma lem6555880 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term660 A K x k f dom neut) = (term661 A K k f dom neut x).
Proof. exact (@lem6555879 K (term662 A K k f dom neut) x). Qed.
Lemma lem6555881 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term661 A K k f dom neut i) = (term601 A K k f i dom neut).
Proof. exact (eq_refl (term661 A K k f dom neut i)). Qed.
Lemma lem6555882 {K : Type'} (GEN_PVAR_268 : K) : (@SETSPEC K GEN_PVAR_268) = (@SETSPEC K GEN_PVAR_268).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_268)). Qed.
Lemma lem6555883 {A K : Type'} (GEN_PVAR_268 : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term663 A K GEN_PVAR_268 k f dom neut i) = (term622 A K GEN_PVAR_268 k f i dom neut).
Proof. exact (MK_COMB (@lem6555882 K GEN_PVAR_268) (@lem6555881 A K k f i dom neut)). Qed.
Lemma lem6555884 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6555885 {A K : Type'} (GEN_PVAR_268 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term664 A K GEN_PVAR_268 k f dom neut i) = (term624 A K GEN_PVAR_268 k f dom neut i).
Proof. exact (MK_COMB (@lem6555883 A K GEN_PVAR_268 k f i dom neut) (@lem6555884 K i)). Qed.
Lemma lem6555886 {A K : Type'} (GEN_PVAR_268 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term665 A K GEN_PVAR_268 k f dom neut) = (term626 A K GEN_PVAR_268 k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6555885 A K GEN_PVAR_268 k f dom neut i)). Qed.
Lemma lem6555887 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6555888 {A K : Type'} (GEN_PVAR_268 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term666 A K GEN_PVAR_268 k f dom neut) = (term628 A K GEN_PVAR_268 k f dom neut).
Proof. exact (MK_COMB (@lem6555887 K) (@lem6555886 A K GEN_PVAR_268 k f dom neut)). Qed.
Lemma lem6555889 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term667 A K k f dom neut) = (term630 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_268 : K => @lem6555888 A K GEN_PVAR_268 k f dom neut)). Qed.
Lemma lem6555890 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6555891 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term668 A K k f dom neut) = (term586 A K k f dom neut).
Proof. exact (MK_COMB (@lem6555890 K) (@lem6555889 A K k f dom neut)). Qed.
Lemma lem6555892 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6555893 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term660 A K x k f dom neut) = (term669 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6555892 K x) (@lem6555891 A K k f dom neut)). Qed.
Lemma lem6555894 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6555895 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term670 A K x k f dom neut) = (term671 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6555894) (@lem6555893 A K x k f dom neut)). Qed.
Lemma lem6555896 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term661 A K k f dom neut x) = (term601 A K k f x dom neut).
Proof. exact (eq_refl (term661 A K k f dom neut x)). Qed.
Lemma lem6555897 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term660 A K x k f dom neut) = (term661 A K k f dom neut x)) = ((term669 A K x k f dom neut) = (term601 A K k f x dom neut)).
Proof. exact (MK_COMB (@lem6555895 A K x k f dom neut) (@lem6555896 A K k f x dom neut)). Qed.
Lemma lem6555898 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term669 A K x k f dom neut) = (term601 A K k f x dom neut).
Proof. exact (EQ_MP (@lem6555897 A K k f x dom neut) (@lem6555880 A K k f dom neut x)). Qed.
Lemma lem6555902 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555903 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6555902 K P x). Qed.
Lemma lem6555904 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6555903 K k x). Qed.
Lemma lem6555905 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555906 {K : Type'} (k : K -> Prop) (x : K) : (term332 K x k) = (term333 K k x).
Proof. exact (MK_COMB (@lem6555905) (@lem6555904 K k x)). Qed.
Lemma lem6555908 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6555909 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6555908 A s x t). Qed.
Lemma lem6555910 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term569 A K dom f x neut).
Proof. exact (@lem6555909 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6555914 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6555915 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6555914 A P x). Qed.
Lemma lem6555916 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term504 A K f x dom) = (term591 A K dom f x).
Proof. exact (@lem6555915 A dom (f x)). Qed.
Lemma lem6555917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6555918 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term573 A K f x dom) = (term592 A K dom f x).
Proof. exact (MK_COMB (@lem6555917) (@lem6555916 A K dom f x)). Qed.
Lemma lem6555920 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6555921 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6555920 A y x s). Qed.
Lemma lem6555922 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term570 A K f x neut) = (term593 A K neut f x).
Proof. exact (@lem6555921 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6555928 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6555929 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6555928 A x). Qed.
Lemma lem6555930 {A K : Type'} (f : K -> A) (x : K) : (term594 A K f x) = False.
Proof. exact (@lem6555929 A (f x)). Qed.
Lemma lem6555931 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term512 A K f x neut) = (term512 A K f x neut).
Proof. exact (eq_refl (term512 A K f x neut)). Qed.
Lemma lem6555932 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = (term527 A K f x neut).
Proof. exact (MK_COMB (@lem6555931 A K f x neut) (@lem6555930 A K f x)). Qed.
Lemma lem6555934 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6555935 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term527 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6555934 ((f x) = neut)). Qed.
Lemma lem6555938 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6555932 A K f x neut) (@lem6555935 A K f x neut)). Qed.
Lemma lem6555939 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term570 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6555922 A K neut f x) (@lem6555938 A K f x neut)). Qed.
Lemma lem6555940 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6555941 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term571 A K f x neut) = (term572 A K f x neut).
Proof. exact (MK_COMB (@lem6555940) (@lem6555939 A K f x neut)). Qed.
Lemma lem6555942 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term569 A K dom f x neut) = (term595 A K dom f x neut).
Proof. exact (MK_COMB (@lem6555918 A K dom f x) (@lem6555941 A K f x neut)). Qed.
Lemma lem6555945 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term595 A K dom f x neut).
Proof. exact (TRANS (@lem6555910 A K dom f x neut) (@lem6555942 A K dom f x neut)). Qed.
Lemma lem6555946 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term601 A K k f x dom neut) = (term602 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6555906 K k x) (@lem6555945 A K dom f x neut)). Qed.
Lemma lem6555949 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term669 A K x k f dom neut) = (term602 A K k dom f x neut).
Proof. exact (TRANS (@lem6555898 A K k f x dom neut) (@lem6555946 A K k dom f x neut)). Qed.
Lemma lem6555950 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term655 A K x i k f dom neut) = (term669 A K x k f dom neut)) = ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)).
Proof. exact (MK_COMB (@lem6555876 A K i k dom f x neut) (@lem6555949 A K k dom f x neut)). Qed.
Lemma lem6555953 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term672 A K i k f dom neut) = (term673 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6555950 A K i k dom f x neut)). Qed.
Lemma lem6555954 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6555955 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term587 A K i k f dom neut) = (term674 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6555954 K) (@lem6555953 A K i k dom f neut)). Qed.
Lemma lem6555960 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term590 A K ltle i k f dom neut) = (term675 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6555782 A K ltle i k dom f neut) (@lem6555955 A K i k dom f neut)). Qed.
Lemma lem6555963 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term675 A K ltle i k dom f neut) = (term590 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6555960 A K ltle i k dom f neut)). Qed.
Lemma lem6555965 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6555966 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term675 A K ltle i k dom f neut) = (term676 A K ltle i k dom f neut).
Proof. exact (@lem6555965 (term675 A K ltle i k dom f neut)). Qed.
Lemma lem6555967 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term676 A K ltle i k dom f neut) = (term675 A K ltle i k dom f neut).
Proof. exact (SYM (@lem6555966 A K ltle i k dom f neut)). Qed.
Lemma lem6555968 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term677 A K ltle i k dom f neut) : term677 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6555971 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term676 A K ltle i k dom f neut) : term676 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6555972 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term678 A K ltle i k dom f neut.
Proof. exact (fun h0 : term676 A K ltle i k dom f neut => @lem6555971 A K ltle i k dom f neut h0). Qed.
Lemma lem6555973 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term678 A K ltle i k dom f neut) : term678 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6555974 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term676 A K ltle i k dom f neut) : term676 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6555975 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term676 A K ltle i k dom f neut) (h2 : term678 A K ltle i k dom f neut) : term676 A K ltle i k dom f neut.
Proof. exact (@lem6555973 A K ltle i k dom f neut h2 (@lem6555974 A K ltle i k dom f neut h1)). Qed.
Lemma lem6555976 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term676 A K ltle i k dom f neut) : term679 A K ltle i k dom f neut.
Proof. exact (fun h0 : term678 A K ltle i k dom f neut => @lem6555975 A K ltle i k dom f neut h1 h0). Qed.
Lemma lem6555977 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term678 A K ltle i k dom f neut) : term678 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6555978 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term676 A K ltle i k dom f neut) (h2 : term678 A K ltle i k dom f neut) : term676 A K ltle i k dom f neut.
Proof. exact (@lem6555976 A K ltle i k dom f neut h1 (@lem6555977 A K ltle i k dom f neut h2)). Qed.
Lemma lem6555979 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term678 A K ltle i k dom f neut) : term678 A K ltle i k dom f neut.
Proof. exact (fun h0 : term676 A K ltle i k dom f neut => @lem6555978 A K ltle i k dom f neut h0 h1). Qed.
Lemma lem6555980 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term680 A K ltle i k dom f neut.
Proof. exact (fun h0 : term678 A K ltle i k dom f neut => @lem6555979 A K ltle i k dom f neut h0). Qed.
Lemma lem6555983 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term678 A K ltle i k dom f neut.
Proof. exact (@lem6555980 A K ltle i k dom f neut (@lem6555972 A K ltle i k dom f neut)). Qed.
Lemma lem6555984 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term678 A K ltle i k dom f neut.
Proof. exact (@lem6555983 A K ltle i k dom f neut). Qed.
Lemma lem6556010 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6556011 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term676 A K ltle i k dom f neut) = (term681 A K ltle i k dom f neut).
Proof. exact (@lem6556010 (term677 A K ltle i k dom f neut)). Qed.
Lemma lem6556013 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6556014 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term681 A K ltle i k dom f neut) = (term675 A K ltle i k dom f neut).
Proof. exact (@lem6556013 (term675 A K ltle i k dom f neut)). Qed.
Lemma lem6556017 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term676 A K ltle i k dom f neut) = (term675 A K ltle i k dom f neut).
Proof. exact (TRANS (@lem6556011 A K ltle i k dom f neut) (@lem6556014 A K ltle i k dom f neut)). Qed.
Lemma lem6556072 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term682 A K i k dom f neut) = (term683 A K i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6556017 A K ltle i k dom f neut)). Qed.
Lemma lem6556073 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6556074 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term684 A K i k dom f neut) = (term685 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6556073 K) (@lem6556072 A K i k dom f neut)). Qed.
Lemma lem6556079 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term686 A K k dom f neut) = (term687 A K k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6556074 A K i k dom f neut)). Qed.
Lemma lem6556080 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556081 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term688 A K k dom f neut) = (term689 A K k dom f neut).
Proof. exact (MK_COMB (@lem6556080 K) (@lem6556079 A K k dom f neut)). Qed.
Lemma lem6556086 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term690 A K dom f neut) = (term691 A K dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556081 A K k dom f neut)). Qed.
Lemma lem6556087 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556088 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term692 A K dom f neut) = (term693 A K dom f neut).
Proof. exact (MK_COMB (@lem6556087 K) (@lem6556086 A K dom f neut)). Qed.
Lemma lem6556093 {A K : Type'} (f : K -> A) (neut : A) : (term694 A K f neut) = (term695 A K f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556088 A K dom f neut)). Qed.
Lemma lem6556094 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556095 {A K : Type'} (f : K -> A) (neut : A) : (term696 A K f neut) = (term697 A K f neut).
Proof. exact (MK_COMB (@lem6556094 A) (@lem6556093 A K f neut)). Qed.
Lemma lem6556100 {A K : Type'} (neut : A) : (term698 A K neut) = (term699 A K neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6556095 A K f neut)). Qed.
Lemma lem6556101 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556102 {A K : Type'} (neut : A) : (term700 A K neut) = (term701 A K neut).
Proof. exact (MK_COMB (@lem6556101 A K) (@lem6556100 A K neut)). Qed.
Lemma lem6556107 {A K : Type'} : (term702 A K) = (term703 A K).
Proof. exact (fun_ext (fun neut : A => @lem6556102 A K neut)). Qed.
Lemma lem6556108 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556115 {A K : Type'} : (term704 A K) = (term705 A K).
Proof. exact (MK_COMB (@lem6556108 A) (@lem6556107 A K)). Qed.
Lemma lem6556116 {A K : Type'} (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : _84017 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6556117 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6556118 {A K : Type'} (k : K -> Prop) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6556116 A K _84017 h1) (@lem6556117 K k)). Qed.
Lemma lem6556119 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6556120 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term709 A K _84017 k) = (term709 A K _84017 k).
Proof. exact (eq_refl (term709 A K _84017 k)). Qed.
Lemma lem6556121 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term707 A K k)) = ((_84017 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6556120 A K _84017 k) (@lem6556119 A K k)). Qed.
Lemma lem6556122 {A K : Type'} (k : K -> Prop) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6556121 A K _84017 k) (@lem6556118 A K k _84017 h1)). Qed.
Lemma lem6556123 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6556124 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6556122 A K k _84017 h1) (@lem6556123 A dom)). Qed.
Lemma lem6556125 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6556126 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _84017 k dom) = (term712 A K _84017 k dom).
Proof. exact (eq_refl (term712 A K _84017 k dom)). Qed.
Lemma lem6556127 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term710 A K k dom)) = ((_84017 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6556126 A K _84017 k dom) (@lem6556125 A K k dom)). Qed.
Lemma lem6556128 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6556127 A K _84017 k dom) (@lem6556124 A K k dom _84017 h1)). Qed.
Lemma lem6556129 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6556130 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6556128 A K k dom _84017 h1) (@lem6556129 A K f)). Qed.
Lemma lem6556131 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6556132 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _84017 k dom f) = (term715 A K _84017 k dom f).
Proof. exact (eq_refl (term715 A K _84017 k dom f)). Qed.
Lemma lem6556133 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term713 A K k dom f)) = ((_84017 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6556132 A K _84017 k dom f) (@lem6556131 A K k dom f)). Qed.
Lemma lem6556134 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6556133 A K _84017 k dom f) (@lem6556130 A K k dom f _84017 h1)). Qed.
Lemma lem6556135 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6556136 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6556134 A K k dom f _84017 h1) (@lem6556135 A neut)). Qed.
Lemma lem6556137 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6556138 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _84017 k dom f neut) = (term717 A K _84017 k dom f neut).
Proof. exact (eq_refl (term717 A K _84017 k dom f neut)). Qed.
Lemma lem6556139 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term716 A K k dom f neut)) = ((_84017 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6556138 A K _84017 k dom f neut) (@lem6556137 A K k dom f neut)). Qed.
Lemma lem6556140 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (_84017 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6556139 A K _84017 k dom f neut) (@lem6556136 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556198 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)) = ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)).
Proof. exact (eq_refl ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut))). Qed.
Lemma lem6556199 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term673 A K i k dom f neut) = (term673 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6556198 A K i k dom f x neut)). Qed.
Lemma lem6556200 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556201 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term674 A K i k dom f neut) = (term674 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6556200 K) (@lem6556199 A K i k dom f neut)). Qed.
Lemma lem6556203 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term631 A K k dom f neut) = (_84017 k dom f neut).
Proof. exact (SYM (@lem6556140 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556204 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term631 A K k dom f neut) = (_84017 k dom f neut).
Proof. exact (@lem6556203 A K k dom f neut _84017 h1). Qed.
Lemma lem6556205 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6556206 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556205 K) (@lem6556204 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556207 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6556208 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556207 K) (@lem6556206 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556235 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6556236 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6556235 K k ltle j i)). Qed.
Lemma lem6556237 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556238 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6556237 K) (@lem6556236 K k ltle i)). Qed.
Lemma lem6556239 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556240 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6556239) (@lem6556238 K k ltle i)). Qed.
Lemma lem6556241 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556240 K k ltle i) (@lem6556208 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556280 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6556281 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6556280 A K ltle k dom f neut j i)). Qed.
Lemma lem6556282 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556283 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6556282 K) (@lem6556281 A K ltle k dom f neut i)). Qed.
Lemma lem6556284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556285 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6556284) (@lem6556283 A K ltle k dom f neut i)). Qed.
Lemma lem6556286 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556285 A K ltle k dom f neut i) (@lem6556241 A K ltle i k dom f neut _84017 h1)). Qed.
Lemma lem6556293 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6556294 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556293 K k i) (@lem6556286 A K ltle i k dom f neut _84017 h1)). Qed.
Lemma lem6556315 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term598 A K dom f i neut) = (term598 A K dom f i neut).
Proof. exact (eq_refl (term598 A K dom f i neut)). Qed.
Lemma lem6556316 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term637 A K ltle i k dom f neut) = (term723 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556315 A K dom f i neut) (@lem6556294 A K ltle i k dom f neut _84017 h1)). Qed.
Lemma lem6556317 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6556318 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term638 A K ltle i k dom f neut) = (term724 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556317) (@lem6556316 A K ltle i k dom f neut _84017 h1)). Qed.
Lemma lem6556319 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term675 A K ltle i k dom f neut) = (term725 A K ltle _84017 i k dom f neut).
Proof. exact (MK_COMB (@lem6556318 A K ltle i k dom f neut _84017 h1) (@lem6556201 A K i k dom f neut)). Qed.
Lemma lem6556320 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term683 A K i k dom f neut) = (term726 A K _84017 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6556319 A K ltle i k dom f neut _84017 h1)). Qed.
Lemma lem6556321 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6556322 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term685 A K i k dom f neut) = (term727 A K _84017 i k dom f neut).
Proof. exact (MK_COMB (@lem6556321 K) (@lem6556320 A K i k dom f neut _84017 h1)). Qed.
Lemma lem6556323 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term687 A K k dom f neut) = (term728 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6556322 A K i k dom f neut _84017 h1)). Qed.
Lemma lem6556324 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556325 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term689 A K k dom f neut) = (term729 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556324 K) (@lem6556323 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556326 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term691 A K dom f neut) = (term730 A K _84017 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556325 A K k dom f neut _84017 h1)). Qed.
Lemma lem6556327 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556328 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term693 A K dom f neut) = (term731 A K _84017 dom f neut).
Proof. exact (MK_COMB (@lem6556327 K) (@lem6556326 A K dom f neut _84017 h1)). Qed.
Lemma lem6556329 {A K : Type'} (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term695 A K f neut) = (term732 A K _84017 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556328 A K dom f neut _84017 h1)). Qed.
Lemma lem6556330 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556331 {A K : Type'} (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term697 A K f neut) = (term733 A K _84017 f neut).
Proof. exact (MK_COMB (@lem6556330 A) (@lem6556329 A K f neut _84017 h1)). Qed.
Lemma lem6556332 {A K : Type'} (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term699 A K neut) = (term734 A K _84017 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6556331 A K f neut _84017 h1)). Qed.
Lemma lem6556333 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556334 {A K : Type'} (neut : A) (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term701 A K neut) = (term735 A K _84017 neut).
Proof. exact (MK_COMB (@lem6556333 A K) (@lem6556332 A K neut _84017 h1)). Qed.
Lemma lem6556335 {A K : Type'} (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term703 A K) = (term736 A K _84017).
Proof. exact (fun_ext (fun neut : A => @lem6556334 A K neut _84017 h1)). Qed.
Lemma lem6556336 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556337 {A K : Type'} (_84017 : type835 A K) (h1 : _84017 = (term706 A K)) : (term705 A K) = (term737 A K _84017).
Proof. exact (MK_COMB (@lem6556336 A) (@lem6556335 A K _84017 h1)). Qed.
Lemma lem6556338 {A K : Type'} (_84017 : type835 A K) : term738 A K _84017.
Proof. exact (fun h0 : _84017 = (term706 A K) => @lem6556337 A K _84017 h0). Qed.
Lemma lem6556339 {A K : Type'} : term739 A K.
Proof. exact (fun _84017 : type835 A K => @lem6556338 A K _84017). Qed.
Lemma lem6556341 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6556342 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6556341 (type835 A K) P c Q). Qed.
Lemma lem6556343 {A K : Type'} : term742 A K.
Proof. exact (@lem6556342 A K (term705 A K) (term706 A K) (term743 A K)). Qed.
Lemma lem6556344 {A K : Type'} (_84017 : type835 A K) : (term744 A K _84017) = (term737 A K _84017).
Proof. exact (eq_refl (term744 A K _84017)). Qed.
Lemma lem6556345 {A K : Type'} : (term745 A K) = (term745 A K).
Proof. exact (eq_refl (term745 A K)). Qed.
Lemma lem6556346 {A K : Type'} (_84017 : type835 A K) : ((term705 A K) = (term744 A K _84017)) = ((term705 A K) = (term737 A K _84017)).
Proof. exact (MK_COMB (@lem6556345 A K) (@lem6556344 A K _84017)). Qed.
Lemma lem6556347 {A K : Type'} (_84017 : type835 A K) : (term746 A K _84017) = (term746 A K _84017).
Proof. exact (eq_refl (term746 A K _84017)). Qed.
Lemma lem6556348 {A K : Type'} (_84017 : type835 A K) : (term747 A K _84017) = (term738 A K _84017).
Proof. exact (MK_COMB (@lem6556347 A K _84017) (@lem6556346 A K _84017)). Qed.
Lemma lem6556349 {A K : Type'} : (term748 A K) = (term749 A K).
Proof. exact (fun_ext (fun _84017 : type835 A K => @lem6556348 A K _84017)). Qed.
Lemma lem6556350 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6556351 {A K : Type'} : (term750 A K) = (term739 A K).
Proof. exact (MK_COMB (@lem6556350 A K) (@lem6556349 A K)). Qed.
Lemma lem6556352 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6556353 {A K : Type'} : (term751 A K) = (term752 A K).
Proof. exact (MK_COMB (@lem6556352) (@lem6556351 A K)). Qed.
Lemma lem6556354 {A K : Type'} (_84017 : type835 A K) : (term744 A K _84017) = (term737 A K _84017).
Proof. exact (eq_refl (term744 A K _84017)). Qed.
Lemma lem6556355 {A K : Type'} (_84017 : type835 A K) : (term746 A K _84017) = (term746 A K _84017).
Proof. exact (eq_refl (term746 A K _84017)). Qed.
Lemma lem6556356 {A K : Type'} (_84017 : type835 A K) : (term753 A K _84017) = (term754 A K _84017).
Proof. exact (MK_COMB (@lem6556355 A K _84017) (@lem6556354 A K _84017)). Qed.
Lemma lem6556357 {A K : Type'} : (term755 A K) = (term756 A K).
Proof. exact (fun_ext (fun _84017 : type835 A K => @lem6556356 A K _84017)). Qed.
Lemma lem6556358 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6556359 {A K : Type'} : (term757 A K) = (term758 A K).
Proof. exact (MK_COMB (@lem6556358 A K) (@lem6556357 A K)). Qed.
Lemma lem6556360 {A K : Type'} : (term745 A K) = (term745 A K).
Proof. exact (eq_refl (term745 A K)). Qed.
Lemma lem6556361 {A K : Type'} : ((term705 A K) = (term757 A K)) = ((term705 A K) = (term758 A K)).
Proof. exact (MK_COMB (@lem6556360 A K) (@lem6556359 A K)). Qed.
Lemma lem6556362 {A K : Type'} : (term742 A K) = (term759 A K).
Proof. exact (MK_COMB (@lem6556353 A K) (@lem6556361 A K)). Qed.
Lemma lem6556363 {A K : Type'} : term759 A K.
Proof. exact (EQ_MP (@lem6556362 A K) (@lem6556343 A K)). Qed.
Lemma lem6556364 {A K : Type'} : (term705 A K) = (term758 A K).
Proof. exact (@lem6556363 A K (@lem6556339 A K)). Qed.
Lemma lem6556366 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6556367 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6556366 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6556368 {A K : Type'} (_84017 : type835 A K) : (_84017 = (term764 A K)) = (term765 A K _84017).
Proof. exact (@lem6556367 A K _84017 (term706 A K)). Qed.
Lemma lem6556369 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6556370 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556369 A K k)). Qed.
Lemma lem6556371 {A K : Type'} (_84017 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017)). Qed.
Lemma lem6556372 {A K : Type'} (_84017 : type835 A K) : (_84017 = (term764 A K)) = (_84017 = (term706 A K)).
Proof. exact (MK_COMB (@lem6556371 A K _84017) (@lem6556370 A K)). Qed.
Lemma lem6556373 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556374 {A K : Type'} (_84017 : type835 A K) : (term766 A K _84017) = (term767 A K _84017).
Proof. exact (MK_COMB (@lem6556373) (@lem6556372 A K _84017)). Qed.
Lemma lem6556375 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6556376 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term709 A K _84017 k) = (term709 A K _84017 k).
Proof. exact (eq_refl (term709 A K _84017 k)). Qed.
Lemma lem6556377 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term707 A K k)) = ((_84017 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6556376 A K _84017 k) (@lem6556375 A K k)). Qed.
Lemma lem6556378 {A K : Type'} (_84017 : type835 A K) : (term768 A K _84017) = (term769 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556377 A K _84017 k)). Qed.
Lemma lem6556379 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556380 {A K : Type'} (_84017 : type835 A K) : (term765 A K _84017) = (term770 A K _84017).
Proof. exact (MK_COMB (@lem6556379 K) (@lem6556378 A K _84017)). Qed.
Lemma lem6556381 {A K : Type'} (_84017 : type835 A K) : ((_84017 = (term764 A K)) = (term765 A K _84017)) = ((_84017 = (term706 A K)) = (term770 A K _84017)).
Proof. exact (MK_COMB (@lem6556374 A K _84017) (@lem6556380 A K _84017)). Qed.
Lemma lem6556382 {A K : Type'} (_84017 : type835 A K) : (_84017 = (term706 A K)) = (term770 A K _84017).
Proof. exact (EQ_MP (@lem6556381 A K _84017) (@lem6556368 A K _84017)). Qed.
Lemma lem6556384 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6556385 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6556384 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6556386 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term773 A K k)) = (term774 A K _84017 k).
Proof. exact (@lem6556385 A K (_84017 k) (term708 A K k)). Qed.
Lemma lem6556387 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6556388 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556387 A K k dom)). Qed.
Lemma lem6556389 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term709 A K _84017 k) = (term709 A K _84017 k).
Proof. exact (eq_refl (term709 A K _84017 k)). Qed.
Lemma lem6556390 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term773 A K k)) = ((_84017 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6556389 A K _84017 k) (@lem6556388 A K k)). Qed.
Lemma lem6556391 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556392 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term775 A K _84017 k) = (term776 A K _84017 k).
Proof. exact (MK_COMB (@lem6556391) (@lem6556390 A K _84017 k)). Qed.
Lemma lem6556393 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6556394 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _84017 k dom) = (term712 A K _84017 k dom).
Proof. exact (eq_refl (term712 A K _84017 k dom)). Qed.
Lemma lem6556395 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term710 A K k dom)) = ((_84017 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6556394 A K _84017 k dom) (@lem6556393 A K k dom)). Qed.
Lemma lem6556396 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term777 A K _84017 k) = (term778 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556395 A K _84017 k dom)). Qed.
Lemma lem6556397 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556398 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term774 A K _84017 k) = (term779 A K _84017 k).
Proof. exact (MK_COMB (@lem6556397 A) (@lem6556396 A K _84017 k)). Qed.
Lemma lem6556399 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (((_84017 k) = (term773 A K k)) = (term774 A K _84017 k)) = (((_84017 k) = (term708 A K k)) = (term779 A K _84017 k)).
Proof. exact (MK_COMB (@lem6556392 A K _84017 k) (@lem6556398 A K _84017 k)). Qed.
Lemma lem6556400 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term708 A K k)) = (term779 A K _84017 k).
Proof. exact (EQ_MP (@lem6556399 A K _84017 k) (@lem6556386 A K _84017 k)). Qed.
Lemma lem6556402 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6556403 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6556402 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6556404 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term782 A K k dom)) = (term783 A K _84017 k dom).
Proof. exact (@lem6556403 A K (_84017 k dom) (term711 A K k dom)). Qed.
Lemma lem6556405 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6556406 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6556405 A K k dom f)). Qed.
Lemma lem6556407 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _84017 k dom) = (term712 A K _84017 k dom).
Proof. exact (eq_refl (term712 A K _84017 k dom)). Qed.
Lemma lem6556408 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term782 A K k dom)) = ((_84017 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6556407 A K _84017 k dom) (@lem6556406 A K k dom)). Qed.
Lemma lem6556409 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556410 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _84017 k dom) = (term785 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6556409) (@lem6556408 A K _84017 k dom)). Qed.
Lemma lem6556411 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6556412 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _84017 k dom f) = (term715 A K _84017 k dom f).
Proof. exact (eq_refl (term715 A K _84017 k dom f)). Qed.
Lemma lem6556413 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term713 A K k dom f)) = ((_84017 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6556412 A K _84017 k dom f) (@lem6556411 A K k dom f)). Qed.
Lemma lem6556414 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _84017 k dom) = (term787 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6556413 A K _84017 k dom f)). Qed.
Lemma lem6556415 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556416 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _84017 k dom) = (term788 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6556415 A K) (@lem6556414 A K _84017 k dom)). Qed.
Lemma lem6556417 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_84017 k dom) = (term782 A K k dom)) = (term783 A K _84017 k dom)) = (((_84017 k dom) = (term711 A K k dom)) = (term788 A K _84017 k dom)).
Proof. exact (MK_COMB (@lem6556410 A K _84017 k dom) (@lem6556416 A K _84017 k dom)). Qed.
Lemma lem6556418 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term711 A K k dom)) = (term788 A K _84017 k dom).
Proof. exact (EQ_MP (@lem6556417 A K _84017 k dom) (@lem6556404 A K _84017 k dom)). Qed.
Lemma lem6556420 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6556421 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6556420 (K -> Prop) A s t). Qed.
Lemma lem6556422 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term791 A K k dom f)) = (term792 A K _84017 k dom f).
Proof. exact (@lem6556421 A K (_84017 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6556423 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6556424 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556423 A K k dom f neut)). Qed.
Lemma lem6556425 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _84017 k dom f) = (term715 A K _84017 k dom f).
Proof. exact (eq_refl (term715 A K _84017 k dom f)). Qed.
Lemma lem6556426 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term791 A K k dom f)) = ((_84017 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6556425 A K _84017 k dom f) (@lem6556424 A K k dom f)). Qed.
Lemma lem6556427 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556428 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _84017 k dom f) = (term794 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556427) (@lem6556426 A K _84017 k dom f)). Qed.
Lemma lem6556429 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6556430 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _84017 k dom f neut) = (term717 A K _84017 k dom f neut).
Proof. exact (eq_refl (term717 A K _84017 k dom f neut)). Qed.
Lemma lem6556431 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term716 A K k dom f neut)) = ((_84017 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6556430 A K _84017 k dom f neut) (@lem6556429 A K k dom f neut)). Qed.
Lemma lem6556432 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _84017 k dom f) = (term796 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556431 A K _84017 k dom f neut)). Qed.
Lemma lem6556433 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556434 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _84017 k dom f) = (term797 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556433 A) (@lem6556432 A K _84017 k dom f)). Qed.
Lemma lem6556435 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_84017 k dom f) = (term791 A K k dom f)) = (term792 A K _84017 k dom f)) = (((_84017 k dom f) = (term714 A K k dom f)) = (term797 A K _84017 k dom f)).
Proof. exact (MK_COMB (@lem6556428 A K _84017 k dom f) (@lem6556434 A K _84017 k dom f)). Qed.
Lemma lem6556436 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term714 A K k dom f)) = (term797 A K _84017 k dom f).
Proof. exact (EQ_MP (@lem6556435 A K _84017 k dom f) (@lem6556422 A K _84017 k dom f)). Qed.
Lemma lem6556438 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6556439 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6556438 Prop K s t). Qed.
Lemma lem6556440 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _84017 k dom f neut).
Proof. exact (@lem6556439 K (_84017 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6556441 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556442 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556441 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556443 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _84017 k dom f neut) = (term717 A K _84017 k dom f neut).
Proof. exact (eq_refl (term717 A K _84017 k dom f neut)). Qed.
Lemma lem6556444 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term799 A K k dom f neut)) = ((_84017 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6556443 A K _84017 k dom f neut) (@lem6556442 A K k dom f neut)). Qed.
Lemma lem6556445 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556446 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _84017 k dom f neut) = (term803 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556445) (@lem6556444 A K _84017 k dom f neut)). Qed.
Lemma lem6556447 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556448 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _84017 k dom f neut GEN_PVAR_272) = (term804 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556449 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6556448 A K _84017 k dom f neut GEN_PVAR_272) (@lem6556447 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556450 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _84017 k dom f neut) = (term806 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556449 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556451 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556452 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _84017 k dom f neut) = (term807 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556451 K) (@lem6556450 A K _84017 k dom f neut)). Qed.
Lemma lem6556453 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_84017 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _84017 k dom f neut)) = (((_84017 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _84017 k dom f neut)).
Proof. exact (MK_COMB (@lem6556446 A K _84017 k dom f neut) (@lem6556452 A K _84017 k dom f neut)). Qed.
Lemma lem6556454 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _84017 k dom f neut).
Proof. exact (EQ_MP (@lem6556453 A K _84017 k dom f neut) (@lem6556440 A K _84017 k dom f neut)). Qed.
Lemma lem6556455 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6556456 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _84017 k dom f neut) = (term806 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556455 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556457 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556458 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _84017 k dom f neut) = (term807 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556457 K) (@lem6556456 A K _84017 k dom f neut)). Qed.
Lemma lem6556459 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _84017 k dom f neut).
Proof. exact (TRANS (@lem6556454 A K _84017 k dom f neut) (@lem6556458 A K _84017 k dom f neut)). Qed.
Lemma lem6556460 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _84017 k dom f) = (term808 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556459 A K _84017 k dom f neut)). Qed.
Lemma lem6556461 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556462 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _84017 k dom f) = (term809 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556461 A) (@lem6556460 A K _84017 k dom f)). Qed.
Lemma lem6556463 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_84017 k dom f) = (term714 A K k dom f)) = (term809 A K _84017 k dom f).
Proof. exact (TRANS (@lem6556436 A K _84017 k dom f) (@lem6556462 A K _84017 k dom f)). Qed.
Lemma lem6556464 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _84017 k dom) = (term810 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6556463 A K _84017 k dom f)). Qed.
Lemma lem6556465 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556466 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _84017 k dom) = (term811 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6556465 A K) (@lem6556464 A K _84017 k dom)). Qed.
Lemma lem6556467 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_84017 k dom) = (term711 A K k dom)) = (term811 A K _84017 k dom).
Proof. exact (TRANS (@lem6556418 A K _84017 k dom) (@lem6556466 A K _84017 k dom)). Qed.
Lemma lem6556468 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term778 A K _84017 k) = (term812 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556467 A K _84017 k dom)). Qed.
Lemma lem6556469 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556470 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term779 A K _84017 k) = (term813 A K _84017 k).
Proof. exact (MK_COMB (@lem6556469 A) (@lem6556468 A K _84017 k)). Qed.
Lemma lem6556471 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((_84017 k) = (term708 A K k)) = (term813 A K _84017 k).
Proof. exact (TRANS (@lem6556400 A K _84017 k) (@lem6556470 A K _84017 k)). Qed.
Lemma lem6556472 {A K : Type'} (_84017 : type835 A K) : (term769 A K _84017) = (term814 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556471 A K _84017 k)). Qed.
Lemma lem6556473 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556474 {A K : Type'} (_84017 : type835 A K) : (term770 A K _84017) = (term815 A K _84017).
Proof. exact (MK_COMB (@lem6556473 K) (@lem6556472 A K _84017)). Qed.
Lemma lem6556475 {A K : Type'} (_84017 : type835 A K) : (_84017 = (term706 A K)) = (term815 A K _84017).
Proof. exact (TRANS (@lem6556382 A K _84017) (@lem6556474 A K _84017)). Qed.
Lemma lem6556476 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6556477 {A K : Type'} (_84017 : type835 A K) : (term746 A K _84017) = (term816 A K _84017).
Proof. exact (MK_COMB (@lem6556476) (@lem6556475 A K _84017)). Qed.
Lemma lem6556478 {A K : Type'} (_84017 : type835 A K) : (term737 A K _84017) = (term737 A K _84017).
Proof. exact (eq_refl (term737 A K _84017)). Qed.
Lemma lem6556479 {A K : Type'} (_84017 : type835 A K) : (term754 A K _84017) = (term817 A K _84017).
Proof. exact (MK_COMB (@lem6556477 A K _84017) (@lem6556478 A K _84017)). Qed.
Lemma lem6556480 {A K : Type'} : (term756 A K) = (term818 A K).
Proof. exact (fun_ext (fun _84017 : type835 A K => @lem6556479 A K _84017)). Qed.
Lemma lem6556481 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6556482 {A K : Type'} : (term758 A K) = (term819 A K).
Proof. exact (MK_COMB (@lem6556481 A K) (@lem6556480 A K)). Qed.
Lemma lem6556483 {A K : Type'} : (term745 A K) = (term745 A K).
Proof. exact (eq_refl (term745 A K)). Qed.
Lemma lem6556484 {A K : Type'} : ((term705 A K) = (term758 A K)) = ((term705 A K) = (term819 A K)).
Proof. exact (MK_COMB (@lem6556483 A K) (@lem6556482 A K)). Qed.
Lemma lem6556487 {A K : Type'} : (term705 A K) = (term819 A K).
Proof. exact (EQ_MP (@lem6556484 A K) (@lem6556364 A K)). Qed.
Lemma lem6556488 {A K : Type'} : (term704 A K) = (term819 A K).
Proof. exact (TRANS (@lem6556115 A K) (@lem6556487 A K)). Qed.
Lemma lem6556517 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)) = ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)).
Proof. exact (eq_refl ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut))). Qed.
Lemma lem6556518 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term673 A K i k dom f neut) = (term673 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6556517 A K i k dom f x neut)). Qed.
Lemma lem6556519 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556520 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term674 A K i k dom f neut) = (term674 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6556519 K) (@lem6556518 A K i k dom f neut)). Qed.
Lemma lem6556521 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _84017 k dom f neut) = (term719 A K _84017 k dom f neut).
Proof. exact (eq_refl (term719 A K _84017 k dom f neut)). Qed.
Lemma lem6556534 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6556535 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6556534 K k ltle j i)). Qed.
Lemma lem6556536 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556537 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6556536 K) (@lem6556535 K k ltle i)). Qed.
Lemma lem6556538 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556539 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6556538) (@lem6556537 K k ltle i)). Qed.
Lemma lem6556540 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _84017 k dom f neut) = (term720 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556539 K k ltle i) (@lem6556521 A K _84017 k dom f neut)). Qed.
Lemma lem6556559 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6556560 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6556559 A K ltle k dom f neut j i)). Qed.
Lemma lem6556561 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556562 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6556561 K) (@lem6556560 A K ltle k dom f neut i)). Qed.
Lemma lem6556563 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556564 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6556563) (@lem6556562 A K ltle k dom f neut i)). Qed.
Lemma lem6556565 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _84017 k dom f neut) = (term721 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556564 A K ltle k dom f neut i) (@lem6556540 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6556570 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6556571 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _84017 k dom f neut) = (term722 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556570 K k i) (@lem6556565 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6556582 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term598 A K dom f i neut) = (term598 A K dom f i neut).
Proof. exact (eq_refl (term598 A K dom f i neut)). Qed.
Lemma lem6556583 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term723 A K ltle i _84017 k dom f neut) = (term723 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556582 A K dom f i neut) (@lem6556571 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6556584 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6556585 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term724 A K ltle i _84017 k dom f neut) = (term724 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556584) (@lem6556583 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6556586 {A K : Type'} (ltle : type1402 K) (_84017 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term725 A K ltle _84017 i k dom f neut) = (term725 A K ltle _84017 i k dom f neut).
Proof. exact (MK_COMB (@lem6556585 A K ltle i _84017 k dom f neut) (@lem6556520 A K i k dom f neut)). Qed.
Lemma lem6556587 {A K : Type'} (_84017 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term726 A K _84017 i k dom f neut) = (term726 A K _84017 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6556586 A K ltle _84017 i k dom f neut)). Qed.
Lemma lem6556588 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6556589 {A K : Type'} (_84017 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term727 A K _84017 i k dom f neut) = (term727 A K _84017 i k dom f neut).
Proof. exact (MK_COMB (@lem6556588 K) (@lem6556587 A K _84017 i k dom f neut)). Qed.
Lemma lem6556590 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term728 A K _84017 k dom f neut) = (term728 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6556589 A K _84017 i k dom f neut)). Qed.
Lemma lem6556591 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556592 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term729 A K _84017 k dom f neut) = (term729 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556591 K) (@lem6556590 A K _84017 k dom f neut)). Qed.
Lemma lem6556593 {A K : Type'} (_84017 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term730 A K _84017 dom f neut) = (term730 A K _84017 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556592 A K _84017 k dom f neut)). Qed.
Lemma lem6556594 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556595 {A K : Type'} (_84017 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term731 A K _84017 dom f neut) = (term731 A K _84017 dom f neut).
Proof. exact (MK_COMB (@lem6556594 K) (@lem6556593 A K _84017 dom f neut)). Qed.
Lemma lem6556596 {A K : Type'} (_84017 : type835 A K) (f : K -> A) (neut : A) : (term732 A K _84017 f neut) = (term732 A K _84017 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556595 A K _84017 dom f neut)). Qed.
Lemma lem6556597 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556598 {A K : Type'} (_84017 : type835 A K) (f : K -> A) (neut : A) : (term733 A K _84017 f neut) = (term733 A K _84017 f neut).
Proof. exact (MK_COMB (@lem6556597 A) (@lem6556596 A K _84017 f neut)). Qed.
Lemma lem6556599 {A K : Type'} (_84017 : type835 A K) (neut : A) : (term734 A K _84017 neut) = (term734 A K _84017 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6556598 A K _84017 f neut)). Qed.
Lemma lem6556600 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556601 {A K : Type'} (_84017 : type835 A K) (neut : A) : (term735 A K _84017 neut) = (term735 A K _84017 neut).
Proof. exact (MK_COMB (@lem6556600 A K) (@lem6556599 A K _84017 neut)). Qed.
Lemma lem6556602 {A K : Type'} (_84017 : type835 A K) : (term736 A K _84017) = (term736 A K _84017).
Proof. exact (fun_ext (fun neut : A => @lem6556601 A K _84017 neut)). Qed.
Lemma lem6556603 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556604 {A K : Type'} (_84017 : type835 A K) : (term737 A K _84017) = (term737 A K _84017).
Proof. exact (MK_COMB (@lem6556603 A) (@lem6556602 A K _84017)). Qed.
Lemma lem6556605 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556606 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6556605 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556607 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6556608 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556607 K) (@lem6556606 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556611 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _84017 k dom f neut GEN_PVAR_272) = (term804 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556612 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6556611 A K _84017 k dom f neut GEN_PVAR_272) (@lem6556608 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556613 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _84017 k dom f neut) = (term806 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556612 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556614 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556615 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _84017 k dom f neut) = (term807 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556614 K) (@lem6556613 A K _84017 k dom f neut)). Qed.
Lemma lem6556616 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _84017 k dom f) = (term808 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556615 A K _84017 k dom f neut)). Qed.
Lemma lem6556617 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556618 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _84017 k dom f) = (term809 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556617 A) (@lem6556616 A K _84017 k dom f)). Qed.
Lemma lem6556619 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _84017 k dom) = (term810 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6556618 A K _84017 k dom f)). Qed.
Lemma lem6556620 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556621 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _84017 k dom) = (term811 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6556620 A K) (@lem6556619 A K _84017 k dom)). Qed.
Lemma lem6556622 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term812 A K _84017 k) = (term812 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556621 A K _84017 k dom)). Qed.
Lemma lem6556623 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556624 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term813 A K _84017 k) = (term813 A K _84017 k).
Proof. exact (MK_COMB (@lem6556623 A) (@lem6556622 A K _84017 k)). Qed.
Lemma lem6556625 {A K : Type'} (_84017 : type835 A K) : (term814 A K _84017) = (term814 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556624 A K _84017 k)). Qed.
Lemma lem6556626 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556627 {A K : Type'} (_84017 : type835 A K) : (term815 A K _84017) = (term815 A K _84017).
Proof. exact (MK_COMB (@lem6556626 K) (@lem6556625 A K _84017)). Qed.
Lemma lem6556628 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6556629 {A K : Type'} (_84017 : type835 A K) : (term816 A K _84017) = (term816 A K _84017).
Proof. exact (MK_COMB (@lem6556628) (@lem6556627 A K _84017)). Qed.
Lemma lem6556630 {A K : Type'} (_84017 : type835 A K) : (term817 A K _84017) = (term817 A K _84017).
Proof. exact (MK_COMB (@lem6556629 A K _84017) (@lem6556604 A K _84017)). Qed.
Lemma lem6556631 {A K : Type'} : (term818 A K) = (term818 A K).
Proof. exact (fun_ext (fun _84017 : type835 A K => @lem6556630 A K _84017)). Qed.
Lemma lem6556632 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6556633 {A K : Type'} : (term819 A K) = (term819 A K).
Proof. exact (MK_COMB (@lem6556632 A K) (@lem6556631 A K)). Qed.
Lemma lem6556774 {A K : Type'} : (term704 A K) = (term819 A K).
Proof. exact (TRANS (@lem6556488 A K) (@lem6556633 A K)). Qed.
Lemma lem6556775 {A K : Type'} : (term819 A K) = (term704 A K).
Proof. exact (SYM (@lem6556774 A K)). Qed.
Lemma lem6556776 {A K : Type'} (_84017 : type835 A K) (h1 : term815 A K _84017) : term815 A K _84017.
Proof. exact (h1). Qed.
Lemma lem6556777 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term723 A K ltle i _84017 k dom f neut) : term723 A K ltle i _84017 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6556779 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6556780 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)) = (term820 A K i k dom f x neut).
Proof. exact (@lem6556779 ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut))). Qed.
Lemma lem6556781 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term820 A K i k dom f x neut) = ((term658 A K i k dom f x neut) = (term602 A K k dom f x neut)).
Proof. exact (SYM (@lem6556780 A K i k dom f x neut)). Qed.
Lemma lem6556782 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term821 A K i k dom f x neut) : term821 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6556786 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556787 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6556788 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6556787 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556789 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556790 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6556792 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6556790) (@lem6556789 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556793 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6556792 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556794 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556795 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556794 K) (@lem6556793 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556796 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6556788 A K GEN_PVAR_272 k dom f neut) (@lem6556795 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556797 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6556786 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6556798 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6556799 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556798 K) (@lem6556797 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556801 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _84017 k dom f neut GEN_PVAR_272) = (term831 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556802 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _84017 GEN_PVAR_272 k dom f neut) = (term832 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556801 A K _84017 k dom f neut GEN_PVAR_272) (@lem6556799 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556804 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _84017 k dom f neut GEN_PVAR_272) = (term833 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556805 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _84017 GEN_PVAR_272 k dom f neut) = (term835 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556804 A K _84017 k dom f neut GEN_PVAR_272) (@lem6556796 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556806 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556807 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _84017 GEN_PVAR_272 k dom f neut) = (term837 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556806) (@lem6556805 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556808 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _84017 GEN_PVAR_272 k dom f neut) = (term839 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556807 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6556802 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556809 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_84017 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556810 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_84017 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6556809 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6556808 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556811 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _84017 k dom f neut) = (term840 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556810 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556812 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556813 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _84017 k dom f neut) = (term841 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556812 K) (@lem6556811 A K _84017 k dom f neut)). Qed.
Lemma lem6556814 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _84017 k dom f) = (term842 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556813 A K _84017 k dom f neut)). Qed.
Lemma lem6556815 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556816 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _84017 k dom f) = (term843 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556815 A) (@lem6556814 A K _84017 k dom f)). Qed.
Lemma lem6556817 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _84017 k dom) = (term844 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6556816 A K _84017 k dom f)). Qed.
Lemma lem6556818 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6556819 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _84017 k dom) = (term845 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6556818 A K) (@lem6556817 A K _84017 k dom)). Qed.
Lemma lem6556820 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term812 A K _84017 k) = (term846 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6556819 A K _84017 k dom)). Qed.
Lemma lem6556821 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6556822 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term813 A K _84017 k) = (term847 A K _84017 k).
Proof. exact (MK_COMB (@lem6556821 A) (@lem6556820 A K _84017 k)). Qed.
Lemma lem6556823 {A K : Type'} (_84017 : type835 A K) : (term814 A K _84017) = (term848 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6556822 A K _84017 k)). Qed.
Lemma lem6556824 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6556825 {A K : Type'} (_84017 : type835 A K) : (term815 A K _84017) = (term849 A K _84017).
Proof. exact (MK_COMB (@lem6556824 K) (@lem6556823 A K _84017)). Qed.
Lemma lem6556843 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6556844 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6556843 K P Q). Qed.
Lemma lem6556845 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _84017 k dom f neut) = (term853 A K _84017 k dom f neut).
Proof. exact (@lem6556844 K (term854 A K _84017 k dom f neut) (term855 A K _84017 k dom f neut)). Qed.
Lemma lem6556846 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _84017 k dom f neut GEN_PVAR_272) = (term835 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556847 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556848 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _84017 k dom f neut GEN_PVAR_272) = (term837 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556847) (@lem6556846 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556849 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _84017 k dom f neut GEN_PVAR_272) = (term832 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556850 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _84017 k dom f neut GEN_PVAR_272) = (term839 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6556848 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6556849 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556851 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _84017 k dom f neut) = (term840 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556850 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556852 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556853 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _84017 k dom f neut) = (term841 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556852 K) (@lem6556851 A K _84017 k dom f neut)). Qed.
Lemma lem6556854 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556855 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _84017 k dom f neut) = (term862 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556854) (@lem6556853 A K _84017 k dom f neut)). Qed.
Lemma lem6556856 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _84017 k dom f neut GEN_PVAR_272) = (term835 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556857 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _84017 k dom f neut) = (term854 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556856 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556858 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556859 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _84017 k dom f neut) = (term865 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556858 K) (@lem6556857 A K _84017 k dom f neut)). Qed.
Lemma lem6556860 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556861 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _84017 k dom f neut) = (term867 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556860) (@lem6556859 A K _84017 k dom f neut)). Qed.
Lemma lem6556862 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _84017 k dom f neut GEN_PVAR_272) = (term832 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6556863 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _84017 k dom f neut) = (term855 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6556862 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6556864 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6556865 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _84017 k dom f neut) = (term870 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556864 K) (@lem6556863 A K _84017 k dom f neut)). Qed.
Lemma lem6556866 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _84017 k dom f neut) = (term871 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556861 A K _84017 k dom f neut) (@lem6556865 A K _84017 k dom f neut)). Qed.
Lemma lem6556867 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _84017 k dom f neut) = (term853 A K _84017 k dom f neut)) = ((term841 A K _84017 k dom f neut) = (term871 A K _84017 k dom f neut)).
Proof. exact (MK_COMB (@lem6556855 A K _84017 k dom f neut) (@lem6556866 A K _84017 k dom f neut)). Qed.
Lemma lem6556868 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _84017 k dom f neut) = (term871 A K _84017 k dom f neut).
Proof. exact (EQ_MP (@lem6556867 A K _84017 k dom f neut) (@lem6556845 A K _84017 k dom f neut)). Qed.
Lemma lem6556973 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _84017 k dom f) = (term872 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556868 A K _84017 k dom f neut)). Qed.
Lemma lem6556974 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556975 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _84017 k dom f) = (term873 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556974 A) (@lem6556973 A K _84017 k dom f)). Qed.
Lemma lem6556977 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6556978 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6556977 A P Q). Qed.
Lemma lem6556979 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _84017 k dom f) = (term875 A K _84017 k dom f).
Proof. exact (@lem6556978 A (term876 A K _84017 k dom f) (term877 A K _84017 k dom f)). Qed.
Lemma lem6556980 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _84017 k dom f neut) = (term865 A K _84017 k dom f neut).
Proof. exact (eq_refl (term878 A K _84017 k dom f neut)). Qed.
Lemma lem6556981 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556982 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _84017 k dom f neut) = (term867 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556981) (@lem6556980 A K _84017 k dom f neut)). Qed.
Lemma lem6556983 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _84017 k dom f neut) = (term870 A K _84017 k dom f neut).
Proof. exact (eq_refl (term880 A K _84017 k dom f neut)). Qed.
Lemma lem6556984 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _84017 k dom f neut) = (term871 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6556982 A K _84017 k dom f neut) (@lem6556983 A K _84017 k dom f neut)). Qed.
Lemma lem6556985 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _84017 k dom f) = (term872 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556984 A K _84017 k dom f neut)). Qed.
Lemma lem6556986 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556987 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _84017 k dom f) = (term873 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556986 A) (@lem6556985 A K _84017 k dom f)). Qed.
Lemma lem6556988 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6556989 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _84017 k dom f) = (term884 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556988) (@lem6556987 A K _84017 k dom f)). Qed.
Lemma lem6556990 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _84017 k dom f neut) = (term865 A K _84017 k dom f neut).
Proof. exact (eq_refl (term878 A K _84017 k dom f neut)). Qed.
Lemma lem6556991 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _84017 k dom f) = (term876 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556990 A K _84017 k dom f neut)). Qed.
Lemma lem6556992 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556993 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _84017 k dom f) = (term887 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556992 A) (@lem6556991 A K _84017 k dom f)). Qed.
Lemma lem6556994 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6556995 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _84017 k dom f) = (term889 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556994) (@lem6556993 A K _84017 k dom f)). Qed.
Lemma lem6556996 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _84017 k dom f neut) = (term870 A K _84017 k dom f neut).
Proof. exact (eq_refl (term880 A K _84017 k dom f neut)). Qed.
Lemma lem6556997 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _84017 k dom f) = (term877 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6556996 A K _84017 k dom f neut)). Qed.
Lemma lem6556998 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6556999 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _84017 k dom f) = (term892 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556998 A) (@lem6556997 A K _84017 k dom f)). Qed.
Lemma lem6557000 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _84017 k dom f) = (term893 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6556995 A K _84017 k dom f) (@lem6556999 A K _84017 k dom f)). Qed.
Lemma lem6557001 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _84017 k dom f) = (term875 A K _84017 k dom f)) = ((term873 A K _84017 k dom f) = (term893 A K _84017 k dom f)).
Proof. exact (MK_COMB (@lem6556989 A K _84017 k dom f) (@lem6557000 A K _84017 k dom f)). Qed.
Lemma lem6557002 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _84017 k dom f) = (term893 A K _84017 k dom f).
Proof. exact (EQ_MP (@lem6557001 A K _84017 k dom f) (@lem6556979 A K _84017 k dom f)). Qed.
Lemma lem6557115 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _84017 k dom f) = (term893 A K _84017 k dom f).
Proof. exact (TRANS (@lem6556975 A K _84017 k dom f) (@lem6557002 A K _84017 k dom f)). Qed.
Lemma lem6557116 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _84017 k dom) = (term894 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557115 A K _84017 k dom f)). Qed.
Lemma lem6557117 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557118 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _84017 k dom) = (term895 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557117 A K) (@lem6557116 A K _84017 k dom)). Qed.
Lemma lem6557120 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6557121 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6557120 (K -> A) P Q). Qed.
Lemma lem6557122 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _84017 k dom) = (term899 A K _84017 k dom).
Proof. exact (@lem6557121 A K (term900 A K _84017 k dom) (term901 A K _84017 k dom)). Qed.
Lemma lem6557123 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _84017 k dom f) = (term887 A K _84017 k dom f).
Proof. exact (eq_refl (term902 A K _84017 k dom f)). Qed.
Lemma lem6557124 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557125 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _84017 k dom f) = (term889 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557124) (@lem6557123 A K _84017 k dom f)). Qed.
Lemma lem6557126 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _84017 k dom f) = (term892 A K _84017 k dom f).
Proof. exact (eq_refl (term904 A K _84017 k dom f)). Qed.
Lemma lem6557127 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _84017 k dom f) = (term893 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557125 A K _84017 k dom f) (@lem6557126 A K _84017 k dom f)). Qed.
Lemma lem6557128 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _84017 k dom) = (term894 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557127 A K _84017 k dom f)). Qed.
Lemma lem6557129 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557130 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _84017 k dom) = (term895 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557129 A K) (@lem6557128 A K _84017 k dom)). Qed.
Lemma lem6557131 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557132 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _84017 k dom) = (term908 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557131) (@lem6557130 A K _84017 k dom)). Qed.
Lemma lem6557133 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _84017 k dom f) = (term887 A K _84017 k dom f).
Proof. exact (eq_refl (term902 A K _84017 k dom f)). Qed.
Lemma lem6557134 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _84017 k dom) = (term900 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557133 A K _84017 k dom f)). Qed.
Lemma lem6557135 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557136 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _84017 k dom) = (term911 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557135 A K) (@lem6557134 A K _84017 k dom)). Qed.
Lemma lem6557137 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557138 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _84017 k dom) = (term913 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557137) (@lem6557136 A K _84017 k dom)). Qed.
Lemma lem6557139 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _84017 k dom f) = (term892 A K _84017 k dom f).
Proof. exact (eq_refl (term904 A K _84017 k dom f)). Qed.
Lemma lem6557140 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _84017 k dom) = (term901 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557139 A K _84017 k dom f)). Qed.
Lemma lem6557141 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557142 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _84017 k dom) = (term916 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557141 A K) (@lem6557140 A K _84017 k dom)). Qed.
Lemma lem6557143 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _84017 k dom) = (term917 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557138 A K _84017 k dom) (@lem6557142 A K _84017 k dom)). Qed.
Lemma lem6557144 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _84017 k dom) = (term899 A K _84017 k dom)) = ((term895 A K _84017 k dom) = (term917 A K _84017 k dom)).
Proof. exact (MK_COMB (@lem6557132 A K _84017 k dom) (@lem6557143 A K _84017 k dom)). Qed.
Lemma lem6557145 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _84017 k dom) = (term917 A K _84017 k dom).
Proof. exact (EQ_MP (@lem6557144 A K _84017 k dom) (@lem6557122 A K _84017 k dom)). Qed.
Lemma lem6557266 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _84017 k dom) = (term917 A K _84017 k dom).
Proof. exact (TRANS (@lem6557118 A K _84017 k dom) (@lem6557145 A K _84017 k dom)). Qed.
Lemma lem6557267 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term846 A K _84017 k) = (term918 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557266 A K _84017 k dom)). Qed.
Lemma lem6557268 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557269 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term847 A K _84017 k) = (term919 A K _84017 k).
Proof. exact (MK_COMB (@lem6557268 A) (@lem6557267 A K _84017 k)). Qed.
Lemma lem6557271 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6557272 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6557271 (A -> Prop) P Q). Qed.
Lemma lem6557273 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term922 A K _84017 k) = (term923 A K _84017 k).
Proof. exact (@lem6557272 A (term924 A K _84017 k) (term925 A K _84017 k)). Qed.
Lemma lem6557274 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _84017 k dom) = (term911 A K _84017 k dom).
Proof. exact (eq_refl (term926 A K _84017 k dom)). Qed.
Lemma lem6557275 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557276 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _84017 k dom) = (term913 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557275) (@lem6557274 A K _84017 k dom)). Qed.
Lemma lem6557277 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _84017 k dom) = (term916 A K _84017 k dom).
Proof. exact (eq_refl (term928 A K _84017 k dom)). Qed.
Lemma lem6557278 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _84017 k dom) = (term917 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557276 A K _84017 k dom) (@lem6557277 A K _84017 k dom)). Qed.
Lemma lem6557279 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term930 A K _84017 k) = (term918 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557278 A K _84017 k dom)). Qed.
Lemma lem6557280 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557281 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term922 A K _84017 k) = (term919 A K _84017 k).
Proof. exact (MK_COMB (@lem6557280 A) (@lem6557279 A K _84017 k)). Qed.
Lemma lem6557282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557283 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term931 A K _84017 k) = (term932 A K _84017 k).
Proof. exact (MK_COMB (@lem6557282) (@lem6557281 A K _84017 k)). Qed.
Lemma lem6557284 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _84017 k dom) = (term911 A K _84017 k dom).
Proof. exact (eq_refl (term926 A K _84017 k dom)). Qed.
Lemma lem6557285 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term933 A K _84017 k) = (term924 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557284 A K _84017 k dom)). Qed.
Lemma lem6557286 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557287 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term934 A K _84017 k) = (term935 A K _84017 k).
Proof. exact (MK_COMB (@lem6557286 A) (@lem6557285 A K _84017 k)). Qed.
Lemma lem6557288 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557289 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term936 A K _84017 k) = (term937 A K _84017 k).
Proof. exact (MK_COMB (@lem6557288) (@lem6557287 A K _84017 k)). Qed.
Lemma lem6557290 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _84017 k dom) = (term916 A K _84017 k dom).
Proof. exact (eq_refl (term928 A K _84017 k dom)). Qed.
Lemma lem6557291 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term938 A K _84017 k) = (term925 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557290 A K _84017 k dom)). Qed.
Lemma lem6557292 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557293 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term939 A K _84017 k) = (term940 A K _84017 k).
Proof. exact (MK_COMB (@lem6557292 A) (@lem6557291 A K _84017 k)). Qed.
Lemma lem6557294 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term923 A K _84017 k) = (term941 A K _84017 k).
Proof. exact (MK_COMB (@lem6557289 A K _84017 k) (@lem6557293 A K _84017 k)). Qed.
Lemma lem6557295 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((term922 A K _84017 k) = (term923 A K _84017 k)) = ((term919 A K _84017 k) = (term941 A K _84017 k)).
Proof. exact (MK_COMB (@lem6557283 A K _84017 k) (@lem6557294 A K _84017 k)). Qed.
Lemma lem6557296 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term919 A K _84017 k) = (term941 A K _84017 k).
Proof. exact (EQ_MP (@lem6557295 A K _84017 k) (@lem6557273 A K _84017 k)). Qed.
Lemma lem6557425 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term847 A K _84017 k) = (term941 A K _84017 k).
Proof. exact (TRANS (@lem6557269 A K _84017 k) (@lem6557296 A K _84017 k)). Qed.
Lemma lem6557426 {A K : Type'} (_84017 : type835 A K) : (term848 A K _84017) = (term942 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557425 A K _84017 k)). Qed.
Lemma lem6557427 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557428 {A K : Type'} (_84017 : type835 A K) : (term849 A K _84017) = (term943 A K _84017).
Proof. exact (MK_COMB (@lem6557427 K) (@lem6557426 A K _84017)). Qed.
Lemma lem6557430 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6557431 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6557430 (K -> Prop) P Q). Qed.
Lemma lem6557432 {A K : Type'} (_84017 : type835 A K) : (term944 A K _84017) = (term945 A K _84017).
Proof. exact (@lem6557431 K (term946 A K _84017) (term947 A K _84017)). Qed.
Lemma lem6557433 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term948 A K _84017 k) = (term935 A K _84017 k).
Proof. exact (eq_refl (term948 A K _84017 k)). Qed.
Lemma lem6557434 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557435 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term949 A K _84017 k) = (term937 A K _84017 k).
Proof. exact (MK_COMB (@lem6557434) (@lem6557433 A K _84017 k)). Qed.
Lemma lem6557436 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term950 A K _84017 k) = (term940 A K _84017 k).
Proof. exact (eq_refl (term950 A K _84017 k)). Qed.
Lemma lem6557437 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term951 A K _84017 k) = (term941 A K _84017 k).
Proof. exact (MK_COMB (@lem6557435 A K _84017 k) (@lem6557436 A K _84017 k)). Qed.
Lemma lem6557438 {A K : Type'} (_84017 : type835 A K) : (term952 A K _84017) = (term942 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557437 A K _84017 k)). Qed.
Lemma lem6557439 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557440 {A K : Type'} (_84017 : type835 A K) : (term944 A K _84017) = (term943 A K _84017).
Proof. exact (MK_COMB (@lem6557439 K) (@lem6557438 A K _84017)). Qed.
Lemma lem6557441 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557442 {A K : Type'} (_84017 : type835 A K) : (term953 A K _84017) = (term954 A K _84017).
Proof. exact (MK_COMB (@lem6557441) (@lem6557440 A K _84017)). Qed.
Lemma lem6557443 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term948 A K _84017 k) = (term935 A K _84017 k).
Proof. exact (eq_refl (term948 A K _84017 k)). Qed.
Lemma lem6557444 {A K : Type'} (_84017 : type835 A K) : (term955 A K _84017) = (term946 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557443 A K _84017 k)). Qed.
Lemma lem6557445 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557446 {A K : Type'} (_84017 : type835 A K) : (term956 A K _84017) = (term957 A K _84017).
Proof. exact (MK_COMB (@lem6557445 K) (@lem6557444 A K _84017)). Qed.
Lemma lem6557447 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557448 {A K : Type'} (_84017 : type835 A K) : (term958 A K _84017) = (term959 A K _84017).
Proof. exact (MK_COMB (@lem6557447) (@lem6557446 A K _84017)). Qed.
Lemma lem6557449 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term950 A K _84017 k) = (term940 A K _84017 k).
Proof. exact (eq_refl (term950 A K _84017 k)). Qed.
Lemma lem6557450 {A K : Type'} (_84017 : type835 A K) : (term960 A K _84017) = (term947 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557449 A K _84017 k)). Qed.
Lemma lem6557451 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557452 {A K : Type'} (_84017 : type835 A K) : (term961 A K _84017) = (term962 A K _84017).
Proof. exact (MK_COMB (@lem6557451 K) (@lem6557450 A K _84017)). Qed.
Lemma lem6557453 {A K : Type'} (_84017 : type835 A K) : (term945 A K _84017) = (term963 A K _84017).
Proof. exact (MK_COMB (@lem6557448 A K _84017) (@lem6557452 A K _84017)). Qed.
Lemma lem6557454 {A K : Type'} (_84017 : type835 A K) : ((term944 A K _84017) = (term945 A K _84017)) = ((term943 A K _84017) = (term963 A K _84017)).
Proof. exact (MK_COMB (@lem6557442 A K _84017) (@lem6557453 A K _84017)). Qed.
Lemma lem6557455 {A K : Type'} (_84017 : type835 A K) : (term943 A K _84017) = (term963 A K _84017).
Proof. exact (EQ_MP (@lem6557454 A K _84017) (@lem6557432 A K _84017)). Qed.
Lemma lem6557592 {A K : Type'} (_84017 : type835 A K) : (term849 A K _84017) = (term963 A K _84017).
Proof. exact (TRANS (@lem6557428 A K _84017) (@lem6557455 A K _84017)). Qed.
Lemma lem6557594 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6557595 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6557594 K P Q). Qed.
Lemma lem6557596 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _84017 GEN_PVAR_272 k dom f neut) = (term967 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6557595 K (term968 A K _84017 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557597 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557598 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6557597 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557599 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6557600 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6557599 K) (@lem6557598 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557601 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _84017 k dom f neut GEN_PVAR_272) = (term831 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6557602 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _84017 GEN_PVAR_272 k dom f neut) = (term832 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6557601 A K _84017 k dom f neut GEN_PVAR_272) (@lem6557600 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557603 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557604 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _84017 GEN_PVAR_272 k dom f neut) = (term972 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6557603) (@lem6557602 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557605 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557606 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _84017 k dom f neut GEN_PVAR_272) = (term831 A K _84017 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6557607 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _84017 GEN_PVAR_272 k dom f neut j) = (term974 A K _84017 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6557606 A K _84017 k dom f neut GEN_PVAR_272) (@lem6557605 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557608 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _84017 GEN_PVAR_272 k dom f neut) = (term976 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6557607 A K _84017 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557609 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6557610 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _84017 GEN_PVAR_272 k dom f neut) = (term977 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6557609 K) (@lem6557608 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557611 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _84017 GEN_PVAR_272 k dom f neut) = (term967 A K _84017 GEN_PVAR_272 k dom f neut)) = ((term832 A K _84017 GEN_PVAR_272 k dom f neut) = (term977 A K _84017 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6557604 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6557610 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557612 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _84017 GEN_PVAR_272 k dom f neut) = (term977 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6557611 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6557596 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557613 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _84017 k dom f neut) = (term978 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6557612 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557614 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6557615 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _84017 k dom f neut) = (term979 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557614 K) (@lem6557613 A K _84017 k dom f neut)). Qed.
Lemma lem6557617 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6557618 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6557617 K K P). Qed.
Lemma lem6557619 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _84017 k dom f neut) = (term985 A K _84017 k dom f neut).
Proof. exact (@lem6557618 K (term986 A K _84017 k dom f neut)). Qed.
Lemma lem6557620 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _84017 k dom f neut GEN_PVAR_272) = (term976 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6557621 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6557622 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _84017 k dom f neut GEN_PVAR_272 j) = (term989 A K _84017 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6557620 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6557621 K j)). Qed.
Lemma lem6557623 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _84017 GEN_PVAR_272 k dom f neut j) = (term974 A K _84017 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _84017 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557624 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _84017 k dom f neut GEN_PVAR_272 j) = (term974 A K _84017 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6557622 A K _84017 GEN_PVAR_272 k dom f neut j) (@lem6557623 A K _84017 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557625 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _84017 k dom f neut GEN_PVAR_272) = (term976 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6557624 A K _84017 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6557626 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6557627 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _84017 k dom f neut GEN_PVAR_272) = (term977 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6557626 K) (@lem6557625 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557628 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _84017 k dom f neut) = (term978 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6557627 A K _84017 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6557629 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6557630 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _84017 k dom f neut) = (term979 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557629 K) (@lem6557628 A K _84017 k dom f neut)). Qed.
Lemma lem6557631 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557632 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _84017 k dom f neut) = (term994 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557631) (@lem6557630 A K _84017 k dom f neut)). Qed.
Lemma lem6557633 {A K : Type'} (_84017 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _84017 k dom f neut GEN_PVAR_272) = (term976 A K _84017 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _84017 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6557634 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6557635 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _84017 k dom f neut j GEN_PVAR_272) = (term996 A K _84017 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6557633 A K _84017 GEN_PVAR_272 k dom f neut) (@lem6557634 K j GEN_PVAR_272)). Qed.
Lemma lem6557636 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _84017 k dom f neut j GEN_PVAR_272) = (term997 A K _84017 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _84017 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6557637 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _84017 k dom f neut j GEN_PVAR_272) = (term997 A K _84017 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6557635 A K _84017 k dom f neut j GEN_PVAR_272) (@lem6557636 A K _84017 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6557638 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _84017 k dom f neut j) = (term999 A K _84017 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6557637 A K _84017 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6557639 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6557640 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _84017 k dom f neut j) = (term1001 A K _84017 k dom f neut j).
Proof. exact (MK_COMB (@lem6557639 K) (@lem6557638 A K _84017 k dom f neut j)). Qed.
Lemma lem6557641 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _84017 k dom f neut) = (term1003 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6557640 A K _84017 k dom f neut j)). Qed.
Lemma lem6557642 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6557643 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _84017 k dom f neut) = (term1004 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557642 K) (@lem6557641 A K _84017 k dom f neut)). Qed.
Lemma lem6557644 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _84017 k dom f neut) = (term985 A K _84017 k dom f neut)) = ((term979 A K _84017 k dom f neut) = (term1004 A K _84017 k dom f neut)).
Proof. exact (MK_COMB (@lem6557632 A K _84017 k dom f neut) (@lem6557643 A K _84017 k dom f neut)). Qed.
Lemma lem6557645 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _84017 k dom f neut) = (term1004 A K _84017 k dom f neut).
Proof. exact (EQ_MP (@lem6557644 A K _84017 k dom f neut) (@lem6557619 A K _84017 k dom f neut)). Qed.
Lemma lem6557646 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _84017 k dom f neut) = (term1004 A K _84017 k dom f neut).
Proof. exact (TRANS (@lem6557615 A K _84017 k dom f neut) (@lem6557645 A K _84017 k dom f neut)). Qed.
Lemma lem6557647 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _84017 k dom f) = (term1005 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6557646 A K _84017 k dom f neut)). Qed.
Lemma lem6557648 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6557649 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _84017 k dom f) = (term1006 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557648 A) (@lem6557647 A K _84017 k dom f)). Qed.
Lemma lem6557651 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6557652 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6557651 A (K -> K) P). Qed.
Lemma lem6557653 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _84017 k dom f) = (term1010 A K _84017 k dom f).
Proof. exact (@lem6557652 A K (term1011 A K _84017 k dom f)). Qed.
Lemma lem6557654 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _84017 k dom f neut) = (term1003 A K _84017 k dom f neut).
Proof. exact (eq_refl (term1012 A K _84017 k dom f neut)). Qed.
Lemma lem6557655 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6557656 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _84017 k dom f neut j) = (term1014 A K _84017 k dom f neut j).
Proof. exact (MK_COMB (@lem6557654 A K _84017 k dom f neut) (@lem6557655 K j)). Qed.
Lemma lem6557657 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _84017 k dom f neut j) = (term1001 A K _84017 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _84017 k dom f neut j)). Qed.
Lemma lem6557658 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _84017 k dom f neut j) = (term1001 A K _84017 k dom f neut j).
Proof. exact (TRANS (@lem6557656 A K _84017 k dom f neut j) (@lem6557657 A K _84017 k dom f neut j)). Qed.
Lemma lem6557659 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _84017 k dom f neut) = (term1003 A K _84017 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6557658 A K _84017 k dom f neut j)). Qed.
Lemma lem6557660 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6557661 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _84017 k dom f neut) = (term1004 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557660 K) (@lem6557659 A K _84017 k dom f neut)). Qed.
Lemma lem6557662 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _84017 k dom f) = (term1005 A K _84017 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6557661 A K _84017 k dom f neut)). Qed.
Lemma lem6557663 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6557664 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _84017 k dom f) = (term1006 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557663 A) (@lem6557662 A K _84017 k dom f)). Qed.
Lemma lem6557665 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557666 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _84017 k dom f) = (term1019 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557665) (@lem6557664 A K _84017 k dom f)). Qed.
Lemma lem6557667 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _84017 k dom f neut) = (term1003 A K _84017 k dom f neut).
Proof. exact (eq_refl (term1012 A K _84017 k dom f neut)). Qed.
Lemma lem6557668 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6557669 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _84017 k dom f j neut) = (term1021 A K _84017 k dom f j neut).
Proof. exact (MK_COMB (@lem6557667 A K _84017 k dom f neut) (@lem6557668 A K j neut)). Qed.
Lemma lem6557670 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _84017 k dom f j neut) = (term1022 A K _84017 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _84017 k dom f j neut)). Qed.
Lemma lem6557671 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _84017 k dom f j neut) = (term1022 A K _84017 k dom f j neut).
Proof. exact (TRANS (@lem6557669 A K _84017 k dom f j neut) (@lem6557670 A K _84017 k dom f j neut)). Qed.
Lemma lem6557672 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _84017 k dom f j) = (term1024 A K _84017 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6557671 A K _84017 k dom f j neut)). Qed.
Lemma lem6557673 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6557674 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _84017 k dom f j) = (term1026 A K _84017 k dom f j).
Proof. exact (MK_COMB (@lem6557673 A) (@lem6557672 A K _84017 k dom f j)). Qed.
Lemma lem6557675 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _84017 k dom f) = (term1028 A K _84017 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6557674 A K _84017 k dom f j)). Qed.
Lemma lem6557676 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6557677 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _84017 k dom f) = (term1029 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557676 A K) (@lem6557675 A K _84017 k dom f)). Qed.
Lemma lem6557678 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _84017 k dom f) = (term1010 A K _84017 k dom f)) = ((term1006 A K _84017 k dom f) = (term1029 A K _84017 k dom f)).
Proof. exact (MK_COMB (@lem6557666 A K _84017 k dom f) (@lem6557677 A K _84017 k dom f)). Qed.
Lemma lem6557679 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _84017 k dom f) = (term1029 A K _84017 k dom f).
Proof. exact (EQ_MP (@lem6557678 A K _84017 k dom f) (@lem6557653 A K _84017 k dom f)). Qed.
Lemma lem6557680 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _84017 k dom f) = (term1029 A K _84017 k dom f).
Proof. exact (TRANS (@lem6557649 A K _84017 k dom f) (@lem6557679 A K _84017 k dom f)). Qed.
Lemma lem6557681 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _84017 k dom) = (term1030 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557680 A K _84017 k dom f)). Qed.
Lemma lem6557682 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557683 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _84017 k dom) = (term1031 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557682 A K) (@lem6557681 A K _84017 k dom)). Qed.
Lemma lem6557685 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6557686 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6557685 (K -> A) (type1411 A K) P). Qed.
Lemma lem6557687 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _84017 k dom) = (term1035 A K _84017 k dom).
Proof. exact (@lem6557686 A K (term1036 A K _84017 k dom)). Qed.
Lemma lem6557688 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _84017 k dom f) = (term1028 A K _84017 k dom f).
Proof. exact (eq_refl (term1037 A K _84017 k dom f)). Qed.
Lemma lem6557689 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6557690 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _84017 k dom f j) = (term1039 A K _84017 k dom f j).
Proof. exact (MK_COMB (@lem6557688 A K _84017 k dom f) (@lem6557689 A K j)). Qed.
Lemma lem6557691 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _84017 k dom f j) = (term1026 A K _84017 k dom f j).
Proof. exact (eq_refl (term1039 A K _84017 k dom f j)). Qed.
Lemma lem6557692 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _84017 k dom f j) = (term1026 A K _84017 k dom f j).
Proof. exact (TRANS (@lem6557690 A K _84017 k dom f j) (@lem6557691 A K _84017 k dom f j)). Qed.
Lemma lem6557693 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _84017 k dom f) = (term1028 A K _84017 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6557692 A K _84017 k dom f j)). Qed.
Lemma lem6557694 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6557695 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _84017 k dom f) = (term1029 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6557694 A K) (@lem6557693 A K _84017 k dom f)). Qed.
Lemma lem6557696 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _84017 k dom) = (term1030 A K _84017 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6557695 A K _84017 k dom f)). Qed.
Lemma lem6557697 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557698 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _84017 k dom) = (term1031 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557697 A K) (@lem6557696 A K _84017 k dom)). Qed.
Lemma lem6557699 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557700 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _84017 k dom) = (term1044 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557699) (@lem6557698 A K _84017 k dom)). Qed.
Lemma lem6557701 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _84017 k dom f) = (term1028 A K _84017 k dom f).
Proof. exact (eq_refl (term1037 A K _84017 k dom f)). Qed.
Lemma lem6557702 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6557703 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _84017 k dom j f) = (term1046 A K _84017 k dom j f).
Proof. exact (MK_COMB (@lem6557701 A K _84017 k dom f) (@lem6557702 A K j f)). Qed.
Lemma lem6557704 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _84017 k dom j f) = (term1047 A K _84017 k dom j f).
Proof. exact (eq_refl (term1046 A K _84017 k dom j f)). Qed.
Lemma lem6557705 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _84017 k dom j f) = (term1047 A K _84017 k dom j f).
Proof. exact (TRANS (@lem6557703 A K _84017 k dom j f) (@lem6557704 A K _84017 k dom j f)). Qed.
Lemma lem6557706 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _84017 k dom j) = (term1049 A K _84017 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6557705 A K _84017 k dom j f)). Qed.
Lemma lem6557707 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6557708 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _84017 k dom j) = (term1051 A K _84017 k dom j).
Proof. exact (MK_COMB (@lem6557707 A K) (@lem6557706 A K _84017 k dom j)). Qed.
Lemma lem6557709 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _84017 k dom) = (term1053 A K _84017 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6557708 A K _84017 k dom j)). Qed.
Lemma lem6557710 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6557711 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _84017 k dom) = (term1054 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557710 A K) (@lem6557709 A K _84017 k dom)). Qed.
Lemma lem6557712 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _84017 k dom) = (term1035 A K _84017 k dom)) = ((term1031 A K _84017 k dom) = (term1054 A K _84017 k dom)).
Proof. exact (MK_COMB (@lem6557700 A K _84017 k dom) (@lem6557711 A K _84017 k dom)). Qed.
Lemma lem6557713 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _84017 k dom) = (term1054 A K _84017 k dom).
Proof. exact (EQ_MP (@lem6557712 A K _84017 k dom) (@lem6557687 A K _84017 k dom)). Qed.
Lemma lem6557714 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _84017 k dom) = (term1054 A K _84017 k dom).
Proof. exact (TRANS (@lem6557683 A K _84017 k dom) (@lem6557713 A K _84017 k dom)). Qed.
Lemma lem6557715 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term925 A K _84017 k) = (term1055 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557714 A K _84017 k dom)). Qed.
Lemma lem6557716 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557717 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term940 A K _84017 k) = (term1056 A K _84017 k).
Proof. exact (MK_COMB (@lem6557716 A) (@lem6557715 A K _84017 k)). Qed.
Lemma lem6557719 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6557720 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6557719 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6557721 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1059 A K _84017 k) = (term1060 A K _84017 k).
Proof. exact (@lem6557720 A K (term1061 A K _84017 k)). Qed.
Lemma lem6557722 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _84017 k dom) = (term1053 A K _84017 k dom).
Proof. exact (eq_refl (term1062 A K _84017 k dom)). Qed.
Lemma lem6557723 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6557724 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _84017 k dom j) = (term1064 A K _84017 k dom j).
Proof. exact (MK_COMB (@lem6557722 A K _84017 k dom) (@lem6557723 A K j)). Qed.
Lemma lem6557725 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _84017 k dom j) = (term1051 A K _84017 k dom j).
Proof. exact (eq_refl (term1064 A K _84017 k dom j)). Qed.
Lemma lem6557726 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _84017 k dom j) = (term1051 A K _84017 k dom j).
Proof. exact (TRANS (@lem6557724 A K _84017 k dom j) (@lem6557725 A K _84017 k dom j)). Qed.
Lemma lem6557727 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _84017 k dom) = (term1053 A K _84017 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6557726 A K _84017 k dom j)). Qed.
Lemma lem6557728 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6557729 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _84017 k dom) = (term1054 A K _84017 k dom).
Proof. exact (MK_COMB (@lem6557728 A K) (@lem6557727 A K _84017 k dom)). Qed.
Lemma lem6557730 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1067 A K _84017 k) = (term1055 A K _84017 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557729 A K _84017 k dom)). Qed.
Lemma lem6557731 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557732 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1059 A K _84017 k) = (term1056 A K _84017 k).
Proof. exact (MK_COMB (@lem6557731 A) (@lem6557730 A K _84017 k)). Qed.
Lemma lem6557733 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557734 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1068 A K _84017 k) = (term1069 A K _84017 k).
Proof. exact (MK_COMB (@lem6557733) (@lem6557732 A K _84017 k)). Qed.
Lemma lem6557735 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _84017 k dom) = (term1053 A K _84017 k dom).
Proof. exact (eq_refl (term1062 A K _84017 k dom)). Qed.
Lemma lem6557736 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6557737 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _84017 k j dom) = (term1071 A K _84017 k j dom).
Proof. exact (MK_COMB (@lem6557735 A K _84017 k dom) (@lem6557736 A K j dom)). Qed.
Lemma lem6557738 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _84017 k j dom) = (term1072 A K _84017 k j dom).
Proof. exact (eq_refl (term1071 A K _84017 k j dom)). Qed.
Lemma lem6557739 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _84017 k j dom) = (term1072 A K _84017 k j dom).
Proof. exact (TRANS (@lem6557737 A K _84017 k j dom) (@lem6557738 A K _84017 k j dom)). Qed.
Lemma lem6557740 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _84017 k j) = (term1074 A K _84017 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6557739 A K _84017 k j dom)). Qed.
Lemma lem6557741 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6557742 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _84017 k j) = (term1076 A K _84017 k j).
Proof. exact (MK_COMB (@lem6557741 A) (@lem6557740 A K _84017 k j)). Qed.
Lemma lem6557743 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1077 A K _84017 k) = (term1078 A K _84017 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6557742 A K _84017 k j)). Qed.
Lemma lem6557744 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6557745 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1060 A K _84017 k) = (term1079 A K _84017 k).
Proof. exact (MK_COMB (@lem6557744 A K) (@lem6557743 A K _84017 k)). Qed.
Lemma lem6557746 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : ((term1059 A K _84017 k) = (term1060 A K _84017 k)) = ((term1056 A K _84017 k) = (term1079 A K _84017 k)).
Proof. exact (MK_COMB (@lem6557734 A K _84017 k) (@lem6557745 A K _84017 k)). Qed.
Lemma lem6557747 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1056 A K _84017 k) = (term1079 A K _84017 k).
Proof. exact (EQ_MP (@lem6557746 A K _84017 k) (@lem6557721 A K _84017 k)). Qed.
Lemma lem6557748 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term940 A K _84017 k) = (term1079 A K _84017 k).
Proof. exact (TRANS (@lem6557717 A K _84017 k) (@lem6557747 A K _84017 k)). Qed.
Lemma lem6557749 {A K : Type'} (_84017 : type835 A K) : (term947 A K _84017) = (term1080 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557748 A K _84017 k)). Qed.
Lemma lem6557750 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557751 {A K : Type'} (_84017 : type835 A K) : (term962 A K _84017) = (term1081 A K _84017).
Proof. exact (MK_COMB (@lem6557750 K) (@lem6557749 A K _84017)). Qed.
Lemma lem6557753 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6557754 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6557753 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6557755 {A K : Type'} (_84017 : type835 A K) : (term1084 A K _84017) = (term1085 A K _84017).
Proof. exact (@lem6557754 A K (term1086 A K _84017)). Qed.
Lemma lem6557756 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1087 A K _84017 k) = (term1078 A K _84017 k).
Proof. exact (eq_refl (term1087 A K _84017 k)). Qed.
Lemma lem6557757 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6557758 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _84017 k j) = (term1089 A K _84017 k j).
Proof. exact (MK_COMB (@lem6557756 A K _84017 k) (@lem6557757 A K j)). Qed.
Lemma lem6557759 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _84017 k j) = (term1076 A K _84017 k j).
Proof. exact (eq_refl (term1089 A K _84017 k j)). Qed.
Lemma lem6557760 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _84017 k j) = (term1076 A K _84017 k j).
Proof. exact (TRANS (@lem6557758 A K _84017 k j) (@lem6557759 A K _84017 k j)). Qed.
Lemma lem6557761 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1090 A K _84017 k) = (term1078 A K _84017 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6557760 A K _84017 k j)). Qed.
Lemma lem6557762 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6557763 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1091 A K _84017 k) = (term1079 A K _84017 k).
Proof. exact (MK_COMB (@lem6557762 A K) (@lem6557761 A K _84017 k)). Qed.
Lemma lem6557764 {A K : Type'} (_84017 : type835 A K) : (term1092 A K _84017) = (term1080 A K _84017).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557763 A K _84017 k)). Qed.
Lemma lem6557765 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557766 {A K : Type'} (_84017 : type835 A K) : (term1084 A K _84017) = (term1081 A K _84017).
Proof. exact (MK_COMB (@lem6557765 K) (@lem6557764 A K _84017)). Qed.
Lemma lem6557767 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557768 {A K : Type'} (_84017 : type835 A K) : (term1093 A K _84017) = (term1094 A K _84017).
Proof. exact (MK_COMB (@lem6557767) (@lem6557766 A K _84017)). Qed.
Lemma lem6557769 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (term1087 A K _84017 k) = (term1078 A K _84017 k).
Proof. exact (eq_refl (term1087 A K _84017 k)). Qed.
Lemma lem6557770 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6557771 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _84017 j k) = (term1096 A K _84017 j k).
Proof. exact (MK_COMB (@lem6557769 A K _84017 k) (@lem6557770 A K j k)). Qed.
Lemma lem6557772 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _84017 j k) = (term1097 A K _84017 j k).
Proof. exact (eq_refl (term1096 A K _84017 j k)). Qed.
Lemma lem6557773 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _84017 j k) = (term1097 A K _84017 j k).
Proof. exact (TRANS (@lem6557771 A K _84017 j k) (@lem6557772 A K _84017 j k)). Qed.
Lemma lem6557774 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) : (term1098 A K _84017 j) = (term1099 A K _84017 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6557773 A K _84017 j k)). Qed.
Lemma lem6557775 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6557776 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) : (term1100 A K _84017 j) = (term1101 A K _84017 j).
Proof. exact (MK_COMB (@lem6557775 K) (@lem6557774 A K _84017 j)). Qed.
Lemma lem6557777 {A K : Type'} (_84017 : type835 A K) : (term1102 A K _84017) = (term1103 A K _84017).
Proof. exact (fun_ext (fun j : type834 A K => @lem6557776 A K _84017 j)). Qed.
Lemma lem6557778 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6557779 {A K : Type'} (_84017 : type835 A K) : (term1085 A K _84017) = (term1104 A K _84017).
Proof. exact (MK_COMB (@lem6557778 A K) (@lem6557777 A K _84017)). Qed.
Lemma lem6557780 {A K : Type'} (_84017 : type835 A K) : ((term1084 A K _84017) = (term1085 A K _84017)) = ((term1081 A K _84017) = (term1104 A K _84017)).
Proof. exact (MK_COMB (@lem6557768 A K _84017) (@lem6557779 A K _84017)). Qed.
Lemma lem6557781 {A K : Type'} (_84017 : type835 A K) : (term1081 A K _84017) = (term1104 A K _84017).
Proof. exact (EQ_MP (@lem6557780 A K _84017) (@lem6557755 A K _84017)). Qed.
Lemma lem6557782 {A K : Type'} (_84017 : type835 A K) : (term962 A K _84017) = (term1104 A K _84017).
Proof. exact (TRANS (@lem6557751 A K _84017) (@lem6557781 A K _84017)). Qed.
Lemma lem6557783 {A K : Type'} (_84017 : type835 A K) : (term959 A K _84017) = (term959 A K _84017).
Proof. exact (eq_refl (term959 A K _84017)). Qed.
Lemma lem6557784 {A K : Type'} (_84017 : type835 A K) : (term963 A K _84017) = (term1105 A K _84017).
Proof. exact (MK_COMB (@lem6557783 A K _84017) (@lem6557782 A K _84017)). Qed.
Lemma lem6557786 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6557787 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6557786 (type834 A K) P Q). Qed.
Lemma lem6557788 {A K : Type'} (_84017 : type835 A K) : (term1110 A K _84017) = (term1111 A K _84017).
Proof. exact (@lem6557787 A K (term957 A K _84017) (term1103 A K _84017)). Qed.
Lemma lem6557789 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) : (term1112 A K _84017 j) = (term1101 A K _84017 j).
Proof. exact (eq_refl (term1112 A K _84017 j)). Qed.
Lemma lem6557790 {A K : Type'} (_84017 : type835 A K) : (term1113 A K _84017) = (term1103 A K _84017).
Proof. exact (fun_ext (fun j : type834 A K => @lem6557789 A K _84017 j)). Qed.
Lemma lem6557791 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6557792 {A K : Type'} (_84017 : type835 A K) : (term1114 A K _84017) = (term1104 A K _84017).
Proof. exact (MK_COMB (@lem6557791 A K) (@lem6557790 A K _84017)). Qed.
Lemma lem6557793 {A K : Type'} (_84017 : type835 A K) : (term959 A K _84017) = (term959 A K _84017).
Proof. exact (eq_refl (term959 A K _84017)). Qed.
Lemma lem6557794 {A K : Type'} (_84017 : type835 A K) : (term1110 A K _84017) = (term1105 A K _84017).
Proof. exact (MK_COMB (@lem6557793 A K _84017) (@lem6557792 A K _84017)). Qed.
Lemma lem6557795 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6557796 {A K : Type'} (_84017 : type835 A K) : (term1115 A K _84017) = (term1116 A K _84017).
Proof. exact (MK_COMB (@lem6557795) (@lem6557794 A K _84017)). Qed.
Lemma lem6557797 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) : (term1112 A K _84017 j) = (term1101 A K _84017 j).
Proof. exact (eq_refl (term1112 A K _84017 j)). Qed.
Lemma lem6557798 {A K : Type'} (_84017 : type835 A K) : (term959 A K _84017) = (term959 A K _84017).
Proof. exact (eq_refl (term959 A K _84017)). Qed.
Lemma lem6557799 {A K : Type'} (_84017 : type835 A K) (j : type834 A K) : (term1117 A K _84017 j) = (term1118 A K _84017 j).
Proof. exact (MK_COMB (@lem6557798 A K _84017) (@lem6557797 A K _84017 j)). Qed.
Lemma lem6557800 {A K : Type'} (_84017 : type835 A K) : (term1119 A K _84017) = (term1120 A K _84017).
Proof. exact (fun_ext (fun j : type834 A K => @lem6557799 A K _84017 j)). Qed.
Lemma lem6557801 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6557802 {A K : Type'} (_84017 : type835 A K) : (term1111 A K _84017) = (term1121 A K _84017).
Proof. exact (MK_COMB (@lem6557801 A K) (@lem6557800 A K _84017)). Qed.
Lemma lem6557803 {A K : Type'} (_84017 : type835 A K) : ((term1110 A K _84017) = (term1111 A K _84017)) = ((term1105 A K _84017) = (term1121 A K _84017)).
Proof. exact (MK_COMB (@lem6557796 A K _84017) (@lem6557802 A K _84017)). Qed.
Lemma lem6557804 {A K : Type'} (_84017 : type835 A K) : (term1105 A K _84017) = (term1121 A K _84017).
Proof. exact (EQ_MP (@lem6557803 A K _84017) (@lem6557788 A K _84017)). Qed.
Lemma lem6557805 {A K : Type'} (_84017 : type835 A K) : (term963 A K _84017) = (term1121 A K _84017).
Proof. exact (TRANS (@lem6557784 A K _84017) (@lem6557804 A K _84017)). Qed.
Lemma lem6557806 {A K : Type'} (_84017 : type835 A K) : (term849 A K _84017) = (term1121 A K _84017).
Proof. exact (TRANS (@lem6557592 A K _84017) (@lem6557805 A K _84017)). Qed.
Lemma lem6557807 {A K : Type'} (_84017 : type835 A K) : (term815 A K _84017) = (term1121 A K _84017).
Proof. exact (TRANS (@lem6556825 A K _84017) (@lem6557806 A K _84017)). Qed.
Lemma lem6557808 {A K : Type'} (_84017 : type835 A K) (h1 : term815 A K _84017) : term1121 A K _84017.
Proof. exact (EQ_MP (@lem6557807 A K _84017) (@lem6556776 A K _84017 h1)). Qed.
Lemma lem6557812 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1122 A K f i neut) = ((f i) = neut).
Proof. exact (@lem16933 ((f i) = neut)). Qed.
Lemma lem6557814 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1123 A K dom f i).
Proof. exact (eq_refl (term1123 A K dom f i)). Qed.
Lemma lem6557815 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1124 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (MK_COMB (@lem6557814 A K dom f i) (@lem6557812 A K f i neut)). Qed.
Lemma lem6557816 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1124 A K dom f i neut).
Proof. exact (@lem17045 (term591 A K dom f i) (term572 A K f i neut)). Qed.
Lemma lem6557817 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (TRANS (@lem6557816 A K dom f i neut) (@lem6557815 A K dom f i neut)). Qed.
Lemma lem6557824 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6557826 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6557827 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6557826 A K dom f j) (@lem6557824 A K f j neut)). Qed.
Lemma lem6557828 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6557829 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6557828 A K dom f j neut) (@lem6557827 A K dom f j neut)). Qed.
Lemma lem6557831 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6557832 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6557831 K k j) (@lem6557829 A K dom f j neut)). Qed.
Lemma lem6557833 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6557834 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6557833 A K k dom f j neut) (@lem6557832 A K k dom f j neut)). Qed.
Lemma lem6557836 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6557837 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6557836 K ltle j i) (@lem6557834 A K k dom f j neut)). Qed.
Lemma lem6557838 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6557839 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6557838 A K ltle i k dom f j neut) (@lem6557837 A K ltle i k dom f j neut)). Qed.
Lemma lem6557840 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6557841 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6557842 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6557841) (@lem6557839 A K ltle i k dom f j neut)). Qed.
Lemma lem6557843 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6557842 A K ltle i k dom f j neut) (@lem6557840 K j i)). Qed.
Lemma lem6557844 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6557845 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6557844 A K ltle k dom f neut j i) (@lem6557843 A K ltle k dom f neut j i)). Qed.
Lemma lem6557846 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6557845 A K ltle k dom f neut j i)). Qed.
Lemma lem6557847 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6557848 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6557847 K) (@lem6557846 A K ltle k dom f neut i)). Qed.
Lemma lem6557863 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6557864 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6557863 K k ltle j i)). Qed.
Lemma lem6557865 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6557866 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6557865 K) (@lem6557864 K k ltle i)). Qed.
Lemma lem6557867 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _84017 k dom f neut) = (term719 A K _84017 k dom f neut).
Proof. exact (eq_refl (term719 A K _84017 k dom f neut)). Qed.
Lemma lem6557868 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557869 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6557868) (@lem6557866 K k ltle i)). Qed.
Lemma lem6557870 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _84017 k dom f neut) = (term1143 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557869 K k ltle i) (@lem6557867 A K _84017 k dom f neut)). Qed.
Lemma lem6557871 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557872 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6557871) (@lem6557848 A K ltle k dom f neut i)). Qed.
Lemma lem6557873 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _84017 k dom f neut) = (term1145 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557872 A K ltle k dom f neut i) (@lem6557870 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6557875 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6557876 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _84017 k dom f neut) = (term1146 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557875 K k i) (@lem6557873 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6557877 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6557878 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term598 A K dom f i neut) = (term1147 A K dom f i neut).
Proof. exact (MK_COMB (@lem6557877) (@lem6557817 A K dom f i neut)). Qed.
Lemma lem6557979 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term723 A K ltle i _84017 k dom f neut) = (term1148 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6557878 A K dom f i neut) (@lem6557876 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6557980 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term723 A K ltle i _84017 k dom f neut) : term1148 A K ltle i _84017 k dom f neut.
Proof. exact (EQ_MP (@lem6557979 A K ltle i _84017 k dom f neut) (@lem6556777 A K ltle i _84017 k dom f neut h1)). Qed.
Lemma lem6557989 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term67 K i k x) = (term68 K i k x).
Proof. exact (@lem17160 (x = i) (k x)). Qed.
Lemma lem6557998 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1122 A K f x neut) = ((f x) = neut).
Proof. exact (@lem16933 ((f x) = neut)). Qed.
Lemma lem6558000 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1123 A K dom f x).
Proof. exact (eq_refl (term1123 A K dom f x)). Qed.
Lemma lem6558001 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1124 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558000 A K dom f x) (@lem6557998 A K f x neut)). Qed.
Lemma lem6558002 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1124 A K dom f x neut).
Proof. exact (@lem17045 (term591 A K dom f x) (term572 A K f x neut)). Qed.
Lemma lem6558003 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (TRANS (@lem6558002 A K dom f x neut) (@lem6558001 A K dom f x neut)). Qed.
Lemma lem6558007 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558008 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term70 K i k x) = (term71 K i k x).
Proof. exact (MK_COMB (@lem6558007) (@lem6557989 K i k x)). Qed.
Lemma lem6558009 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1149 A K i k dom f x neut) = (term1150 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558008 K i k x) (@lem6558003 A K dom f x neut)). Qed.
Lemma lem6558010 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1149 A K i k dom f x neut).
Proof. exact (@lem17045 (term39 K i k x) (term595 A K dom f x neut)). Qed.
Lemma lem6558011 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1150 A K i k dom f x neut).
Proof. exact (TRANS (@lem6558010 A K i k dom f x neut) (@lem6558009 A K i k dom f x neut)). Qed.
Lemma lem6558022 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1122 A K f x neut) = ((f x) = neut).
Proof. exact (@lem16933 ((f x) = neut)). Qed.
Lemma lem6558024 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1123 A K dom f x).
Proof. exact (eq_refl (term1123 A K dom f x)). Qed.
Lemma lem6558025 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1124 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558024 A K dom f x) (@lem6558022 A K f x neut)). Qed.
Lemma lem6558026 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1124 A K dom f x neut).
Proof. exact (@lem17045 (term591 A K dom f x) (term572 A K f x neut)). Qed.
Lemma lem6558027 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (TRANS (@lem6558026 A K dom f x neut) (@lem6558025 A K dom f x neut)). Qed.
Lemma lem6558032 {K : Type'} (k : K -> Prop) (x : K) : (term360 K k x) = (term360 K k x).
Proof. exact (eq_refl (term360 K k x)). Qed.
Lemma lem6558033 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1126 A K k dom f x neut) = (term1127 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6558032 K k x) (@lem6558027 A K dom f x neut)). Qed.
Lemma lem6558034 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1128 A K k dom f x neut) = (term1126 A K k dom f x neut).
Proof. exact (@lem17045 (k x) (term595 A K dom f x neut)). Qed.
Lemma lem6558035 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1128 A K k dom f x neut) = (term1127 A K k dom f x neut).
Proof. exact (TRANS (@lem6558034 A K k dom f x neut) (@lem6558033 A K k dom f x neut)). Qed.
Lemma lem6558038 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term602 A K k dom f x neut) = (term602 A K k dom f x neut).
Proof. exact (eq_refl (term602 A K k dom f x neut)). Qed.
Lemma lem6558039 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558040 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1152 A K i k dom f x neut) = (term1153 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558039) (@lem6558011 A K i k dom f x neut)). Qed.
Lemma lem6558041 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1154 A K i k dom f x neut) = (term1155 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558040 A K i k dom f x neut) (@lem6558038 A K k dom f x neut)). Qed.
Lemma lem6558043 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1156 A K i k dom f x neut) = (term1156 A K i k dom f x neut).
Proof. exact (eq_refl (term1156 A K i k dom f x neut)). Qed.
Lemma lem6558044 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1157 A K i k dom f x neut) = (term1158 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558043 A K i k dom f x neut) (@lem6558035 A K k dom f x neut)). Qed.
Lemma lem6558045 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558046 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1159 A K i k dom f x neut) = (term1160 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558045) (@lem6558044 A K i k dom f x neut)). Qed.
Lemma lem6558047 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1161 A K i k dom f x neut) = (term1162 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558046 A K i k dom f x neut) (@lem6558041 A K i k dom f x neut)). Qed.
Lemma lem6558048 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term821 A K i k dom f x neut) = (term1161 A K i k dom f x neut).
Proof. exact (@lem17646 (term658 A K i k dom f x neut) (term602 A K k dom f x neut)). Qed.
Lemma lem6558053 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term821 A K i k dom f x neut) = (term1162 A K i k dom f x neut).
Proof. exact (TRANS (@lem6558048 A K i k dom f x neut) (@lem6558047 A K i k dom f x neut)). Qed.
Lemma lem6558054 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term821 A K i k dom f x neut) : term1162 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6558053 A K i k dom f x neut) (@lem6556782 A K i k dom f x neut h1)). Qed.
Lemma lem6558056 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6558057 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6558068 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558069 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6558068 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6558070 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) : (_84017 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017 k).
Proof. exact (@lem6558069 A K _84017 k). Qed.
Lemma lem6558071 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558072 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_84017 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017 k dom).
Proof. exact (MK_COMB (@lem6558070 A K _84017 k) (@lem6558071 A dom)). Qed.
Lemma lem6558074 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558075 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6558074 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6558076 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017 k dom) = (term1163 A K _84017 k dom).
Proof. exact (@lem6558075 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _84017 k) dom). Qed.
Lemma lem6558077 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_84017 k dom) = (term1163 A K _84017 k dom).
Proof. exact (TRANS (@lem6558072 A K _84017 k dom) (@lem6558076 A K _84017 k dom)). Qed.
Lemma lem6558078 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6558079 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_84017 k dom f) = (term1164 A K _84017 k dom f).
Proof. exact (MK_COMB (@lem6558077 A K _84017 k dom) (@lem6558078 A K f)). Qed.
Lemma lem6558081 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558082 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6558081 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6558083 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _84017 k dom f) = (term1165 A K _84017 k dom f).
Proof. exact (@lem6558082 A K (term1163 A K _84017 k dom) f). Qed.
Lemma lem6558084 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_84017 k dom f) = (term1165 A K _84017 k dom f).
Proof. exact (TRANS (@lem6558079 A K _84017 k dom f) (@lem6558083 A K _84017 k dom f)). Qed.
Lemma lem6558085 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558086 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_84017 k dom f neut) = (term1166 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558084 A K _84017 k dom f) (@lem6558085 A neut)). Qed.
Lemma lem6558088 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558089 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6558088 A (K -> Prop) f x). Qed.
Lemma lem6558090 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _84017 k dom f neut) = (term1167 A K _84017 k dom f neut).
Proof. exact (@lem6558089 A K (term1165 A K _84017 k dom f) neut). Qed.
Lemma lem6558092 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_84017 k dom f neut) = (term1167 A K _84017 k dom f neut).
Proof. exact (TRANS (@lem6558086 A K _84017 k dom f neut) (@lem6558090 A K _84017 k dom f neut)). Qed.
Lemma lem6558093 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _84017 k dom f neut) = (term1168 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558057 K) (@lem6558092 A K _84017 k dom f neut)). Qed.
Lemma lem6558095 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558096 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6558095 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6558097 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _84017 k dom f neut) = (term1169 A K _84017 k dom f neut).
Proof. exact (@lem6558096 K (@GSPEC K) (term1167 A K _84017 k dom f neut)). Qed.
Lemma lem6558098 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _84017 k dom f neut) = (term1169 A K _84017 k dom f neut).
Proof. exact (TRANS (@lem6558093 A K _84017 k dom f neut) (@lem6558097 A K _84017 k dom f neut)). Qed.
Lemma lem6558099 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _84017 k dom f neut) = (term1170 A K _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558056 K) (@lem6558098 A K _84017 k dom f neut)). Qed.
Lemma lem6558101 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558102 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6558101 (K -> Prop) Prop f x). Qed.
Lemma lem6558103 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _84017 k dom f neut) = (term1171 A K _84017 k dom f neut).
Proof. exact (@lem6558102 K (@FINITE K) (term1169 A K _84017 k dom f neut)). Qed.
Lemma lem6558104 {A K : Type'} (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _84017 k dom f neut) = (term1171 A K _84017 k dom f neut).
Proof. exact (TRANS (@lem6558099 A K _84017 k dom f neut) (@lem6558103 A K _84017 k dom f neut)). Qed.
Lemma lem6558111 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558112 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6558111 K (K -> Prop) f x). Qed.
Lemma lem6558113 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6558112 K ltle j). Qed.
Lemma lem6558114 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6558115 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6558113 K ltle j) (@lem6558114 K i)). Qed.
Lemma lem6558117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558118 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558117 K Prop f x). Qed.
Lemma lem6558119 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6558118 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6558121 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6558115 K ltle j i) (@lem6558119 K ltle j i)). Qed.
Lemma lem6558128 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558129 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6558128 K (K -> Prop) f x). Qed.
Lemma lem6558130 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6558129 K ltle i). Qed.
Lemma lem6558131 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6558132 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6558130 K ltle i) (@lem6558131 K j)). Qed.
Lemma lem6558134 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558135 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558134 K Prop f x). Qed.
Lemma lem6558136 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6558135 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6558138 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6558132 K ltle i j) (@lem6558136 K ltle i j)). Qed.
Lemma lem6558139 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558140 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6558139) (@lem6558138 K ltle i j)). Qed.
Lemma lem6558141 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6558140 K ltle i j) (@lem6558121 K ltle j i)). Qed.
Lemma lem6558148 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6558149 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6558148 K i j) (@lem6558141 K ltle j i)). Qed.
Lemma lem6558150 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558155 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558156 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558155 K Prop f x). Qed.
Lemma lem6558158 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6558156 K k j). Qed.
Lemma lem6558159 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6558150) (@lem6558158 K k j)). Qed.
Lemma lem6558160 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558161 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6558160) (@lem6558159 K k j)). Qed.
Lemma lem6558162 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6558161 K k j) (@lem6558149 K ltle j i)). Qed.
Lemma lem6558163 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6558162 K k ltle j i)). Qed.
Lemma lem6558164 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6558165 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6558164 K) (@lem6558163 K k ltle i)). Qed.
Lemma lem6558166 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558167 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6558166) (@lem6558165 K k ltle i)). Qed.
Lemma lem6558168 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _84017 k dom f neut) = (term1184 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558167 K k ltle i) (@lem6558104 A K _84017 k dom f neut)). Qed.
Lemma lem6558173 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6558174 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558179 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558180 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558179 K A f x). Qed.
Lemma lem6558182 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6558180 A K f j). Qed.
Lemma lem6558183 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558184 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6558174 A) (@lem6558182 A K f j)). Qed.
Lemma lem6558185 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6558184 A K f j) (@lem6558183 A neut)). Qed.
Lemma lem6558186 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558187 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558192 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558193 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558192 K A f x). Qed.
Lemma lem6558195 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6558193 A K f j). Qed.
Lemma lem6558196 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6558187 A dom) (@lem6558195 A K f j)). Qed.
Lemma lem6558198 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558199 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558198 A Prop f x). Qed.
Lemma lem6558200 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6558199 A dom (@I (K -> A) f j)). Qed.
Lemma lem6558201 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6558196 A K dom f j) (@lem6558200 A K dom f j)). Qed.
Lemma lem6558202 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6558186) (@lem6558201 A K dom f j)). Qed.
Lemma lem6558203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558204 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6558203) (@lem6558202 A K dom f j)). Qed.
Lemma lem6558205 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6558204 A K dom f j) (@lem6558185 A K f j neut)). Qed.
Lemma lem6558206 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558211 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558212 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558211 K Prop f x). Qed.
Lemma lem6558214 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6558212 K k j). Qed.
Lemma lem6558215 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6558206) (@lem6558214 K k j)). Qed.
Lemma lem6558216 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558217 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6558216) (@lem6558215 K k j)). Qed.
Lemma lem6558218 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6558217 K k j) (@lem6558205 A K dom f j neut)). Qed.
Lemma lem6558219 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558226 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558227 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6558226 K (K -> Prop) f x). Qed.
Lemma lem6558228 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6558227 K ltle j). Qed.
Lemma lem6558229 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6558230 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6558228 K ltle j) (@lem6558229 K i)). Qed.
Lemma lem6558232 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558233 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558232 K Prop f x). Qed.
Lemma lem6558234 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6558233 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6558236 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6558230 K ltle j i) (@lem6558234 K ltle j i)). Qed.
Lemma lem6558237 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6558219) (@lem6558236 K ltle j i)). Qed.
Lemma lem6558238 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558239 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6558238) (@lem6558237 K ltle j i)). Qed.
Lemma lem6558240 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6558239 K ltle j i) (@lem6558218 A K k dom f j neut)). Qed.
Lemma lem6558241 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558242 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6558241) (@lem6558240 A K ltle i k dom f j neut)). Qed.
Lemma lem6558243 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6558242 A K ltle i k dom f j neut) (@lem6558173 K j i)). Qed.
Lemma lem6558244 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6558243 A K ltle k dom f neut j i)). Qed.
Lemma lem6558245 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6558246 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6558245 K) (@lem6558244 A K ltle k dom f neut i)). Qed.
Lemma lem6558247 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558248 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6558247) (@lem6558246 A K ltle k dom f neut i)). Qed.
Lemma lem6558249 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _84017 k dom f neut) = (term1203 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558248 A K ltle k dom f neut i) (@lem6558168 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6558250 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558255 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558256 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558255 K Prop f x). Qed.
Lemma lem6558258 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6558256 K k i). Qed.
Lemma lem6558259 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6558250) (@lem6558258 K k i)). Qed.
Lemma lem6558260 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558261 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6558260) (@lem6558259 K k i)). Qed.
Lemma lem6558262 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _84017 k dom f neut) = (term1205 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558261 K k i) (@lem6558249 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6558263 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558268 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558269 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558268 K A f x). Qed.
Lemma lem6558271 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6558269 A K f i). Qed.
Lemma lem6558272 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558273 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6558263 A) (@lem6558271 A K f i)). Qed.
Lemma lem6558274 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6558273 A K f i) (@lem6558272 A neut)). Qed.
Lemma lem6558275 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558276 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558281 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558282 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558281 K A f x). Qed.
Lemma lem6558284 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6558282 A K f i). Qed.
Lemma lem6558285 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6558276 A dom) (@lem6558284 A K f i)). Qed.
Lemma lem6558287 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558288 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558287 A Prop f x). Qed.
Lemma lem6558289 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6558288 A dom (@I (K -> A) f i)). Qed.
Lemma lem6558290 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6558285 A K dom f i) (@lem6558289 A K dom f i)). Qed.
Lemma lem6558291 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1189 A K dom f i) = (term1190 A K dom f i).
Proof. exact (MK_COMB (@lem6558275) (@lem6558290 A K dom f i)). Qed.
Lemma lem6558292 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558293 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1191 A K dom f i).
Proof. exact (MK_COMB (@lem6558292) (@lem6558291 A K dom f i)). Qed.
Lemma lem6558294 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1125 A K dom f i neut) = (term1192 A K dom f i neut).
Proof. exact (MK_COMB (@lem6558293 A K dom f i) (@lem6558274 A K f i neut)). Qed.
Lemma lem6558295 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558296 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1147 A K dom f i neut) = (term1206 A K dom f i neut).
Proof. exact (MK_COMB (@lem6558295) (@lem6558294 A K dom f i neut)). Qed.
Lemma lem6558297 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1148 A K ltle i _84017 k dom f neut) = (term1207 A K ltle i _84017 k dom f neut).
Proof. exact (MK_COMB (@lem6558296 A K dom f i neut) (@lem6558262 A K ltle i _84017 k dom f neut)). Qed.
Lemma lem6558298 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term723 A K ltle i _84017 k dom f neut) : term1207 A K ltle i _84017 k dom f neut.
Proof. exact (EQ_MP (@lem6558297 A K ltle i _84017 k dom f neut) (@lem6557980 A K ltle i _84017 k dom f neut h1)). Qed.
Lemma lem6558299 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558300 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558305 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558307 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558305 K A f x). Qed.
Lemma lem6558308 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558309 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6558300 A) (@lem6558307 A K f x)). Qed.
Lemma lem6558310 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6558309 A K f x) (@lem6558308 A neut)). Qed.
Lemma lem6558311 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term572 A K f x neut) = (term1208 A K f x neut).
Proof. exact (MK_COMB (@lem6558299) (@lem6558310 A K f x neut)). Qed.
Lemma lem6558312 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558317 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558319 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558317 K A f x). Qed.
Lemma lem6558320 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6558312 A dom) (@lem6558319 A K f x)). Qed.
Lemma lem6558322 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558323 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558322 A Prop f x). Qed.
Lemma lem6558324 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6558323 A dom (@I (K -> A) f x)). Qed.
Lemma lem6558325 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6558320 A K dom f x) (@lem6558324 A K dom f x)). Qed.
Lemma lem6558326 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558327 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term592 A K dom f x) = (term1209 A K dom f x).
Proof. exact (MK_COMB (@lem6558326) (@lem6558325 A K dom f x)). Qed.
Lemma lem6558328 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term595 A K dom f x neut) = (term1210 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558327 A K dom f x) (@lem6558311 A K f x neut)). Qed.
Lemma lem6558333 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558334 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558333 K Prop f x). Qed.
Lemma lem6558336 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6558334 K k x). Qed.
Lemma lem6558337 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558338 {K : Type'} (k : K -> Prop) (x : K) : (term333 K k x) = (term1211 K k x).
Proof. exact (MK_COMB (@lem6558337) (@lem6558336 K k x)). Qed.
Lemma lem6558339 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term602 A K k dom f x neut) = (term1212 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6558338 K k x) (@lem6558328 A K dom f x neut)). Qed.
Lemma lem6558340 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558345 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558347 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558345 K A f x). Qed.
Lemma lem6558348 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558349 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6558340 A) (@lem6558347 A K f x)). Qed.
Lemma lem6558350 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6558349 A K f x) (@lem6558348 A neut)). Qed.
Lemma lem6558351 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558352 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558357 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558359 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558357 K A f x). Qed.
Lemma lem6558360 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6558352 A dom) (@lem6558359 A K f x)). Qed.
Lemma lem6558362 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558363 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558362 A Prop f x). Qed.
Lemma lem6558364 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6558363 A dom (@I (K -> A) f x)). Qed.
Lemma lem6558365 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6558360 A K dom f x) (@lem6558364 A K dom f x)). Qed.
Lemma lem6558366 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1189 A K dom f x) = (term1190 A K dom f x).
Proof. exact (MK_COMB (@lem6558351) (@lem6558365 A K dom f x)). Qed.
Lemma lem6558367 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558368 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1191 A K dom f x).
Proof. exact (MK_COMB (@lem6558367) (@lem6558366 A K dom f x)). Qed.
Lemma lem6558369 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1125 A K dom f x neut) = (term1192 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558368 A K dom f x) (@lem6558350 A K f x neut)). Qed.
Lemma lem6558370 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558375 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558376 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558375 K Prop f x). Qed.
Lemma lem6558378 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6558376 K k x). Qed.
Lemma lem6558379 {K : Type'} (k : K -> Prop) (x : K) : (term30 K k x) = (term1178 K k x).
Proof. exact (MK_COMB (@lem6558370) (@lem6558378 K k x)). Qed.
Lemma lem6558388 {K : Type'} (x : K) (i : K) : (term1213 K x i) = (term1213 K x i).
Proof. exact (eq_refl (term1213 K x i)). Qed.
Lemma lem6558389 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term68 K i k x) = (term1214 K i k x).
Proof. exact (MK_COMB (@lem6558388 K x i) (@lem6558379 K k x)). Qed.
Lemma lem6558390 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558391 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term71 K i k x) = (term1215 K i k x).
Proof. exact (MK_COMB (@lem6558390) (@lem6558389 K i k x)). Qed.
Lemma lem6558392 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1150 A K i k dom f x neut) = (term1216 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558391 K i k x) (@lem6558369 A K dom f x neut)). Qed.
Lemma lem6558393 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558394 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1153 A K i k dom f x neut) = (term1217 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558393) (@lem6558392 A K i k dom f x neut)). Qed.
Lemma lem6558395 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1155 A K i k dom f x neut) = (term1218 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558394 A K i k dom f x neut) (@lem6558339 A K k dom f x neut)). Qed.
Lemma lem6558396 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558401 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558403 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558401 K A f x). Qed.
Lemma lem6558404 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558405 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6558396 A) (@lem6558403 A K f x)). Qed.
Lemma lem6558406 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6558405 A K f x) (@lem6558404 A neut)). Qed.
Lemma lem6558407 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558408 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558413 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558415 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558413 K A f x). Qed.
Lemma lem6558416 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6558408 A dom) (@lem6558415 A K f x)). Qed.
Lemma lem6558418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558419 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558418 A Prop f x). Qed.
Lemma lem6558420 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6558419 A dom (@I (K -> A) f x)). Qed.
Lemma lem6558421 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6558416 A K dom f x) (@lem6558420 A K dom f x)). Qed.
Lemma lem6558422 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1189 A K dom f x) = (term1190 A K dom f x).
Proof. exact (MK_COMB (@lem6558407) (@lem6558421 A K dom f x)). Qed.
Lemma lem6558423 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558424 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1191 A K dom f x).
Proof. exact (MK_COMB (@lem6558423) (@lem6558422 A K dom f x)). Qed.
Lemma lem6558425 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1125 A K dom f x neut) = (term1192 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558424 A K dom f x) (@lem6558406 A K f x neut)). Qed.
Lemma lem6558426 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558431 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558432 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558431 K Prop f x). Qed.
Lemma lem6558434 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6558432 K k x). Qed.
Lemma lem6558435 {K : Type'} (k : K -> Prop) (x : K) : (term30 K k x) = (term1178 K k x).
Proof. exact (MK_COMB (@lem6558426) (@lem6558434 K k x)). Qed.
Lemma lem6558436 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558437 {K : Type'} (k : K -> Prop) (x : K) : (term360 K k x) = (term1179 K k x).
Proof. exact (MK_COMB (@lem6558436) (@lem6558435 K k x)). Qed.
Lemma lem6558438 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1127 A K k dom f x neut) = (term1193 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6558437 K k x) (@lem6558425 A K dom f x neut)). Qed.
Lemma lem6558439 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6558440 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6558445 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558447 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558445 K A f x). Qed.
Lemma lem6558448 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6558449 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6558440 A) (@lem6558447 A K f x)). Qed.
Lemma lem6558450 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6558449 A K f x) (@lem6558448 A neut)). Qed.
Lemma lem6558451 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term572 A K f x neut) = (term1208 A K f x neut).
Proof. exact (MK_COMB (@lem6558439) (@lem6558450 A K f x neut)). Qed.
Lemma lem6558452 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6558457 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558459 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6558457 K A f x). Qed.
Lemma lem6558460 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6558452 A dom) (@lem6558459 A K f x)). Qed.
Lemma lem6558462 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558463 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6558462 A Prop f x). Qed.
Lemma lem6558464 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6558463 A dom (@I (K -> A) f x)). Qed.
Lemma lem6558465 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6558460 A K dom f x) (@lem6558464 A K dom f x)). Qed.
Lemma lem6558466 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558467 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term592 A K dom f x) = (term1209 A K dom f x).
Proof. exact (MK_COMB (@lem6558466) (@lem6558465 A K dom f x)). Qed.
Lemma lem6558468 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term595 A K dom f x neut) = (term1210 A K dom f x neut).
Proof. exact (MK_COMB (@lem6558467 A K dom f x) (@lem6558451 A K f x neut)). Qed.
Lemma lem6558473 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6558474 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6558473 K Prop f x). Qed.
Lemma lem6558476 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6558474 K k x). Qed.
Lemma lem6558483 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6558484 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term39 K i k x) = (term1219 K i k x).
Proof. exact (MK_COMB (@lem6558483 K x i) (@lem6558476 K k x)). Qed.
Lemma lem6558485 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558486 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term41 K i k x) = (term1220 K i k x).
Proof. exact (MK_COMB (@lem6558485) (@lem6558484 K i k x)). Qed.
Lemma lem6558487 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term658 A K i k dom f x neut) = (term1221 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558486 K i k x) (@lem6558468 A K dom f x neut)). Qed.
Lemma lem6558488 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6558489 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1156 A K i k dom f x neut) = (term1222 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558488) (@lem6558487 A K i k dom f x neut)). Qed.
Lemma lem6558490 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1158 A K i k dom f x neut) = (term1223 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558489 A K i k dom f x neut) (@lem6558438 A K k dom f x neut)). Qed.
Lemma lem6558491 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6558492 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1160 A K i k dom f x neut) = (term1224 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558491) (@lem6558490 A K i k dom f x neut)). Qed.
Lemma lem6558493 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1162 A K i k dom f x neut) = (term1225 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6558492 A K i k dom f x neut) (@lem6558395 A K i k dom f x neut)). Qed.
Lemma lem6558494 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term821 A K i k dom f x neut) : term1225 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6558493 A K i k dom f x neut) (@lem6558054 A K i k dom f x neut h1)). Qed.
Lemma lem6558941 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term723 A K ltle i _84017 k dom f neut) : term1192 A K dom f i neut.
Proof. exact (proj1 (@lem6558298 A K ltle i _84017 k dom f neut h1)). Qed.
Lemma lem6558950 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1223 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558951 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1218 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558952 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1193 A K k dom f x neut.
Proof. exact (proj2 (@lem6558950 A K i k dom f x neut h1)). Qed.
Lemma lem6558953 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1221 A K i k dom f x neut.
Proof. exact (proj1 (@lem6558950 A K i k dom f x neut h1)). Qed.
Lemma lem6558954 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1210 A K dom f x neut.
Proof. exact (proj2 (@lem6558953 A K i k dom f x neut h1)). Qed.
Lemma lem6558955 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1219 K i k x.
Proof. exact (proj1 (@lem6558953 A K i k dom f x neut h1)). Qed.
Lemma lem6558961 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558965 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558968 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1212 A K k dom f x neut.
Proof. exact (proj2 (@lem6558951 A K i k dom f x neut h1)). Qed.
Lemma lem6558969 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1216 A K i k dom f x neut.
Proof. exact (proj1 (@lem6558951 A K i k dom f x neut h1)). Qed.
Lemma lem6558970 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1210 A K dom f x neut.
Proof. exact (proj2 (@lem6558968 A K i k dom f x neut h1)). Qed.
Lemma lem6558974 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1214 K i k x.
Proof. exact (h1). Qed.
Lemma lem6558975 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558980 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1223 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558981 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1218 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558982 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1193 A K k dom f x neut.
Proof. exact (proj2 (@lem6558980 A K i k dom f x neut h1)). Qed.
Lemma lem6558983 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1221 A K i k dom f x neut.
Proof. exact (proj1 (@lem6558980 A K i k dom f x neut h1)). Qed.
Lemma lem6558984 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1210 A K dom f x neut.
Proof. exact (proj2 (@lem6558983 A K i k dom f x neut h1)). Qed.
Lemma lem6558985 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1219 K i k x.
Proof. exact (proj1 (@lem6558983 A K i k dom f x neut h1)). Qed.
Lemma lem6558991 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558995 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6558998 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1212 A K k dom f x neut.
Proof. exact (proj2 (@lem6558981 A K i k dom f x neut h1)). Qed.
Lemma lem6558999 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1216 A K i k dom f x neut.
Proof. exact (proj1 (@lem6558981 A K i k dom f x neut h1)). Qed.
Lemma lem6559000 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1210 A K dom f x neut.
Proof. exact (proj2 (@lem6558998 A K i k dom f x neut h1)). Qed.
Lemma lem6559004 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1214 K i k x.
Proof. exact (h1). Qed.
Lemma lem6559005 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6559164 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6559176 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6559347 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6559351 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6559518 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6559522 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6559689 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6559693 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6559864 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6560035 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6560381 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6560552 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6560707 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6560719 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6560890 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6560894 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6561061 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6561065 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6561232 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6561236 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6561407 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6561578 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6561924 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6562095 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6562853 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6562855 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558954 A K i k dom f x neut h1)). Qed.
Lemma lem6562859 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6562919 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558954 A K i k dom f x neut h1)). Qed.
Lemma lem6562923 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6562925 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6562985 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558954 A K i k dom f x neut h1)). Qed.
Lemma lem6562987 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6562989 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6563051 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6563053 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6563117 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6563177 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558954 A K i k dom f x neut h1)). Qed.
Lemma lem6563181 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6563247 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1178 K k x.
Proof. exact (proj2 (@lem6558974 K i k x h1)). Qed.
Lemma lem6563311 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6563373 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558970 A K i k dom f x neut h1)). Qed.
Lemma lem6563375 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6563431 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6563435 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558984 A K i k dom f x neut h1)). Qed.
Lemma lem6563437 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6563497 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558984 A K i k dom f x neut h1)). Qed.
Lemma lem6563501 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6563503 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6563563 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558984 A K i k dom f x neut h1)). Qed.
Lemma lem6563565 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6563567 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6563629 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6563631 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6563695 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6563755 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6558984 A K i k dom f x neut h1)). Qed.
Lemma lem6563759 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6563889 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6563951 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6559000 A K i k dom f x neut h1)). Qed.
Lemma lem6563953 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6564065 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6564066 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1226 A K dom f) = (term1226 A K dom f).
Proof. exact (eq_refl (term1226 A K dom f)). Qed.
Lemma lem6564067 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1227 A K dom f x) = (term1227 A K dom f i).
Proof. exact (MK_COMB (@lem6564066 A K dom f) (@lem6562859 K x i h1)). Qed.
Lemma lem6564068 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1227 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1227 A K dom f i)). Qed.
Lemma lem6564069 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1228 A K dom f x).
Proof. exact (eq_refl (term1228 A K dom f x)). Qed.
Lemma lem6564070 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1227 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6564069 A K dom f x) (@lem6564068 A K dom f i)). Qed.
Lemma lem6564071 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1227 A K dom f x) = (term1188 A K dom f x).
Proof. exact (eq_refl (term1227 A K dom f x)). Qed.
Lemma lem6564072 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564073 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1229 A K dom f x).
Proof. exact (MK_COMB (@lem6564072) (@lem6564071 A K dom f x)). Qed.
Lemma lem6564074 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1188 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1188 A K dom f i)). Qed.
Lemma lem6564075 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1188 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6564073 A K dom f x) (@lem6564074 A K dom f i)). Qed.
Lemma lem6564076 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (TRANS (@lem6564070 A K x dom f i) (@lem6564075 A K x dom f i)). Qed.
Lemma lem6564077 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1188 A K dom f x) = (term1188 A K dom f i).
Proof. exact (EQ_MP (@lem6564076 A K x dom f i) (@lem6564067 A K dom f x i h1)). Qed.
Lemma lem6564217 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1226 A K dom f) = (term1226 A K dom f).
Proof. exact (eq_refl (term1226 A K dom f)). Qed.
Lemma lem6564218 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1227 A K dom f x) = (term1227 A K dom f i).
Proof. exact (MK_COMB (@lem6564217 A K dom f) (@lem6562923 K x i h1)). Qed.
Lemma lem6564219 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1227 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1227 A K dom f i)). Qed.
Lemma lem6564220 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1228 A K dom f x).
Proof. exact (eq_refl (term1228 A K dom f x)). Qed.
Lemma lem6564221 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1227 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6564220 A K dom f x) (@lem6564219 A K dom f i)). Qed.
Lemma lem6564222 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1227 A K dom f x) = (term1188 A K dom f x).
Proof. exact (eq_refl (term1227 A K dom f x)). Qed.
Lemma lem6564223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564224 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1229 A K dom f x).
Proof. exact (MK_COMB (@lem6564223) (@lem6564222 A K dom f x)). Qed.
Lemma lem6564225 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1188 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1188 A K dom f i)). Qed.
Lemma lem6564226 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1188 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6564224 A K dom f x) (@lem6564225 A K dom f i)). Qed.
Lemma lem6564227 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (TRANS (@lem6564221 A K x dom f i) (@lem6564226 A K x dom f i)). Qed.
Lemma lem6564228 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1188 A K dom f x) = (term1188 A K dom f i).
Proof. exact (EQ_MP (@lem6564227 A K x dom f i) (@lem6564218 A K dom f x i h1)). Qed.
Lemma lem6564243 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1230 A K dom f) = (term1230 A K dom f).
Proof. exact (eq_refl (term1230 A K dom f)). Qed.
Lemma lem6564244 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1231 A K dom f x) = (term1231 A K dom f i).
Proof. exact (MK_COMB (@lem6564243 A K dom f) (@lem6562923 K x i h1)). Qed.
Lemma lem6564245 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1231 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1231 A K dom f i)). Qed.
Lemma lem6564246 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1232 A K dom f x).
Proof. exact (eq_refl (term1232 A K dom f x)). Qed.
Lemma lem6564247 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1231 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6564246 A K dom f x) (@lem6564245 A K dom f i)). Qed.
Lemma lem6564248 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1231 A K dom f x) = (term1190 A K dom f x).
Proof. exact (eq_refl (term1231 A K dom f x)). Qed.
Lemma lem6564249 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564250 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1233 A K dom f x).
Proof. exact (MK_COMB (@lem6564249) (@lem6564248 A K dom f x)). Qed.
Lemma lem6564251 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1190 A K dom f i)). Qed.
Lemma lem6564252 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1190 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6564250 A K dom f x) (@lem6564251 A K dom f i)). Qed.
Lemma lem6564253 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (TRANS (@lem6564247 A K x dom f i) (@lem6564252 A K x dom f i)). Qed.
Lemma lem6564254 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1190 A K dom f x) = (term1190 A K dom f i).
Proof. exact (EQ_MP (@lem6564253 A K x dom f i) (@lem6564244 A K dom f x i h1)). Qed.
Lemma lem6564255 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1190 A K dom f i.
Proof. exact (EQ_MP (@lem6564254 A K dom f x i h2) (@lem6562925 A K dom f x h1)). Qed.
Lemma lem6564256 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6562989 A K f x neut h1)). Qed.
Lemma lem6564381 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6564382 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6564381 A K f x) (@lem6564256 A K f x neut h1)). Qed.
Lemma lem6564383 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6564384 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6564385 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564384 A K f x neut) (@lem6564383 A K f x)). Qed.
Lemma lem6564386 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6564387 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564388 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6564387) (@lem6564386 A K f x neut)). Qed.
Lemma lem6564389 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6564390 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564388 A K f x neut) (@lem6564389 A K f x)). Qed.
Lemma lem6564391 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6564385 A K neut f x) (@lem6564390 A K neut f x)). Qed.
Lemma lem6564392 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6564391 A K neut f x) (@lem6564382 A K f x neut h1)). Qed.
Lemma lem6564393 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6564392 A K f x neut h2) (@lem6562985 A K i k dom f x neut h1)). Qed.
Lemma lem6564407 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6564531 {A K : Type'} (f : K -> A) : (term1240 A K f) = (term1240 A K f).
Proof. exact (eq_refl (term1240 A K f)). Qed.
Lemma lem6564532 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1241 A K f x) = (term1241 A K f i).
Proof. exact (MK_COMB (@lem6564531 A K f) (@lem6564407 K x i h1)). Qed.
Lemma lem6564533 {A K : Type'} (f : K -> A) (i : K) : (term1241 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1241 A K f i)). Qed.
Lemma lem6564534 {A K : Type'} (f : K -> A) (x : K) : (term1242 A K f x) = (term1242 A K f x).
Proof. exact (eq_refl (term1242 A K f x)). Qed.
Lemma lem6564535 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1241 A K f i)) = ((term1241 A K f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6564534 A K f x) (@lem6564533 A K f i)). Qed.
Lemma lem6564536 {A K : Type'} (f : K -> A) (x : K) : (term1241 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1241 A K f x)). Qed.
Lemma lem6564537 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564538 {A K : Type'} (f : K -> A) (x : K) : (term1242 A K f x) = (term1243 A K f x).
Proof. exact (MK_COMB (@lem6564537) (@lem6564536 A K f x)). Qed.
Lemma lem6564539 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6564540 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1237 A K f i)) = ((term1237 A K f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6564538 A K f x) (@lem6564539 A K f i)). Qed.
Lemma lem6564541 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1241 A K f i)) = ((term1237 A K f x) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6564535 A K x f i) (@lem6564540 A K x f i)). Qed.
Lemma lem6564542 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1237 A K f x) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6564541 A K x f i) (@lem6564532 A K f x i h1)). Qed.
Lemma lem6564543 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6564542 A K f x i h3) (@lem6564393 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6564544 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6563181 A K f x neut h1)). Qed.
Lemma lem6564669 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6564670 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6564669 A K f x) (@lem6564544 A K f x neut h1)). Qed.
Lemma lem6564671 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6564672 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6564673 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564672 A K f x neut) (@lem6564671 A K f x)). Qed.
Lemma lem6564674 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6564675 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564676 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6564675) (@lem6564674 A K f x neut)). Qed.
Lemma lem6564677 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6564678 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564676 A K f x neut) (@lem6564677 A K f x)). Qed.
Lemma lem6564679 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6564673 A K neut f x) (@lem6564678 A K neut f x)). Qed.
Lemma lem6564680 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6564679 A K neut f x) (@lem6564670 A K f x neut h1)). Qed.
Lemma lem6564681 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6564680 A K f x neut h2) (@lem6563177 A K i k dom f x neut h1)). Qed.
Lemma lem6564696 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6563375 A K f x neut h1)). Qed.
Lemma lem6564835 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6564836 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6564835 A K f x) (@lem6564696 A K f x neut h1)). Qed.
Lemma lem6564837 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6564838 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6564839 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564838 A K f x neut) (@lem6564837 A K f x)). Qed.
Lemma lem6564840 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6564841 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564842 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6564841) (@lem6564840 A K f x neut)). Qed.
Lemma lem6564843 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6564844 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6564842 A K f x neut) (@lem6564843 A K f x)). Qed.
Lemma lem6564845 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6564839 A K neut f x) (@lem6564844 A K neut f x)). Qed.
Lemma lem6564846 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6564845 A K neut f x) (@lem6564836 A K f x neut h1)). Qed.
Lemma lem6564847 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6564846 A K f x neut h2) (@lem6563373 A K i k dom f x neut h1)). Qed.
Lemma lem6564959 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6564973 {A K : Type'} (f : K -> A) (neut : A) : (term1244 A K f neut) = (term1244 A K f neut).
Proof. exact (eq_refl (term1244 A K f neut)). Qed.
Lemma lem6564974 {A K : Type'} (f : K -> A) (neut : A) (x : K) (i : K) (h1 : x = i) : (term1245 A K f neut x) = (term1245 A K f neut i).
Proof. exact (MK_COMB (@lem6564973 A K f neut) (@lem6563437 K x i h1)). Qed.
Lemma lem6564975 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1245 A K f neut i) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1245 A K f neut i)). Qed.
Lemma lem6564976 {A K : Type'} (f : K -> A) (neut : A) (x : K) : (term1246 A K f neut x) = (term1246 A K f neut x).
Proof. exact (eq_refl (term1246 A K f neut x)). Qed.
Lemma lem6564977 {A K : Type'} (x : K) (f : K -> A) (i : K) (neut : A) : ((term1245 A K f neut x) = (term1245 A K f neut i)) = ((term1245 A K f neut x) = (term1208 A K f i neut)).
Proof. exact (MK_COMB (@lem6564976 A K f neut x) (@lem6564975 A K f i neut)). Qed.
Lemma lem6564978 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1245 A K f neut x) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1245 A K f neut x)). Qed.
Lemma lem6564979 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6564980 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1246 A K f neut x) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6564979) (@lem6564978 A K f x neut)). Qed.
Lemma lem6564981 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1208 A K f i neut) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1208 A K f i neut)). Qed.
Lemma lem6564982 {A K : Type'} (x : K) (f : K -> A) (i : K) (neut : A) : ((term1245 A K f neut x) = (term1208 A K f i neut)) = ((term1208 A K f x neut) = (term1208 A K f i neut)).
Proof. exact (MK_COMB (@lem6564980 A K f x neut) (@lem6564981 A K f i neut)). Qed.
Lemma lem6564983 {A K : Type'} (x : K) (f : K -> A) (i : K) (neut : A) : ((term1245 A K f neut x) = (term1245 A K f neut i)) = ((term1208 A K f x neut) = (term1208 A K f i neut)).
Proof. exact (TRANS (@lem6564977 A K x f i neut) (@lem6564982 A K x f i neut)). Qed.
Lemma lem6564984 {A K : Type'} (f : K -> A) (neut : A) (x : K) (i : K) (h1 : x = i) : (term1208 A K f x neut) = (term1208 A K f i neut).
Proof. exact (EQ_MP (@lem6564983 A K x f i neut) (@lem6564974 A K f neut x i h1)). Qed.
Lemma lem6564985 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1208 A K f i neut.
Proof. exact (EQ_MP (@lem6564984 A K f neut x i h2) (@lem6563435 A K i k dom f x neut h1)). Qed.
Lemma lem6564999 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : neut = (@I (K -> A) f i).
Proof. exact (SYM (@lem6564959 A K f i neut h1)). Qed.
Lemma lem6565110 {A K : Type'} (f : K -> A) (i : K) : (term1234 A K f i) = (term1234 A K f i).
Proof. exact (eq_refl (term1234 A K f i)). Qed.
Lemma lem6565111 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1235 A K f i neut) = (term1236 A K f i).
Proof. exact (MK_COMB (@lem6565110 A K f i) (@lem6564999 A K f i neut h1)). Qed.
Lemma lem6565112 {A K : Type'} (f : K -> A) (i : K) : (term1236 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1236 A K f i)). Qed.
Lemma lem6565113 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1238 A K f i neut).
Proof. exact (eq_refl (term1238 A K f i neut)). Qed.
Lemma lem6565114 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1235 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6565113 A K f i neut) (@lem6565112 A K f i)). Qed.
Lemma lem6565115 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1235 A K f i neut) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1235 A K f i neut)). Qed.
Lemma lem6565116 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6565117 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1239 A K f i neut).
Proof. exact (MK_COMB (@lem6565116) (@lem6565115 A K f i neut)). Qed.
Lemma lem6565118 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6565119 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1237 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6565117 A K f i neut) (@lem6565118 A K f i)). Qed.
Lemma lem6565120 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6565114 A K neut f i) (@lem6565119 A K neut f i)). Qed.
Lemma lem6565121 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1208 A K f i neut) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6565120 A K neut f i) (@lem6565111 A K f i neut h1)). Qed.
Lemma lem6565122 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6565121 A K f i neut h2) (@lem6564985 A K k dom f neut x i h1 h3)). Qed.
Lemma lem6565249 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1226 A K dom f) = (term1226 A K dom f).
Proof. exact (eq_refl (term1226 A K dom f)). Qed.
Lemma lem6565250 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1227 A K dom f x) = (term1227 A K dom f i).
Proof. exact (MK_COMB (@lem6565249 A K dom f) (@lem6563501 K x i h1)). Qed.
Lemma lem6565251 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1227 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1227 A K dom f i)). Qed.
Lemma lem6565252 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1228 A K dom f x).
Proof. exact (eq_refl (term1228 A K dom f x)). Qed.
Lemma lem6565253 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1227 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6565252 A K dom f x) (@lem6565251 A K dom f i)). Qed.
Lemma lem6565254 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1227 A K dom f x) = (term1188 A K dom f x).
Proof. exact (eq_refl (term1227 A K dom f x)). Qed.
Lemma lem6565255 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6565256 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1228 A K dom f x) = (term1229 A K dom f x).
Proof. exact (MK_COMB (@lem6565255) (@lem6565254 A K dom f x)). Qed.
Lemma lem6565257 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1188 A K dom f i) = (term1188 A K dom f i).
Proof. exact (eq_refl (term1188 A K dom f i)). Qed.
Lemma lem6565258 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1188 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (MK_COMB (@lem6565256 A K dom f x) (@lem6565257 A K dom f i)). Qed.
Lemma lem6565259 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1227 A K dom f x) = (term1227 A K dom f i)) = ((term1188 A K dom f x) = (term1188 A K dom f i)).
Proof. exact (TRANS (@lem6565253 A K x dom f i) (@lem6565258 A K x dom f i)). Qed.
Lemma lem6565260 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1188 A K dom f x) = (term1188 A K dom f i).
Proof. exact (EQ_MP (@lem6565259 A K x dom f i) (@lem6565250 A K dom f x i h1)). Qed.
Lemma lem6565275 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1230 A K dom f) = (term1230 A K dom f).
Proof. exact (eq_refl (term1230 A K dom f)). Qed.
Lemma lem6565276 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1231 A K dom f x) = (term1231 A K dom f i).
Proof. exact (MK_COMB (@lem6565275 A K dom f) (@lem6563501 K x i h1)). Qed.
Lemma lem6565277 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1231 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1231 A K dom f i)). Qed.
Lemma lem6565278 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1232 A K dom f x).
Proof. exact (eq_refl (term1232 A K dom f x)). Qed.
Lemma lem6565279 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1231 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6565278 A K dom f x) (@lem6565277 A K dom f i)). Qed.
Lemma lem6565280 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1231 A K dom f x) = (term1190 A K dom f x).
Proof. exact (eq_refl (term1231 A K dom f x)). Qed.
Lemma lem6565281 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6565282 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1233 A K dom f x).
Proof. exact (MK_COMB (@lem6565281) (@lem6565280 A K dom f x)). Qed.
Lemma lem6565283 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1190 A K dom f i)). Qed.
Lemma lem6565284 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1190 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6565282 A K dom f x) (@lem6565283 A K dom f i)). Qed.
Lemma lem6565285 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (TRANS (@lem6565279 A K x dom f i) (@lem6565284 A K x dom f i)). Qed.
Lemma lem6565286 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1190 A K dom f x) = (term1190 A K dom f i).
Proof. exact (EQ_MP (@lem6565285 A K x dom f i) (@lem6565276 A K dom f x i h1)). Qed.
Lemma lem6565425 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1190 A K dom f i.
Proof. exact (EQ_MP (@lem6565286 A K dom f x i h2) (@lem6563503 A K dom f x h1)). Qed.
Lemma lem6565426 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6563567 A K f x neut h1)). Qed.
Lemma lem6565550 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6565551 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6565550 A K f x) (@lem6565426 A K f x neut h1)). Qed.
Lemma lem6565552 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6565553 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6565554 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6565553 A K f x neut) (@lem6565552 A K f x)). Qed.
Lemma lem6565555 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6565556 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6565557 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6565556) (@lem6565555 A K f x neut)). Qed.
Lemma lem6565558 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6565559 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6565557 A K f x neut) (@lem6565558 A K f x)). Qed.
Lemma lem6565560 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6565554 A K neut f x) (@lem6565559 A K neut f x)). Qed.
Lemma lem6565561 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6565560 A K neut f x) (@lem6565551 A K f x neut h1)). Qed.
Lemma lem6565562 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6565561 A K f x neut h2) (@lem6563563 A K i k dom f x neut h1)). Qed.
Lemma lem6565576 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6565699 {A K : Type'} (f : K -> A) : (term1240 A K f) = (term1240 A K f).
Proof. exact (eq_refl (term1240 A K f)). Qed.
Lemma lem6565700 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1241 A K f x) = (term1241 A K f i).
Proof. exact (MK_COMB (@lem6565699 A K f) (@lem6565576 K x i h1)). Qed.
Lemma lem6565701 {A K : Type'} (f : K -> A) (i : K) : (term1241 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1241 A K f i)). Qed.
Lemma lem6565702 {A K : Type'} (f : K -> A) (x : K) : (term1242 A K f x) = (term1242 A K f x).
Proof. exact (eq_refl (term1242 A K f x)). Qed.
Lemma lem6565703 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1241 A K f i)) = ((term1241 A K f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6565702 A K f x) (@lem6565701 A K f i)). Qed.
Lemma lem6565704 {A K : Type'} (f : K -> A) (x : K) : (term1241 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1241 A K f x)). Qed.
Lemma lem6565705 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6565706 {A K : Type'} (f : K -> A) (x : K) : (term1242 A K f x) = (term1243 A K f x).
Proof. exact (MK_COMB (@lem6565705) (@lem6565704 A K f x)). Qed.
Lemma lem6565707 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6565708 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1237 A K f i)) = ((term1237 A K f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6565706 A K f x) (@lem6565707 A K f i)). Qed.
Lemma lem6565709 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1241 A K f x) = (term1241 A K f i)) = ((term1237 A K f x) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6565703 A K x f i) (@lem6565708 A K x f i)). Qed.
Lemma lem6565710 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1237 A K f x) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6565709 A K x f i) (@lem6565700 A K f x i h1)). Qed.
Lemma lem6565711 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6565710 A K f x i h3) (@lem6565562 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6565849 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6565863 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6566015 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6566016 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6563759 A K f x neut h1)). Qed.
Lemma lem6566140 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6566141 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6566140 A K f x) (@lem6566016 A K f x neut h1)). Qed.
Lemma lem6566142 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6566143 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6566144 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6566143 A K f x neut) (@lem6566142 A K f x)). Qed.
Lemma lem6566145 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6566146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6566147 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6566146) (@lem6566145 A K f x neut)). Qed.
Lemma lem6566148 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6566149 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6566147 A K f x neut) (@lem6566148 A K f x)). Qed.
Lemma lem6566150 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6566144 A K neut f x) (@lem6566149 A K neut f x)). Qed.
Lemma lem6566151 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6566150 A K neut f x) (@lem6566141 A K f x neut h1)). Qed.
Lemma lem6566152 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6566151 A K f x neut h2) (@lem6563755 A K i k dom f x neut h1)). Qed.
Lemma lem6566332 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1178 K k x.
Proof. exact (proj2 (@lem6559004 K i k x h1)). Qed.
Lemma lem6566484 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6566485 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6563953 A K f x neut h1)). Qed.
Lemma lem6566623 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6566624 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6566623 A K f x) (@lem6566485 A K f x neut h1)). Qed.
Lemma lem6566625 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6566626 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6566627 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6566626 A K f x neut) (@lem6566625 A K f x)). Qed.
Lemma lem6566628 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6566629 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6566630 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6566629) (@lem6566628 A K f x neut)). Qed.
Lemma lem6566631 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6566632 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6566630 A K f x neut) (@lem6566631 A K f x)). Qed.
Lemma lem6566633 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6566627 A K neut f x) (@lem6566632 A K neut f x)). Qed.
Lemma lem6566634 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6566633 A K neut f x) (@lem6566624 A K f x neut h1)). Qed.
Lemma lem6566635 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6566634 A K f x neut h2) (@lem6563951 A K i k dom f x neut h1)). Qed.
Lemma lem6567010 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6564077 A K dom f x i h2) (@lem6562855 A K i k dom f x neut h1)). Qed.
Lemma lem6567011 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6567010 A K k dom f neut x i h1 h2). Qed.
Lemma lem6567013 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567014 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6567013 (term1188 A K dom f i)). Qed.
Lemma lem6567015 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6567014 A K dom f i) (@lem6567011 A K k dom f neut x i h1 h2)). Qed.
Lemma lem6567018 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6567020 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6567018 (term1188 A K dom f i)). Qed.
Lemma lem6567023 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6567020 A K dom f i) (@lem6564065 A K dom f i h1)). Qed.
Lemma lem6567026 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (@lem6567023 A K dom f i h1 (@lem6567015 A K k dom f neut x i h2 h3)). Qed.
Lemma lem6567027 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6567026 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6567029 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567030 : term96 = False.
Proof. exact (@lem6567029 False). Qed.
Lemma lem6567031 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6567030) (@lem6567027 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6567406 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6564228 A K dom f x i h2) (@lem6562919 A K i k dom f x neut h1)). Qed.
Lemma lem6567407 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6567406 A K k dom f neut x i h1 h2). Qed.
Lemma lem6567409 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567410 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6567409 (term1188 A K dom f i)). Qed.
Lemma lem6567411 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6567410 A K dom f i) (@lem6567407 A K k dom f neut x i h1 h2)). Qed.
Lemma lem6567414 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6567416 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6567414 (term1188 A K dom f i)). Qed.
Lemma lem6567419 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6567416 A K dom f i) (@lem6564255 A K dom f x i h1 h2)). Qed.
Lemma lem6567422 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (@lem6567419 A K dom f x i h1 h3 (@lem6567411 A K k dom f neut x i h2 h3)). Qed.
Lemma lem6567423 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6567422 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6567425 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567426 : term96 = False.
Proof. exact (@lem6567425 False). Qed.
Lemma lem6567802 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6567803 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6567802 A x). Qed.
Lemma lem6567804 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6567803 A (@I (K -> A) f i)). Qed.
Lemma lem6567805 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6567804 A K f i). Qed.
Lemma lem6567807 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567808 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6567807 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6567809 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6567808 A K f i) (@lem6567805 A K f i)). Qed.
Lemma lem6567812 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6567814 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6567812 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6567817 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6567814 A K f i) (@lem6564543 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6567820 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (@lem6567817 A K k dom f neut x i h1 h2 h3 (@lem6567809 A K f i)). Qed.
Lemma lem6567821 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6567820 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6567823 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6567824 : term96 = False.
Proof. exact (@lem6567823 False). Qed.
Lemma lem6568200 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6568201 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : term1251 K k x.
Proof. exact (fun h0 : term1178 K k x => @lem6568200 K k x h1). Qed.
Lemma lem6568203 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6568204 {K : Type'} (k : K -> Prop) (x : K) : (term1251 K k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6568203 (@I (K -> Prop) k x)). Qed.
Lemma lem6568205 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (EQ_MP (@lem6568204 K k x) (@lem6568201 K k x h1)). Qed.
Lemma lem6568208 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6568210 {K : Type'} (k : K -> Prop) (x : K) : (term1178 K k x) = (term1252 K k x).
Proof. exact (@lem6568208 (@I (K -> Prop) k x)). Qed.
Lemma lem6568213 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1252 K k x.
Proof. exact (EQ_MP (@lem6568210 K k x) (@lem6563053 K k x h1)). Qed.
Lemma lem6568216 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (@lem6568213 K k x h1 (@lem6568205 K k x h2)). Qed.
Lemma lem6568217 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6568216 K k x h1 h2). Qed.
Lemma lem6568219 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6568220 : term96 = False.
Proof. exact (@lem6568219 False). Qed.
Lemma lem6568221 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6568220) (@lem6568217 K k x h1 h2)). Qed.
Lemma lem6568596 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558954 A K i k dom f x neut h1)). Qed.
Lemma lem6568597 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1247 A K dom f x.
Proof. exact (fun h0 : term1190 A K dom f x => @lem6568596 A K i k dom f x neut h1). Qed.
Lemma lem6568599 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6568600 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1247 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6568599 (term1188 A K dom f x)). Qed.
Lemma lem6568601 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (EQ_MP (@lem6568600 A K dom f x) (@lem6568597 A K i k dom f x neut h1)). Qed.
Lemma lem6568604 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6568606 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1190 A K dom f x) = (term1248 A K dom f x).
Proof. exact (@lem6568604 (term1188 A K dom f x)). Qed.
Lemma lem6568609 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1248 A K dom f x.
Proof. exact (EQ_MP (@lem6568606 A K dom f x) (@lem6563117 A K dom f x h1)). Qed.
Lemma lem6568612 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (@lem6568609 A K dom f x h1 (@lem6568601 A K i k dom f x neut h2)). Qed.
Lemma lem6568613 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6568612 A K i k dom f x neut h1 h2). Qed.
Lemma lem6568615 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6568616 : term96 = False.
Proof. exact (@lem6568615 False). Qed.
Lemma lem6568617 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6568616) (@lem6568613 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6568992 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6568993 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6568992 A x). Qed.
Lemma lem6568994 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (@lem6568993 A (@I (K -> A) f x)). Qed.
Lemma lem6568995 {A K : Type'} (f : K -> A) (x : K) : term1249 A K f x.
Proof. exact (fun h0 : term1237 A K f x => @lem6568994 A K f x). Qed.
Lemma lem6568997 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6568998 {A K : Type'} (f : K -> A) (x : K) : (term1249 A K f x) = ((@I (K -> A) f x) = (@I (K -> A) f x)).
Proof. exact (@lem6568997 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6568999 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (EQ_MP (@lem6568998 A K f x) (@lem6568995 A K f x)). Qed.
Lemma lem6569002 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6569004 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1250 A K f x).
Proof. exact (@lem6569002 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6569007 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1250 A K f x.
Proof. exact (EQ_MP (@lem6569004 A K f x) (@lem6564681 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6569010 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (@lem6569007 A K i k dom f x neut h1 h2 (@lem6568999 A K f x)). Qed.
Lemma lem6569011 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6569010 A K i k dom f x neut h1 h2). Qed.
Lemma lem6569013 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6569014 : term96 = False.
Proof. exact (@lem6569013 False). Qed.
Lemma lem6569390 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : @I (K -> Prop) k x.
Proof. exact (proj1 (@lem6558968 A K i k dom f x neut h1)). Qed.
Lemma lem6569391 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1251 K k x.
Proof. exact (fun h0 : term1178 K k x => @lem6569390 A K i k dom f x neut h1). Qed.
Lemma lem6569393 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6569394 {K : Type'} (k : K -> Prop) (x : K) : (term1251 K k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6569393 (@I (K -> Prop) k x)). Qed.
Lemma lem6569395 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : @I (K -> Prop) k x.
Proof. exact (EQ_MP (@lem6569394 K k x) (@lem6569391 A K i k dom f x neut h1)). Qed.
Lemma lem6569398 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6569400 {K : Type'} (k : K -> Prop) (x : K) : (term1178 K k x) = (term1252 K k x).
Proof. exact (@lem6569398 (@I (K -> Prop) k x)). Qed.
Lemma lem6569403 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1252 K k x.
Proof. exact (EQ_MP (@lem6569400 K k x) (@lem6563247 K i k x h1)). Qed.
Lemma lem6569406 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (@lem6569403 K i k x h1 (@lem6569395 A K i k dom f x neut h2)). Qed.
Lemma lem6569407 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6569406 A K i k dom f x neut h1 h2). Qed.
Lemma lem6569409 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6569410 : term96 = False.
Proof. exact (@lem6569409 False). Qed.
Lemma lem6569411 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6569410) (@lem6569407 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6569786 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558970 A K i k dom f x neut h1)). Qed.
Lemma lem6569787 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1247 A K dom f x.
Proof. exact (fun h0 : term1190 A K dom f x => @lem6569786 A K i k dom f x neut h1). Qed.
Lemma lem6569789 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6569790 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1247 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6569789 (term1188 A K dom f x)). Qed.
Lemma lem6569791 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (EQ_MP (@lem6569790 A K dom f x) (@lem6569787 A K i k dom f x neut h1)). Qed.
Lemma lem6569794 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6569796 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1190 A K dom f x) = (term1248 A K dom f x).
Proof. exact (@lem6569794 (term1188 A K dom f x)). Qed.
Lemma lem6569799 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1248 A K dom f x.
Proof. exact (EQ_MP (@lem6569796 A K dom f x) (@lem6563311 A K dom f x h1)). Qed.
Lemma lem6569802 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (@lem6569799 A K dom f x h1 (@lem6569791 A K i k dom f x neut h2)). Qed.
Lemma lem6569803 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6569802 A K i k dom f x neut h1 h2). Qed.
Lemma lem6569805 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6569806 : term96 = False.
Proof. exact (@lem6569805 False). Qed.
Lemma lem6569807 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6569806) (@lem6569803 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6570182 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6570183 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6570182 A x). Qed.
Lemma lem6570184 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (@lem6570183 A (@I (K -> A) f x)). Qed.
Lemma lem6570185 {A K : Type'} (f : K -> A) (x : K) : term1249 A K f x.
Proof. exact (fun h0 : term1237 A K f x => @lem6570184 A K f x). Qed.
Lemma lem6570187 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570188 {A K : Type'} (f : K -> A) (x : K) : (term1249 A K f x) = ((@I (K -> A) f x) = (@I (K -> A) f x)).
Proof. exact (@lem6570187 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6570189 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (EQ_MP (@lem6570188 A K f x) (@lem6570185 A K f x)). Qed.
Lemma lem6570192 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6570194 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1250 A K f x).
Proof. exact (@lem6570192 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6570197 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1250 A K f x.
Proof. exact (EQ_MP (@lem6570194 A K f x) (@lem6564847 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6570200 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (@lem6570197 A K i k dom f x neut h1 h2 (@lem6570189 A K f x)). Qed.
Lemma lem6570201 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6570200 A K i k dom f x neut h1 h2). Qed.
Lemma lem6570203 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570204 : term96 = False.
Proof. exact (@lem6570203 False). Qed.
Lemma lem6570580 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6570581 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6570580 A x). Qed.
Lemma lem6570582 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6570581 A (@I (K -> A) f i)). Qed.
Lemma lem6570583 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6570582 A K f i). Qed.
Lemma lem6570585 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570586 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6570585 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6570587 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6570586 A K f i) (@lem6570583 A K f i)). Qed.
Lemma lem6570590 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6570592 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6570590 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6570595 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6570592 A K f i) (@lem6565122 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6570598 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (@lem6570595 A K k dom f neut x i h1 h2 h3 (@lem6570587 A K f i)). Qed.
Lemma lem6570599 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6570598 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6570601 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570602 : term96 = False.
Proof. exact (@lem6570601 False). Qed.
Lemma lem6570978 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6565260 A K dom f x i h2) (@lem6563497 A K i k dom f x neut h1)). Qed.
Lemma lem6570979 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6570978 A K k dom f neut x i h1 h2). Qed.
Lemma lem6570981 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570982 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6570981 (term1188 A K dom f i)). Qed.
Lemma lem6570983 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6570982 A K dom f i) (@lem6570979 A K k dom f neut x i h1 h2)). Qed.
Lemma lem6570986 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6570988 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6570986 (term1188 A K dom f i)). Qed.
Lemma lem6570991 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6570988 A K dom f i) (@lem6565425 A K dom f x i h1 h2)). Qed.
Lemma lem6570994 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (@lem6570991 A K dom f x i h1 h3 (@lem6570983 A K k dom f neut x i h2 h3)). Qed.
Lemma lem6570995 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6570994 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6570997 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6570998 : term96 = False.
Proof. exact (@lem6570997 False). Qed.
Lemma lem6571374 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6571375 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6571374 A x). Qed.
Lemma lem6571376 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6571375 A (@I (K -> A) f i)). Qed.
Lemma lem6571377 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6571376 A K f i). Qed.
Lemma lem6571379 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6571380 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6571379 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6571381 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6571380 A K f i) (@lem6571377 A K f i)). Qed.
Lemma lem6571384 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6571386 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6571384 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6571389 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6571386 A K f i) (@lem6565711 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6571392 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (@lem6571389 A K k dom f neut x i h1 h2 h3 (@lem6571381 A K f i)). Qed.
Lemma lem6571393 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6571392 A K k dom f neut x i h1 h2 h3). Qed.
Lemma lem6571395 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6571396 : term96 = False.
Proof. exact (@lem6571395 False). Qed.
Lemma lem6571772 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6571773 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : term1251 K k x.
Proof. exact (fun h0 : term1178 K k x => @lem6571772 K k x h1). Qed.
Lemma lem6571775 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6571776 {K : Type'} (k : K -> Prop) (x : K) : (term1251 K k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6571775 (@I (K -> Prop) k x)). Qed.
Lemma lem6571777 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (EQ_MP (@lem6571776 K k x) (@lem6571773 K k x h1)). Qed.
Lemma lem6571780 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6571782 {K : Type'} (k : K -> Prop) (x : K) : (term1178 K k x) = (term1252 K k x).
Proof. exact (@lem6571780 (@I (K -> Prop) k x)). Qed.
Lemma lem6571785 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1252 K k x.
Proof. exact (EQ_MP (@lem6571782 K k x) (@lem6565863 K k x h1)). Qed.
Lemma lem6571788 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (@lem6571785 K k x h1 (@lem6571777 K k x h2)). Qed.
Lemma lem6571789 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6571788 K k x h1 h2). Qed.
Lemma lem6571791 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6571792 : term96 = False.
Proof. exact (@lem6571791 False). Qed.
Lemma lem6571793 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6571792) (@lem6571789 K k x h1 h2)). Qed.
Lemma lem6572168 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6558984 A K i k dom f x neut h1)). Qed.
Lemma lem6572169 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1247 A K dom f x.
Proof. exact (fun h0 : term1190 A K dom f x => @lem6572168 A K i k dom f x neut h1). Qed.
Lemma lem6572171 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572172 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1247 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6572171 (term1188 A K dom f x)). Qed.
Lemma lem6572173 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (EQ_MP (@lem6572172 A K dom f x) (@lem6572169 A K i k dom f x neut h1)). Qed.
Lemma lem6572176 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6572178 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1190 A K dom f x) = (term1248 A K dom f x).
Proof. exact (@lem6572176 (term1188 A K dom f x)). Qed.
Lemma lem6572181 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1248 A K dom f x.
Proof. exact (EQ_MP (@lem6572178 A K dom f x) (@lem6566015 A K dom f x h1)). Qed.
Lemma lem6572184 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (@lem6572181 A K dom f x h1 (@lem6572173 A K i k dom f x neut h2)). Qed.
Lemma lem6572185 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6572184 A K i k dom f x neut h1 h2). Qed.
Lemma lem6572187 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572188 : term96 = False.
Proof. exact (@lem6572187 False). Qed.
Lemma lem6572189 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6572188) (@lem6572185 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6572564 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6572565 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6572564 A x). Qed.
Lemma lem6572566 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (@lem6572565 A (@I (K -> A) f x)). Qed.
Lemma lem6572567 {A K : Type'} (f : K -> A) (x : K) : term1249 A K f x.
Proof. exact (fun h0 : term1237 A K f x => @lem6572566 A K f x). Qed.
Lemma lem6572569 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572570 {A K : Type'} (f : K -> A) (x : K) : (term1249 A K f x) = ((@I (K -> A) f x) = (@I (K -> A) f x)).
Proof. exact (@lem6572569 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6572571 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (EQ_MP (@lem6572570 A K f x) (@lem6572567 A K f x)). Qed.
Lemma lem6572574 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6572576 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1250 A K f x).
Proof. exact (@lem6572574 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6572579 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1250 A K f x.
Proof. exact (EQ_MP (@lem6572576 A K f x) (@lem6566152 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6572582 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (@lem6572579 A K i k dom f x neut h1 h2 (@lem6572571 A K f x)). Qed.
Lemma lem6572583 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6572582 A K i k dom f x neut h1 h2). Qed.
Lemma lem6572585 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572586 : term96 = False.
Proof. exact (@lem6572585 False). Qed.
Lemma lem6572962 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : @I (K -> Prop) k x.
Proof. exact (proj1 (@lem6558998 A K i k dom f x neut h1)). Qed.
Lemma lem6572963 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1251 K k x.
Proof. exact (fun h0 : term1178 K k x => @lem6572962 A K i k dom f x neut h1). Qed.
Lemma lem6572965 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572966 {K : Type'} (k : K -> Prop) (x : K) : (term1251 K k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6572965 (@I (K -> Prop) k x)). Qed.
Lemma lem6572967 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : @I (K -> Prop) k x.
Proof. exact (EQ_MP (@lem6572966 K k x) (@lem6572963 A K i k dom f x neut h1)). Qed.
Lemma lem6572970 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6572972 {K : Type'} (k : K -> Prop) (x : K) : (term1178 K k x) = (term1252 K k x).
Proof. exact (@lem6572970 (@I (K -> Prop) k x)). Qed.
Lemma lem6572975 {K : Type'} (i : K) (k : K -> Prop) (x : K) (h1 : term1214 K i k x) : term1252 K k x.
Proof. exact (EQ_MP (@lem6572972 K k x) (@lem6566332 K i k x h1)). Qed.
Lemma lem6572978 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (@lem6572975 K i k x h1 (@lem6572967 A K i k dom f x neut h2)). Qed.
Lemma lem6572979 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6572978 A K i k dom f x neut h1 h2). Qed.
Lemma lem6572981 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6572982 : term96 = False.
Proof. exact (@lem6572981 False). Qed.
Lemma lem6573358 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6559000 A K i k dom f x neut h1)). Qed.
Lemma lem6573359 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1247 A K dom f x.
Proof. exact (fun h0 : term1190 A K dom f x => @lem6573358 A K i k dom f x neut h1). Qed.
Lemma lem6573361 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6573362 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1247 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6573361 (term1188 A K dom f x)). Qed.
Lemma lem6573363 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (EQ_MP (@lem6573362 A K dom f x) (@lem6573359 A K i k dom f x neut h1)). Qed.
Lemma lem6573366 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6573368 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1190 A K dom f x) = (term1248 A K dom f x).
Proof. exact (@lem6573366 (term1188 A K dom f x)). Qed.
Lemma lem6573371 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1248 A K dom f x.
Proof. exact (EQ_MP (@lem6573368 A K dom f x) (@lem6566484 A K dom f x h1)). Qed.
Lemma lem6573374 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (@lem6573371 A K dom f x h1 (@lem6573363 A K i k dom f x neut h2)). Qed.
Lemma lem6573375 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6573374 A K i k dom f x neut h1 h2). Qed.
Lemma lem6573377 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6573378 : term96 = False.
Proof. exact (@lem6573377 False). Qed.
Lemma lem6573379 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573378) (@lem6573375 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573754 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6573755 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6573754 A x). Qed.
Lemma lem6573756 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (@lem6573755 A (@I (K -> A) f x)). Qed.
Lemma lem6573757 {A K : Type'} (f : K -> A) (x : K) : term1249 A K f x.
Proof. exact (fun h0 : term1237 A K f x => @lem6573756 A K f x). Qed.
Lemma lem6573759 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6573760 {A K : Type'} (f : K -> A) (x : K) : (term1249 A K f x) = ((@I (K -> A) f x) = (@I (K -> A) f x)).
Proof. exact (@lem6573759 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6573761 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (EQ_MP (@lem6573760 A K f x) (@lem6573757 A K f x)). Qed.
Lemma lem6573764 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6573766 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1250 A K f x).
Proof. exact (@lem6573764 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6573769 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1250 A K f x.
Proof. exact (EQ_MP (@lem6573766 A K f x) (@lem6566635 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573772 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (@lem6573769 A K i k dom f x neut h1 h2 (@lem6573761 A K f x)). Qed.
Lemma lem6573773 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6573772 A K i k dom f x neut h1 h2). Qed.
Lemma lem6573775 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6573776 : term96 = False.
Proof. exact (@lem6573775 False). Qed.
Lemma lem6573778 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573776) (@lem6573773 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573779 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573379 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6566484 A K dom f x h1)). Qed.
Lemma lem6573781 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573779 A K i k dom f x neut h1 h2) (@lem6566484 A K dom f x h1)). Qed.
Lemma lem6573782 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1214 K i k x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6572982) (@lem6572979 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573783 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6572586) (@lem6572583 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573784 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6572189 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6566015 A K dom f x h1)). Qed.
Lemma lem6573786 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573784 A K i k dom f x neut h1 h2) (@lem6566015 A K dom f x h1)). Qed.
Lemma lem6573787 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6571793 K k x h1 h2) (fun h3 : False => @lem6565863 K k x h1)). Qed.
Lemma lem6573788 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573787 K k x h1 h2) (@lem6565863 K k x h1)). Qed.
Lemma lem6573789 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573788 K k x h1 h2) (fun h3 : False => @lem6565849 K k x h2)). Qed.
Lemma lem6573791 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573789 K k x h1 h2) (@lem6565849 K k x h2)). Qed.
Lemma lem6573792 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6571396) (@lem6571393 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6573793 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573792 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6565576 K x i h3)). Qed.
Lemma lem6573795 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573793 A K k dom f neut x i h1 h2 h3) (@lem6565576 K x i h3)). Qed.
Lemma lem6573797 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6570998) (@lem6570995 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6573798 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6570602) (@lem6570599 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6573799 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f i) = neut => @lem6573798 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6564959 A K f i neut h2)). Qed.
Lemma lem6573801 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573799 A K k dom f neut x i h1 h2 h3) (@lem6564959 A K f i neut h2)). Qed.
Lemma lem6573802 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6570204) (@lem6570201 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573803 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6569014) (@lem6569011 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6573804 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6567824) (@lem6567821 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6573805 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573804 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6564407 K x i h3)). Qed.
Lemma lem6573807 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573805 A K k dom f neut x i h1 h2 h3) (@lem6564407 K x i h3)). Qed.
Lemma lem6573808 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6567426) (@lem6567423 A K k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6573809 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f i => @lem6567031 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6564065 A K dom f i h1)). Qed.
Lemma lem6573811 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573809 A K k dom f neut x i h1 h2 h3) (@lem6564065 A K dom f i h1)). Qed.
Lemma lem6573812 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573778 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563953 A K f x neut h2)). Qed.
Lemma lem6573813 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573812 A K i k dom f x neut h1 h2) (@lem6563953 A K f x neut h2)). Qed.
Lemma lem6573814 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573781 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563889 A K dom f x h1)). Qed.
Lemma lem6573815 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573814 A K i k dom f x neut h1 h2) (@lem6563889 A K dom f x h1)). Qed.
Lemma lem6573816 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573783 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563759 A K f x neut h2)). Qed.
Lemma lem6573817 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573816 A K i k dom f x neut h1 h2) (@lem6563759 A K f x neut h2)). Qed.
Lemma lem6573818 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573786 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563695 A K dom f x h1)). Qed.
Lemma lem6573819 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573818 A K i k dom f x neut h1 h2) (@lem6563695 A K dom f x h1)). Qed.
Lemma lem6573820 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6573791 K k x h1 h2) (fun h3 : False => @lem6563631 K k x h1)). Qed.
Lemma lem6573821 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573820 K k x h1 h2) (@lem6563631 K k x h1)). Qed.
Lemma lem6573822 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573821 K k x h1 h2) (fun h3 : False => @lem6563629 K k x h2)). Qed.
Lemma lem6573823 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573822 K k x h1 h2) (@lem6563629 K k x h2)). Qed.
Lemma lem6573824 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573795 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563567 A K f x neut h2)). Qed.
Lemma lem6573825 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573824 A K k dom f neut x i h1 h2 h3) (@lem6563567 A K f x neut h2)). Qed.
Lemma lem6573826 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573825 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563565 K x i h3)). Qed.
Lemma lem6573827 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573826 A K k dom f neut x i h1 h2 h3) (@lem6563565 K x i h3)). Qed.
Lemma lem6573828 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573797 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563503 A K dom f x h1)). Qed.
Lemma lem6573829 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573828 A K k dom f neut x i h1 h2 h3) (@lem6563503 A K dom f x h1)). Qed.
Lemma lem6573830 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573829 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563501 K x i h3)). Qed.
Lemma lem6573831 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573830 A K k dom f neut x i h1 h2 h3) (@lem6563501 K x i h3)). Qed.
Lemma lem6573832 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573801 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563437 K x i h3)). Qed.
Lemma lem6573833 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573832 A K k dom f neut x i h1 h2 h3) (@lem6563437 K x i h3)). Qed.
Lemma lem6573834 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f i) = neut => @lem6573833 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6563431 A K f i neut h2)). Qed.
Lemma lem6573835 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573834 A K k dom f neut x i h1 h2 h3) (@lem6563431 A K f i neut h2)). Qed.
Lemma lem6573836 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573802 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563375 A K f x neut h2)). Qed.
Lemma lem6573837 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573836 A K i k dom f x neut h1 h2) (@lem6563375 A K f x neut h2)). Qed.
Lemma lem6573838 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6569807 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563311 A K dom f x h1)). Qed.
Lemma lem6573839 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573838 A K i k dom f x neut h1 h2) (@lem6563311 A K dom f x h1)). Qed.
Lemma lem6573840 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573803 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563181 A K f x neut h2)). Qed.
Lemma lem6573841 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573840 A K i k dom f x neut h1 h2) (@lem6563181 A K f x neut h2)). Qed.
Lemma lem6573842 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6568617 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6563117 A K dom f x h1)). Qed.
Lemma lem6573843 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573842 A K i k dom f x neut h1 h2) (@lem6563117 A K dom f x h1)). Qed.
Lemma lem6573844 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6568221 K k x h1 h2) (fun h3 : False => @lem6563053 K k x h1)). Qed.
Lemma lem6573845 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573844 K k x h1 h2) (@lem6563053 K k x h1)). Qed.
Lemma lem6573846 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573845 K k x h1 h2) (fun h3 : False => @lem6563051 K k x h2)). Qed.
Lemma lem6573847 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573846 K k x h1 h2) (@lem6563051 K k x h2)). Qed.
Lemma lem6573848 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573807 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562989 A K f x neut h2)). Qed.
Lemma lem6573849 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573848 A K k dom f neut x i h1 h2 h3) (@lem6562989 A K f x neut h2)). Qed.
Lemma lem6573850 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573849 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562987 K x i h3)). Qed.
Lemma lem6573851 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573850 A K k dom f neut x i h1 h2 h3) (@lem6562987 K x i h3)). Qed.
Lemma lem6573852 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573808 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562925 A K dom f x h1)). Qed.
Lemma lem6573853 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573852 A K k dom f neut x i h1 h2 h3) (@lem6562925 A K dom f x h1)). Qed.
Lemma lem6573854 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573853 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562923 K x i h3)). Qed.
Lemma lem6573855 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573854 A K k dom f neut x i h1 h2 h3) (@lem6562923 K x i h3)). Qed.
Lemma lem6573856 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573811 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562859 K x i h3)). Qed.
Lemma lem6573857 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573856 A K k dom f neut x i h1 h2 h3) (@lem6562859 K x i h3)). Qed.
Lemma lem6573858 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f i => @lem6573857 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6562853 A K dom f i h1)). Qed.
Lemma lem6573859 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573858 A K k dom f neut x i h1 h2 h3) (@lem6562853 A K dom f i h1)). Qed.
Lemma lem6573860 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573813 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6562095 A K f x neut h2)). Qed.
Lemma lem6573861 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573860 A K i k dom f x neut h1 h2) (@lem6562095 A K f x neut h2)). Qed.
Lemma lem6573862 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573815 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561924 A K dom f x h1)). Qed.
Lemma lem6573863 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573862 A K i k dom f x neut h1 h2) (@lem6561924 A K dom f x h1)). Qed.
Lemma lem6573864 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573817 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561578 A K f x neut h2)). Qed.
Lemma lem6573865 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573864 A K i k dom f x neut h1 h2) (@lem6561578 A K f x neut h2)). Qed.
Lemma lem6573866 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573819 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561407 A K dom f x h1)). Qed.
Lemma lem6573867 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573866 A K i k dom f x neut h1 h2) (@lem6561407 A K dom f x h1)). Qed.
Lemma lem6573868 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6573823 K k x h1 h2) (fun h3 : False => @lem6561236 K k x h1)). Qed.
Lemma lem6573869 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573868 K k x h1 h2) (@lem6561236 K k x h1)). Qed.
Lemma lem6573870 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573869 K k x h1 h2) (fun h3 : False => @lem6561232 K k x h2)). Qed.
Lemma lem6573871 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573870 K k x h1 h2) (@lem6561232 K k x h2)). Qed.
Lemma lem6573872 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573827 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6561065 A K f x neut h2)). Qed.
Lemma lem6573873 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573872 A K k dom f neut x i h1 h2 h3) (@lem6561065 A K f x neut h2)). Qed.
Lemma lem6573874 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573873 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6561061 K x i h3)). Qed.
Lemma lem6573875 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573874 A K k dom f neut x i h1 h2 h3) (@lem6561061 K x i h3)). Qed.
Lemma lem6573876 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573831 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560894 A K dom f x h1)). Qed.
Lemma lem6573877 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573876 A K k dom f neut x i h1 h2 h3) (@lem6560894 A K dom f x h1)). Qed.
Lemma lem6573878 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573877 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560890 K x i h3)). Qed.
Lemma lem6573879 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573878 A K k dom f neut x i h1 h2 h3) (@lem6560890 K x i h3)). Qed.
Lemma lem6573880 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573835 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560719 K x i h3)). Qed.
Lemma lem6573881 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573880 A K k dom f neut x i h1 h2 h3) (@lem6560719 K x i h3)). Qed.
Lemma lem6573882 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f i) = neut => @lem6573881 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560707 A K f i neut h2)). Qed.
Lemma lem6573883 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573882 A K k dom f neut x i h1 h2 h3) (@lem6560707 A K f i neut h2)). Qed.
Lemma lem6573884 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573837 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560552 A K f x neut h2)). Qed.
Lemma lem6573885 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573884 A K i k dom f x neut h1 h2) (@lem6560552 A K f x neut h2)). Qed.
Lemma lem6573886 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573839 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560381 A K dom f x h1)). Qed.
Lemma lem6573887 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573886 A K i k dom f x neut h1 h2) (@lem6560381 A K dom f x h1)). Qed.
Lemma lem6573888 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573841 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560035 A K f x neut h2)). Qed.
Lemma lem6573889 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573888 A K i k dom f x neut h1 h2) (@lem6560035 A K f x neut h2)). Qed.
Lemma lem6573890 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573843 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6559864 A K dom f x h1)). Qed.
Lemma lem6573891 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573890 A K i k dom f x neut h1 h2) (@lem6559864 A K dom f x h1)). Qed.
Lemma lem6573892 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6573847 K k x h1 h2) (fun h3 : False => @lem6559693 K k x h1)). Qed.
Lemma lem6573893 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573892 K k x h1 h2) (@lem6559693 K k x h1)). Qed.
Lemma lem6573894 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573893 K k x h1 h2) (fun h3 : False => @lem6559689 K k x h2)). Qed.
Lemma lem6573895 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573894 K k x h1 h2) (@lem6559689 K k x h2)). Qed.
Lemma lem6573896 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573851 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559522 A K f x neut h2)). Qed.
Lemma lem6573897 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573896 A K k dom f neut x i h1 h2 h3) (@lem6559522 A K f x neut h2)). Qed.
Lemma lem6573898 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573897 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559518 K x i h3)). Qed.
Lemma lem6573899 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573898 A K k dom f neut x i h1 h2 h3) (@lem6559518 K x i h3)). Qed.
Lemma lem6573900 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573855 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559351 A K dom f x h1)). Qed.
Lemma lem6573901 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573900 A K k dom f neut x i h1 h2 h3) (@lem6559351 A K dom f x h1)). Qed.
Lemma lem6573902 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573901 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559347 K x i h3)). Qed.
Lemma lem6573903 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573902 A K k dom f neut x i h1 h2 h3) (@lem6559347 K x i h3)). Qed.
Lemma lem6573904 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573859 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559176 K x i h3)). Qed.
Lemma lem6573905 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573904 A K k dom f neut x i h1 h2 h3) (@lem6559176 K x i h3)). Qed.
Lemma lem6573906 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f i => @lem6573905 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559164 A K dom f i h1)). Qed.
Lemma lem6573907 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573906 A K k dom f neut x i h1 h2 h3) (@lem6559164 A K dom f i h1)). Qed.
Lemma lem6573908 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573861 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6562095 A K f x neut h2)). Qed.
Lemma lem6573909 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573908 A K i k dom f x neut h1 h2) (@lem6562095 A K f x neut h2)). Qed.
Lemma lem6573910 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573863 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561924 A K dom f x h1)). Qed.
Lemma lem6573911 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573910 A K i k dom f x neut h1 h2) (@lem6561924 A K dom f x h1)). Qed.
Lemma lem6573912 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573865 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561578 A K f x neut h2)). Qed.
Lemma lem6573913 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573912 A K i k dom f x neut h1 h2) (@lem6561578 A K f x neut h2)). Qed.
Lemma lem6573914 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573867 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6561407 A K dom f x h1)). Qed.
Lemma lem6573915 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573914 A K i k dom f x neut h1 h2) (@lem6561407 A K dom f x h1)). Qed.
Lemma lem6573916 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6573871 K k x h1 h2) (fun h3 : False => @lem6561236 K k x h1)). Qed.
Lemma lem6573917 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573916 K k x h1 h2) (@lem6561236 K k x h1)). Qed.
Lemma lem6573918 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573917 K k x h1 h2) (fun h3 : False => @lem6561232 K k x h2)). Qed.
Lemma lem6573919 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573918 K k x h1 h2) (@lem6561232 K k x h2)). Qed.
Lemma lem6573920 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573875 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6561065 A K f x neut h2)). Qed.
Lemma lem6573921 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573920 A K k dom f neut x i h1 h2 h3) (@lem6561065 A K f x neut h2)). Qed.
Lemma lem6573922 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573921 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6561061 K x i h3)). Qed.
Lemma lem6573923 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573922 A K k dom f neut x i h1 h2 h3) (@lem6561061 K x i h3)). Qed.
Lemma lem6573924 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573879 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560894 A K dom f x h1)). Qed.
Lemma lem6573925 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573924 A K k dom f neut x i h1 h2 h3) (@lem6560894 A K dom f x h1)). Qed.
Lemma lem6573926 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573925 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560890 K x i h3)). Qed.
Lemma lem6573927 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573926 A K k dom f neut x i h1 h2 h3) (@lem6560890 K x i h3)). Qed.
Lemma lem6573928 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573883 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560719 K x i h3)). Qed.
Lemma lem6573929 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573928 A K k dom f neut x i h1 h2 h3) (@lem6560719 K x i h3)). Qed.
Lemma lem6573930 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f i) = neut => @lem6573929 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6560707 A K f i neut h2)). Qed.
Lemma lem6573931 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573930 A K k dom f neut x i h1 h2 h3) (@lem6560707 A K f i neut h2)). Qed.
Lemma lem6573932 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573885 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560552 A K f x neut h2)). Qed.
Lemma lem6573933 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573932 A K i k dom f x neut h1 h2) (@lem6560552 A K f x neut h2)). Qed.
Lemma lem6573934 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573887 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560381 A K dom f x h1)). Qed.
Lemma lem6573935 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1218 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573934 A K i k dom f x neut h1 h2) (@lem6560381 A K dom f x h1)). Qed.
Lemma lem6573936 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6573889 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6560035 A K f x neut h2)). Qed.
Lemma lem6573937 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6573936 A K i k dom f x neut h1 h2) (@lem6560035 A K f x neut h2)). Qed.
Lemma lem6573938 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6573891 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6559864 A K dom f x h1)). Qed.
Lemma lem6573939 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6573938 A K i k dom f x neut h1 h2) (@lem6559864 A K dom f x h1)). Qed.
Lemma lem6573940 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6573895 K k x h1 h2) (fun h3 : False => @lem6559693 K k x h1)). Qed.
Lemma lem6573941 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573940 K k x h1 h2) (@lem6559693 K k x h1)). Qed.
Lemma lem6573942 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6573941 K k x h1 h2) (fun h3 : False => @lem6559689 K k x h2)). Qed.
Lemma lem6573943 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6573942 K k x h1 h2) (@lem6559689 K k x h2)). Qed.
Lemma lem6573944 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6573899 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559522 A K f x neut h2)). Qed.
Lemma lem6573945 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573944 A K k dom f neut x i h1 h2 h3) (@lem6559522 A K f x neut h2)). Qed.
Lemma lem6573946 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573945 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559518 K x i h3)). Qed.
Lemma lem6573947 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573946 A K k dom f neut x i h1 h2 h3) (@lem6559518 K x i h3)). Qed.
Lemma lem6573948 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6573903 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559351 A K dom f x h1)). Qed.
Lemma lem6573949 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573948 A K k dom f neut x i h1 h2 h3) (@lem6559351 A K dom f x h1)). Qed.
Lemma lem6573950 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573949 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559347 K x i h3)). Qed.
Lemma lem6573951 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573950 A K k dom f neut x i h1 h2 h3) (@lem6559347 K x i h3)). Qed.
Lemma lem6573952 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6573907 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559176 K x i h3)). Qed.
Lemma lem6573953 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573952 A K k dom f neut x i h1 h2 h3) (@lem6559176 K x i h3)). Qed.
Lemma lem6573954 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f i => @lem6573953 A K k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6559164 A K dom f i h1)). Qed.
Lemma lem6573955 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6573954 A K k dom f neut x i h1 h2 h3) (@lem6559164 A K dom f i h1)). Qed.
Lemma lem6573956 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6559005 A K dom f x neut h2) (fun h0 : term1190 A K dom f x => @lem6573911 A K i k dom f x neut h0 h1) (fun h0 : (@I (K -> A) f x) = neut => @lem6573909 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573957 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : False.
Proof. exact (or_elim (@lem6558999 A K i k dom f x neut h1) (fun h0 : term1214 K i k x => @lem6573782 A K i k dom f x neut h0 h1) (fun h0 : term1192 A K dom f x neut => @lem6573956 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573958 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6558995 A K dom f x neut h2) (fun h0 : term1190 A K dom f x => @lem6573915 A K i k dom f x neut h0 h1) (fun h0 : (@I (K -> A) f x) = neut => @lem6573913 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573959 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) (x : K) (h1 : term1223 A K i k dom f x neut) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (or_elim (@lem6558982 A K i k dom f x neut h1) (fun h0 : term1178 K k x => @lem6573919 K k x h0 h2) (fun h0 : term1192 A K dom f x neut => @lem6573958 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573960 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) (h3 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6558991 A K dom f x neut h3) (fun h0 : term1190 A K dom f x => @lem6573927 A K k dom f neut x i h0 h1 h2) (fun h0 : (@I (K -> A) f x) = neut => @lem6573923 A K k dom f neut x i h1 h0 h2)). Qed.
Lemma lem6573961 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) (h3 : x = i) : False.
Proof. exact (or_elim (@lem6558982 A K i k dom f x neut h1) (fun h0 : term1178 K k x => @lem6573931 A K k dom f neut x i h1 h2 h3) (fun h0 : term1192 A K dom f x neut => @lem6573960 A K k i dom f x neut h1 h3 h0)). Qed.
Lemma lem6573962 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (x : K) (f : K -> A) (i : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (or_elim (@lem6558985 A K i k dom f x neut h1) (fun h0 : x = i => @lem6573961 A K k dom f neut x i h1 h2 h0) (fun h0 : @I (K -> Prop) k x => @lem6573959 A K i dom f neut k x h1 h0)). Qed.
Lemma lem6573963 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (x : K) (f : K -> A) (i : K) (neut : A) (h1 : term821 A K i k dom f x neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (or_elim (@lem6558494 A K i k dom f x neut h1) (fun h0 : term1223 A K i k dom f x neut => @lem6573962 A K k dom x f i neut h0 h2) (fun h0 : term1218 A K i k dom f x neut => @lem6573957 A K i k dom f x neut h0)). Qed.
Lemma lem6573964 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) (h2 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6558975 A K dom f x neut h2) (fun h0 : term1190 A K dom f x => @lem6573935 A K i k dom f x neut h0 h1) (fun h0 : (@I (K -> A) f x) = neut => @lem6573933 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573965 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1218 A K i k dom f x neut) : False.
Proof. exact (or_elim (@lem6558969 A K i k dom f x neut h1) (fun h0 : term1214 K i k x => @lem6569411 A K i k dom f x neut h0 h1) (fun h0 : term1192 A K dom f x neut => @lem6573964 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573966 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6558965 A K dom f x neut h2) (fun h0 : term1190 A K dom f x => @lem6573939 A K i k dom f x neut h0 h1) (fun h0 : (@I (K -> A) f x) = neut => @lem6573937 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573967 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) (x : K) (h1 : term1223 A K i k dom f x neut) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (or_elim (@lem6558952 A K i k dom f x neut h1) (fun h0 : term1178 K k x => @lem6573943 K k x h0 h2) (fun h0 : term1192 A K dom f x neut => @lem6573966 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6573968 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1223 A K i k dom f x neut) (h2 : x = i) (h3 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6558961 A K dom f x neut h3) (fun h0 : term1190 A K dom f x => @lem6573951 A K k dom f neut x i h0 h1 h2) (fun h0 : (@I (K -> A) f x) = neut => @lem6573947 A K k dom f neut x i h1 h0 h2)). Qed.
Lemma lem6573969 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) (h3 : x = i) : False.
Proof. exact (or_elim (@lem6558952 A K i k dom f x neut h2) (fun h0 : term1178 K k x => @lem6573955 A K k dom f neut x i h1 h2 h3) (fun h0 : term1192 A K dom f x neut => @lem6573968 A K k i dom f x neut h2 h3 h0)). Qed.
Lemma lem6573970 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1223 A K i k dom f x neut) : False.
Proof. exact (or_elim (@lem6558955 A K i k dom f x neut h2) (fun h0 : x = i => @lem6573969 A K k dom f neut x i h1 h2 h0) (fun h0 : @I (K -> Prop) k x => @lem6573967 A K i dom f neut k x h2 h0)). Qed.
Lemma lem6573971 {A K : Type'} (k : K -> Prop) (x : K) (neut : A) (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term821 A K i k dom f x neut) (h2 : term1190 A K dom f i) : False.
Proof. exact (or_elim (@lem6558494 A K i k dom f x neut h1) (fun h0 : term1223 A K i k dom f x neut => @lem6573970 A K i k dom f x neut h2 h0) (fun h0 : term1218 A K i k dom f x neut => @lem6573965 A K i k dom f x neut h0)). Qed.
Lemma lem6573972 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term821 A K i k dom f x neut) (h2 : term723 A K ltle i _84017 k dom f neut) : False.
Proof. exact (or_elim (@lem6558941 A K ltle i _84017 k dom f neut h2) (fun h0 : term1190 A K dom f i => @lem6573971 A K k x neut dom f i h1 h0) (fun h0 : (@I (K -> A) f i) = neut => @lem6573963 A K k dom x f i neut h1 h0)). Qed.
Lemma lem6573973 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term821 A K i k dom f x neut) (h3 : term723 A K ltle i _84017 k dom f neut) : False.
Proof. exact (ex_elim (@lem6557808 A K _84017 h1) (fun j : type834 A K => fun h0 : term1120 A K _84017 j => @lem6573972 A K x ltle i _84017 k dom f neut h2 h3)). Qed.
Lemma lem6573974 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term821 A K i k dom f x neut) (h3 : term723 A K ltle i _84017 k dom f neut) : (term821 A K i k dom f x neut) = False.
Proof. exact (prop_ext (fun h4 : term821 A K i k dom f x neut => @lem6573973 A K x ltle i _84017 k dom f neut h1 h2 h3) (fun h4 : False => @lem6556782 A K i k dom f x neut h2)). Qed.
Lemma lem6573975 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term821 A K i k dom f x neut) (h3 : term723 A K ltle i _84017 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6573974 A K x ltle i _84017 k dom f neut h1 h2 h3) (@lem6556782 A K i k dom f x neut h2)). Qed.
Lemma lem6573976 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term723 A K ltle i _84017 k dom f neut) : term820 A K i k dom f x neut.
Proof. exact (fun h0 : term821 A K i k dom f x neut => @lem6573975 A K x ltle i _84017 k dom f neut h1 h0 h2). Qed.
Lemma lem6573977 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term723 A K ltle i _84017 k dom f neut) : (term658 A K i k dom f x neut) = (term602 A K k dom f x neut).
Proof. exact (EQ_MP (@lem6556781 A K i k dom f x neut) (@lem6573976 A K x ltle i _84017 k dom f neut h1 h2)). Qed.
Lemma lem6573982 {A K : Type'} (ltle : type1402 K) (i : K) (_84017 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _84017) (h2 : term723 A K ltle i _84017 k dom f neut) : term674 A K i k dom f neut.
Proof. exact (fun x : K => @lem6573977 A K x ltle i _84017 k dom f neut h1 h2). Qed.
Lemma lem6573983 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term725 A K ltle _84017 i k dom f neut.
Proof. exact (fun h0 : term723 A K ltle i _84017 k dom f neut => @lem6573982 A K ltle i _84017 k dom f neut h1 h0). Qed.
Lemma lem6573988 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term727 A K _84017 i k dom f neut.
Proof. exact (fun ltle : type1402 K => @lem6573983 A K ltle i k dom f neut _84017 h1). Qed.
Lemma lem6573993 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term729 A K _84017 k dom f neut.
Proof. exact (fun i : K => @lem6573988 A K i k dom f neut _84017 h1). Qed.
Lemma lem6573998 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term731 A K _84017 dom f neut.
Proof. exact (fun k : K -> Prop => @lem6573993 A K k dom f neut _84017 h1). Qed.
Lemma lem6574003 {A K : Type'} (f : K -> A) (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term733 A K _84017 f neut.
Proof. exact (fun dom : A -> Prop => @lem6573998 A K dom f neut _84017 h1). Qed.
Lemma lem6574008 {A K : Type'} (neut : A) (_84017 : type835 A K) (h1 : term815 A K _84017) : term735 A K _84017 neut.
Proof. exact (fun f : K -> A => @lem6574003 A K f neut _84017 h1). Qed.
Lemma lem6574013 {A K : Type'} (_84017 : type835 A K) (h1 : term815 A K _84017) : term737 A K _84017.
Proof. exact (fun neut : A => @lem6574008 A K neut _84017 h1). Qed.
Lemma lem6574014 {A K : Type'} (_84017 : type835 A K) : term817 A K _84017.
Proof. exact (fun h0 : term815 A K _84017 => @lem6574013 A K _84017 h0). Qed.
Lemma lem6574019 {A K : Type'} : term819 A K.
Proof. exact (fun _84017 : type835 A K => @lem6574014 A K _84017). Qed.
Lemma lem6574020 {A K : Type'} : term704 A K.
Proof. exact (EQ_MP (@lem6556775 A K) (@lem6574019 A K)). Qed.
Lemma lem6574021 {A K : Type'} (neut : A) : term1253 A K neut.
Proof. exact (@lem6574020 A K neut). Qed.
Lemma lem6574022 {A K : Type'} (neut : A) : (term1253 A K neut) = (term700 A K neut).
Proof. exact (eq_refl (term1253 A K neut)). Qed.
Lemma lem6574023 {A K : Type'} (neut : A) : term700 A K neut.
Proof. exact (EQ_MP (@lem6574022 A K neut) (@lem6574021 A K neut)). Qed.
Lemma lem6574024 {A K : Type'} (neut : A) (f : K -> A) : term1254 A K neut f.
Proof. exact (@lem6574023 A K neut f). Qed.
Lemma lem6574025 {A K : Type'} (f : K -> A) (neut : A) : (term1254 A K neut f) = (term696 A K f neut).
Proof. exact (eq_refl (term1254 A K neut f)). Qed.
Lemma lem6574026 {A K : Type'} (f : K -> A) (neut : A) : term696 A K f neut.
Proof. exact (EQ_MP (@lem6574025 A K f neut) (@lem6574024 A K neut f)). Qed.
Lemma lem6574027 {A K : Type'} (f : K -> A) (neut : A) (dom : A -> Prop) : term1255 A K f neut dom.
Proof. exact (@lem6574026 A K f neut dom). Qed.
Lemma lem6574028 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1255 A K f neut dom) = (term692 A K dom f neut).
Proof. exact (eq_refl (term1255 A K f neut dom)). Qed.
Lemma lem6574029 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : term692 A K dom f neut.
Proof. exact (EQ_MP (@lem6574028 A K dom f neut) (@lem6574027 A K f neut dom)). Qed.
Lemma lem6574030 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) : term1256 A K dom f neut k.
Proof. exact (@lem6574029 A K dom f neut k). Qed.
Lemma lem6574031 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1256 A K dom f neut k) = (term688 A K k dom f neut).
Proof. exact (eq_refl (term1256 A K dom f neut k)). Qed.
Lemma lem6574032 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term688 A K k dom f neut.
Proof. exact (EQ_MP (@lem6574031 A K k dom f neut) (@lem6574030 A K dom f neut k)). Qed.
Lemma lem6574033 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term1257 A K k dom f neut i.
Proof. exact (@lem6574032 A K k dom f neut i). Qed.
Lemma lem6574034 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1257 A K k dom f neut i) = (term684 A K i k dom f neut).
Proof. exact (eq_refl (term1257 A K k dom f neut i)). Qed.
Lemma lem6574035 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term684 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6574034 A K i k dom f neut) (@lem6574033 A K k dom f neut i)). Qed.
Lemma lem6574036 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) : term1258 A K i k dom f neut ltle.
Proof. exact (@lem6574035 A K i k dom f neut ltle). Qed.
Lemma lem6574037 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1258 A K i k dom f neut ltle) = (term676 A K ltle i k dom f neut).
Proof. exact (eq_refl (term1258 A K i k dom f neut ltle)). Qed.
Lemma lem6574038 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term676 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6574037 A K ltle i k dom f neut) (@lem6574036 A K i k dom f neut ltle)). Qed.
Lemma lem6574040 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term676 A K ltle i k dom f neut.
Proof. exact (@lem6555984 A K ltle i k dom f neut (@lem6574038 A K ltle i k dom f neut)). Qed.
Lemma lem6574041 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term677 A K ltle i k dom f neut) : False.
Proof. exact (@lem6574040 A K ltle i k dom f neut (@lem6555968 A K ltle i k dom f neut h1)). Qed.
Lemma lem6574042 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term677 A K ltle i k dom f neut) : (term677 A K ltle i k dom f neut) = False.
Proof. exact (prop_ext (fun h2 : term677 A K ltle i k dom f neut => @lem6574041 A K ltle i k dom f neut h1) (fun h2 : False => @lem6555968 A K ltle i k dom f neut h1)). Qed.
Lemma lem6574043 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term677 A K ltle i k dom f neut) : False.
Proof. exact (EQ_MP (@lem6574042 A K ltle i k dom f neut h1) (@lem6555968 A K ltle i k dom f neut h1)). Qed.
Lemma lem6574044 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term676 A K ltle i k dom f neut.
Proof. exact (fun h0 : term677 A K ltle i k dom f neut => @lem6574043 A K ltle i k dom f neut h0). Qed.
Lemma lem6574045 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term675 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6555967 A K ltle i k dom f neut) (@lem6574044 A K ltle i k dom f neut)). Qed.
Lemma lem6574046 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term590 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6555963 A K ltle i k f dom neut) (@lem6574045 A K ltle i k dom f neut)). Qed.
Lemma lem6574047 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term589 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6555527 A K ltle i k f dom neut) (@lem6574046 A K ltle i k f dom neut)). Qed.
Lemma lem6574048 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term585 A K i k f dom neut) = (term586 A K k f dom neut).
Proof. exact (@lem6574047 A K ltle i k f dom neut (@lem6555452 A K ltle f dom neut i k h1 h2 h3 h4 h5)). Qed.
Lemma lem6574049 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term1259 A K op ltle i k f dom neut) = (term1260 A K op ltle k f dom neut).
Proof. exact (MK_COMB (@lem6555438 A K dom neut op ltle) (@lem6574048 A K ltle f dom neut i k h1 h2 h3 h4 h5)). Qed.
Lemma lem6574050 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term579 A K op ltle i k dom neut f) = (term22 A K op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6574049 A K op ltle f dom neut i k h1 h2 h3 h4 h5) (@lem6555437 A K f)). Qed.
Lemma lem6574053 {_124629 : Type'} (p : Prop) (q : Prop) (x : _124629) (y : _124629) (z : _124629) : term117 _124629 p q x y z.
Proof. exact (@lem6450984 _124629 p q x y z (@lem6450976 _124629 p q x y z)). Qed.
Lemma lem6574054 {A : Type'} (p : Prop) (q : Prop) (x : A) (y : A) (z : A) : term117 A p q x y z.
Proof. exact (@lem6574053 A p q x y z). Qed.
Lemma lem6574055 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1261 A K i dom neut op ltle k f.
Proof. exact (@lem6574054 A (term1262 A K i k f dom neut) (term1263 A K i k f dom neut) (term1264 A K op ltle i k f dom neut) neut (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6574066 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6574067 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6574066 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6574068 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6574067 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6574069 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term504 A K f i dom) : term1265 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555423 A K f i dom h5) (@lem6574068 A K ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6574070 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1266 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555422 A K f i neut h4) (@lem6574069 A K ltle neut k f i dom h1 h2 h3 h5 h6)). Qed.
Lemma lem6574124 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term23 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem6574125 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = t) = (term23 K s t).
Proof. exact (@lem6574124 K s t). Qed.
Lemma lem6574126 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term585 A K i k f dom neut) = (@EMPTY K)) = (term1267 A K i k f dom neut).
Proof. exact (@lem6574125 K (term585 A K i k f dom neut) (@EMPTY K)). Qed.
Lemma lem6574141 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574142 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1263 A K i k f dom neut) = (term1268 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6574141) (@lem6574126 A K i k f dom neut)). Qed.
Lemma lem6574143 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1269 A K ltle i k f dom neut).
Proof. exact (eq_refl (term1269 A K ltle i k f dom neut)). Qed.
Lemma lem6574144 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1270 A K ltle i k f dom neut) = (term1271 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6574143 A K ltle i k f dom neut) (@lem6574142 A K i k f dom neut)). Qed.
Lemma lem6574147 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1271 A K ltle i k f dom neut) = (term1270 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6574144 A K ltle i k f dom neut)). Qed.
Lemma lem6574157 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574158 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6574157 A P x). Qed.
Lemma lem6574159 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6574158 A dom (f i)). Qed.
Lemma lem6574160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574161 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6574160) (@lem6574159 A K dom f i)). Qed.
Lemma lem6574165 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574166 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6574165 K P x). Qed.
Lemma lem6574167 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6574166 K k i). Qed.
Lemma lem6574168 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574169 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6574168) (@lem6574167 K k i)). Qed.
Lemma lem6574170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574171 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6574170) (@lem6574169 K k i)). Qed.
Lemma lem6574185 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574186 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6574185 K P x). Qed.
Lemma lem6574187 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6574186 K k j). Qed.
Lemma lem6574188 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574189 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6574188) (@lem6574187 K k j)). Qed.
Lemma lem6574191 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6574192 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6574191 A s x t). Qed.
Lemma lem6574193 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6574192 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6574197 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574198 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6574197 A P x). Qed.
Lemma lem6574199 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6574198 A dom (f j)). Qed.
Lemma lem6574200 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574201 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6574200) (@lem6574199 A K dom f j)). Qed.
Lemma lem6574203 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6574204 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6574203 A y x s). Qed.
Lemma lem6574205 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6574204 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6574211 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6574212 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6574211 A x). Qed.
Lemma lem6574213 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6574212 A (f j)). Qed.
Lemma lem6574214 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6574215 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6574214 A K f j neut) (@lem6574213 A K f j)). Qed.
Lemma lem6574217 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6574218 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6574217 ((f j) = neut)). Qed.
Lemma lem6574221 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6574215 A K f j neut) (@lem6574218 A K f j neut)). Qed.
Lemma lem6574222 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6574205 A K neut f j) (@lem6574221 A K f j neut)). Qed.
Lemma lem6574223 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574224 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6574223) (@lem6574222 A K f j neut)). Qed.
Lemma lem6574225 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6574201 A K dom f j) (@lem6574224 A K f j neut)). Qed.
Lemma lem6574228 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6574193 A K dom f j neut) (@lem6574225 A K dom f j neut)). Qed.
Lemma lem6574229 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6574189 K k j) (@lem6574228 A K dom f j neut)). Qed.
Lemma lem6574232 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6574233 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6574232 K ltle j i) (@lem6574229 A K k dom f j neut)). Qed.
Lemma lem6574236 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574237 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6574236) (@lem6574233 A K ltle i k dom f j neut)). Qed.
Lemma lem6574240 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6574241 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6574237 A K ltle i k dom f j neut) (@lem6574240 K j i)). Qed.
Lemma lem6574244 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6574241 A K ltle k dom f neut j i)). Qed.
Lemma lem6574245 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574246 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6574245 K) (@lem6574244 A K ltle k dom f neut i)). Qed.
Lemma lem6574251 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574252 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6574251) (@lem6574246 A K ltle k dom f neut i)). Qed.
Lemma lem6574262 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574263 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6574262 K P x). Qed.
Lemma lem6574264 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6574263 K k j). Qed.
Lemma lem6574265 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574266 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6574265) (@lem6574264 K k j)). Qed.
Lemma lem6574273 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6574274 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6574266 K k j) (@lem6574273 K ltle j i)). Qed.
Lemma lem6574277 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6574274 K k ltle j i)). Qed.
Lemma lem6574278 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574279 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6574278 K) (@lem6574277 K k ltle i)). Qed.
Lemma lem6574284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574285 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6574284) (@lem6574279 K k ltle i)). Qed.
Lemma lem6574293 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574294 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6574293 K P x). Qed.
Lemma lem6574295 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6574294 K k j). Qed.
Lemma lem6574296 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574297 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6574296) (@lem6574295 K k j)). Qed.
Lemma lem6574299 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6574300 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6574299 A s x t). Qed.
Lemma lem6574301 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6574300 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6574305 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574306 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6574305 A P x). Qed.
Lemma lem6574307 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6574306 A dom (f j)). Qed.
Lemma lem6574308 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574309 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6574308) (@lem6574307 A K dom f j)). Qed.
Lemma lem6574311 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6574312 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6574311 A y x s). Qed.
Lemma lem6574313 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6574312 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6574319 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6574320 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6574319 A x). Qed.
Lemma lem6574321 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6574320 A (f j)). Qed.
Lemma lem6574322 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6574323 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6574322 A K f j neut) (@lem6574321 A K f j)). Qed.
Lemma lem6574325 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6574326 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6574325 ((f j) = neut)). Qed.
Lemma lem6574329 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6574323 A K f j neut) (@lem6574326 A K f j neut)). Qed.
Lemma lem6574330 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6574313 A K neut f j) (@lem6574329 A K f j neut)). Qed.
Lemma lem6574331 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574332 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6574331) (@lem6574330 A K f j neut)). Qed.
Lemma lem6574333 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6574309 A K dom f j) (@lem6574332 A K f j neut)). Qed.
Lemma lem6574336 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6574301 A K dom f j neut) (@lem6574333 A K dom f j neut)). Qed.
Lemma lem6574337 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6574297 K k j) (@lem6574336 A K dom f j neut)). Qed.
Lemma lem6574340 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6574341 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6574340 K GEN_PVAR_272) (@lem6574337 A K k dom f j neut)). Qed.
Lemma lem6574342 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6574343 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6574341 A K GEN_PVAR_272 k dom f j neut) (@lem6574342 K j)). Qed.
Lemma lem6574344 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6574343 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6574345 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6574346 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6574345 K) (@lem6574344 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574351 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6574346 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574352 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6574353 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6574352 K) (@lem6574351 A K k dom f neut)). Qed.
Lemma lem6574354 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6574355 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6574354 K) (@lem6574353 A K k dom f neut)). Qed.
Lemma lem6574356 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574285 K k ltle i) (@lem6574355 A K k dom f neut)). Qed.
Lemma lem6574359 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574252 A K ltle k dom f neut i) (@lem6574356 A K ltle i k dom f neut)). Qed.
Lemma lem6574362 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574171 K k i) (@lem6574359 A K ltle i k dom f neut)). Qed.
Lemma lem6574365 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1265 A K ltle i k f dom neut) = (term1272 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574161 A K dom f i) (@lem6574362 A K ltle i k dom f neut)). Qed.
Lemma lem6574368 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6574369 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1266 A K ltle i k f dom neut) = (term1274 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574368 A K f i neut) (@lem6574365 A K ltle i k dom f neut)). Qed.
Lemma lem6574372 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574373 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1275 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574372) (@lem6574369 A K ltle i k dom f neut)). Qed.
Lemma lem6574381 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term639 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6574382 {K : Type'} (p : K -> Prop) (x : K) : (term639 K x p) = (p x).
Proof. exact (@lem6574381 K p x). Qed.
Lemma lem6574383 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term640 A K x i k f dom neut) = (term641 A K i k f dom neut x).
Proof. exact (@lem6574382 K (term642 A K i k f dom neut) x). Qed.
Lemma lem6574384 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut i') = (term643 A K i k f i' dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut i')). Qed.
Lemma lem6574385 {K : Type'} (GEN_PVAR_264 : K) : (@SETSPEC K GEN_PVAR_264) = (@SETSPEC K GEN_PVAR_264).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_264)). Qed.
Lemma lem6574386 {A K : Type'} (GEN_PVAR_264 : K) (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term644 A K GEN_PVAR_264 i k f dom neut i') = (term645 A K GEN_PVAR_264 i k f i' dom neut).
Proof. exact (MK_COMB (@lem6574385 K GEN_PVAR_264) (@lem6574384 A K i k f i' dom neut)). Qed.
Lemma lem6574387 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6574388 {A K : Type'} (GEN_PVAR_264 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term646 A K GEN_PVAR_264 i k f dom neut i') = (term647 A K GEN_PVAR_264 i k f dom neut i').
Proof. exact (MK_COMB (@lem6574386 A K GEN_PVAR_264 i k f i' dom neut) (@lem6574387 K i')). Qed.
Lemma lem6574389 {A K : Type'} (GEN_PVAR_264 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term648 A K GEN_PVAR_264 i k f dom neut) = (term649 A K GEN_PVAR_264 i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6574388 A K GEN_PVAR_264 i k f dom neut i')). Qed.
Lemma lem6574390 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6574391 {A K : Type'} (GEN_PVAR_264 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term650 A K GEN_PVAR_264 i k f dom neut) = (term651 A K GEN_PVAR_264 i k f dom neut).
Proof. exact (MK_COMB (@lem6574390 K) (@lem6574389 A K GEN_PVAR_264 i k f dom neut)). Qed.
Lemma lem6574392 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term652 A K i k f dom neut) = (term653 A K i k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_264 : K => @lem6574391 A K GEN_PVAR_264 i k f dom neut)). Qed.
Lemma lem6574393 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6574394 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term654 A K i k f dom neut) = (term585 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6574393 K) (@lem6574392 A K i k f dom neut)). Qed.
Lemma lem6574395 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6574396 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term640 A K x i k f dom neut) = (term655 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6574395 K x) (@lem6574394 A K i k f dom neut)). Qed.
Lemma lem6574397 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574398 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term656 A K x i k f dom neut) = (term657 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6574397) (@lem6574396 A K x i k f dom neut)). Qed.
Lemma lem6574399 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut x) = (term643 A K i k f x dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut x)). Qed.
Lemma lem6574400 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term640 A K x i k f dom neut) = (term641 A K i k f dom neut x)) = ((term655 A K x i k f dom neut) = (term643 A K i k f x dom neut)).
Proof. exact (MK_COMB (@lem6574398 A K x i k f dom neut) (@lem6574399 A K i k f x dom neut)). Qed.
Lemma lem6574401 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term655 A K x i k f dom neut) = (term643 A K i k f x dom neut).
Proof. exact (EQ_MP (@lem6574400 A K i k f x dom neut) (@lem6574383 A K i k f dom neut x)). Qed.
Lemma lem6574405 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6574406 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6574405 K y x s). Qed.
Lemma lem6574407 {K : Type'} (i : K) (x : K) (k : K -> Prop) : (term36 K x i k) = (term37 K i x k).
Proof. exact (@lem6574406 K i x k). Qed.
Lemma lem6574413 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574414 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6574413 K P x). Qed.
Lemma lem6574415 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6574414 K k x). Qed.
Lemma lem6574416 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6574417 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term37 K i x k) = (term39 K i k x).
Proof. exact (MK_COMB (@lem6574416 K x i) (@lem6574415 K k x)). Qed.
Lemma lem6574420 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term36 K x i k) = (term39 K i k x).
Proof. exact (TRANS (@lem6574407 K i x k) (@lem6574417 K i k x)). Qed.
Lemma lem6574421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574422 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term40 K x i k) = (term41 K i k x).
Proof. exact (MK_COMB (@lem6574421) (@lem6574420 K i k x)). Qed.
Lemma lem6574424 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6574425 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6574424 A s x t). Qed.
Lemma lem6574426 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term569 A K dom f x neut).
Proof. exact (@lem6574425 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6574430 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6574431 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6574430 A P x). Qed.
Lemma lem6574432 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term504 A K f x dom) = (term591 A K dom f x).
Proof. exact (@lem6574431 A dom (f x)). Qed.
Lemma lem6574433 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574434 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term573 A K f x dom) = (term592 A K dom f x).
Proof. exact (MK_COMB (@lem6574433) (@lem6574432 A K dom f x)). Qed.
Lemma lem6574436 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6574437 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6574436 A y x s). Qed.
Lemma lem6574438 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term570 A K f x neut) = (term593 A K neut f x).
Proof. exact (@lem6574437 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6574444 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6574445 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6574444 A x). Qed.
Lemma lem6574446 {A K : Type'} (f : K -> A) (x : K) : (term594 A K f x) = False.
Proof. exact (@lem6574445 A (f x)). Qed.
Lemma lem6574447 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term512 A K f x neut) = (term512 A K f x neut).
Proof. exact (eq_refl (term512 A K f x neut)). Qed.
Lemma lem6574448 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = (term527 A K f x neut).
Proof. exact (MK_COMB (@lem6574447 A K f x neut) (@lem6574446 A K f x)). Qed.
Lemma lem6574450 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6574451 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term527 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6574450 ((f x) = neut)). Qed.
Lemma lem6574454 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6574448 A K f x neut) (@lem6574451 A K f x neut)). Qed.
Lemma lem6574455 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term570 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6574438 A K neut f x) (@lem6574454 A K f x neut)). Qed.
Lemma lem6574456 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574457 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term571 A K f x neut) = (term572 A K f x neut).
Proof. exact (MK_COMB (@lem6574456) (@lem6574455 A K f x neut)). Qed.
Lemma lem6574458 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term569 A K dom f x neut) = (term595 A K dom f x neut).
Proof. exact (MK_COMB (@lem6574434 A K dom f x) (@lem6574457 A K f x neut)). Qed.
Lemma lem6574461 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term595 A K dom f x neut).
Proof. exact (TRANS (@lem6574426 A K dom f x neut) (@lem6574458 A K dom f x neut)). Qed.
Lemma lem6574462 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term643 A K i k f x dom neut) = (term658 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6574422 K i k x) (@lem6574461 A K dom f x neut)). Qed.
Lemma lem6574465 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term655 A K x i k f dom neut) = (term658 A K i k dom f x neut).
Proof. exact (TRANS (@lem6574401 A K i k f x dom neut) (@lem6574462 A K i k dom f x neut)). Qed.
Lemma lem6574466 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574467 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term657 A K x i k f dom neut) = (term659 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6574466) (@lem6574465 A K i k dom f x neut)). Qed.
Lemma lem6574469 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6574470 {K : Type'} (x : K) : (@IN K x (@EMPTY K)) = False.
Proof. exact (@lem6574469 K x). Qed.
Lemma lem6574471 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term655 A K x i k f dom neut) = (@IN K x (@EMPTY K))) = ((term658 A K i k dom f x neut) = False).
Proof. exact (MK_COMB (@lem6574467 A K i k dom f x neut) (@lem6574470 K x)). Qed.
Lemma lem6574473 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem6574474 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term658 A K i k dom f x neut) = False) = (term1151 A K i k dom f x neut).
Proof. exact (@lem6574473 (term658 A K i k dom f x neut)). Qed.
Lemma lem6574485 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : ((term655 A K x i k f dom neut) = (@IN K x (@EMPTY K))) = (term1151 A K i k dom f x neut).
Proof. exact (TRANS (@lem6574471 A K i k dom f x neut) (@lem6574474 A K i k dom f x neut)). Qed.
Lemma lem6574486 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1276 A K i k f dom neut) = (term1277 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6574485 A K i k dom f x neut)). Qed.
Lemma lem6574487 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574488 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1267 A K i k f dom neut) = (term1278 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6574487 K) (@lem6574486 A K i k dom f neut)). Qed.
Lemma lem6574493 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574494 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1268 A K i k f dom neut) = (term1279 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6574493) (@lem6574488 A K i k dom f neut)). Qed.
Lemma lem6574495 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1271 A K ltle i k f dom neut) = (term1280 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6574373 A K ltle i k dom f neut) (@lem6574494 A K i k dom f neut)). Qed.
Lemma lem6574498 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1280 A K ltle i k dom f neut) = (term1271 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6574495 A K ltle i k dom f neut)). Qed.
Lemma lem6574500 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6574501 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1280 A K ltle i k dom f neut) = (term1281 A K ltle i k dom f neut).
Proof. exact (@lem6574500 (term1280 A K ltle i k dom f neut)). Qed.
Lemma lem6574502 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1281 A K ltle i k dom f neut) = (term1280 A K ltle i k dom f neut).
Proof. exact (SYM (@lem6574501 A K ltle i k dom f neut)). Qed.
Lemma lem6574503 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1282 A K ltle i k dom f neut) : term1282 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6574506 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1281 A K ltle i k dom f neut) : term1281 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6574507 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1283 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1281 A K ltle i k dom f neut => @lem6574506 A K ltle i k dom f neut h0). Qed.
Lemma lem6574508 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1283 A K ltle i k dom f neut) : term1283 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6574509 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1281 A K ltle i k dom f neut) : term1281 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6574510 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1281 A K ltle i k dom f neut) (h2 : term1283 A K ltle i k dom f neut) : term1281 A K ltle i k dom f neut.
Proof. exact (@lem6574508 A K ltle i k dom f neut h2 (@lem6574509 A K ltle i k dom f neut h1)). Qed.
Lemma lem6574511 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1281 A K ltle i k dom f neut) : term1284 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1283 A K ltle i k dom f neut => @lem6574510 A K ltle i k dom f neut h1 h0). Qed.
Lemma lem6574512 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1283 A K ltle i k dom f neut) : term1283 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6574513 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1281 A K ltle i k dom f neut) (h2 : term1283 A K ltle i k dom f neut) : term1281 A K ltle i k dom f neut.
Proof. exact (@lem6574511 A K ltle i k dom f neut h1 (@lem6574512 A K ltle i k dom f neut h2)). Qed.
Lemma lem6574514 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1283 A K ltle i k dom f neut) : term1283 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1281 A K ltle i k dom f neut => @lem6574513 A K ltle i k dom f neut h0 h1). Qed.
Lemma lem6574515 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1285 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1283 A K ltle i k dom f neut => @lem6574514 A K ltle i k dom f neut h0). Qed.
Lemma lem6574518 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1283 A K ltle i k dom f neut.
Proof. exact (@lem6574515 A K ltle i k dom f neut (@lem6574507 A K ltle i k dom f neut)). Qed.
Lemma lem6574519 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1283 A K ltle i k dom f neut.
Proof. exact (@lem6574518 A K ltle i k dom f neut). Qed.
Lemma lem6574545 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6574546 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1281 A K ltle i k dom f neut) = (term1286 A K ltle i k dom f neut).
Proof. exact (@lem6574545 (term1282 A K ltle i k dom f neut)). Qed.
Lemma lem6574548 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6574549 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1286 A K ltle i k dom f neut) = (term1280 A K ltle i k dom f neut).
Proof. exact (@lem6574548 (term1280 A K ltle i k dom f neut)). Qed.
Lemma lem6574552 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1281 A K ltle i k dom f neut) = (term1280 A K ltle i k dom f neut).
Proof. exact (TRANS (@lem6574546 A K ltle i k dom f neut) (@lem6574549 A K ltle i k dom f neut)). Qed.
Lemma lem6574603 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1287 A K i k dom f neut) = (term1288 A K i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6574552 A K ltle i k dom f neut)). Qed.
Lemma lem6574604 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6574605 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1289 A K i k dom f neut) = (term1290 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6574604 K) (@lem6574603 A K i k dom f neut)). Qed.
Lemma lem6574610 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1291 A K k dom f neut) = (term1292 A K k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6574605 A K i k dom f neut)). Qed.
Lemma lem6574611 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574612 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1293 A K k dom f neut) = (term1294 A K k dom f neut).
Proof. exact (MK_COMB (@lem6574611 K) (@lem6574610 A K k dom f neut)). Qed.
Lemma lem6574617 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1295 A K dom f neut) = (term1296 A K dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6574612 A K k dom f neut)). Qed.
Lemma lem6574618 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6574619 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1297 A K dom f neut) = (term1298 A K dom f neut).
Proof. exact (MK_COMB (@lem6574618 K) (@lem6574617 A K dom f neut)). Qed.
Lemma lem6574624 {A K : Type'} (f : K -> A) (neut : A) : (term1299 A K f neut) = (term1300 A K f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6574619 A K dom f neut)). Qed.
Lemma lem6574625 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6574626 {A K : Type'} (f : K -> A) (neut : A) : (term1301 A K f neut) = (term1302 A K f neut).
Proof. exact (MK_COMB (@lem6574625 A) (@lem6574624 A K f neut)). Qed.
Lemma lem6574631 {A K : Type'} (neut : A) : (term1303 A K neut) = (term1304 A K neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6574626 A K f neut)). Qed.
Lemma lem6574632 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6574633 {A K : Type'} (neut : A) : (term1305 A K neut) = (term1306 A K neut).
Proof. exact (MK_COMB (@lem6574632 A K) (@lem6574631 A K neut)). Qed.
Lemma lem6574638 {A K : Type'} : (term1307 A K) = (term1308 A K).
Proof. exact (fun_ext (fun neut : A => @lem6574633 A K neut)). Qed.
Lemma lem6574639 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6574646 {A K : Type'} : (term1309 A K) = (term1310 A K).
Proof. exact (MK_COMB (@lem6574639 A) (@lem6574638 A K)). Qed.
Lemma lem6574647 {A K : Type'} (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : _86190 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6574648 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6574649 {A K : Type'} (k : K -> Prop) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6574647 A K _86190 h1) (@lem6574648 K k)). Qed.
Lemma lem6574650 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6574651 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term709 A K _86190 k) = (term709 A K _86190 k).
Proof. exact (eq_refl (term709 A K _86190 k)). Qed.
Lemma lem6574652 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term707 A K k)) = ((_86190 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6574651 A K _86190 k) (@lem6574650 A K k)). Qed.
Lemma lem6574653 {A K : Type'} (k : K -> Prop) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6574652 A K _86190 k) (@lem6574649 A K k _86190 h1)). Qed.
Lemma lem6574654 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6574655 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6574653 A K k _86190 h1) (@lem6574654 A dom)). Qed.
Lemma lem6574656 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6574657 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86190 k dom) = (term712 A K _86190 k dom).
Proof. exact (eq_refl (term712 A K _86190 k dom)). Qed.
Lemma lem6574658 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term710 A K k dom)) = ((_86190 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6574657 A K _86190 k dom) (@lem6574656 A K k dom)). Qed.
Lemma lem6574659 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6574658 A K _86190 k dom) (@lem6574655 A K k dom _86190 h1)). Qed.
Lemma lem6574660 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6574661 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6574659 A K k dom _86190 h1) (@lem6574660 A K f)). Qed.
Lemma lem6574662 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6574663 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86190 k dom f) = (term715 A K _86190 k dom f).
Proof. exact (eq_refl (term715 A K _86190 k dom f)). Qed.
Lemma lem6574664 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term713 A K k dom f)) = ((_86190 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6574663 A K _86190 k dom f) (@lem6574662 A K k dom f)). Qed.
Lemma lem6574665 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6574664 A K _86190 k dom f) (@lem6574661 A K k dom f _86190 h1)). Qed.
Lemma lem6574666 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6574667 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6574665 A K k dom f _86190 h1) (@lem6574666 A neut)). Qed.
Lemma lem6574668 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6574669 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86190 k dom f neut) = (term717 A K _86190 k dom f neut).
Proof. exact (eq_refl (term717 A K _86190 k dom f neut)). Qed.
Lemma lem6574670 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term716 A K k dom f neut)) = ((_86190 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6574669 A K _86190 k dom f neut) (@lem6574668 A K k dom f neut)). Qed.
Lemma lem6574671 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (_86190 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6574670 A K _86190 k dom f neut) (@lem6574667 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574705 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1151 A K i k dom f x neut).
Proof. exact (eq_refl (term1151 A K i k dom f x neut)). Qed.
Lemma lem6574706 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1277 A K i k dom f neut) = (term1277 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6574705 A K i k dom f x neut)). Qed.
Lemma lem6574707 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574708 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1278 A K i k dom f neut) = (term1278 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6574707 K) (@lem6574706 A K i k dom f neut)). Qed.
Lemma lem6574709 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6574710 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1279 A K i k dom f neut) = (term1279 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6574709) (@lem6574708 A K i k dom f neut)). Qed.
Lemma lem6574712 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term631 A K k dom f neut) = (_86190 k dom f neut).
Proof. exact (SYM (@lem6574671 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574713 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term631 A K k dom f neut) = (_86190 k dom f neut).
Proof. exact (@lem6574712 A K k dom f neut _86190 h1). Qed.
Lemma lem6574714 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6574715 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574714 K) (@lem6574713 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574716 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6574717 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574716 K) (@lem6574715 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574744 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6574745 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6574744 K k ltle j i)). Qed.
Lemma lem6574746 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574747 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6574746 K) (@lem6574745 K k ltle i)). Qed.
Lemma lem6574748 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574749 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6574748) (@lem6574747 K k ltle i)). Qed.
Lemma lem6574750 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574749 K k ltle i) (@lem6574717 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574789 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6574790 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6574789 A K ltle k dom f neut j i)). Qed.
Lemma lem6574791 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574792 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6574791 K) (@lem6574790 A K ltle k dom f neut i)). Qed.
Lemma lem6574793 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6574794 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6574793) (@lem6574792 A K ltle k dom f neut i)). Qed.
Lemma lem6574795 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574794 A K ltle k dom f neut i) (@lem6574750 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574802 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6574803 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574802 K k i) (@lem6574795 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574810 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6574811 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1272 A K ltle i k dom f neut) = (term1311 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574810 A K dom f i) (@lem6574803 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574822 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6574823 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1274 A K ltle i k dom f neut) = (term1312 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574822 A K f i neut) (@lem6574811 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574824 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574825 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1275 A K ltle i k dom f neut) = (term1313 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574824) (@lem6574823 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574826 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1280 A K ltle i k dom f neut) = (term1314 A K ltle _86190 i k dom f neut).
Proof. exact (MK_COMB (@lem6574825 A K ltle i k dom f neut _86190 h1) (@lem6574710 A K i k dom f neut)). Qed.
Lemma lem6574827 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1288 A K i k dom f neut) = (term1315 A K _86190 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6574826 A K ltle i k dom f neut _86190 h1)). Qed.
Lemma lem6574828 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6574829 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1290 A K i k dom f neut) = (term1316 A K _86190 i k dom f neut).
Proof. exact (MK_COMB (@lem6574828 K) (@lem6574827 A K i k dom f neut _86190 h1)). Qed.
Lemma lem6574830 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1292 A K k dom f neut) = (term1317 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6574829 A K i k dom f neut _86190 h1)). Qed.
Lemma lem6574831 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574832 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1294 A K k dom f neut) = (term1318 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574831 K) (@lem6574830 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574833 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1296 A K dom f neut) = (term1319 A K _86190 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6574832 A K k dom f neut _86190 h1)). Qed.
Lemma lem6574834 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6574835 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1298 A K dom f neut) = (term1320 A K _86190 dom f neut).
Proof. exact (MK_COMB (@lem6574834 K) (@lem6574833 A K dom f neut _86190 h1)). Qed.
Lemma lem6574836 {A K : Type'} (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1300 A K f neut) = (term1321 A K _86190 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6574835 A K dom f neut _86190 h1)). Qed.
Lemma lem6574837 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6574838 {A K : Type'} (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1302 A K f neut) = (term1322 A K _86190 f neut).
Proof. exact (MK_COMB (@lem6574837 A) (@lem6574836 A K f neut _86190 h1)). Qed.
Lemma lem6574839 {A K : Type'} (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1304 A K neut) = (term1323 A K _86190 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6574838 A K f neut _86190 h1)). Qed.
Lemma lem6574840 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6574841 {A K : Type'} (neut : A) (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1306 A K neut) = (term1324 A K _86190 neut).
Proof. exact (MK_COMB (@lem6574840 A K) (@lem6574839 A K neut _86190 h1)). Qed.
Lemma lem6574842 {A K : Type'} (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1308 A K) = (term1325 A K _86190).
Proof. exact (fun_ext (fun neut : A => @lem6574841 A K neut _86190 h1)). Qed.
Lemma lem6574843 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6574844 {A K : Type'} (_86190 : type835 A K) (h1 : _86190 = (term706 A K)) : (term1310 A K) = (term1326 A K _86190).
Proof. exact (MK_COMB (@lem6574843 A) (@lem6574842 A K _86190 h1)). Qed.
Lemma lem6574845 {A K : Type'} (_86190 : type835 A K) : term1327 A K _86190.
Proof. exact (fun h0 : _86190 = (term706 A K) => @lem6574844 A K _86190 h0). Qed.
Lemma lem6574846 {A K : Type'} : term1328 A K.
Proof. exact (fun _86190 : type835 A K => @lem6574845 A K _86190). Qed.
Lemma lem6574848 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6574849 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6574848 (type835 A K) P c Q). Qed.
Lemma lem6574850 {A K : Type'} : term1329 A K.
Proof. exact (@lem6574849 A K (term1310 A K) (term706 A K) (term1330 A K)). Qed.
Lemma lem6574851 {A K : Type'} (_86190 : type835 A K) : (term1331 A K _86190) = (term1326 A K _86190).
Proof. exact (eq_refl (term1331 A K _86190)). Qed.
Lemma lem6574852 {A K : Type'} : (term1332 A K) = (term1332 A K).
Proof. exact (eq_refl (term1332 A K)). Qed.
Lemma lem6574853 {A K : Type'} (_86190 : type835 A K) : ((term1310 A K) = (term1331 A K _86190)) = ((term1310 A K) = (term1326 A K _86190)).
Proof. exact (MK_COMB (@lem6574852 A K) (@lem6574851 A K _86190)). Qed.
Lemma lem6574854 {A K : Type'} (_86190 : type835 A K) : (term746 A K _86190) = (term746 A K _86190).
Proof. exact (eq_refl (term746 A K _86190)). Qed.
Lemma lem6574855 {A K : Type'} (_86190 : type835 A K) : (term1333 A K _86190) = (term1327 A K _86190).
Proof. exact (MK_COMB (@lem6574854 A K _86190) (@lem6574853 A K _86190)). Qed.
Lemma lem6574856 {A K : Type'} : (term1334 A K) = (term1335 A K).
Proof. exact (fun_ext (fun _86190 : type835 A K => @lem6574855 A K _86190)). Qed.
Lemma lem6574857 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6574858 {A K : Type'} : (term1336 A K) = (term1328 A K).
Proof. exact (MK_COMB (@lem6574857 A K) (@lem6574856 A K)). Qed.
Lemma lem6574859 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574860 {A K : Type'} : (term1337 A K) = (term1338 A K).
Proof. exact (MK_COMB (@lem6574859) (@lem6574858 A K)). Qed.
Lemma lem6574861 {A K : Type'} (_86190 : type835 A K) : (term1331 A K _86190) = (term1326 A K _86190).
Proof. exact (eq_refl (term1331 A K _86190)). Qed.
Lemma lem6574862 {A K : Type'} (_86190 : type835 A K) : (term746 A K _86190) = (term746 A K _86190).
Proof. exact (eq_refl (term746 A K _86190)). Qed.
Lemma lem6574863 {A K : Type'} (_86190 : type835 A K) : (term1339 A K _86190) = (term1340 A K _86190).
Proof. exact (MK_COMB (@lem6574862 A K _86190) (@lem6574861 A K _86190)). Qed.
Lemma lem6574864 {A K : Type'} : (term1341 A K) = (term1342 A K).
Proof. exact (fun_ext (fun _86190 : type835 A K => @lem6574863 A K _86190)). Qed.
Lemma lem6574865 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6574866 {A K : Type'} : (term1343 A K) = (term1344 A K).
Proof. exact (MK_COMB (@lem6574865 A K) (@lem6574864 A K)). Qed.
Lemma lem6574867 {A K : Type'} : (term1332 A K) = (term1332 A K).
Proof. exact (eq_refl (term1332 A K)). Qed.
Lemma lem6574868 {A K : Type'} : ((term1310 A K) = (term1343 A K)) = ((term1310 A K) = (term1344 A K)).
Proof. exact (MK_COMB (@lem6574867 A K) (@lem6574866 A K)). Qed.
Lemma lem6574869 {A K : Type'} : (term1329 A K) = (term1345 A K).
Proof. exact (MK_COMB (@lem6574860 A K) (@lem6574868 A K)). Qed.
Lemma lem6574870 {A K : Type'} : term1345 A K.
Proof. exact (EQ_MP (@lem6574869 A K) (@lem6574850 A K)). Qed.
Lemma lem6574871 {A K : Type'} : (term1310 A K) = (term1344 A K).
Proof. exact (@lem6574870 A K (@lem6574846 A K)). Qed.
Lemma lem6574873 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6574874 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6574873 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6574875 {A K : Type'} (_86190 : type835 A K) : (_86190 = (term764 A K)) = (term765 A K _86190).
Proof. exact (@lem6574874 A K _86190 (term706 A K)). Qed.
Lemma lem6574876 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6574877 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6574876 A K k)). Qed.
Lemma lem6574878 {A K : Type'} (_86190 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190)). Qed.
Lemma lem6574879 {A K : Type'} (_86190 : type835 A K) : (_86190 = (term764 A K)) = (_86190 = (term706 A K)).
Proof. exact (MK_COMB (@lem6574878 A K _86190) (@lem6574877 A K)). Qed.
Lemma lem6574880 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574881 {A K : Type'} (_86190 : type835 A K) : (term766 A K _86190) = (term767 A K _86190).
Proof. exact (MK_COMB (@lem6574880) (@lem6574879 A K _86190)). Qed.
Lemma lem6574882 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6574883 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term709 A K _86190 k) = (term709 A K _86190 k).
Proof. exact (eq_refl (term709 A K _86190 k)). Qed.
Lemma lem6574884 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term707 A K k)) = ((_86190 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6574883 A K _86190 k) (@lem6574882 A K k)). Qed.
Lemma lem6574885 {A K : Type'} (_86190 : type835 A K) : (term768 A K _86190) = (term769 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6574884 A K _86190 k)). Qed.
Lemma lem6574886 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6574887 {A K : Type'} (_86190 : type835 A K) : (term765 A K _86190) = (term770 A K _86190).
Proof. exact (MK_COMB (@lem6574886 K) (@lem6574885 A K _86190)). Qed.
Lemma lem6574888 {A K : Type'} (_86190 : type835 A K) : ((_86190 = (term764 A K)) = (term765 A K _86190)) = ((_86190 = (term706 A K)) = (term770 A K _86190)).
Proof. exact (MK_COMB (@lem6574881 A K _86190) (@lem6574887 A K _86190)). Qed.
Lemma lem6574889 {A K : Type'} (_86190 : type835 A K) : (_86190 = (term706 A K)) = (term770 A K _86190).
Proof. exact (EQ_MP (@lem6574888 A K _86190) (@lem6574875 A K _86190)). Qed.
Lemma lem6574891 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6574892 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6574891 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6574893 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term773 A K k)) = (term774 A K _86190 k).
Proof. exact (@lem6574892 A K (_86190 k) (term708 A K k)). Qed.
Lemma lem6574894 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6574895 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6574894 A K k dom)). Qed.
Lemma lem6574896 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term709 A K _86190 k) = (term709 A K _86190 k).
Proof. exact (eq_refl (term709 A K _86190 k)). Qed.
Lemma lem6574897 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term773 A K k)) = ((_86190 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6574896 A K _86190 k) (@lem6574895 A K k)). Qed.
Lemma lem6574898 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574899 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term775 A K _86190 k) = (term776 A K _86190 k).
Proof. exact (MK_COMB (@lem6574898) (@lem6574897 A K _86190 k)). Qed.
Lemma lem6574900 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6574901 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86190 k dom) = (term712 A K _86190 k dom).
Proof. exact (eq_refl (term712 A K _86190 k dom)). Qed.
Lemma lem6574902 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term710 A K k dom)) = ((_86190 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6574901 A K _86190 k dom) (@lem6574900 A K k dom)). Qed.
Lemma lem6574903 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term777 A K _86190 k) = (term778 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6574902 A K _86190 k dom)). Qed.
Lemma lem6574904 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6574905 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term774 A K _86190 k) = (term779 A K _86190 k).
Proof. exact (MK_COMB (@lem6574904 A) (@lem6574903 A K _86190 k)). Qed.
Lemma lem6574906 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (((_86190 k) = (term773 A K k)) = (term774 A K _86190 k)) = (((_86190 k) = (term708 A K k)) = (term779 A K _86190 k)).
Proof. exact (MK_COMB (@lem6574899 A K _86190 k) (@lem6574905 A K _86190 k)). Qed.
Lemma lem6574907 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term708 A K k)) = (term779 A K _86190 k).
Proof. exact (EQ_MP (@lem6574906 A K _86190 k) (@lem6574893 A K _86190 k)). Qed.
Lemma lem6574909 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6574910 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6574909 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6574911 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term782 A K k dom)) = (term783 A K _86190 k dom).
Proof. exact (@lem6574910 A K (_86190 k dom) (term711 A K k dom)). Qed.
Lemma lem6574912 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6574913 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6574912 A K k dom f)). Qed.
Lemma lem6574914 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86190 k dom) = (term712 A K _86190 k dom).
Proof. exact (eq_refl (term712 A K _86190 k dom)). Qed.
Lemma lem6574915 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term782 A K k dom)) = ((_86190 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6574914 A K _86190 k dom) (@lem6574913 A K k dom)). Qed.
Lemma lem6574916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574917 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _86190 k dom) = (term785 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6574916) (@lem6574915 A K _86190 k dom)). Qed.
Lemma lem6574918 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6574919 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86190 k dom f) = (term715 A K _86190 k dom f).
Proof. exact (eq_refl (term715 A K _86190 k dom f)). Qed.
Lemma lem6574920 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term713 A K k dom f)) = ((_86190 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6574919 A K _86190 k dom f) (@lem6574918 A K k dom f)). Qed.
Lemma lem6574921 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _86190 k dom) = (term787 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6574920 A K _86190 k dom f)). Qed.
Lemma lem6574922 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6574923 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _86190 k dom) = (term788 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6574922 A K) (@lem6574921 A K _86190 k dom)). Qed.
Lemma lem6574924 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_86190 k dom) = (term782 A K k dom)) = (term783 A K _86190 k dom)) = (((_86190 k dom) = (term711 A K k dom)) = (term788 A K _86190 k dom)).
Proof. exact (MK_COMB (@lem6574917 A K _86190 k dom) (@lem6574923 A K _86190 k dom)). Qed.
Lemma lem6574925 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term711 A K k dom)) = (term788 A K _86190 k dom).
Proof. exact (EQ_MP (@lem6574924 A K _86190 k dom) (@lem6574911 A K _86190 k dom)). Qed.
Lemma lem6574927 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6574928 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6574927 (K -> Prop) A s t). Qed.
Lemma lem6574929 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term791 A K k dom f)) = (term792 A K _86190 k dom f).
Proof. exact (@lem6574928 A K (_86190 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6574930 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6574931 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6574930 A K k dom f neut)). Qed.
Lemma lem6574932 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86190 k dom f) = (term715 A K _86190 k dom f).
Proof. exact (eq_refl (term715 A K _86190 k dom f)). Qed.
Lemma lem6574933 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term791 A K k dom f)) = ((_86190 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6574932 A K _86190 k dom f) (@lem6574931 A K k dom f)). Qed.
Lemma lem6574934 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574935 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _86190 k dom f) = (term794 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6574934) (@lem6574933 A K _86190 k dom f)). Qed.
Lemma lem6574936 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6574937 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86190 k dom f neut) = (term717 A K _86190 k dom f neut).
Proof. exact (eq_refl (term717 A K _86190 k dom f neut)). Qed.
Lemma lem6574938 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term716 A K k dom f neut)) = ((_86190 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6574937 A K _86190 k dom f neut) (@lem6574936 A K k dom f neut)). Qed.
Lemma lem6574939 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _86190 k dom f) = (term796 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6574938 A K _86190 k dom f neut)). Qed.
Lemma lem6574940 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6574941 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _86190 k dom f) = (term797 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6574940 A) (@lem6574939 A K _86190 k dom f)). Qed.
Lemma lem6574942 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_86190 k dom f) = (term791 A K k dom f)) = (term792 A K _86190 k dom f)) = (((_86190 k dom f) = (term714 A K k dom f)) = (term797 A K _86190 k dom f)).
Proof. exact (MK_COMB (@lem6574935 A K _86190 k dom f) (@lem6574941 A K _86190 k dom f)). Qed.
Lemma lem6574943 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term714 A K k dom f)) = (term797 A K _86190 k dom f).
Proof. exact (EQ_MP (@lem6574942 A K _86190 k dom f) (@lem6574929 A K _86190 k dom f)). Qed.
Lemma lem6574945 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6574946 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6574945 Prop K s t). Qed.
Lemma lem6574947 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _86190 k dom f neut).
Proof. exact (@lem6574946 K (_86190 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6574948 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6574949 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6574948 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574950 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86190 k dom f neut) = (term717 A K _86190 k dom f neut).
Proof. exact (eq_refl (term717 A K _86190 k dom f neut)). Qed.
Lemma lem6574951 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term799 A K k dom f neut)) = ((_86190 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6574950 A K _86190 k dom f neut) (@lem6574949 A K k dom f neut)). Qed.
Lemma lem6574952 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6574953 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _86190 k dom f neut) = (term803 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574952) (@lem6574951 A K _86190 k dom f neut)). Qed.
Lemma lem6574954 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6574955 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _86190 k dom f neut GEN_PVAR_272) = (term804 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6574956 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6574955 A K _86190 k dom f neut GEN_PVAR_272) (@lem6574954 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574957 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _86190 k dom f neut) = (term806 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6574956 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574958 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574959 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _86190 k dom f neut) = (term807 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574958 K) (@lem6574957 A K _86190 k dom f neut)). Qed.
Lemma lem6574960 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_86190 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _86190 k dom f neut)) = (((_86190 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86190 k dom f neut)).
Proof. exact (MK_COMB (@lem6574953 A K _86190 k dom f neut) (@lem6574959 A K _86190 k dom f neut)). Qed.
Lemma lem6574961 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86190 k dom f neut).
Proof. exact (EQ_MP (@lem6574960 A K _86190 k dom f neut) (@lem6574947 A K _86190 k dom f neut)). Qed.
Lemma lem6574962 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6574963 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86190 k dom f neut) = (term806 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6574962 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6574964 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6574965 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86190 k dom f neut) = (term807 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6574964 K) (@lem6574963 A K _86190 k dom f neut)). Qed.
Lemma lem6574966 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86190 k dom f neut).
Proof. exact (TRANS (@lem6574961 A K _86190 k dom f neut) (@lem6574965 A K _86190 k dom f neut)). Qed.
Lemma lem6574967 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _86190 k dom f) = (term808 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6574966 A K _86190 k dom f neut)). Qed.
Lemma lem6574968 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6574969 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _86190 k dom f) = (term809 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6574968 A) (@lem6574967 A K _86190 k dom f)). Qed.
Lemma lem6574970 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86190 k dom f) = (term714 A K k dom f)) = (term809 A K _86190 k dom f).
Proof. exact (TRANS (@lem6574943 A K _86190 k dom f) (@lem6574969 A K _86190 k dom f)). Qed.
Lemma lem6574971 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _86190 k dom) = (term810 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6574970 A K _86190 k dom f)). Qed.
Lemma lem6574972 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6574973 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _86190 k dom) = (term811 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6574972 A K) (@lem6574971 A K _86190 k dom)). Qed.
Lemma lem6574974 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86190 k dom) = (term711 A K k dom)) = (term811 A K _86190 k dom).
Proof. exact (TRANS (@lem6574925 A K _86190 k dom) (@lem6574973 A K _86190 k dom)). Qed.
Lemma lem6574975 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term778 A K _86190 k) = (term812 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6574974 A K _86190 k dom)). Qed.
Lemma lem6574976 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6574977 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term779 A K _86190 k) = (term813 A K _86190 k).
Proof. exact (MK_COMB (@lem6574976 A) (@lem6574975 A K _86190 k)). Qed.
Lemma lem6574978 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((_86190 k) = (term708 A K k)) = (term813 A K _86190 k).
Proof. exact (TRANS (@lem6574907 A K _86190 k) (@lem6574977 A K _86190 k)). Qed.
Lemma lem6574979 {A K : Type'} (_86190 : type835 A K) : (term769 A K _86190) = (term814 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6574978 A K _86190 k)). Qed.
Lemma lem6574980 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6574981 {A K : Type'} (_86190 : type835 A K) : (term770 A K _86190) = (term815 A K _86190).
Proof. exact (MK_COMB (@lem6574980 K) (@lem6574979 A K _86190)). Qed.
Lemma lem6574982 {A K : Type'} (_86190 : type835 A K) : (_86190 = (term706 A K)) = (term815 A K _86190).
Proof. exact (TRANS (@lem6574889 A K _86190) (@lem6574981 A K _86190)). Qed.
Lemma lem6574983 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6574984 {A K : Type'} (_86190 : type835 A K) : (term746 A K _86190) = (term816 A K _86190).
Proof. exact (MK_COMB (@lem6574983) (@lem6574982 A K _86190)). Qed.
Lemma lem6574985 {A K : Type'} (_86190 : type835 A K) : (term1326 A K _86190) = (term1326 A K _86190).
Proof. exact (eq_refl (term1326 A K _86190)). Qed.
Lemma lem6574986 {A K : Type'} (_86190 : type835 A K) : (term1340 A K _86190) = (term1346 A K _86190).
Proof. exact (MK_COMB (@lem6574984 A K _86190) (@lem6574985 A K _86190)). Qed.
Lemma lem6574987 {A K : Type'} : (term1342 A K) = (term1347 A K).
Proof. exact (fun_ext (fun _86190 : type835 A K => @lem6574986 A K _86190)). Qed.
Lemma lem6574988 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6574989 {A K : Type'} : (term1344 A K) = (term1348 A K).
Proof. exact (MK_COMB (@lem6574988 A K) (@lem6574987 A K)). Qed.
Lemma lem6574990 {A K : Type'} : (term1332 A K) = (term1332 A K).
Proof. exact (eq_refl (term1332 A K)). Qed.
Lemma lem6574991 {A K : Type'} : ((term1310 A K) = (term1344 A K)) = ((term1310 A K) = (term1348 A K)).
Proof. exact (MK_COMB (@lem6574990 A K) (@lem6574989 A K)). Qed.
Lemma lem6574994 {A K : Type'} : (term1310 A K) = (term1348 A K).
Proof. exact (EQ_MP (@lem6574991 A K) (@lem6574871 A K)). Qed.
Lemma lem6574995 {A K : Type'} : (term1309 A K) = (term1348 A K).
Proof. exact (TRANS (@lem6574646 A K) (@lem6574994 A K)). Qed.
Lemma lem6575012 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1151 A K i k dom f x neut).
Proof. exact (eq_refl (term1151 A K i k dom f x neut)). Qed.
Lemma lem6575013 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1277 A K i k dom f neut) = (term1277 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6575012 A K i k dom f x neut)). Qed.
Lemma lem6575014 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575015 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1278 A K i k dom f neut) = (term1278 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6575014 K) (@lem6575013 A K i k dom f neut)). Qed.
Lemma lem6575016 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6575017 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1279 A K i k dom f neut) = (term1279 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6575016) (@lem6575015 A K i k dom f neut)). Qed.
Lemma lem6575018 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86190 k dom f neut) = (term719 A K _86190 k dom f neut).
Proof. exact (eq_refl (term719 A K _86190 k dom f neut)). Qed.
Lemma lem6575031 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6575032 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6575031 K k ltle j i)). Qed.
Lemma lem6575033 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575034 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6575033 K) (@lem6575032 K k ltle i)). Qed.
Lemma lem6575035 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575036 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6575035) (@lem6575034 K k ltle i)). Qed.
Lemma lem6575037 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _86190 k dom f neut) = (term720 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575036 K k ltle i) (@lem6575018 A K _86190 k dom f neut)). Qed.
Lemma lem6575056 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6575057 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6575056 A K ltle k dom f neut j i)). Qed.
Lemma lem6575058 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575059 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6575058 K) (@lem6575057 A K ltle k dom f neut i)). Qed.
Lemma lem6575060 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575061 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6575060) (@lem6575059 A K ltle k dom f neut i)). Qed.
Lemma lem6575062 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _86190 k dom f neut) = (term721 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575061 A K ltle k dom f neut i) (@lem6575037 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6575067 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6575068 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _86190 k dom f neut) = (term722 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575067 K k i) (@lem6575062 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6575071 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6575072 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _86190 k dom f neut) = (term1311 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575071 A K dom f i) (@lem6575068 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6575077 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6575078 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _86190 k dom f neut) = (term1312 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575077 A K f i neut) (@lem6575072 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6575079 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6575080 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _86190 k dom f neut) = (term1313 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575079) (@lem6575078 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6575081 {A K : Type'} (ltle : type1402 K) (_86190 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1314 A K ltle _86190 i k dom f neut) = (term1314 A K ltle _86190 i k dom f neut).
Proof. exact (MK_COMB (@lem6575080 A K ltle i _86190 k dom f neut) (@lem6575017 A K i k dom f neut)). Qed.
Lemma lem6575082 {A K : Type'} (_86190 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1315 A K _86190 i k dom f neut) = (term1315 A K _86190 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6575081 A K ltle _86190 i k dom f neut)). Qed.
Lemma lem6575083 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6575084 {A K : Type'} (_86190 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1316 A K _86190 i k dom f neut) = (term1316 A K _86190 i k dom f neut).
Proof. exact (MK_COMB (@lem6575083 K) (@lem6575082 A K _86190 i k dom f neut)). Qed.
Lemma lem6575085 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1317 A K _86190 k dom f neut) = (term1317 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6575084 A K _86190 i k dom f neut)). Qed.
Lemma lem6575086 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575087 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1318 A K _86190 k dom f neut) = (term1318 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575086 K) (@lem6575085 A K _86190 k dom f neut)). Qed.
Lemma lem6575088 {A K : Type'} (_86190 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1319 A K _86190 dom f neut) = (term1319 A K _86190 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575087 A K _86190 k dom f neut)). Qed.
Lemma lem6575089 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575090 {A K : Type'} (_86190 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1320 A K _86190 dom f neut) = (term1320 A K _86190 dom f neut).
Proof. exact (MK_COMB (@lem6575089 K) (@lem6575088 A K _86190 dom f neut)). Qed.
Lemma lem6575091 {A K : Type'} (_86190 : type835 A K) (f : K -> A) (neut : A) : (term1321 A K _86190 f neut) = (term1321 A K _86190 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575090 A K _86190 dom f neut)). Qed.
Lemma lem6575092 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575093 {A K : Type'} (_86190 : type835 A K) (f : K -> A) (neut : A) : (term1322 A K _86190 f neut) = (term1322 A K _86190 f neut).
Proof. exact (MK_COMB (@lem6575092 A) (@lem6575091 A K _86190 f neut)). Qed.
Lemma lem6575094 {A K : Type'} (_86190 : type835 A K) (neut : A) : (term1323 A K _86190 neut) = (term1323 A K _86190 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6575093 A K _86190 f neut)). Qed.
Lemma lem6575095 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575096 {A K : Type'} (_86190 : type835 A K) (neut : A) : (term1324 A K _86190 neut) = (term1324 A K _86190 neut).
Proof. exact (MK_COMB (@lem6575095 A K) (@lem6575094 A K _86190 neut)). Qed.
Lemma lem6575097 {A K : Type'} (_86190 : type835 A K) : (term1325 A K _86190) = (term1325 A K _86190).
Proof. exact (fun_ext (fun neut : A => @lem6575096 A K _86190 neut)). Qed.
Lemma lem6575098 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575099 {A K : Type'} (_86190 : type835 A K) : (term1326 A K _86190) = (term1326 A K _86190).
Proof. exact (MK_COMB (@lem6575098 A) (@lem6575097 A K _86190)). Qed.
Lemma lem6575100 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575101 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6575100 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575102 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6575103 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575102 K) (@lem6575101 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575106 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _86190 k dom f neut GEN_PVAR_272) = (term804 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575107 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6575106 A K _86190 k dom f neut GEN_PVAR_272) (@lem6575103 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575108 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86190 k dom f neut) = (term806 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6575107 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575109 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575110 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86190 k dom f neut) = (term807 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575109 K) (@lem6575108 A K _86190 k dom f neut)). Qed.
Lemma lem6575111 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _86190 k dom f) = (term808 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575110 A K _86190 k dom f neut)). Qed.
Lemma lem6575112 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575113 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _86190 k dom f) = (term809 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575112 A) (@lem6575111 A K _86190 k dom f)). Qed.
Lemma lem6575114 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _86190 k dom) = (term810 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575113 A K _86190 k dom f)). Qed.
Lemma lem6575115 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575116 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _86190 k dom) = (term811 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575115 A K) (@lem6575114 A K _86190 k dom)). Qed.
Lemma lem6575117 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term812 A K _86190 k) = (term812 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575116 A K _86190 k dom)). Qed.
Lemma lem6575118 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575119 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term813 A K _86190 k) = (term813 A K _86190 k).
Proof. exact (MK_COMB (@lem6575118 A) (@lem6575117 A K _86190 k)). Qed.
Lemma lem6575120 {A K : Type'} (_86190 : type835 A K) : (term814 A K _86190) = (term814 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575119 A K _86190 k)). Qed.
Lemma lem6575121 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575122 {A K : Type'} (_86190 : type835 A K) : (term815 A K _86190) = (term815 A K _86190).
Proof. exact (MK_COMB (@lem6575121 K) (@lem6575120 A K _86190)). Qed.
Lemma lem6575123 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6575124 {A K : Type'} (_86190 : type835 A K) : (term816 A K _86190) = (term816 A K _86190).
Proof. exact (MK_COMB (@lem6575123) (@lem6575122 A K _86190)). Qed.
Lemma lem6575125 {A K : Type'} (_86190 : type835 A K) : (term1346 A K _86190) = (term1346 A K _86190).
Proof. exact (MK_COMB (@lem6575124 A K _86190) (@lem6575099 A K _86190)). Qed.
Lemma lem6575126 {A K : Type'} : (term1347 A K) = (term1347 A K).
Proof. exact (fun_ext (fun _86190 : type835 A K => @lem6575125 A K _86190)). Qed.
Lemma lem6575127 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6575128 {A K : Type'} : (term1348 A K) = (term1348 A K).
Proof. exact (MK_COMB (@lem6575127 A K) (@lem6575126 A K)). Qed.
Lemma lem6575265 {A K : Type'} : (term1309 A K) = (term1348 A K).
Proof. exact (TRANS (@lem6574995 A K) (@lem6575128 A K)). Qed.
Lemma lem6575266 {A K : Type'} : (term1348 A K) = (term1309 A K).
Proof. exact (SYM (@lem6575265 A K)). Qed.
Lemma lem6575267 {A K : Type'} (_86190 : type835 A K) (h1 : term815 A K _86190) : term815 A K _86190.
Proof. exact (h1). Qed.
Lemma lem6575268 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1312 A K ltle i _86190 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6575269 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1278 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6575273 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575274 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6575275 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6575274 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575276 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575277 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6575279 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6575277) (@lem6575276 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575280 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6575279 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575281 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575282 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575281 K) (@lem6575280 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575283 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6575275 A K GEN_PVAR_272 k dom f neut) (@lem6575282 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575284 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6575273 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6575285 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6575286 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575285 K) (@lem6575284 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575288 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86190 k dom f neut GEN_PVAR_272) = (term831 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575289 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _86190 GEN_PVAR_272 k dom f neut) = (term832 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575288 A K _86190 k dom f neut GEN_PVAR_272) (@lem6575286 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575291 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _86190 k dom f neut GEN_PVAR_272) = (term833 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575292 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _86190 GEN_PVAR_272 k dom f neut) = (term835 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575291 A K _86190 k dom f neut GEN_PVAR_272) (@lem6575283 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575293 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575294 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _86190 GEN_PVAR_272 k dom f neut) = (term837 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575293) (@lem6575292 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575295 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _86190 GEN_PVAR_272 k dom f neut) = (term839 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575294 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6575289 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575296 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_86190 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575297 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86190 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6575296 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6575295 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575298 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86190 k dom f neut) = (term840 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6575297 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575299 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575300 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86190 k dom f neut) = (term841 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575299 K) (@lem6575298 A K _86190 k dom f neut)). Qed.
Lemma lem6575301 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _86190 k dom f) = (term842 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575300 A K _86190 k dom f neut)). Qed.
Lemma lem6575302 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575303 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _86190 k dom f) = (term843 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575302 A) (@lem6575301 A K _86190 k dom f)). Qed.
Lemma lem6575304 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _86190 k dom) = (term844 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575303 A K _86190 k dom f)). Qed.
Lemma lem6575305 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575306 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _86190 k dom) = (term845 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575305 A K) (@lem6575304 A K _86190 k dom)). Qed.
Lemma lem6575307 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term812 A K _86190 k) = (term846 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575306 A K _86190 k dom)). Qed.
Lemma lem6575308 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575309 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term813 A K _86190 k) = (term847 A K _86190 k).
Proof. exact (MK_COMB (@lem6575308 A) (@lem6575307 A K _86190 k)). Qed.
Lemma lem6575310 {A K : Type'} (_86190 : type835 A K) : (term814 A K _86190) = (term848 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575309 A K _86190 k)). Qed.
Lemma lem6575311 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575312 {A K : Type'} (_86190 : type835 A K) : (term815 A K _86190) = (term849 A K _86190).
Proof. exact (MK_COMB (@lem6575311 K) (@lem6575310 A K _86190)). Qed.
Lemma lem6575330 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6575331 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6575330 K P Q). Qed.
Lemma lem6575332 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _86190 k dom f neut) = (term853 A K _86190 k dom f neut).
Proof. exact (@lem6575331 K (term854 A K _86190 k dom f neut) (term855 A K _86190 k dom f neut)). Qed.
Lemma lem6575333 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _86190 k dom f neut GEN_PVAR_272) = (term835 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575334 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575335 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _86190 k dom f neut GEN_PVAR_272) = (term837 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575334) (@lem6575333 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575336 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _86190 k dom f neut GEN_PVAR_272) = (term832 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575337 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _86190 k dom f neut GEN_PVAR_272) = (term839 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6575335 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6575336 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575338 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _86190 k dom f neut) = (term840 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6575337 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575339 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575340 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _86190 k dom f neut) = (term841 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575339 K) (@lem6575338 A K _86190 k dom f neut)). Qed.
Lemma lem6575341 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6575342 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _86190 k dom f neut) = (term862 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575341) (@lem6575340 A K _86190 k dom f neut)). Qed.
Lemma lem6575343 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _86190 k dom f neut GEN_PVAR_272) = (term835 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575344 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _86190 k dom f neut) = (term854 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6575343 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575345 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575346 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _86190 k dom f neut) = (term865 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575345 K) (@lem6575344 A K _86190 k dom f neut)). Qed.
Lemma lem6575347 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575348 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _86190 k dom f neut) = (term867 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575347) (@lem6575346 A K _86190 k dom f neut)). Qed.
Lemma lem6575349 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _86190 k dom f neut GEN_PVAR_272) = (term832 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6575350 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _86190 k dom f neut) = (term855 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6575349 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6575351 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6575352 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _86190 k dom f neut) = (term870 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575351 K) (@lem6575350 A K _86190 k dom f neut)). Qed.
Lemma lem6575353 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _86190 k dom f neut) = (term871 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575348 A K _86190 k dom f neut) (@lem6575352 A K _86190 k dom f neut)). Qed.
Lemma lem6575354 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _86190 k dom f neut) = (term853 A K _86190 k dom f neut)) = ((term841 A K _86190 k dom f neut) = (term871 A K _86190 k dom f neut)).
Proof. exact (MK_COMB (@lem6575342 A K _86190 k dom f neut) (@lem6575353 A K _86190 k dom f neut)). Qed.
Lemma lem6575355 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _86190 k dom f neut) = (term871 A K _86190 k dom f neut).
Proof. exact (EQ_MP (@lem6575354 A K _86190 k dom f neut) (@lem6575332 A K _86190 k dom f neut)). Qed.
Lemma lem6575460 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _86190 k dom f) = (term872 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575355 A K _86190 k dom f neut)). Qed.
Lemma lem6575461 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575462 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _86190 k dom f) = (term873 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575461 A) (@lem6575460 A K _86190 k dom f)). Qed.
Lemma lem6575464 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6575465 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6575464 A P Q). Qed.
Lemma lem6575466 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _86190 k dom f) = (term875 A K _86190 k dom f).
Proof. exact (@lem6575465 A (term876 A K _86190 k dom f) (term877 A K _86190 k dom f)). Qed.
Lemma lem6575467 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _86190 k dom f neut) = (term865 A K _86190 k dom f neut).
Proof. exact (eq_refl (term878 A K _86190 k dom f neut)). Qed.
Lemma lem6575468 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575469 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _86190 k dom f neut) = (term867 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575468) (@lem6575467 A K _86190 k dom f neut)). Qed.
Lemma lem6575470 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _86190 k dom f neut) = (term870 A K _86190 k dom f neut).
Proof. exact (eq_refl (term880 A K _86190 k dom f neut)). Qed.
Lemma lem6575471 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _86190 k dom f neut) = (term871 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6575469 A K _86190 k dom f neut) (@lem6575470 A K _86190 k dom f neut)). Qed.
Lemma lem6575472 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _86190 k dom f) = (term872 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575471 A K _86190 k dom f neut)). Qed.
Lemma lem6575473 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575474 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _86190 k dom f) = (term873 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575473 A) (@lem6575472 A K _86190 k dom f)). Qed.
Lemma lem6575475 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6575476 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _86190 k dom f) = (term884 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575475) (@lem6575474 A K _86190 k dom f)). Qed.
Lemma lem6575477 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _86190 k dom f neut) = (term865 A K _86190 k dom f neut).
Proof. exact (eq_refl (term878 A K _86190 k dom f neut)). Qed.
Lemma lem6575478 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _86190 k dom f) = (term876 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575477 A K _86190 k dom f neut)). Qed.
Lemma lem6575479 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575480 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _86190 k dom f) = (term887 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575479 A) (@lem6575478 A K _86190 k dom f)). Qed.
Lemma lem6575481 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575482 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _86190 k dom f) = (term889 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575481) (@lem6575480 A K _86190 k dom f)). Qed.
Lemma lem6575483 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _86190 k dom f neut) = (term870 A K _86190 k dom f neut).
Proof. exact (eq_refl (term880 A K _86190 k dom f neut)). Qed.
Lemma lem6575484 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _86190 k dom f) = (term877 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6575483 A K _86190 k dom f neut)). Qed.
Lemma lem6575485 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6575486 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _86190 k dom f) = (term892 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575485 A) (@lem6575484 A K _86190 k dom f)). Qed.
Lemma lem6575487 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _86190 k dom f) = (term893 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575482 A K _86190 k dom f) (@lem6575486 A K _86190 k dom f)). Qed.
Lemma lem6575488 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _86190 k dom f) = (term875 A K _86190 k dom f)) = ((term873 A K _86190 k dom f) = (term893 A K _86190 k dom f)).
Proof. exact (MK_COMB (@lem6575476 A K _86190 k dom f) (@lem6575487 A K _86190 k dom f)). Qed.
Lemma lem6575489 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _86190 k dom f) = (term893 A K _86190 k dom f).
Proof. exact (EQ_MP (@lem6575488 A K _86190 k dom f) (@lem6575466 A K _86190 k dom f)). Qed.
Lemma lem6575602 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _86190 k dom f) = (term893 A K _86190 k dom f).
Proof. exact (TRANS (@lem6575462 A K _86190 k dom f) (@lem6575489 A K _86190 k dom f)). Qed.
Lemma lem6575603 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _86190 k dom) = (term894 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575602 A K _86190 k dom f)). Qed.
Lemma lem6575604 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575605 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _86190 k dom) = (term895 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575604 A K) (@lem6575603 A K _86190 k dom)). Qed.
Lemma lem6575607 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6575608 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6575607 (K -> A) P Q). Qed.
Lemma lem6575609 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _86190 k dom) = (term899 A K _86190 k dom).
Proof. exact (@lem6575608 A K (term900 A K _86190 k dom) (term901 A K _86190 k dom)). Qed.
Lemma lem6575610 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _86190 k dom f) = (term887 A K _86190 k dom f).
Proof. exact (eq_refl (term902 A K _86190 k dom f)). Qed.
Lemma lem6575611 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575612 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _86190 k dom f) = (term889 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575611) (@lem6575610 A K _86190 k dom f)). Qed.
Lemma lem6575613 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _86190 k dom f) = (term892 A K _86190 k dom f).
Proof. exact (eq_refl (term904 A K _86190 k dom f)). Qed.
Lemma lem6575614 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _86190 k dom f) = (term893 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6575612 A K _86190 k dom f) (@lem6575613 A K _86190 k dom f)). Qed.
Lemma lem6575615 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _86190 k dom) = (term894 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575614 A K _86190 k dom f)). Qed.
Lemma lem6575616 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575617 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _86190 k dom) = (term895 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575616 A K) (@lem6575615 A K _86190 k dom)). Qed.
Lemma lem6575618 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6575619 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _86190 k dom) = (term908 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575618) (@lem6575617 A K _86190 k dom)). Qed.
Lemma lem6575620 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _86190 k dom f) = (term887 A K _86190 k dom f).
Proof. exact (eq_refl (term902 A K _86190 k dom f)). Qed.
Lemma lem6575621 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _86190 k dom) = (term900 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575620 A K _86190 k dom f)). Qed.
Lemma lem6575622 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575623 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _86190 k dom) = (term911 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575622 A K) (@lem6575621 A K _86190 k dom)). Qed.
Lemma lem6575624 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575625 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _86190 k dom) = (term913 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575624) (@lem6575623 A K _86190 k dom)). Qed.
Lemma lem6575626 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _86190 k dom f) = (term892 A K _86190 k dom f).
Proof. exact (eq_refl (term904 A K _86190 k dom f)). Qed.
Lemma lem6575627 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _86190 k dom) = (term901 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6575626 A K _86190 k dom f)). Qed.
Lemma lem6575628 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6575629 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _86190 k dom) = (term916 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575628 A K) (@lem6575627 A K _86190 k dom)). Qed.
Lemma lem6575630 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _86190 k dom) = (term917 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575625 A K _86190 k dom) (@lem6575629 A K _86190 k dom)). Qed.
Lemma lem6575631 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _86190 k dom) = (term899 A K _86190 k dom)) = ((term895 A K _86190 k dom) = (term917 A K _86190 k dom)).
Proof. exact (MK_COMB (@lem6575619 A K _86190 k dom) (@lem6575630 A K _86190 k dom)). Qed.
Lemma lem6575632 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _86190 k dom) = (term917 A K _86190 k dom).
Proof. exact (EQ_MP (@lem6575631 A K _86190 k dom) (@lem6575609 A K _86190 k dom)). Qed.
Lemma lem6575753 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _86190 k dom) = (term917 A K _86190 k dom).
Proof. exact (TRANS (@lem6575605 A K _86190 k dom) (@lem6575632 A K _86190 k dom)). Qed.
Lemma lem6575754 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term846 A K _86190 k) = (term918 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575753 A K _86190 k dom)). Qed.
Lemma lem6575755 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575756 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term847 A K _86190 k) = (term919 A K _86190 k).
Proof. exact (MK_COMB (@lem6575755 A) (@lem6575754 A K _86190 k)). Qed.
Lemma lem6575758 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6575759 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6575758 (A -> Prop) P Q). Qed.
Lemma lem6575760 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term922 A K _86190 k) = (term923 A K _86190 k).
Proof. exact (@lem6575759 A (term924 A K _86190 k) (term925 A K _86190 k)). Qed.
Lemma lem6575761 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _86190 k dom) = (term911 A K _86190 k dom).
Proof. exact (eq_refl (term926 A K _86190 k dom)). Qed.
Lemma lem6575762 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575763 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _86190 k dom) = (term913 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575762) (@lem6575761 A K _86190 k dom)). Qed.
Lemma lem6575764 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _86190 k dom) = (term916 A K _86190 k dom).
Proof. exact (eq_refl (term928 A K _86190 k dom)). Qed.
Lemma lem6575765 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _86190 k dom) = (term917 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6575763 A K _86190 k dom) (@lem6575764 A K _86190 k dom)). Qed.
Lemma lem6575766 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term930 A K _86190 k) = (term918 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575765 A K _86190 k dom)). Qed.
Lemma lem6575767 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575768 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term922 A K _86190 k) = (term919 A K _86190 k).
Proof. exact (MK_COMB (@lem6575767 A) (@lem6575766 A K _86190 k)). Qed.
Lemma lem6575769 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6575770 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term931 A K _86190 k) = (term932 A K _86190 k).
Proof. exact (MK_COMB (@lem6575769) (@lem6575768 A K _86190 k)). Qed.
Lemma lem6575771 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _86190 k dom) = (term911 A K _86190 k dom).
Proof. exact (eq_refl (term926 A K _86190 k dom)). Qed.
Lemma lem6575772 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term933 A K _86190 k) = (term924 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575771 A K _86190 k dom)). Qed.
Lemma lem6575773 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575774 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term934 A K _86190 k) = (term935 A K _86190 k).
Proof. exact (MK_COMB (@lem6575773 A) (@lem6575772 A K _86190 k)). Qed.
Lemma lem6575775 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575776 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term936 A K _86190 k) = (term937 A K _86190 k).
Proof. exact (MK_COMB (@lem6575775) (@lem6575774 A K _86190 k)). Qed.
Lemma lem6575777 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _86190 k dom) = (term916 A K _86190 k dom).
Proof. exact (eq_refl (term928 A K _86190 k dom)). Qed.
Lemma lem6575778 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term938 A K _86190 k) = (term925 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6575777 A K _86190 k dom)). Qed.
Lemma lem6575779 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6575780 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term939 A K _86190 k) = (term940 A K _86190 k).
Proof. exact (MK_COMB (@lem6575779 A) (@lem6575778 A K _86190 k)). Qed.
Lemma lem6575781 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term923 A K _86190 k) = (term941 A K _86190 k).
Proof. exact (MK_COMB (@lem6575776 A K _86190 k) (@lem6575780 A K _86190 k)). Qed.
Lemma lem6575782 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((term922 A K _86190 k) = (term923 A K _86190 k)) = ((term919 A K _86190 k) = (term941 A K _86190 k)).
Proof. exact (MK_COMB (@lem6575770 A K _86190 k) (@lem6575781 A K _86190 k)). Qed.
Lemma lem6575783 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term919 A K _86190 k) = (term941 A K _86190 k).
Proof. exact (EQ_MP (@lem6575782 A K _86190 k) (@lem6575760 A K _86190 k)). Qed.
Lemma lem6575912 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term847 A K _86190 k) = (term941 A K _86190 k).
Proof. exact (TRANS (@lem6575756 A K _86190 k) (@lem6575783 A K _86190 k)). Qed.
Lemma lem6575913 {A K : Type'} (_86190 : type835 A K) : (term848 A K _86190) = (term942 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575912 A K _86190 k)). Qed.
Lemma lem6575914 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575915 {A K : Type'} (_86190 : type835 A K) : (term849 A K _86190) = (term943 A K _86190).
Proof. exact (MK_COMB (@lem6575914 K) (@lem6575913 A K _86190)). Qed.
Lemma lem6575917 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6575918 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6575917 (K -> Prop) P Q). Qed.
Lemma lem6575919 {A K : Type'} (_86190 : type835 A K) : (term944 A K _86190) = (term945 A K _86190).
Proof. exact (@lem6575918 K (term946 A K _86190) (term947 A K _86190)). Qed.
Lemma lem6575920 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term948 A K _86190 k) = (term935 A K _86190 k).
Proof. exact (eq_refl (term948 A K _86190 k)). Qed.
Lemma lem6575921 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575922 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term949 A K _86190 k) = (term937 A K _86190 k).
Proof. exact (MK_COMB (@lem6575921) (@lem6575920 A K _86190 k)). Qed.
Lemma lem6575923 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term950 A K _86190 k) = (term940 A K _86190 k).
Proof. exact (eq_refl (term950 A K _86190 k)). Qed.
Lemma lem6575924 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term951 A K _86190 k) = (term941 A K _86190 k).
Proof. exact (MK_COMB (@lem6575922 A K _86190 k) (@lem6575923 A K _86190 k)). Qed.
Lemma lem6575925 {A K : Type'} (_86190 : type835 A K) : (term952 A K _86190) = (term942 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575924 A K _86190 k)). Qed.
Lemma lem6575926 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575927 {A K : Type'} (_86190 : type835 A K) : (term944 A K _86190) = (term943 A K _86190).
Proof. exact (MK_COMB (@lem6575926 K) (@lem6575925 A K _86190)). Qed.
Lemma lem6575928 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6575929 {A K : Type'} (_86190 : type835 A K) : (term953 A K _86190) = (term954 A K _86190).
Proof. exact (MK_COMB (@lem6575928) (@lem6575927 A K _86190)). Qed.
Lemma lem6575930 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term948 A K _86190 k) = (term935 A K _86190 k).
Proof. exact (eq_refl (term948 A K _86190 k)). Qed.
Lemma lem6575931 {A K : Type'} (_86190 : type835 A K) : (term955 A K _86190) = (term946 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575930 A K _86190 k)). Qed.
Lemma lem6575932 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575933 {A K : Type'} (_86190 : type835 A K) : (term956 A K _86190) = (term957 A K _86190).
Proof. exact (MK_COMB (@lem6575932 K) (@lem6575931 A K _86190)). Qed.
Lemma lem6575934 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6575935 {A K : Type'} (_86190 : type835 A K) : (term958 A K _86190) = (term959 A K _86190).
Proof. exact (MK_COMB (@lem6575934) (@lem6575933 A K _86190)). Qed.
Lemma lem6575936 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term950 A K _86190 k) = (term940 A K _86190 k).
Proof. exact (eq_refl (term950 A K _86190 k)). Qed.
Lemma lem6575937 {A K : Type'} (_86190 : type835 A K) : (term960 A K _86190) = (term947 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6575936 A K _86190 k)). Qed.
Lemma lem6575938 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6575939 {A K : Type'} (_86190 : type835 A K) : (term961 A K _86190) = (term962 A K _86190).
Proof. exact (MK_COMB (@lem6575938 K) (@lem6575937 A K _86190)). Qed.
Lemma lem6575940 {A K : Type'} (_86190 : type835 A K) : (term945 A K _86190) = (term963 A K _86190).
Proof. exact (MK_COMB (@lem6575935 A K _86190) (@lem6575939 A K _86190)). Qed.
Lemma lem6575941 {A K : Type'} (_86190 : type835 A K) : ((term944 A K _86190) = (term945 A K _86190)) = ((term943 A K _86190) = (term963 A K _86190)).
Proof. exact (MK_COMB (@lem6575929 A K _86190) (@lem6575940 A K _86190)). Qed.
Lemma lem6575942 {A K : Type'} (_86190 : type835 A K) : (term943 A K _86190) = (term963 A K _86190).
Proof. exact (EQ_MP (@lem6575941 A K _86190) (@lem6575919 A K _86190)). Qed.
Lemma lem6576079 {A K : Type'} (_86190 : type835 A K) : (term849 A K _86190) = (term963 A K _86190).
Proof. exact (TRANS (@lem6575915 A K _86190) (@lem6575942 A K _86190)). Qed.
Lemma lem6576081 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6576082 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6576081 K P Q). Qed.
Lemma lem6576083 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _86190 GEN_PVAR_272 k dom f neut) = (term967 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6576082 K (term968 A K _86190 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576084 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576085 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6576084 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576086 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6576087 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6576086 K) (@lem6576085 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576088 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86190 k dom f neut GEN_PVAR_272) = (term831 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6576089 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _86190 GEN_PVAR_272 k dom f neut) = (term832 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6576088 A K _86190 k dom f neut GEN_PVAR_272) (@lem6576087 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576090 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576091 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _86190 GEN_PVAR_272 k dom f neut) = (term972 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6576090) (@lem6576089 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576092 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576093 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86190 k dom f neut GEN_PVAR_272) = (term831 A K _86190 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6576094 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _86190 GEN_PVAR_272 k dom f neut j) = (term974 A K _86190 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6576093 A K _86190 k dom f neut GEN_PVAR_272) (@lem6576092 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576095 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _86190 GEN_PVAR_272 k dom f neut) = (term976 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6576094 A K _86190 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576096 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6576097 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _86190 GEN_PVAR_272 k dom f neut) = (term977 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6576096 K) (@lem6576095 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576098 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _86190 GEN_PVAR_272 k dom f neut) = (term967 A K _86190 GEN_PVAR_272 k dom f neut)) = ((term832 A K _86190 GEN_PVAR_272 k dom f neut) = (term977 A K _86190 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6576091 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6576097 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576099 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _86190 GEN_PVAR_272 k dom f neut) = (term977 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6576098 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6576083 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576100 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _86190 k dom f neut) = (term978 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6576099 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576101 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576102 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _86190 k dom f neut) = (term979 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576101 K) (@lem6576100 A K _86190 k dom f neut)). Qed.
Lemma lem6576104 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6576105 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6576104 K K P). Qed.
Lemma lem6576106 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _86190 k dom f neut) = (term985 A K _86190 k dom f neut).
Proof. exact (@lem6576105 K (term986 A K _86190 k dom f neut)). Qed.
Lemma lem6576107 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _86190 k dom f neut GEN_PVAR_272) = (term976 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6576108 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576109 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _86190 k dom f neut GEN_PVAR_272 j) = (term989 A K _86190 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6576107 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6576108 K j)). Qed.
Lemma lem6576110 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _86190 GEN_PVAR_272 k dom f neut j) = (term974 A K _86190 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _86190 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576111 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _86190 k dom f neut GEN_PVAR_272 j) = (term974 A K _86190 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6576109 A K _86190 GEN_PVAR_272 k dom f neut j) (@lem6576110 A K _86190 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576112 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _86190 k dom f neut GEN_PVAR_272) = (term976 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6576111 A K _86190 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6576113 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6576114 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _86190 k dom f neut GEN_PVAR_272) = (term977 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6576113 K) (@lem6576112 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576115 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _86190 k dom f neut) = (term978 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6576114 A K _86190 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6576116 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576117 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _86190 k dom f neut) = (term979 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576116 K) (@lem6576115 A K _86190 k dom f neut)). Qed.
Lemma lem6576118 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576119 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _86190 k dom f neut) = (term994 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576118) (@lem6576117 A K _86190 k dom f neut)). Qed.
Lemma lem6576120 {A K : Type'} (_86190 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _86190 k dom f neut GEN_PVAR_272) = (term976 A K _86190 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _86190 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6576121 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6576122 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _86190 k dom f neut j GEN_PVAR_272) = (term996 A K _86190 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6576120 A K _86190 GEN_PVAR_272 k dom f neut) (@lem6576121 K j GEN_PVAR_272)). Qed.
Lemma lem6576123 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _86190 k dom f neut j GEN_PVAR_272) = (term997 A K _86190 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _86190 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6576124 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _86190 k dom f neut j GEN_PVAR_272) = (term997 A K _86190 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6576122 A K _86190 k dom f neut j GEN_PVAR_272) (@lem6576123 A K _86190 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6576125 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _86190 k dom f neut j) = (term999 A K _86190 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6576124 A K _86190 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6576126 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576127 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _86190 k dom f neut j) = (term1001 A K _86190 k dom f neut j).
Proof. exact (MK_COMB (@lem6576126 K) (@lem6576125 A K _86190 k dom f neut j)). Qed.
Lemma lem6576128 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _86190 k dom f neut) = (term1003 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6576127 A K _86190 k dom f neut j)). Qed.
Lemma lem6576129 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6576130 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _86190 k dom f neut) = (term1004 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576129 K) (@lem6576128 A K _86190 k dom f neut)). Qed.
Lemma lem6576131 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _86190 k dom f neut) = (term985 A K _86190 k dom f neut)) = ((term979 A K _86190 k dom f neut) = (term1004 A K _86190 k dom f neut)).
Proof. exact (MK_COMB (@lem6576119 A K _86190 k dom f neut) (@lem6576130 A K _86190 k dom f neut)). Qed.
Lemma lem6576132 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _86190 k dom f neut) = (term1004 A K _86190 k dom f neut).
Proof. exact (EQ_MP (@lem6576131 A K _86190 k dom f neut) (@lem6576106 A K _86190 k dom f neut)). Qed.
Lemma lem6576133 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _86190 k dom f neut) = (term1004 A K _86190 k dom f neut).
Proof. exact (TRANS (@lem6576102 A K _86190 k dom f neut) (@lem6576132 A K _86190 k dom f neut)). Qed.
Lemma lem6576134 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _86190 k dom f) = (term1005 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6576133 A K _86190 k dom f neut)). Qed.
Lemma lem6576135 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6576136 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _86190 k dom f) = (term1006 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576135 A) (@lem6576134 A K _86190 k dom f)). Qed.
Lemma lem6576138 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6576139 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6576138 A (K -> K) P). Qed.
Lemma lem6576140 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _86190 k dom f) = (term1010 A K _86190 k dom f).
Proof. exact (@lem6576139 A K (term1011 A K _86190 k dom f)). Qed.
Lemma lem6576141 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _86190 k dom f neut) = (term1003 A K _86190 k dom f neut).
Proof. exact (eq_refl (term1012 A K _86190 k dom f neut)). Qed.
Lemma lem6576142 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576143 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _86190 k dom f neut j) = (term1014 A K _86190 k dom f neut j).
Proof. exact (MK_COMB (@lem6576141 A K _86190 k dom f neut) (@lem6576142 K j)). Qed.
Lemma lem6576144 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _86190 k dom f neut j) = (term1001 A K _86190 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _86190 k dom f neut j)). Qed.
Lemma lem6576145 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _86190 k dom f neut j) = (term1001 A K _86190 k dom f neut j).
Proof. exact (TRANS (@lem6576143 A K _86190 k dom f neut j) (@lem6576144 A K _86190 k dom f neut j)). Qed.
Lemma lem6576146 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _86190 k dom f neut) = (term1003 A K _86190 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6576145 A K _86190 k dom f neut j)). Qed.
Lemma lem6576147 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6576148 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _86190 k dom f neut) = (term1004 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576147 K) (@lem6576146 A K _86190 k dom f neut)). Qed.
Lemma lem6576149 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _86190 k dom f) = (term1005 A K _86190 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6576148 A K _86190 k dom f neut)). Qed.
Lemma lem6576150 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6576151 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _86190 k dom f) = (term1006 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576150 A) (@lem6576149 A K _86190 k dom f)). Qed.
Lemma lem6576152 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576153 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _86190 k dom f) = (term1019 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576152) (@lem6576151 A K _86190 k dom f)). Qed.
Lemma lem6576154 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _86190 k dom f neut) = (term1003 A K _86190 k dom f neut).
Proof. exact (eq_refl (term1012 A K _86190 k dom f neut)). Qed.
Lemma lem6576155 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6576156 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _86190 k dom f j neut) = (term1021 A K _86190 k dom f j neut).
Proof. exact (MK_COMB (@lem6576154 A K _86190 k dom f neut) (@lem6576155 A K j neut)). Qed.
Lemma lem6576157 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _86190 k dom f j neut) = (term1022 A K _86190 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _86190 k dom f j neut)). Qed.
Lemma lem6576158 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _86190 k dom f j neut) = (term1022 A K _86190 k dom f j neut).
Proof. exact (TRANS (@lem6576156 A K _86190 k dom f j neut) (@lem6576157 A K _86190 k dom f j neut)). Qed.
Lemma lem6576159 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _86190 k dom f j) = (term1024 A K _86190 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6576158 A K _86190 k dom f j neut)). Qed.
Lemma lem6576160 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6576161 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _86190 k dom f j) = (term1026 A K _86190 k dom f j).
Proof. exact (MK_COMB (@lem6576160 A) (@lem6576159 A K _86190 k dom f j)). Qed.
Lemma lem6576162 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _86190 k dom f) = (term1028 A K _86190 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6576161 A K _86190 k dom f j)). Qed.
Lemma lem6576163 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6576164 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _86190 k dom f) = (term1029 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576163 A K) (@lem6576162 A K _86190 k dom f)). Qed.
Lemma lem6576165 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _86190 k dom f) = (term1010 A K _86190 k dom f)) = ((term1006 A K _86190 k dom f) = (term1029 A K _86190 k dom f)).
Proof. exact (MK_COMB (@lem6576153 A K _86190 k dom f) (@lem6576164 A K _86190 k dom f)). Qed.
Lemma lem6576166 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _86190 k dom f) = (term1029 A K _86190 k dom f).
Proof. exact (EQ_MP (@lem6576165 A K _86190 k dom f) (@lem6576140 A K _86190 k dom f)). Qed.
Lemma lem6576167 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _86190 k dom f) = (term1029 A K _86190 k dom f).
Proof. exact (TRANS (@lem6576136 A K _86190 k dom f) (@lem6576166 A K _86190 k dom f)). Qed.
Lemma lem6576168 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _86190 k dom) = (term1030 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6576167 A K _86190 k dom f)). Qed.
Lemma lem6576169 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6576170 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _86190 k dom) = (term1031 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6576169 A K) (@lem6576168 A K _86190 k dom)). Qed.
Lemma lem6576172 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6576173 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6576172 (K -> A) (type1411 A K) P). Qed.
Lemma lem6576174 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _86190 k dom) = (term1035 A K _86190 k dom).
Proof. exact (@lem6576173 A K (term1036 A K _86190 k dom)). Qed.
Lemma lem6576175 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _86190 k dom f) = (term1028 A K _86190 k dom f).
Proof. exact (eq_refl (term1037 A K _86190 k dom f)). Qed.
Lemma lem6576176 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576177 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _86190 k dom f j) = (term1039 A K _86190 k dom f j).
Proof. exact (MK_COMB (@lem6576175 A K _86190 k dom f) (@lem6576176 A K j)). Qed.
Lemma lem6576178 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _86190 k dom f j) = (term1026 A K _86190 k dom f j).
Proof. exact (eq_refl (term1039 A K _86190 k dom f j)). Qed.
Lemma lem6576179 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _86190 k dom f j) = (term1026 A K _86190 k dom f j).
Proof. exact (TRANS (@lem6576177 A K _86190 k dom f j) (@lem6576178 A K _86190 k dom f j)). Qed.
Lemma lem6576180 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _86190 k dom f) = (term1028 A K _86190 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6576179 A K _86190 k dom f j)). Qed.
Lemma lem6576181 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6576182 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _86190 k dom f) = (term1029 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576181 A K) (@lem6576180 A K _86190 k dom f)). Qed.
Lemma lem6576183 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _86190 k dom) = (term1030 A K _86190 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6576182 A K _86190 k dom f)). Qed.
Lemma lem6576184 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6576185 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _86190 k dom) = (term1031 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6576184 A K) (@lem6576183 A K _86190 k dom)). Qed.
Lemma lem6576186 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576187 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _86190 k dom) = (term1044 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6576186) (@lem6576185 A K _86190 k dom)). Qed.
Lemma lem6576188 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _86190 k dom f) = (term1028 A K _86190 k dom f).
Proof. exact (eq_refl (term1037 A K _86190 k dom f)). Qed.
Lemma lem6576189 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6576190 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _86190 k dom j f) = (term1046 A K _86190 k dom j f).
Proof. exact (MK_COMB (@lem6576188 A K _86190 k dom f) (@lem6576189 A K j f)). Qed.
Lemma lem6576191 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _86190 k dom j f) = (term1047 A K _86190 k dom j f).
Proof. exact (eq_refl (term1046 A K _86190 k dom j f)). Qed.
Lemma lem6576192 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _86190 k dom j f) = (term1047 A K _86190 k dom j f).
Proof. exact (TRANS (@lem6576190 A K _86190 k dom j f) (@lem6576191 A K _86190 k dom j f)). Qed.
Lemma lem6576193 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _86190 k dom j) = (term1049 A K _86190 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6576192 A K _86190 k dom j f)). Qed.
Lemma lem6576194 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6576195 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _86190 k dom j) = (term1051 A K _86190 k dom j).
Proof. exact (MK_COMB (@lem6576194 A K) (@lem6576193 A K _86190 k dom j)). Qed.
Lemma lem6576196 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _86190 k dom) = (term1053 A K _86190 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6576195 A K _86190 k dom j)). Qed.
Lemma lem6576197 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6576198 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _86190 k dom) = (term1054 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6576197 A K) (@lem6576196 A K _86190 k dom)). Qed.
Lemma lem6576199 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _86190 k dom) = (term1035 A K _86190 k dom)) = ((term1031 A K _86190 k dom) = (term1054 A K _86190 k dom)).
Proof. exact (MK_COMB (@lem6576187 A K _86190 k dom) (@lem6576198 A K _86190 k dom)). Qed.
Lemma lem6576200 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _86190 k dom) = (term1054 A K _86190 k dom).
Proof. exact (EQ_MP (@lem6576199 A K _86190 k dom) (@lem6576174 A K _86190 k dom)). Qed.
Lemma lem6576201 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _86190 k dom) = (term1054 A K _86190 k dom).
Proof. exact (TRANS (@lem6576170 A K _86190 k dom) (@lem6576200 A K _86190 k dom)). Qed.
Lemma lem6576202 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term925 A K _86190 k) = (term1055 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6576201 A K _86190 k dom)). Qed.
Lemma lem6576203 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6576204 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term940 A K _86190 k) = (term1056 A K _86190 k).
Proof. exact (MK_COMB (@lem6576203 A) (@lem6576202 A K _86190 k)). Qed.
Lemma lem6576206 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6576207 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6576206 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6576208 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1059 A K _86190 k) = (term1060 A K _86190 k).
Proof. exact (@lem6576207 A K (term1061 A K _86190 k)). Qed.
Lemma lem6576209 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _86190 k dom) = (term1053 A K _86190 k dom).
Proof. exact (eq_refl (term1062 A K _86190 k dom)). Qed.
Lemma lem6576210 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576211 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _86190 k dom j) = (term1064 A K _86190 k dom j).
Proof. exact (MK_COMB (@lem6576209 A K _86190 k dom) (@lem6576210 A K j)). Qed.
Lemma lem6576212 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _86190 k dom j) = (term1051 A K _86190 k dom j).
Proof. exact (eq_refl (term1064 A K _86190 k dom j)). Qed.
Lemma lem6576213 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _86190 k dom j) = (term1051 A K _86190 k dom j).
Proof. exact (TRANS (@lem6576211 A K _86190 k dom j) (@lem6576212 A K _86190 k dom j)). Qed.
Lemma lem6576214 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _86190 k dom) = (term1053 A K _86190 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6576213 A K _86190 k dom j)). Qed.
Lemma lem6576215 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6576216 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _86190 k dom) = (term1054 A K _86190 k dom).
Proof. exact (MK_COMB (@lem6576215 A K) (@lem6576214 A K _86190 k dom)). Qed.
Lemma lem6576217 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1067 A K _86190 k) = (term1055 A K _86190 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6576216 A K _86190 k dom)). Qed.
Lemma lem6576218 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6576219 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1059 A K _86190 k) = (term1056 A K _86190 k).
Proof. exact (MK_COMB (@lem6576218 A) (@lem6576217 A K _86190 k)). Qed.
Lemma lem6576220 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576221 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1068 A K _86190 k) = (term1069 A K _86190 k).
Proof. exact (MK_COMB (@lem6576220) (@lem6576219 A K _86190 k)). Qed.
Lemma lem6576222 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _86190 k dom) = (term1053 A K _86190 k dom).
Proof. exact (eq_refl (term1062 A K _86190 k dom)). Qed.
Lemma lem6576223 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6576224 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _86190 k j dom) = (term1071 A K _86190 k j dom).
Proof. exact (MK_COMB (@lem6576222 A K _86190 k dom) (@lem6576223 A K j dom)). Qed.
Lemma lem6576225 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _86190 k j dom) = (term1072 A K _86190 k j dom).
Proof. exact (eq_refl (term1071 A K _86190 k j dom)). Qed.
Lemma lem6576226 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _86190 k j dom) = (term1072 A K _86190 k j dom).
Proof. exact (TRANS (@lem6576224 A K _86190 k j dom) (@lem6576225 A K _86190 k j dom)). Qed.
Lemma lem6576227 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _86190 k j) = (term1074 A K _86190 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6576226 A K _86190 k j dom)). Qed.
Lemma lem6576228 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6576229 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _86190 k j) = (term1076 A K _86190 k j).
Proof. exact (MK_COMB (@lem6576228 A) (@lem6576227 A K _86190 k j)). Qed.
Lemma lem6576230 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1077 A K _86190 k) = (term1078 A K _86190 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6576229 A K _86190 k j)). Qed.
Lemma lem6576231 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6576232 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1060 A K _86190 k) = (term1079 A K _86190 k).
Proof. exact (MK_COMB (@lem6576231 A K) (@lem6576230 A K _86190 k)). Qed.
Lemma lem6576233 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : ((term1059 A K _86190 k) = (term1060 A K _86190 k)) = ((term1056 A K _86190 k) = (term1079 A K _86190 k)).
Proof. exact (MK_COMB (@lem6576221 A K _86190 k) (@lem6576232 A K _86190 k)). Qed.
Lemma lem6576234 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1056 A K _86190 k) = (term1079 A K _86190 k).
Proof. exact (EQ_MP (@lem6576233 A K _86190 k) (@lem6576208 A K _86190 k)). Qed.
Lemma lem6576235 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term940 A K _86190 k) = (term1079 A K _86190 k).
Proof. exact (TRANS (@lem6576204 A K _86190 k) (@lem6576234 A K _86190 k)). Qed.
Lemma lem6576236 {A K : Type'} (_86190 : type835 A K) : (term947 A K _86190) = (term1080 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6576235 A K _86190 k)). Qed.
Lemma lem6576237 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6576238 {A K : Type'} (_86190 : type835 A K) : (term962 A K _86190) = (term1081 A K _86190).
Proof. exact (MK_COMB (@lem6576237 K) (@lem6576236 A K _86190)). Qed.
Lemma lem6576240 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6576241 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6576240 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6576242 {A K : Type'} (_86190 : type835 A K) : (term1084 A K _86190) = (term1085 A K _86190).
Proof. exact (@lem6576241 A K (term1086 A K _86190)). Qed.
Lemma lem6576243 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1087 A K _86190 k) = (term1078 A K _86190 k).
Proof. exact (eq_refl (term1087 A K _86190 k)). Qed.
Lemma lem6576244 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576245 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _86190 k j) = (term1089 A K _86190 k j).
Proof. exact (MK_COMB (@lem6576243 A K _86190 k) (@lem6576244 A K j)). Qed.
Lemma lem6576246 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _86190 k j) = (term1076 A K _86190 k j).
Proof. exact (eq_refl (term1089 A K _86190 k j)). Qed.
Lemma lem6576247 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _86190 k j) = (term1076 A K _86190 k j).
Proof. exact (TRANS (@lem6576245 A K _86190 k j) (@lem6576246 A K _86190 k j)). Qed.
Lemma lem6576248 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1090 A K _86190 k) = (term1078 A K _86190 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6576247 A K _86190 k j)). Qed.
Lemma lem6576249 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6576250 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1091 A K _86190 k) = (term1079 A K _86190 k).
Proof. exact (MK_COMB (@lem6576249 A K) (@lem6576248 A K _86190 k)). Qed.
Lemma lem6576251 {A K : Type'} (_86190 : type835 A K) : (term1092 A K _86190) = (term1080 A K _86190).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6576250 A K _86190 k)). Qed.
Lemma lem6576252 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6576253 {A K : Type'} (_86190 : type835 A K) : (term1084 A K _86190) = (term1081 A K _86190).
Proof. exact (MK_COMB (@lem6576252 K) (@lem6576251 A K _86190)). Qed.
Lemma lem6576254 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576255 {A K : Type'} (_86190 : type835 A K) : (term1093 A K _86190) = (term1094 A K _86190).
Proof. exact (MK_COMB (@lem6576254) (@lem6576253 A K _86190)). Qed.
Lemma lem6576256 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (term1087 A K _86190 k) = (term1078 A K _86190 k).
Proof. exact (eq_refl (term1087 A K _86190 k)). Qed.
Lemma lem6576257 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6576258 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _86190 j k) = (term1096 A K _86190 j k).
Proof. exact (MK_COMB (@lem6576256 A K _86190 k) (@lem6576257 A K j k)). Qed.
Lemma lem6576259 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _86190 j k) = (term1097 A K _86190 j k).
Proof. exact (eq_refl (term1096 A K _86190 j k)). Qed.
Lemma lem6576260 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _86190 j k) = (term1097 A K _86190 j k).
Proof. exact (TRANS (@lem6576258 A K _86190 j k) (@lem6576259 A K _86190 j k)). Qed.
Lemma lem6576261 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) : (term1098 A K _86190 j) = (term1099 A K _86190 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6576260 A K _86190 j k)). Qed.
Lemma lem6576262 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6576263 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) : (term1100 A K _86190 j) = (term1101 A K _86190 j).
Proof. exact (MK_COMB (@lem6576262 K) (@lem6576261 A K _86190 j)). Qed.
Lemma lem6576264 {A K : Type'} (_86190 : type835 A K) : (term1102 A K _86190) = (term1103 A K _86190).
Proof. exact (fun_ext (fun j : type834 A K => @lem6576263 A K _86190 j)). Qed.
Lemma lem6576265 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6576266 {A K : Type'} (_86190 : type835 A K) : (term1085 A K _86190) = (term1104 A K _86190).
Proof. exact (MK_COMB (@lem6576265 A K) (@lem6576264 A K _86190)). Qed.
Lemma lem6576267 {A K : Type'} (_86190 : type835 A K) : ((term1084 A K _86190) = (term1085 A K _86190)) = ((term1081 A K _86190) = (term1104 A K _86190)).
Proof. exact (MK_COMB (@lem6576255 A K _86190) (@lem6576266 A K _86190)). Qed.
Lemma lem6576268 {A K : Type'} (_86190 : type835 A K) : (term1081 A K _86190) = (term1104 A K _86190).
Proof. exact (EQ_MP (@lem6576267 A K _86190) (@lem6576242 A K _86190)). Qed.
Lemma lem6576269 {A K : Type'} (_86190 : type835 A K) : (term962 A K _86190) = (term1104 A K _86190).
Proof. exact (TRANS (@lem6576238 A K _86190) (@lem6576268 A K _86190)). Qed.
Lemma lem6576270 {A K : Type'} (_86190 : type835 A K) : (term959 A K _86190) = (term959 A K _86190).
Proof. exact (eq_refl (term959 A K _86190)). Qed.
Lemma lem6576271 {A K : Type'} (_86190 : type835 A K) : (term963 A K _86190) = (term1105 A K _86190).
Proof. exact (MK_COMB (@lem6576270 A K _86190) (@lem6576269 A K _86190)). Qed.
Lemma lem6576273 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6576274 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6576273 (type834 A K) P Q). Qed.
Lemma lem6576275 {A K : Type'} (_86190 : type835 A K) : (term1110 A K _86190) = (term1111 A K _86190).
Proof. exact (@lem6576274 A K (term957 A K _86190) (term1103 A K _86190)). Qed.
Lemma lem6576276 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) : (term1112 A K _86190 j) = (term1101 A K _86190 j).
Proof. exact (eq_refl (term1112 A K _86190 j)). Qed.
Lemma lem6576277 {A K : Type'} (_86190 : type835 A K) : (term1113 A K _86190) = (term1103 A K _86190).
Proof. exact (fun_ext (fun j : type834 A K => @lem6576276 A K _86190 j)). Qed.
Lemma lem6576278 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6576279 {A K : Type'} (_86190 : type835 A K) : (term1114 A K _86190) = (term1104 A K _86190).
Proof. exact (MK_COMB (@lem6576278 A K) (@lem6576277 A K _86190)). Qed.
Lemma lem6576280 {A K : Type'} (_86190 : type835 A K) : (term959 A K _86190) = (term959 A K _86190).
Proof. exact (eq_refl (term959 A K _86190)). Qed.
Lemma lem6576281 {A K : Type'} (_86190 : type835 A K) : (term1110 A K _86190) = (term1105 A K _86190).
Proof. exact (MK_COMB (@lem6576280 A K _86190) (@lem6576279 A K _86190)). Qed.
Lemma lem6576282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6576283 {A K : Type'} (_86190 : type835 A K) : (term1115 A K _86190) = (term1116 A K _86190).
Proof. exact (MK_COMB (@lem6576282) (@lem6576281 A K _86190)). Qed.
Lemma lem6576284 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) : (term1112 A K _86190 j) = (term1101 A K _86190 j).
Proof. exact (eq_refl (term1112 A K _86190 j)). Qed.
Lemma lem6576285 {A K : Type'} (_86190 : type835 A K) : (term959 A K _86190) = (term959 A K _86190).
Proof. exact (eq_refl (term959 A K _86190)). Qed.
Lemma lem6576286 {A K : Type'} (_86190 : type835 A K) (j : type834 A K) : (term1117 A K _86190 j) = (term1118 A K _86190 j).
Proof. exact (MK_COMB (@lem6576285 A K _86190) (@lem6576284 A K _86190 j)). Qed.
Lemma lem6576287 {A K : Type'} (_86190 : type835 A K) : (term1119 A K _86190) = (term1120 A K _86190).
Proof. exact (fun_ext (fun j : type834 A K => @lem6576286 A K _86190 j)). Qed.
Lemma lem6576288 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6576289 {A K : Type'} (_86190 : type835 A K) : (term1111 A K _86190) = (term1121 A K _86190).
Proof. exact (MK_COMB (@lem6576288 A K) (@lem6576287 A K _86190)). Qed.
Lemma lem6576290 {A K : Type'} (_86190 : type835 A K) : ((term1110 A K _86190) = (term1111 A K _86190)) = ((term1105 A K _86190) = (term1121 A K _86190)).
Proof. exact (MK_COMB (@lem6576283 A K _86190) (@lem6576289 A K _86190)). Qed.
Lemma lem6576291 {A K : Type'} (_86190 : type835 A K) : (term1105 A K _86190) = (term1121 A K _86190).
Proof. exact (EQ_MP (@lem6576290 A K _86190) (@lem6576275 A K _86190)). Qed.
Lemma lem6576292 {A K : Type'} (_86190 : type835 A K) : (term963 A K _86190) = (term1121 A K _86190).
Proof. exact (TRANS (@lem6576271 A K _86190) (@lem6576291 A K _86190)). Qed.
Lemma lem6576293 {A K : Type'} (_86190 : type835 A K) : (term849 A K _86190) = (term1121 A K _86190).
Proof. exact (TRANS (@lem6576079 A K _86190) (@lem6576292 A K _86190)). Qed.
Lemma lem6576294 {A K : Type'} (_86190 : type835 A K) : (term815 A K _86190) = (term1121 A K _86190).
Proof. exact (TRANS (@lem6575312 A K _86190) (@lem6576293 A K _86190)). Qed.
Lemma lem6576295 {A K : Type'} (_86190 : type835 A K) (h1 : term815 A K _86190) : term1121 A K _86190.
Proof. exact (EQ_MP (@lem6576294 A K _86190) (@lem6575267 A K _86190 h1)). Qed.
Lemma lem6576304 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6576306 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6576307 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6576306 A K dom f j) (@lem6576304 A K f j neut)). Qed.
Lemma lem6576308 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6576309 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6576308 A K dom f j neut) (@lem6576307 A K dom f j neut)). Qed.
Lemma lem6576311 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6576312 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6576311 K k j) (@lem6576309 A K dom f j neut)). Qed.
Lemma lem6576313 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6576314 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6576313 A K k dom f j neut) (@lem6576312 A K k dom f j neut)). Qed.
Lemma lem6576316 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6576317 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6576316 K ltle j i) (@lem6576314 A K k dom f j neut)). Qed.
Lemma lem6576318 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6576319 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6576318 A K ltle i k dom f j neut) (@lem6576317 A K ltle i k dom f j neut)). Qed.
Lemma lem6576320 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6576321 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576322 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6576321) (@lem6576319 A K ltle i k dom f j neut)). Qed.
Lemma lem6576323 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6576322 A K ltle i k dom f j neut) (@lem6576320 K j i)). Qed.
Lemma lem6576324 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6576325 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6576324 A K ltle k dom f neut j i) (@lem6576323 A K ltle k dom f neut j i)). Qed.
Lemma lem6576326 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6576325 A K ltle k dom f neut j i)). Qed.
Lemma lem6576327 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576328 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6576327 K) (@lem6576326 A K ltle k dom f neut i)). Qed.
Lemma lem6576343 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6576344 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6576343 K k ltle j i)). Qed.
Lemma lem6576345 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576346 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6576345 K) (@lem6576344 K k ltle i)). Qed.
Lemma lem6576347 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86190 k dom f neut) = (term719 A K _86190 k dom f neut).
Proof. exact (eq_refl (term719 A K _86190 k dom f neut)). Qed.
Lemma lem6576348 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576349 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6576348) (@lem6576346 K k ltle i)). Qed.
Lemma lem6576350 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _86190 k dom f neut) = (term1143 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576349 K k ltle i) (@lem6576347 A K _86190 k dom f neut)). Qed.
Lemma lem6576351 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576352 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6576351) (@lem6576328 A K ltle k dom f neut i)). Qed.
Lemma lem6576353 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _86190 k dom f neut) = (term1145 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576352 A K ltle k dom f neut i) (@lem6576350 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576355 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6576356 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _86190 k dom f neut) = (term1146 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576355 K k i) (@lem6576353 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576358 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6576359 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _86190 k dom f neut) = (term1349 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576358 A K dom f i) (@lem6576356 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576361 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6576462 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _86190 k dom f neut) = (term1350 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576361 A K f i neut) (@lem6576359 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576463 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1350 A K ltle i _86190 k dom f neut.
Proof. exact (EQ_MP (@lem6576462 A K ltle i _86190 k dom f neut) (@lem6575268 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6576470 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term67 K i k x) = (term68 K i k x).
Proof. exact (@lem17160 (x = i) (k x)). Qed.
Lemma lem6576474 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1122 A K f x neut) = ((f x) = neut).
Proof. exact (@lem16933 ((f x) = neut)). Qed.
Lemma lem6576476 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1123 A K dom f x).
Proof. exact (eq_refl (term1123 A K dom f x)). Qed.
Lemma lem6576477 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1124 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (MK_COMB (@lem6576476 A K dom f x) (@lem6576474 A K f x neut)). Qed.
Lemma lem6576478 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1124 A K dom f x neut).
Proof. exact (@lem17045 (term591 A K dom f x) (term572 A K f x neut)). Qed.
Lemma lem6576479 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (TRANS (@lem6576478 A K dom f x neut) (@lem6576477 A K dom f x neut)). Qed.
Lemma lem6576480 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576481 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term70 K i k x) = (term71 K i k x).
Proof. exact (MK_COMB (@lem6576480) (@lem6576470 K i k x)). Qed.
Lemma lem6576482 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1149 A K i k dom f x neut) = (term1150 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6576481 K i k x) (@lem6576479 A K dom f x neut)). Qed.
Lemma lem6576483 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1149 A K i k dom f x neut).
Proof. exact (@lem17045 (term39 K i k x) (term595 A K dom f x neut)). Qed.
Lemma lem6576484 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1151 A K i k dom f x neut) = (term1150 A K i k dom f x neut).
Proof. exact (TRANS (@lem6576483 A K i k dom f x neut) (@lem6576482 A K i k dom f x neut)). Qed.
Lemma lem6576485 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1277 A K i k dom f neut) = (term1351 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6576484 A K i k dom f x neut)). Qed.
Lemma lem6576486 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576539 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1278 A K i k dom f neut) = (term1352 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6576486 K) (@lem6576485 A K i k dom f neut)). Qed.
Lemma lem6576540 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1352 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6576539 A K i k dom f neut) (@lem6575269 A K i k dom f neut h1)). Qed.
Lemma lem6576542 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6576543 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6576554 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576555 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6576554 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6576556 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) : (_86190 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190 k).
Proof. exact (@lem6576555 A K _86190 k). Qed.
Lemma lem6576557 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6576558 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_86190 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190 k dom).
Proof. exact (MK_COMB (@lem6576556 A K _86190 k) (@lem6576557 A dom)). Qed.
Lemma lem6576560 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576561 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6576560 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6576562 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190 k dom) = (term1163 A K _86190 k dom).
Proof. exact (@lem6576561 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86190 k) dom). Qed.
Lemma lem6576563 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_86190 k dom) = (term1163 A K _86190 k dom).
Proof. exact (TRANS (@lem6576558 A K _86190 k dom) (@lem6576562 A K _86190 k dom)). Qed.
Lemma lem6576564 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6576565 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_86190 k dom f) = (term1164 A K _86190 k dom f).
Proof. exact (MK_COMB (@lem6576563 A K _86190 k dom) (@lem6576564 A K f)). Qed.
Lemma lem6576567 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576568 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6576567 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6576569 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _86190 k dom f) = (term1165 A K _86190 k dom f).
Proof. exact (@lem6576568 A K (term1163 A K _86190 k dom) f). Qed.
Lemma lem6576570 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_86190 k dom f) = (term1165 A K _86190 k dom f).
Proof. exact (TRANS (@lem6576565 A K _86190 k dom f) (@lem6576569 A K _86190 k dom f)). Qed.
Lemma lem6576571 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6576572 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_86190 k dom f neut) = (term1166 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576570 A K _86190 k dom f) (@lem6576571 A neut)). Qed.
Lemma lem6576574 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576575 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6576574 A (K -> Prop) f x). Qed.
Lemma lem6576576 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _86190 k dom f neut) = (term1167 A K _86190 k dom f neut).
Proof. exact (@lem6576575 A K (term1165 A K _86190 k dom f) neut). Qed.
Lemma lem6576578 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_86190 k dom f neut) = (term1167 A K _86190 k dom f neut).
Proof. exact (TRANS (@lem6576572 A K _86190 k dom f neut) (@lem6576576 A K _86190 k dom f neut)). Qed.
Lemma lem6576579 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _86190 k dom f neut) = (term1168 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576543 K) (@lem6576578 A K _86190 k dom f neut)). Qed.
Lemma lem6576581 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576582 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6576581 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6576583 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _86190 k dom f neut) = (term1169 A K _86190 k dom f neut).
Proof. exact (@lem6576582 K (@GSPEC K) (term1167 A K _86190 k dom f neut)). Qed.
Lemma lem6576584 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _86190 k dom f neut) = (term1169 A K _86190 k dom f neut).
Proof. exact (TRANS (@lem6576579 A K _86190 k dom f neut) (@lem6576583 A K _86190 k dom f neut)). Qed.
Lemma lem6576585 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86190 k dom f neut) = (term1170 A K _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576542 K) (@lem6576584 A K _86190 k dom f neut)). Qed.
Lemma lem6576587 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576588 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6576587 (K -> Prop) Prop f x). Qed.
Lemma lem6576589 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _86190 k dom f neut) = (term1171 A K _86190 k dom f neut).
Proof. exact (@lem6576588 K (@FINITE K) (term1169 A K _86190 k dom f neut)). Qed.
Lemma lem6576590 {A K : Type'} (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86190 k dom f neut) = (term1171 A K _86190 k dom f neut).
Proof. exact (TRANS (@lem6576585 A K _86190 k dom f neut) (@lem6576589 A K _86190 k dom f neut)). Qed.
Lemma lem6576597 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576598 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6576597 K (K -> Prop) f x). Qed.
Lemma lem6576599 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6576598 K ltle j). Qed.
Lemma lem6576600 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6576601 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6576599 K ltle j) (@lem6576600 K i)). Qed.
Lemma lem6576603 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576604 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576603 K Prop f x). Qed.
Lemma lem6576605 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6576604 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6576607 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6576601 K ltle j i) (@lem6576605 K ltle j i)). Qed.
Lemma lem6576614 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576615 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6576614 K (K -> Prop) f x). Qed.
Lemma lem6576616 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6576615 K ltle i). Qed.
Lemma lem6576617 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6576618 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6576616 K ltle i) (@lem6576617 K j)). Qed.
Lemma lem6576620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576621 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576620 K Prop f x). Qed.
Lemma lem6576622 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6576621 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6576624 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6576618 K ltle i j) (@lem6576622 K ltle i j)). Qed.
Lemma lem6576625 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576626 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6576625) (@lem6576624 K ltle i j)). Qed.
Lemma lem6576627 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6576626 K ltle i j) (@lem6576607 K ltle j i)). Qed.
Lemma lem6576634 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6576635 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6576634 K i j) (@lem6576627 K ltle j i)). Qed.
Lemma lem6576636 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576641 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576642 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576641 K Prop f x). Qed.
Lemma lem6576644 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6576642 K k j). Qed.
Lemma lem6576645 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6576636) (@lem6576644 K k j)). Qed.
Lemma lem6576646 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576647 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6576646) (@lem6576645 K k j)). Qed.
Lemma lem6576648 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6576647 K k j) (@lem6576635 K ltle j i)). Qed.
Lemma lem6576649 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6576648 K k ltle j i)). Qed.
Lemma lem6576650 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576651 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6576650 K) (@lem6576649 K k ltle i)). Qed.
Lemma lem6576652 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576653 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6576652) (@lem6576651 K k ltle i)). Qed.
Lemma lem6576654 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _86190 k dom f neut) = (term1184 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576653 K k ltle i) (@lem6576590 A K _86190 k dom f neut)). Qed.
Lemma lem6576659 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6576660 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6576665 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576666 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576665 K A f x). Qed.
Lemma lem6576668 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6576666 A K f j). Qed.
Lemma lem6576669 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6576670 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6576660 A) (@lem6576668 A K f j)). Qed.
Lemma lem6576671 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6576670 A K f j) (@lem6576669 A neut)). Qed.
Lemma lem6576672 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576673 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6576678 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576679 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576678 K A f x). Qed.
Lemma lem6576681 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6576679 A K f j). Qed.
Lemma lem6576682 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6576673 A dom) (@lem6576681 A K f j)). Qed.
Lemma lem6576684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576685 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6576684 A Prop f x). Qed.
Lemma lem6576686 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6576685 A dom (@I (K -> A) f j)). Qed.
Lemma lem6576687 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6576682 A K dom f j) (@lem6576686 A K dom f j)). Qed.
Lemma lem6576688 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6576672) (@lem6576687 A K dom f j)). Qed.
Lemma lem6576689 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576690 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6576689) (@lem6576688 A K dom f j)). Qed.
Lemma lem6576691 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6576690 A K dom f j) (@lem6576671 A K f j neut)). Qed.
Lemma lem6576692 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576697 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576698 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576697 K Prop f x). Qed.
Lemma lem6576700 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6576698 K k j). Qed.
Lemma lem6576701 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6576692) (@lem6576700 K k j)). Qed.
Lemma lem6576702 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576703 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6576702) (@lem6576701 K k j)). Qed.
Lemma lem6576704 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6576703 K k j) (@lem6576691 A K dom f j neut)). Qed.
Lemma lem6576705 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576713 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6576712 K (K -> Prop) f x). Qed.
Lemma lem6576714 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6576713 K ltle j). Qed.
Lemma lem6576715 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6576716 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6576714 K ltle j) (@lem6576715 K i)). Qed.
Lemma lem6576718 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576719 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576718 K Prop f x). Qed.
Lemma lem6576720 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6576719 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6576722 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6576716 K ltle j i) (@lem6576720 K ltle j i)). Qed.
Lemma lem6576723 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6576705) (@lem6576722 K ltle j i)). Qed.
Lemma lem6576724 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576725 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6576724) (@lem6576723 K ltle j i)). Qed.
Lemma lem6576726 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6576725 K ltle j i) (@lem6576704 A K k dom f j neut)). Qed.
Lemma lem6576727 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576728 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6576727) (@lem6576726 A K ltle i k dom f j neut)). Qed.
Lemma lem6576729 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6576728 A K ltle i k dom f j neut) (@lem6576659 K j i)). Qed.
Lemma lem6576730 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6576729 A K ltle k dom f neut j i)). Qed.
Lemma lem6576731 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576732 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6576731 K) (@lem6576730 A K ltle k dom f neut i)). Qed.
Lemma lem6576733 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576734 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6576733) (@lem6576732 A K ltle k dom f neut i)). Qed.
Lemma lem6576735 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _86190 k dom f neut) = (term1203 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576734 A K ltle k dom f neut i) (@lem6576654 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576736 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576741 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576742 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576741 K Prop f x). Qed.
Lemma lem6576744 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6576742 K k i). Qed.
Lemma lem6576745 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6576736) (@lem6576744 K k i)). Qed.
Lemma lem6576746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576747 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6576746) (@lem6576745 K k i)). Qed.
Lemma lem6576748 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _86190 k dom f neut) = (term1205 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576747 K k i) (@lem6576735 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576749 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6576754 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576755 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576754 K A f x). Qed.
Lemma lem6576757 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6576755 A K f i). Qed.
Lemma lem6576758 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6576749 A dom) (@lem6576757 A K f i)). Qed.
Lemma lem6576760 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576761 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6576760 A Prop f x). Qed.
Lemma lem6576762 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6576761 A dom (@I (K -> A) f i)). Qed.
Lemma lem6576763 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6576758 A K dom f i) (@lem6576762 A K dom f i)). Qed.
Lemma lem6576764 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576765 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term1209 A K dom f i).
Proof. exact (MK_COMB (@lem6576764) (@lem6576763 A K dom f i)). Qed.
Lemma lem6576766 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1349 A K ltle i _86190 k dom f neut) = (term1353 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576765 A K dom f i) (@lem6576748 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576767 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576768 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6576773 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576774 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576773 K A f x). Qed.
Lemma lem6576776 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6576774 A K f i). Qed.
Lemma lem6576777 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6576778 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6576768 A) (@lem6576776 A K f i)). Qed.
Lemma lem6576779 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6576778 A K f i) (@lem6576777 A neut)). Qed.
Lemma lem6576780 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term572 A K f i neut) = (term1208 A K f i neut).
Proof. exact (MK_COMB (@lem6576767) (@lem6576779 A K f i neut)). Qed.
Lemma lem6576781 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6576782 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1354 A K f i neut).
Proof. exact (MK_COMB (@lem6576781) (@lem6576780 A K f i neut)). Qed.
Lemma lem6576783 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1350 A K ltle i _86190 k dom f neut) = (term1355 A K ltle i _86190 k dom f neut).
Proof. exact (MK_COMB (@lem6576782 A K f i neut) (@lem6576766 A K ltle i _86190 k dom f neut)). Qed.
Lemma lem6576784 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1355 A K ltle i _86190 k dom f neut.
Proof. exact (EQ_MP (@lem6576783 A K ltle i _86190 k dom f neut) (@lem6576463 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6576785 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6576790 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576792 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576790 K A f x). Qed.
Lemma lem6576793 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6576794 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6576785 A) (@lem6576792 A K f x)). Qed.
Lemma lem6576795 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6576794 A K f x) (@lem6576793 A neut)). Qed.
Lemma lem6576796 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576797 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6576802 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576804 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6576802 K A f x). Qed.
Lemma lem6576805 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6576797 A dom) (@lem6576804 A K f x)). Qed.
Lemma lem6576807 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576808 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6576807 A Prop f x). Qed.
Lemma lem6576809 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6576808 A dom (@I (K -> A) f x)). Qed.
Lemma lem6576810 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6576805 A K dom f x) (@lem6576809 A K dom f x)). Qed.
Lemma lem6576811 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1189 A K dom f x) = (term1190 A K dom f x).
Proof. exact (MK_COMB (@lem6576796) (@lem6576810 A K dom f x)). Qed.
Lemma lem6576812 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576813 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1191 A K dom f x).
Proof. exact (MK_COMB (@lem6576812) (@lem6576811 A K dom f x)). Qed.
Lemma lem6576814 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1125 A K dom f x neut) = (term1192 A K dom f x neut).
Proof. exact (MK_COMB (@lem6576813 A K dom f x) (@lem6576795 A K f x neut)). Qed.
Lemma lem6576815 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6576820 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6576821 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6576820 K Prop f x). Qed.
Lemma lem6576823 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6576821 K k x). Qed.
Lemma lem6576824 {K : Type'} (k : K -> Prop) (x : K) : (term30 K k x) = (term1178 K k x).
Proof. exact (MK_COMB (@lem6576815) (@lem6576823 K k x)). Qed.
Lemma lem6576833 {K : Type'} (x : K) (i : K) : (term1213 K x i) = (term1213 K x i).
Proof. exact (eq_refl (term1213 K x i)). Qed.
Lemma lem6576834 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term68 K i k x) = (term1214 K i k x).
Proof. exact (MK_COMB (@lem6576833 K x i) (@lem6576824 K k x)). Qed.
Lemma lem6576835 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6576836 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term71 K i k x) = (term1215 K i k x).
Proof. exact (MK_COMB (@lem6576835) (@lem6576834 K i k x)). Qed.
Lemma lem6576837 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1150 A K i k dom f x neut) = (term1216 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6576836 K i k x) (@lem6576814 A K dom f x neut)). Qed.
Lemma lem6576838 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1351 A K i k dom f neut) = (term1356 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6576837 A K i k dom f x neut)). Qed.
Lemma lem6576839 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6576840 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1352 A K i k dom f neut) = (term1357 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6576839 K) (@lem6576838 A K i k dom f neut)). Qed.
Lemma lem6576841 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1357 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6576840 A K i k dom f neut) (@lem6576540 A K i k dom f neut h1)). Qed.
Lemma lem6577287 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1353 A K ltle i _86190 k dom f neut.
Proof. exact (proj2 (@lem6576784 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6577320 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1216 A K i k dom f x neut) = (term1358 A K i k dom f x neut).
Proof. exact (@lem19699 (term2 K x i) (term1178 K k x) (term1192 A K dom f x neut)). Qed.
Lemma lem6577321 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1356 A K i k dom f neut) = (term1359 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6577320 A K i k dom f x neut)). Qed.
Lemma lem6577322 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6577324 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1357 A K i k dom f neut) = (term1360 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6577322 K) (@lem6577321 A K i k dom f neut)). Qed.
Lemma lem6577325 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1360 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6577324 A K i k dom f neut) (@lem6576841 A K i k dom f neut h1)). Qed.
Lemma lem6577485 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1361 A K i k dom f neut _86191.
Proof. exact (@lem6577325 A K i k dom f neut h1 _86191). Qed.
Lemma lem6577486 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_86191 : K) (neut : A) : (term1361 A K i k dom f neut _86191) = (term1358 A K i k dom f _86191 neut).
Proof. exact (eq_refl (term1361 A K i k dom f neut _86191)). Qed.
Lemma lem6577487 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1358 A K i k dom f _86191 neut.
Proof. exact (EQ_MP (@lem6577486 A K i k dom f _86191 neut) (@lem6577485 A K _86191 i k dom f neut h1)). Qed.
Lemma lem6577542 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1208 A K f i neut.
Proof. exact (proj1 (@lem6576784 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6577596 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1362 A K i dom f _86191 neut.
Proof. exact (proj1 (@lem6577487 A K _86191 i k dom f neut h1)). Qed.
Lemma lem6577981 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6577982 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6577981 K x). Qed.
Lemma lem6577983 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6577982 K i). Qed.
Lemma lem6577984 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6577983 K i). Qed.
Lemma lem6577986 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6577987 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6577986 (i = i)). Qed.
Lemma lem6577988 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6577987 K i) (@lem6577984 K i)). Qed.
Lemma lem6577990 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1188 A K dom f i.
Proof. exact (proj1 (@lem6577287 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6577991 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6577990 A K ltle i _86190 k dom f neut h1). Qed.
Lemma lem6577993 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6577994 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6577993 (term1188 A K dom f i)). Qed.
Lemma lem6577995 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6577994 A K dom f i) (@lem6577991 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6578013 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6578014 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1192 A K dom f _86191 neut) = (term1363 A K neut dom f _86191).
Proof. exact (@lem6578013 ((@I (K -> A) f _86191) = neut) (term1190 A K dom f _86191)). Qed.
Lemma lem6578022 {K : Type'} (_86191 : K) (i : K) : (term1364 K _86191 i) = (term1364 K _86191 i).
Proof. exact (eq_refl (term1364 K _86191 i)). Qed.
Lemma lem6578023 {A K : Type'} (i : K) (neut : A) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1362 A K i dom f _86191 neut) = (term1365 A K i neut dom f _86191).
Proof. exact (MK_COMB (@lem6578022 K _86191 i) (@lem6578014 A K neut dom f _86191)). Qed.
Lemma lem6578027 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6578028 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1365 A K i neut dom f _86191) = (term1367 A K neut i dom f _86191).
Proof. exact (@lem6578027 ((@I (K -> A) f _86191) = neut) (term2 K _86191 i) (term1190 A K dom f _86191)). Qed.
Lemma lem6578048 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1362 A K i dom f _86191 neut) = (term1367 A K neut i dom f _86191).
Proof. exact (TRANS (@lem6578023 A K i neut dom f _86191) (@lem6578028 A K neut i dom f _86191)). Qed.
Lemma lem6578049 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6578050 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1368 A K i dom f _86191 neut) = (term1369 A K neut i dom f _86191).
Proof. exact (MK_COMB (@lem6578049) (@lem6578048 A K neut i dom f _86191)). Qed.
Lemma lem6578070 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1367 A K neut i dom f _86191) = (term1367 A K neut i dom f _86191).
Proof. exact (eq_refl (term1367 A K neut i dom f _86191)). Qed.
Lemma lem6578071 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : ((term1362 A K i dom f _86191 neut) = (term1367 A K neut i dom f _86191)) = ((term1367 A K neut i dom f _86191) = (term1367 A K neut i dom f _86191)).
Proof. exact (MK_COMB (@lem6578050 A K neut i dom f _86191) (@lem6578070 A K neut i dom f _86191)). Qed.
Lemma lem6578073 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6578074 (x : Prop) : (x = x) = True.
Proof. exact (@lem6578073 Prop x). Qed.
Lemma lem6578075 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : ((term1367 A K neut i dom f _86191) = (term1367 A K neut i dom f _86191)) = True.
Proof. exact (@lem6578074 (term1367 A K neut i dom f _86191)). Qed.
Lemma lem6578076 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : ((term1362 A K i dom f _86191 neut) = (term1367 A K neut i dom f _86191)) = True.
Proof. exact (TRANS (@lem6578071 A K neut i dom f _86191) (@lem6578075 A K neut i dom f _86191)). Qed.
Lemma lem6578077 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : True = ((term1362 A K i dom f _86191 neut) = (term1367 A K neut i dom f _86191)).
Proof. exact (SYM (@lem6578076 A K neut i dom f _86191)). Qed.
Lemma lem6578078 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1362 A K i dom f _86191 neut) = (term1367 A K neut i dom f _86191).
Proof. exact (EQ_MP (@lem6578077 A K neut i dom f _86191) (@lem0)). Qed.
Lemma lem6578079 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1367 A K neut i dom f _86191.
Proof. exact (EQ_MP (@lem6578078 A K neut i dom f _86191) (@lem6577596 A K _86191 i k dom f neut h1)). Qed.
Lemma lem6578081 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6578082 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) (neut : A) : (term1367 A K neut i dom f _86191) = (term1371 A K i dom f _86191 neut).
Proof. exact (@lem6578081 (term1372 A K i dom f _86191) ((@I (K -> A) f _86191) = neut)). Qed.
Lemma lem6578084 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6578085 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1375 A K i dom f _86191) = (term1376 A K i dom f _86191).
Proof. exact (@lem6578084 (term2 K _86191 i) (term1190 A K dom f _86191)). Qed.
Lemma lem6578087 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6578088 {K : Type'} (_86191 : K) (i : K) : (term69 K _86191 i) = (_86191 = i).
Proof. exact (@lem6578087 (_86191 = i)). Qed.
Lemma lem6578089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578090 {K : Type'} (_86191 : K) (i : K) : (term1377 K _86191 i) = (term1378 K _86191 i).
Proof. exact (MK_COMB (@lem6578089) (@lem6578088 K _86191 i)). Qed.
Lemma lem6578092 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6578093 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1379 A K dom f _86191) = (term1188 A K dom f _86191).
Proof. exact (@lem6578092 (term1188 A K dom f _86191)). Qed.
Lemma lem6578094 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1376 A K i dom f _86191) = (term1380 A K i dom f _86191).
Proof. exact (MK_COMB (@lem6578090 K _86191 i) (@lem6578093 A K dom f _86191)). Qed.
Lemma lem6578095 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1375 A K i dom f _86191) = (term1380 A K i dom f _86191).
Proof. exact (TRANS (@lem6578085 A K i dom f _86191) (@lem6578094 A K i dom f _86191)). Qed.
Lemma lem6578096 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6578097 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) : (term1381 A K i dom f _86191) = (term1382 A K i dom f _86191).
Proof. exact (MK_COMB (@lem6578096) (@lem6578095 A K i dom f _86191)). Qed.
Lemma lem6578098 {A K : Type'} (f : K -> A) (_86191 : K) (neut : A) : ((@I (K -> A) f _86191) = neut) = ((@I (K -> A) f _86191) = neut).
Proof. exact (eq_refl ((@I (K -> A) f _86191) = neut)). Qed.
Lemma lem6578099 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) (neut : A) : (term1371 A K i dom f _86191 neut) = (term1383 A K i dom f _86191 neut).
Proof. exact (MK_COMB (@lem6578097 A K i dom f _86191) (@lem6578098 A K f _86191 neut)). Qed.
Lemma lem6578100 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_86191 : K) (neut : A) : (term1367 A K neut i dom f _86191) = (term1383 A K i dom f _86191 neut).
Proof. exact (TRANS (@lem6578082 A K i dom f _86191 neut) (@lem6578099 A K i dom f _86191 neut)). Qed.
Lemma lem6578102 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1384 A K dom f i.
Proof. exact (conj (@lem6577988 K i) (@lem6577995 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6578104 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1383 A K i dom f _86191 neut.
Proof. exact (EQ_MP (@lem6578100 A K i dom f _86191 neut) (@lem6578079 A K _86191 i k dom f neut h1)). Qed.
Lemma lem6578105 {A K : Type'} (_86191 : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1383 A K i dom f _86191 neut.
Proof. exact (@lem6578104 A K _86191 i k dom f neut h1). Qed.
Lemma lem6578106 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) : term1385 A K dom f i neut.
Proof. exact (@lem6578105 A K i i k dom f neut h1). Qed.
Lemma lem6578109 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : (@I (K -> A) f i) = neut.
Proof. exact (@lem6578106 A K i k dom f neut h1 (@lem6578102 A K ltle i _86190 k dom f neut h2)). Qed.
Lemma lem6578110 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : term1386 A K f i neut.
Proof. exact (fun h0 : term1208 A K f i neut => @lem6578109 A K ltle i _86190 k dom f neut h1 h2). Qed.
Lemma lem6578112 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6578113 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1386 A K f i neut) = ((@I (K -> A) f i) = neut).
Proof. exact (@lem6578112 ((@I (K -> A) f i) = neut)). Qed.
Lemma lem6578114 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : (@I (K -> A) f i) = neut.
Proof. exact (EQ_MP (@lem6578113 A K f i neut) (@lem6578110 A K ltle i _86190 k dom f neut h1 h2)). Qed.
Lemma lem6578117 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6578119 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1208 A K f i neut) = (term1387 A K f i neut).
Proof. exact (@lem6578117 ((@I (K -> A) f i) = neut)). Qed.
Lemma lem6578122 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86190 k dom f neut) : term1387 A K f i neut.
Proof. exact (EQ_MP (@lem6578119 A K f i neut) (@lem6577542 A K ltle i _86190 k dom f neut h1)). Qed.
Lemma lem6578125 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : False.
Proof. exact (@lem6578122 A K ltle i _86190 k dom f neut h2 (@lem6578114 A K ltle i _86190 k dom f neut h1 h2)). Qed.
Lemma lem6578126 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6578125 A K ltle i _86190 k dom f neut h1 h2). Qed.
Lemma lem6578128 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6578129 : term96 = False.
Proof. exact (@lem6578128 False). Qed.
Lemma lem6578130 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term1312 A K ltle i _86190 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6578129) (@lem6578126 A K ltle i _86190 k dom f neut h1 h2)). Qed.
Lemma lem6578131 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1278 A K i k dom f neut) (h2 : term815 A K _86190) (h3 : term1312 A K ltle i _86190 k dom f neut) : False.
Proof. exact (ex_elim (@lem6576295 A K _86190 h2) (fun j : type834 A K => fun h0 : term1120 A K _86190 j => @lem6578130 A K ltle i _86190 k dom f neut h1 h3)). Qed.
Lemma lem6578132 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _86190) (h2 : term1312 A K ltle i _86190 k dom f neut) : term1388 A K i k dom f neut.
Proof. exact (fun h0 : term1278 A K i k dom f neut => @lem6578131 A K ltle i _86190 k dom f neut h0 h1 h2). Qed.
Lemma lem6578133 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1388 A K i k dom f neut) = (term1279 A K i k dom f neut).
Proof. exact (@lem69 (term1278 A K i k dom f neut)). Qed.
Lemma lem6578134 {A K : Type'} (ltle : type1402 K) (i : K) (_86190 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _86190) (h2 : term1312 A K ltle i _86190 k dom f neut) : term1279 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6578133 A K i k dom f neut) (@lem6578132 A K ltle i _86190 k dom f neut h1 h2)). Qed.
Lemma lem6578135 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1314 A K ltle _86190 i k dom f neut.
Proof. exact (fun h0 : term1312 A K ltle i _86190 k dom f neut => @lem6578134 A K ltle i _86190 k dom f neut h1 h0). Qed.
Lemma lem6578140 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1316 A K _86190 i k dom f neut.
Proof. exact (fun ltle : type1402 K => @lem6578135 A K ltle i k dom f neut _86190 h1). Qed.
Lemma lem6578145 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1318 A K _86190 k dom f neut.
Proof. exact (fun i : K => @lem6578140 A K i k dom f neut _86190 h1). Qed.
Lemma lem6578150 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1320 A K _86190 dom f neut.
Proof. exact (fun k : K -> Prop => @lem6578145 A K k dom f neut _86190 h1). Qed.
Lemma lem6578155 {A K : Type'} (f : K -> A) (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1322 A K _86190 f neut.
Proof. exact (fun dom : A -> Prop => @lem6578150 A K dom f neut _86190 h1). Qed.
Lemma lem6578160 {A K : Type'} (neut : A) (_86190 : type835 A K) (h1 : term815 A K _86190) : term1324 A K _86190 neut.
Proof. exact (fun f : K -> A => @lem6578155 A K f neut _86190 h1). Qed.
Lemma lem6578165 {A K : Type'} (_86190 : type835 A K) (h1 : term815 A K _86190) : term1326 A K _86190.
Proof. exact (fun neut : A => @lem6578160 A K neut _86190 h1). Qed.
Lemma lem6578166 {A K : Type'} (_86190 : type835 A K) : term1346 A K _86190.
Proof. exact (fun h0 : term815 A K _86190 => @lem6578165 A K _86190 h0). Qed.
Lemma lem6578171 {A K : Type'} : term1348 A K.
Proof. exact (fun _86190 : type835 A K => @lem6578166 A K _86190). Qed.
Lemma lem6578172 {A K : Type'} : term1309 A K.
Proof. exact (EQ_MP (@lem6575266 A K) (@lem6578171 A K)). Qed.
Lemma lem6578173 {A K : Type'} (neut : A) : term1389 A K neut.
Proof. exact (@lem6578172 A K neut). Qed.
Lemma lem6578174 {A K : Type'} (neut : A) : (term1389 A K neut) = (term1305 A K neut).
Proof. exact (eq_refl (term1389 A K neut)). Qed.
Lemma lem6578175 {A K : Type'} (neut : A) : term1305 A K neut.
Proof. exact (EQ_MP (@lem6578174 A K neut) (@lem6578173 A K neut)). Qed.
Lemma lem6578176 {A K : Type'} (neut : A) (f : K -> A) : term1390 A K neut f.
Proof. exact (@lem6578175 A K neut f). Qed.
Lemma lem6578177 {A K : Type'} (f : K -> A) (neut : A) : (term1390 A K neut f) = (term1301 A K f neut).
Proof. exact (eq_refl (term1390 A K neut f)). Qed.
Lemma lem6578178 {A K : Type'} (f : K -> A) (neut : A) : term1301 A K f neut.
Proof. exact (EQ_MP (@lem6578177 A K f neut) (@lem6578176 A K neut f)). Qed.
Lemma lem6578179 {A K : Type'} (f : K -> A) (neut : A) (dom : A -> Prop) : term1391 A K f neut dom.
Proof. exact (@lem6578178 A K f neut dom). Qed.
Lemma lem6578180 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1391 A K f neut dom) = (term1297 A K dom f neut).
Proof. exact (eq_refl (term1391 A K f neut dom)). Qed.
Lemma lem6578181 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : term1297 A K dom f neut.
Proof. exact (EQ_MP (@lem6578180 A K dom f neut) (@lem6578179 A K f neut dom)). Qed.
Lemma lem6578182 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) : term1392 A K dom f neut k.
Proof. exact (@lem6578181 A K dom f neut k). Qed.
Lemma lem6578183 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1392 A K dom f neut k) = (term1293 A K k dom f neut).
Proof. exact (eq_refl (term1392 A K dom f neut k)). Qed.
Lemma lem6578184 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1293 A K k dom f neut.
Proof. exact (EQ_MP (@lem6578183 A K k dom f neut) (@lem6578182 A K dom f neut k)). Qed.
Lemma lem6578185 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term1393 A K k dom f neut i.
Proof. exact (@lem6578184 A K k dom f neut i). Qed.
Lemma lem6578186 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1393 A K k dom f neut i) = (term1289 A K i k dom f neut).
Proof. exact (eq_refl (term1393 A K k dom f neut i)). Qed.
Lemma lem6578187 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1289 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6578186 A K i k dom f neut) (@lem6578185 A K k dom f neut i)). Qed.
Lemma lem6578188 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) : term1394 A K i k dom f neut ltle.
Proof. exact (@lem6578187 A K i k dom f neut ltle). Qed.
Lemma lem6578189 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1394 A K i k dom f neut ltle) = (term1281 A K ltle i k dom f neut).
Proof. exact (eq_refl (term1394 A K i k dom f neut ltle)). Qed.
Lemma lem6578190 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1281 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6578189 A K ltle i k dom f neut) (@lem6578188 A K i k dom f neut ltle)). Qed.
Lemma lem6578192 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1281 A K ltle i k dom f neut.
Proof. exact (@lem6574519 A K ltle i k dom f neut (@lem6578190 A K ltle i k dom f neut)). Qed.
Lemma lem6578193 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1282 A K ltle i k dom f neut) : False.
Proof. exact (@lem6578192 A K ltle i k dom f neut (@lem6574503 A K ltle i k dom f neut h1)). Qed.
Lemma lem6578194 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1282 A K ltle i k dom f neut) : (term1282 A K ltle i k dom f neut) = False.
Proof. exact (prop_ext (fun h2 : term1282 A K ltle i k dom f neut => @lem6578193 A K ltle i k dom f neut h1) (fun h2 : False => @lem6574503 A K ltle i k dom f neut h1)). Qed.
Lemma lem6578195 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1282 A K ltle i k dom f neut) : False.
Proof. exact (EQ_MP (@lem6578194 A K ltle i k dom f neut h1) (@lem6574503 A K ltle i k dom f neut h1)). Qed.
Lemma lem6578196 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1281 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1282 A K ltle i k dom f neut => @lem6578195 A K ltle i k dom f neut h0). Qed.
Lemma lem6578197 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1280 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6574502 A K ltle i k dom f neut) (@lem6578196 A K ltle i k dom f neut)). Qed.
Lemma lem6578198 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1271 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6574498 A K ltle i k f dom neut) (@lem6578197 A K ltle i k dom f neut)). Qed.
Lemma lem6578199 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1270 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6574147 A K ltle i k f dom neut) (@lem6578198 A K ltle i k f dom neut)). Qed.
Lemma lem6578200 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1263 A K i k f dom neut.
Proof. exact (@lem6578199 A K ltle i k f dom neut (@lem6574070 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6578202 {A : Type'} (s : A -> Prop) : term113 A s.
Proof. exact (EQ_MP (@lem6450296 A s) (@lem6450295 A s)). Qed.
Lemma lem6578203 {K : Type'} (s : K -> Prop) : term113 K s.
Proof. exact (@lem6578202 K s). Qed.
Lemma lem6578204 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1395 A K i k f dom neut.
Proof. exact (@lem6578203 K (term585 A K i k f dom neut)). Qed.
Lemma lem6578205 {A : Type'} (s : A -> Prop) : term1396 A s.
Proof. exact (@lem3608316 A s). Qed.
Lemma lem6578206 {A : Type'} (s : A -> Prop) : (term1396 A s) = (term1397 A s).
Proof. exact (eq_refl (term1396 A s)). Qed.
Lemma lem6578207 {A : Type'} (s : A -> Prop) : term1397 A s.
Proof. exact (EQ_MP (@lem6578206 A s) (@lem6578205 A s)). Qed.
Lemma lem6578208 {A : Type'} (s : A -> Prop) (x : A) : term1398 A s x.
Proof. exact (@lem6578207 A s x). Qed.
Lemma lem6578209 {A : Type'} (x : A) (s : A -> Prop) : (term1398 A s x) = ((term1399 A x s) = (@FINITE A s)).
Proof. exact (eq_refl (term1398 A s x)). Qed.
Lemma lem6578211 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term480 A K k f dom neut) = ((term480 A K k f dom neut) = True).
Proof. exact (@lem7 (term480 A K k f dom neut)). Qed.
Lemma lem6578243 {A : Type'} (x : A) (s : A -> Prop) : (term1399 A x s) = (@FINITE A s).
Proof. exact (EQ_MP (@lem6578209 A x s) (@lem6578208 A s x)). Qed.
Lemma lem6578244 {K : Type'} (x : K) (s : K -> Prop) : (term1399 K x s) = (@FINITE K s).
Proof. exact (@lem6578243 K x s). Qed.
Lemma lem6578245 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1400 A K i k f dom neut) = (term480 A K k f dom neut).
Proof. exact (@lem6578244 K i (term586 A K k f dom neut)). Qed.
Lemma lem6578247 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term480 A K k f dom neut) = True.
Proof. exact (EQ_MP (@lem6578211 A K k f dom neut) (@lem6452663 A K k f dom neut h1)). Qed.
Lemma lem6578248 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term480 A K k f dom neut) = True.
Proof. exact (@lem6578247 A K k f dom neut h1). Qed.
Lemma lem6578249 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term1400 A K i k f dom neut) = True.
Proof. exact (TRANS (@lem6578245 A K i k f dom neut) (@lem6578248 A K k f dom neut h1)). Qed.
Lemma lem6578250 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578251 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term1401 A K i k f dom neut) = (and True).
Proof. exact (MK_COMB (@lem6578250) (@lem6578249 A K i k f dom neut h1)). Qed.
Lemma lem6578264 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1402 A K i k f dom neut) = (term1402 A K i k f dom neut).
Proof. exact (eq_refl (term1402 A K i k f dom neut)). Qed.
Lemma lem6578265 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term1403 A K i k f dom neut) = (term1404 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6578251 A K i k f dom neut h1) (@lem6578264 A K i k f dom neut)). Qed.
Lemma lem6578267 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6578268 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1404 A K i k f dom neut) = (term1402 A K i k f dom neut).
Proof. exact (@lem6578267 (term1402 A K i k f dom neut)). Qed.
Lemma lem6578281 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term1403 A K i k f dom neut) = (term1402 A K i k f dom neut).
Proof. exact (TRANS (@lem6578265 A K i k f dom neut h1) (@lem6578268 A K i k f dom neut)). Qed.
Lemma lem6578282 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term480 A K k f dom neut) : (term1402 A K i k f dom neut) = (term1403 A K i k f dom neut).
Proof. exact (SYM (@lem6578281 A K i k f dom neut h1)). Qed.
Lemma lem6578293 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6578294 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6578293 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6578295 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6578294 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6578296 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term504 A K f i dom) : term1265 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555423 A K f i dom h5) (@lem6578295 A K ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6578297 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1266 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555422 A K f i neut h4) (@lem6578296 A K ltle neut k f i dom h1 h2 h3 h5 h6)). Qed.
Lemma lem6578349 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term1405 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem6578350 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (@SUBSET K s t) = (term1405 K s t).
Proof. exact (@lem6578349 K s t). Qed.
Lemma lem6578351 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1402 A K i k f dom neut) = (term1406 A K i k f dom neut).
Proof. exact (@lem6578350 K (term585 A K i k f dom neut) (term1407 A K i k f dom neut)). Qed.
Lemma lem6578370 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1269 A K ltle i k f dom neut).
Proof. exact (eq_refl (term1269 A K ltle i k f dom neut)). Qed.
Lemma lem6578371 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1408 A K ltle i k f dom neut) = (term1409 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6578370 A K ltle i k f dom neut) (@lem6578351 A K i k f dom neut)). Qed.
Lemma lem6578374 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1409 A K ltle i k f dom neut) = (term1408 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6578371 A K ltle i k f dom neut)). Qed.
Lemma lem6578384 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578385 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6578384 A P x). Qed.
Lemma lem6578386 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6578385 A dom (f i)). Qed.
Lemma lem6578387 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578388 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6578387) (@lem6578386 A K dom f i)). Qed.
Lemma lem6578392 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578393 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578392 K P x). Qed.
Lemma lem6578394 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6578393 K k i). Qed.
Lemma lem6578395 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6578396 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6578395) (@lem6578394 K k i)). Qed.
Lemma lem6578397 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578398 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6578397) (@lem6578396 K k i)). Qed.
Lemma lem6578412 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578413 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578412 K P x). Qed.
Lemma lem6578414 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6578413 K k j). Qed.
Lemma lem6578415 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578416 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6578415) (@lem6578414 K k j)). Qed.
Lemma lem6578418 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6578419 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6578418 A s x t). Qed.
Lemma lem6578420 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6578419 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6578424 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578425 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6578424 A P x). Qed.
Lemma lem6578426 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6578425 A dom (f j)). Qed.
Lemma lem6578427 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578428 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6578427) (@lem6578426 A K dom f j)). Qed.
Lemma lem6578430 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578431 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6578430 A y x s). Qed.
Lemma lem6578432 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6578431 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6578438 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6578439 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6578438 A x). Qed.
Lemma lem6578440 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6578439 A (f j)). Qed.
Lemma lem6578441 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6578442 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6578441 A K f j neut) (@lem6578440 A K f j)). Qed.
Lemma lem6578444 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6578445 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6578444 ((f j) = neut)). Qed.
Lemma lem6578448 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6578442 A K f j neut) (@lem6578445 A K f j neut)). Qed.
Lemma lem6578449 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6578432 A K neut f j) (@lem6578448 A K f j neut)). Qed.
Lemma lem6578450 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6578451 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6578450) (@lem6578449 A K f j neut)). Qed.
Lemma lem6578452 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6578428 A K dom f j) (@lem6578451 A K f j neut)). Qed.
Lemma lem6578455 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6578420 A K dom f j neut) (@lem6578452 A K dom f j neut)). Qed.
Lemma lem6578456 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6578416 K k j) (@lem6578455 A K dom f j neut)). Qed.
Lemma lem6578459 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6578460 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6578459 K ltle j i) (@lem6578456 A K k dom f j neut)). Qed.
Lemma lem6578463 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6578464 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6578463) (@lem6578460 A K ltle i k dom f j neut)). Qed.
Lemma lem6578467 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6578468 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6578464 A K ltle i k dom f j neut) (@lem6578467 K j i)). Qed.
Lemma lem6578471 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6578468 A K ltle k dom f neut j i)). Qed.
Lemma lem6578472 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6578473 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6578472 K) (@lem6578471 A K ltle k dom f neut i)). Qed.
Lemma lem6578478 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578479 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6578478) (@lem6578473 A K ltle k dom f neut i)). Qed.
Lemma lem6578489 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578490 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578489 K P x). Qed.
Lemma lem6578491 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6578490 K k j). Qed.
Lemma lem6578492 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6578493 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6578492) (@lem6578491 K k j)). Qed.
Lemma lem6578500 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6578501 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6578493 K k j) (@lem6578500 K ltle j i)). Qed.
Lemma lem6578504 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6578501 K k ltle j i)). Qed.
Lemma lem6578505 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6578506 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6578505 K) (@lem6578504 K k ltle i)). Qed.
Lemma lem6578511 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578512 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6578511) (@lem6578506 K k ltle i)). Qed.
Lemma lem6578520 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578521 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578520 K P x). Qed.
Lemma lem6578522 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6578521 K k j). Qed.
Lemma lem6578523 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578524 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6578523) (@lem6578522 K k j)). Qed.
Lemma lem6578526 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6578527 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6578526 A s x t). Qed.
Lemma lem6578528 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6578527 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6578532 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578533 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6578532 A P x). Qed.
Lemma lem6578534 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6578533 A dom (f j)). Qed.
Lemma lem6578535 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578536 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6578535) (@lem6578534 A K dom f j)). Qed.
Lemma lem6578538 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578539 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6578538 A y x s). Qed.
Lemma lem6578540 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6578539 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6578546 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6578547 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6578546 A x). Qed.
Lemma lem6578548 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6578547 A (f j)). Qed.
Lemma lem6578549 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6578550 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6578549 A K f j neut) (@lem6578548 A K f j)). Qed.
Lemma lem6578552 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6578553 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6578552 ((f j) = neut)). Qed.
Lemma lem6578556 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6578550 A K f j neut) (@lem6578553 A K f j neut)). Qed.
Lemma lem6578557 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6578540 A K neut f j) (@lem6578556 A K f j neut)). Qed.
Lemma lem6578558 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6578559 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6578558) (@lem6578557 A K f j neut)). Qed.
Lemma lem6578560 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6578536 A K dom f j) (@lem6578559 A K f j neut)). Qed.
Lemma lem6578563 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6578528 A K dom f j neut) (@lem6578560 A K dom f j neut)). Qed.
Lemma lem6578564 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6578524 K k j) (@lem6578563 A K dom f j neut)). Qed.
Lemma lem6578567 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6578568 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6578567 K GEN_PVAR_272) (@lem6578564 A K k dom f j neut)). Qed.
Lemma lem6578569 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6578570 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6578568 A K GEN_PVAR_272 k dom f j neut) (@lem6578569 K j)). Qed.
Lemma lem6578571 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6578570 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6578572 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6578573 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6578572 K) (@lem6578571 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6578578 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6578573 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6578579 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6578580 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6578579 K) (@lem6578578 A K k dom f neut)). Qed.
Lemma lem6578581 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6578582 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6578581 K) (@lem6578580 A K k dom f neut)). Qed.
Lemma lem6578583 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578512 K k ltle i) (@lem6578582 A K k dom f neut)). Qed.
Lemma lem6578586 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578479 A K ltle k dom f neut i) (@lem6578583 A K ltle i k dom f neut)). Qed.
Lemma lem6578589 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578398 K k i) (@lem6578586 A K ltle i k dom f neut)). Qed.
Lemma lem6578592 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1265 A K ltle i k f dom neut) = (term1272 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578388 A K dom f i) (@lem6578589 A K ltle i k dom f neut)). Qed.
Lemma lem6578595 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6578596 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1266 A K ltle i k f dom neut) = (term1274 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578595 A K f i neut) (@lem6578592 A K ltle i k dom f neut)). Qed.
Lemma lem6578599 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6578600 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1275 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578599) (@lem6578596 A K ltle i k dom f neut)). Qed.
Lemma lem6578608 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term639 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6578609 {K : Type'} (p : K -> Prop) (x : K) : (term639 K x p) = (p x).
Proof. exact (@lem6578608 K p x). Qed.
Lemma lem6578610 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term640 A K x i k f dom neut) = (term641 A K i k f dom neut x).
Proof. exact (@lem6578609 K (term642 A K i k f dom neut) x). Qed.
Lemma lem6578611 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut i') = (term643 A K i k f i' dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut i')). Qed.
Lemma lem6578612 {K : Type'} (GEN_PVAR_263 : K) : (@SETSPEC K GEN_PVAR_263) = (@SETSPEC K GEN_PVAR_263).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_263)). Qed.
Lemma lem6578613 {A K : Type'} (GEN_PVAR_263 : K) (i : K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term644 A K GEN_PVAR_263 i k f dom neut i') = (term645 A K GEN_PVAR_263 i k f i' dom neut).
Proof. exact (MK_COMB (@lem6578612 K GEN_PVAR_263) (@lem6578611 A K i k f i' dom neut)). Qed.
Lemma lem6578614 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6578615 {A K : Type'} (GEN_PVAR_263 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term646 A K GEN_PVAR_263 i k f dom neut i') = (term647 A K GEN_PVAR_263 i k f dom neut i').
Proof. exact (MK_COMB (@lem6578613 A K GEN_PVAR_263 i k f i' dom neut) (@lem6578614 K i')). Qed.
Lemma lem6578616 {A K : Type'} (GEN_PVAR_263 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term648 A K GEN_PVAR_263 i k f dom neut) = (term649 A K GEN_PVAR_263 i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6578615 A K GEN_PVAR_263 i k f dom neut i')). Qed.
Lemma lem6578617 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6578618 {A K : Type'} (GEN_PVAR_263 : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term650 A K GEN_PVAR_263 i k f dom neut) = (term651 A K GEN_PVAR_263 i k f dom neut).
Proof. exact (MK_COMB (@lem6578617 K) (@lem6578616 A K GEN_PVAR_263 i k f dom neut)). Qed.
Lemma lem6578619 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term652 A K i k f dom neut) = (term653 A K i k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_263 : K => @lem6578618 A K GEN_PVAR_263 i k f dom neut)). Qed.
Lemma lem6578620 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6578621 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term654 A K i k f dom neut) = (term585 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6578620 K) (@lem6578619 A K i k f dom neut)). Qed.
Lemma lem6578622 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6578623 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term640 A K x i k f dom neut) = (term655 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6578622 K x) (@lem6578621 A K i k f dom neut)). Qed.
Lemma lem6578624 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6578625 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term656 A K x i k f dom neut) = (term657 A K x i k f dom neut).
Proof. exact (MK_COMB (@lem6578624) (@lem6578623 A K x i k f dom neut)). Qed.
Lemma lem6578626 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term641 A K i k f dom neut x) = (term643 A K i k f x dom neut).
Proof. exact (eq_refl (term641 A K i k f dom neut x)). Qed.
Lemma lem6578627 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term640 A K x i k f dom neut) = (term641 A K i k f dom neut x)) = ((term655 A K x i k f dom neut) = (term643 A K i k f x dom neut)).
Proof. exact (MK_COMB (@lem6578625 A K x i k f dom neut) (@lem6578626 A K i k f x dom neut)). Qed.
Lemma lem6578628 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term655 A K x i k f dom neut) = (term643 A K i k f x dom neut).
Proof. exact (EQ_MP (@lem6578627 A K i k f x dom neut) (@lem6578610 A K i k f dom neut x)). Qed.
Lemma lem6578632 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578633 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6578632 K y x s). Qed.
Lemma lem6578634 {K : Type'} (i : K) (x : K) (k : K -> Prop) : (term36 K x i k) = (term37 K i x k).
Proof. exact (@lem6578633 K i x k). Qed.
Lemma lem6578640 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578641 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578640 K P x). Qed.
Lemma lem6578642 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6578641 K k x). Qed.
Lemma lem6578643 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6578644 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term37 K i x k) = (term39 K i k x).
Proof. exact (MK_COMB (@lem6578643 K x i) (@lem6578642 K k x)). Qed.
Lemma lem6578647 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term36 K x i k) = (term39 K i k x).
Proof. exact (TRANS (@lem6578634 K i x k) (@lem6578644 K i k x)). Qed.
Lemma lem6578648 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578649 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term40 K x i k) = (term41 K i k x).
Proof. exact (MK_COMB (@lem6578648) (@lem6578647 K i k x)). Qed.
Lemma lem6578651 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6578652 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6578651 A s x t). Qed.
Lemma lem6578653 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term569 A K dom f x neut).
Proof. exact (@lem6578652 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6578657 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578658 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6578657 A P x). Qed.
Lemma lem6578659 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term504 A K f x dom) = (term591 A K dom f x).
Proof. exact (@lem6578658 A dom (f x)). Qed.
Lemma lem6578660 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578661 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term573 A K f x dom) = (term592 A K dom f x).
Proof. exact (MK_COMB (@lem6578660) (@lem6578659 A K dom f x)). Qed.
Lemma lem6578663 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578664 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6578663 A y x s). Qed.
Lemma lem6578665 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term570 A K f x neut) = (term593 A K neut f x).
Proof. exact (@lem6578664 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6578671 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6578672 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6578671 A x). Qed.
Lemma lem6578673 {A K : Type'} (f : K -> A) (x : K) : (term594 A K f x) = False.
Proof. exact (@lem6578672 A (f x)). Qed.
Lemma lem6578674 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term512 A K f x neut) = (term512 A K f x neut).
Proof. exact (eq_refl (term512 A K f x neut)). Qed.
Lemma lem6578675 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = (term527 A K f x neut).
Proof. exact (MK_COMB (@lem6578674 A K f x neut) (@lem6578673 A K f x)). Qed.
Lemma lem6578677 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6578678 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term527 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6578677 ((f x) = neut)). Qed.
Lemma lem6578681 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6578675 A K f x neut) (@lem6578678 A K f x neut)). Qed.
Lemma lem6578682 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term570 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6578665 A K neut f x) (@lem6578681 A K f x neut)). Qed.
Lemma lem6578683 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6578684 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term571 A K f x neut) = (term572 A K f x neut).
Proof. exact (MK_COMB (@lem6578683) (@lem6578682 A K f x neut)). Qed.
Lemma lem6578685 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term569 A K dom f x neut) = (term595 A K dom f x neut).
Proof. exact (MK_COMB (@lem6578661 A K dom f x) (@lem6578684 A K f x neut)). Qed.
Lemma lem6578688 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term595 A K dom f x neut).
Proof. exact (TRANS (@lem6578653 A K dom f x neut) (@lem6578685 A K dom f x neut)). Qed.
Lemma lem6578689 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term643 A K i k f x dom neut) = (term658 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6578649 K i k x) (@lem6578688 A K dom f x neut)). Qed.
Lemma lem6578692 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term655 A K x i k f dom neut) = (term658 A K i k dom f x neut).
Proof. exact (TRANS (@lem6578628 A K i k f x dom neut) (@lem6578689 A K i k dom f x neut)). Qed.
Lemma lem6578693 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6578694 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1410 A K x i k f dom neut) = (term1411 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6578693) (@lem6578692 A K i k dom f x neut)). Qed.
Lemma lem6578696 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578697 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6578696 K y x s). Qed.
Lemma lem6578698 {A K : Type'} (i : K) (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1412 A K x i k f dom neut) = (term1413 A K i x k f dom neut).
Proof. exact (@lem6578697 K i x (term586 A K k f dom neut)). Qed.
Lemma lem6578704 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term639 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6578705 {K : Type'} (p : K -> Prop) (x : K) : (term639 K x p) = (p x).
Proof. exact (@lem6578704 K p x). Qed.
Lemma lem6578706 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term660 A K x k f dom neut) = (term661 A K k f dom neut x).
Proof. exact (@lem6578705 K (term662 A K k f dom neut) x). Qed.
Lemma lem6578707 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term661 A K k f dom neut j) = (term601 A K k f j dom neut).
Proof. exact (eq_refl (term661 A K k f dom neut j)). Qed.
Lemma lem6578708 {K : Type'} (GEN_PVAR_271 : K) : (@SETSPEC K GEN_PVAR_271) = (@SETSPEC K GEN_PVAR_271).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_271)). Qed.
Lemma lem6578709 {A K : Type'} (GEN_PVAR_271 : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term663 A K GEN_PVAR_271 k f dom neut j) = (term622 A K GEN_PVAR_271 k f j dom neut).
Proof. exact (MK_COMB (@lem6578708 K GEN_PVAR_271) (@lem6578707 A K k f j dom neut)). Qed.
Lemma lem6578710 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6578711 {A K : Type'} (GEN_PVAR_271 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term664 A K GEN_PVAR_271 k f dom neut j) = (term624 A K GEN_PVAR_271 k f dom neut j).
Proof. exact (MK_COMB (@lem6578709 A K GEN_PVAR_271 k f j dom neut) (@lem6578710 K j)). Qed.
Lemma lem6578712 {A K : Type'} (GEN_PVAR_271 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term665 A K GEN_PVAR_271 k f dom neut) = (term626 A K GEN_PVAR_271 k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6578711 A K GEN_PVAR_271 k f dom neut j)). Qed.
Lemma lem6578713 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6578714 {A K : Type'} (GEN_PVAR_271 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term666 A K GEN_PVAR_271 k f dom neut) = (term628 A K GEN_PVAR_271 k f dom neut).
Proof. exact (MK_COMB (@lem6578713 K) (@lem6578712 A K GEN_PVAR_271 k f dom neut)). Qed.
Lemma lem6578715 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term667 A K k f dom neut) = (term630 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_271 : K => @lem6578714 A K GEN_PVAR_271 k f dom neut)). Qed.
Lemma lem6578716 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6578717 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term668 A K k f dom neut) = (term586 A K k f dom neut).
Proof. exact (MK_COMB (@lem6578716 K) (@lem6578715 A K k f dom neut)). Qed.
Lemma lem6578718 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6578719 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term660 A K x k f dom neut) = (term669 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6578718 K x) (@lem6578717 A K k f dom neut)). Qed.
Lemma lem6578720 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6578721 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term670 A K x k f dom neut) = (term671 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6578720) (@lem6578719 A K x k f dom neut)). Qed.
Lemma lem6578722 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term661 A K k f dom neut x) = (term601 A K k f x dom neut).
Proof. exact (eq_refl (term661 A K k f dom neut x)). Qed.
Lemma lem6578723 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term660 A K x k f dom neut) = (term661 A K k f dom neut x)) = ((term669 A K x k f dom neut) = (term601 A K k f x dom neut)).
Proof. exact (MK_COMB (@lem6578721 A K x k f dom neut) (@lem6578722 A K k f x dom neut)). Qed.
Lemma lem6578724 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term669 A K x k f dom neut) = (term601 A K k f x dom neut).
Proof. exact (EQ_MP (@lem6578723 A K k f x dom neut) (@lem6578706 A K k f dom neut x)). Qed.
Lemma lem6578728 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578729 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6578728 K P x). Qed.
Lemma lem6578730 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6578729 K k x). Qed.
Lemma lem6578731 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578732 {K : Type'} (k : K -> Prop) (x : K) : (term332 K x k) = (term333 K k x).
Proof. exact (MK_COMB (@lem6578731) (@lem6578730 K k x)). Qed.
Lemma lem6578734 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6578735 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6578734 A s x t). Qed.
Lemma lem6578736 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term569 A K dom f x neut).
Proof. exact (@lem6578735 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6578740 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6578741 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6578740 A P x). Qed.
Lemma lem6578742 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term504 A K f x dom) = (term591 A K dom f x).
Proof. exact (@lem6578741 A dom (f x)). Qed.
Lemma lem6578743 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6578744 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term573 A K f x dom) = (term592 A K dom f x).
Proof. exact (MK_COMB (@lem6578743) (@lem6578742 A K dom f x)). Qed.
Lemma lem6578746 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6578747 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6578746 A y x s). Qed.
Lemma lem6578748 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term570 A K f x neut) = (term593 A K neut f x).
Proof. exact (@lem6578747 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6578754 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6578755 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6578754 A x). Qed.
Lemma lem6578756 {A K : Type'} (f : K -> A) (x : K) : (term594 A K f x) = False.
Proof. exact (@lem6578755 A (f x)). Qed.
Lemma lem6578757 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term512 A K f x neut) = (term512 A K f x neut).
Proof. exact (eq_refl (term512 A K f x neut)). Qed.
Lemma lem6578758 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = (term527 A K f x neut).
Proof. exact (MK_COMB (@lem6578757 A K f x neut) (@lem6578756 A K f x)). Qed.
Lemma lem6578760 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6578761 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term527 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6578760 ((f x) = neut)). Qed.
Lemma lem6578764 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term593 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6578758 A K f x neut) (@lem6578761 A K f x neut)). Qed.
Lemma lem6578765 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term570 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6578748 A K neut f x) (@lem6578764 A K f x neut)). Qed.
Lemma lem6578766 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6578767 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term571 A K f x neut) = (term572 A K f x neut).
Proof. exact (MK_COMB (@lem6578766) (@lem6578765 A K f x neut)). Qed.
Lemma lem6578768 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term569 A K dom f x neut) = (term595 A K dom f x neut).
Proof. exact (MK_COMB (@lem6578744 A K dom f x) (@lem6578767 A K f x neut)). Qed.
Lemma lem6578771 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term426 A K f x dom neut) = (term595 A K dom f x neut).
Proof. exact (TRANS (@lem6578736 A K dom f x neut) (@lem6578768 A K dom f x neut)). Qed.
Lemma lem6578772 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term601 A K k f x dom neut) = (term602 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6578732 K k x) (@lem6578771 A K dom f x neut)). Qed.
Lemma lem6578775 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term669 A K x k f dom neut) = (term602 A K k dom f x neut).
Proof. exact (TRANS (@lem6578724 A K k f x dom neut) (@lem6578772 A K k dom f x neut)). Qed.
Lemma lem6578776 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6578777 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1413 A K i x k f dom neut) = (term1414 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6578776 K x i) (@lem6578775 A K k dom f x neut)). Qed.
Lemma lem6578780 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1412 A K x i k f dom neut) = (term1414 A K i k dom f x neut).
Proof. exact (TRANS (@lem6578698 A K i x k f dom neut) (@lem6578777 A K i k dom f x neut)). Qed.
Lemma lem6578781 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1415 A K x i k f dom neut) = (term1416 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6578694 A K i k dom f x neut) (@lem6578780 A K i k dom f x neut)). Qed.
Lemma lem6578784 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1417 A K i k f dom neut) = (term1418 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6578781 A K i k dom f x neut)). Qed.
Lemma lem6578785 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6578786 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1406 A K i k f dom neut) = (term1419 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6578785 K) (@lem6578784 A K i k dom f neut)). Qed.
Lemma lem6578791 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1409 A K ltle i k f dom neut) = (term1420 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6578600 A K ltle i k dom f neut) (@lem6578786 A K i k dom f neut)). Qed.
Lemma lem6578794 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle i k dom f neut) = (term1409 A K ltle i k f dom neut).
Proof. exact (SYM (@lem6578791 A K ltle i k dom f neut)). Qed.
Lemma lem6578796 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6578797 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1420 A K ltle i k dom f neut) = (term1421 A K ltle i k dom f neut).
Proof. exact (@lem6578796 (term1420 A K ltle i k dom f neut)). Qed.
Lemma lem6578798 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1421 A K ltle i k dom f neut) = (term1420 A K ltle i k dom f neut).
Proof. exact (SYM (@lem6578797 A K ltle i k dom f neut)). Qed.
Lemma lem6578799 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1422 A K ltle i k dom f neut) : term1422 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6578802 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1421 A K ltle i k dom f neut) : term1421 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6578803 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1423 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1421 A K ltle i k dom f neut => @lem6578802 A K ltle i k dom f neut h0). Qed.
Lemma lem6578804 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1423 A K ltle i k dom f neut) : term1423 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6578805 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1421 A K ltle i k dom f neut) : term1421 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6578806 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1421 A K ltle i k dom f neut) (h2 : term1423 A K ltle i k dom f neut) : term1421 A K ltle i k dom f neut.
Proof. exact (@lem6578804 A K ltle i k dom f neut h2 (@lem6578805 A K ltle i k dom f neut h1)). Qed.
Lemma lem6578807 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1421 A K ltle i k dom f neut) : term1424 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1423 A K ltle i k dom f neut => @lem6578806 A K ltle i k dom f neut h1 h0). Qed.
Lemma lem6578808 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1423 A K ltle i k dom f neut) : term1423 A K ltle i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6578809 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1421 A K ltle i k dom f neut) (h2 : term1423 A K ltle i k dom f neut) : term1421 A K ltle i k dom f neut.
Proof. exact (@lem6578807 A K ltle i k dom f neut h1 (@lem6578808 A K ltle i k dom f neut h2)). Qed.
Lemma lem6578810 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1423 A K ltle i k dom f neut) : term1423 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1421 A K ltle i k dom f neut => @lem6578809 A K ltle i k dom f neut h0 h1). Qed.
Lemma lem6578811 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1425 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1423 A K ltle i k dom f neut => @lem6578810 A K ltle i k dom f neut h0). Qed.
Lemma lem6578814 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1423 A K ltle i k dom f neut.
Proof. exact (@lem6578811 A K ltle i k dom f neut (@lem6578803 A K ltle i k dom f neut)). Qed.
Lemma lem6578815 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1423 A K ltle i k dom f neut.
Proof. exact (@lem6578814 A K ltle i k dom f neut). Qed.
Lemma lem6578841 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6578842 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1421 A K ltle i k dom f neut) = (term1426 A K ltle i k dom f neut).
Proof. exact (@lem6578841 (term1422 A K ltle i k dom f neut)). Qed.
Lemma lem6578844 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6578845 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1426 A K ltle i k dom f neut) = (term1420 A K ltle i k dom f neut).
Proof. exact (@lem6578844 (term1420 A K ltle i k dom f neut)). Qed.
Lemma lem6578848 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1421 A K ltle i k dom f neut) = (term1420 A K ltle i k dom f neut).
Proof. exact (TRANS (@lem6578842 A K ltle i k dom f neut) (@lem6578845 A K ltle i k dom f neut)). Qed.
Lemma lem6578907 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1427 A K i k dom f neut) = (term1428 A K i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6578848 A K ltle i k dom f neut)). Qed.
Lemma lem6578908 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6578909 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1429 A K i k dom f neut) = (term1430 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6578908 K) (@lem6578907 A K i k dom f neut)). Qed.
Lemma lem6578914 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1431 A K k dom f neut) = (term1432 A K k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6578909 A K i k dom f neut)). Qed.
Lemma lem6578915 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6578916 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1433 A K k dom f neut) = (term1434 A K k dom f neut).
Proof. exact (MK_COMB (@lem6578915 K) (@lem6578914 A K k dom f neut)). Qed.
Lemma lem6578921 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1435 A K dom f neut) = (term1436 A K dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6578916 A K k dom f neut)). Qed.
Lemma lem6578922 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6578923 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1437 A K dom f neut) = (term1438 A K dom f neut).
Proof. exact (MK_COMB (@lem6578922 K) (@lem6578921 A K dom f neut)). Qed.
Lemma lem6578928 {A K : Type'} (f : K -> A) (neut : A) : (term1439 A K f neut) = (term1440 A K f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6578923 A K dom f neut)). Qed.
Lemma lem6578929 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6578930 {A K : Type'} (f : K -> A) (neut : A) : (term1441 A K f neut) = (term1442 A K f neut).
Proof. exact (MK_COMB (@lem6578929 A) (@lem6578928 A K f neut)). Qed.
Lemma lem6578935 {A K : Type'} (neut : A) : (term1443 A K neut) = (term1444 A K neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6578930 A K f neut)). Qed.
Lemma lem6578936 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6578937 {A K : Type'} (neut : A) : (term1445 A K neut) = (term1446 A K neut).
Proof. exact (MK_COMB (@lem6578936 A K) (@lem6578935 A K neut)). Qed.
Lemma lem6578942 {A K : Type'} : (term1447 A K) = (term1448 A K).
Proof. exact (fun_ext (fun neut : A => @lem6578937 A K neut)). Qed.
Lemma lem6578943 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6578950 {A K : Type'} : (term1449 A K) = (term1450 A K).
Proof. exact (MK_COMB (@lem6578943 A) (@lem6578942 A K)). Qed.
Lemma lem6578951 {A K : Type'} (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : _86291 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6578952 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6578953 {A K : Type'} (k : K -> Prop) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6578951 A K _86291 h1) (@lem6578952 K k)). Qed.
Lemma lem6578954 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6578955 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term709 A K _86291 k) = (term709 A K _86291 k).
Proof. exact (eq_refl (term709 A K _86291 k)). Qed.
Lemma lem6578956 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term707 A K k)) = ((_86291 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6578955 A K _86291 k) (@lem6578954 A K k)). Qed.
Lemma lem6578957 {A K : Type'} (k : K -> Prop) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6578956 A K _86291 k) (@lem6578953 A K k _86291 h1)). Qed.
Lemma lem6578958 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6578959 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6578957 A K k _86291 h1) (@lem6578958 A dom)). Qed.
Lemma lem6578960 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6578961 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86291 k dom) = (term712 A K _86291 k dom).
Proof. exact (eq_refl (term712 A K _86291 k dom)). Qed.
Lemma lem6578962 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term710 A K k dom)) = ((_86291 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6578961 A K _86291 k dom) (@lem6578960 A K k dom)). Qed.
Lemma lem6578963 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6578962 A K _86291 k dom) (@lem6578959 A K k dom _86291 h1)). Qed.
Lemma lem6578964 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6578965 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6578963 A K k dom _86291 h1) (@lem6578964 A K f)). Qed.
Lemma lem6578966 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6578967 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86291 k dom f) = (term715 A K _86291 k dom f).
Proof. exact (eq_refl (term715 A K _86291 k dom f)). Qed.
Lemma lem6578968 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term713 A K k dom f)) = ((_86291 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6578967 A K _86291 k dom f) (@lem6578966 A K k dom f)). Qed.
Lemma lem6578969 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6578968 A K _86291 k dom f) (@lem6578965 A K k dom f _86291 h1)). Qed.
Lemma lem6578970 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6578971 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6578969 A K k dom f _86291 h1) (@lem6578970 A neut)). Qed.
Lemma lem6578972 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6578973 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86291 k dom f neut) = (term717 A K _86291 k dom f neut).
Proof. exact (eq_refl (term717 A K _86291 k dom f neut)). Qed.
Lemma lem6578974 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term716 A K k dom f neut)) = ((_86291 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6578973 A K _86291 k dom f neut) (@lem6578972 A K k dom f neut)). Qed.
Lemma lem6578975 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (_86291 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6578974 A K _86291 k dom f neut) (@lem6578971 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579041 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1416 A K i k dom f x neut) = (term1416 A K i k dom f x neut).
Proof. exact (eq_refl (term1416 A K i k dom f x neut)). Qed.
Lemma lem6579042 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1418 A K i k dom f neut) = (term1418 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6579041 A K i k dom f x neut)). Qed.
Lemma lem6579043 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579044 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1419 A K i k dom f neut) = (term1419 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6579043 K) (@lem6579042 A K i k dom f neut)). Qed.
Lemma lem6579046 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term631 A K k dom f neut) = (_86291 k dom f neut).
Proof. exact (SYM (@lem6578975 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579047 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term631 A K k dom f neut) = (_86291 k dom f neut).
Proof. exact (@lem6579046 A K k dom f neut _86291 h1). Qed.
Lemma lem6579048 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6579049 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579048 K) (@lem6579047 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579050 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6579051 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579050 K) (@lem6579049 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579078 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6579079 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6579078 K k ltle j i)). Qed.
Lemma lem6579080 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579081 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6579080 K) (@lem6579079 K k ltle i)). Qed.
Lemma lem6579082 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579083 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6579082) (@lem6579081 K k ltle i)). Qed.
Lemma lem6579084 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579083 K k ltle i) (@lem6579051 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579123 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6579124 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6579123 A K ltle k dom f neut j i)). Qed.
Lemma lem6579125 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579126 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6579125 K) (@lem6579124 A K ltle k dom f neut i)). Qed.
Lemma lem6579127 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579128 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6579127) (@lem6579126 A K ltle k dom f neut i)). Qed.
Lemma lem6579129 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579128 A K ltle k dom f neut i) (@lem6579084 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579136 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6579137 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579136 K k i) (@lem6579129 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579144 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6579145 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1272 A K ltle i k dom f neut) = (term1311 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579144 A K dom f i) (@lem6579137 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579156 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6579157 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1274 A K ltle i k dom f neut) = (term1312 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579156 A K f i neut) (@lem6579145 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579158 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6579159 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1275 A K ltle i k dom f neut) = (term1313 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579158) (@lem6579157 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579160 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1420 A K ltle i k dom f neut) = (term1451 A K ltle _86291 i k dom f neut).
Proof. exact (MK_COMB (@lem6579159 A K ltle i k dom f neut _86291 h1) (@lem6579044 A K i k dom f neut)). Qed.
Lemma lem6579161 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1428 A K i k dom f neut) = (term1452 A K _86291 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6579160 A K ltle i k dom f neut _86291 h1)). Qed.
Lemma lem6579162 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6579163 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1430 A K i k dom f neut) = (term1453 A K _86291 i k dom f neut).
Proof. exact (MK_COMB (@lem6579162 K) (@lem6579161 A K i k dom f neut _86291 h1)). Qed.
Lemma lem6579164 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1432 A K k dom f neut) = (term1454 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6579163 A K i k dom f neut _86291 h1)). Qed.
Lemma lem6579165 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579166 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1434 A K k dom f neut) = (term1455 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579165 K) (@lem6579164 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579167 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1436 A K dom f neut) = (term1456 A K _86291 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579166 A K k dom f neut _86291 h1)). Qed.
Lemma lem6579168 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579169 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1438 A K dom f neut) = (term1457 A K _86291 dom f neut).
Proof. exact (MK_COMB (@lem6579168 K) (@lem6579167 A K dom f neut _86291 h1)). Qed.
Lemma lem6579170 {A K : Type'} (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1440 A K f neut) = (term1458 A K _86291 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579169 A K dom f neut _86291 h1)). Qed.
Lemma lem6579171 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579172 {A K : Type'} (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1442 A K f neut) = (term1459 A K _86291 f neut).
Proof. exact (MK_COMB (@lem6579171 A) (@lem6579170 A K f neut _86291 h1)). Qed.
Lemma lem6579173 {A K : Type'} (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1444 A K neut) = (term1460 A K _86291 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6579172 A K f neut _86291 h1)). Qed.
Lemma lem6579174 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579175 {A K : Type'} (neut : A) (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1446 A K neut) = (term1461 A K _86291 neut).
Proof. exact (MK_COMB (@lem6579174 A K) (@lem6579173 A K neut _86291 h1)). Qed.
Lemma lem6579176 {A K : Type'} (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1448 A K) = (term1462 A K _86291).
Proof. exact (fun_ext (fun neut : A => @lem6579175 A K neut _86291 h1)). Qed.
Lemma lem6579177 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579178 {A K : Type'} (_86291 : type835 A K) (h1 : _86291 = (term706 A K)) : (term1450 A K) = (term1463 A K _86291).
Proof. exact (MK_COMB (@lem6579177 A) (@lem6579176 A K _86291 h1)). Qed.
Lemma lem6579179 {A K : Type'} (_86291 : type835 A K) : term1464 A K _86291.
Proof. exact (fun h0 : _86291 = (term706 A K) => @lem6579178 A K _86291 h0). Qed.
Lemma lem6579180 {A K : Type'} : term1465 A K.
Proof. exact (fun _86291 : type835 A K => @lem6579179 A K _86291). Qed.
Lemma lem6579182 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6579183 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6579182 (type835 A K) P c Q). Qed.
Lemma lem6579184 {A K : Type'} : term1466 A K.
Proof. exact (@lem6579183 A K (term1450 A K) (term706 A K) (term1467 A K)). Qed.
Lemma lem6579185 {A K : Type'} (_86291 : type835 A K) : (term1468 A K _86291) = (term1463 A K _86291).
Proof. exact (eq_refl (term1468 A K _86291)). Qed.
Lemma lem6579186 {A K : Type'} : (term1469 A K) = (term1469 A K).
Proof. exact (eq_refl (term1469 A K)). Qed.
Lemma lem6579187 {A K : Type'} (_86291 : type835 A K) : ((term1450 A K) = (term1468 A K _86291)) = ((term1450 A K) = (term1463 A K _86291)).
Proof. exact (MK_COMB (@lem6579186 A K) (@lem6579185 A K _86291)). Qed.
Lemma lem6579188 {A K : Type'} (_86291 : type835 A K) : (term746 A K _86291) = (term746 A K _86291).
Proof. exact (eq_refl (term746 A K _86291)). Qed.
Lemma lem6579189 {A K : Type'} (_86291 : type835 A K) : (term1470 A K _86291) = (term1464 A K _86291).
Proof. exact (MK_COMB (@lem6579188 A K _86291) (@lem6579187 A K _86291)). Qed.
Lemma lem6579190 {A K : Type'} : (term1471 A K) = (term1472 A K).
Proof. exact (fun_ext (fun _86291 : type835 A K => @lem6579189 A K _86291)). Qed.
Lemma lem6579191 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6579192 {A K : Type'} : (term1473 A K) = (term1465 A K).
Proof. exact (MK_COMB (@lem6579191 A K) (@lem6579190 A K)). Qed.
Lemma lem6579193 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6579194 {A K : Type'} : (term1474 A K) = (term1475 A K).
Proof. exact (MK_COMB (@lem6579193) (@lem6579192 A K)). Qed.
Lemma lem6579195 {A K : Type'} (_86291 : type835 A K) : (term1468 A K _86291) = (term1463 A K _86291).
Proof. exact (eq_refl (term1468 A K _86291)). Qed.
Lemma lem6579196 {A K : Type'} (_86291 : type835 A K) : (term746 A K _86291) = (term746 A K _86291).
Proof. exact (eq_refl (term746 A K _86291)). Qed.
Lemma lem6579197 {A K : Type'} (_86291 : type835 A K) : (term1476 A K _86291) = (term1477 A K _86291).
Proof. exact (MK_COMB (@lem6579196 A K _86291) (@lem6579195 A K _86291)). Qed.
Lemma lem6579198 {A K : Type'} : (term1478 A K) = (term1479 A K).
Proof. exact (fun_ext (fun _86291 : type835 A K => @lem6579197 A K _86291)). Qed.
Lemma lem6579199 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6579200 {A K : Type'} : (term1480 A K) = (term1481 A K).
Proof. exact (MK_COMB (@lem6579199 A K) (@lem6579198 A K)). Qed.
Lemma lem6579201 {A K : Type'} : (term1469 A K) = (term1469 A K).
Proof. exact (eq_refl (term1469 A K)). Qed.
Lemma lem6579202 {A K : Type'} : ((term1450 A K) = (term1480 A K)) = ((term1450 A K) = (term1481 A K)).
Proof. exact (MK_COMB (@lem6579201 A K) (@lem6579200 A K)). Qed.
Lemma lem6579203 {A K : Type'} : (term1466 A K) = (term1482 A K).
Proof. exact (MK_COMB (@lem6579194 A K) (@lem6579202 A K)). Qed.
Lemma lem6579204 {A K : Type'} : term1482 A K.
Proof. exact (EQ_MP (@lem6579203 A K) (@lem6579184 A K)). Qed.
Lemma lem6579205 {A K : Type'} : (term1450 A K) = (term1481 A K).
Proof. exact (@lem6579204 A K (@lem6579180 A K)). Qed.
Lemma lem6579207 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6579208 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6579207 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6579209 {A K : Type'} (_86291 : type835 A K) : (_86291 = (term764 A K)) = (term765 A K _86291).
Proof. exact (@lem6579208 A K _86291 (term706 A K)). Qed.
Lemma lem6579210 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6579211 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579210 A K k)). Qed.
Lemma lem6579212 {A K : Type'} (_86291 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291)). Qed.
Lemma lem6579213 {A K : Type'} (_86291 : type835 A K) : (_86291 = (term764 A K)) = (_86291 = (term706 A K)).
Proof. exact (MK_COMB (@lem6579212 A K _86291) (@lem6579211 A K)). Qed.
Lemma lem6579214 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579215 {A K : Type'} (_86291 : type835 A K) : (term766 A K _86291) = (term767 A K _86291).
Proof. exact (MK_COMB (@lem6579214) (@lem6579213 A K _86291)). Qed.
Lemma lem6579216 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6579217 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term709 A K _86291 k) = (term709 A K _86291 k).
Proof. exact (eq_refl (term709 A K _86291 k)). Qed.
Lemma lem6579218 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term707 A K k)) = ((_86291 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6579217 A K _86291 k) (@lem6579216 A K k)). Qed.
Lemma lem6579219 {A K : Type'} (_86291 : type835 A K) : (term768 A K _86291) = (term769 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579218 A K _86291 k)). Qed.
Lemma lem6579220 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579221 {A K : Type'} (_86291 : type835 A K) : (term765 A K _86291) = (term770 A K _86291).
Proof. exact (MK_COMB (@lem6579220 K) (@lem6579219 A K _86291)). Qed.
Lemma lem6579222 {A K : Type'} (_86291 : type835 A K) : ((_86291 = (term764 A K)) = (term765 A K _86291)) = ((_86291 = (term706 A K)) = (term770 A K _86291)).
Proof. exact (MK_COMB (@lem6579215 A K _86291) (@lem6579221 A K _86291)). Qed.
Lemma lem6579223 {A K : Type'} (_86291 : type835 A K) : (_86291 = (term706 A K)) = (term770 A K _86291).
Proof. exact (EQ_MP (@lem6579222 A K _86291) (@lem6579209 A K _86291)). Qed.
Lemma lem6579225 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6579226 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6579225 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6579227 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term773 A K k)) = (term774 A K _86291 k).
Proof. exact (@lem6579226 A K (_86291 k) (term708 A K k)). Qed.
Lemma lem6579228 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6579229 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579228 A K k dom)). Qed.
Lemma lem6579230 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term709 A K _86291 k) = (term709 A K _86291 k).
Proof. exact (eq_refl (term709 A K _86291 k)). Qed.
Lemma lem6579231 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term773 A K k)) = ((_86291 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6579230 A K _86291 k) (@lem6579229 A K k)). Qed.
Lemma lem6579232 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579233 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term775 A K _86291 k) = (term776 A K _86291 k).
Proof. exact (MK_COMB (@lem6579232) (@lem6579231 A K _86291 k)). Qed.
Lemma lem6579234 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6579235 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86291 k dom) = (term712 A K _86291 k dom).
Proof. exact (eq_refl (term712 A K _86291 k dom)). Qed.
Lemma lem6579236 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term710 A K k dom)) = ((_86291 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6579235 A K _86291 k dom) (@lem6579234 A K k dom)). Qed.
Lemma lem6579237 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term777 A K _86291 k) = (term778 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579236 A K _86291 k dom)). Qed.
Lemma lem6579238 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579239 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term774 A K _86291 k) = (term779 A K _86291 k).
Proof. exact (MK_COMB (@lem6579238 A) (@lem6579237 A K _86291 k)). Qed.
Lemma lem6579240 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (((_86291 k) = (term773 A K k)) = (term774 A K _86291 k)) = (((_86291 k) = (term708 A K k)) = (term779 A K _86291 k)).
Proof. exact (MK_COMB (@lem6579233 A K _86291 k) (@lem6579239 A K _86291 k)). Qed.
Lemma lem6579241 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term708 A K k)) = (term779 A K _86291 k).
Proof. exact (EQ_MP (@lem6579240 A K _86291 k) (@lem6579227 A K _86291 k)). Qed.
Lemma lem6579243 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6579244 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6579243 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6579245 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term782 A K k dom)) = (term783 A K _86291 k dom).
Proof. exact (@lem6579244 A K (_86291 k dom) (term711 A K k dom)). Qed.
Lemma lem6579246 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6579247 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579246 A K k dom f)). Qed.
Lemma lem6579248 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _86291 k dom) = (term712 A K _86291 k dom).
Proof. exact (eq_refl (term712 A K _86291 k dom)). Qed.
Lemma lem6579249 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term782 A K k dom)) = ((_86291 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6579248 A K _86291 k dom) (@lem6579247 A K k dom)). Qed.
Lemma lem6579250 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579251 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _86291 k dom) = (term785 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579250) (@lem6579249 A K _86291 k dom)). Qed.
Lemma lem6579252 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6579253 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86291 k dom f) = (term715 A K _86291 k dom f).
Proof. exact (eq_refl (term715 A K _86291 k dom f)). Qed.
Lemma lem6579254 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term713 A K k dom f)) = ((_86291 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6579253 A K _86291 k dom f) (@lem6579252 A K k dom f)). Qed.
Lemma lem6579255 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _86291 k dom) = (term787 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579254 A K _86291 k dom f)). Qed.
Lemma lem6579256 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579257 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _86291 k dom) = (term788 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579256 A K) (@lem6579255 A K _86291 k dom)). Qed.
Lemma lem6579258 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_86291 k dom) = (term782 A K k dom)) = (term783 A K _86291 k dom)) = (((_86291 k dom) = (term711 A K k dom)) = (term788 A K _86291 k dom)).
Proof. exact (MK_COMB (@lem6579251 A K _86291 k dom) (@lem6579257 A K _86291 k dom)). Qed.
Lemma lem6579259 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term711 A K k dom)) = (term788 A K _86291 k dom).
Proof. exact (EQ_MP (@lem6579258 A K _86291 k dom) (@lem6579245 A K _86291 k dom)). Qed.
Lemma lem6579261 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6579262 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6579261 (K -> Prop) A s t). Qed.
Lemma lem6579263 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term791 A K k dom f)) = (term792 A K _86291 k dom f).
Proof. exact (@lem6579262 A K (_86291 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6579264 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6579265 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579264 A K k dom f neut)). Qed.
Lemma lem6579266 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _86291 k dom f) = (term715 A K _86291 k dom f).
Proof. exact (eq_refl (term715 A K _86291 k dom f)). Qed.
Lemma lem6579267 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term791 A K k dom f)) = ((_86291 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6579266 A K _86291 k dom f) (@lem6579265 A K k dom f)). Qed.
Lemma lem6579268 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579269 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _86291 k dom f) = (term794 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579268) (@lem6579267 A K _86291 k dom f)). Qed.
Lemma lem6579270 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6579271 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86291 k dom f neut) = (term717 A K _86291 k dom f neut).
Proof. exact (eq_refl (term717 A K _86291 k dom f neut)). Qed.
Lemma lem6579272 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term716 A K k dom f neut)) = ((_86291 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6579271 A K _86291 k dom f neut) (@lem6579270 A K k dom f neut)). Qed.
Lemma lem6579273 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _86291 k dom f) = (term796 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579272 A K _86291 k dom f neut)). Qed.
Lemma lem6579274 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579275 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _86291 k dom f) = (term797 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579274 A) (@lem6579273 A K _86291 k dom f)). Qed.
Lemma lem6579276 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_86291 k dom f) = (term791 A K k dom f)) = (term792 A K _86291 k dom f)) = (((_86291 k dom f) = (term714 A K k dom f)) = (term797 A K _86291 k dom f)).
Proof. exact (MK_COMB (@lem6579269 A K _86291 k dom f) (@lem6579275 A K _86291 k dom f)). Qed.
Lemma lem6579277 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term714 A K k dom f)) = (term797 A K _86291 k dom f).
Proof. exact (EQ_MP (@lem6579276 A K _86291 k dom f) (@lem6579263 A K _86291 k dom f)). Qed.
Lemma lem6579279 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6579280 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6579279 Prop K s t). Qed.
Lemma lem6579281 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _86291 k dom f neut).
Proof. exact (@lem6579280 K (_86291 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6579282 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579283 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579282 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579284 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _86291 k dom f neut) = (term717 A K _86291 k dom f neut).
Proof. exact (eq_refl (term717 A K _86291 k dom f neut)). Qed.
Lemma lem6579285 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term799 A K k dom f neut)) = ((_86291 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6579284 A K _86291 k dom f neut) (@lem6579283 A K k dom f neut)). Qed.
Lemma lem6579286 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579287 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _86291 k dom f neut) = (term803 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579286) (@lem6579285 A K _86291 k dom f neut)). Qed.
Lemma lem6579288 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579289 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _86291 k dom f neut GEN_PVAR_272) = (term804 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579290 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6579289 A K _86291 k dom f neut GEN_PVAR_272) (@lem6579288 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579291 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _86291 k dom f neut) = (term806 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579290 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579292 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579293 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _86291 k dom f neut) = (term807 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579292 K) (@lem6579291 A K _86291 k dom f neut)). Qed.
Lemma lem6579294 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_86291 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _86291 k dom f neut)) = (((_86291 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86291 k dom f neut)).
Proof. exact (MK_COMB (@lem6579287 A K _86291 k dom f neut) (@lem6579293 A K _86291 k dom f neut)). Qed.
Lemma lem6579295 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86291 k dom f neut).
Proof. exact (EQ_MP (@lem6579294 A K _86291 k dom f neut) (@lem6579281 A K _86291 k dom f neut)). Qed.
Lemma lem6579296 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6579297 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86291 k dom f neut) = (term806 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579296 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579298 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579299 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86291 k dom f neut) = (term807 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579298 K) (@lem6579297 A K _86291 k dom f neut)). Qed.
Lemma lem6579300 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _86291 k dom f neut).
Proof. exact (TRANS (@lem6579295 A K _86291 k dom f neut) (@lem6579299 A K _86291 k dom f neut)). Qed.
Lemma lem6579301 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _86291 k dom f) = (term808 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579300 A K _86291 k dom f neut)). Qed.
Lemma lem6579302 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579303 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _86291 k dom f) = (term809 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579302 A) (@lem6579301 A K _86291 k dom f)). Qed.
Lemma lem6579304 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_86291 k dom f) = (term714 A K k dom f)) = (term809 A K _86291 k dom f).
Proof. exact (TRANS (@lem6579277 A K _86291 k dom f) (@lem6579303 A K _86291 k dom f)). Qed.
Lemma lem6579305 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _86291 k dom) = (term810 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579304 A K _86291 k dom f)). Qed.
Lemma lem6579306 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579307 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _86291 k dom) = (term811 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579306 A K) (@lem6579305 A K _86291 k dom)). Qed.
Lemma lem6579308 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_86291 k dom) = (term711 A K k dom)) = (term811 A K _86291 k dom).
Proof. exact (TRANS (@lem6579259 A K _86291 k dom) (@lem6579307 A K _86291 k dom)). Qed.
Lemma lem6579309 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term778 A K _86291 k) = (term812 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579308 A K _86291 k dom)). Qed.
Lemma lem6579310 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579311 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term779 A K _86291 k) = (term813 A K _86291 k).
Proof. exact (MK_COMB (@lem6579310 A) (@lem6579309 A K _86291 k)). Qed.
Lemma lem6579312 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((_86291 k) = (term708 A K k)) = (term813 A K _86291 k).
Proof. exact (TRANS (@lem6579241 A K _86291 k) (@lem6579311 A K _86291 k)). Qed.
Lemma lem6579313 {A K : Type'} (_86291 : type835 A K) : (term769 A K _86291) = (term814 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579312 A K _86291 k)). Qed.
Lemma lem6579314 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579315 {A K : Type'} (_86291 : type835 A K) : (term770 A K _86291) = (term815 A K _86291).
Proof. exact (MK_COMB (@lem6579314 K) (@lem6579313 A K _86291)). Qed.
Lemma lem6579316 {A K : Type'} (_86291 : type835 A K) : (_86291 = (term706 A K)) = (term815 A K _86291).
Proof. exact (TRANS (@lem6579223 A K _86291) (@lem6579315 A K _86291)). Qed.
Lemma lem6579317 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6579318 {A K : Type'} (_86291 : type835 A K) : (term746 A K _86291) = (term816 A K _86291).
Proof. exact (MK_COMB (@lem6579317) (@lem6579316 A K _86291)). Qed.
Lemma lem6579319 {A K : Type'} (_86291 : type835 A K) : (term1463 A K _86291) = (term1463 A K _86291).
Proof. exact (eq_refl (term1463 A K _86291)). Qed.
Lemma lem6579320 {A K : Type'} (_86291 : type835 A K) : (term1477 A K _86291) = (term1483 A K _86291).
Proof. exact (MK_COMB (@lem6579318 A K _86291) (@lem6579319 A K _86291)). Qed.
Lemma lem6579321 {A K : Type'} : (term1479 A K) = (term1484 A K).
Proof. exact (fun_ext (fun _86291 : type835 A K => @lem6579320 A K _86291)). Qed.
Lemma lem6579322 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6579323 {A K : Type'} : (term1481 A K) = (term1485 A K).
Proof. exact (MK_COMB (@lem6579322 A K) (@lem6579321 A K)). Qed.
Lemma lem6579324 {A K : Type'} : (term1469 A K) = (term1469 A K).
Proof. exact (eq_refl (term1469 A K)). Qed.
Lemma lem6579325 {A K : Type'} : ((term1450 A K) = (term1481 A K)) = ((term1450 A K) = (term1485 A K)).
Proof. exact (MK_COMB (@lem6579324 A K) (@lem6579323 A K)). Qed.
Lemma lem6579328 {A K : Type'} : (term1450 A K) = (term1485 A K).
Proof. exact (EQ_MP (@lem6579325 A K) (@lem6579205 A K)). Qed.
Lemma lem6579329 {A K : Type'} : (term1449 A K) = (term1485 A K).
Proof. exact (TRANS (@lem6578950 A K) (@lem6579328 A K)). Qed.
Lemma lem6579362 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1416 A K i k dom f x neut) = (term1416 A K i k dom f x neut).
Proof. exact (eq_refl (term1416 A K i k dom f x neut)). Qed.
Lemma lem6579363 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1418 A K i k dom f neut) = (term1418 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6579362 A K i k dom f x neut)). Qed.
Lemma lem6579364 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579365 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1419 A K i k dom f neut) = (term1419 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6579364 K) (@lem6579363 A K i k dom f neut)). Qed.
Lemma lem6579366 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86291 k dom f neut) = (term719 A K _86291 k dom f neut).
Proof. exact (eq_refl (term719 A K _86291 k dom f neut)). Qed.
Lemma lem6579379 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6579380 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6579379 K k ltle j i)). Qed.
Lemma lem6579381 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579382 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6579381 K) (@lem6579380 K k ltle i)). Qed.
Lemma lem6579383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579384 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6579383) (@lem6579382 K k ltle i)). Qed.
Lemma lem6579385 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _86291 k dom f neut) = (term720 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579384 K k ltle i) (@lem6579366 A K _86291 k dom f neut)). Qed.
Lemma lem6579404 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6579405 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6579404 A K ltle k dom f neut j i)). Qed.
Lemma lem6579406 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579407 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6579406 K) (@lem6579405 A K ltle k dom f neut i)). Qed.
Lemma lem6579408 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579409 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6579408) (@lem6579407 A K ltle k dom f neut i)). Qed.
Lemma lem6579410 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _86291 k dom f neut) = (term721 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579409 A K ltle k dom f neut i) (@lem6579385 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6579415 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6579416 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _86291 k dom f neut) = (term722 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579415 K k i) (@lem6579410 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6579419 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6579420 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _86291 k dom f neut) = (term1311 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579419 A K dom f i) (@lem6579416 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6579425 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6579426 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _86291 k dom f neut) = (term1312 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579425 A K f i neut) (@lem6579420 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6579427 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6579428 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _86291 k dom f neut) = (term1313 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579427) (@lem6579426 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6579429 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1451 A K ltle _86291 i k dom f neut) = (term1451 A K ltle _86291 i k dom f neut).
Proof. exact (MK_COMB (@lem6579428 A K ltle i _86291 k dom f neut) (@lem6579365 A K i k dom f neut)). Qed.
Lemma lem6579430 {A K : Type'} (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1452 A K _86291 i k dom f neut) = (term1452 A K _86291 i k dom f neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6579429 A K ltle _86291 i k dom f neut)). Qed.
Lemma lem6579431 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6579432 {A K : Type'} (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1453 A K _86291 i k dom f neut) = (term1453 A K _86291 i k dom f neut).
Proof. exact (MK_COMB (@lem6579431 K) (@lem6579430 A K _86291 i k dom f neut)). Qed.
Lemma lem6579433 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1454 A K _86291 k dom f neut) = (term1454 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6579432 A K _86291 i k dom f neut)). Qed.
Lemma lem6579434 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579435 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1455 A K _86291 k dom f neut) = (term1455 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579434 K) (@lem6579433 A K _86291 k dom f neut)). Qed.
Lemma lem6579436 {A K : Type'} (_86291 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1456 A K _86291 dom f neut) = (term1456 A K _86291 dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579435 A K _86291 k dom f neut)). Qed.
Lemma lem6579437 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579438 {A K : Type'} (_86291 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1457 A K _86291 dom f neut) = (term1457 A K _86291 dom f neut).
Proof. exact (MK_COMB (@lem6579437 K) (@lem6579436 A K _86291 dom f neut)). Qed.
Lemma lem6579439 {A K : Type'} (_86291 : type835 A K) (f : K -> A) (neut : A) : (term1458 A K _86291 f neut) = (term1458 A K _86291 f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579438 A K _86291 dom f neut)). Qed.
Lemma lem6579440 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579441 {A K : Type'} (_86291 : type835 A K) (f : K -> A) (neut : A) : (term1459 A K _86291 f neut) = (term1459 A K _86291 f neut).
Proof. exact (MK_COMB (@lem6579440 A) (@lem6579439 A K _86291 f neut)). Qed.
Lemma lem6579442 {A K : Type'} (_86291 : type835 A K) (neut : A) : (term1460 A K _86291 neut) = (term1460 A K _86291 neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6579441 A K _86291 f neut)). Qed.
Lemma lem6579443 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579444 {A K : Type'} (_86291 : type835 A K) (neut : A) : (term1461 A K _86291 neut) = (term1461 A K _86291 neut).
Proof. exact (MK_COMB (@lem6579443 A K) (@lem6579442 A K _86291 neut)). Qed.
Lemma lem6579445 {A K : Type'} (_86291 : type835 A K) : (term1462 A K _86291) = (term1462 A K _86291).
Proof. exact (fun_ext (fun neut : A => @lem6579444 A K _86291 neut)). Qed.
Lemma lem6579446 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579447 {A K : Type'} (_86291 : type835 A K) : (term1463 A K _86291) = (term1463 A K _86291).
Proof. exact (MK_COMB (@lem6579446 A) (@lem6579445 A K _86291)). Qed.
Lemma lem6579448 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579449 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6579448 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579450 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6579451 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579450 K) (@lem6579449 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579454 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _86291 k dom f neut GEN_PVAR_272) = (term804 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579455 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6579454 A K _86291 k dom f neut GEN_PVAR_272) (@lem6579451 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579456 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86291 k dom f neut) = (term806 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579455 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579457 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579458 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86291 k dom f neut) = (term807 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579457 K) (@lem6579456 A K _86291 k dom f neut)). Qed.
Lemma lem6579459 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _86291 k dom f) = (term808 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579458 A K _86291 k dom f neut)). Qed.
Lemma lem6579460 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579461 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _86291 k dom f) = (term809 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579460 A) (@lem6579459 A K _86291 k dom f)). Qed.
Lemma lem6579462 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _86291 k dom) = (term810 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579461 A K _86291 k dom f)). Qed.
Lemma lem6579463 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579464 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _86291 k dom) = (term811 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579463 A K) (@lem6579462 A K _86291 k dom)). Qed.
Lemma lem6579465 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term812 A K _86291 k) = (term812 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579464 A K _86291 k dom)). Qed.
Lemma lem6579466 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579467 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term813 A K _86291 k) = (term813 A K _86291 k).
Proof. exact (MK_COMB (@lem6579466 A) (@lem6579465 A K _86291 k)). Qed.
Lemma lem6579468 {A K : Type'} (_86291 : type835 A K) : (term814 A K _86291) = (term814 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579467 A K _86291 k)). Qed.
Lemma lem6579469 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579470 {A K : Type'} (_86291 : type835 A K) : (term815 A K _86291) = (term815 A K _86291).
Proof. exact (MK_COMB (@lem6579469 K) (@lem6579468 A K _86291)). Qed.
Lemma lem6579471 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6579472 {A K : Type'} (_86291 : type835 A K) : (term816 A K _86291) = (term816 A K _86291).
Proof. exact (MK_COMB (@lem6579471) (@lem6579470 A K _86291)). Qed.
Lemma lem6579473 {A K : Type'} (_86291 : type835 A K) : (term1483 A K _86291) = (term1483 A K _86291).
Proof. exact (MK_COMB (@lem6579472 A K _86291) (@lem6579447 A K _86291)). Qed.
Lemma lem6579474 {A K : Type'} : (term1484 A K) = (term1484 A K).
Proof. exact (fun_ext (fun _86291 : type835 A K => @lem6579473 A K _86291)). Qed.
Lemma lem6579475 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6579476 {A K : Type'} : (term1485 A K) = (term1485 A K).
Proof. exact (MK_COMB (@lem6579475 A K) (@lem6579474 A K)). Qed.
Lemma lem6579621 {A K : Type'} : (term1449 A K) = (term1485 A K).
Proof. exact (TRANS (@lem6579329 A K) (@lem6579476 A K)). Qed.
Lemma lem6579622 {A K : Type'} : (term1485 A K) = (term1449 A K).
Proof. exact (SYM (@lem6579621 A K)). Qed.
Lemma lem6579623 {A K : Type'} (_86291 : type835 A K) (h1 : term815 A K _86291) : term815 A K _86291.
Proof. exact (h1). Qed.
Lemma lem6579624 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1312 A K ltle i _86291 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6579627 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6579628 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1414 A K i k dom f x neut) = (term1486 A K i k dom f x neut).
Proof. exact (@lem6579627 (term1414 A K i k dom f x neut)). Qed.
Lemma lem6579629 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1486 A K i k dom f x neut) = (term1414 A K i k dom f x neut).
Proof. exact (SYM (@lem6579628 A K i k dom f x neut)). Qed.
Lemma lem6579630 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) : term1487 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6579634 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579635 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6579636 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6579635 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579637 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579638 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6579640 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6579638) (@lem6579637 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579641 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6579640 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579642 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579643 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579642 K) (@lem6579641 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579644 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6579636 A K GEN_PVAR_272 k dom f neut) (@lem6579643 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579645 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6579634 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6579646 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6579647 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579646 K) (@lem6579645 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579649 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86291 k dom f neut GEN_PVAR_272) = (term831 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579650 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _86291 GEN_PVAR_272 k dom f neut) = (term832 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579649 A K _86291 k dom f neut GEN_PVAR_272) (@lem6579647 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579652 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _86291 k dom f neut GEN_PVAR_272) = (term833 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579653 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _86291 GEN_PVAR_272 k dom f neut) = (term835 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579652 A K _86291 k dom f neut GEN_PVAR_272) (@lem6579644 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579654 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579655 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _86291 GEN_PVAR_272 k dom f neut) = (term837 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579654) (@lem6579653 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579656 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _86291 GEN_PVAR_272 k dom f neut) = (term839 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579655 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6579650 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579657 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_86291 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579658 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_86291 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6579657 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6579656 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579659 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _86291 k dom f neut) = (term840 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579658 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579660 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579661 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _86291 k dom f neut) = (term841 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579660 K) (@lem6579659 A K _86291 k dom f neut)). Qed.
Lemma lem6579662 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _86291 k dom f) = (term842 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579661 A K _86291 k dom f neut)). Qed.
Lemma lem6579663 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579664 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _86291 k dom f) = (term843 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579663 A) (@lem6579662 A K _86291 k dom f)). Qed.
Lemma lem6579665 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _86291 k dom) = (term844 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579664 A K _86291 k dom f)). Qed.
Lemma lem6579666 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579667 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _86291 k dom) = (term845 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579666 A K) (@lem6579665 A K _86291 k dom)). Qed.
Lemma lem6579668 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term812 A K _86291 k) = (term846 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6579667 A K _86291 k dom)). Qed.
Lemma lem6579669 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6579670 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term813 A K _86291 k) = (term847 A K _86291 k).
Proof. exact (MK_COMB (@lem6579669 A) (@lem6579668 A K _86291 k)). Qed.
Lemma lem6579671 {A K : Type'} (_86291 : type835 A K) : (term814 A K _86291) = (term848 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6579670 A K _86291 k)). Qed.
Lemma lem6579672 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6579673 {A K : Type'} (_86291 : type835 A K) : (term815 A K _86291) = (term849 A K _86291).
Proof. exact (MK_COMB (@lem6579672 K) (@lem6579671 A K _86291)). Qed.
Lemma lem6579691 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6579692 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6579691 K P Q). Qed.
Lemma lem6579693 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _86291 k dom f neut) = (term853 A K _86291 k dom f neut).
Proof. exact (@lem6579692 K (term854 A K _86291 k dom f neut) (term855 A K _86291 k dom f neut)). Qed.
Lemma lem6579694 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _86291 k dom f neut GEN_PVAR_272) = (term835 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579695 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579696 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _86291 k dom f neut GEN_PVAR_272) = (term837 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579695) (@lem6579694 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579697 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _86291 k dom f neut GEN_PVAR_272) = (term832 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579698 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _86291 k dom f neut GEN_PVAR_272) = (term839 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6579696 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6579697 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579699 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _86291 k dom f neut) = (term840 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579698 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579700 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579701 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _86291 k dom f neut) = (term841 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579700 K) (@lem6579699 A K _86291 k dom f neut)). Qed.
Lemma lem6579702 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579703 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _86291 k dom f neut) = (term862 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579702) (@lem6579701 A K _86291 k dom f neut)). Qed.
Lemma lem6579704 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _86291 k dom f neut GEN_PVAR_272) = (term835 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579705 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _86291 k dom f neut) = (term854 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579704 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579706 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579707 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _86291 k dom f neut) = (term865 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579706 K) (@lem6579705 A K _86291 k dom f neut)). Qed.
Lemma lem6579708 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579709 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _86291 k dom f neut) = (term867 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579708) (@lem6579707 A K _86291 k dom f neut)). Qed.
Lemma lem6579710 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _86291 k dom f neut GEN_PVAR_272) = (term832 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6579711 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _86291 k dom f neut) = (term855 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6579710 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6579712 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6579713 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _86291 k dom f neut) = (term870 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579712 K) (@lem6579711 A K _86291 k dom f neut)). Qed.
Lemma lem6579714 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _86291 k dom f neut) = (term871 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579709 A K _86291 k dom f neut) (@lem6579713 A K _86291 k dom f neut)). Qed.
Lemma lem6579715 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _86291 k dom f neut) = (term853 A K _86291 k dom f neut)) = ((term841 A K _86291 k dom f neut) = (term871 A K _86291 k dom f neut)).
Proof. exact (MK_COMB (@lem6579703 A K _86291 k dom f neut) (@lem6579714 A K _86291 k dom f neut)). Qed.
Lemma lem6579716 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _86291 k dom f neut) = (term871 A K _86291 k dom f neut).
Proof. exact (EQ_MP (@lem6579715 A K _86291 k dom f neut) (@lem6579693 A K _86291 k dom f neut)). Qed.
Lemma lem6579821 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _86291 k dom f) = (term872 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579716 A K _86291 k dom f neut)). Qed.
Lemma lem6579822 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579823 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _86291 k dom f) = (term873 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579822 A) (@lem6579821 A K _86291 k dom f)). Qed.
Lemma lem6579825 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6579826 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6579825 A P Q). Qed.
Lemma lem6579827 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _86291 k dom f) = (term875 A K _86291 k dom f).
Proof. exact (@lem6579826 A (term876 A K _86291 k dom f) (term877 A K _86291 k dom f)). Qed.
Lemma lem6579828 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _86291 k dom f neut) = (term865 A K _86291 k dom f neut).
Proof. exact (eq_refl (term878 A K _86291 k dom f neut)). Qed.
Lemma lem6579829 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579830 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _86291 k dom f neut) = (term867 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579829) (@lem6579828 A K _86291 k dom f neut)). Qed.
Lemma lem6579831 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _86291 k dom f neut) = (term870 A K _86291 k dom f neut).
Proof. exact (eq_refl (term880 A K _86291 k dom f neut)). Qed.
Lemma lem6579832 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _86291 k dom f neut) = (term871 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6579830 A K _86291 k dom f neut) (@lem6579831 A K _86291 k dom f neut)). Qed.
Lemma lem6579833 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _86291 k dom f) = (term872 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579832 A K _86291 k dom f neut)). Qed.
Lemma lem6579834 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579835 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _86291 k dom f) = (term873 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579834 A) (@lem6579833 A K _86291 k dom f)). Qed.
Lemma lem6579836 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579837 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _86291 k dom f) = (term884 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579836) (@lem6579835 A K _86291 k dom f)). Qed.
Lemma lem6579838 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _86291 k dom f neut) = (term865 A K _86291 k dom f neut).
Proof. exact (eq_refl (term878 A K _86291 k dom f neut)). Qed.
Lemma lem6579839 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _86291 k dom f) = (term876 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579838 A K _86291 k dom f neut)). Qed.
Lemma lem6579840 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579841 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _86291 k dom f) = (term887 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579840 A) (@lem6579839 A K _86291 k dom f)). Qed.
Lemma lem6579842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579843 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _86291 k dom f) = (term889 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579842) (@lem6579841 A K _86291 k dom f)). Qed.
Lemma lem6579844 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _86291 k dom f neut) = (term870 A K _86291 k dom f neut).
Proof. exact (eq_refl (term880 A K _86291 k dom f neut)). Qed.
Lemma lem6579845 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _86291 k dom f) = (term877 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6579844 A K _86291 k dom f neut)). Qed.
Lemma lem6579846 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6579847 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _86291 k dom f) = (term892 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579846 A) (@lem6579845 A K _86291 k dom f)). Qed.
Lemma lem6579848 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _86291 k dom f) = (term893 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579843 A K _86291 k dom f) (@lem6579847 A K _86291 k dom f)). Qed.
Lemma lem6579849 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _86291 k dom f) = (term875 A K _86291 k dom f)) = ((term873 A K _86291 k dom f) = (term893 A K _86291 k dom f)).
Proof. exact (MK_COMB (@lem6579837 A K _86291 k dom f) (@lem6579848 A K _86291 k dom f)). Qed.
Lemma lem6579850 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _86291 k dom f) = (term893 A K _86291 k dom f).
Proof. exact (EQ_MP (@lem6579849 A K _86291 k dom f) (@lem6579827 A K _86291 k dom f)). Qed.
Lemma lem6579963 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _86291 k dom f) = (term893 A K _86291 k dom f).
Proof. exact (TRANS (@lem6579823 A K _86291 k dom f) (@lem6579850 A K _86291 k dom f)). Qed.
Lemma lem6579964 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _86291 k dom) = (term894 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579963 A K _86291 k dom f)). Qed.
Lemma lem6579965 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579966 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _86291 k dom) = (term895 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579965 A K) (@lem6579964 A K _86291 k dom)). Qed.
Lemma lem6579968 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6579969 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6579968 (K -> A) P Q). Qed.
Lemma lem6579970 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _86291 k dom) = (term899 A K _86291 k dom).
Proof. exact (@lem6579969 A K (term900 A K _86291 k dom) (term901 A K _86291 k dom)). Qed.
Lemma lem6579971 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _86291 k dom f) = (term887 A K _86291 k dom f).
Proof. exact (eq_refl (term902 A K _86291 k dom f)). Qed.
Lemma lem6579972 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579973 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _86291 k dom f) = (term889 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579972) (@lem6579971 A K _86291 k dom f)). Qed.
Lemma lem6579974 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _86291 k dom f) = (term892 A K _86291 k dom f).
Proof. exact (eq_refl (term904 A K _86291 k dom f)). Qed.
Lemma lem6579975 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _86291 k dom f) = (term893 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6579973 A K _86291 k dom f) (@lem6579974 A K _86291 k dom f)). Qed.
Lemma lem6579976 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _86291 k dom) = (term894 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579975 A K _86291 k dom f)). Qed.
Lemma lem6579977 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579978 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _86291 k dom) = (term895 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579977 A K) (@lem6579976 A K _86291 k dom)). Qed.
Lemma lem6579979 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6579980 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _86291 k dom) = (term908 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579979) (@lem6579978 A K _86291 k dom)). Qed.
Lemma lem6579981 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _86291 k dom f) = (term887 A K _86291 k dom f).
Proof. exact (eq_refl (term902 A K _86291 k dom f)). Qed.
Lemma lem6579982 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _86291 k dom) = (term900 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579981 A K _86291 k dom f)). Qed.
Lemma lem6579983 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579984 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _86291 k dom) = (term911 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579983 A K) (@lem6579982 A K _86291 k dom)). Qed.
Lemma lem6579985 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6579986 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _86291 k dom) = (term913 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579985) (@lem6579984 A K _86291 k dom)). Qed.
Lemma lem6579987 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _86291 k dom f) = (term892 A K _86291 k dom f).
Proof. exact (eq_refl (term904 A K _86291 k dom f)). Qed.
Lemma lem6579988 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _86291 k dom) = (term901 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6579987 A K _86291 k dom f)). Qed.
Lemma lem6579989 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6579990 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _86291 k dom) = (term916 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579989 A K) (@lem6579988 A K _86291 k dom)). Qed.
Lemma lem6579991 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _86291 k dom) = (term917 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6579986 A K _86291 k dom) (@lem6579990 A K _86291 k dom)). Qed.
Lemma lem6579992 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _86291 k dom) = (term899 A K _86291 k dom)) = ((term895 A K _86291 k dom) = (term917 A K _86291 k dom)).
Proof. exact (MK_COMB (@lem6579980 A K _86291 k dom) (@lem6579991 A K _86291 k dom)). Qed.
Lemma lem6579993 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _86291 k dom) = (term917 A K _86291 k dom).
Proof. exact (EQ_MP (@lem6579992 A K _86291 k dom) (@lem6579970 A K _86291 k dom)). Qed.
Lemma lem6580114 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _86291 k dom) = (term917 A K _86291 k dom).
Proof. exact (TRANS (@lem6579966 A K _86291 k dom) (@lem6579993 A K _86291 k dom)). Qed.
Lemma lem6580115 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term846 A K _86291 k) = (term918 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580114 A K _86291 k dom)). Qed.
Lemma lem6580116 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580117 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term847 A K _86291 k) = (term919 A K _86291 k).
Proof. exact (MK_COMB (@lem6580116 A) (@lem6580115 A K _86291 k)). Qed.
Lemma lem6580119 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6580120 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6580119 (A -> Prop) P Q). Qed.
Lemma lem6580121 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term922 A K _86291 k) = (term923 A K _86291 k).
Proof. exact (@lem6580120 A (term924 A K _86291 k) (term925 A K _86291 k)). Qed.
Lemma lem6580122 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _86291 k dom) = (term911 A K _86291 k dom).
Proof. exact (eq_refl (term926 A K _86291 k dom)). Qed.
Lemma lem6580123 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580124 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _86291 k dom) = (term913 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580123) (@lem6580122 A K _86291 k dom)). Qed.
Lemma lem6580125 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _86291 k dom) = (term916 A K _86291 k dom).
Proof. exact (eq_refl (term928 A K _86291 k dom)). Qed.
Lemma lem6580126 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _86291 k dom) = (term917 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580124 A K _86291 k dom) (@lem6580125 A K _86291 k dom)). Qed.
Lemma lem6580127 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term930 A K _86291 k) = (term918 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580126 A K _86291 k dom)). Qed.
Lemma lem6580128 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580129 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term922 A K _86291 k) = (term919 A K _86291 k).
Proof. exact (MK_COMB (@lem6580128 A) (@lem6580127 A K _86291 k)). Qed.
Lemma lem6580130 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580131 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term931 A K _86291 k) = (term932 A K _86291 k).
Proof. exact (MK_COMB (@lem6580130) (@lem6580129 A K _86291 k)). Qed.
Lemma lem6580132 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _86291 k dom) = (term911 A K _86291 k dom).
Proof. exact (eq_refl (term926 A K _86291 k dom)). Qed.
Lemma lem6580133 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term933 A K _86291 k) = (term924 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580132 A K _86291 k dom)). Qed.
Lemma lem6580134 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580135 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term934 A K _86291 k) = (term935 A K _86291 k).
Proof. exact (MK_COMB (@lem6580134 A) (@lem6580133 A K _86291 k)). Qed.
Lemma lem6580136 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580137 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term936 A K _86291 k) = (term937 A K _86291 k).
Proof. exact (MK_COMB (@lem6580136) (@lem6580135 A K _86291 k)). Qed.
Lemma lem6580138 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _86291 k dom) = (term916 A K _86291 k dom).
Proof. exact (eq_refl (term928 A K _86291 k dom)). Qed.
Lemma lem6580139 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term938 A K _86291 k) = (term925 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580138 A K _86291 k dom)). Qed.
Lemma lem6580140 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580141 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term939 A K _86291 k) = (term940 A K _86291 k).
Proof. exact (MK_COMB (@lem6580140 A) (@lem6580139 A K _86291 k)). Qed.
Lemma lem6580142 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term923 A K _86291 k) = (term941 A K _86291 k).
Proof. exact (MK_COMB (@lem6580137 A K _86291 k) (@lem6580141 A K _86291 k)). Qed.
Lemma lem6580143 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((term922 A K _86291 k) = (term923 A K _86291 k)) = ((term919 A K _86291 k) = (term941 A K _86291 k)).
Proof. exact (MK_COMB (@lem6580131 A K _86291 k) (@lem6580142 A K _86291 k)). Qed.
Lemma lem6580144 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term919 A K _86291 k) = (term941 A K _86291 k).
Proof. exact (EQ_MP (@lem6580143 A K _86291 k) (@lem6580121 A K _86291 k)). Qed.
Lemma lem6580273 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term847 A K _86291 k) = (term941 A K _86291 k).
Proof. exact (TRANS (@lem6580117 A K _86291 k) (@lem6580144 A K _86291 k)). Qed.
Lemma lem6580274 {A K : Type'} (_86291 : type835 A K) : (term848 A K _86291) = (term942 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580273 A K _86291 k)). Qed.
Lemma lem6580275 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580276 {A K : Type'} (_86291 : type835 A K) : (term849 A K _86291) = (term943 A K _86291).
Proof. exact (MK_COMB (@lem6580275 K) (@lem6580274 A K _86291)). Qed.
Lemma lem6580278 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6580279 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6580278 (K -> Prop) P Q). Qed.
Lemma lem6580280 {A K : Type'} (_86291 : type835 A K) : (term944 A K _86291) = (term945 A K _86291).
Proof. exact (@lem6580279 K (term946 A K _86291) (term947 A K _86291)). Qed.
Lemma lem6580281 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term948 A K _86291 k) = (term935 A K _86291 k).
Proof. exact (eq_refl (term948 A K _86291 k)). Qed.
Lemma lem6580282 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580283 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term949 A K _86291 k) = (term937 A K _86291 k).
Proof. exact (MK_COMB (@lem6580282) (@lem6580281 A K _86291 k)). Qed.
Lemma lem6580284 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term950 A K _86291 k) = (term940 A K _86291 k).
Proof. exact (eq_refl (term950 A K _86291 k)). Qed.
Lemma lem6580285 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term951 A K _86291 k) = (term941 A K _86291 k).
Proof. exact (MK_COMB (@lem6580283 A K _86291 k) (@lem6580284 A K _86291 k)). Qed.
Lemma lem6580286 {A K : Type'} (_86291 : type835 A K) : (term952 A K _86291) = (term942 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580285 A K _86291 k)). Qed.
Lemma lem6580287 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580288 {A K : Type'} (_86291 : type835 A K) : (term944 A K _86291) = (term943 A K _86291).
Proof. exact (MK_COMB (@lem6580287 K) (@lem6580286 A K _86291)). Qed.
Lemma lem6580289 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580290 {A K : Type'} (_86291 : type835 A K) : (term953 A K _86291) = (term954 A K _86291).
Proof. exact (MK_COMB (@lem6580289) (@lem6580288 A K _86291)). Qed.
Lemma lem6580291 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term948 A K _86291 k) = (term935 A K _86291 k).
Proof. exact (eq_refl (term948 A K _86291 k)). Qed.
Lemma lem6580292 {A K : Type'} (_86291 : type835 A K) : (term955 A K _86291) = (term946 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580291 A K _86291 k)). Qed.
Lemma lem6580293 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580294 {A K : Type'} (_86291 : type835 A K) : (term956 A K _86291) = (term957 A K _86291).
Proof. exact (MK_COMB (@lem6580293 K) (@lem6580292 A K _86291)). Qed.
Lemma lem6580295 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580296 {A K : Type'} (_86291 : type835 A K) : (term958 A K _86291) = (term959 A K _86291).
Proof. exact (MK_COMB (@lem6580295) (@lem6580294 A K _86291)). Qed.
Lemma lem6580297 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term950 A K _86291 k) = (term940 A K _86291 k).
Proof. exact (eq_refl (term950 A K _86291 k)). Qed.
Lemma lem6580298 {A K : Type'} (_86291 : type835 A K) : (term960 A K _86291) = (term947 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580297 A K _86291 k)). Qed.
Lemma lem6580299 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580300 {A K : Type'} (_86291 : type835 A K) : (term961 A K _86291) = (term962 A K _86291).
Proof. exact (MK_COMB (@lem6580299 K) (@lem6580298 A K _86291)). Qed.
Lemma lem6580301 {A K : Type'} (_86291 : type835 A K) : (term945 A K _86291) = (term963 A K _86291).
Proof. exact (MK_COMB (@lem6580296 A K _86291) (@lem6580300 A K _86291)). Qed.
Lemma lem6580302 {A K : Type'} (_86291 : type835 A K) : ((term944 A K _86291) = (term945 A K _86291)) = ((term943 A K _86291) = (term963 A K _86291)).
Proof. exact (MK_COMB (@lem6580290 A K _86291) (@lem6580301 A K _86291)). Qed.
Lemma lem6580303 {A K : Type'} (_86291 : type835 A K) : (term943 A K _86291) = (term963 A K _86291).
Proof. exact (EQ_MP (@lem6580302 A K _86291) (@lem6580280 A K _86291)). Qed.
Lemma lem6580440 {A K : Type'} (_86291 : type835 A K) : (term849 A K _86291) = (term963 A K _86291).
Proof. exact (TRANS (@lem6580276 A K _86291) (@lem6580303 A K _86291)). Qed.
Lemma lem6580442 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6580443 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6580442 K P Q). Qed.
Lemma lem6580444 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _86291 GEN_PVAR_272 k dom f neut) = (term967 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6580443 K (term968 A K _86291 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580445 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580446 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6580445 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580447 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6580448 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6580447 K) (@lem6580446 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580449 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86291 k dom f neut GEN_PVAR_272) = (term831 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6580450 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _86291 GEN_PVAR_272 k dom f neut) = (term832 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6580449 A K _86291 k dom f neut GEN_PVAR_272) (@lem6580448 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580451 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580452 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _86291 GEN_PVAR_272 k dom f neut) = (term972 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6580451) (@lem6580450 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580453 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580454 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _86291 k dom f neut GEN_PVAR_272) = (term831 A K _86291 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6580455 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _86291 GEN_PVAR_272 k dom f neut j) = (term974 A K _86291 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6580454 A K _86291 k dom f neut GEN_PVAR_272) (@lem6580453 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580456 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _86291 GEN_PVAR_272 k dom f neut) = (term976 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6580455 A K _86291 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580457 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6580458 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _86291 GEN_PVAR_272 k dom f neut) = (term977 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6580457 K) (@lem6580456 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580459 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _86291 GEN_PVAR_272 k dom f neut) = (term967 A K _86291 GEN_PVAR_272 k dom f neut)) = ((term832 A K _86291 GEN_PVAR_272 k dom f neut) = (term977 A K _86291 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6580452 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6580458 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580460 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _86291 GEN_PVAR_272 k dom f neut) = (term977 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6580459 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6580444 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580461 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _86291 k dom f neut) = (term978 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6580460 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580462 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580463 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _86291 k dom f neut) = (term979 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580462 K) (@lem6580461 A K _86291 k dom f neut)). Qed.
Lemma lem6580465 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6580466 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6580465 K K P). Qed.
Lemma lem6580467 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _86291 k dom f neut) = (term985 A K _86291 k dom f neut).
Proof. exact (@lem6580466 K (term986 A K _86291 k dom f neut)). Qed.
Lemma lem6580468 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _86291 k dom f neut GEN_PVAR_272) = (term976 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6580469 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580470 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _86291 k dom f neut GEN_PVAR_272 j) = (term989 A K _86291 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6580468 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6580469 K j)). Qed.
Lemma lem6580471 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _86291 GEN_PVAR_272 k dom f neut j) = (term974 A K _86291 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _86291 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580472 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _86291 k dom f neut GEN_PVAR_272 j) = (term974 A K _86291 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6580470 A K _86291 GEN_PVAR_272 k dom f neut j) (@lem6580471 A K _86291 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580473 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _86291 k dom f neut GEN_PVAR_272) = (term976 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6580472 A K _86291 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6580474 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6580475 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _86291 k dom f neut GEN_PVAR_272) = (term977 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6580474 K) (@lem6580473 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580476 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _86291 k dom f neut) = (term978 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6580475 A K _86291 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6580477 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580478 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _86291 k dom f neut) = (term979 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580477 K) (@lem6580476 A K _86291 k dom f neut)). Qed.
Lemma lem6580479 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580480 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _86291 k dom f neut) = (term994 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580479) (@lem6580478 A K _86291 k dom f neut)). Qed.
Lemma lem6580481 {A K : Type'} (_86291 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _86291 k dom f neut GEN_PVAR_272) = (term976 A K _86291 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _86291 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6580482 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6580483 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _86291 k dom f neut j GEN_PVAR_272) = (term996 A K _86291 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6580481 A K _86291 GEN_PVAR_272 k dom f neut) (@lem6580482 K j GEN_PVAR_272)). Qed.
Lemma lem6580484 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _86291 k dom f neut j GEN_PVAR_272) = (term997 A K _86291 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _86291 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6580485 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _86291 k dom f neut j GEN_PVAR_272) = (term997 A K _86291 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6580483 A K _86291 k dom f neut j GEN_PVAR_272) (@lem6580484 A K _86291 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6580486 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _86291 k dom f neut j) = (term999 A K _86291 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6580485 A K _86291 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6580487 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580488 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _86291 k dom f neut j) = (term1001 A K _86291 k dom f neut j).
Proof. exact (MK_COMB (@lem6580487 K) (@lem6580486 A K _86291 k dom f neut j)). Qed.
Lemma lem6580489 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _86291 k dom f neut) = (term1003 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6580488 A K _86291 k dom f neut j)). Qed.
Lemma lem6580490 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6580491 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _86291 k dom f neut) = (term1004 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580490 K) (@lem6580489 A K _86291 k dom f neut)). Qed.
Lemma lem6580492 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _86291 k dom f neut) = (term985 A K _86291 k dom f neut)) = ((term979 A K _86291 k dom f neut) = (term1004 A K _86291 k dom f neut)).
Proof. exact (MK_COMB (@lem6580480 A K _86291 k dom f neut) (@lem6580491 A K _86291 k dom f neut)). Qed.
Lemma lem6580493 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _86291 k dom f neut) = (term1004 A K _86291 k dom f neut).
Proof. exact (EQ_MP (@lem6580492 A K _86291 k dom f neut) (@lem6580467 A K _86291 k dom f neut)). Qed.
Lemma lem6580494 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _86291 k dom f neut) = (term1004 A K _86291 k dom f neut).
Proof. exact (TRANS (@lem6580463 A K _86291 k dom f neut) (@lem6580493 A K _86291 k dom f neut)). Qed.
Lemma lem6580495 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _86291 k dom f) = (term1005 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6580494 A K _86291 k dom f neut)). Qed.
Lemma lem6580496 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6580497 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _86291 k dom f) = (term1006 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580496 A) (@lem6580495 A K _86291 k dom f)). Qed.
Lemma lem6580499 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6580500 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6580499 A (K -> K) P). Qed.
Lemma lem6580501 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _86291 k dom f) = (term1010 A K _86291 k dom f).
Proof. exact (@lem6580500 A K (term1011 A K _86291 k dom f)). Qed.
Lemma lem6580502 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _86291 k dom f neut) = (term1003 A K _86291 k dom f neut).
Proof. exact (eq_refl (term1012 A K _86291 k dom f neut)). Qed.
Lemma lem6580503 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580504 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _86291 k dom f neut j) = (term1014 A K _86291 k dom f neut j).
Proof. exact (MK_COMB (@lem6580502 A K _86291 k dom f neut) (@lem6580503 K j)). Qed.
Lemma lem6580505 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _86291 k dom f neut j) = (term1001 A K _86291 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _86291 k dom f neut j)). Qed.
Lemma lem6580506 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _86291 k dom f neut j) = (term1001 A K _86291 k dom f neut j).
Proof. exact (TRANS (@lem6580504 A K _86291 k dom f neut j) (@lem6580505 A K _86291 k dom f neut j)). Qed.
Lemma lem6580507 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _86291 k dom f neut) = (term1003 A K _86291 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6580506 A K _86291 k dom f neut j)). Qed.
Lemma lem6580508 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6580509 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _86291 k dom f neut) = (term1004 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580508 K) (@lem6580507 A K _86291 k dom f neut)). Qed.
Lemma lem6580510 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _86291 k dom f) = (term1005 A K _86291 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6580509 A K _86291 k dom f neut)). Qed.
Lemma lem6580511 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6580512 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _86291 k dom f) = (term1006 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580511 A) (@lem6580510 A K _86291 k dom f)). Qed.
Lemma lem6580513 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580514 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _86291 k dom f) = (term1019 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580513) (@lem6580512 A K _86291 k dom f)). Qed.
Lemma lem6580515 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _86291 k dom f neut) = (term1003 A K _86291 k dom f neut).
Proof. exact (eq_refl (term1012 A K _86291 k dom f neut)). Qed.
Lemma lem6580516 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6580517 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _86291 k dom f j neut) = (term1021 A K _86291 k dom f j neut).
Proof. exact (MK_COMB (@lem6580515 A K _86291 k dom f neut) (@lem6580516 A K j neut)). Qed.
Lemma lem6580518 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _86291 k dom f j neut) = (term1022 A K _86291 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _86291 k dom f j neut)). Qed.
Lemma lem6580519 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _86291 k dom f j neut) = (term1022 A K _86291 k dom f j neut).
Proof. exact (TRANS (@lem6580517 A K _86291 k dom f j neut) (@lem6580518 A K _86291 k dom f j neut)). Qed.
Lemma lem6580520 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _86291 k dom f j) = (term1024 A K _86291 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6580519 A K _86291 k dom f j neut)). Qed.
Lemma lem6580521 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6580522 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _86291 k dom f j) = (term1026 A K _86291 k dom f j).
Proof. exact (MK_COMB (@lem6580521 A) (@lem6580520 A K _86291 k dom f j)). Qed.
Lemma lem6580523 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _86291 k dom f) = (term1028 A K _86291 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6580522 A K _86291 k dom f j)). Qed.
Lemma lem6580524 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6580525 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _86291 k dom f) = (term1029 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580524 A K) (@lem6580523 A K _86291 k dom f)). Qed.
Lemma lem6580526 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _86291 k dom f) = (term1010 A K _86291 k dom f)) = ((term1006 A K _86291 k dom f) = (term1029 A K _86291 k dom f)).
Proof. exact (MK_COMB (@lem6580514 A K _86291 k dom f) (@lem6580525 A K _86291 k dom f)). Qed.
Lemma lem6580527 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _86291 k dom f) = (term1029 A K _86291 k dom f).
Proof. exact (EQ_MP (@lem6580526 A K _86291 k dom f) (@lem6580501 A K _86291 k dom f)). Qed.
Lemma lem6580528 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _86291 k dom f) = (term1029 A K _86291 k dom f).
Proof. exact (TRANS (@lem6580497 A K _86291 k dom f) (@lem6580527 A K _86291 k dom f)). Qed.
Lemma lem6580529 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _86291 k dom) = (term1030 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6580528 A K _86291 k dom f)). Qed.
Lemma lem6580530 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6580531 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _86291 k dom) = (term1031 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580530 A K) (@lem6580529 A K _86291 k dom)). Qed.
Lemma lem6580533 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6580534 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6580533 (K -> A) (type1411 A K) P). Qed.
Lemma lem6580535 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _86291 k dom) = (term1035 A K _86291 k dom).
Proof. exact (@lem6580534 A K (term1036 A K _86291 k dom)). Qed.
Lemma lem6580536 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _86291 k dom f) = (term1028 A K _86291 k dom f).
Proof. exact (eq_refl (term1037 A K _86291 k dom f)). Qed.
Lemma lem6580537 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580538 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _86291 k dom f j) = (term1039 A K _86291 k dom f j).
Proof. exact (MK_COMB (@lem6580536 A K _86291 k dom f) (@lem6580537 A K j)). Qed.
Lemma lem6580539 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _86291 k dom f j) = (term1026 A K _86291 k dom f j).
Proof. exact (eq_refl (term1039 A K _86291 k dom f j)). Qed.
Lemma lem6580540 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _86291 k dom f j) = (term1026 A K _86291 k dom f j).
Proof. exact (TRANS (@lem6580538 A K _86291 k dom f j) (@lem6580539 A K _86291 k dom f j)). Qed.
Lemma lem6580541 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _86291 k dom f) = (term1028 A K _86291 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6580540 A K _86291 k dom f j)). Qed.
Lemma lem6580542 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6580543 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _86291 k dom f) = (term1029 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580542 A K) (@lem6580541 A K _86291 k dom f)). Qed.
Lemma lem6580544 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _86291 k dom) = (term1030 A K _86291 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6580543 A K _86291 k dom f)). Qed.
Lemma lem6580545 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6580546 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _86291 k dom) = (term1031 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580545 A K) (@lem6580544 A K _86291 k dom)). Qed.
Lemma lem6580547 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580548 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _86291 k dom) = (term1044 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580547) (@lem6580546 A K _86291 k dom)). Qed.
Lemma lem6580549 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _86291 k dom f) = (term1028 A K _86291 k dom f).
Proof. exact (eq_refl (term1037 A K _86291 k dom f)). Qed.
Lemma lem6580550 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6580551 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _86291 k dom j f) = (term1046 A K _86291 k dom j f).
Proof. exact (MK_COMB (@lem6580549 A K _86291 k dom f) (@lem6580550 A K j f)). Qed.
Lemma lem6580552 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _86291 k dom j f) = (term1047 A K _86291 k dom j f).
Proof. exact (eq_refl (term1046 A K _86291 k dom j f)). Qed.
Lemma lem6580553 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _86291 k dom j f) = (term1047 A K _86291 k dom j f).
Proof. exact (TRANS (@lem6580551 A K _86291 k dom j f) (@lem6580552 A K _86291 k dom j f)). Qed.
Lemma lem6580554 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _86291 k dom j) = (term1049 A K _86291 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6580553 A K _86291 k dom j f)). Qed.
Lemma lem6580555 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6580556 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _86291 k dom j) = (term1051 A K _86291 k dom j).
Proof. exact (MK_COMB (@lem6580555 A K) (@lem6580554 A K _86291 k dom j)). Qed.
Lemma lem6580557 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _86291 k dom) = (term1053 A K _86291 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6580556 A K _86291 k dom j)). Qed.
Lemma lem6580558 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6580559 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _86291 k dom) = (term1054 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580558 A K) (@lem6580557 A K _86291 k dom)). Qed.
Lemma lem6580560 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _86291 k dom) = (term1035 A K _86291 k dom)) = ((term1031 A K _86291 k dom) = (term1054 A K _86291 k dom)).
Proof. exact (MK_COMB (@lem6580548 A K _86291 k dom) (@lem6580559 A K _86291 k dom)). Qed.
Lemma lem6580561 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _86291 k dom) = (term1054 A K _86291 k dom).
Proof. exact (EQ_MP (@lem6580560 A K _86291 k dom) (@lem6580535 A K _86291 k dom)). Qed.
Lemma lem6580562 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _86291 k dom) = (term1054 A K _86291 k dom).
Proof. exact (TRANS (@lem6580531 A K _86291 k dom) (@lem6580561 A K _86291 k dom)). Qed.
Lemma lem6580563 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term925 A K _86291 k) = (term1055 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580562 A K _86291 k dom)). Qed.
Lemma lem6580564 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580565 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term940 A K _86291 k) = (term1056 A K _86291 k).
Proof. exact (MK_COMB (@lem6580564 A) (@lem6580563 A K _86291 k)). Qed.
Lemma lem6580567 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6580568 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6580567 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6580569 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1059 A K _86291 k) = (term1060 A K _86291 k).
Proof. exact (@lem6580568 A K (term1061 A K _86291 k)). Qed.
Lemma lem6580570 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _86291 k dom) = (term1053 A K _86291 k dom).
Proof. exact (eq_refl (term1062 A K _86291 k dom)). Qed.
Lemma lem6580571 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580572 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _86291 k dom j) = (term1064 A K _86291 k dom j).
Proof. exact (MK_COMB (@lem6580570 A K _86291 k dom) (@lem6580571 A K j)). Qed.
Lemma lem6580573 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _86291 k dom j) = (term1051 A K _86291 k dom j).
Proof. exact (eq_refl (term1064 A K _86291 k dom j)). Qed.
Lemma lem6580574 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _86291 k dom j) = (term1051 A K _86291 k dom j).
Proof. exact (TRANS (@lem6580572 A K _86291 k dom j) (@lem6580573 A K _86291 k dom j)). Qed.
Lemma lem6580575 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _86291 k dom) = (term1053 A K _86291 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6580574 A K _86291 k dom j)). Qed.
Lemma lem6580576 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6580577 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _86291 k dom) = (term1054 A K _86291 k dom).
Proof. exact (MK_COMB (@lem6580576 A K) (@lem6580575 A K _86291 k dom)). Qed.
Lemma lem6580578 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1067 A K _86291 k) = (term1055 A K _86291 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580577 A K _86291 k dom)). Qed.
Lemma lem6580579 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580580 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1059 A K _86291 k) = (term1056 A K _86291 k).
Proof. exact (MK_COMB (@lem6580579 A) (@lem6580578 A K _86291 k)). Qed.
Lemma lem6580581 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580582 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1068 A K _86291 k) = (term1069 A K _86291 k).
Proof. exact (MK_COMB (@lem6580581) (@lem6580580 A K _86291 k)). Qed.
Lemma lem6580583 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _86291 k dom) = (term1053 A K _86291 k dom).
Proof. exact (eq_refl (term1062 A K _86291 k dom)). Qed.
Lemma lem6580584 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6580585 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _86291 k j dom) = (term1071 A K _86291 k j dom).
Proof. exact (MK_COMB (@lem6580583 A K _86291 k dom) (@lem6580584 A K j dom)). Qed.
Lemma lem6580586 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _86291 k j dom) = (term1072 A K _86291 k j dom).
Proof. exact (eq_refl (term1071 A K _86291 k j dom)). Qed.
Lemma lem6580587 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _86291 k j dom) = (term1072 A K _86291 k j dom).
Proof. exact (TRANS (@lem6580585 A K _86291 k j dom) (@lem6580586 A K _86291 k j dom)). Qed.
Lemma lem6580588 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _86291 k j) = (term1074 A K _86291 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6580587 A K _86291 k j dom)). Qed.
Lemma lem6580589 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6580590 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _86291 k j) = (term1076 A K _86291 k j).
Proof. exact (MK_COMB (@lem6580589 A) (@lem6580588 A K _86291 k j)). Qed.
Lemma lem6580591 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1077 A K _86291 k) = (term1078 A K _86291 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6580590 A K _86291 k j)). Qed.
Lemma lem6580592 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6580593 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1060 A K _86291 k) = (term1079 A K _86291 k).
Proof. exact (MK_COMB (@lem6580592 A K) (@lem6580591 A K _86291 k)). Qed.
Lemma lem6580594 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : ((term1059 A K _86291 k) = (term1060 A K _86291 k)) = ((term1056 A K _86291 k) = (term1079 A K _86291 k)).
Proof. exact (MK_COMB (@lem6580582 A K _86291 k) (@lem6580593 A K _86291 k)). Qed.
Lemma lem6580595 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1056 A K _86291 k) = (term1079 A K _86291 k).
Proof. exact (EQ_MP (@lem6580594 A K _86291 k) (@lem6580569 A K _86291 k)). Qed.
Lemma lem6580596 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term940 A K _86291 k) = (term1079 A K _86291 k).
Proof. exact (TRANS (@lem6580565 A K _86291 k) (@lem6580595 A K _86291 k)). Qed.
Lemma lem6580597 {A K : Type'} (_86291 : type835 A K) : (term947 A K _86291) = (term1080 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580596 A K _86291 k)). Qed.
Lemma lem6580598 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580599 {A K : Type'} (_86291 : type835 A K) : (term962 A K _86291) = (term1081 A K _86291).
Proof. exact (MK_COMB (@lem6580598 K) (@lem6580597 A K _86291)). Qed.
Lemma lem6580601 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6580602 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6580601 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6580603 {A K : Type'} (_86291 : type835 A K) : (term1084 A K _86291) = (term1085 A K _86291).
Proof. exact (@lem6580602 A K (term1086 A K _86291)). Qed.
Lemma lem6580604 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1087 A K _86291 k) = (term1078 A K _86291 k).
Proof. exact (eq_refl (term1087 A K _86291 k)). Qed.
Lemma lem6580605 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580606 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _86291 k j) = (term1089 A K _86291 k j).
Proof. exact (MK_COMB (@lem6580604 A K _86291 k) (@lem6580605 A K j)). Qed.
Lemma lem6580607 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _86291 k j) = (term1076 A K _86291 k j).
Proof. exact (eq_refl (term1089 A K _86291 k j)). Qed.
Lemma lem6580608 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _86291 k j) = (term1076 A K _86291 k j).
Proof. exact (TRANS (@lem6580606 A K _86291 k j) (@lem6580607 A K _86291 k j)). Qed.
Lemma lem6580609 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1090 A K _86291 k) = (term1078 A K _86291 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6580608 A K _86291 k j)). Qed.
Lemma lem6580610 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6580611 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1091 A K _86291 k) = (term1079 A K _86291 k).
Proof. exact (MK_COMB (@lem6580610 A K) (@lem6580609 A K _86291 k)). Qed.
Lemma lem6580612 {A K : Type'} (_86291 : type835 A K) : (term1092 A K _86291) = (term1080 A K _86291).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580611 A K _86291 k)). Qed.
Lemma lem6580613 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580614 {A K : Type'} (_86291 : type835 A K) : (term1084 A K _86291) = (term1081 A K _86291).
Proof. exact (MK_COMB (@lem6580613 K) (@lem6580612 A K _86291)). Qed.
Lemma lem6580615 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580616 {A K : Type'} (_86291 : type835 A K) : (term1093 A K _86291) = (term1094 A K _86291).
Proof. exact (MK_COMB (@lem6580615) (@lem6580614 A K _86291)). Qed.
Lemma lem6580617 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (term1087 A K _86291 k) = (term1078 A K _86291 k).
Proof. exact (eq_refl (term1087 A K _86291 k)). Qed.
Lemma lem6580618 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6580619 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _86291 j k) = (term1096 A K _86291 j k).
Proof. exact (MK_COMB (@lem6580617 A K _86291 k) (@lem6580618 A K j k)). Qed.
Lemma lem6580620 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _86291 j k) = (term1097 A K _86291 j k).
Proof. exact (eq_refl (term1096 A K _86291 j k)). Qed.
Lemma lem6580621 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _86291 j k) = (term1097 A K _86291 j k).
Proof. exact (TRANS (@lem6580619 A K _86291 j k) (@lem6580620 A K _86291 j k)). Qed.
Lemma lem6580622 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) : (term1098 A K _86291 j) = (term1099 A K _86291 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6580621 A K _86291 j k)). Qed.
Lemma lem6580623 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6580624 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) : (term1100 A K _86291 j) = (term1101 A K _86291 j).
Proof. exact (MK_COMB (@lem6580623 K) (@lem6580622 A K _86291 j)). Qed.
Lemma lem6580625 {A K : Type'} (_86291 : type835 A K) : (term1102 A K _86291) = (term1103 A K _86291).
Proof. exact (fun_ext (fun j : type834 A K => @lem6580624 A K _86291 j)). Qed.
Lemma lem6580626 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6580627 {A K : Type'} (_86291 : type835 A K) : (term1085 A K _86291) = (term1104 A K _86291).
Proof. exact (MK_COMB (@lem6580626 A K) (@lem6580625 A K _86291)). Qed.
Lemma lem6580628 {A K : Type'} (_86291 : type835 A K) : ((term1084 A K _86291) = (term1085 A K _86291)) = ((term1081 A K _86291) = (term1104 A K _86291)).
Proof. exact (MK_COMB (@lem6580616 A K _86291) (@lem6580627 A K _86291)). Qed.
Lemma lem6580629 {A K : Type'} (_86291 : type835 A K) : (term1081 A K _86291) = (term1104 A K _86291).
Proof. exact (EQ_MP (@lem6580628 A K _86291) (@lem6580603 A K _86291)). Qed.
Lemma lem6580630 {A K : Type'} (_86291 : type835 A K) : (term962 A K _86291) = (term1104 A K _86291).
Proof. exact (TRANS (@lem6580599 A K _86291) (@lem6580629 A K _86291)). Qed.
Lemma lem6580631 {A K : Type'} (_86291 : type835 A K) : (term959 A K _86291) = (term959 A K _86291).
Proof. exact (eq_refl (term959 A K _86291)). Qed.
Lemma lem6580632 {A K : Type'} (_86291 : type835 A K) : (term963 A K _86291) = (term1105 A K _86291).
Proof. exact (MK_COMB (@lem6580631 A K _86291) (@lem6580630 A K _86291)). Qed.
Lemma lem6580634 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6580635 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6580634 (type834 A K) P Q). Qed.
Lemma lem6580636 {A K : Type'} (_86291 : type835 A K) : (term1110 A K _86291) = (term1111 A K _86291).
Proof. exact (@lem6580635 A K (term957 A K _86291) (term1103 A K _86291)). Qed.
Lemma lem6580637 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) : (term1112 A K _86291 j) = (term1101 A K _86291 j).
Proof. exact (eq_refl (term1112 A K _86291 j)). Qed.
Lemma lem6580638 {A K : Type'} (_86291 : type835 A K) : (term1113 A K _86291) = (term1103 A K _86291).
Proof. exact (fun_ext (fun j : type834 A K => @lem6580637 A K _86291 j)). Qed.
Lemma lem6580639 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6580640 {A K : Type'} (_86291 : type835 A K) : (term1114 A K _86291) = (term1104 A K _86291).
Proof. exact (MK_COMB (@lem6580639 A K) (@lem6580638 A K _86291)). Qed.
Lemma lem6580641 {A K : Type'} (_86291 : type835 A K) : (term959 A K _86291) = (term959 A K _86291).
Proof. exact (eq_refl (term959 A K _86291)). Qed.
Lemma lem6580642 {A K : Type'} (_86291 : type835 A K) : (term1110 A K _86291) = (term1105 A K _86291).
Proof. exact (MK_COMB (@lem6580641 A K _86291) (@lem6580640 A K _86291)). Qed.
Lemma lem6580643 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6580644 {A K : Type'} (_86291 : type835 A K) : (term1115 A K _86291) = (term1116 A K _86291).
Proof. exact (MK_COMB (@lem6580643) (@lem6580642 A K _86291)). Qed.
Lemma lem6580645 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) : (term1112 A K _86291 j) = (term1101 A K _86291 j).
Proof. exact (eq_refl (term1112 A K _86291 j)). Qed.
Lemma lem6580646 {A K : Type'} (_86291 : type835 A K) : (term959 A K _86291) = (term959 A K _86291).
Proof. exact (eq_refl (term959 A K _86291)). Qed.
Lemma lem6580647 {A K : Type'} (_86291 : type835 A K) (j : type834 A K) : (term1117 A K _86291 j) = (term1118 A K _86291 j).
Proof. exact (MK_COMB (@lem6580646 A K _86291) (@lem6580645 A K _86291 j)). Qed.
Lemma lem6580648 {A K : Type'} (_86291 : type835 A K) : (term1119 A K _86291) = (term1120 A K _86291).
Proof. exact (fun_ext (fun j : type834 A K => @lem6580647 A K _86291 j)). Qed.
Lemma lem6580649 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6580650 {A K : Type'} (_86291 : type835 A K) : (term1111 A K _86291) = (term1121 A K _86291).
Proof. exact (MK_COMB (@lem6580649 A K) (@lem6580648 A K _86291)). Qed.
Lemma lem6580651 {A K : Type'} (_86291 : type835 A K) : ((term1110 A K _86291) = (term1111 A K _86291)) = ((term1105 A K _86291) = (term1121 A K _86291)).
Proof. exact (MK_COMB (@lem6580644 A K _86291) (@lem6580650 A K _86291)). Qed.
Lemma lem6580652 {A K : Type'} (_86291 : type835 A K) : (term1105 A K _86291) = (term1121 A K _86291).
Proof. exact (EQ_MP (@lem6580651 A K _86291) (@lem6580636 A K _86291)). Qed.
Lemma lem6580653 {A K : Type'} (_86291 : type835 A K) : (term963 A K _86291) = (term1121 A K _86291).
Proof. exact (TRANS (@lem6580632 A K _86291) (@lem6580652 A K _86291)). Qed.
Lemma lem6580654 {A K : Type'} (_86291 : type835 A K) : (term849 A K _86291) = (term1121 A K _86291).
Proof. exact (TRANS (@lem6580440 A K _86291) (@lem6580653 A K _86291)). Qed.
Lemma lem6580655 {A K : Type'} (_86291 : type835 A K) : (term815 A K _86291) = (term1121 A K _86291).
Proof. exact (TRANS (@lem6579673 A K _86291) (@lem6580654 A K _86291)). Qed.
Lemma lem6580656 {A K : Type'} (_86291 : type835 A K) (h1 : term815 A K _86291) : term1121 A K _86291.
Proof. exact (EQ_MP (@lem6580655 A K _86291) (@lem6579623 A K _86291 h1)). Qed.
Lemma lem6580665 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6580667 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6580668 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6580667 A K dom f j) (@lem6580665 A K f j neut)). Qed.
Lemma lem6580669 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6580670 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6580669 A K dom f j neut) (@lem6580668 A K dom f j neut)). Qed.
Lemma lem6580672 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6580673 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6580672 K k j) (@lem6580670 A K dom f j neut)). Qed.
Lemma lem6580674 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6580675 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6580674 A K k dom f j neut) (@lem6580673 A K k dom f j neut)). Qed.
Lemma lem6580677 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6580678 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6580677 K ltle j i) (@lem6580675 A K k dom f j neut)). Qed.
Lemma lem6580679 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6580680 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6580679 A K ltle i k dom f j neut) (@lem6580678 A K ltle i k dom f j neut)). Qed.
Lemma lem6580681 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6580682 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6580683 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6580682) (@lem6580680 A K ltle i k dom f j neut)). Qed.
Lemma lem6580684 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6580683 A K ltle i k dom f j neut) (@lem6580681 K j i)). Qed.
Lemma lem6580685 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6580686 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6580685 A K ltle k dom f neut j i) (@lem6580684 A K ltle k dom f neut j i)). Qed.
Lemma lem6580687 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6580686 A K ltle k dom f neut j i)). Qed.
Lemma lem6580688 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580689 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6580688 K) (@lem6580687 A K ltle k dom f neut i)). Qed.
Lemma lem6580704 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6580705 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6580704 K k ltle j i)). Qed.
Lemma lem6580706 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580707 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6580706 K) (@lem6580705 K k ltle i)). Qed.
Lemma lem6580708 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86291 k dom f neut) = (term719 A K _86291 k dom f neut).
Proof. exact (eq_refl (term719 A K _86291 k dom f neut)). Qed.
Lemma lem6580709 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580710 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6580709) (@lem6580707 K k ltle i)). Qed.
Lemma lem6580711 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _86291 k dom f neut) = (term1143 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580710 K k ltle i) (@lem6580708 A K _86291 k dom f neut)). Qed.
Lemma lem6580712 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580713 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6580712) (@lem6580689 A K ltle k dom f neut i)). Qed.
Lemma lem6580714 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _86291 k dom f neut) = (term1145 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580713 A K ltle k dom f neut i) (@lem6580711 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6580716 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6580717 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _86291 k dom f neut) = (term1146 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580716 K k i) (@lem6580714 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6580719 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6580720 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _86291 k dom f neut) = (term1349 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580719 A K dom f i) (@lem6580717 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6580722 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6580823 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _86291 k dom f neut) = (term1350 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580722 A K f i neut) (@lem6580720 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6580824 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1350 A K ltle i _86291 k dom f neut.
Proof. exact (EQ_MP (@lem6580823 A K ltle i _86291 k dom f neut) (@lem6579624 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6580842 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term658 A K i k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6580848 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1122 A K f x neut) = ((f x) = neut).
Proof. exact (@lem16933 ((f x) = neut)). Qed.
Lemma lem6580850 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1123 A K dom f x).
Proof. exact (eq_refl (term1123 A K dom f x)). Qed.
Lemma lem6580851 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1124 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (MK_COMB (@lem6580850 A K dom f x) (@lem6580848 A K f x neut)). Qed.
Lemma lem6580852 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1124 A K dom f x neut).
Proof. exact (@lem17045 (term591 A K dom f x) (term572 A K f x neut)). Qed.
Lemma lem6580853 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term596 A K dom f x neut) = (term1125 A K dom f x neut).
Proof. exact (TRANS (@lem6580852 A K dom f x neut) (@lem6580851 A K dom f x neut)). Qed.
Lemma lem6580855 {K : Type'} (k : K -> Prop) (x : K) : (term360 K k x) = (term360 K k x).
Proof. exact (eq_refl (term360 K k x)). Qed.
Lemma lem6580856 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1126 A K k dom f x neut) = (term1127 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6580855 K k x) (@lem6580853 A K dom f x neut)). Qed.
Lemma lem6580857 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1128 A K k dom f x neut) = (term1126 A K k dom f x neut).
Proof. exact (@lem17045 (k x) (term595 A K dom f x neut)). Qed.
Lemma lem6580858 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1128 A K k dom f x neut) = (term1127 A K k dom f x neut).
Proof. exact (TRANS (@lem6580857 A K k dom f x neut) (@lem6580856 A K k dom f x neut)). Qed.
Lemma lem6580860 {K : Type'} (x : K) (i : K) : (term1213 K x i) = (term1213 K x i).
Proof. exact (eq_refl (term1213 K x i)). Qed.
Lemma lem6580861 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1488 A K i k dom f x neut) = (term1489 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6580860 K x i) (@lem6580858 A K k dom f x neut)). Qed.
Lemma lem6580862 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1487 A K i k dom f x neut) = (term1488 A K i k dom f x neut).
Proof. exact (@lem17160 (x = i) (term602 A K k dom f x neut)). Qed.
Lemma lem6580867 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1487 A K i k dom f x neut) = (term1489 A K i k dom f x neut).
Proof. exact (TRANS (@lem6580862 A K i k dom f x neut) (@lem6580861 A K i k dom f x neut)). Qed.
Lemma lem6580868 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) : term1489 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6580867 A K i k dom f x neut) (@lem6579630 A K i k dom f x neut h1)). Qed.
Lemma lem6580870 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6580871 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6580882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580883 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6580882 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6580884 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) : (_86291 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291 k).
Proof. exact (@lem6580883 A K _86291 k). Qed.
Lemma lem6580885 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6580886 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_86291 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291 k dom).
Proof. exact (MK_COMB (@lem6580884 A K _86291 k) (@lem6580885 A dom)). Qed.
Lemma lem6580888 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580889 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6580888 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6580890 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291 k dom) = (term1163 A K _86291 k dom).
Proof. exact (@lem6580889 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _86291 k) dom). Qed.
Lemma lem6580891 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_86291 k dom) = (term1163 A K _86291 k dom).
Proof. exact (TRANS (@lem6580886 A K _86291 k dom) (@lem6580890 A K _86291 k dom)). Qed.
Lemma lem6580892 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6580893 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_86291 k dom f) = (term1164 A K _86291 k dom f).
Proof. exact (MK_COMB (@lem6580891 A K _86291 k dom) (@lem6580892 A K f)). Qed.
Lemma lem6580895 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580896 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6580895 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6580897 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _86291 k dom f) = (term1165 A K _86291 k dom f).
Proof. exact (@lem6580896 A K (term1163 A K _86291 k dom) f). Qed.
Lemma lem6580898 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_86291 k dom f) = (term1165 A K _86291 k dom f).
Proof. exact (TRANS (@lem6580893 A K _86291 k dom f) (@lem6580897 A K _86291 k dom f)). Qed.
Lemma lem6580899 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6580900 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_86291 k dom f neut) = (term1166 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580898 A K _86291 k dom f) (@lem6580899 A neut)). Qed.
Lemma lem6580902 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580903 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6580902 A (K -> Prop) f x). Qed.
Lemma lem6580904 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _86291 k dom f neut) = (term1167 A K _86291 k dom f neut).
Proof. exact (@lem6580903 A K (term1165 A K _86291 k dom f) neut). Qed.
Lemma lem6580906 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_86291 k dom f neut) = (term1167 A K _86291 k dom f neut).
Proof. exact (TRANS (@lem6580900 A K _86291 k dom f neut) (@lem6580904 A K _86291 k dom f neut)). Qed.
Lemma lem6580907 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _86291 k dom f neut) = (term1168 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580871 K) (@lem6580906 A K _86291 k dom f neut)). Qed.
Lemma lem6580909 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580910 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6580909 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6580911 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _86291 k dom f neut) = (term1169 A K _86291 k dom f neut).
Proof. exact (@lem6580910 K (@GSPEC K) (term1167 A K _86291 k dom f neut)). Qed.
Lemma lem6580912 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _86291 k dom f neut) = (term1169 A K _86291 k dom f neut).
Proof. exact (TRANS (@lem6580907 A K _86291 k dom f neut) (@lem6580911 A K _86291 k dom f neut)). Qed.
Lemma lem6580913 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86291 k dom f neut) = (term1170 A K _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580870 K) (@lem6580912 A K _86291 k dom f neut)). Qed.
Lemma lem6580915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580916 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6580915 (K -> Prop) Prop f x). Qed.
Lemma lem6580917 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _86291 k dom f neut) = (term1171 A K _86291 k dom f neut).
Proof. exact (@lem6580916 K (@FINITE K) (term1169 A K _86291 k dom f neut)). Qed.
Lemma lem6580918 {A K : Type'} (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _86291 k dom f neut) = (term1171 A K _86291 k dom f neut).
Proof. exact (TRANS (@lem6580913 A K _86291 k dom f neut) (@lem6580917 A K _86291 k dom f neut)). Qed.
Lemma lem6580925 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580926 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6580925 K (K -> Prop) f x). Qed.
Lemma lem6580927 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6580926 K ltle j). Qed.
Lemma lem6580928 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6580929 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6580927 K ltle j) (@lem6580928 K i)). Qed.
Lemma lem6580931 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580932 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6580931 K Prop f x). Qed.
Lemma lem6580933 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6580932 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6580935 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6580929 K ltle j i) (@lem6580933 K ltle j i)). Qed.
Lemma lem6580942 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580943 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6580942 K (K -> Prop) f x). Qed.
Lemma lem6580944 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6580943 K ltle i). Qed.
Lemma lem6580945 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6580946 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6580944 K ltle i) (@lem6580945 K j)). Qed.
Lemma lem6580948 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580949 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6580948 K Prop f x). Qed.
Lemma lem6580950 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6580949 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6580952 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6580946 K ltle i j) (@lem6580950 K ltle i j)). Qed.
Lemma lem6580953 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6580954 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6580953) (@lem6580952 K ltle i j)). Qed.
Lemma lem6580955 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6580954 K ltle i j) (@lem6580935 K ltle j i)). Qed.
Lemma lem6580962 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6580963 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6580962 K i j) (@lem6580955 K ltle j i)). Qed.
Lemma lem6580964 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6580969 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580970 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6580969 K Prop f x). Qed.
Lemma lem6580972 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6580970 K k j). Qed.
Lemma lem6580973 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6580964) (@lem6580972 K k j)). Qed.
Lemma lem6580974 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6580975 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6580974) (@lem6580973 K k j)). Qed.
Lemma lem6580976 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6580975 K k j) (@lem6580963 K ltle j i)). Qed.
Lemma lem6580977 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6580976 K k ltle j i)). Qed.
Lemma lem6580978 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6580979 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6580978 K) (@lem6580977 K k ltle i)). Qed.
Lemma lem6580980 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6580981 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6580980) (@lem6580979 K k ltle i)). Qed.
Lemma lem6580982 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _86291 k dom f neut) = (term1184 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6580981 K k ltle i) (@lem6580918 A K _86291 k dom f neut)). Qed.
Lemma lem6580987 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6580988 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6580993 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6580994 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6580993 K A f x). Qed.
Lemma lem6580996 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6580994 A K f j). Qed.
Lemma lem6580997 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6580998 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6580988 A) (@lem6580996 A K f j)). Qed.
Lemma lem6580999 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6580998 A K f j) (@lem6580997 A neut)). Qed.
Lemma lem6581000 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581001 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6581006 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581007 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581006 K A f x). Qed.
Lemma lem6581009 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6581007 A K f j). Qed.
Lemma lem6581010 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6581001 A dom) (@lem6581009 A K f j)). Qed.
Lemma lem6581012 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581013 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6581012 A Prop f x). Qed.
Lemma lem6581014 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6581013 A dom (@I (K -> A) f j)). Qed.
Lemma lem6581015 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6581010 A K dom f j) (@lem6581014 A K dom f j)). Qed.
Lemma lem6581016 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6581000) (@lem6581015 A K dom f j)). Qed.
Lemma lem6581017 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581018 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6581017) (@lem6581016 A K dom f j)). Qed.
Lemma lem6581019 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6581018 A K dom f j) (@lem6580999 A K f j neut)). Qed.
Lemma lem6581020 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581025 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581026 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6581025 K Prop f x). Qed.
Lemma lem6581028 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6581026 K k j). Qed.
Lemma lem6581029 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6581020) (@lem6581028 K k j)). Qed.
Lemma lem6581030 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581031 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6581030) (@lem6581029 K k j)). Qed.
Lemma lem6581032 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6581031 K k j) (@lem6581019 A K dom f j neut)). Qed.
Lemma lem6581033 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581040 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581041 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6581040 K (K -> Prop) f x). Qed.
Lemma lem6581042 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6581041 K ltle j). Qed.
Lemma lem6581043 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6581044 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6581042 K ltle j) (@lem6581043 K i)). Qed.
Lemma lem6581046 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581047 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6581046 K Prop f x). Qed.
Lemma lem6581048 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6581047 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6581050 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6581044 K ltle j i) (@lem6581048 K ltle j i)). Qed.
Lemma lem6581051 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6581033) (@lem6581050 K ltle j i)). Qed.
Lemma lem6581052 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581053 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6581052) (@lem6581051 K ltle j i)). Qed.
Lemma lem6581054 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6581053 K ltle j i) (@lem6581032 A K k dom f j neut)). Qed.
Lemma lem6581055 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581056 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6581055) (@lem6581054 A K ltle i k dom f j neut)). Qed.
Lemma lem6581057 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6581056 A K ltle i k dom f j neut) (@lem6580987 K j i)). Qed.
Lemma lem6581058 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6581057 A K ltle k dom f neut j i)). Qed.
Lemma lem6581059 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6581060 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6581059 K) (@lem6581058 A K ltle k dom f neut i)). Qed.
Lemma lem6581061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581062 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6581061) (@lem6581060 A K ltle k dom f neut i)). Qed.
Lemma lem6581063 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _86291 k dom f neut) = (term1203 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6581062 A K ltle k dom f neut i) (@lem6580982 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6581064 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581069 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581070 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6581069 K Prop f x). Qed.
Lemma lem6581072 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6581070 K k i). Qed.
Lemma lem6581073 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6581064) (@lem6581072 K k i)). Qed.
Lemma lem6581074 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581075 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6581074) (@lem6581073 K k i)). Qed.
Lemma lem6581076 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _86291 k dom f neut) = (term1205 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6581075 K k i) (@lem6581063 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6581077 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6581082 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581083 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581082 K A f x). Qed.
Lemma lem6581085 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6581083 A K f i). Qed.
Lemma lem6581086 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6581077 A dom) (@lem6581085 A K f i)). Qed.
Lemma lem6581088 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581089 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6581088 A Prop f x). Qed.
Lemma lem6581090 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6581089 A dom (@I (K -> A) f i)). Qed.
Lemma lem6581091 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6581086 A K dom f i) (@lem6581090 A K dom f i)). Qed.
Lemma lem6581092 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581093 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term1209 A K dom f i).
Proof. exact (MK_COMB (@lem6581092) (@lem6581091 A K dom f i)). Qed.
Lemma lem6581094 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1349 A K ltle i _86291 k dom f neut) = (term1353 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6581093 A K dom f i) (@lem6581076 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6581095 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581096 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6581101 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581102 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581101 K A f x). Qed.
Lemma lem6581104 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6581102 A K f i). Qed.
Lemma lem6581105 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6581106 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6581096 A) (@lem6581104 A K f i)). Qed.
Lemma lem6581107 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6581106 A K f i) (@lem6581105 A neut)). Qed.
Lemma lem6581108 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term572 A K f i neut) = (term1208 A K f i neut).
Proof. exact (MK_COMB (@lem6581095) (@lem6581107 A K f i neut)). Qed.
Lemma lem6581109 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581110 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1354 A K f i neut).
Proof. exact (MK_COMB (@lem6581109) (@lem6581108 A K f i neut)). Qed.
Lemma lem6581111 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1350 A K ltle i _86291 k dom f neut) = (term1355 A K ltle i _86291 k dom f neut).
Proof. exact (MK_COMB (@lem6581110 A K f i neut) (@lem6581094 A K ltle i _86291 k dom f neut)). Qed.
Lemma lem6581112 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1355 A K ltle i _86291 k dom f neut.
Proof. exact (EQ_MP (@lem6581111 A K ltle i _86291 k dom f neut) (@lem6580824 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6581113 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581114 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6581119 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581121 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581119 K A f x). Qed.
Lemma lem6581122 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6581123 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6581114 A) (@lem6581121 A K f x)). Qed.
Lemma lem6581124 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6581123 A K f x) (@lem6581122 A neut)). Qed.
Lemma lem6581125 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term572 A K f x neut) = (term1208 A K f x neut).
Proof. exact (MK_COMB (@lem6581113) (@lem6581124 A K f x neut)). Qed.
Lemma lem6581126 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6581131 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581133 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581131 K A f x). Qed.
Lemma lem6581134 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6581126 A dom) (@lem6581133 A K f x)). Qed.
Lemma lem6581136 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581137 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6581136 A Prop f x). Qed.
Lemma lem6581138 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6581137 A dom (@I (K -> A) f x)). Qed.
Lemma lem6581139 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6581134 A K dom f x) (@lem6581138 A K dom f x)). Qed.
Lemma lem6581140 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581141 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term592 A K dom f x) = (term1209 A K dom f x).
Proof. exact (MK_COMB (@lem6581140) (@lem6581139 A K dom f x)). Qed.
Lemma lem6581142 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term595 A K dom f x neut) = (term1210 A K dom f x neut).
Proof. exact (MK_COMB (@lem6581141 A K dom f x) (@lem6581125 A K f x neut)). Qed.
Lemma lem6581147 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581148 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6581147 K Prop f x). Qed.
Lemma lem6581150 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6581148 K k x). Qed.
Lemma lem6581157 {K : Type'} (x : K) (i : K) : (term38 K x i) = (term38 K x i).
Proof. exact (eq_refl (term38 K x i)). Qed.
Lemma lem6581158 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term39 K i k x) = (term1219 K i k x).
Proof. exact (MK_COMB (@lem6581157 K x i) (@lem6581150 K k x)). Qed.
Lemma lem6581159 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6581160 {K : Type'} (i : K) (k : K -> Prop) (x : K) : (term41 K i k x) = (term1220 K i k x).
Proof. exact (MK_COMB (@lem6581159) (@lem6581158 K i k x)). Qed.
Lemma lem6581161 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term658 A K i k dom f x neut) = (term1221 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6581160 K i k x) (@lem6581142 A K dom f x neut)). Qed.
Lemma lem6581162 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1221 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6581161 A K i k dom f x neut) (@lem6580842 A K i k dom f x neut h1)). Qed.
Lemma lem6581163 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6581168 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581170 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581168 K A f x). Qed.
Lemma lem6581171 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6581172 {A K : Type'} (f : K -> A) (x : K) : (term1185 A K f x) = (term1186 A K f x).
Proof. exact (MK_COMB (@lem6581163 A) (@lem6581170 A K f x)). Qed.
Lemma lem6581173 {A K : Type'} (f : K -> A) (x : K) (neut : A) : ((f x) = neut) = ((@I (K -> A) f x) = neut).
Proof. exact (MK_COMB (@lem6581172 A K f x) (@lem6581171 A neut)). Qed.
Lemma lem6581174 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581175 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6581180 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581182 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6581180 K A f x). Qed.
Lemma lem6581183 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1187 A K dom f x).
Proof. exact (MK_COMB (@lem6581175 A dom) (@lem6581182 A K f x)). Qed.
Lemma lem6581185 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581186 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6581185 A Prop f x). Qed.
Lemma lem6581187 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1187 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6581186 A dom (@I (K -> A) f x)). Qed.
Lemma lem6581188 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term591 A K dom f x) = (term1188 A K dom f x).
Proof. exact (TRANS (@lem6581183 A K dom f x) (@lem6581187 A K dom f x)). Qed.
Lemma lem6581189 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1189 A K dom f x) = (term1190 A K dom f x).
Proof. exact (MK_COMB (@lem6581174) (@lem6581188 A K dom f x)). Qed.
Lemma lem6581190 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581191 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1123 A K dom f x) = (term1191 A K dom f x).
Proof. exact (MK_COMB (@lem6581190) (@lem6581189 A K dom f x)). Qed.
Lemma lem6581192 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1125 A K dom f x neut) = (term1192 A K dom f x neut).
Proof. exact (MK_COMB (@lem6581191 A K dom f x) (@lem6581173 A K f x neut)). Qed.
Lemma lem6581193 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6581198 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6581199 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6581198 K Prop f x). Qed.
Lemma lem6581201 {K : Type'} (k : K -> Prop) (x : K) : (k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6581199 K k x). Qed.
Lemma lem6581202 {K : Type'} (k : K -> Prop) (x : K) : (term30 K k x) = (term1178 K k x).
Proof. exact (MK_COMB (@lem6581193) (@lem6581201 K k x)). Qed.
Lemma lem6581203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6581204 {K : Type'} (k : K -> Prop) (x : K) : (term360 K k x) = (term1179 K k x).
Proof. exact (MK_COMB (@lem6581203) (@lem6581202 K k x)). Qed.
Lemma lem6581205 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1127 A K k dom f x neut) = (term1193 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6581204 K k x) (@lem6581192 A K dom f x neut)). Qed.
Lemma lem6581214 {K : Type'} (x : K) (i : K) : (term1213 K x i) = (term1213 K x i).
Proof. exact (eq_refl (term1213 K x i)). Qed.
Lemma lem6581215 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1489 A K i k dom f x neut) = (term1490 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6581214 K x i) (@lem6581205 A K k dom f x neut)). Qed.
Lemma lem6581216 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) : term1490 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6581215 A K i k dom f x neut) (@lem6580868 A K i k dom f x neut h1)). Qed.
Lemma lem6581662 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) : term1193 A K k dom f x neut.
Proof. exact (proj2 (@lem6581216 A K i k dom f x neut h1)). Qed.
Lemma lem6581664 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1210 A K dom f x neut.
Proof. exact (proj2 (@lem6581162 A K i k dom f x neut h1)). Qed.
Lemma lem6581665 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1219 K i k x.
Proof. exact (proj1 (@lem6581162 A K i k dom f x neut h1)). Qed.
Lemma lem6581668 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1353 A K ltle i _86291 k dom f neut.
Proof. exact (proj2 (@lem6581112 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6581681 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6581685 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1192 A K dom f x neut) : term1192 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6581862 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6582041 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6582045 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6582220 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6582224 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6582399 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6582403 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6582582 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6582761 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6583009 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) : term2 K x i.
Proof. exact (proj1 (@lem6581216 A K i k dom f x neut h1)). Qed.
Lemma lem6583061 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6583129 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6583131 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6583151 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1208 A K f i neut.
Proof. exact (proj1 (@lem6581112 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6583197 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6583199 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6583265 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6583267 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1178 K k x.
Proof. exact (h1). Qed.
Lemma lem6583335 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1190 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6583353 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1208 A K f x neut.
Proof. exact (proj2 (@lem6581664 A K i k dom f x neut h1)). Qed.
Lemma lem6583403 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (@I (K -> A) f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6583446 {K : Type'} (i : K) : (term83 K i) = (term83 K i).
Proof. exact (eq_refl (term83 K i)). Qed.
Lemma lem6583447 {K : Type'} (x : K) (i : K) (h1 : x = i) : (term84 K i x) = (term85 K i).
Proof. exact (MK_COMB (@lem6583446 K i) (@lem6583061 K x i h1)). Qed.
Lemma lem6583448 {K : Type'} (i : K) : (term85 K i) = (term86 K i).
Proof. exact (eq_refl (term85 K i)). Qed.
Lemma lem6583449 {K : Type'} (i : K) (x : K) : (term87 K i x) = (term87 K i x).
Proof. exact (eq_refl (term87 K i x)). Qed.
Lemma lem6583450 {K : Type'} (x : K) (i : K) : ((term84 K i x) = (term85 K i)) = ((term84 K i x) = (term86 K i)).
Proof. exact (MK_COMB (@lem6583449 K i x) (@lem6583448 K i)). Qed.
Lemma lem6583451 {K : Type'} (x : K) (i : K) : (term84 K i x) = (term2 K x i).
Proof. exact (eq_refl (term84 K i x)). Qed.
Lemma lem6583452 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6583453 {K : Type'} (x : K) (i : K) : (term87 K i x) = (term88 K x i).
Proof. exact (MK_COMB (@lem6583452) (@lem6583451 K x i)). Qed.
Lemma lem6583454 {K : Type'} (i : K) : (term86 K i) = (term86 K i).
Proof. exact (eq_refl (term86 K i)). Qed.
Lemma lem6583455 {K : Type'} (x : K) (i : K) : ((term84 K i x) = (term86 K i)) = ((term2 K x i) = (term86 K i)).
Proof. exact (MK_COMB (@lem6583453 K x i) (@lem6583454 K i)). Qed.
Lemma lem6583456 {K : Type'} (x : K) (i : K) : ((term84 K i x) = (term85 K i)) = ((term2 K x i) = (term86 K i)).
Proof. exact (TRANS (@lem6583450 K x i) (@lem6583455 K x i)). Qed.
Lemma lem6583457 {K : Type'} (x : K) (i : K) (h1 : x = i) : (term2 K x i) = (term86 K i).
Proof. exact (EQ_MP (@lem6583456 K x i) (@lem6583447 K x i h1)). Qed.
Lemma lem6583458 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : term86 K i.
Proof. exact (EQ_MP (@lem6583457 K x i h2) (@lem6583009 A K i k dom f x neut h1)). Qed.
Lemma lem6583747 {A K : Type'} (dom : A -> Prop) (f : K -> A) : (term1230 A K dom f) = (term1230 A K dom f).
Proof. exact (eq_refl (term1230 A K dom f)). Qed.
Lemma lem6583748 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1231 A K dom f x) = (term1231 A K dom f i).
Proof. exact (MK_COMB (@lem6583747 A K dom f) (@lem6583129 K x i h1)). Qed.
Lemma lem6583749 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1231 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1231 A K dom f i)). Qed.
Lemma lem6583750 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1232 A K dom f x).
Proof. exact (eq_refl (term1232 A K dom f x)). Qed.
Lemma lem6583751 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1231 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6583750 A K dom f x) (@lem6583749 A K dom f i)). Qed.
Lemma lem6583752 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1231 A K dom f x) = (term1190 A K dom f x).
Proof. exact (eq_refl (term1231 A K dom f x)). Qed.
Lemma lem6583753 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6583754 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1232 A K dom f x) = (term1233 A K dom f x).
Proof. exact (MK_COMB (@lem6583753) (@lem6583752 A K dom f x)). Qed.
Lemma lem6583755 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1190 A K dom f i).
Proof. exact (eq_refl (term1190 A K dom f i)). Qed.
Lemma lem6583756 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1190 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (MK_COMB (@lem6583754 A K dom f x) (@lem6583755 A K dom f i)). Qed.
Lemma lem6583757 {A K : Type'} (x : K) (dom : A -> Prop) (f : K -> A) (i : K) : ((term1231 A K dom f x) = (term1231 A K dom f i)) = ((term1190 A K dom f x) = (term1190 A K dom f i)).
Proof. exact (TRANS (@lem6583751 A K x dom f i) (@lem6583756 A K x dom f i)). Qed.
Lemma lem6583758 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1190 A K dom f x) = (term1190 A K dom f i).
Proof. exact (EQ_MP (@lem6583757 A K x dom f i) (@lem6583748 A K dom f x i h1)). Qed.
Lemma lem6583759 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1190 A K dom f i.
Proof. exact (EQ_MP (@lem6583758 A K dom f x i h2) (@lem6583131 A K dom f x h1)). Qed.
Lemma lem6583760 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6583199 A K f x neut h1)). Qed.
Lemma lem6583844 {A K : Type'} (f : K -> A) (i : K) : (term1234 A K f i) = (term1234 A K f i).
Proof. exact (eq_refl (term1234 A K f i)). Qed.
Lemma lem6583845 {A K : Type'} (i : K) (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f i neut) = (term1491 A K i f x).
Proof. exact (MK_COMB (@lem6583844 A K f i) (@lem6583760 A K f x neut h1)). Qed.
Lemma lem6583846 {A K : Type'} (i : K) (f : K -> A) (x : K) : (term1491 A K i f x) = (term1492 A K i f x).
Proof. exact (eq_refl (term1491 A K i f x)). Qed.
Lemma lem6583847 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1238 A K f i neut).
Proof. exact (eq_refl (term1238 A K f i neut)). Qed.
Lemma lem6583848 {A K : Type'} (neut : A) (i : K) (f : K -> A) (x : K) : ((term1235 A K f i neut) = (term1491 A K i f x)) = ((term1235 A K f i neut) = (term1492 A K i f x)).
Proof. exact (MK_COMB (@lem6583847 A K f i neut) (@lem6583846 A K i f x)). Qed.
Lemma lem6583849 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1235 A K f i neut) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1235 A K f i neut)). Qed.
Lemma lem6583850 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6583851 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1239 A K f i neut).
Proof. exact (MK_COMB (@lem6583850) (@lem6583849 A K f i neut)). Qed.
Lemma lem6583852 {A K : Type'} (i : K) (f : K -> A) (x : K) : (term1492 A K i f x) = (term1492 A K i f x).
Proof. exact (eq_refl (term1492 A K i f x)). Qed.
Lemma lem6583853 {A K : Type'} (neut : A) (i : K) (f : K -> A) (x : K) : ((term1235 A K f i neut) = (term1492 A K i f x)) = ((term1208 A K f i neut) = (term1492 A K i f x)).
Proof. exact (MK_COMB (@lem6583851 A K f i neut) (@lem6583852 A K i f x)). Qed.
Lemma lem6583854 {A K : Type'} (neut : A) (i : K) (f : K -> A) (x : K) : ((term1235 A K f i neut) = (term1491 A K i f x)) = ((term1208 A K f i neut) = (term1492 A K i f x)).
Proof. exact (TRANS (@lem6583848 A K neut i f x) (@lem6583853 A K neut i f x)). Qed.
Lemma lem6583855 {A K : Type'} (i : K) (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f i neut) = (term1492 A K i f x).
Proof. exact (EQ_MP (@lem6583854 A K neut i f x) (@lem6583845 A K i f x neut h1)). Qed.
Lemma lem6583856 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) : term1492 A K i f x.
Proof. exact (EQ_MP (@lem6583855 A K i f x neut h2) (@lem6583151 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6583938 {K : Type'} (x : K) (i : K) (h1 : x = i) : x = i.
Proof. exact (h1). Qed.
Lemma lem6584020 {A K : Type'} (i : K) (f : K -> A) : (term1493 A K i f) = (term1493 A K i f).
Proof. exact (eq_refl (term1493 A K i f)). Qed.
Lemma lem6584021 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1494 A K i f x) = (term1495 A K f i).
Proof. exact (MK_COMB (@lem6584020 A K i f) (@lem6583938 K x i h1)). Qed.
Lemma lem6584022 {A K : Type'} (f : K -> A) (i : K) : (term1495 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1495 A K f i)). Qed.
Lemma lem6584023 {A K : Type'} (i : K) (f : K -> A) (x : K) : (term1496 A K i f x) = (term1496 A K i f x).
Proof. exact (eq_refl (term1496 A K i f x)). Qed.
Lemma lem6584024 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1494 A K i f x) = (term1495 A K f i)) = ((term1494 A K i f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6584023 A K i f x) (@lem6584022 A K f i)). Qed.
Lemma lem6584025 {A K : Type'} (i : K) (f : K -> A) (x : K) : (term1494 A K i f x) = (term1492 A K i f x).
Proof. exact (eq_refl (term1494 A K i f x)). Qed.
Lemma lem6584026 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6584027 {A K : Type'} (i : K) (f : K -> A) (x : K) : (term1496 A K i f x) = (term1497 A K i f x).
Proof. exact (MK_COMB (@lem6584026) (@lem6584025 A K i f x)). Qed.
Lemma lem6584028 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6584029 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1494 A K i f x) = (term1237 A K f i)) = ((term1492 A K i f x) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6584027 A K i f x) (@lem6584028 A K f i)). Qed.
Lemma lem6584030 {A K : Type'} (x : K) (f : K -> A) (i : K) : ((term1494 A K i f x) = (term1495 A K f i)) = ((term1492 A K i f x) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6584024 A K x f i) (@lem6584029 A K x f i)). Qed.
Lemma lem6584031 {A K : Type'} (f : K -> A) (x : K) (i : K) (h1 : x = i) : (term1492 A K i f x) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6584030 A K x f i) (@lem6584021 A K f x i h1)). Qed.
Lemma lem6584032 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6584031 A K f x i h3) (@lem6583856 A K ltle i _86291 k dom f x neut h1 h2)). Qed.
Lemma lem6584101 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : neut = (@I (K -> A) f x).
Proof. exact (SYM (@lem6583403 A K f x neut h1)). Qed.
Lemma lem6584172 {A K : Type'} (f : K -> A) (x : K) : (term1234 A K f x) = (term1234 A K f x).
Proof. exact (eq_refl (term1234 A K f x)). Qed.
Lemma lem6584173 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1235 A K f x neut) = (term1236 A K f x).
Proof. exact (MK_COMB (@lem6584172 A K f x) (@lem6584101 A K f x neut h1)). Qed.
Lemma lem6584174 {A K : Type'} (f : K -> A) (x : K) : (term1236 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1236 A K f x)). Qed.
Lemma lem6584175 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1238 A K f x neut).
Proof. exact (eq_refl (term1238 A K f x neut)). Qed.
Lemma lem6584176 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1235 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6584175 A K f x neut) (@lem6584174 A K f x)). Qed.
Lemma lem6584177 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1235 A K f x neut) = (term1208 A K f x neut).
Proof. exact (eq_refl (term1235 A K f x neut)). Qed.
Lemma lem6584178 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6584179 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term1238 A K f x neut) = (term1239 A K f x neut).
Proof. exact (MK_COMB (@lem6584178) (@lem6584177 A K f x neut)). Qed.
Lemma lem6584180 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1237 A K f x).
Proof. exact (eq_refl (term1237 A K f x)). Qed.
Lemma lem6584181 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1237 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (MK_COMB (@lem6584179 A K f x neut) (@lem6584180 A K f x)). Qed.
Lemma lem6584182 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term1235 A K f x neut) = (term1236 A K f x)) = ((term1208 A K f x neut) = (term1237 A K f x)).
Proof. exact (TRANS (@lem6584176 A K neut f x) (@lem6584181 A K neut f x)). Qed.
Lemma lem6584183 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (@I (K -> A) f x) = neut) : (term1208 A K f x neut) = (term1237 A K f x).
Proof. exact (EQ_MP (@lem6584182 A K neut f x) (@lem6584173 A K f x neut h1)). Qed.
Lemma lem6584184 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1237 A K f x.
Proof. exact (EQ_MP (@lem6584183 A K f x neut h2) (@lem6583353 A K i k dom f x neut h1)). Qed.
Lemma lem6584654 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6584655 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6584654 K x). Qed.
Lemma lem6584656 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6584655 K i). Qed.
Lemma lem6584657 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6584656 K i). Qed.
Lemma lem6584659 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6584660 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6584659 (i = i)). Qed.
Lemma lem6584661 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6584660 K i) (@lem6584657 K i)). Qed.
Lemma lem6584664 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6584666 {K : Type'} (i : K) : (term86 K i) = (term95 K i).
Proof. exact (@lem6584664 (i = i)). Qed.
Lemma lem6584669 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : term95 K i.
Proof. exact (EQ_MP (@lem6584666 K i) (@lem6583458 A K k dom f neut x i h1 h2)). Qed.
Lemma lem6584672 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : False.
Proof. exact (@lem6584669 A K k dom f neut x i h1 h2 (@lem6584661 K i)). Qed.
Lemma lem6584673 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6584672 A K k dom f neut x i h1 h2). Qed.
Lemma lem6584675 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6584676 : term96 = False.
Proof. exact (@lem6584675 False). Qed.
Lemma lem6585052 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1188 A K dom f i.
Proof. exact (proj1 (@lem6581668 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6585053 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6585052 A K ltle i _86291 k dom f neut h1). Qed.
Lemma lem6585055 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585056 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6585055 (term1188 A K dom f i)). Qed.
Lemma lem6585057 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6585056 A K dom f i) (@lem6585053 A K ltle i _86291 k dom f neut h1)). Qed.
Lemma lem6585060 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6585062 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6585060 (term1188 A K dom f i)). Qed.
Lemma lem6585065 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : x = i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6585062 A K dom f i) (@lem6583759 A K dom f x i h1 h2)). Qed.
Lemma lem6585068 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (@lem6585065 A K dom f x i h1 h3 (@lem6585057 A K ltle i _86291 k dom f neut h2)). Qed.
Lemma lem6585069 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6585068 A K ltle _86291 k dom f neut x i h1 h2 h3). Qed.
Lemma lem6585071 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585072 : term96 = False.
Proof. exact (@lem6585071 False). Qed.
Lemma lem6585448 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6585449 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6585448 A x). Qed.
Lemma lem6585450 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6585449 A (@I (K -> A) f i)). Qed.
Lemma lem6585451 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6585450 A K f i). Qed.
Lemma lem6585453 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585454 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6585453 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6585455 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6585454 A K f i) (@lem6585451 A K f i)). Qed.
Lemma lem6585458 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6585460 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6585458 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6585463 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6585460 A K f i) (@lem6584032 A K ltle _86291 k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6585466 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (@lem6585463 A K ltle _86291 k dom f neut x i h1 h2 h3 (@lem6585455 A K f i)). Qed.
Lemma lem6585467 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6585466 A K ltle _86291 k dom f neut x i h1 h2 h3). Qed.
Lemma lem6585469 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585470 : term96 = False.
Proof. exact (@lem6585469 False). Qed.
Lemma lem6585846 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (h1). Qed.
Lemma lem6585847 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : term1251 K k x.
Proof. exact (fun h0 : term1178 K k x => @lem6585846 K k x h1). Qed.
Lemma lem6585849 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585850 {K : Type'} (k : K -> Prop) (x : K) : (term1251 K k x) = (@I (K -> Prop) k x).
Proof. exact (@lem6585849 (@I (K -> Prop) k x)). Qed.
Lemma lem6585851 {K : Type'} (k : K -> Prop) (x : K) (h1 : @I (K -> Prop) k x) : @I (K -> Prop) k x.
Proof. exact (EQ_MP (@lem6585850 K k x) (@lem6585847 K k x h1)). Qed.
Lemma lem6585854 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6585856 {K : Type'} (k : K -> Prop) (x : K) : (term1178 K k x) = (term1252 K k x).
Proof. exact (@lem6585854 (@I (K -> Prop) k x)). Qed.
Lemma lem6585859 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) : term1252 K k x.
Proof. exact (EQ_MP (@lem6585856 K k x) (@lem6583267 K k x h1)). Qed.
Lemma lem6585862 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (@lem6585859 K k x h1 (@lem6585851 K k x h2)). Qed.
Lemma lem6585863 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : term96.
Proof. exact (fun h0 : ~ False => @lem6585862 K k x h1 h2). Qed.
Lemma lem6585865 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6585866 : term96 = False.
Proof. exact (@lem6585865 False). Qed.
Lemma lem6585867 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6585866) (@lem6585863 K k x h1 h2)). Qed.
Lemma lem6586242 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (proj1 (@lem6581664 A K i k dom f x neut h1)). Qed.
Lemma lem6586243 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1247 A K dom f x.
Proof. exact (fun h0 : term1190 A K dom f x => @lem6586242 A K i k dom f x neut h1). Qed.
Lemma lem6586245 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6586246 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1247 A K dom f x) = (term1188 A K dom f x).
Proof. exact (@lem6586245 (term1188 A K dom f x)). Qed.
Lemma lem6586247 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) : term1188 A K dom f x.
Proof. exact (EQ_MP (@lem6586246 A K dom f x) (@lem6586243 A K i k dom f x neut h1)). Qed.
Lemma lem6586250 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6586252 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term1190 A K dom f x) = (term1248 A K dom f x).
Proof. exact (@lem6586250 (term1188 A K dom f x)). Qed.
Lemma lem6586255 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term1190 A K dom f x) : term1248 A K dom f x.
Proof. exact (EQ_MP (@lem6586252 A K dom f x) (@lem6583335 A K dom f x h1)). Qed.
Lemma lem6586258 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : False.
Proof. exact (@lem6586255 A K dom f x h1 (@lem6586247 A K i k dom f x neut h2)). Qed.
Lemma lem6586259 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6586258 A K i k dom f x neut h1 h2). Qed.
Lemma lem6586261 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6586262 : term96 = False.
Proof. exact (@lem6586261 False). Qed.
Lemma lem6586263 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586262) (@lem6586259 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6586638 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6586639 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6586638 A x). Qed.
Lemma lem6586640 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (@lem6586639 A (@I (K -> A) f x)). Qed.
Lemma lem6586641 {A K : Type'} (f : K -> A) (x : K) : term1249 A K f x.
Proof. exact (fun h0 : term1237 A K f x => @lem6586640 A K f x). Qed.
Lemma lem6586643 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6586644 {A K : Type'} (f : K -> A) (x : K) : (term1249 A K f x) = ((@I (K -> A) f x) = (@I (K -> A) f x)).
Proof. exact (@lem6586643 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6586645 {A K : Type'} (f : K -> A) (x : K) : (@I (K -> A) f x) = (@I (K -> A) f x).
Proof. exact (EQ_MP (@lem6586644 A K f x) (@lem6586641 A K f x)). Qed.
Lemma lem6586648 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6586650 {A K : Type'} (f : K -> A) (x : K) : (term1237 A K f x) = (term1250 A K f x).
Proof. exact (@lem6586648 ((@I (K -> A) f x) = (@I (K -> A) f x))). Qed.
Lemma lem6586653 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term1250 A K f x.
Proof. exact (EQ_MP (@lem6586650 A K f x) (@lem6584184 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6586656 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (@lem6586653 A K i k dom f x neut h1 h2 (@lem6586645 A K f x)). Qed.
Lemma lem6586657 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6586656 A K i k dom f x neut h1 h2). Qed.
Lemma lem6586659 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6586660 : term96 = False.
Proof. exact (@lem6586659 False). Qed.
Lemma lem6586662 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6586660) (@lem6586657 A K i k dom f x neut h1 h2)). Qed.
Lemma lem6586663 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6585470) (@lem6585467 A K ltle _86291 k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6586664 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586663 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6583938 K x i h3)). Qed.
Lemma lem6586666 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586664 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6583938 K x i h3)). Qed.
Lemma lem6586667 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6585072) (@lem6585069 A K ltle _86291 k dom f neut x i h1 h2 h3)). Qed.
Lemma lem6586668 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6584676) (@lem6584673 A K k dom f neut x i h1 h2)). Qed.
Lemma lem6586669 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6586662 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6583403 A K f x neut h2)). Qed.
Lemma lem6586670 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6586669 A K i k dom f x neut h1 h2) (@lem6583403 A K f x neut h2)). Qed.
Lemma lem6586671 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6586263 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6583335 A K dom f x h1)). Qed.
Lemma lem6586672 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586671 A K i k dom f x neut h1 h2) (@lem6583335 A K dom f x h1)). Qed.
Lemma lem6586673 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6585867 K k x h1 h2) (fun h3 : False => @lem6583267 K k x h1)). Qed.
Lemma lem6586674 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586673 K k x h1 h2) (@lem6583267 K k x h1)). Qed.
Lemma lem6586675 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6586674 K k x h1 h2) (fun h3 : False => @lem6583265 K k x h2)). Qed.
Lemma lem6586676 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586675 K k x h1 h2) (@lem6583265 K k x h2)). Qed.
Lemma lem6586677 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6586666 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6583199 A K f x neut h2)). Qed.
Lemma lem6586678 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586677 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6583199 A K f x neut h2)). Qed.
Lemma lem6586679 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586678 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6583197 K x i h3)). Qed.
Lemma lem6586680 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586679 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6583197 K x i h3)). Qed.
Lemma lem6586681 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6586667 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6583131 A K dom f x h1)). Qed.
Lemma lem6586682 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586681 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6583131 A K dom f x h1)). Qed.
Lemma lem6586683 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586682 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6583129 K x i h3)). Qed.
Lemma lem6586684 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586683 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6583129 K x i h3)). Qed.
Lemma lem6586685 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6586668 A K k dom f neut x i h1 h2) (fun h3 : False => @lem6583061 K x i h2)). Qed.
Lemma lem6586686 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6586685 A K k dom f neut x i h1 h2) (@lem6583061 K x i h2)). Qed.
Lemma lem6586687 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6586670 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6582761 A K f x neut h2)). Qed.
Lemma lem6586688 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6586687 A K i k dom f x neut h1 h2) (@lem6582761 A K f x neut h2)). Qed.
Lemma lem6586689 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6586672 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6582582 A K dom f x h1)). Qed.
Lemma lem6586690 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586689 A K i k dom f x neut h1 h2) (@lem6582582 A K dom f x h1)). Qed.
Lemma lem6586691 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6586676 K k x h1 h2) (fun h3 : False => @lem6582403 K k x h1)). Qed.
Lemma lem6586692 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586691 K k x h1 h2) (@lem6582403 K k x h1)). Qed.
Lemma lem6586693 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6586692 K k x h1 h2) (fun h3 : False => @lem6582399 K k x h2)). Qed.
Lemma lem6586694 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586693 K k x h1 h2) (@lem6582399 K k x h2)). Qed.
Lemma lem6586695 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6586680 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582224 A K f x neut h2)). Qed.
Lemma lem6586696 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586695 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582224 A K f x neut h2)). Qed.
Lemma lem6586697 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586696 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582220 K x i h3)). Qed.
Lemma lem6586698 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586697 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582220 K x i h3)). Qed.
Lemma lem6586699 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6586684 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582045 A K dom f x h1)). Qed.
Lemma lem6586700 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586699 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582045 A K dom f x h1)). Qed.
Lemma lem6586701 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586700 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582041 K x i h3)). Qed.
Lemma lem6586702 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586701 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582041 K x i h3)). Qed.
Lemma lem6586703 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6586686 A K k dom f neut x i h1 h2) (fun h3 : False => @lem6581862 K x i h2)). Qed.
Lemma lem6586704 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6586703 A K k dom f neut x i h1 h2) (@lem6581862 K x i h2)). Qed.
Lemma lem6586705 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f x) = neut => @lem6586688 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6582761 A K f x neut h2)). Qed.
Lemma lem6586706 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : (@I (K -> A) f x) = neut) : False.
Proof. exact (EQ_MP (@lem6586705 A K i k dom f x neut h1 h2) (@lem6582761 A K f x neut h2)). Qed.
Lemma lem6586707 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f x => @lem6586690 A K i k dom f x neut h1 h2) (fun h3 : False => @lem6582582 A K dom f x h1)). Qed.
Lemma lem6586708 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1190 A K dom f x) (h2 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586707 A K i k dom f x neut h1 h2) (@lem6582582 A K dom f x h1)). Qed.
Lemma lem6586709 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (term1178 K k x) = False.
Proof. exact (prop_ext (fun h3 : term1178 K k x => @lem6586694 K k x h1 h2) (fun h3 : False => @lem6582403 K k x h1)). Qed.
Lemma lem6586710 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586709 K k x h1 h2) (@lem6582403 K k x h1)). Qed.
Lemma lem6586711 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : (@I (K -> Prop) k x) = False.
Proof. exact (prop_ext (fun h3 : @I (K -> Prop) k x => @lem6586710 K k x h1 h2) (fun h3 : False => @lem6582399 K k x h2)). Qed.
Lemma lem6586712 {K : Type'} (k : K -> Prop) (x : K) (h1 : term1178 K k x) (h2 : @I (K -> Prop) k x) : False.
Proof. exact (EQ_MP (@lem6586711 K k x h1 h2) (@lem6582399 K k x h2)). Qed.
Lemma lem6586713 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : ((@I (K -> A) f x) = neut) = False.
Proof. exact (prop_ext (fun h4 : (@I (K -> A) f x) = neut => @lem6586698 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582224 A K f x neut h2)). Qed.
Lemma lem6586714 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586713 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582224 A K f x neut h2)). Qed.
Lemma lem6586715 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586714 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582220 K x i h3)). Qed.
Lemma lem6586716 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : (@I (K -> A) f x) = neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586715 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582220 K x i h3)). Qed.
Lemma lem6586717 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (term1190 A K dom f x) = False.
Proof. exact (prop_ext (fun h4 : term1190 A K dom f x => @lem6586702 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582045 A K dom f x h1)). Qed.
Lemma lem6586718 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586717 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582045 A K dom f x h1)). Qed.
Lemma lem6586719 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h4 : x = i => @lem6586718 A K ltle _86291 k dom f neut x i h1 h2 h3) (fun h4 : False => @lem6582041 K x i h3)). Qed.
Lemma lem6586720 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1190 A K dom f x) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (EQ_MP (@lem6586719 A K ltle _86291 k dom f neut x i h1 h2 h3) (@lem6582041 K x i h3)). Qed.
Lemma lem6586721 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : (x = i) = False.
Proof. exact (prop_ext (fun h3 : x = i => @lem6586704 A K k dom f neut x i h1 h2) (fun h3 : False => @lem6581862 K x i h2)). Qed.
Lemma lem6586722 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : x = i) : False.
Proof. exact (EQ_MP (@lem6586721 A K k dom f neut x i h1 h2) (@lem6581862 K x i h2)). Qed.
Lemma lem6586723 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term658 A K i k dom f x neut) (h2 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6581685 A K dom f x neut h2) (fun h0 : term1190 A K dom f x => @lem6586708 A K i k dom f x neut h0 h1) (fun h0 : (@I (K -> A) f x) = neut => @lem6586706 A K i k dom f x neut h1 h0)). Qed.
Lemma lem6586724 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) (x : K) (h1 : term1487 A K i k dom f x neut) (h2 : term658 A K i k dom f x neut) (h3 : @I (K -> Prop) k x) : False.
Proof. exact (or_elim (@lem6581662 A K i k dom f x neut h1) (fun h0 : term1178 K k x => @lem6586712 K k x h0 h3) (fun h0 : term1192 A K dom f x neut => @lem6586723 A K i k dom f x neut h2 h0)). Qed.
Lemma lem6586725 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1312 A K ltle i _86291 k dom f neut) (h2 : x = i) (h3 : term1192 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6581681 A K dom f x neut h3) (fun h0 : term1190 A K dom f x => @lem6586720 A K ltle _86291 k dom f neut x i h0 h1 h2) (fun h0 : (@I (K -> A) f x) = neut => @lem6586716 A K ltle _86291 k dom f neut x i h1 h0 h2)). Qed.
Lemma lem6586726 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (x : K) (i : K) (h1 : term1487 A K i k dom f x neut) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : x = i) : False.
Proof. exact (or_elim (@lem6581662 A K i k dom f x neut h1) (fun h0 : term1178 K k x => @lem6586722 A K k dom f neut x i h1 h3) (fun h0 : term1192 A K dom f x neut => @lem6586725 A K ltle _86291 k i dom f x neut h2 h3 h0)). Qed.
Lemma lem6586727 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term1487 A K i k dom f x neut) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : term658 A K i k dom f x neut) : False.
Proof. exact (or_elim (@lem6581665 A K i k dom f x neut h3) (fun h0 : x = i => @lem6586726 A K ltle _86291 k dom f neut x i h1 h2 h0) (fun h0 : @I (K -> Prop) k x => @lem6586724 A K i dom f neut k x h1 h3 h0)). Qed.
Lemma lem6586728 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1487 A K i k dom f x neut) (h3 : term1312 A K ltle i _86291 k dom f neut) (h4 : term658 A K i k dom f x neut) : False.
Proof. exact (ex_elim (@lem6580656 A K _86291 h1) (fun j : type834 A K => fun h0 : term1120 A K _86291 j => @lem6586727 A K ltle _86291 i k dom f x neut h2 h3 h4)). Qed.
Lemma lem6586729 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1487 A K i k dom f x neut) (h3 : term1312 A K ltle i _86291 k dom f neut) (h4 : term658 A K i k dom f x neut) : (term658 A K i k dom f x neut) = False.
Proof. exact (prop_ext (fun h5 : term658 A K i k dom f x neut => @lem6586728 A K ltle _86291 i k dom f x neut h1 h2 h3 h4) (fun h5 : False => @lem6580842 A K i k dom f x neut h4)). Qed.
Lemma lem6586730 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1487 A K i k dom f x neut) (h3 : term1312 A K ltle i _86291 k dom f neut) (h4 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586729 A K ltle _86291 i k dom f x neut h1 h2 h3 h4) (@lem6580842 A K i k dom f x neut h4)). Qed.
Lemma lem6586731 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1487 A K i k dom f x neut) (h3 : term1312 A K ltle i _86291 k dom f neut) (h4 : term658 A K i k dom f x neut) : (term1487 A K i k dom f x neut) = False.
Proof. exact (prop_ext (fun h5 : term1487 A K i k dom f x neut => @lem6586730 A K ltle _86291 i k dom f x neut h1 h2 h3 h4) (fun h5 : False => @lem6579630 A K i k dom f x neut h2)). Qed.
Lemma lem6586732 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1487 A K i k dom f x neut) (h3 : term1312 A K ltle i _86291 k dom f neut) (h4 : term658 A K i k dom f x neut) : False.
Proof. exact (EQ_MP (@lem6586731 A K ltle _86291 i k dom f x neut h1 h2 h3 h4) (@lem6579630 A K i k dom f x neut h2)). Qed.
Lemma lem6586733 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : term658 A K i k dom f x neut) : term1486 A K i k dom f x neut.
Proof. exact (fun h0 : term1487 A K i k dom f x neut => @lem6586732 A K ltle _86291 i k dom f x neut h1 h0 h2 h3). Qed.
Lemma lem6586734 {A K : Type'} (ltle : type1402 K) (_86291 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term815 A K _86291) (h2 : term1312 A K ltle i _86291 k dom f neut) (h3 : term658 A K i k dom f x neut) : term1414 A K i k dom f x neut.
Proof. exact (EQ_MP (@lem6579629 A K i k dom f x neut) (@lem6586733 A K ltle _86291 i k dom f x neut h1 h2 h3)). Qed.
Lemma lem6586735 {A K : Type'} (x : K) (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _86291) (h2 : term1312 A K ltle i _86291 k dom f neut) : term1416 A K i k dom f x neut.
Proof. exact (fun h0 : term658 A K i k dom f x neut => @lem6586734 A K ltle _86291 i k dom f x neut h1 h2 h0). Qed.
Lemma lem6586740 {A K : Type'} (ltle : type1402 K) (i : K) (_86291 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _86291) (h2 : term1312 A K ltle i _86291 k dom f neut) : term1419 A K i k dom f neut.
Proof. exact (fun x : K => @lem6586735 A K x ltle i _86291 k dom f neut h1 h2). Qed.
Lemma lem6586741 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1451 A K ltle _86291 i k dom f neut.
Proof. exact (fun h0 : term1312 A K ltle i _86291 k dom f neut => @lem6586740 A K ltle i _86291 k dom f neut h1 h0). Qed.
Lemma lem6586746 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1453 A K _86291 i k dom f neut.
Proof. exact (fun ltle : type1402 K => @lem6586741 A K ltle i k dom f neut _86291 h1). Qed.
Lemma lem6586751 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1455 A K _86291 k dom f neut.
Proof. exact (fun i : K => @lem6586746 A K i k dom f neut _86291 h1). Qed.
Lemma lem6586756 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1457 A K _86291 dom f neut.
Proof. exact (fun k : K -> Prop => @lem6586751 A K k dom f neut _86291 h1). Qed.
Lemma lem6586761 {A K : Type'} (f : K -> A) (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1459 A K _86291 f neut.
Proof. exact (fun dom : A -> Prop => @lem6586756 A K dom f neut _86291 h1). Qed.
Lemma lem6586766 {A K : Type'} (neut : A) (_86291 : type835 A K) (h1 : term815 A K _86291) : term1461 A K _86291 neut.
Proof. exact (fun f : K -> A => @lem6586761 A K f neut _86291 h1). Qed.
Lemma lem6586771 {A K : Type'} (_86291 : type835 A K) (h1 : term815 A K _86291) : term1463 A K _86291.
Proof. exact (fun neut : A => @lem6586766 A K neut _86291 h1). Qed.
Lemma lem6586772 {A K : Type'} (_86291 : type835 A K) : term1483 A K _86291.
Proof. exact (fun h0 : term815 A K _86291 => @lem6586771 A K _86291 h0). Qed.
Lemma lem6586777 {A K : Type'} : term1485 A K.
Proof. exact (fun _86291 : type835 A K => @lem6586772 A K _86291). Qed.
Lemma lem6586778 {A K : Type'} : term1449 A K.
Proof. exact (EQ_MP (@lem6579622 A K) (@lem6586777 A K)). Qed.
Lemma lem6586779 {A K : Type'} (neut : A) : term1498 A K neut.
Proof. exact (@lem6586778 A K neut). Qed.
Lemma lem6586780 {A K : Type'} (neut : A) : (term1498 A K neut) = (term1445 A K neut).
Proof. exact (eq_refl (term1498 A K neut)). Qed.
Lemma lem6586781 {A K : Type'} (neut : A) : term1445 A K neut.
Proof. exact (EQ_MP (@lem6586780 A K neut) (@lem6586779 A K neut)). Qed.
Lemma lem6586782 {A K : Type'} (neut : A) (f : K -> A) : term1499 A K neut f.
Proof. exact (@lem6586781 A K neut f). Qed.
Lemma lem6586783 {A K : Type'} (f : K -> A) (neut : A) : (term1499 A K neut f) = (term1441 A K f neut).
Proof. exact (eq_refl (term1499 A K neut f)). Qed.
Lemma lem6586784 {A K : Type'} (f : K -> A) (neut : A) : term1441 A K f neut.
Proof. exact (EQ_MP (@lem6586783 A K f neut) (@lem6586782 A K neut f)). Qed.
Lemma lem6586785 {A K : Type'} (f : K -> A) (neut : A) (dom : A -> Prop) : term1500 A K f neut dom.
Proof. exact (@lem6586784 A K f neut dom). Qed.
Lemma lem6586786 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term1500 A K f neut dom) = (term1437 A K dom f neut).
Proof. exact (eq_refl (term1500 A K f neut dom)). Qed.
Lemma lem6586787 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : term1437 A K dom f neut.
Proof. exact (EQ_MP (@lem6586786 A K dom f neut) (@lem6586785 A K f neut dom)). Qed.
Lemma lem6586788 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) : term1501 A K dom f neut k.
Proof. exact (@lem6586787 A K dom f neut k). Qed.
Lemma lem6586789 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1501 A K dom f neut k) = (term1433 A K k dom f neut).
Proof. exact (eq_refl (term1501 A K dom f neut k)). Qed.
Lemma lem6586790 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1433 A K k dom f neut.
Proof. exact (EQ_MP (@lem6586789 A K k dom f neut) (@lem6586788 A K dom f neut k)). Qed.
Lemma lem6586791 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term1502 A K k dom f neut i.
Proof. exact (@lem6586790 A K k dom f neut i). Qed.
Lemma lem6586792 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1502 A K k dom f neut i) = (term1429 A K i k dom f neut).
Proof. exact (eq_refl (term1502 A K k dom f neut i)). Qed.
Lemma lem6586793 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1429 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6586792 A K i k dom f neut) (@lem6586791 A K k dom f neut i)). Qed.
Lemma lem6586794 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) : term1503 A K i k dom f neut ltle.
Proof. exact (@lem6586793 A K i k dom f neut ltle). Qed.
Lemma lem6586795 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1503 A K i k dom f neut ltle) = (term1421 A K ltle i k dom f neut).
Proof. exact (eq_refl (term1503 A K i k dom f neut ltle)). Qed.
Lemma lem6586796 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1421 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6586795 A K ltle i k dom f neut) (@lem6586794 A K i k dom f neut ltle)). Qed.
Lemma lem6586798 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1421 A K ltle i k dom f neut.
Proof. exact (@lem6578815 A K ltle i k dom f neut (@lem6586796 A K ltle i k dom f neut)). Qed.
Lemma lem6586799 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1422 A K ltle i k dom f neut) : False.
Proof. exact (@lem6586798 A K ltle i k dom f neut (@lem6578799 A K ltle i k dom f neut h1)). Qed.
Lemma lem6586800 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1422 A K ltle i k dom f neut) : (term1422 A K ltle i k dom f neut) = False.
Proof. exact (prop_ext (fun h2 : term1422 A K ltle i k dom f neut => @lem6586799 A K ltle i k dom f neut h1) (fun h2 : False => @lem6578799 A K ltle i k dom f neut h1)). Qed.
Lemma lem6586801 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1422 A K ltle i k dom f neut) : False.
Proof. exact (EQ_MP (@lem6586800 A K ltle i k dom f neut h1) (@lem6578799 A K ltle i k dom f neut h1)). Qed.
Lemma lem6586802 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1421 A K ltle i k dom f neut.
Proof. exact (fun h0 : term1422 A K ltle i k dom f neut => @lem6586801 A K ltle i k dom f neut h0). Qed.
Lemma lem6586803 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1420 A K ltle i k dom f neut.
Proof. exact (EQ_MP (@lem6578798 A K ltle i k dom f neut) (@lem6586802 A K ltle i k dom f neut)). Qed.
Lemma lem6586804 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1409 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6578794 A K ltle i k f dom neut) (@lem6586803 A K ltle i k dom f neut)). Qed.
Lemma lem6586805 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1408 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6578374 A K ltle i k f dom neut) (@lem6586804 A K ltle i k f dom neut)). Qed.
Lemma lem6586806 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1402 A K i k f dom neut.
Proof. exact (@lem6586805 A K ltle i k f dom neut (@lem6578297 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6586807 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1403 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6578282 A K i k f dom neut h3) (@lem6586806 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6586808 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1504 A K i k f dom neut.
Proof. exact (ex_intro (term1505 A K i k f dom neut) (term1407 A K i k f dom neut) (@lem6586807 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6586809 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1262 A K i k f dom neut.
Proof. exact (@lem6578204 A K i k f dom neut (@lem6586808 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6586810 {K : Type'} (_474 : K) (_475 : Prop) (_476 : K -> Prop) (_477 : K) : (term547 K _476 _475 _474 _477) = (term548 K _474 _475 _476 _477).
Proof. exact (@lem13473 K _474 _475 _476 _477). Qed.
Lemma lem6586811 {A K : Type'} (_474 : K) (_475 : Prop) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_477 : K) : (term1506 A K i dom neut op ltle k f _475 _474 _477) = (term1507 A K _474 _475 i dom neut op ltle k f _477).
Proof. exact (@lem6586810 K _474 _475 (term1508 A K i dom neut op ltle k f) _477). Qed.
Lemma lem6586812 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1509 A K op ltle i k f dom neut) = (term1510 A K op ltle i k f dom neut).
Proof. exact (@lem6586811 A K (term1511 A K ltle i k f dom neut) (term1512 A K ltle i k f dom neut) i dom neut op ltle k f (term1513 A K i k f dom neut)). Qed.
Lemma lem6586813 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1514 A K op ltle i k f dom neut) = ((term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term1514 A K op ltle i k f dom neut)). Qed.
Lemma lem6586814 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1516 A K ltle i k f dom neut) = (term1516 A K ltle i k f dom neut).
Proof. exact (eq_refl (term1516 A K ltle i k f dom neut)). Qed.
Lemma lem6586815 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1517 A K op ltle i k f dom neut) = (term1518 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6586814 A K ltle i k f dom neut) (@lem6586813 A K i dom neut op ltle k f)). Qed.
Lemma lem6586816 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K op ltle i k f dom neut) = ((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term1519 A K op ltle i k f dom neut)). Qed.
Lemma lem6586817 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1521 A K ltle i k f dom neut) = (term1521 A K ltle i k f dom neut).
Proof. exact (eq_refl (term1521 A K ltle i k f dom neut)). Qed.
Lemma lem6586818 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1522 A K op ltle i k f dom neut) = (term1523 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6586817 A K ltle i k f dom neut) (@lem6586816 A K i dom neut op ltle k f)). Qed.
Lemma lem6586819 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6586820 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1524 A K op ltle i k f dom neut) = (term1525 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6586819) (@lem6586818 A K i dom neut op ltle k f)). Qed.
Lemma lem6586821 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1510 A K op ltle i k f dom neut) = (term1526 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6586820 A K i dom neut op ltle k f) (@lem6586815 A K i dom neut op ltle k f)). Qed.
Lemma lem6586822 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1509 A K op ltle i k f dom neut) = ((term1264 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term1509 A K op ltle i k f dom neut)). Qed.
Lemma lem6586823 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6586824 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1527 A K op ltle i k f dom neut) = (term1528 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6586823) (@lem6586822 A K i dom neut op ltle k f)). Qed.
Lemma lem6586825 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1509 A K op ltle i k f dom neut) = (term1510 A K op ltle i k f dom neut)) = (((term1264 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = (term1526 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6586824 A K i dom neut op ltle k f) (@lem6586821 A K i dom neut op ltle k f)). Qed.
Lemma lem6586826 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1264 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = (term1526 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6586825 A K i dom neut op ltle k f) (@lem6586812 A K op ltle i k f dom neut)). Qed.
Lemma lem6586827 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1526 A K i dom neut op ltle k f) = ((term1264 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6586826 A K i dom neut op ltle k f)). Qed.
Lemma lem6586845 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term1529 A K ltle i k f dom neut) : term1529 A K ltle i k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6586863 {A : Type'} (P : A -> Prop) : (term102 A P) = (term103 A P).
Proof. exact (EQ_MP (@lem6450275 A P) (@lem6450274 A P)). Qed.
Lemma lem6586864 {K : Type'} (P : K -> Prop) : (term102 K P) = (term103 K P).
Proof. exact (@lem6586863 K P). Qed.
Lemma lem6586865 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1530 A K ltle i k f dom neut) = (term1531 A K ltle i k f dom neut).
Proof. exact (@lem6586864 K (term1532 A K ltle i k f dom neut)). Qed.
Lemma lem6586866 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1533 A K ltle i k f dom neut i') = (term1534 A K ltle i k f dom neut i').
Proof. exact (eq_refl (term1533 A K ltle i k f dom neut i')). Qed.
Lemma lem6586867 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1535 A K ltle i k f dom neut) = (term1532 A K ltle i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6586866 A K ltle i k f dom neut i')). Qed.
Lemma lem6586868 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6586869 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1536 A K ltle i k f dom neut) = (term1512 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6586868 K) (@lem6586867 A K ltle i k f dom neut)). Qed.
Lemma lem6586870 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6586871 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1530 A K ltle i k f dom neut) = (term1529 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6586870) (@lem6586869 A K ltle i k f dom neut)). Qed.
Lemma lem6586872 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6586873 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1537 A K ltle i k f dom neut) = (term1538 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6586872) (@lem6586871 A K ltle i k f dom neut)). Qed.
Lemma lem6586874 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1533 A K ltle i k f dom neut i') = (term1534 A K ltle i k f dom neut i').
Proof. exact (eq_refl (term1533 A K ltle i k f dom neut i')). Qed.
Lemma lem6586875 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6586876 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1539 A K ltle i k f dom neut i') = (term1540 A K ltle i k f dom neut i').
Proof. exact (MK_COMB (@lem6586875) (@lem6586874 A K ltle i k f dom neut i')). Qed.
Lemma lem6586877 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1541 A K ltle i k f dom neut) = (term1542 A K ltle i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6586876 A K ltle i k f dom neut i')). Qed.
Lemma lem6586878 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6586879 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1531 A K ltle i k f dom neut) = (term1543 A K ltle i k f dom neut).
Proof. exact (MK_COMB (@lem6586878 K) (@lem6586877 A K ltle i k f dom neut)). Qed.
Lemma lem6586880 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1530 A K ltle i k f dom neut) = (term1531 A K ltle i k f dom neut)) = ((term1529 A K ltle i k f dom neut) = (term1543 A K ltle i k f dom neut)).
Proof. exact (MK_COMB (@lem6586873 A K ltle i k f dom neut) (@lem6586879 A K ltle i k f dom neut)). Qed.
Lemma lem6586881 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1529 A K ltle i k f dom neut) = (term1543 A K ltle i k f dom neut).
Proof. exact (EQ_MP (@lem6586880 A K ltle i k f dom neut) (@lem6586865 A K ltle i k f dom neut)). Qed.
Lemma lem6586902 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term1529 A K ltle i k f dom neut) : term1543 A K ltle i k f dom neut.
Proof. exact (EQ_MP (@lem6586881 A K ltle i k f dom neut) (@lem6586845 A K ltle i k f dom neut h1)). Qed.
Lemma lem6586903 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term1529 A K ltle i k f dom neut) : term1544 A K ltle k f dom neut i.
Proof. exact (@lem6586902 A K ltle i k f dom neut h1 i). Qed.
Lemma lem6586904 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1544 A K ltle k f dom neut i) = (term1545 A K ltle k f dom neut i).
Proof. exact (eq_refl (term1544 A K ltle k f dom neut i)). Qed.
Lemma lem6586905 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term1529 A K ltle i k f dom neut) : term1545 A K ltle k f dom neut i.
Proof. exact (EQ_MP (@lem6586904 A K ltle k f dom neut i) (@lem6586903 A K ltle i k f dom neut h1)). Qed.
Lemma lem6586906 (t1 : Prop) : term1546 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem6586907 (t1 : Prop) : (term1546 t1) = (term1547 t1).
Proof. exact (eq_refl (term1546 t1)). Qed.
Lemma lem6586908 (t1 : Prop) : term1547 t1.
Proof. exact (EQ_MP (@lem6586907 t1) (@lem6586906 t1)). Qed.
Lemma lem6586909 (t1 : Prop) (t2 : Prop) : term1548 t1 t2.
Proof. exact (@lem6586908 t1 t2). Qed.
Lemma lem6586910 (t1 : Prop) (t2 : Prop) : (term1548 t1 t2) = (term1549 t1 t2).
Proof. exact (eq_refl (term1548 t1 t2)). Qed.
Lemma lem6586911 (t1 : Prop) (t2 : Prop) : term1549 t1 t2.
Proof. exact (EQ_MP (@lem6586910 t1 t2) (@lem6586909 t1 t2)). Qed.
Lemma lem6586912 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term1550 t1 t2 t3.
Proof. exact (@lem6586911 t1 t2 t3). Qed.
Lemma lem6586913 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1550 t1 t2 t3) = ((term1366 t1 t2 t3) = (term1551 t1 t2 t3)).
Proof. exact (eq_refl (term1550 t1 t2 t3)). Qed.
Lemma lem6586914 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1366 t1 t2 t3) = (term1551 t1 t2 t3).
Proof. exact (EQ_MP (@lem6586913 t1 t2 t3) (@lem6586912 t1 t2 t3)). Qed.
Lemma lem6586915 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1551 t1 t2 t3) = (term1366 t1 t2 t3).
Proof. exact (SYM (@lem6586914 t1 t2 t3)). Qed.
Lemma lem6586916 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6586917 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6586916 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6586918 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6586917 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6586919 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term504 A K f i dom) : term1265 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555423 A K f i dom h5) (@lem6586918 A K ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6586920 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1266 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555422 A K f i neut h4) (@lem6586919 A K ltle neut k f i dom h1 h2 h3 h5 h6)). Qed.
Lemma lem6587014 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587015 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587014 A P x). Qed.
Lemma lem6587016 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6587015 A dom (f i)). Qed.
Lemma lem6587017 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587018 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6587017) (@lem6587016 A K dom f i)). Qed.
Lemma lem6587022 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587023 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587022 K P x). Qed.
Lemma lem6587024 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6587023 K k i). Qed.
Lemma lem6587025 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587026 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6587025) (@lem6587024 K k i)). Qed.
Lemma lem6587027 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587028 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6587027) (@lem6587026 K k i)). Qed.
Lemma lem6587042 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587043 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587042 K P x). Qed.
Lemma lem6587044 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6587043 K k j). Qed.
Lemma lem6587045 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587046 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6587045) (@lem6587044 K k j)). Qed.
Lemma lem6587048 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587049 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587048 A s x t). Qed.
Lemma lem6587050 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6587049 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587054 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587055 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587054 A P x). Qed.
Lemma lem6587056 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6587055 A dom (f j)). Qed.
Lemma lem6587057 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587058 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6587057) (@lem6587056 A K dom f j)). Qed.
Lemma lem6587060 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587061 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587060 A y x s). Qed.
Lemma lem6587062 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6587061 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6587068 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587069 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587068 A x). Qed.
Lemma lem6587070 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6587069 A (f j)). Qed.
Lemma lem6587071 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6587072 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6587071 A K f j neut) (@lem6587070 A K f j)). Qed.
Lemma lem6587074 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587075 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6587074 ((f j) = neut)). Qed.
Lemma lem6587078 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6587072 A K f j neut) (@lem6587075 A K f j neut)). Qed.
Lemma lem6587079 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6587062 A K neut f j) (@lem6587078 A K f j neut)). Qed.
Lemma lem6587080 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587081 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6587080) (@lem6587079 A K f j neut)). Qed.
Lemma lem6587082 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6587058 A K dom f j) (@lem6587081 A K f j neut)). Qed.
Lemma lem6587085 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6587050 A K dom f j neut) (@lem6587082 A K dom f j neut)). Qed.
Lemma lem6587086 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6587046 K k j) (@lem6587085 A K dom f j neut)). Qed.
Lemma lem6587089 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6587090 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6587089 K ltle j i) (@lem6587086 A K k dom f j neut)). Qed.
Lemma lem6587093 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587094 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6587093) (@lem6587090 A K ltle i k dom f j neut)). Qed.
Lemma lem6587097 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6587098 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6587094 A K ltle i k dom f j neut) (@lem6587097 K j i)). Qed.
Lemma lem6587101 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6587098 A K ltle k dom f neut j i)). Qed.
Lemma lem6587102 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587103 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587102 K) (@lem6587101 A K ltle k dom f neut i)). Qed.
Lemma lem6587108 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587109 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587108) (@lem6587103 A K ltle k dom f neut i)). Qed.
Lemma lem6587119 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587120 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587119 K P x). Qed.
Lemma lem6587121 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6587120 K k j). Qed.
Lemma lem6587122 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587123 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6587122) (@lem6587121 K k j)). Qed.
Lemma lem6587130 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6587131 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6587123 K k j) (@lem6587130 K ltle j i)). Qed.
Lemma lem6587134 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6587131 K k ltle j i)). Qed.
Lemma lem6587135 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587136 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6587135 K) (@lem6587134 K k ltle i)). Qed.
Lemma lem6587141 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587142 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6587141) (@lem6587136 K k ltle i)). Qed.
Lemma lem6587150 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587151 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587150 K P x). Qed.
Lemma lem6587152 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6587151 K k j). Qed.
Lemma lem6587153 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587154 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6587153) (@lem6587152 K k j)). Qed.
Lemma lem6587156 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587157 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587156 A s x t). Qed.
Lemma lem6587158 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6587157 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587162 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587163 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587162 A P x). Qed.
Lemma lem6587164 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6587163 A dom (f j)). Qed.
Lemma lem6587165 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587166 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6587165) (@lem6587164 A K dom f j)). Qed.
Lemma lem6587168 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587169 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587168 A y x s). Qed.
Lemma lem6587170 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6587169 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6587176 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587177 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587176 A x). Qed.
Lemma lem6587178 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6587177 A (f j)). Qed.
Lemma lem6587179 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6587180 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6587179 A K f j neut) (@lem6587178 A K f j)). Qed.
Lemma lem6587182 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587183 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6587182 ((f j) = neut)). Qed.
Lemma lem6587186 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6587180 A K f j neut) (@lem6587183 A K f j neut)). Qed.
Lemma lem6587187 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6587170 A K neut f j) (@lem6587186 A K f j neut)). Qed.
Lemma lem6587188 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587189 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6587188) (@lem6587187 A K f j neut)). Qed.
Lemma lem6587190 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6587166 A K dom f j) (@lem6587189 A K f j neut)). Qed.
Lemma lem6587193 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6587158 A K dom f j neut) (@lem6587190 A K dom f j neut)). Qed.
Lemma lem6587194 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6587154 K k j) (@lem6587193 A K dom f j neut)). Qed.
Lemma lem6587197 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6587198 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6587197 K GEN_PVAR_272) (@lem6587194 A K k dom f j neut)). Qed.
Lemma lem6587199 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6587200 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6587198 A K GEN_PVAR_272 k dom f j neut) (@lem6587199 K j)). Qed.
Lemma lem6587201 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6587200 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6587202 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6587203 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6587202 K) (@lem6587201 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6587208 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6587203 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6587209 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6587210 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6587209 K) (@lem6587208 A K k dom f neut)). Qed.
Lemma lem6587211 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6587212 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6587211 K) (@lem6587210 A K k dom f neut)). Qed.
Lemma lem6587213 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587142 K k ltle i) (@lem6587212 A K k dom f neut)). Qed.
Lemma lem6587216 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587109 A K ltle k dom f neut i) (@lem6587213 A K ltle i k dom f neut)). Qed.
Lemma lem6587219 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587028 K k i) (@lem6587216 A K ltle i k dom f neut)). Qed.
Lemma lem6587222 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1265 A K ltle i k f dom neut) = (term1272 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587018 A K dom f i) (@lem6587219 A K ltle i k dom f neut)). Qed.
Lemma lem6587225 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6587226 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1266 A K ltle i k f dom neut) = (term1274 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587225 A K f i neut) (@lem6587222 A K ltle i k dom f neut)). Qed.
Lemma lem6587229 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587230 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1275 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587229) (@lem6587226 A K ltle i k dom f neut)). Qed.
Lemma lem6587236 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587237 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6587236 K y x s). Qed.
Lemma lem6587238 {K : Type'} (i : K) (k : K -> Prop) : (term1552 K i k) = (term1553 K i k).
Proof. exact (@lem6587237 K i i k). Qed.
Lemma lem6587242 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6587243 {K : Type'} (x : K) : (x = x) = True.
Proof. exact (@lem6587242 K x). Qed.
Lemma lem6587244 {K : Type'} (i : K) : (i = i) = True.
Proof. exact (@lem6587243 K i). Qed.
Lemma lem6587245 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6587246 {K : Type'} (i : K) : (term1554 K i) = (or True).
Proof. exact (MK_COMB (@lem6587245) (@lem6587244 K i)). Qed.
Lemma lem6587248 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587249 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587248 K P x). Qed.
Lemma lem6587250 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6587249 K k i). Qed.
Lemma lem6587251 {K : Type'} (k : K -> Prop) (i : K) : (term1553 K i k) = (term1555 K k i).
Proof. exact (MK_COMB (@lem6587246 K i) (@lem6587250 K k i)). Qed.
Lemma lem6587253 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem1831 t)). Qed.
Lemma lem6587254 {K : Type'} (k : K -> Prop) (i : K) : (term1555 K k i) = True.
Proof. exact (@lem6587253 (k i)). Qed.
Lemma lem6587255 {K : Type'} (i : K) (k : K -> Prop) : (term1553 K i k) = True.
Proof. exact (TRANS (@lem6587251 K k i) (@lem6587254 K k i)). Qed.
Lemma lem6587256 {K : Type'} (i : K) (k : K -> Prop) : (term1552 K i k) = True.
Proof. exact (TRANS (@lem6587238 K i k) (@lem6587255 K i k)). Qed.
Lemma lem6587257 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587258 {K : Type'} (i : K) (k : K -> Prop) : (term1556 K i k) = (and True).
Proof. exact (MK_COMB (@lem6587257) (@lem6587256 K i k)). Qed.
Lemma lem6587262 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587263 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587262 A s x t). Qed.
Lemma lem6587264 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term569 A K dom f i neut).
Proof. exact (@lem6587263 A dom (f i) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587268 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587269 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587268 A P x). Qed.
Lemma lem6587270 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6587269 A dom (f i)). Qed.
Lemma lem6587271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587272 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6587271) (@lem6587270 A K dom f i)). Qed.
Lemma lem6587274 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587275 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587274 A y x s). Qed.
Lemma lem6587276 {A K : Type'} (neut : A) (f : K -> A) (i : K) : (term570 A K f i neut) = (term593 A K neut f i).
Proof. exact (@lem6587275 A neut (f i) (@EMPTY A)). Qed.
Lemma lem6587282 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587283 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587282 A x). Qed.
Lemma lem6587284 {A K : Type'} (f : K -> A) (i : K) : (term594 A K f i) = False.
Proof. exact (@lem6587283 A (f i)). Qed.
Lemma lem6587285 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term512 A K f i neut) = (term512 A K f i neut).
Proof. exact (eq_refl (term512 A K f i neut)). Qed.
Lemma lem6587286 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = (term527 A K f i neut).
Proof. exact (MK_COMB (@lem6587285 A K f i neut) (@lem6587284 A K f i)). Qed.
Lemma lem6587288 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587289 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term527 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6587288 ((f i) = neut)). Qed.
Lemma lem6587292 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = ((f i) = neut).
Proof. exact (TRANS (@lem6587286 A K f i neut) (@lem6587289 A K f i neut)). Qed.
Lemma lem6587293 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term570 A K f i neut) = ((f i) = neut).
Proof. exact (TRANS (@lem6587276 A K neut f i) (@lem6587292 A K f i neut)). Qed.
Lemma lem6587294 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587295 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term571 A K f i neut) = (term572 A K f i neut).
Proof. exact (MK_COMB (@lem6587294) (@lem6587293 A K f i neut)). Qed.
Lemma lem6587296 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term569 A K dom f i neut) = (term595 A K dom f i neut).
Proof. exact (MK_COMB (@lem6587272 A K dom f i) (@lem6587295 A K f i neut)). Qed.
Lemma lem6587299 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term595 A K dom f i neut).
Proof. exact (TRANS (@lem6587264 A K dom f i neut) (@lem6587296 A K dom f i neut)). Qed.
Lemma lem6587300 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587301 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term454 A K f i dom neut) = (term1557 A K dom f i neut).
Proof. exact (MK_COMB (@lem6587300) (@lem6587299 A K dom f i neut)). Qed.
Lemma lem6587313 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587314 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6587313 K y x s). Qed.
Lemma lem6587315 {K : Type'} (i : K) (j : K) (k : K -> Prop) : (term36 K j i k) = (term37 K i j k).
Proof. exact (@lem6587314 K i j k). Qed.
Lemma lem6587321 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587322 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587321 K P x). Qed.
Lemma lem6587323 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6587322 K k j). Qed.
Lemma lem6587324 {K : Type'} (j : K) (i : K) : (term38 K j i) = (term38 K j i).
Proof. exact (eq_refl (term38 K j i)). Qed.
Lemma lem6587325 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term37 K i j k) = (term39 K i k j).
Proof. exact (MK_COMB (@lem6587324 K j i) (@lem6587323 K k j)). Qed.
Lemma lem6587328 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term36 K j i k) = (term39 K i k j).
Proof. exact (TRANS (@lem6587315 K i j k) (@lem6587325 K i k j)). Qed.
Lemma lem6587329 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587330 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term40 K j i k) = (term41 K i k j).
Proof. exact (MK_COMB (@lem6587329) (@lem6587328 K i k j)). Qed.
Lemma lem6587332 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587333 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587332 A s x t). Qed.
Lemma lem6587334 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6587333 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587338 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587339 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587338 A P x). Qed.
Lemma lem6587340 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6587339 A dom (f j)). Qed.
Lemma lem6587341 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587342 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6587341) (@lem6587340 A K dom f j)). Qed.
Lemma lem6587344 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587345 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587344 A y x s). Qed.
Lemma lem6587346 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6587345 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6587352 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587353 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587352 A x). Qed.
Lemma lem6587354 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6587353 A (f j)). Qed.
Lemma lem6587355 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6587356 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6587355 A K f j neut) (@lem6587354 A K f j)). Qed.
Lemma lem6587358 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587359 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6587358 ((f j) = neut)). Qed.
Lemma lem6587362 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6587356 A K f j neut) (@lem6587359 A K f j neut)). Qed.
Lemma lem6587363 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6587346 A K neut f j) (@lem6587362 A K f j neut)). Qed.
Lemma lem6587364 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587365 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6587364) (@lem6587363 A K f j neut)). Qed.
Lemma lem6587366 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6587342 A K dom f j) (@lem6587365 A K f j neut)). Qed.
Lemma lem6587369 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6587334 A K dom f j neut) (@lem6587366 A K dom f j neut)). Qed.
Lemma lem6587370 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term643 A K i k f j dom neut) = (term658 A K i k dom f j neut).
Proof. exact (MK_COMB (@lem6587330 K i k j) (@lem6587369 A K dom f j neut)). Qed.
Lemma lem6587373 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6587374 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1558 A K ltle i k f j dom neut) = (term1559 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6587373 K ltle j i) (@lem6587370 A K i k dom f j neut)). Qed.
Lemma lem6587377 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587378 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1560 A K ltle i k f j dom neut) = (term1561 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6587377) (@lem6587374 A K ltle i k dom f j neut)). Qed.
Lemma lem6587381 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6587382 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1562 A K ltle k f dom neut j i) = (term1563 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6587378 A K ltle i k dom f j neut) (@lem6587381 K j i)). Qed.
Lemma lem6587385 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1564 A K ltle k f dom neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6587382 A K ltle k dom f neut j i)). Qed.
Lemma lem6587386 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587387 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1566 A K ltle k f dom neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587386 K) (@lem6587385 A K ltle k dom f neut i)). Qed.
Lemma lem6587392 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1568 A K ltle k f dom neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587301 A K dom f i neut) (@lem6587387 A K ltle k dom f neut i)). Qed.
Lemma lem6587395 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1570 A K ltle k f dom neut i) = (term1571 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587258 K i k) (@lem6587392 A K ltle k dom f neut i)). Qed.
Lemma lem6587397 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6587398 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1571 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (@lem6587397 (term1569 A K ltle k dom f neut i)). Qed.
Lemma lem6587425 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1570 A K ltle k f dom neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6587395 A K ltle k dom f neut i) (@lem6587398 A K ltle k dom f neut i)). Qed.
Lemma lem6587426 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587427 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1545 A K ltle k f dom neut i) = (term1572 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587426) (@lem6587425 A K ltle k dom f neut i)). Qed.
Lemma lem6587428 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587429 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1573 A K ltle k f dom neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6587428) (@lem6587427 A K ltle k dom f neut i)). Qed.
Lemma lem6587439 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term32 A x s y) = (term33 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem6587440 {K : Type'} (s : K -> Prop) (x : K) (y : K) : (term32 K x s y) = (term33 K s x y).
Proof. exact (@lem6587439 K s x y). Qed.
Lemma lem6587441 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1575 K j i k i') = (term1576 K i k j i').
Proof. exact (@lem6587440 K (@INSERT K i k) j i'). Qed.
Lemma lem6587445 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587446 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6587445 K y x s). Qed.
Lemma lem6587447 {K : Type'} (i : K) (j : K) (k : K -> Prop) : (term36 K j i k) = (term37 K i j k).
Proof. exact (@lem6587446 K i j k). Qed.
Lemma lem6587453 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587454 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587453 K P x). Qed.
Lemma lem6587455 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6587454 K k j). Qed.
Lemma lem6587456 {K : Type'} (j : K) (i : K) : (term38 K j i) = (term38 K j i).
Proof. exact (eq_refl (term38 K j i)). Qed.
Lemma lem6587457 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term37 K i j k) = (term39 K i k j).
Proof. exact (MK_COMB (@lem6587456 K j i) (@lem6587455 K k j)). Qed.
Lemma lem6587460 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term36 K j i k) = (term39 K i k j).
Proof. exact (TRANS (@lem6587447 K i j k) (@lem6587457 K i k j)). Qed.
Lemma lem6587461 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587462 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term40 K j i k) = (term41 K i k j).
Proof. exact (MK_COMB (@lem6587461) (@lem6587460 K i k j)). Qed.
Lemma lem6587465 {K : Type'} (j : K) (i' : K) : (term2 K j i') = (term2 K j i').
Proof. exact (eq_refl (term2 K j i')). Qed.
Lemma lem6587466 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1576 K i k j i') = (term1577 K i k j i').
Proof. exact (MK_COMB (@lem6587462 K i k j) (@lem6587465 K j i')). Qed.
Lemma lem6587469 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1575 K j i k i') = (term1577 K i k j i').
Proof. exact (TRANS (@lem6587441 K i k j i') (@lem6587466 K i k j i')). Qed.
Lemma lem6587470 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587471 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1578 K j i k i') = (term1579 K i k j i').
Proof. exact (MK_COMB (@lem6587470) (@lem6587469 K i k j i')). Qed.
Lemma lem6587473 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587474 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587473 A s x t). Qed.
Lemma lem6587475 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6587474 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587479 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587480 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587479 A P x). Qed.
Lemma lem6587481 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6587480 A dom (f j)). Qed.
Lemma lem6587482 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587483 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6587482) (@lem6587481 A K dom f j)). Qed.
Lemma lem6587485 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587486 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587485 A y x s). Qed.
Lemma lem6587487 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6587486 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6587493 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587494 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587493 A x). Qed.
Lemma lem6587495 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6587494 A (f j)). Qed.
Lemma lem6587496 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6587497 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6587496 A K f j neut) (@lem6587495 A K f j)). Qed.
Lemma lem6587499 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587500 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6587499 ((f j) = neut)). Qed.
Lemma lem6587503 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6587497 A K f j neut) (@lem6587500 A K f j neut)). Qed.
Lemma lem6587504 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6587487 A K neut f j) (@lem6587503 A K f j neut)). Qed.
Lemma lem6587505 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587506 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6587505) (@lem6587504 A K f j neut)). Qed.
Lemma lem6587507 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6587483 A K dom f j) (@lem6587506 A K f j neut)). Qed.
Lemma lem6587510 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6587475 A K dom f j neut) (@lem6587507 A K dom f j neut)). Qed.
Lemma lem6587511 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1580 A K i k i' f j dom neut) = (term1581 A K i k i' dom f j neut).
Proof. exact (MK_COMB (@lem6587471 K i k j i') (@lem6587510 A K dom f j neut)). Qed.
Lemma lem6587514 {K : Type'} (GEN_PVAR_265 : K) : (@SETSPEC K GEN_PVAR_265) = (@SETSPEC K GEN_PVAR_265).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_265)). Qed.
Lemma lem6587515 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1582 A K GEN_PVAR_265 i k i' f j dom neut) = (term1583 A K GEN_PVAR_265 i k i' dom f j neut).
Proof. exact (MK_COMB (@lem6587514 K GEN_PVAR_265) (@lem6587511 A K i k i' dom f j neut)). Qed.
Lemma lem6587516 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6587517 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term1584 A K GEN_PVAR_265 i k i' f dom neut j) = (term1585 A K GEN_PVAR_265 i k i' dom f neut j).
Proof. exact (MK_COMB (@lem6587515 A K GEN_PVAR_265 i k i' dom f j neut) (@lem6587516 K j)). Qed.
Lemma lem6587518 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1586 A K GEN_PVAR_265 i k i' f dom neut) = (term1587 A K GEN_PVAR_265 i k i' dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6587517 A K GEN_PVAR_265 i k i' dom f neut j)). Qed.
Lemma lem6587519 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6587520 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1588 A K GEN_PVAR_265 i k i' f dom neut) = (term1589 A K GEN_PVAR_265 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6587519 K) (@lem6587518 A K GEN_PVAR_265 i k i' dom f neut)). Qed.
Lemma lem6587525 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1590 A K i k i' f dom neut) = (term1591 A K i k i' dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_265 : K => @lem6587520 A K GEN_PVAR_265 i k i' dom f neut)). Qed.
Lemma lem6587526 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6587527 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1592 A K i k i' f dom neut) = (term1593 A K i k i' dom f neut).
Proof. exact (MK_COMB (@lem6587526 K) (@lem6587525 A K i k i' dom f neut)). Qed.
Lemma lem6587528 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6587529 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1594 A K op ltle i k i' f dom neut) = (term1595 A K op ltle i k i' dom f neut).
Proof. exact (MK_COMB (@lem6587528 A K dom neut op ltle) (@lem6587527 A K i k i' dom f neut)). Qed.
Lemma lem6587530 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6587531 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1596 A K op ltle i k i' dom neut f) = (term1597 A K op ltle i k i' dom neut f).
Proof. exact (MK_COMB (@lem6587529 A K op ltle i k i' dom f neut) (@lem6587530 A K f)). Qed.
Lemma lem6587532 {A K : Type'} (op : type1400 A) (f : K -> A) (i' : K) : (term1598 A K op f i') = (term1598 A K op f i').
Proof. exact (eq_refl (term1598 A K op f i')). Qed.
Lemma lem6587533 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1599 A K op ltle i k i' dom neut f) = (term1600 A K op ltle i k i' dom neut f).
Proof. exact (MK_COMB (@lem6587532 A K op f i') (@lem6587531 A K op ltle i k i' dom neut f)). Qed.
Lemma lem6587534 {A : Type'} : (@LET_END A) = (@LET_END A).
Proof. exact (eq_refl (@LET_END A)). Qed.
Lemma lem6587535 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1601 A K op ltle i k i' dom neut f) = (term1602 A K op ltle i k i' dom neut f).
Proof. exact (MK_COMB (@lem6587534 A) (@lem6587533 A K op ltle i k i' dom neut f)). Qed.
Lemma lem6587536 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1603 A K op ltle i k dom neut f) = (term1604 A K op ltle i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6587535 A K op ltle i k i' dom neut f)). Qed.
Lemma lem6587537 {A K : Type'} : (@LET K A) = (@LET K A).
Proof. exact (eq_refl (@LET K A)). Qed.
Lemma lem6587538 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1605 A K op ltle i k dom neut f) = (term1606 A K op ltle i k dom neut f).
Proof. exact (MK_COMB (@lem6587537 A K) (@lem6587536 A K op ltle i k dom neut f)). Qed.
Lemma lem6587542 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587543 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6587542 K y x s). Qed.
Lemma lem6587544 {K : Type'} (i : K) (i' : K) (k : K -> Prop) : (term36 K i' i k) = (term37 K i i' k).
Proof. exact (@lem6587543 K i i' k). Qed.
Lemma lem6587550 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587551 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6587550 K P x). Qed.
Lemma lem6587552 {K : Type'} (k : K -> Prop) (i' : K) : (@IN K i' k) = (k i').
Proof. exact (@lem6587551 K k i'). Qed.
Lemma lem6587553 {K : Type'} (i' : K) (i : K) : (term38 K i' i) = (term38 K i' i).
Proof. exact (eq_refl (term38 K i' i)). Qed.
Lemma lem6587554 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term37 K i i' k) = (term39 K i k i').
Proof. exact (MK_COMB (@lem6587553 K i' i) (@lem6587552 K k i')). Qed.
Lemma lem6587557 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term36 K i' i k) = (term39 K i k i').
Proof. exact (TRANS (@lem6587544 K i i' k) (@lem6587554 K i k i')). Qed.
Lemma lem6587558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587559 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term40 K i' i k) = (term41 K i k i').
Proof. exact (MK_COMB (@lem6587558) (@lem6587557 K i k i')). Qed.
Lemma lem6587561 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6587562 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6587561 A s x t). Qed.
Lemma lem6587563 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i' : K) (neut : A) : (term426 A K f i' dom neut) = (term569 A K dom f i' neut).
Proof. exact (@lem6587562 A dom (f i') (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6587567 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6587568 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6587567 A P x). Qed.
Lemma lem6587569 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i' : K) : (term504 A K f i' dom) = (term591 A K dom f i').
Proof. exact (@lem6587568 A dom (f i')). Qed.
Lemma lem6587570 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587571 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i' : K) : (term573 A K f i' dom) = (term592 A K dom f i').
Proof. exact (MK_COMB (@lem6587570) (@lem6587569 A K dom f i')). Qed.
Lemma lem6587573 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6587574 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6587573 A y x s). Qed.
Lemma lem6587575 {A K : Type'} (neut : A) (f : K -> A) (i' : K) : (term570 A K f i' neut) = (term593 A K neut f i').
Proof. exact (@lem6587574 A neut (f i') (@EMPTY A)). Qed.
Lemma lem6587581 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6587582 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6587581 A x). Qed.
Lemma lem6587583 {A K : Type'} (f : K -> A) (i' : K) : (term594 A K f i') = False.
Proof. exact (@lem6587582 A (f i')). Qed.
Lemma lem6587584 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term512 A K f i' neut) = (term512 A K f i' neut).
Proof. exact (eq_refl (term512 A K f i' neut)). Qed.
Lemma lem6587585 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term593 A K neut f i') = (term527 A K f i' neut).
Proof. exact (MK_COMB (@lem6587584 A K f i' neut) (@lem6587583 A K f i')). Qed.
Lemma lem6587587 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6587588 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term527 A K f i' neut) = ((f i') = neut).
Proof. exact (@lem6587587 ((f i') = neut)). Qed.
Lemma lem6587591 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term593 A K neut f i') = ((f i') = neut).
Proof. exact (TRANS (@lem6587585 A K f i' neut) (@lem6587588 A K f i' neut)). Qed.
Lemma lem6587592 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term570 A K f i' neut) = ((f i') = neut).
Proof. exact (TRANS (@lem6587575 A K neut f i') (@lem6587591 A K f i' neut)). Qed.
Lemma lem6587593 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587594 {A K : Type'} (f : K -> A) (i' : K) (neut : A) : (term571 A K f i' neut) = (term572 A K f i' neut).
Proof. exact (MK_COMB (@lem6587593) (@lem6587592 A K f i' neut)). Qed.
Lemma lem6587595 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i' : K) (neut : A) : (term569 A K dom f i' neut) = (term595 A K dom f i' neut).
Proof. exact (MK_COMB (@lem6587571 A K dom f i') (@lem6587594 A K f i' neut)). Qed.
Lemma lem6587598 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i' : K) (neut : A) : (term426 A K f i' dom neut) = (term595 A K dom f i' neut).
Proof. exact (TRANS (@lem6587563 A K dom f i' neut) (@lem6587595 A K dom f i' neut)). Qed.
Lemma lem6587599 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i' : K) (neut : A) : (term643 A K i k f i' dom neut) = (term658 A K i k dom f i' neut).
Proof. exact (MK_COMB (@lem6587559 K i k i') (@lem6587598 A K dom f i' neut)). Qed.
Lemma lem6587602 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term642 A K i k f dom neut) = (term1607 A K i k dom f neut).
Proof. exact (fun_ext (fun i' : K => @lem6587599 A K i k dom f i' neut)). Qed.
Lemma lem6587603 {K : Type'} : (@Îµ K) = (@Îµ K).
Proof. exact (eq_refl (@Îµ K)). Qed.
Lemma lem6587604 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1513 A K i k f dom neut) = (term1608 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6587603 K) (@lem6587602 A K i k dom f neut)). Qed.
Lemma lem6587605 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1515 A K op ltle i k f dom neut) = (term1609 A K op ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587538 A K op ltle i k dom neut f) (@lem6587604 A K i k dom f neut)). Qed.
Lemma lem6587606 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6587607 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1610 A K op ltle i k f dom neut) = (term1611 A K op ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6587606 A) (@lem6587605 A K op ltle i k dom f neut)). Qed.
Lemma lem6587608 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6587609 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term1609 A K op ltle i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6587607 A K op ltle i k dom f neut) (@lem6587608 A K i dom neut op ltle k f)). Qed.
Lemma lem6587612 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1612 A K i dom neut op ltle k f) = (term1613 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587429 A K ltle k dom f neut i) (@lem6587609 A K i dom neut op ltle k f)). Qed.
Lemma lem6587615 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1614 A K i dom neut op ltle k f) = (term1615 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587230 A K ltle i k dom f neut) (@lem6587612 A K i dom neut op ltle k f)). Qed.
Lemma lem6587618 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1615 A K i dom neut op ltle k f) = (term1614 A K i dom neut op ltle k f).
Proof. exact (SYM (@lem6587615 A K i dom neut op ltle k f)). Qed.
Lemma lem6587620 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6587621 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1615 A K i dom neut op ltle k f) = (term1616 A K i dom neut op ltle k f).
Proof. exact (@lem6587620 (term1615 A K i dom neut op ltle k f)). Qed.
Lemma lem6587622 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1616 A K i dom neut op ltle k f) = (term1615 A K i dom neut op ltle k f).
Proof. exact (SYM (@lem6587621 A K i dom neut op ltle k f)). Qed.
Lemma lem6587623 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1617 A K i dom neut op ltle k f) : term1617 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587634 {K : Type'} (P : K -> Prop) : term1618 K P.
Proof. exact (@lem19732 K P). Qed.
Lemma lem6587635 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1619 A K i k dom f neut.
Proof. exact (@lem6587634 K (term1607 A K i k dom f neut)). Qed.
Lemma lem6587636 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1620 A K i k dom f neut) = (term1621 A K i k dom f neut).
Proof. exact (eq_refl (term1620 A K i k dom f neut)). Qed.
Lemma lem6587637 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1622 A K i k dom f neut x) = (term658 A K i k dom f x neut).
Proof. exact (eq_refl (term1622 A K i k dom f neut x)). Qed.
Lemma lem6587638 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587639 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1623 A K i k dom f neut x) = (term1411 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6587638) (@lem6587637 A K i k dom f x neut)). Qed.
Lemma lem6587640 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1624 A K x i k dom f neut) = (term1625 A K x i k dom f neut).
Proof. exact (MK_COMB (@lem6587639 A K i k dom f x neut) (@lem6587636 A K i k dom f neut)). Qed.
Lemma lem6587641 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1626 A K i k dom f neut) = (term1627 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6587640 A K x i k dom f neut)). Qed.
Lemma lem6587642 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587643 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1619 A K i k dom f neut) = (term1628 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6587642 K) (@lem6587641 A K i k dom f neut)). Qed.
Lemma lem6587644 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1628 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6587643 A K i k dom f neut) (@lem6587635 A K i k dom f neut)). Qed.
Lemma lem6587645 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : term1629 A K i k dom f.
Proof. exact (fun neut : A => @lem6587644 A K i k dom f neut). Qed.
Lemma lem6587646 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) : term1630 A K i k dom.
Proof. exact (fun f : K -> A => @lem6587645 A K i k dom f). Qed.
Lemma lem6587647 {A K : Type'} (i : K) (k : K -> Prop) : term1631 A K i k.
Proof. exact (fun dom : A -> Prop => @lem6587646 A K i k dom). Qed.
Lemma lem6587648 {A K : Type'} (i : K) : term1632 A K i.
Proof. exact (fun k : K -> Prop => @lem6587647 A K i k). Qed.
Lemma lem6587649 {A K : Type'} : term1633 A K.
Proof. exact (fun i : K => @lem6587648 A K i). Qed.
Lemma lem6587650 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1634 A K i dom neut op ltle k f) : term1634 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587651 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1634 A K i dom neut op ltle k f) : term1616 A K i dom neut op ltle k f.
Proof. exact (@lem6587650 A K i dom neut op ltle k f h1 (@lem6587649 A K)). Qed.
Lemma lem6587652 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1635 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1634 A K i dom neut op ltle k f => @lem6587651 A K i dom neut op ltle k f h0). Qed.
Lemma lem6587653 {A K : Type'} (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : _87020 = (term1636 A K).
Proof. exact (h1). Qed.
Lemma lem6587654 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6587655 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i) = (term1637 A K i).
Proof. exact (MK_COMB (@lem6587653 A K _87020 h1) (@lem6587654 K i)). Qed.
Lemma lem6587656 {A K : Type'} (i : K) : (term1637 A K i) = (term1638 A K i).
Proof. exact (eq_refl (term1637 A K i)). Qed.
Lemma lem6587657 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1639 A K _87020 i) = (term1639 A K _87020 i).
Proof. exact (eq_refl (term1639 A K _87020 i)). Qed.
Lemma lem6587658 {A K : Type'} (_87020 : type1452 A K) (i : K) : ((_87020 i) = (term1637 A K i)) = ((_87020 i) = (term1638 A K i)).
Proof. exact (MK_COMB (@lem6587657 A K _87020 i) (@lem6587656 A K i)). Qed.
Lemma lem6587659 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i) = (term1638 A K i).
Proof. exact (EQ_MP (@lem6587658 A K _87020 i) (@lem6587655 A K i _87020 h1)). Qed.
Lemma lem6587660 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6587661 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k) = (term1640 A K i k).
Proof. exact (MK_COMB (@lem6587659 A K i _87020 h1) (@lem6587660 K k)). Qed.
Lemma lem6587662 {A K : Type'} (i : K) (k : K -> Prop) : (term1640 A K i k) = (term1641 A K i k).
Proof. exact (eq_refl (term1640 A K i k)). Qed.
Lemma lem6587663 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1642 A K _87020 i k) = (term1642 A K _87020 i k).
Proof. exact (eq_refl (term1642 A K _87020 i k)). Qed.
Lemma lem6587664 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : ((_87020 i k) = (term1640 A K i k)) = ((_87020 i k) = (term1641 A K i k)).
Proof. exact (MK_COMB (@lem6587663 A K _87020 i k) (@lem6587662 A K i k)). Qed.
Lemma lem6587665 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k) = (term1641 A K i k).
Proof. exact (EQ_MP (@lem6587664 A K _87020 i k) (@lem6587661 A K i k _87020 h1)). Qed.
Lemma lem6587666 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6587667 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom) = (term1643 A K i k dom).
Proof. exact (MK_COMB (@lem6587665 A K i k _87020 h1) (@lem6587666 A dom)). Qed.
Lemma lem6587668 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1643 A K i k dom) = (term1644 A K i k dom).
Proof. exact (eq_refl (term1643 A K i k dom)). Qed.
Lemma lem6587669 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1645 A K _87020 i k dom) = (term1645 A K _87020 i k dom).
Proof. exact (eq_refl (term1645 A K _87020 i k dom)). Qed.
Lemma lem6587670 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87020 i k dom) = (term1643 A K i k dom)) = ((_87020 i k dom) = (term1644 A K i k dom)).
Proof. exact (MK_COMB (@lem6587669 A K _87020 i k dom) (@lem6587668 A K i k dom)). Qed.
Lemma lem6587671 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom) = (term1644 A K i k dom).
Proof. exact (EQ_MP (@lem6587670 A K _87020 i k dom) (@lem6587667 A K i k dom _87020 h1)). Qed.
Lemma lem6587672 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6587673 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom f) = (term1646 A K i k dom f).
Proof. exact (MK_COMB (@lem6587671 A K i k dom _87020 h1) (@lem6587672 A K f)). Qed.
Lemma lem6587674 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1646 A K i k dom f) = (term1647 A K i k dom f).
Proof. exact (eq_refl (term1646 A K i k dom f)). Qed.
Lemma lem6587675 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1648 A K _87020 i k dom f) = (term1648 A K _87020 i k dom f).
Proof. exact (eq_refl (term1648 A K _87020 i k dom f)). Qed.
Lemma lem6587676 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87020 i k dom f) = (term1646 A K i k dom f)) = ((_87020 i k dom f) = (term1647 A K i k dom f)).
Proof. exact (MK_COMB (@lem6587675 A K _87020 i k dom f) (@lem6587674 A K i k dom f)). Qed.
Lemma lem6587677 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom f) = (term1647 A K i k dom f).
Proof. exact (EQ_MP (@lem6587676 A K _87020 i k dom f) (@lem6587673 A K i k dom f _87020 h1)). Qed.
Lemma lem6587678 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6587679 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom f neut) = (term1649 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6587677 A K i k dom f _87020 h1) (@lem6587678 A neut)). Qed.
Lemma lem6587680 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1649 A K i k dom f neut) = (term1608 A K i k dom f neut).
Proof. exact (eq_refl (term1649 A K i k dom f neut)). Qed.
Lemma lem6587681 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1650 A K _87020 i k dom f neut) = (term1650 A K _87020 i k dom f neut).
Proof. exact (eq_refl (term1650 A K _87020 i k dom f neut)). Qed.
Lemma lem6587682 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87020 i k dom f neut) = (term1649 A K i k dom f neut)) = ((_87020 i k dom f neut) = (term1608 A K i k dom f neut)).
Proof. exact (MK_COMB (@lem6587681 A K _87020 i k dom f neut) (@lem6587680 A K i k dom f neut)). Qed.
Lemma lem6587683 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (_87020 i k dom f neut) = (term1608 A K i k dom f neut).
Proof. exact (EQ_MP (@lem6587682 A K _87020 i k dom f neut) (@lem6587679 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587684 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (SYM (@lem6587683 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587685 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1651 A K _87020 i k dom f.
Proof. exact (fun neut : A => @lem6587684 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587686 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1652 A K _87020 i k dom.
Proof. exact (fun f : K -> A => @lem6587685 A K i k dom f _87020 h1). Qed.
Lemma lem6587687 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1653 A K _87020 i k.
Proof. exact (fun dom : A -> Prop => @lem6587686 A K i k dom _87020 h1). Qed.
Lemma lem6587688 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1654 A K _87020 i.
Proof. exact (fun k : K -> Prop => @lem6587687 A K i k _87020 h1). Qed.
Lemma lem6587689 {A K : Type'} (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1655 A K _87020.
Proof. exact (fun i : K => @lem6587688 A K i _87020 h1). Qed.
Lemma lem6587690 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1656 A K _87020 i.
Proof. exact (@lem6587689 A K _87020 h1 i). Qed.
Lemma lem6587691 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1656 A K _87020 i) = (term1654 A K _87020 i).
Proof. exact (eq_refl (term1656 A K _87020 i)). Qed.
Lemma lem6587692 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1654 A K _87020 i.
Proof. exact (EQ_MP (@lem6587691 A K _87020 i) (@lem6587690 A K i _87020 h1)). Qed.
Lemma lem6587693 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1657 A K _87020 i k.
Proof. exact (@lem6587692 A K i _87020 h1 k). Qed.
Lemma lem6587694 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1657 A K _87020 i k) = (term1653 A K _87020 i k).
Proof. exact (eq_refl (term1657 A K _87020 i k)). Qed.
Lemma lem6587695 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1653 A K _87020 i k.
Proof. exact (EQ_MP (@lem6587694 A K _87020 i k) (@lem6587693 A K i k _87020 h1)). Qed.
Lemma lem6587696 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1658 A K _87020 i k dom.
Proof. exact (@lem6587695 A K i k _87020 h1 dom). Qed.
Lemma lem6587697 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1658 A K _87020 i k dom) = (term1652 A K _87020 i k dom).
Proof. exact (eq_refl (term1658 A K _87020 i k dom)). Qed.
Lemma lem6587698 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1652 A K _87020 i k dom.
Proof. exact (EQ_MP (@lem6587697 A K _87020 i k dom) (@lem6587696 A K i k dom _87020 h1)). Qed.
Lemma lem6587699 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1659 A K _87020 i k dom f.
Proof. exact (@lem6587698 A K i k dom _87020 h1 f). Qed.
Lemma lem6587700 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1659 A K _87020 i k dom f) = (term1651 A K _87020 i k dom f).
Proof. exact (eq_refl (term1659 A K _87020 i k dom f)). Qed.
Lemma lem6587701 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1651 A K _87020 i k dom f.
Proof. exact (EQ_MP (@lem6587700 A K _87020 i k dom f) (@lem6587699 A K i k dom f _87020 h1)). Qed.
Lemma lem6587702 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1660 A K _87020 i k dom f neut.
Proof. exact (@lem6587701 A K i k dom f _87020 h1 neut). Qed.
Lemma lem6587703 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1660 A K _87020 i k dom f neut) = ((term1608 A K i k dom f neut) = (_87020 i k dom f neut)).
Proof. exact (eq_refl (term1660 A K _87020 i k dom f neut)). Qed.
Lemma lem6587706 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (EQ_MP (@lem6587703 A K _87020 i k dom f neut) (@lem6587702 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587707 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (@lem6587706 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587708 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6587709 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1661 A K i k dom f neut) = (term1650 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587708 K) (@lem6587707 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587710 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6587711 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : ((term1608 A K i k dom f neut) = i) = ((_87020 i k dom f neut) = i).
Proof. exact (MK_COMB (@lem6587709 A K i k dom f neut _87020 h1) (@lem6587710 K i)). Qed.
Lemma lem6587712 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6587713 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1662 A K k dom f neut i) = (term1663 A K _87020 k dom f neut i).
Proof. exact (MK_COMB (@lem6587712) (@lem6587711 A K k dom f neut i _87020 h1)). Qed.
Lemma lem6587715 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (EQ_MP (@lem6587703 A K _87020 i k dom f neut) (@lem6587702 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587716 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (@lem6587715 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587717 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6587718 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1664 A K i k dom f neut) = (term1665 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587717 K k) (@lem6587716 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587719 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1666 A K i k dom f neut) = (term1667 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587713 A K k dom f neut i _87020 h1) (@lem6587718 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587720 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587721 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1668 A K i k dom f neut) = (term1669 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587720) (@lem6587719 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587723 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (EQ_MP (@lem6587703 A K _87020 i k dom f neut) (@lem6587702 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587724 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (@lem6587723 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587725 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6587726 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1670 A K i k dom f neut) = (term1671 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587725 A K f) (@lem6587724 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587727 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6587728 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1672 A K i k dom f neut) = (term1673 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587727 A dom) (@lem6587726 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587729 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6587730 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1674 A K i k dom f neut) = (term1675 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587729) (@lem6587728 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587732 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (EQ_MP (@lem6587703 A K _87020 i k dom f neut) (@lem6587702 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587733 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (@lem6587732 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587734 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6587735 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1670 A K i k dom f neut) = (term1671 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587734 A K f) (@lem6587733 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587736 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6587737 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1676 A K i k dom f neut) = (term1677 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587736 A) (@lem6587735 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587738 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6587739 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : ((term1670 A K i k dom f neut) = neut) = ((term1671 A K _87020 i k dom f neut) = neut).
Proof. exact (MK_COMB (@lem6587737 A K i k dom f neut _87020 h1) (@lem6587738 A neut)). Qed.
Lemma lem6587740 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587741 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1678 A K i k dom f neut) = (term1679 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587740) (@lem6587739 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587742 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1680 A K i k dom f neut) = (term1681 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587730 A K i k dom f neut _87020 h1) (@lem6587741 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587743 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1621 A K i k dom f neut) = (term1682 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587721 A K i k dom f neut _87020 h1) (@lem6587742 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587744 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term1411 A K i k dom f x neut) = (term1411 A K i k dom f x neut).
Proof. exact (eq_refl (term1411 A K i k dom f x neut)). Qed.
Lemma lem6587745 {A K : Type'} (x : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1625 A K x i k dom f neut) = (term1683 A K x _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587744 A K i k dom f x neut) (@lem6587743 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587746 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1627 A K i k dom f neut) = (term1684 A K _87020 i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6587745 A K x i k dom f neut _87020 h1)). Qed.
Lemma lem6587747 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587748 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1628 A K i k dom f neut) = (term1685 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587747 K) (@lem6587746 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587749 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1686 A K i k dom f) = (term1687 A K _87020 i k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6587748 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587750 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6587751 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1629 A K i k dom f) = (term1688 A K _87020 i k dom f).
Proof. exact (MK_COMB (@lem6587750 A) (@lem6587749 A K i k dom f _87020 h1)). Qed.
Lemma lem6587752 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1689 A K i k dom) = (term1690 A K _87020 i k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6587751 A K i k dom f _87020 h1)). Qed.
Lemma lem6587753 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6587754 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1630 A K i k dom) = (term1691 A K _87020 i k dom).
Proof. exact (MK_COMB (@lem6587753 A K) (@lem6587752 A K i k dom _87020 h1)). Qed.
Lemma lem6587755 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1692 A K i k) = (term1693 A K _87020 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6587754 A K i k dom _87020 h1)). Qed.
Lemma lem6587756 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6587757 {A K : Type'} (i : K) (k : K -> Prop) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1631 A K i k) = (term1694 A K _87020 i k).
Proof. exact (MK_COMB (@lem6587756 A) (@lem6587755 A K i k _87020 h1)). Qed.
Lemma lem6587758 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1695 A K i) = (term1696 A K _87020 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6587757 A K i k _87020 h1)). Qed.
Lemma lem6587759 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6587760 {A K : Type'} (i : K) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1632 A K i) = (term1697 A K _87020 i).
Proof. exact (MK_COMB (@lem6587759 K) (@lem6587758 A K i _87020 h1)). Qed.
Lemma lem6587761 {A K : Type'} (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1698 A K) = (term1699 A K _87020).
Proof. exact (fun_ext (fun i : K => @lem6587760 A K i _87020 h1)). Qed.
Lemma lem6587762 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587763 {A K : Type'} (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1633 A K) = (term1700 A K _87020).
Proof. exact (MK_COMB (@lem6587762 K) (@lem6587761 A K _87020 h1)). Qed.
Lemma lem6587764 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587765 {A K : Type'} (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1701 A K) = (term1702 A K _87020).
Proof. exact (MK_COMB (@lem6587764) (@lem6587763 A K _87020 h1)). Qed.
Lemma lem6587767 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (EQ_MP (@lem6587703 A K _87020 i k dom f neut) (@lem6587702 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587768 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1608 A K i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (@lem6587767 A K i k dom f neut _87020 h1). Qed.
Lemma lem6587769 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1606 A K op ltle i k dom neut f) = (term1606 A K op ltle i k dom neut f).
Proof. exact (eq_refl (term1606 A K op ltle i k dom neut f)). Qed.
Lemma lem6587770 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1609 A K op ltle i k dom f neut) = (term1703 A K op ltle _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587769 A K op ltle i k dom neut f) (@lem6587768 A K i k dom f neut _87020 h1)). Qed.
Lemma lem6587771 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6587772 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1611 A K op ltle i k dom f neut) = (term1704 A K op ltle _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6587771 A) (@lem6587770 A K op ltle i k dom f neut _87020 h1)). Qed.
Lemma lem6587773 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6587774 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : ((term1609 A K op ltle i k dom f neut) = (term493 A K i dom neut op ltle k f)) = ((term1703 A K op ltle _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6587772 A K op ltle i k dom f neut _87020 h1) (@lem6587773 A K i dom neut op ltle k f)). Qed.
Lemma lem6587775 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1574 A K ltle k dom f neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (eq_refl (term1574 A K ltle k dom f neut i)). Qed.
Lemma lem6587776 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1613 A K i dom neut op ltle k f) = (term1705 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587775 A K ltle k dom f neut i) (@lem6587774 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587777 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1275 A K ltle i k dom f neut) = (term1275 A K ltle i k dom f neut).
Proof. exact (eq_refl (term1275 A K ltle i k dom f neut)). Qed.
Lemma lem6587778 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1615 A K i dom neut op ltle k f) = (term1706 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587777 A K ltle i k dom f neut) (@lem6587776 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587779 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6587780 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1617 A K i dom neut op ltle k f) = (term1707 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587779) (@lem6587778 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587781 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6587782 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1708 A K i dom neut op ltle k f) = (term1709 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587781) (@lem6587780 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587783 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem6587784 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1616 A K i dom neut op ltle k f) = (term1710 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587782 A K i dom neut op ltle k f _87020 h1) (@lem6587783)). Qed.
Lemma lem6587785 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1634 A K i dom neut op ltle k f) = (term1711 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587765 A K _87020 h1) (@lem6587784 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587786 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1712 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587787 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1713 A K i dom neut op ltle k f _87020.
Proof. exact (@lem6587786 A K i dom neut op ltle k f h1 _87020). Qed.
Lemma lem6587788 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1713 A K i dom neut op ltle k f _87020) = (term1711 A K _87020 i dom neut op ltle k f).
Proof. exact (eq_refl (term1713 A K i dom neut op ltle k f _87020)). Qed.
Lemma lem6587789 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1711 A K _87020 i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6587788 A K _87020 i dom neut op ltle k f) (@lem6587787 A K _87020 i dom neut op ltle k f h1)). Qed.
Lemma lem6587790 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : (term1711 A K _87020 i dom neut op ltle k f) = (term1634 A K i dom neut op ltle k f).
Proof. exact (SYM (@lem6587785 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587791 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : term1712 A K i dom neut op ltle k f) (h2 : _87020 = (term1636 A K)) : term1634 A K i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6587790 A K i dom neut op ltle k f _87020 h2) (@lem6587789 A K _87020 i dom neut op ltle k f h1)). Qed.
Lemma lem6587792 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1714 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1712 A K i dom neut op ltle k f => @lem6587791 A K i dom neut op ltle k f _87020 h0 h1). Qed.
Lemma lem6587793 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1715 A K i dom neut op ltle k f.
Proof. exact (@lem51 (term1634 A K i dom neut op ltle k f) (term1712 A K i dom neut op ltle k f) (term1616 A K i dom neut op ltle k f)). Qed.
Lemma lem6587794 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1716 A K i dom neut op ltle k f.
Proof. exact (@lem6587793 A K i dom neut op ltle k f (@lem6587792 A K i dom neut op ltle k f _87020 h1)). Qed.
Lemma lem6587795 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87020 : type1452 A K) (h1 : _87020 = (term1636 A K)) : term1717 A K i dom neut op ltle k f.
Proof. exact (@lem6587794 A K i dom neut op ltle k f _87020 h1 (@lem6587652 A K i dom neut op ltle k f)). Qed.
Lemma lem6587796 {A K : Type'} : (term1636 A K) = (term1636 A K).
Proof. exact (eq_refl (term1636 A K)). Qed.
Lemma lem6587797 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1718 A K _87020 i dom neut op ltle k f.
Proof. exact (fun h0 : _87020 = (term1636 A K) => @lem6587795 A K i dom neut op ltle k f _87020 h0). Qed.
Lemma lem6587798 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1719 A K i dom neut op ltle k f.
Proof. exact (@lem6587797 A K (term1636 A K) i dom neut op ltle k f). Qed.
Lemma lem6587799 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1717 A K i dom neut op ltle k f.
Proof. exact (@lem6587798 A K i dom neut op ltle k f (@lem6587796 A K)). Qed.
Lemma lem6587800 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1712 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587801 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1720 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1712 A K i dom neut op ltle k f => @lem6587800 A K i dom neut op ltle k f h0). Qed.
Lemma lem6587802 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1721 A K i dom neut op ltle k f.
Proof. exact (@lem51 (term1712 A K i dom neut op ltle k f) (term1712 A K i dom neut op ltle k f) (term1616 A K i dom neut op ltle k f)). Qed.
Lemma lem6587803 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1722 A K i dom neut op ltle k f.
Proof. exact (@lem6587802 A K i dom neut op ltle k f (@lem6587801 A K i dom neut op ltle k f)). Qed.
Lemma lem6587804 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1717 A K i dom neut op ltle k f.
Proof. exact (@lem6587803 A K i dom neut op ltle k f (@lem6587799 A K i dom neut op ltle k f)). Qed.
Lemma lem6587805 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1717 A K i dom neut op ltle k f) : term1717 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587806 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1712 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587807 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) (h2 : term1717 A K i dom neut op ltle k f) : term1616 A K i dom neut op ltle k f.
Proof. exact (@lem6587805 A K i dom neut op ltle k f h2 (@lem6587806 A K i dom neut op ltle k f h1)). Qed.
Lemma lem6587808 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) : term1723 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1717 A K i dom neut op ltle k f => @lem6587807 A K i dom neut op ltle k f h1 h0). Qed.
Lemma lem6587809 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1717 A K i dom neut op ltle k f) : term1717 A K i dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6587810 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1712 A K i dom neut op ltle k f) (h2 : term1717 A K i dom neut op ltle k f) : term1616 A K i dom neut op ltle k f.
Proof. exact (@lem6587808 A K i dom neut op ltle k f h1 (@lem6587809 A K i dom neut op ltle k f h2)). Qed.
Lemma lem6587811 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1717 A K i dom neut op ltle k f) : term1717 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1712 A K i dom neut op ltle k f => @lem6587810 A K i dom neut op ltle k f h0 h1). Qed.
Lemma lem6587812 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1722 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1717 A K i dom neut op ltle k f => @lem6587811 A K i dom neut op ltle k f h0). Qed.
Lemma lem6587815 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1717 A K i dom neut op ltle k f.
Proof. exact (@lem6587812 A K i dom neut op ltle k f (@lem6587804 A K i dom neut op ltle k f)). Qed.
Lemma lem6587816 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1717 A K i dom neut op ltle k f.
Proof. exact (@lem6587815 A K i dom neut op ltle k f). Qed.
Lemma lem6587890 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6587891 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1710 A K _87020 i dom neut op ltle k f) = (term1724 A K _87020 i dom neut op ltle k f).
Proof. exact (@lem6587890 (term1707 A K _87020 i dom neut op ltle k f)). Qed.
Lemma lem6587893 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6587894 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1724 A K _87020 i dom neut op ltle k f) = (term1706 A K _87020 i dom neut op ltle k f).
Proof. exact (@lem6587893 (term1706 A K _87020 i dom neut op ltle k f)). Qed.
Lemma lem6587897 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1710 A K _87020 i dom neut op ltle k f) = (term1706 A K _87020 i dom neut op ltle k f).
Proof. exact (TRANS (@lem6587891 A K _87020 i dom neut op ltle k f) (@lem6587894 A K _87020 i dom neut op ltle k f)). Qed.
Lemma lem6587970 {A K : Type'} (_87020 : type1452 A K) : (term1702 A K _87020) = (term1702 A K _87020).
Proof. exact (eq_refl (term1702 A K _87020)). Qed.
Lemma lem6587971 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1711 A K _87020 i dom neut op ltle k f) = (term1725 A K _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587970 A K _87020) (@lem6587897 A K _87020 i dom neut op ltle k f)). Qed.
Lemma lem6587974 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1726 A K i dom neut op ltle k f) = (term1727 A K i dom neut op ltle k f).
Proof. exact (fun_ext (fun _87020 : type1452 A K => @lem6587971 A K _87020 i dom neut op ltle k f)). Qed.
Lemma lem6587975 {A K : Type'} : (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)) = (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K))). Qed.
Lemma lem6587976 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1712 A K i dom neut op ltle k f) = (term1728 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587975 A K) (@lem6587974 A K i dom neut op ltle k f)). Qed.
Lemma lem6587981 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1729 A K dom neut op ltle k f) = (term1730 A K dom neut op ltle k f).
Proof. exact (fun_ext (fun i : K => @lem6587976 A K i dom neut op ltle k f)). Qed.
Lemma lem6587982 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6587983 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1731 A K dom neut op ltle k f) = (term1732 A K dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6587982 K) (@lem6587981 A K dom neut op ltle k f)). Qed.
Lemma lem6587988 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1733 A K neut op ltle k f) = (term1734 A K neut op ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6587983 A K dom neut op ltle k f)). Qed.
Lemma lem6587989 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6587990 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1735 A K neut op ltle k f) = (term1736 A K neut op ltle k f).
Proof. exact (MK_COMB (@lem6587989 A) (@lem6587988 A K neut op ltle k f)). Qed.
Lemma lem6587995 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1737 A K op ltle k f) = (term1738 A K op ltle k f).
Proof. exact (fun_ext (fun neut : A => @lem6587990 A K neut op ltle k f)). Qed.
Lemma lem6587996 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6587997 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1739 A K op ltle k f) = (term1740 A K op ltle k f).
Proof. exact (MK_COMB (@lem6587996 A) (@lem6587995 A K op ltle k f)). Qed.
Lemma lem6588002 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1741 A K ltle k f) = (term1742 A K ltle k f).
Proof. exact (fun_ext (fun op : type1400 A => @lem6587997 A K op ltle k f)). Qed.
Lemma lem6588003 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6588004 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1743 A K ltle k f) = (term1744 A K ltle k f).
Proof. exact (MK_COMB (@lem6588003 A) (@lem6588002 A K ltle k f)). Qed.
Lemma lem6588009 {A K : Type'} (k : K -> Prop) (f : K -> A) : (term1745 A K k f) = (term1746 A K k f).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6588004 A K ltle k f)). Qed.
Lemma lem6588010 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6588011 {A K : Type'} (k : K -> Prop) (f : K -> A) : (term1747 A K k f) = (term1748 A K k f).
Proof. exact (MK_COMB (@lem6588010 K) (@lem6588009 A K k f)). Qed.
Lemma lem6588016 {A K : Type'} (f : K -> A) : (term1749 A K f) = (term1750 A K f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588011 A K k f)). Qed.
Lemma lem6588017 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6588018 {A K : Type'} (f : K -> A) : (term1751 A K f) = (term1752 A K f).
Proof. exact (MK_COMB (@lem6588017 K) (@lem6588016 A K f)). Qed.
Lemma lem6588023 {A K : Type'} : (term1753 A K) = (term1754 A K).
Proof. exact (fun_ext (fun f : K -> A => @lem6588018 A K f)). Qed.
Lemma lem6588024 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6588031 {A K : Type'} : (term1755 A K) = (term1756 A K).
Proof. exact (MK_COMB (@lem6588024 A K) (@lem6588023 A K)). Qed.
Lemma lem6588032 {A K : Type'} (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : _87021 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6588033 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6588034 {A K : Type'} (k : K -> Prop) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6588032 A K _87021 h1) (@lem6588033 K k)). Qed.
Lemma lem6588035 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6588036 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term709 A K _87021 k) = (term709 A K _87021 k).
Proof. exact (eq_refl (term709 A K _87021 k)). Qed.
Lemma lem6588037 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term707 A K k)) = ((_87021 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6588036 A K _87021 k) (@lem6588035 A K k)). Qed.
Lemma lem6588038 {A K : Type'} (k : K -> Prop) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6588037 A K _87021 k) (@lem6588034 A K k _87021 h1)). Qed.
Lemma lem6588039 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6588040 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6588038 A K k _87021 h1) (@lem6588039 A dom)). Qed.
Lemma lem6588041 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6588042 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87021 k dom) = (term712 A K _87021 k dom).
Proof. exact (eq_refl (term712 A K _87021 k dom)). Qed.
Lemma lem6588043 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term710 A K k dom)) = ((_87021 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6588042 A K _87021 k dom) (@lem6588041 A K k dom)). Qed.
Lemma lem6588044 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6588043 A K _87021 k dom) (@lem6588040 A K k dom _87021 h1)). Qed.
Lemma lem6588045 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6588046 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6588044 A K k dom _87021 h1) (@lem6588045 A K f)). Qed.
Lemma lem6588047 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6588048 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87021 k dom f) = (term715 A K _87021 k dom f).
Proof. exact (eq_refl (term715 A K _87021 k dom f)). Qed.
Lemma lem6588049 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term713 A K k dom f)) = ((_87021 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6588048 A K _87021 k dom f) (@lem6588047 A K k dom f)). Qed.
Lemma lem6588050 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6588049 A K _87021 k dom f) (@lem6588046 A K k dom f _87021 h1)). Qed.
Lemma lem6588051 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6588052 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6588050 A K k dom f _87021 h1) (@lem6588051 A neut)). Qed.
Lemma lem6588053 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6588054 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87021 k dom f neut) = (term717 A K _87021 k dom f neut).
Proof. exact (eq_refl (term717 A K _87021 k dom f neut)). Qed.
Lemma lem6588055 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term716 A K k dom f neut)) = ((_87021 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6588054 A K _87021 k dom f neut) (@lem6588053 A K k dom f neut)). Qed.
Lemma lem6588056 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (_87021 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6588055 A K _87021 k dom f neut) (@lem6588052 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588076 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6588087 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87020 i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (eq_refl (_87020 i k dom f neut)). Qed.
Lemma lem6588088 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6588090 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term631 A K k dom f neut) = (_87021 k dom f neut).
Proof. exact (SYM (@lem6588056 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588091 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term631 A K k dom f neut) = (_87021 k dom f neut).
Proof. exact (@lem6588090 A K k dom f neut _87021 h1). Qed.
Lemma lem6588092 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1757 A K i k i' dom f neut) = (term1758 A K _87021 i k i' dom f neut).
Proof. exact (@lem6588091 A K (term1759 K i k i') dom f neut _87021 h1). Qed.
Lemma lem6588093 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1760 K i k i' j) = (term1577 K i k j i').
Proof. exact (eq_refl (term1760 K i k i' j)). Qed.
Lemma lem6588094 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6588095 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1761 K i k i' j) = (term1579 K i k j i').
Proof. exact (MK_COMB (@lem6588094) (@lem6588093 K i k j i')). Qed.
Lemma lem6588096 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term595 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (eq_refl (term595 A K dom f j neut)). Qed.
Lemma lem6588097 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1762 A K i k i' dom f j neut) = (term1581 A K i k i' dom f j neut).
Proof. exact (MK_COMB (@lem6588095 K i k j i') (@lem6588096 A K dom f j neut)). Qed.
Lemma lem6588098 {K : Type'} (GEN_PVAR_265 : K) : (@SETSPEC K GEN_PVAR_265) = (@SETSPEC K GEN_PVAR_265).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_265)). Qed.
Lemma lem6588099 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1763 A K GEN_PVAR_265 i k i' dom f j neut) = (term1583 A K GEN_PVAR_265 i k i' dom f j neut).
Proof. exact (MK_COMB (@lem6588098 K GEN_PVAR_265) (@lem6588097 A K i k i' dom f j neut)). Qed.
Lemma lem6588100 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6588101 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term1764 A K GEN_PVAR_265 i k i' dom f neut j) = (term1585 A K GEN_PVAR_265 i k i' dom f neut j).
Proof. exact (MK_COMB (@lem6588099 A K GEN_PVAR_265 i k i' dom f j neut) (@lem6588100 K j)). Qed.
Lemma lem6588102 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1765 A K GEN_PVAR_265 i k i' dom f neut) = (term1587 A K GEN_PVAR_265 i k i' dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6588101 A K GEN_PVAR_265 i k i' dom f neut j)). Qed.
Lemma lem6588103 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6588104 {A K : Type'} (GEN_PVAR_265 : K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1766 A K GEN_PVAR_265 i k i' dom f neut) = (term1589 A K GEN_PVAR_265 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6588103 K) (@lem6588102 A K GEN_PVAR_265 i k i' dom f neut)). Qed.
Lemma lem6588105 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1757 A K i k i' dom f neut) = (term1591 A K i k i' dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_265 : K => @lem6588104 A K GEN_PVAR_265 i k i' dom f neut)). Qed.
Lemma lem6588106 {K : Type'} : (@eq (K -> Prop)) = (@eq (K -> Prop)).
Proof. exact (eq_refl (@eq (K -> Prop))). Qed.
Lemma lem6588107 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1767 A K i k i' dom f neut) = (term1768 A K i k i' dom f neut).
Proof. exact (MK_COMB (@lem6588106 K) (@lem6588105 A K i k i' dom f neut)). Qed.
Lemma lem6588108 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1758 A K _87021 i k i' dom f neut) = (term1758 A K _87021 i k i' dom f neut).
Proof. exact (eq_refl (term1758 A K _87021 i k i' dom f neut)). Qed.
Lemma lem6588109 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term1757 A K i k i' dom f neut) = (term1758 A K _87021 i k i' dom f neut)) = ((term1591 A K i k i' dom f neut) = (term1758 A K _87021 i k i' dom f neut)).
Proof. exact (MK_COMB (@lem6588107 A K i k i' dom f neut) (@lem6588108 A K _87021 i k i' dom f neut)). Qed.
Lemma lem6588110 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1591 A K i k i' dom f neut) = (term1758 A K _87021 i k i' dom f neut).
Proof. exact (EQ_MP (@lem6588109 A K _87021 i k i' dom f neut) (@lem6588092 A K i k i' dom f neut _87021 h1)). Qed.
Lemma lem6588111 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6588112 {A K : Type'} (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1593 A K i k i' dom f neut) = (term1769 A K _87021 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6588111 K) (@lem6588110 A K i k i' dom f neut _87021 h1)). Qed.
Lemma lem6588121 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6588122 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1595 A K op ltle i k i' dom f neut) = (term1770 A K op ltle _87021 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6588121 A K dom neut op ltle) (@lem6588112 A K i k i' dom f neut _87021 h1)). Qed.
Lemma lem6588123 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1597 A K op ltle i k i' dom neut f) = (term1771 A K op ltle _87021 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6588122 A K op ltle i k i' dom f neut _87021 h1) (@lem6588088 A K f)). Qed.
Lemma lem6588128 {A K : Type'} (op : type1400 A) (f : K -> A) (i' : K) : (term1598 A K op f i') = (term1598 A K op f i').
Proof. exact (eq_refl (term1598 A K op f i')). Qed.
Lemma lem6588129 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1600 A K op ltle i k i' dom neut f) = (term1772 A K op ltle _87021 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6588128 A K op f i') (@lem6588123 A K op ltle i k i' dom neut f _87021 h1)). Qed.
Lemma lem6588130 {A : Type'} : (@LET_END A) = (@LET_END A).
Proof. exact (eq_refl (@LET_END A)). Qed.
Lemma lem6588131 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1602 A K op ltle i k i' dom neut f) = (term1773 A K op ltle _87021 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6588130 A) (@lem6588129 A K op ltle i k i' dom neut f _87021 h1)). Qed.
Lemma lem6588132 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1604 A K op ltle i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6588131 A K op ltle i k i' dom neut f _87021 h1)). Qed.
Lemma lem6588133 {A K : Type'} : (@LET K A) = (@LET K A).
Proof. exact (eq_refl (@LET K A)). Qed.
Lemma lem6588134 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1606 A K op ltle i k dom neut f) = (term1775 A K op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6588133 A K) (@lem6588132 A K op ltle i k dom neut f _87021 h1)). Qed.
Lemma lem6588135 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1703 A K op ltle _87020 i k dom f neut) = (term1776 A K op ltle _87021 _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6588134 A K op ltle i k dom neut f _87021 h1) (@lem6588087 A K _87020 i k dom f neut)). Qed.
Lemma lem6588136 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6588137 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1704 A K op ltle _87020 i k dom f neut) = (term1777 A K op ltle _87021 _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6588136 A) (@lem6588135 A K op ltle _87020 i k dom f neut _87021 h1)). Qed.
Lemma lem6588138 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : ((term1703 A K op ltle _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)) = ((term1776 A K op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6588137 A K op ltle _87020 i k dom f neut _87021 h1) (@lem6588076 A K i dom neut op ltle k f)). Qed.
Lemma lem6588185 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1563 A K ltle k dom f neut j i) = (term1563 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j i)). Qed.
Lemma lem6588186 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6588185 A K ltle k dom f neut j i)). Qed.
Lemma lem6588187 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588188 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588187 K) (@lem6588186 A K ltle k dom f neut i)). Qed.
Lemma lem6588207 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6588208 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588207 A K dom f i neut) (@lem6588188 A K ltle k dom f neut i)). Qed.
Lemma lem6588209 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6588210 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term1572 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588209) (@lem6588208 A K ltle k dom f neut i)). Qed.
Lemma lem6588211 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588212 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1574 A K ltle k dom f neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588211) (@lem6588210 A K ltle k dom f neut i)). Qed.
Lemma lem6588213 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1705 A K _87020 i dom neut op ltle k f) = (term1778 A K _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588212 A K ltle k dom f neut i) (@lem6588138 A K _87020 i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588215 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term631 A K k dom f neut) = (_87021 k dom f neut).
Proof. exact (SYM (@lem6588056 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588216 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term631 A K k dom f neut) = (_87021 k dom f neut).
Proof. exact (@lem6588215 A K k dom f neut _87021 h1). Qed.
Lemma lem6588217 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6588218 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588217 K) (@lem6588216 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588219 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6588220 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588219 K) (@lem6588218 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588247 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6588248 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6588247 K k ltle j i)). Qed.
Lemma lem6588249 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588250 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6588249 K) (@lem6588248 K k ltle i)). Qed.
Lemma lem6588251 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6588252 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6588251) (@lem6588250 K k ltle i)). Qed.
Lemma lem6588253 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588252 K k ltle i) (@lem6588220 A K k dom f neut _87021 h1)). Qed.
Lemma lem6588292 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6588293 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6588292 A K ltle k dom f neut j i)). Qed.
Lemma lem6588294 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588295 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588294 K) (@lem6588293 A K ltle k dom f neut i)). Qed.
Lemma lem6588296 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6588297 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588296) (@lem6588295 A K ltle k dom f neut i)). Qed.
Lemma lem6588298 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588297 A K ltle k dom f neut i) (@lem6588253 A K ltle i k dom f neut _87021 h1)). Qed.
Lemma lem6588305 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6588306 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588305 K k i) (@lem6588298 A K ltle i k dom f neut _87021 h1)). Qed.
Lemma lem6588313 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6588314 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1272 A K ltle i k dom f neut) = (term1311 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588313 A K dom f i) (@lem6588306 A K ltle i k dom f neut _87021 h1)). Qed.
Lemma lem6588325 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6588326 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1274 A K ltle i k dom f neut) = (term1312 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588325 A K f i neut) (@lem6588314 A K ltle i k dom f neut _87021 h1)). Qed.
Lemma lem6588327 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588328 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1275 A K ltle i k dom f neut) = (term1313 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588327) (@lem6588326 A K ltle i k dom f neut _87021 h1)). Qed.
Lemma lem6588329 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1706 A K _87020 i dom neut op ltle k f) = (term1779 A K _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588328 A K ltle i k dom f neut _87021 h1) (@lem6588213 A K _87020 i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588434 {A K : Type'} (x : K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1683 A K x _87020 i k dom f neut) = (term1683 A K x _87020 i k dom f neut).
Proof. exact (eq_refl (term1683 A K x _87020 i k dom f neut)). Qed.
Lemma lem6588435 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1684 A K _87020 i k dom f neut) = (term1684 A K _87020 i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6588434 A K x _87020 i k dom f neut)). Qed.
Lemma lem6588436 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588437 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1685 A K _87020 i k dom f neut) = (term1685 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6588436 K) (@lem6588435 A K _87020 i k dom f neut)). Qed.
Lemma lem6588438 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1687 A K _87020 i k dom f) = (term1687 A K _87020 i k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6588437 A K _87020 i k dom f neut)). Qed.
Lemma lem6588439 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6588440 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1688 A K _87020 i k dom f) = (term1688 A K _87020 i k dom f).
Proof. exact (MK_COMB (@lem6588439 A) (@lem6588438 A K _87020 i k dom f)). Qed.
Lemma lem6588441 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1690 A K _87020 i k dom) = (term1690 A K _87020 i k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6588440 A K _87020 i k dom f)). Qed.
Lemma lem6588442 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6588443 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1691 A K _87020 i k dom) = (term1691 A K _87020 i k dom).
Proof. exact (MK_COMB (@lem6588442 A K) (@lem6588441 A K _87020 i k dom)). Qed.
Lemma lem6588444 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1693 A K _87020 i k) = (term1693 A K _87020 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6588443 A K _87020 i k dom)). Qed.
Lemma lem6588445 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6588446 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1694 A K _87020 i k) = (term1694 A K _87020 i k).
Proof. exact (MK_COMB (@lem6588445 A) (@lem6588444 A K _87020 i k)). Qed.
Lemma lem6588447 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1696 A K _87020 i) = (term1696 A K _87020 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588446 A K _87020 i k)). Qed.
Lemma lem6588448 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6588449 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1697 A K _87020 i) = (term1697 A K _87020 i).
Proof. exact (MK_COMB (@lem6588448 K) (@lem6588447 A K _87020 i)). Qed.
Lemma lem6588450 {A K : Type'} (_87020 : type1452 A K) : (term1699 A K _87020) = (term1699 A K _87020).
Proof. exact (fun_ext (fun i : K => @lem6588449 A K _87020 i)). Qed.
Lemma lem6588451 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588452 {A K : Type'} (_87020 : type1452 A K) : (term1700 A K _87020) = (term1700 A K _87020).
Proof. exact (MK_COMB (@lem6588451 K) (@lem6588450 A K _87020)). Qed.
Lemma lem6588453 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588454 {A K : Type'} (_87020 : type1452 A K) : (term1702 A K _87020) = (term1702 A K _87020).
Proof. exact (MK_COMB (@lem6588453) (@lem6588452 A K _87020)). Qed.
Lemma lem6588455 {A K : Type'} (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1725 A K _87020 i dom neut op ltle k f) = (term1780 A K _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588454 A K _87020) (@lem6588329 A K _87020 i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588456 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1727 A K i dom neut op ltle k f) = (term1781 A K _87021 i dom neut op ltle k f).
Proof. exact (fun_ext (fun _87020 : type1452 A K => @lem6588455 A K _87020 i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588457 {A K : Type'} : (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)) = (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K))). Qed.
Lemma lem6588458 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1728 A K i dom neut op ltle k f) = (term1782 A K _87021 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588457 A K) (@lem6588456 A K i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588459 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1730 A K dom neut op ltle k f) = (term1783 A K _87021 dom neut op ltle k f).
Proof. exact (fun_ext (fun i : K => @lem6588458 A K i dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588460 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588461 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1732 A K dom neut op ltle k f) = (term1784 A K _87021 dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588460 K) (@lem6588459 A K dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588462 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1734 A K neut op ltle k f) = (term1785 A K _87021 neut op ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6588461 A K dom neut op ltle k f _87021 h1)). Qed.
Lemma lem6588463 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6588464 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1736 A K neut op ltle k f) = (term1786 A K _87021 neut op ltle k f).
Proof. exact (MK_COMB (@lem6588463 A) (@lem6588462 A K neut op ltle k f _87021 h1)). Qed.
Lemma lem6588465 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1738 A K op ltle k f) = (term1787 A K _87021 op ltle k f).
Proof. exact (fun_ext (fun neut : A => @lem6588464 A K neut op ltle k f _87021 h1)). Qed.
Lemma lem6588466 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6588467 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1740 A K op ltle k f) = (term1788 A K _87021 op ltle k f).
Proof. exact (MK_COMB (@lem6588466 A) (@lem6588465 A K op ltle k f _87021 h1)). Qed.
Lemma lem6588468 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1742 A K ltle k f) = (term1789 A K _87021 ltle k f).
Proof. exact (fun_ext (fun op : type1400 A => @lem6588467 A K op ltle k f _87021 h1)). Qed.
Lemma lem6588469 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6588470 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1744 A K ltle k f) = (term1790 A K _87021 ltle k f).
Proof. exact (MK_COMB (@lem6588469 A) (@lem6588468 A K ltle k f _87021 h1)). Qed.
Lemma lem6588471 {A K : Type'} (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1746 A K k f) = (term1791 A K _87021 k f).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6588470 A K ltle k f _87021 h1)). Qed.
Lemma lem6588472 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6588473 {A K : Type'} (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1748 A K k f) = (term1792 A K _87021 k f).
Proof. exact (MK_COMB (@lem6588472 K) (@lem6588471 A K k f _87021 h1)). Qed.
Lemma lem6588474 {A K : Type'} (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1750 A K f) = (term1793 A K _87021 f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588473 A K k f _87021 h1)). Qed.
Lemma lem6588475 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6588476 {A K : Type'} (f : K -> A) (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1752 A K f) = (term1794 A K _87021 f).
Proof. exact (MK_COMB (@lem6588475 K) (@lem6588474 A K f _87021 h1)). Qed.
Lemma lem6588477 {A K : Type'} (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1754 A K) = (term1795 A K _87021).
Proof. exact (fun_ext (fun f : K -> A => @lem6588476 A K f _87021 h1)). Qed.
Lemma lem6588478 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6588479 {A K : Type'} (_87021 : type835 A K) (h1 : _87021 = (term706 A K)) : (term1756 A K) = (term1796 A K _87021).
Proof. exact (MK_COMB (@lem6588478 A K) (@lem6588477 A K _87021 h1)). Qed.
Lemma lem6588480 {A K : Type'} (_87021 : type835 A K) : term1797 A K _87021.
Proof. exact (fun h0 : _87021 = (term706 A K) => @lem6588479 A K _87021 h0). Qed.
Lemma lem6588481 {A K : Type'} : term1798 A K.
Proof. exact (fun _87021 : type835 A K => @lem6588480 A K _87021). Qed.
Lemma lem6588483 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6588484 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6588483 (type835 A K) P c Q). Qed.
Lemma lem6588485 {A K : Type'} : term1799 A K.
Proof. exact (@lem6588484 A K (term1756 A K) (term706 A K) (term1800 A K)). Qed.
Lemma lem6588486 {A K : Type'} (_87021 : type835 A K) : (term1801 A K _87021) = (term1796 A K _87021).
Proof. exact (eq_refl (term1801 A K _87021)). Qed.
Lemma lem6588487 {A K : Type'} : (term1802 A K) = (term1802 A K).
Proof. exact (eq_refl (term1802 A K)). Qed.
Lemma lem6588488 {A K : Type'} (_87021 : type835 A K) : ((term1756 A K) = (term1801 A K _87021)) = ((term1756 A K) = (term1796 A K _87021)).
Proof. exact (MK_COMB (@lem6588487 A K) (@lem6588486 A K _87021)). Qed.
Lemma lem6588489 {A K : Type'} (_87021 : type835 A K) : (term746 A K _87021) = (term746 A K _87021).
Proof. exact (eq_refl (term746 A K _87021)). Qed.
Lemma lem6588490 {A K : Type'} (_87021 : type835 A K) : (term1803 A K _87021) = (term1797 A K _87021).
Proof. exact (MK_COMB (@lem6588489 A K _87021) (@lem6588488 A K _87021)). Qed.
Lemma lem6588491 {A K : Type'} : (term1804 A K) = (term1805 A K).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6588490 A K _87021)). Qed.
Lemma lem6588492 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6588493 {A K : Type'} : (term1806 A K) = (term1798 A K).
Proof. exact (MK_COMB (@lem6588492 A K) (@lem6588491 A K)). Qed.
Lemma lem6588494 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588495 {A K : Type'} : (term1807 A K) = (term1808 A K).
Proof. exact (MK_COMB (@lem6588494) (@lem6588493 A K)). Qed.
Lemma lem6588496 {A K : Type'} (_87021 : type835 A K) : (term1801 A K _87021) = (term1796 A K _87021).
Proof. exact (eq_refl (term1801 A K _87021)). Qed.
Lemma lem6588497 {A K : Type'} (_87021 : type835 A K) : (term746 A K _87021) = (term746 A K _87021).
Proof. exact (eq_refl (term746 A K _87021)). Qed.
Lemma lem6588498 {A K : Type'} (_87021 : type835 A K) : (term1809 A K _87021) = (term1810 A K _87021).
Proof. exact (MK_COMB (@lem6588497 A K _87021) (@lem6588496 A K _87021)). Qed.
Lemma lem6588499 {A K : Type'} : (term1811 A K) = (term1812 A K).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6588498 A K _87021)). Qed.
Lemma lem6588500 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6588501 {A K : Type'} : (term1813 A K) = (term1814 A K).
Proof. exact (MK_COMB (@lem6588500 A K) (@lem6588499 A K)). Qed.
Lemma lem6588502 {A K : Type'} : (term1802 A K) = (term1802 A K).
Proof. exact (eq_refl (term1802 A K)). Qed.
Lemma lem6588503 {A K : Type'} : ((term1756 A K) = (term1813 A K)) = ((term1756 A K) = (term1814 A K)).
Proof. exact (MK_COMB (@lem6588502 A K) (@lem6588501 A K)). Qed.
Lemma lem6588504 {A K : Type'} : (term1799 A K) = (term1815 A K).
Proof. exact (MK_COMB (@lem6588495 A K) (@lem6588503 A K)). Qed.
Lemma lem6588505 {A K : Type'} : term1815 A K.
Proof. exact (EQ_MP (@lem6588504 A K) (@lem6588485 A K)). Qed.
Lemma lem6588506 {A K : Type'} : (term1756 A K) = (term1814 A K).
Proof. exact (@lem6588505 A K (@lem6588481 A K)). Qed.
Lemma lem6588508 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6588509 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6588508 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6588510 {A K : Type'} (_87021 : type835 A K) : (_87021 = (term764 A K)) = (term765 A K _87021).
Proof. exact (@lem6588509 A K _87021 (term706 A K)). Qed.
Lemma lem6588511 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6588512 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588511 A K k)). Qed.
Lemma lem6588513 {A K : Type'} (_87021 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021)). Qed.
Lemma lem6588514 {A K : Type'} (_87021 : type835 A K) : (_87021 = (term764 A K)) = (_87021 = (term706 A K)).
Proof. exact (MK_COMB (@lem6588513 A K _87021) (@lem6588512 A K)). Qed.
Lemma lem6588515 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6588516 {A K : Type'} (_87021 : type835 A K) : (term766 A K _87021) = (term767 A K _87021).
Proof. exact (MK_COMB (@lem6588515) (@lem6588514 A K _87021)). Qed.
Lemma lem6588517 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6588518 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term709 A K _87021 k) = (term709 A K _87021 k).
Proof. exact (eq_refl (term709 A K _87021 k)). Qed.
Lemma lem6588519 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term707 A K k)) = ((_87021 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6588518 A K _87021 k) (@lem6588517 A K k)). Qed.
Lemma lem6588520 {A K : Type'} (_87021 : type835 A K) : (term768 A K _87021) = (term769 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588519 A K _87021 k)). Qed.
Lemma lem6588521 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6588522 {A K : Type'} (_87021 : type835 A K) : (term765 A K _87021) = (term770 A K _87021).
Proof. exact (MK_COMB (@lem6588521 K) (@lem6588520 A K _87021)). Qed.
Lemma lem6588523 {A K : Type'} (_87021 : type835 A K) : ((_87021 = (term764 A K)) = (term765 A K _87021)) = ((_87021 = (term706 A K)) = (term770 A K _87021)).
Proof. exact (MK_COMB (@lem6588516 A K _87021) (@lem6588522 A K _87021)). Qed.
Lemma lem6588524 {A K : Type'} (_87021 : type835 A K) : (_87021 = (term706 A K)) = (term770 A K _87021).
Proof. exact (EQ_MP (@lem6588523 A K _87021) (@lem6588510 A K _87021)). Qed.
Lemma lem6588526 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6588527 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6588526 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6588528 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term773 A K k)) = (term774 A K _87021 k).
Proof. exact (@lem6588527 A K (_87021 k) (term708 A K k)). Qed.
Lemma lem6588529 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6588530 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6588529 A K k dom)). Qed.
Lemma lem6588531 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term709 A K _87021 k) = (term709 A K _87021 k).
Proof. exact (eq_refl (term709 A K _87021 k)). Qed.
Lemma lem6588532 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term773 A K k)) = ((_87021 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6588531 A K _87021 k) (@lem6588530 A K k)). Qed.
Lemma lem6588533 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6588534 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term775 A K _87021 k) = (term776 A K _87021 k).
Proof. exact (MK_COMB (@lem6588533) (@lem6588532 A K _87021 k)). Qed.
Lemma lem6588535 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6588536 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87021 k dom) = (term712 A K _87021 k dom).
Proof. exact (eq_refl (term712 A K _87021 k dom)). Qed.
Lemma lem6588537 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term710 A K k dom)) = ((_87021 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6588536 A K _87021 k dom) (@lem6588535 A K k dom)). Qed.
Lemma lem6588538 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term777 A K _87021 k) = (term778 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6588537 A K _87021 k dom)). Qed.
Lemma lem6588539 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6588540 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term774 A K _87021 k) = (term779 A K _87021 k).
Proof. exact (MK_COMB (@lem6588539 A) (@lem6588538 A K _87021 k)). Qed.
Lemma lem6588541 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (((_87021 k) = (term773 A K k)) = (term774 A K _87021 k)) = (((_87021 k) = (term708 A K k)) = (term779 A K _87021 k)).
Proof. exact (MK_COMB (@lem6588534 A K _87021 k) (@lem6588540 A K _87021 k)). Qed.
Lemma lem6588542 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term708 A K k)) = (term779 A K _87021 k).
Proof. exact (EQ_MP (@lem6588541 A K _87021 k) (@lem6588528 A K _87021 k)). Qed.
Lemma lem6588544 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6588545 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6588544 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6588546 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term782 A K k dom)) = (term783 A K _87021 k dom).
Proof. exact (@lem6588545 A K (_87021 k dom) (term711 A K k dom)). Qed.
Lemma lem6588547 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6588548 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6588547 A K k dom f)). Qed.
Lemma lem6588549 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87021 k dom) = (term712 A K _87021 k dom).
Proof. exact (eq_refl (term712 A K _87021 k dom)). Qed.
Lemma lem6588550 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term782 A K k dom)) = ((_87021 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6588549 A K _87021 k dom) (@lem6588548 A K k dom)). Qed.
Lemma lem6588551 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6588552 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _87021 k dom) = (term785 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6588551) (@lem6588550 A K _87021 k dom)). Qed.
Lemma lem6588553 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6588554 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87021 k dom f) = (term715 A K _87021 k dom f).
Proof. exact (eq_refl (term715 A K _87021 k dom f)). Qed.
Lemma lem6588555 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term713 A K k dom f)) = ((_87021 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6588554 A K _87021 k dom f) (@lem6588553 A K k dom f)). Qed.
Lemma lem6588556 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _87021 k dom) = (term787 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6588555 A K _87021 k dom f)). Qed.
Lemma lem6588557 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6588558 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _87021 k dom) = (term788 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6588557 A K) (@lem6588556 A K _87021 k dom)). Qed.
Lemma lem6588559 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_87021 k dom) = (term782 A K k dom)) = (term783 A K _87021 k dom)) = (((_87021 k dom) = (term711 A K k dom)) = (term788 A K _87021 k dom)).
Proof. exact (MK_COMB (@lem6588552 A K _87021 k dom) (@lem6588558 A K _87021 k dom)). Qed.
Lemma lem6588560 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term711 A K k dom)) = (term788 A K _87021 k dom).
Proof. exact (EQ_MP (@lem6588559 A K _87021 k dom) (@lem6588546 A K _87021 k dom)). Qed.
Lemma lem6588562 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6588563 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6588562 (K -> Prop) A s t). Qed.
Lemma lem6588564 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term791 A K k dom f)) = (term792 A K _87021 k dom f).
Proof. exact (@lem6588563 A K (_87021 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6588565 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6588566 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6588565 A K k dom f neut)). Qed.
Lemma lem6588567 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87021 k dom f) = (term715 A K _87021 k dom f).
Proof. exact (eq_refl (term715 A K _87021 k dom f)). Qed.
Lemma lem6588568 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term791 A K k dom f)) = ((_87021 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6588567 A K _87021 k dom f) (@lem6588566 A K k dom f)). Qed.
Lemma lem6588569 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6588570 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _87021 k dom f) = (term794 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6588569) (@lem6588568 A K _87021 k dom f)). Qed.
Lemma lem6588571 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6588572 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87021 k dom f neut) = (term717 A K _87021 k dom f neut).
Proof. exact (eq_refl (term717 A K _87021 k dom f neut)). Qed.
Lemma lem6588573 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term716 A K k dom f neut)) = ((_87021 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6588572 A K _87021 k dom f neut) (@lem6588571 A K k dom f neut)). Qed.
Lemma lem6588574 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _87021 k dom f) = (term796 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6588573 A K _87021 k dom f neut)). Qed.
Lemma lem6588575 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6588576 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _87021 k dom f) = (term797 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6588575 A) (@lem6588574 A K _87021 k dom f)). Qed.
Lemma lem6588577 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_87021 k dom f) = (term791 A K k dom f)) = (term792 A K _87021 k dom f)) = (((_87021 k dom f) = (term714 A K k dom f)) = (term797 A K _87021 k dom f)).
Proof. exact (MK_COMB (@lem6588570 A K _87021 k dom f) (@lem6588576 A K _87021 k dom f)). Qed.
Lemma lem6588578 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term714 A K k dom f)) = (term797 A K _87021 k dom f).
Proof. exact (EQ_MP (@lem6588577 A K _87021 k dom f) (@lem6588564 A K _87021 k dom f)). Qed.
Lemma lem6588580 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6588581 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6588580 Prop K s t). Qed.
Lemma lem6588582 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _87021 k dom f neut).
Proof. exact (@lem6588581 K (_87021 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6588583 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6588584 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6588583 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6588585 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87021 k dom f neut) = (term717 A K _87021 k dom f neut).
Proof. exact (eq_refl (term717 A K _87021 k dom f neut)). Qed.
Lemma lem6588586 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term799 A K k dom f neut)) = ((_87021 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6588585 A K _87021 k dom f neut) (@lem6588584 A K k dom f neut)). Qed.
Lemma lem6588587 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6588588 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _87021 k dom f neut) = (term803 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588587) (@lem6588586 A K _87021 k dom f neut)). Qed.
Lemma lem6588589 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6588590 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87021 k dom f neut GEN_PVAR_272) = (term804 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6588591 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6588590 A K _87021 k dom f neut GEN_PVAR_272) (@lem6588589 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6588592 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _87021 k dom f neut) = (term806 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6588591 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6588593 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588594 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _87021 k dom f neut) = (term807 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588593 K) (@lem6588592 A K _87021 k dom f neut)). Qed.
Lemma lem6588595 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_87021 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _87021 k dom f neut)) = (((_87021 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87021 k dom f neut)).
Proof. exact (MK_COMB (@lem6588588 A K _87021 k dom f neut) (@lem6588594 A K _87021 k dom f neut)). Qed.
Lemma lem6588596 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87021 k dom f neut).
Proof. exact (EQ_MP (@lem6588595 A K _87021 k dom f neut) (@lem6588582 A K _87021 k dom f neut)). Qed.
Lemma lem6588597 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6588598 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87021 k dom f neut) = (term806 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6588597 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6588599 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588600 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87021 k dom f neut) = (term807 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588599 K) (@lem6588598 A K _87021 k dom f neut)). Qed.
Lemma lem6588601 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87021 k dom f neut).
Proof. exact (TRANS (@lem6588596 A K _87021 k dom f neut) (@lem6588600 A K _87021 k dom f neut)). Qed.
Lemma lem6588602 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _87021 k dom f) = (term808 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6588601 A K _87021 k dom f neut)). Qed.
Lemma lem6588603 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6588604 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _87021 k dom f) = (term809 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6588603 A) (@lem6588602 A K _87021 k dom f)). Qed.
Lemma lem6588605 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87021 k dom f) = (term714 A K k dom f)) = (term809 A K _87021 k dom f).
Proof. exact (TRANS (@lem6588578 A K _87021 k dom f) (@lem6588604 A K _87021 k dom f)). Qed.
Lemma lem6588606 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _87021 k dom) = (term810 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6588605 A K _87021 k dom f)). Qed.
Lemma lem6588607 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6588608 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _87021 k dom) = (term811 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6588607 A K) (@lem6588606 A K _87021 k dom)). Qed.
Lemma lem6588609 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87021 k dom) = (term711 A K k dom)) = (term811 A K _87021 k dom).
Proof. exact (TRANS (@lem6588560 A K _87021 k dom) (@lem6588608 A K _87021 k dom)). Qed.
Lemma lem6588610 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term778 A K _87021 k) = (term812 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6588609 A K _87021 k dom)). Qed.
Lemma lem6588611 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6588612 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term779 A K _87021 k) = (term813 A K _87021 k).
Proof. exact (MK_COMB (@lem6588611 A) (@lem6588610 A K _87021 k)). Qed.
Lemma lem6588613 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((_87021 k) = (term708 A K k)) = (term813 A K _87021 k).
Proof. exact (TRANS (@lem6588542 A K _87021 k) (@lem6588612 A K _87021 k)). Qed.
Lemma lem6588614 {A K : Type'} (_87021 : type835 A K) : (term769 A K _87021) = (term814 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6588613 A K _87021 k)). Qed.
Lemma lem6588615 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6588616 {A K : Type'} (_87021 : type835 A K) : (term770 A K _87021) = (term815 A K _87021).
Proof. exact (MK_COMB (@lem6588615 K) (@lem6588614 A K _87021)). Qed.
Lemma lem6588617 {A K : Type'} (_87021 : type835 A K) : (_87021 = (term706 A K)) = (term815 A K _87021).
Proof. exact (TRANS (@lem6588524 A K _87021) (@lem6588616 A K _87021)). Qed.
Lemma lem6588618 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588619 {A K : Type'} (_87021 : type835 A K) : (term746 A K _87021) = (term816 A K _87021).
Proof. exact (MK_COMB (@lem6588618) (@lem6588617 A K _87021)). Qed.
Lemma lem6588620 {A K : Type'} (_87021 : type835 A K) : (term1796 A K _87021) = (term1796 A K _87021).
Proof. exact (eq_refl (term1796 A K _87021)). Qed.
Lemma lem6588621 {A K : Type'} (_87021 : type835 A K) : (term1810 A K _87021) = (term1816 A K _87021).
Proof. exact (MK_COMB (@lem6588619 A K _87021) (@lem6588620 A K _87021)). Qed.
Lemma lem6588622 {A K : Type'} : (term1812 A K) = (term1817 A K).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6588621 A K _87021)). Qed.
Lemma lem6588623 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6588624 {A K : Type'} : (term1814 A K) = (term1818 A K).
Proof. exact (MK_COMB (@lem6588623 A K) (@lem6588622 A K)). Qed.
Lemma lem6588625 {A K : Type'} : (term1802 A K) = (term1802 A K).
Proof. exact (eq_refl (term1802 A K)). Qed.
Lemma lem6588626 {A K : Type'} : ((term1756 A K) = (term1814 A K)) = ((term1756 A K) = (term1818 A K)).
Proof. exact (MK_COMB (@lem6588625 A K) (@lem6588624 A K)). Qed.
Lemma lem6588627 {A K : Type'} : (term1756 A K) = (term1818 A K).
Proof. exact (EQ_MP (@lem6588626 A K) (@lem6588506 A K)). Qed.
Lemma lem6588628 {A K : Type'} (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : _87022 = (term1819 A K).
Proof. exact (h1). Qed.
Lemma lem6588629 {A : Type'} (op : type1400 A) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6588630 {A K : Type'} (op : type1400 A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op) = (term1820 A K op).
Proof. exact (MK_COMB (@lem6588628 A K _87022 h1) (@lem6588629 A op)). Qed.
Lemma lem6588631 {A K : Type'} (op : type1400 A) : (term1820 A K op) = (term1821 A K op).
Proof. exact (eq_refl (term1820 A K op)). Qed.
Lemma lem6588632 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1822 A K _87022 op) = (term1822 A K _87022 op).
Proof. exact (eq_refl (term1822 A K _87022 op)). Qed.
Lemma lem6588633 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1820 A K op)) = ((_87022 op) = (term1821 A K op)).
Proof. exact (MK_COMB (@lem6588632 A K _87022 op) (@lem6588631 A K op)). Qed.
Lemma lem6588634 {A K : Type'} (op : type1400 A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op) = (term1821 A K op).
Proof. exact (EQ_MP (@lem6588633 A K _87022 op) (@lem6588630 A K op _87022 h1)). Qed.
Lemma lem6588635 {K : Type'} (ltle : type1402 K) : ltle = ltle.
Proof. exact (eq_refl ltle). Qed.
Lemma lem6588636 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle) = (term1823 A K op ltle).
Proof. exact (MK_COMB (@lem6588634 A K op _87022 h1) (@lem6588635 K ltle)). Qed.
Lemma lem6588637 {A K : Type'} (op : type1400 A) (ltle : type1402 K) : (term1823 A K op ltle) = (term1824 A K op ltle).
Proof. exact (eq_refl (term1823 A K op ltle)). Qed.
Lemma lem6588638 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1825 A K _87022 op ltle) = (term1825 A K _87022 op ltle).
Proof. exact (eq_refl (term1825 A K _87022 op ltle)). Qed.
Lemma lem6588639 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1823 A K op ltle)) = ((_87022 op ltle) = (term1824 A K op ltle)).
Proof. exact (MK_COMB (@lem6588638 A K _87022 op ltle) (@lem6588637 A K op ltle)). Qed.
Lemma lem6588640 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle) = (term1824 A K op ltle).
Proof. exact (EQ_MP (@lem6588639 A K _87022 op ltle) (@lem6588636 A K op ltle _87022 h1)). Qed.
Lemma lem6588641 {A K : Type'} (_87021 : type835 A K) : _87021 = _87021.
Proof. exact (eq_refl _87021). Qed.
Lemma lem6588642 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021) = (term1826 A K op ltle _87021).
Proof. exact (MK_COMB (@lem6588640 A K op ltle _87022 h1) (@lem6588641 A K _87021)). Qed.
Lemma lem6588643 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1826 A K op ltle _87021) = (term1827 A K op ltle _87021).
Proof. exact (eq_refl (term1826 A K op ltle _87021)). Qed.
Lemma lem6588644 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1828 A K _87022 op ltle _87021) = (term1828 A K _87022 op ltle _87021).
Proof. exact (eq_refl (term1828 A K _87022 op ltle _87021)). Qed.
Lemma lem6588645 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1826 A K op ltle _87021)) = ((_87022 op ltle _87021) = (term1827 A K op ltle _87021)).
Proof. exact (MK_COMB (@lem6588644 A K _87022 op ltle _87021) (@lem6588643 A K op ltle _87021)). Qed.
Lemma lem6588646 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021) = (term1827 A K op ltle _87021).
Proof. exact (EQ_MP (@lem6588645 A K _87022 op ltle _87021) (@lem6588642 A K op ltle _87021 _87022 h1)). Qed.
Lemma lem6588647 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6588648 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i) = (term1829 A K op ltle _87021 i).
Proof. exact (MK_COMB (@lem6588646 A K op ltle _87021 _87022 h1) (@lem6588647 K i)). Qed.
Lemma lem6588649 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1829 A K op ltle _87021 i) = (term1830 A K op ltle _87021 i).
Proof. exact (eq_refl (term1829 A K op ltle _87021 i)). Qed.
Lemma lem6588650 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1831 A K _87022 op ltle _87021 i) = (term1831 A K _87022 op ltle _87021 i).
Proof. exact (eq_refl (term1831 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6588651 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1829 A K op ltle _87021 i)) = ((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)).
Proof. exact (MK_COMB (@lem6588650 A K _87022 op ltle _87021 i) (@lem6588649 A K op ltle _87021 i)). Qed.
Lemma lem6588652 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i).
Proof. exact (EQ_MP (@lem6588651 A K _87022 op ltle _87021 i) (@lem6588648 A K op ltle _87021 i _87022 h1)). Qed.
Lemma lem6588653 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6588654 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k) = (term1832 A K op ltle _87021 i k).
Proof. exact (MK_COMB (@lem6588652 A K op ltle _87021 i _87022 h1) (@lem6588653 K k)). Qed.
Lemma lem6588655 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1832 A K op ltle _87021 i k) = (term1833 A K op ltle _87021 i k).
Proof. exact (eq_refl (term1832 A K op ltle _87021 i k)). Qed.
Lemma lem6588656 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1834 A K _87022 op ltle _87021 i k) = (term1834 A K _87022 op ltle _87021 i k).
Proof. exact (eq_refl (term1834 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6588657 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1832 A K op ltle _87021 i k)) = ((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)).
Proof. exact (MK_COMB (@lem6588656 A K _87022 op ltle _87021 i k) (@lem6588655 A K op ltle _87021 i k)). Qed.
Lemma lem6588658 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k).
Proof. exact (EQ_MP (@lem6588657 A K _87022 op ltle _87021 i k) (@lem6588654 A K op ltle _87021 i k _87022 h1)). Qed.
Lemma lem6588659 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6588660 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom) = (term1835 A K op ltle _87021 i k dom).
Proof. exact (MK_COMB (@lem6588658 A K op ltle _87021 i k _87022 h1) (@lem6588659 A dom)). Qed.
Lemma lem6588661 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1835 A K op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom).
Proof. exact (eq_refl (term1835 A K op ltle _87021 i k dom)). Qed.
Lemma lem6588662 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1837 A K _87022 op ltle _87021 i k dom) = (term1837 A K _87022 op ltle _87021 i k dom).
Proof. exact (eq_refl (term1837 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6588663 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1835 A K op ltle _87021 i k dom)) = ((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)).
Proof. exact (MK_COMB (@lem6588662 A K _87022 op ltle _87021 i k dom) (@lem6588661 A K op ltle _87021 i k dom)). Qed.
Lemma lem6588664 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom).
Proof. exact (EQ_MP (@lem6588663 A K _87022 op ltle _87021 i k dom) (@lem6588660 A K op ltle _87021 i k dom _87022 h1)). Qed.
Lemma lem6588665 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6588666 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom neut) = (term1838 A K op ltle _87021 i k dom neut).
Proof. exact (MK_COMB (@lem6588664 A K op ltle _87021 i k dom _87022 h1) (@lem6588665 A neut)). Qed.
Lemma lem6588667 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1838 A K op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1838 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6588668 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1840 A K _87022 op ltle _87021 i k dom neut) = (term1840 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1840 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6588669 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1838 A K op ltle _87021 i k dom neut)) = ((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)).
Proof. exact (MK_COMB (@lem6588668 A K _87022 op ltle _87021 i k dom neut) (@lem6588667 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6588670 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut).
Proof. exact (EQ_MP (@lem6588669 A K _87022 op ltle _87021 i k dom neut) (@lem6588666 A K op ltle _87021 i k dom neut _87022 h1)). Qed.
Lemma lem6588671 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6588672 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom neut f) = (term1841 A K op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6588670 A K op ltle _87021 i k dom neut _87022 h1) (@lem6588671 A K f)). Qed.
Lemma lem6588673 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1841 A K op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1841 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6588674 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1842 A K _87022 op ltle _87021 i k dom neut f) = (term1842 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1842 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6588675 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1841 A K op ltle _87021 i k dom neut f)) = ((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)).
Proof. exact (MK_COMB (@lem6588674 A K _87022 op ltle _87021 i k dom neut f) (@lem6588673 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6588676 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (EQ_MP (@lem6588675 A K _87022 op ltle _87021 i k dom neut f) (@lem6588672 A K op ltle _87021 i k dom neut f _87022 h1)). Qed.
Lemma lem6588696 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6588707 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87020 i k dom f neut) = (_87020 i k dom f neut).
Proof. exact (eq_refl (_87020 i k dom f neut)). Qed.
Lemma lem6588709 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1774 A K op ltle _87021 i k dom neut f) = (_87022 op ltle _87021 i k dom neut f).
Proof. exact (SYM (@lem6588676 A K op ltle _87021 i k dom neut f _87022 h1)). Qed.
Lemma lem6588710 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1774 A K op ltle _87021 i k dom neut f) = (_87022 op ltle _87021 i k dom neut f).
Proof. exact (@lem6588709 A K op ltle _87021 i k dom neut f _87022 h1). Qed.
Lemma lem6588711 {A K : Type'} : (@LET K A) = (@LET K A).
Proof. exact (eq_refl (@LET K A)). Qed.
Lemma lem6588712 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1775 A K op ltle _87021 i k dom neut f) = (term1843 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6588711 A K) (@lem6588710 A K op ltle _87021 i k dom neut f _87022 h1)). Qed.
Lemma lem6588713 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1776 A K op ltle _87021 _87020 i k dom f neut) = (term1844 A K _87022 op ltle _87021 _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6588712 A K op ltle _87021 i k dom neut f _87022 h1) (@lem6588707 A K _87020 i k dom f neut)). Qed.
Lemma lem6588714 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6588715 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1777 A K op ltle _87021 _87020 i k dom f neut) = (term1845 A K _87022 op ltle _87021 _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6588714 A) (@lem6588713 A K op ltle _87021 _87020 i k dom f neut _87022 h1)). Qed.
Lemma lem6588716 {A K : Type'} (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : ((term1776 A K op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)) = ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6588715 A K op ltle _87021 _87020 i k dom f neut _87022 h1) (@lem6588696 A K i dom neut op ltle k f)). Qed.
Lemma lem6588763 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1563 A K ltle k dom f neut j i) = (term1563 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j i)). Qed.
Lemma lem6588764 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6588763 A K ltle k dom f neut j i)). Qed.
Lemma lem6588765 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588766 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588765 K) (@lem6588764 A K ltle k dom f neut i)). Qed.
Lemma lem6588785 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6588786 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588785 A K dom f i neut) (@lem6588766 A K ltle k dom f neut i)). Qed.
Lemma lem6588787 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6588788 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term1572 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588787) (@lem6588786 A K ltle k dom f neut i)). Qed.
Lemma lem6588789 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588790 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1574 A K ltle k dom f neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588789) (@lem6588788 A K ltle k dom f neut i)). Qed.
Lemma lem6588791 {A K : Type'} (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1778 A K _87021 _87020 i dom neut op ltle k f) = (term1846 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588790 A K ltle k dom f neut i) (@lem6588716 A K _87021 _87020 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6588804 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term719 A K _87021 k dom f neut).
Proof. exact (eq_refl (term719 A K _87021 k dom f neut)). Qed.
Lemma lem6588831 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6588832 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6588831 K k ltle j i)). Qed.
Lemma lem6588833 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588834 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6588833 K) (@lem6588832 K k ltle i)). Qed.
Lemma lem6588835 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6588836 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6588835) (@lem6588834 K k ltle i)). Qed.
Lemma lem6588837 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87021 k dom f neut) = (term720 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588836 K k ltle i) (@lem6588804 A K _87021 k dom f neut)). Qed.
Lemma lem6588876 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6588877 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6588876 A K ltle k dom f neut j i)). Qed.
Lemma lem6588878 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6588879 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588878 K) (@lem6588877 A K ltle k dom f neut i)). Qed.
Lemma lem6588880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6588881 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6588880) (@lem6588879 A K ltle k dom f neut i)). Qed.
Lemma lem6588882 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87021 k dom f neut) = (term721 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588881 A K ltle k dom f neut i) (@lem6588837 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6588889 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6588890 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87021 k dom f neut) = (term722 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588889 K k i) (@lem6588882 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6588897 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6588898 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87021 k dom f neut) = (term1311 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588897 A K dom f i) (@lem6588890 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6588909 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6588910 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87021 k dom f neut) = (term1312 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588909 A K f i neut) (@lem6588898 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6588911 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6588912 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _87021 k dom f neut) = (term1313 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6588911) (@lem6588910 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6588913 {A K : Type'} (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1779 A K _87021 _87020 i dom neut op ltle k f) = (term1847 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6588912 A K ltle i _87021 k dom f neut) (@lem6588791 A K _87021 _87020 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589018 {A K : Type'} (x : K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1683 A K x _87020 i k dom f neut) = (term1683 A K x _87020 i k dom f neut).
Proof. exact (eq_refl (term1683 A K x _87020 i k dom f neut)). Qed.
Lemma lem6589019 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1684 A K _87020 i k dom f neut) = (term1684 A K _87020 i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6589018 A K x _87020 i k dom f neut)). Qed.
Lemma lem6589020 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589021 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1685 A K _87020 i k dom f neut) = (term1685 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6589020 K) (@lem6589019 A K _87020 i k dom f neut)). Qed.
Lemma lem6589022 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1687 A K _87020 i k dom f) = (term1687 A K _87020 i k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6589021 A K _87020 i k dom f neut)). Qed.
Lemma lem6589023 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589024 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1688 A K _87020 i k dom f) = (term1688 A K _87020 i k dom f).
Proof. exact (MK_COMB (@lem6589023 A) (@lem6589022 A K _87020 i k dom f)). Qed.
Lemma lem6589025 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1690 A K _87020 i k dom) = (term1690 A K _87020 i k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6589024 A K _87020 i k dom f)). Qed.
Lemma lem6589026 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589027 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1691 A K _87020 i k dom) = (term1691 A K _87020 i k dom).
Proof. exact (MK_COMB (@lem6589026 A K) (@lem6589025 A K _87020 i k dom)). Qed.
Lemma lem6589028 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1693 A K _87020 i k) = (term1693 A K _87020 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589027 A K _87020 i k dom)). Qed.
Lemma lem6589029 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589030 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1694 A K _87020 i k) = (term1694 A K _87020 i k).
Proof. exact (MK_COMB (@lem6589029 A) (@lem6589028 A K _87020 i k)). Qed.
Lemma lem6589031 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1696 A K _87020 i) = (term1696 A K _87020 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589030 A K _87020 i k)). Qed.
Lemma lem6589032 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589033 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1697 A K _87020 i) = (term1697 A K _87020 i).
Proof. exact (MK_COMB (@lem6589032 K) (@lem6589031 A K _87020 i)). Qed.
Lemma lem6589034 {A K : Type'} (_87020 : type1452 A K) : (term1699 A K _87020) = (term1699 A K _87020).
Proof. exact (fun_ext (fun i : K => @lem6589033 A K _87020 i)). Qed.
Lemma lem6589035 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589036 {A K : Type'} (_87020 : type1452 A K) : (term1700 A K _87020) = (term1700 A K _87020).
Proof. exact (MK_COMB (@lem6589035 K) (@lem6589034 A K _87020)). Qed.
Lemma lem6589037 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589038 {A K : Type'} (_87020 : type1452 A K) : (term1702 A K _87020) = (term1702 A K _87020).
Proof. exact (MK_COMB (@lem6589037) (@lem6589036 A K _87020)). Qed.
Lemma lem6589039 {A K : Type'} (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1780 A K _87021 _87020 i dom neut op ltle k f) = (term1848 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589038 A K _87020) (@lem6588913 A K _87021 _87020 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589040 {A K : Type'} (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1781 A K _87021 i dom neut op ltle k f) = (term1849 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (fun_ext (fun _87020 : type1452 A K => @lem6589039 A K _87021 _87020 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589041 {A K : Type'} : (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)) = (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K))). Qed.
Lemma lem6589042 {A K : Type'} (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1782 A K _87021 i dom neut op ltle k f) = (term1850 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589041 A K) (@lem6589040 A K _87021 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589043 {A K : Type'} (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1783 A K _87021 dom neut op ltle k f) = (term1851 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (fun_ext (fun i : K => @lem6589042 A K _87021 i dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589044 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589045 {A K : Type'} (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1784 A K _87021 dom neut op ltle k f) = (term1852 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589044 K) (@lem6589043 A K _87021 dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589046 {A K : Type'} (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1785 A K _87021 neut op ltle k f) = (term1853 A K _87022 _87021 neut op ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589045 A K _87021 dom neut op ltle k f _87022 h1)). Qed.
Lemma lem6589047 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589048 {A K : Type'} (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1786 A K _87021 neut op ltle k f) = (term1854 A K _87022 _87021 neut op ltle k f).
Proof. exact (MK_COMB (@lem6589047 A) (@lem6589046 A K _87021 neut op ltle k f _87022 h1)). Qed.
Lemma lem6589049 {A K : Type'} (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1787 A K _87021 op ltle k f) = (term1855 A K _87022 _87021 op ltle k f).
Proof. exact (fun_ext (fun neut : A => @lem6589048 A K _87021 neut op ltle k f _87022 h1)). Qed.
Lemma lem6589050 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589051 {A K : Type'} (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1788 A K _87021 op ltle k f) = (term1856 A K _87022 _87021 op ltle k f).
Proof. exact (MK_COMB (@lem6589050 A) (@lem6589049 A K _87021 op ltle k f _87022 h1)). Qed.
Lemma lem6589052 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1789 A K _87021 ltle k f) = (term1857 A K _87022 _87021 ltle k f).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589051 A K _87021 op ltle k f _87022 h1)). Qed.
Lemma lem6589053 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6589054 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1790 A K _87021 ltle k f) = (term1858 A K _87022 _87021 ltle k f).
Proof. exact (MK_COMB (@lem6589053 A) (@lem6589052 A K _87021 ltle k f _87022 h1)). Qed.
Lemma lem6589055 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1791 A K _87021 k f) = (term1859 A K _87022 _87021 k f).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589054 A K _87021 ltle k f _87022 h1)). Qed.
Lemma lem6589056 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6589057 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1792 A K _87021 k f) = (term1860 A K _87022 _87021 k f).
Proof. exact (MK_COMB (@lem6589056 K) (@lem6589055 A K _87021 k f _87022 h1)). Qed.
Lemma lem6589058 {A K : Type'} (_87021 : type835 A K) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1793 A K _87021 f) = (term1861 A K _87022 _87021 f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589057 A K _87021 k f _87022 h1)). Qed.
Lemma lem6589059 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589060 {A K : Type'} (_87021 : type835 A K) (f : K -> A) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1794 A K _87021 f) = (term1862 A K _87022 _87021 f).
Proof. exact (MK_COMB (@lem6589059 K) (@lem6589058 A K _87021 f _87022 h1)). Qed.
Lemma lem6589061 {A K : Type'} (_87021 : type835 A K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1795 A K _87021) = (term1863 A K _87022 _87021).
Proof. exact (fun_ext (fun f : K -> A => @lem6589060 A K _87021 f _87022 h1)). Qed.
Lemma lem6589062 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589063 {A K : Type'} (_87021 : type835 A K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1796 A K _87021) = (term1864 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6589062 A K) (@lem6589061 A K _87021 _87022 h1)). Qed.
Lemma lem6589092 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6589093 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6589092 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6589094 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6589095 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6589094 K) (@lem6589093 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589108 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87021 k dom f neut GEN_PVAR_272) = (term804 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6589109 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6589108 A K _87021 k dom f neut GEN_PVAR_272) (@lem6589095 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589110 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87021 k dom f neut) = (term806 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6589109 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589111 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589112 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87021 k dom f neut) = (term807 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589111 K) (@lem6589110 A K _87021 k dom f neut)). Qed.
Lemma lem6589113 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87021 k dom f) = (term808 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6589112 A K _87021 k dom f neut)). Qed.
Lemma lem6589114 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589115 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87021 k dom f) = (term809 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6589114 A) (@lem6589113 A K _87021 k dom f)). Qed.
Lemma lem6589116 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87021 k dom) = (term810 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6589115 A K _87021 k dom f)). Qed.
Lemma lem6589117 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589118 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87021 k dom) = (term811 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6589117 A K) (@lem6589116 A K _87021 k dom)). Qed.
Lemma lem6589119 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term812 A K _87021 k) = (term812 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589118 A K _87021 k dom)). Qed.
Lemma lem6589120 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589121 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term813 A K _87021 k) = (term813 A K _87021 k).
Proof. exact (MK_COMB (@lem6589120 A) (@lem6589119 A K _87021 k)). Qed.
Lemma lem6589122 {A K : Type'} (_87021 : type835 A K) : (term814 A K _87021) = (term814 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589121 A K _87021 k)). Qed.
Lemma lem6589123 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589124 {A K : Type'} (_87021 : type835 A K) : (term815 A K _87021) = (term815 A K _87021).
Proof. exact (MK_COMB (@lem6589123 K) (@lem6589122 A K _87021)). Qed.
Lemma lem6589125 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589126 {A K : Type'} (_87021 : type835 A K) : (term816 A K _87021) = (term816 A K _87021).
Proof. exact (MK_COMB (@lem6589125) (@lem6589124 A K _87021)). Qed.
Lemma lem6589127 {A K : Type'} (_87021 : type835 A K) (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1816 A K _87021) = (term1865 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6589126 A K _87021) (@lem6589063 A K _87021 _87022 h1)). Qed.
Lemma lem6589128 {A K : Type'} (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1817 A K) = (term1866 A K _87022).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589127 A K _87021 _87022 h1)). Qed.
Lemma lem6589129 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6589130 {A K : Type'} (_87022 : type397 A K) (h1 : _87022 = (term1819 A K)) : (term1818 A K) = (term1867 A K _87022).
Proof. exact (MK_COMB (@lem6589129 A K) (@lem6589128 A K _87022 h1)). Qed.
Lemma lem6589131 {A K : Type'} (_87022 : type397 A K) : term1868 A K _87022.
Proof. exact (fun h0 : _87022 = (term1819 A K) => @lem6589130 A K _87022 h0). Qed.
Lemma lem6589132 {A K : Type'} : term1869 A K.
Proof. exact (fun _87022 : type397 A K => @lem6589131 A K _87022). Qed.
Lemma lem6589134 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6589135 {A K : Type'} (P : Prop) (c : type397 A K) (Q : type80 A K) : term1870 A K P c Q.
Proof. exact (@lem6589134 (type397 A K) P c Q). Qed.
Lemma lem6589136 {A K : Type'} : term1871 A K.
Proof. exact (@lem6589135 A K (term1818 A K) (term1819 A K) (term1872 A K)). Qed.
Lemma lem6589137 {A K : Type'} (_87022 : type397 A K) : (term1873 A K _87022) = (term1867 A K _87022).
Proof. exact (eq_refl (term1873 A K _87022)). Qed.
Lemma lem6589138 {A K : Type'} : (term1874 A K) = (term1874 A K).
Proof. exact (eq_refl (term1874 A K)). Qed.
Lemma lem6589139 {A K : Type'} (_87022 : type397 A K) : ((term1818 A K) = (term1873 A K _87022)) = ((term1818 A K) = (term1867 A K _87022)).
Proof. exact (MK_COMB (@lem6589138 A K) (@lem6589137 A K _87022)). Qed.
Lemma lem6589140 {A K : Type'} (_87022 : type397 A K) : (term1875 A K _87022) = (term1875 A K _87022).
Proof. exact (eq_refl (term1875 A K _87022)). Qed.
Lemma lem6589141 {A K : Type'} (_87022 : type397 A K) : (term1876 A K _87022) = (term1868 A K _87022).
Proof. exact (MK_COMB (@lem6589140 A K _87022) (@lem6589139 A K _87022)). Qed.
Lemma lem6589142 {A K : Type'} : (term1877 A K) = (term1878 A K).
Proof. exact (fun_ext (fun _87022 : type397 A K => @lem6589141 A K _87022)). Qed.
Lemma lem6589143 {A K : Type'} : (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)) = (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)).
Proof. exact (eq_refl (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A))). Qed.
Lemma lem6589144 {A K : Type'} : (term1879 A K) = (term1869 A K).
Proof. exact (MK_COMB (@lem6589143 A K) (@lem6589142 A K)). Qed.
Lemma lem6589145 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589146 {A K : Type'} : (term1880 A K) = (term1881 A K).
Proof. exact (MK_COMB (@lem6589145) (@lem6589144 A K)). Qed.
Lemma lem6589147 {A K : Type'} (_87022 : type397 A K) : (term1873 A K _87022) = (term1867 A K _87022).
Proof. exact (eq_refl (term1873 A K _87022)). Qed.
Lemma lem6589148 {A K : Type'} (_87022 : type397 A K) : (term1875 A K _87022) = (term1875 A K _87022).
Proof. exact (eq_refl (term1875 A K _87022)). Qed.
Lemma lem6589149 {A K : Type'} (_87022 : type397 A K) : (term1882 A K _87022) = (term1883 A K _87022).
Proof. exact (MK_COMB (@lem6589148 A K _87022) (@lem6589147 A K _87022)). Qed.
Lemma lem6589150 {A K : Type'} : (term1884 A K) = (term1885 A K).
Proof. exact (fun_ext (fun _87022 : type397 A K => @lem6589149 A K _87022)). Qed.
Lemma lem6589151 {A K : Type'} : (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)) = (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)).
Proof. exact (eq_refl (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A))). Qed.
Lemma lem6589152 {A K : Type'} : (term1886 A K) = (term1887 A K).
Proof. exact (MK_COMB (@lem6589151 A K) (@lem6589150 A K)). Qed.
Lemma lem6589153 {A K : Type'} : (term1874 A K) = (term1874 A K).
Proof. exact (eq_refl (term1874 A K)). Qed.
Lemma lem6589154 {A K : Type'} : ((term1818 A K) = (term1886 A K)) = ((term1818 A K) = (term1887 A K)).
Proof. exact (MK_COMB (@lem6589153 A K) (@lem6589152 A K)). Qed.
Lemma lem6589155 {A K : Type'} : (term1871 A K) = (term1888 A K).
Proof. exact (MK_COMB (@lem6589146 A K) (@lem6589154 A K)). Qed.
Lemma lem6589156 {A K : Type'} : term1888 A K.
Proof. exact (EQ_MP (@lem6589155 A K) (@lem6589136 A K)). Qed.
Lemma lem6589157 {A K : Type'} : (term1818 A K) = (term1887 A K).
Proof. exact (@lem6589156 A K (@lem6589132 A K)). Qed.
Lemma lem6589159 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589160 {A K : Type'} (s : type397 A K) (t : type397 A K) : (s = (term1889 A K t)) = (term1890 A K s t).
Proof. exact (@lem6589159 (type752 A K) (type1400 A) s t). Qed.
Lemma lem6589161 {A K : Type'} (_87022 : type397 A K) : (_87022 = (term1891 A K)) = (term1892 A K _87022).
Proof. exact (@lem6589160 A K _87022 (term1819 A K)). Qed.
Lemma lem6589162 {A K : Type'} (op : type1400 A) : (term1820 A K op) = (term1821 A K op).
Proof. exact (eq_refl (term1820 A K op)). Qed.
Lemma lem6589163 {A K : Type'} : (term1891 A K) = (term1819 A K).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589162 A K op)). Qed.
Lemma lem6589164 {A K : Type'} (_87022 : type397 A K) : (@eq ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A) _87022) = (@eq ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A) _87022).
Proof. exact (eq_refl (@eq ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A) _87022)). Qed.
Lemma lem6589165 {A K : Type'} (_87022 : type397 A K) : (_87022 = (term1891 A K)) = (_87022 = (term1819 A K)).
Proof. exact (MK_COMB (@lem6589164 A K _87022) (@lem6589163 A K)). Qed.
Lemma lem6589166 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589167 {A K : Type'} (_87022 : type397 A K) : (term1893 A K _87022) = (term1894 A K _87022).
Proof. exact (MK_COMB (@lem6589166) (@lem6589165 A K _87022)). Qed.
Lemma lem6589168 {A K : Type'} (op : type1400 A) : (term1820 A K op) = (term1821 A K op).
Proof. exact (eq_refl (term1820 A K op)). Qed.
Lemma lem6589169 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1822 A K _87022 op) = (term1822 A K _87022 op).
Proof. exact (eq_refl (term1822 A K _87022 op)). Qed.
Lemma lem6589170 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1820 A K op)) = ((_87022 op) = (term1821 A K op)).
Proof. exact (MK_COMB (@lem6589169 A K _87022 op) (@lem6589168 A K op)). Qed.
Lemma lem6589171 {A K : Type'} (_87022 : type397 A K) : (term1895 A K _87022) = (term1896 A K _87022).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589170 A K _87022 op)). Qed.
Lemma lem6589172 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6589173 {A K : Type'} (_87022 : type397 A K) : (term1892 A K _87022) = (term1897 A K _87022).
Proof. exact (MK_COMB (@lem6589172 A) (@lem6589171 A K _87022)). Qed.
Lemma lem6589174 {A K : Type'} (_87022 : type397 A K) : ((_87022 = (term1891 A K)) = (term1892 A K _87022)) = ((_87022 = (term1819 A K)) = (term1897 A K _87022)).
Proof. exact (MK_COMB (@lem6589167 A K _87022) (@lem6589173 A K _87022)). Qed.
Lemma lem6589175 {A K : Type'} (_87022 : type397 A K) : (_87022 = (term1819 A K)) = (term1897 A K _87022).
Proof. exact (EQ_MP (@lem6589174 A K _87022) (@lem6589161 A K _87022)). Qed.
Lemma lem6589177 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589178 {A K : Type'} (s : type752 A K) (t : type752 A K) : (s = (term1898 A K t)) = (term1899 A K s t).
Proof. exact (@lem6589177 (type211 A K) (type1402 K) s t). Qed.
Lemma lem6589179 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1900 A K op)) = (term1901 A K _87022 op).
Proof. exact (@lem6589178 A K (_87022 op) (term1821 A K op)). Qed.
Lemma lem6589180 {A K : Type'} (op : type1400 A) (ltle : type1402 K) : (term1823 A K op ltle) = (term1824 A K op ltle).
Proof. exact (eq_refl (term1823 A K op ltle)). Qed.
Lemma lem6589181 {A K : Type'} (op : type1400 A) : (term1900 A K op) = (term1821 A K op).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589180 A K op ltle)). Qed.
Lemma lem6589182 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1822 A K _87022 op) = (term1822 A K _87022 op).
Proof. exact (eq_refl (term1822 A K _87022 op)). Qed.
Lemma lem6589183 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1900 A K op)) = ((_87022 op) = (term1821 A K op)).
Proof. exact (MK_COMB (@lem6589182 A K _87022 op) (@lem6589181 A K op)). Qed.
Lemma lem6589184 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589185 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1902 A K _87022 op) = (term1903 A K _87022 op).
Proof. exact (MK_COMB (@lem6589184) (@lem6589183 A K _87022 op)). Qed.
Lemma lem6589186 {A K : Type'} (op : type1400 A) (ltle : type1402 K) : (term1823 A K op ltle) = (term1824 A K op ltle).
Proof. exact (eq_refl (term1823 A K op ltle)). Qed.
Lemma lem6589187 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1825 A K _87022 op ltle) = (term1825 A K _87022 op ltle).
Proof. exact (eq_refl (term1825 A K _87022 op ltle)). Qed.
Lemma lem6589188 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1823 A K op ltle)) = ((_87022 op ltle) = (term1824 A K op ltle)).
Proof. exact (MK_COMB (@lem6589187 A K _87022 op ltle) (@lem6589186 A K op ltle)). Qed.
Lemma lem6589189 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1904 A K _87022 op) = (term1905 A K _87022 op).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589188 A K _87022 op ltle)). Qed.
Lemma lem6589190 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6589191 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1901 A K _87022 op) = (term1906 A K _87022 op).
Proof. exact (MK_COMB (@lem6589190 K) (@lem6589189 A K _87022 op)). Qed.
Lemma lem6589192 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (((_87022 op) = (term1900 A K op)) = (term1901 A K _87022 op)) = (((_87022 op) = (term1821 A K op)) = (term1906 A K _87022 op)).
Proof. exact (MK_COMB (@lem6589185 A K _87022 op) (@lem6589191 A K _87022 op)). Qed.
Lemma lem6589193 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1821 A K op)) = (term1906 A K _87022 op).
Proof. exact (EQ_MP (@lem6589192 A K _87022 op) (@lem6589179 A K _87022 op)). Qed.
Lemma lem6589195 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589196 {A K : Type'} (s : type211 A K) (t : type211 A K) : (s = (term1907 A K t)) = (term1908 A K s t).
Proof. exact (@lem6589195 (type1453 A K) (type835 A K) s t). Qed.
Lemma lem6589197 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1909 A K op ltle)) = (term1910 A K _87022 op ltle).
Proof. exact (@lem6589196 A K (_87022 op ltle) (term1824 A K op ltle)). Qed.
Lemma lem6589198 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1826 A K op ltle _87021) = (term1827 A K op ltle _87021).
Proof. exact (eq_refl (term1826 A K op ltle _87021)). Qed.
Lemma lem6589199 {A K : Type'} (op : type1400 A) (ltle : type1402 K) : (term1909 A K op ltle) = (term1824 A K op ltle).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589198 A K op ltle _87021)). Qed.
Lemma lem6589200 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1825 A K _87022 op ltle) = (term1825 A K _87022 op ltle).
Proof. exact (eq_refl (term1825 A K _87022 op ltle)). Qed.
Lemma lem6589201 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1909 A K op ltle)) = ((_87022 op ltle) = (term1824 A K op ltle)).
Proof. exact (MK_COMB (@lem6589200 A K _87022 op ltle) (@lem6589199 A K op ltle)). Qed.
Lemma lem6589202 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589203 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1911 A K _87022 op ltle) = (term1912 A K _87022 op ltle).
Proof. exact (MK_COMB (@lem6589202) (@lem6589201 A K _87022 op ltle)). Qed.
Lemma lem6589204 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1826 A K op ltle _87021) = (term1827 A K op ltle _87021).
Proof. exact (eq_refl (term1826 A K op ltle _87021)). Qed.
Lemma lem6589205 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1828 A K _87022 op ltle _87021) = (term1828 A K _87022 op ltle _87021).
Proof. exact (eq_refl (term1828 A K _87022 op ltle _87021)). Qed.
Lemma lem6589206 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1826 A K op ltle _87021)) = ((_87022 op ltle _87021) = (term1827 A K op ltle _87021)).
Proof. exact (MK_COMB (@lem6589205 A K _87022 op ltle _87021) (@lem6589204 A K op ltle _87021)). Qed.
Lemma lem6589207 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1913 A K _87022 op ltle) = (term1914 A K _87022 op ltle).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589206 A K _87022 op ltle _87021)). Qed.
Lemma lem6589208 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6589209 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1910 A K _87022 op ltle) = (term1915 A K _87022 op ltle).
Proof. exact (MK_COMB (@lem6589208 A K) (@lem6589207 A K _87022 op ltle)). Qed.
Lemma lem6589210 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (((_87022 op ltle) = (term1909 A K op ltle)) = (term1910 A K _87022 op ltle)) = (((_87022 op ltle) = (term1824 A K op ltle)) = (term1915 A K _87022 op ltle)).
Proof. exact (MK_COMB (@lem6589203 A K _87022 op ltle) (@lem6589209 A K _87022 op ltle)). Qed.
Lemma lem6589211 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1824 A K op ltle)) = (term1915 A K _87022 op ltle).
Proof. exact (EQ_MP (@lem6589210 A K _87022 op ltle) (@lem6589197 A K _87022 op ltle)). Qed.
Lemma lem6589213 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589214 {A K : Type'} (s : type1453 A K) (t : type1453 A K) : (s = (term1916 A K t)) = (term1917 A K s t).
Proof. exact (@lem6589213 (type837 A K) K s t). Qed.
Lemma lem6589215 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1918 A K op ltle _87021)) = (term1919 A K _87022 op ltle _87021).
Proof. exact (@lem6589214 A K (_87022 op ltle _87021) (term1827 A K op ltle _87021)). Qed.
Lemma lem6589216 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1829 A K op ltle _87021 i) = (term1830 A K op ltle _87021 i).
Proof. exact (eq_refl (term1829 A K op ltle _87021 i)). Qed.
Lemma lem6589217 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1918 A K op ltle _87021) = (term1827 A K op ltle _87021).
Proof. exact (fun_ext (fun i : K => @lem6589216 A K op ltle _87021 i)). Qed.
Lemma lem6589218 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1828 A K _87022 op ltle _87021) = (term1828 A K _87022 op ltle _87021).
Proof. exact (eq_refl (term1828 A K _87022 op ltle _87021)). Qed.
Lemma lem6589219 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1918 A K op ltle _87021)) = ((_87022 op ltle _87021) = (term1827 A K op ltle _87021)).
Proof. exact (MK_COMB (@lem6589218 A K _87022 op ltle _87021) (@lem6589217 A K op ltle _87021)). Qed.
Lemma lem6589220 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589221 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1920 A K _87022 op ltle _87021) = (term1921 A K _87022 op ltle _87021).
Proof. exact (MK_COMB (@lem6589220) (@lem6589219 A K _87022 op ltle _87021)). Qed.
Lemma lem6589222 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1829 A K op ltle _87021 i) = (term1830 A K op ltle _87021 i).
Proof. exact (eq_refl (term1829 A K op ltle _87021 i)). Qed.
Lemma lem6589223 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1831 A K _87022 op ltle _87021 i) = (term1831 A K _87022 op ltle _87021 i).
Proof. exact (eq_refl (term1831 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589224 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1829 A K op ltle _87021 i)) = ((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)).
Proof. exact (MK_COMB (@lem6589223 A K _87022 op ltle _87021 i) (@lem6589222 A K op ltle _87021 i)). Qed.
Lemma lem6589225 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1922 A K _87022 op ltle _87021) = (term1923 A K _87022 op ltle _87021).
Proof. exact (fun_ext (fun i : K => @lem6589224 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589226 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589227 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1919 A K _87022 op ltle _87021) = (term1924 A K _87022 op ltle _87021).
Proof. exact (MK_COMB (@lem6589226 K) (@lem6589225 A K _87022 op ltle _87021)). Qed.
Lemma lem6589228 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (((_87022 op ltle _87021) = (term1918 A K op ltle _87021)) = (term1919 A K _87022 op ltle _87021)) = (((_87022 op ltle _87021) = (term1827 A K op ltle _87021)) = (term1924 A K _87022 op ltle _87021)).
Proof. exact (MK_COMB (@lem6589221 A K _87022 op ltle _87021) (@lem6589227 A K _87022 op ltle _87021)). Qed.
Lemma lem6589229 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1827 A K op ltle _87021)) = (term1924 A K _87022 op ltle _87021).
Proof. exact (EQ_MP (@lem6589228 A K _87022 op ltle _87021) (@lem6589215 A K _87022 op ltle _87021)). Qed.
Lemma lem6589231 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589232 {A K : Type'} (s : type837 A K) (t : type837 A K) : (s = (term1925 A K t)) = (term1926 A K s t).
Proof. exact (@lem6589231 (type666 A K) (K -> Prop) s t). Qed.
Lemma lem6589233 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1927 A K op ltle _87021 i)) = (term1928 A K _87022 op ltle _87021 i).
Proof. exact (@lem6589232 A K (_87022 op ltle _87021 i) (term1830 A K op ltle _87021 i)). Qed.
Lemma lem6589234 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1832 A K op ltle _87021 i k) = (term1833 A K op ltle _87021 i k).
Proof. exact (eq_refl (term1832 A K op ltle _87021 i k)). Qed.
Lemma lem6589235 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1927 A K op ltle _87021 i) = (term1830 A K op ltle _87021 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589234 A K op ltle _87021 i k)). Qed.
Lemma lem6589236 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1831 A K _87022 op ltle _87021 i) = (term1831 A K _87022 op ltle _87021 i).
Proof. exact (eq_refl (term1831 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589237 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1927 A K op ltle _87021 i)) = ((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)).
Proof. exact (MK_COMB (@lem6589236 A K _87022 op ltle _87021 i) (@lem6589235 A K op ltle _87021 i)). Qed.
Lemma lem6589238 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589239 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1929 A K _87022 op ltle _87021 i) = (term1930 A K _87022 op ltle _87021 i).
Proof. exact (MK_COMB (@lem6589238) (@lem6589237 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589240 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1832 A K op ltle _87021 i k) = (term1833 A K op ltle _87021 i k).
Proof. exact (eq_refl (term1832 A K op ltle _87021 i k)). Qed.
Lemma lem6589241 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1834 A K _87022 op ltle _87021 i k) = (term1834 A K _87022 op ltle _87021 i k).
Proof. exact (eq_refl (term1834 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589242 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1832 A K op ltle _87021 i k)) = ((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)).
Proof. exact (MK_COMB (@lem6589241 A K _87022 op ltle _87021 i k) (@lem6589240 A K op ltle _87021 i k)). Qed.
Lemma lem6589243 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1931 A K _87022 op ltle _87021 i) = (term1932 A K _87022 op ltle _87021 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589242 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589244 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589245 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1928 A K _87022 op ltle _87021 i) = (term1933 A K _87022 op ltle _87021 i).
Proof. exact (MK_COMB (@lem6589244 K) (@lem6589243 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589246 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (((_87022 op ltle _87021 i) = (term1927 A K op ltle _87021 i)) = (term1928 A K _87022 op ltle _87021 i)) = (((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)) = (term1933 A K _87022 op ltle _87021 i)).
Proof. exact (MK_COMB (@lem6589239 A K _87022 op ltle _87021 i) (@lem6589245 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589247 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)) = (term1933 A K _87022 op ltle _87021 i).
Proof. exact (EQ_MP (@lem6589246 A K _87022 op ltle _87021 i) (@lem6589233 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589249 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589250 {A K : Type'} (s : type666 A K) (t : type666 A K) : (s = (term1934 A K t)) = (term1935 A K s t).
Proof. exact (@lem6589249 (type1371 A K) (A -> Prop) s t). Qed.
Lemma lem6589251 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1936 A K op ltle _87021 i k)) = (term1937 A K _87022 op ltle _87021 i k).
Proof. exact (@lem6589250 A K (_87022 op ltle _87021 i k) (term1833 A K op ltle _87021 i k)). Qed.
Lemma lem6589252 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1835 A K op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom).
Proof. exact (eq_refl (term1835 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589253 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1936 A K op ltle _87021 i k) = (term1833 A K op ltle _87021 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589252 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589254 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1834 A K _87022 op ltle _87021 i k) = (term1834 A K _87022 op ltle _87021 i k).
Proof. exact (eq_refl (term1834 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589255 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1936 A K op ltle _87021 i k)) = ((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)).
Proof. exact (MK_COMB (@lem6589254 A K _87022 op ltle _87021 i k) (@lem6589253 A K op ltle _87021 i k)). Qed.
Lemma lem6589256 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589257 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1938 A K _87022 op ltle _87021 i k) = (term1939 A K _87022 op ltle _87021 i k).
Proof. exact (MK_COMB (@lem6589256) (@lem6589255 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589258 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1835 A K op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom).
Proof. exact (eq_refl (term1835 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589259 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1837 A K _87022 op ltle _87021 i k dom) = (term1837 A K _87022 op ltle _87021 i k dom).
Proof. exact (eq_refl (term1837 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589260 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1835 A K op ltle _87021 i k dom)) = ((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)).
Proof. exact (MK_COMB (@lem6589259 A K _87022 op ltle _87021 i k dom) (@lem6589258 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589261 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1940 A K _87022 op ltle _87021 i k) = (term1941 A K _87022 op ltle _87021 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589260 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589262 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589263 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1937 A K _87022 op ltle _87021 i k) = (term1942 A K _87022 op ltle _87021 i k).
Proof. exact (MK_COMB (@lem6589262 A) (@lem6589261 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589264 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (((_87022 op ltle _87021 i k) = (term1936 A K op ltle _87021 i k)) = (term1937 A K _87022 op ltle _87021 i k)) = (((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)) = (term1942 A K _87022 op ltle _87021 i k)).
Proof. exact (MK_COMB (@lem6589257 A K _87022 op ltle _87021 i k) (@lem6589263 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589265 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)) = (term1942 A K _87022 op ltle _87021 i k).
Proof. exact (EQ_MP (@lem6589264 A K _87022 op ltle _87021 i k) (@lem6589251 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589267 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589268 {A K : Type'} (s : type1371 A K) (t : type1371 A K) : (s = (term1943 A K t)) = (term1944 A K s t).
Proof. exact (@lem6589267 (type796 A K) A s t). Qed.
Lemma lem6589269 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1945 A K op ltle _87021 i k dom)) = (term1946 A K _87022 op ltle _87021 i k dom).
Proof. exact (@lem6589268 A K (_87022 op ltle _87021 i k dom) (term1836 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589270 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1838 A K op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1838 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589271 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1945 A K op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom).
Proof. exact (fun_ext (fun neut : A => @lem6589270 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589272 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1837 A K _87022 op ltle _87021 i k dom) = (term1837 A K _87022 op ltle _87021 i k dom).
Proof. exact (eq_refl (term1837 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589273 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1945 A K op ltle _87021 i k dom)) = ((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)).
Proof. exact (MK_COMB (@lem6589272 A K _87022 op ltle _87021 i k dom) (@lem6589271 A K op ltle _87021 i k dom)). Qed.
Lemma lem6589274 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589275 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1947 A K _87022 op ltle _87021 i k dom) = (term1948 A K _87022 op ltle _87021 i k dom).
Proof. exact (MK_COMB (@lem6589274) (@lem6589273 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589276 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1838 A K op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1838 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589277 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1840 A K _87022 op ltle _87021 i k dom neut) = (term1840 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1840 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589278 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1838 A K op ltle _87021 i k dom neut)) = ((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)).
Proof. exact (MK_COMB (@lem6589277 A K _87022 op ltle _87021 i k dom neut) (@lem6589276 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589279 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1949 A K _87022 op ltle _87021 i k dom) = (term1950 A K _87022 op ltle _87021 i k dom).
Proof. exact (fun_ext (fun neut : A => @lem6589278 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589280 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589281 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1946 A K _87022 op ltle _87021 i k dom) = (term1951 A K _87022 op ltle _87021 i k dom).
Proof. exact (MK_COMB (@lem6589280 A) (@lem6589279 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589282 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (((_87022 op ltle _87021 i k dom) = (term1945 A K op ltle _87021 i k dom)) = (term1946 A K _87022 op ltle _87021 i k dom)) = (((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)) = (term1951 A K _87022 op ltle _87021 i k dom)).
Proof. exact (MK_COMB (@lem6589275 A K _87022 op ltle _87021 i k dom) (@lem6589281 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589283 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)) = (term1951 A K _87022 op ltle _87021 i k dom).
Proof. exact (EQ_MP (@lem6589282 A K _87022 op ltle _87021 i k dom) (@lem6589269 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589285 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589286 {A K : Type'} (s : type796 A K) (t : type796 A K) : (s = (term1952 A K t)) = (term1953 A K s t).
Proof. exact (@lem6589285 (K -> A) (K -> A) s t). Qed.
Lemma lem6589287 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1954 A K op ltle _87021 i k dom neut)) = (term1955 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (@lem6589286 A K (_87022 op ltle _87021 i k dom neut) (term1839 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589288 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1841 A K op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1841 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589289 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1954 A K op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6589288 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589290 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1840 A K _87022 op ltle _87021 i k dom neut) = (term1840 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (eq_refl (term1840 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589291 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1954 A K op ltle _87021 i k dom neut)) = ((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)).
Proof. exact (MK_COMB (@lem6589290 A K _87022 op ltle _87021 i k dom neut) (@lem6589289 A K op ltle _87021 i k dom neut)). Qed.
Lemma lem6589292 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589293 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1956 A K _87022 op ltle _87021 i k dom neut) = (term1957 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (MK_COMB (@lem6589292) (@lem6589291 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589294 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1841 A K op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1841 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589295 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1842 A K _87022 op ltle _87021 i k dom neut f) = (term1842 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1842 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589296 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1841 A K op ltle _87021 i k dom neut f)) = ((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)).
Proof. exact (MK_COMB (@lem6589295 A K _87022 op ltle _87021 i k dom neut f) (@lem6589294 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589297 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1958 A K _87022 op ltle _87021 i k dom neut) = (term1959 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6589296 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589298 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589299 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1955 A K _87022 op ltle _87021 i k dom neut) = (term1960 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (MK_COMB (@lem6589298 A K) (@lem6589297 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589300 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (((_87022 op ltle _87021 i k dom neut) = (term1954 A K op ltle _87021 i k dom neut)) = (term1955 A K _87022 op ltle _87021 i k dom neut)) = (((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)) = (term1960 A K _87022 op ltle _87021 i k dom neut)).
Proof. exact (MK_COMB (@lem6589293 A K _87022 op ltle _87021 i k dom neut) (@lem6589299 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589301 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)) = (term1960 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (EQ_MP (@lem6589300 A K _87022 op ltle _87021 i k dom neut) (@lem6589287 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589303 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589304 {A K : Type'} (s : K -> A) (t : K -> A) : (s = (term760 A K t)) = (term761 A K s t).
Proof. exact (@lem6589303 A K s t). Qed.
Lemma lem6589305 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1961 A K op ltle _87021 i k dom neut f)) = (term1962 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (@lem6589304 A K (_87022 op ltle _87021 i k dom neut f) (term1774 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589306 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1963 A K op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f).
Proof. exact (eq_refl (term1963 A K op ltle _87021 i k dom neut f i')). Qed.
Lemma lem6589307 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1961 A K op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6589306 A K op ltle _87021 i k i' dom neut f)). Qed.
Lemma lem6589308 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1842 A K _87022 op ltle _87021 i k dom neut f) = (term1842 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (eq_refl (term1842 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589309 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1961 A K op ltle _87021 i k dom neut f)) = ((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)).
Proof. exact (MK_COMB (@lem6589308 A K _87022 op ltle _87021 i k dom neut f) (@lem6589307 A K op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589310 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589311 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1964 A K _87022 op ltle _87021 i k dom neut f) = (term1965 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6589310) (@lem6589309 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589312 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1963 A K op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f).
Proof. exact (eq_refl (term1963 A K op ltle _87021 i k dom neut f i')). Qed.
Lemma lem6589313 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (i' : K) : (term1966 A K _87022 op ltle _87021 i k dom neut f i') = (term1966 A K _87022 op ltle _87021 i k dom neut f i').
Proof. exact (eq_refl (term1966 A K _87022 op ltle _87021 i k dom neut f i')). Qed.
Lemma lem6589314 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f i') = (term1963 A K op ltle _87021 i k dom neut f i')) = ((_87022 op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f)).
Proof. exact (MK_COMB (@lem6589313 A K _87022 op ltle _87021 i k dom neut f i') (@lem6589312 A K op ltle _87021 i k i' dom neut f)). Qed.
Lemma lem6589315 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1967 A K _87022 op ltle _87021 i k dom neut f) = (term1968 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6589314 A K _87022 op ltle _87021 i k i' dom neut f)). Qed.
Lemma lem6589316 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589317 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1962 A K _87022 op ltle _87021 i k dom neut f) = (term1969 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6589316 K) (@lem6589315 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589318 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (((_87022 op ltle _87021 i k dom neut f) = (term1961 A K op ltle _87021 i k dom neut f)) = (term1962 A K _87022 op ltle _87021 i k dom neut f)) = (((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)) = (term1969 A K _87022 op ltle _87021 i k dom neut f)).
Proof. exact (MK_COMB (@lem6589311 A K _87022 op ltle _87021 i k dom neut f) (@lem6589317 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589319 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)) = (term1969 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (EQ_MP (@lem6589318 A K _87022 op ltle _87021 i k dom neut f) (@lem6589305 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589320 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f)) = ((_87022 op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f)).
Proof. exact (eq_refl ((_87022 op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f))). Qed.
Lemma lem6589321 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1968 A K _87022 op ltle _87021 i k dom neut f) = (term1968 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6589320 A K _87022 op ltle _87021 i k i' dom neut f)). Qed.
Lemma lem6589322 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589323 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1969 A K _87022 op ltle _87021 i k dom neut f) = (term1969 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (MK_COMB (@lem6589322 K) (@lem6589321 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589324 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f) = (term1774 A K op ltle _87021 i k dom neut f)) = (term1969 A K _87022 op ltle _87021 i k dom neut f).
Proof. exact (TRANS (@lem6589319 A K _87022 op ltle _87021 i k dom neut f) (@lem6589323 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589325 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1959 A K _87022 op ltle _87021 i k dom neut) = (term1970 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6589324 A K _87022 op ltle _87021 i k dom neut f)). Qed.
Lemma lem6589326 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589327 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term1960 A K _87022 op ltle _87021 i k dom neut) = (term1971 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (MK_COMB (@lem6589326 A K) (@lem6589325 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589328 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : ((_87022 op ltle _87021 i k dom neut) = (term1839 A K op ltle _87021 i k dom neut)) = (term1971 A K _87022 op ltle _87021 i k dom neut).
Proof. exact (TRANS (@lem6589301 A K _87022 op ltle _87021 i k dom neut) (@lem6589327 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589329 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1950 A K _87022 op ltle _87021 i k dom) = (term1972 A K _87022 op ltle _87021 i k dom).
Proof. exact (fun_ext (fun neut : A => @lem6589328 A K _87022 op ltle _87021 i k dom neut)). Qed.
Lemma lem6589330 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589331 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1951 A K _87022 op ltle _87021 i k dom) = (term1973 A K _87022 op ltle _87021 i k dom).
Proof. exact (MK_COMB (@lem6589330 A) (@lem6589329 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589332 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : ((_87022 op ltle _87021 i k dom) = (term1836 A K op ltle _87021 i k dom)) = (term1973 A K _87022 op ltle _87021 i k dom).
Proof. exact (TRANS (@lem6589283 A K _87022 op ltle _87021 i k dom) (@lem6589331 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589333 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1941 A K _87022 op ltle _87021 i k) = (term1974 A K _87022 op ltle _87021 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589332 A K _87022 op ltle _87021 i k dom)). Qed.
Lemma lem6589334 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589335 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : (term1942 A K _87022 op ltle _87021 i k) = (term1975 A K _87022 op ltle _87021 i k).
Proof. exact (MK_COMB (@lem6589334 A) (@lem6589333 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589336 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) : ((_87022 op ltle _87021 i k) = (term1833 A K op ltle _87021 i k)) = (term1975 A K _87022 op ltle _87021 i k).
Proof. exact (TRANS (@lem6589265 A K _87022 op ltle _87021 i k) (@lem6589335 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589337 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1932 A K _87022 op ltle _87021 i) = (term1976 A K _87022 op ltle _87021 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589336 A K _87022 op ltle _87021 i k)). Qed.
Lemma lem6589338 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589339 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : (term1933 A K _87022 op ltle _87021 i) = (term1977 A K _87022 op ltle _87021 i).
Proof. exact (MK_COMB (@lem6589338 K) (@lem6589337 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589340 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) : ((_87022 op ltle _87021 i) = (term1830 A K op ltle _87021 i)) = (term1977 A K _87022 op ltle _87021 i).
Proof. exact (TRANS (@lem6589247 A K _87022 op ltle _87021 i) (@lem6589339 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589341 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1923 A K _87022 op ltle _87021) = (term1978 A K _87022 op ltle _87021).
Proof. exact (fun_ext (fun i : K => @lem6589340 A K _87022 op ltle _87021 i)). Qed.
Lemma lem6589342 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589343 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : (term1924 A K _87022 op ltle _87021) = (term1979 A K _87022 op ltle _87021).
Proof. exact (MK_COMB (@lem6589342 K) (@lem6589341 A K _87022 op ltle _87021)). Qed.
Lemma lem6589344 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) : ((_87022 op ltle _87021) = (term1827 A K op ltle _87021)) = (term1979 A K _87022 op ltle _87021).
Proof. exact (TRANS (@lem6589229 A K _87022 op ltle _87021) (@lem6589343 A K _87022 op ltle _87021)). Qed.
Lemma lem6589345 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1914 A K _87022 op ltle) = (term1980 A K _87022 op ltle).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589344 A K _87022 op ltle _87021)). Qed.
Lemma lem6589346 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6589347 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : (term1915 A K _87022 op ltle) = (term1981 A K _87022 op ltle).
Proof. exact (MK_COMB (@lem6589346 A K) (@lem6589345 A K _87022 op ltle)). Qed.
Lemma lem6589348 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) : ((_87022 op ltle) = (term1824 A K op ltle)) = (term1981 A K _87022 op ltle).
Proof. exact (TRANS (@lem6589211 A K _87022 op ltle) (@lem6589347 A K _87022 op ltle)). Qed.
Lemma lem6589349 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1905 A K _87022 op) = (term1982 A K _87022 op).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589348 A K _87022 op ltle)). Qed.
Lemma lem6589350 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6589351 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : (term1906 A K _87022 op) = (term1983 A K _87022 op).
Proof. exact (MK_COMB (@lem6589350 K) (@lem6589349 A K _87022 op)). Qed.
Lemma lem6589352 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) : ((_87022 op) = (term1821 A K op)) = (term1983 A K _87022 op).
Proof. exact (TRANS (@lem6589193 A K _87022 op) (@lem6589351 A K _87022 op)). Qed.
Lemma lem6589353 {A K : Type'} (_87022 : type397 A K) : (term1896 A K _87022) = (term1984 A K _87022).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589352 A K _87022 op)). Qed.
Lemma lem6589354 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6589355 {A K : Type'} (_87022 : type397 A K) : (term1897 A K _87022) = (term1985 A K _87022).
Proof. exact (MK_COMB (@lem6589354 A) (@lem6589353 A K _87022)). Qed.
Lemma lem6589356 {A K : Type'} (_87022 : type397 A K) : (_87022 = (term1819 A K)) = (term1985 A K _87022).
Proof. exact (TRANS (@lem6589175 A K _87022) (@lem6589355 A K _87022)). Qed.
Lemma lem6589357 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589358 {A K : Type'} (_87022 : type397 A K) : (term1875 A K _87022) = (term1986 A K _87022).
Proof. exact (MK_COMB (@lem6589357) (@lem6589356 A K _87022)). Qed.
Lemma lem6589359 {A K : Type'} (_87022 : type397 A K) : (term1867 A K _87022) = (term1867 A K _87022).
Proof. exact (eq_refl (term1867 A K _87022)). Qed.
Lemma lem6589360 {A K : Type'} (_87022 : type397 A K) : (term1883 A K _87022) = (term1987 A K _87022).
Proof. exact (MK_COMB (@lem6589358 A K _87022) (@lem6589359 A K _87022)). Qed.
Lemma lem6589361 {A K : Type'} : (term1885 A K) = (term1988 A K).
Proof. exact (fun_ext (fun _87022 : type397 A K => @lem6589360 A K _87022)). Qed.
Lemma lem6589362 {A K : Type'} : (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)) = (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)).
Proof. exact (eq_refl (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A))). Qed.
Lemma lem6589363 {A K : Type'} : (term1887 A K) = (term1989 A K).
Proof. exact (MK_COMB (@lem6589362 A K) (@lem6589361 A K)). Qed.
Lemma lem6589364 {A K : Type'} : (term1874 A K) = (term1874 A K).
Proof. exact (eq_refl (term1874 A K)). Qed.
Lemma lem6589365 {A K : Type'} : ((term1818 A K) = (term1887 A K)) = ((term1818 A K) = (term1989 A K)).
Proof. exact (MK_COMB (@lem6589364 A K) (@lem6589363 A K)). Qed.
Lemma lem6589366 {A K : Type'} : (term1818 A K) = (term1989 A K).
Proof. exact (EQ_MP (@lem6589365 A K) (@lem6589157 A K)). Qed.
Lemma lem6589367 {K : Type'} (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : _87023 = (term1990 K).
Proof. exact (h1). Qed.
Lemma lem6589368 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6589369 {K : Type'} (i : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i) = (term1991 K i).
Proof. exact (MK_COMB (@lem6589367 K _87023 h1) (@lem6589368 K i)). Qed.
Lemma lem6589370 {K : Type'} (i : K) : (term1991 K i) = (term1992 K i).
Proof. exact (eq_refl (term1991 K i)). Qed.
Lemma lem6589371 {K : Type'} (_87023 : type1362 K) (i : K) : (term1993 K _87023 i) = (term1993 K _87023 i).
Proof. exact (eq_refl (term1993 K _87023 i)). Qed.
Lemma lem6589372 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term1991 K i)) = ((_87023 i) = (term1992 K i)).
Proof. exact (MK_COMB (@lem6589371 K _87023 i) (@lem6589370 K i)). Qed.
Lemma lem6589373 {K : Type'} (i : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i) = (term1992 K i).
Proof. exact (EQ_MP (@lem6589372 K _87023 i) (@lem6589369 K i _87023 h1)). Qed.
Lemma lem6589374 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6589375 {K : Type'} (i : K) (k : K -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i k) = (term1994 K i k).
Proof. exact (MK_COMB (@lem6589373 K i _87023 h1) (@lem6589374 K k)). Qed.
Lemma lem6589376 {K : Type'} (i : K) (k : K -> Prop) : (term1994 K i k) = (term1995 K i k).
Proof. exact (eq_refl (term1994 K i k)). Qed.
Lemma lem6589377 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term1996 K _87023 i k) = (term1996 K _87023 i k).
Proof. exact (eq_refl (term1996 K _87023 i k)). Qed.
Lemma lem6589378 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term1994 K i k)) = ((_87023 i k) = (term1995 K i k)).
Proof. exact (MK_COMB (@lem6589377 K _87023 i k) (@lem6589376 K i k)). Qed.
Lemma lem6589379 {K : Type'} (i : K) (k : K -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i k) = (term1995 K i k).
Proof. exact (EQ_MP (@lem6589378 K _87023 i k) (@lem6589375 K i k _87023 h1)). Qed.
Lemma lem6589380 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6589381 {K : Type'} (i : K) (k : K -> Prop) (i' : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i k i') = (term1997 K i k i').
Proof. exact (MK_COMB (@lem6589379 K i k _87023 h1) (@lem6589380 K i')). Qed.
Lemma lem6589382 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term1997 K i k i') = (term1759 K i k i').
Proof. exact (eq_refl (term1997 K i k i')). Qed.
Lemma lem6589383 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term1998 K _87023 i k i') = (term1998 K _87023 i k i').
Proof. exact (eq_refl (term1998 K _87023 i k i')). Qed.
Lemma lem6589384 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term1997 K i k i')) = ((_87023 i k i') = (term1759 K i k i')).
Proof. exact (MK_COMB (@lem6589383 K _87023 i k i') (@lem6589382 K i k i')). Qed.
Lemma lem6589385 {K : Type'} (i : K) (k : K -> Prop) (i' : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (_87023 i k i') = (term1759 K i k i').
Proof. exact (EQ_MP (@lem6589384 K _87023 i k i') (@lem6589381 K i k i' _87023 h1)). Qed.
Lemma lem6589439 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)) = ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f))). Qed.
Lemma lem6589486 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1563 A K ltle k dom f neut j i) = (term1563 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j i)). Qed.
Lemma lem6589487 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6589486 A K ltle k dom f neut j i)). Qed.
Lemma lem6589488 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589489 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589488 K) (@lem6589487 A K ltle k dom f neut i)). Qed.
Lemma lem6589508 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6589509 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589508 A K dom f i neut) (@lem6589489 A K ltle k dom f neut i)). Qed.
Lemma lem6589510 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6589511 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term1572 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589510) (@lem6589509 A K ltle k dom f neut i)). Qed.
Lemma lem6589512 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589513 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1574 A K ltle k dom f neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589512) (@lem6589511 A K ltle k dom f neut i)). Qed.
Lemma lem6589514 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1846 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1846 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589513 A K ltle k dom f neut i) (@lem6589439 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6589527 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term719 A K _87021 k dom f neut).
Proof. exact (eq_refl (term719 A K _87021 k dom f neut)). Qed.
Lemma lem6589554 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6589555 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6589554 K k ltle j i)). Qed.
Lemma lem6589556 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589557 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6589556 K) (@lem6589555 K k ltle i)). Qed.
Lemma lem6589558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6589559 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6589558) (@lem6589557 K k ltle i)). Qed.
Lemma lem6589560 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87021 k dom f neut) = (term720 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589559 K k ltle i) (@lem6589527 A K _87021 k dom f neut)). Qed.
Lemma lem6589599 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6589600 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6589599 A K ltle k dom f neut j i)). Qed.
Lemma lem6589601 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589602 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589601 K) (@lem6589600 A K ltle k dom f neut i)). Qed.
Lemma lem6589603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6589604 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6589603) (@lem6589602 A K ltle k dom f neut i)). Qed.
Lemma lem6589605 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87021 k dom f neut) = (term721 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589604 A K ltle k dom f neut i) (@lem6589560 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6589612 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6589613 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87021 k dom f neut) = (term722 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589612 K k i) (@lem6589605 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6589620 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6589621 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87021 k dom f neut) = (term1311 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589620 A K dom f i) (@lem6589613 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6589632 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6589633 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87021 k dom f neut) = (term1312 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589632 A K f i neut) (@lem6589621 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6589634 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589635 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _87021 k dom f neut) = (term1313 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589634) (@lem6589633 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6589636 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1847 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1847 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589635 A K ltle i _87021 k dom f neut) (@lem6589514 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6589741 {A K : Type'} (x : K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1683 A K x _87020 i k dom f neut) = (term1683 A K x _87020 i k dom f neut).
Proof. exact (eq_refl (term1683 A K x _87020 i k dom f neut)). Qed.
Lemma lem6589742 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1684 A K _87020 i k dom f neut) = (term1684 A K _87020 i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6589741 A K x _87020 i k dom f neut)). Qed.
Lemma lem6589743 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589744 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1685 A K _87020 i k dom f neut) = (term1685 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6589743 K) (@lem6589742 A K _87020 i k dom f neut)). Qed.
Lemma lem6589745 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1687 A K _87020 i k dom f) = (term1687 A K _87020 i k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6589744 A K _87020 i k dom f neut)). Qed.
Lemma lem6589746 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589747 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1688 A K _87020 i k dom f) = (term1688 A K _87020 i k dom f).
Proof. exact (MK_COMB (@lem6589746 A) (@lem6589745 A K _87020 i k dom f)). Qed.
Lemma lem6589748 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1690 A K _87020 i k dom) = (term1690 A K _87020 i k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6589747 A K _87020 i k dom f)). Qed.
Lemma lem6589749 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589750 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1691 A K _87020 i k dom) = (term1691 A K _87020 i k dom).
Proof. exact (MK_COMB (@lem6589749 A K) (@lem6589748 A K _87020 i k dom)). Qed.
Lemma lem6589751 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1693 A K _87020 i k) = (term1693 A K _87020 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589750 A K _87020 i k dom)). Qed.
Lemma lem6589752 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589753 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1694 A K _87020 i k) = (term1694 A K _87020 i k).
Proof. exact (MK_COMB (@lem6589752 A) (@lem6589751 A K _87020 i k)). Qed.
Lemma lem6589754 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1696 A K _87020 i) = (term1696 A K _87020 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589753 A K _87020 i k)). Qed.
Lemma lem6589755 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589756 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1697 A K _87020 i) = (term1697 A K _87020 i).
Proof. exact (MK_COMB (@lem6589755 K) (@lem6589754 A K _87020 i)). Qed.
Lemma lem6589757 {A K : Type'} (_87020 : type1452 A K) : (term1699 A K _87020) = (term1699 A K _87020).
Proof. exact (fun_ext (fun i : K => @lem6589756 A K _87020 i)). Qed.
Lemma lem6589758 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589759 {A K : Type'} (_87020 : type1452 A K) : (term1700 A K _87020) = (term1700 A K _87020).
Proof. exact (MK_COMB (@lem6589758 K) (@lem6589757 A K _87020)). Qed.
Lemma lem6589760 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589761 {A K : Type'} (_87020 : type1452 A K) : (term1702 A K _87020) = (term1702 A K _87020).
Proof. exact (MK_COMB (@lem6589760) (@lem6589759 A K _87020)). Qed.
Lemma lem6589762 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1848 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1848 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589761 A K _87020) (@lem6589636 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6589763 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1849 A K _87022 _87021 i dom neut op ltle k f) = (term1849 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (fun_ext (fun _87020 : type1452 A K => @lem6589762 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6589764 {A K : Type'} : (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)) = (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K))). Qed.
Lemma lem6589765 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1850 A K _87022 _87021 i dom neut op ltle k f) = (term1850 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589764 A K) (@lem6589763 A K _87022 _87021 i dom neut op ltle k f)). Qed.
Lemma lem6589766 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1851 A K _87022 _87021 dom neut op ltle k f) = (term1851 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (fun_ext (fun i : K => @lem6589765 A K _87022 _87021 i dom neut op ltle k f)). Qed.
Lemma lem6589767 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589768 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1852 A K _87022 _87021 dom neut op ltle k f) = (term1852 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6589767 K) (@lem6589766 A K _87022 _87021 dom neut op ltle k f)). Qed.
Lemma lem6589769 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1853 A K _87022 _87021 neut op ltle k f) = (term1853 A K _87022 _87021 neut op ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589768 A K _87022 _87021 dom neut op ltle k f)). Qed.
Lemma lem6589770 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589771 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1854 A K _87022 _87021 neut op ltle k f) = (term1854 A K _87022 _87021 neut op ltle k f).
Proof. exact (MK_COMB (@lem6589770 A) (@lem6589769 A K _87022 _87021 neut op ltle k f)). Qed.
Lemma lem6589772 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1855 A K _87022 _87021 op ltle k f) = (term1855 A K _87022 _87021 op ltle k f).
Proof. exact (fun_ext (fun neut : A => @lem6589771 A K _87022 _87021 neut op ltle k f)). Qed.
Lemma lem6589773 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589774 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1856 A K _87022 _87021 op ltle k f) = (term1856 A K _87022 _87021 op ltle k f).
Proof. exact (MK_COMB (@lem6589773 A) (@lem6589772 A K _87022 _87021 op ltle k f)). Qed.
Lemma lem6589775 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1857 A K _87022 _87021 ltle k f) = (term1857 A K _87022 _87021 ltle k f).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589774 A K _87022 _87021 op ltle k f)). Qed.
Lemma lem6589776 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6589777 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1858 A K _87022 _87021 ltle k f) = (term1858 A K _87022 _87021 ltle k f).
Proof. exact (MK_COMB (@lem6589776 A) (@lem6589775 A K _87022 _87021 ltle k f)). Qed.
Lemma lem6589778 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) : (term1859 A K _87022 _87021 k f) = (term1859 A K _87022 _87021 k f).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589777 A K _87022 _87021 ltle k f)). Qed.
Lemma lem6589779 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6589780 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) : (term1860 A K _87022 _87021 k f) = (term1860 A K _87022 _87021 k f).
Proof. exact (MK_COMB (@lem6589779 K) (@lem6589778 A K _87022 _87021 k f)). Qed.
Lemma lem6589781 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (f : K -> A) : (term1861 A K _87022 _87021 f) = (term1861 A K _87022 _87021 f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589780 A K _87022 _87021 k f)). Qed.
Lemma lem6589782 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589783 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (f : K -> A) : (term1862 A K _87022 _87021 f) = (term1862 A K _87022 _87021 f).
Proof. exact (MK_COMB (@lem6589782 K) (@lem6589781 A K _87022 _87021 f)). Qed.
Lemma lem6589784 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1863 A K _87022 _87021) = (term1863 A K _87022 _87021).
Proof. exact (fun_ext (fun f : K -> A => @lem6589783 A K _87022 _87021 f)). Qed.
Lemma lem6589785 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589786 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1864 A K _87022 _87021) = (term1864 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6589785 A K) (@lem6589784 A K _87022 _87021)). Qed.
Lemma lem6589815 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6589816 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6589815 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6589817 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6589818 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6589817 K) (@lem6589816 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589831 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87021 k dom f neut GEN_PVAR_272) = (term804 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6589832 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6589831 A K _87021 k dom f neut GEN_PVAR_272) (@lem6589818 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589833 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87021 k dom f neut) = (term806 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6589832 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6589834 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589835 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87021 k dom f neut) = (term807 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6589834 K) (@lem6589833 A K _87021 k dom f neut)). Qed.
Lemma lem6589836 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87021 k dom f) = (term808 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6589835 A K _87021 k dom f neut)). Qed.
Lemma lem6589837 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589838 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87021 k dom f) = (term809 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6589837 A) (@lem6589836 A K _87021 k dom f)). Qed.
Lemma lem6589839 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87021 k dom) = (term810 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6589838 A K _87021 k dom f)). Qed.
Lemma lem6589840 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589841 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87021 k dom) = (term811 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6589840 A K) (@lem6589839 A K _87021 k dom)). Qed.
Lemma lem6589842 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term812 A K _87021 k) = (term812 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589841 A K _87021 k dom)). Qed.
Lemma lem6589843 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589844 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term813 A K _87021 k) = (term813 A K _87021 k).
Proof. exact (MK_COMB (@lem6589843 A) (@lem6589842 A K _87021 k)). Qed.
Lemma lem6589845 {A K : Type'} (_87021 : type835 A K) : (term814 A K _87021) = (term814 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589844 A K _87021 k)). Qed.
Lemma lem6589846 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589847 {A K : Type'} (_87021 : type835 A K) : (term815 A K _87021) = (term815 A K _87021).
Proof. exact (MK_COMB (@lem6589846 K) (@lem6589845 A K _87021)). Qed.
Lemma lem6589848 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589849 {A K : Type'} (_87021 : type835 A K) : (term816 A K _87021) = (term816 A K _87021).
Proof. exact (MK_COMB (@lem6589848) (@lem6589847 A K _87021)). Qed.
Lemma lem6589850 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1865 A K _87022 _87021) = (term1865 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6589849 A K _87021) (@lem6589786 A K _87022 _87021)). Qed.
Lemma lem6589851 {A K : Type'} (_87022 : type397 A K) : (term1866 A K _87022) = (term1866 A K _87022).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589850 A K _87022 _87021)). Qed.
Lemma lem6589852 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6589853 {A K : Type'} (_87022 : type397 A K) : (term1867 A K _87022) = (term1867 A K _87022).
Proof. exact (MK_COMB (@lem6589852 A K) (@lem6589851 A K _87022)). Qed.
Lemma lem6589854 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6589855 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6589856 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6589857 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6589859 {K : Type'} (i : K) (k : K -> Prop) (i' : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1759 K i k i') = (_87023 i k i').
Proof. exact (SYM (@lem6589385 K i k i' _87023 h1)). Qed.
Lemma lem6589860 {K : Type'} (i : K) (k : K -> Prop) (i' : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1759 K i k i') = (_87023 i k i').
Proof. exact (@lem6589859 K i k i' _87023 h1). Qed.
Lemma lem6589861 {A K : Type'} (_87021 : type835 A K) : _87021 = _87021.
Proof. exact (eq_refl _87021). Qed.
Lemma lem6589862 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1999 A K _87021 i k i') = (term2000 A K _87021 _87023 i k i').
Proof. exact (MK_COMB (@lem6589861 A K _87021) (@lem6589860 K i k i' _87023 h1)). Qed.
Lemma lem6589863 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term2001 A K _87021 i k i' dom) = (term2002 A K _87021 _87023 i k i' dom).
Proof. exact (MK_COMB (@lem6589862 A K _87021 i k i' _87023 h1) (@lem6589857 A dom)). Qed.
Lemma lem6589864 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term2003 A K _87021 i k i' dom f) = (term2004 A K _87021 _87023 i k i' dom f).
Proof. exact (MK_COMB (@lem6589863 A K _87021 i k i' dom _87023 h1) (@lem6589856 A K f)). Qed.
Lemma lem6589865 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1758 A K _87021 i k i' dom f neut) = (term2005 A K _87021 _87023 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6589864 A K _87021 i k i' dom f _87023 h1) (@lem6589855 A neut)). Qed.
Lemma lem6589866 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6589867 {A K : Type'} (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1769 A K _87021 i k i' dom f neut) = (term2006 A K _87021 _87023 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6589866 K) (@lem6589865 A K _87021 i k i' dom f neut _87023 h1)). Qed.
Lemma lem6589876 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6589877 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1770 A K op ltle _87021 i k i' dom f neut) = (term2007 A K op ltle _87021 _87023 i k i' dom f neut).
Proof. exact (MK_COMB (@lem6589876 A K dom neut op ltle) (@lem6589867 A K _87021 i k i' dom f neut _87023 h1)). Qed.
Lemma lem6589878 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1771 A K op ltle _87021 i k i' dom neut f) = (term2008 A K op ltle _87021 _87023 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6589877 A K op ltle _87021 i k i' dom f neut _87023 h1) (@lem6589854 A K f)). Qed.
Lemma lem6589883 {A K : Type'} (op : type1400 A) (f : K -> A) (i' : K) : (term1598 A K op f i') = (term1598 A K op f i').
Proof. exact (eq_refl (term1598 A K op f i')). Qed.
Lemma lem6589884 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1772 A K op ltle _87021 i k i' dom neut f) = (term2009 A K op ltle _87021 _87023 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6589883 A K op f i') (@lem6589878 A K op ltle _87021 i k i' dom neut f _87023 h1)). Qed.
Lemma lem6589885 {A : Type'} : (@LET_END A) = (@LET_END A).
Proof. exact (eq_refl (@LET_END A)). Qed.
Lemma lem6589886 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1773 A K op ltle _87021 i k i' dom neut f) = (term2010 A K op ltle _87021 _87023 i k i' dom neut f).
Proof. exact (MK_COMB (@lem6589885 A) (@lem6589884 A K op ltle _87021 i k i' dom neut f _87023 h1)). Qed.
Lemma lem6589907 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (i' : K) : (term1966 A K _87022 op ltle _87021 i k dom neut f i') = (term1966 A K _87022 op ltle _87021 i k dom neut f i').
Proof. exact (eq_refl (term1966 A K _87022 op ltle _87021 i k dom neut f i')). Qed.
Lemma lem6589908 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : ((_87022 op ltle _87021 i k dom neut f i') = (term1773 A K op ltle _87021 i k i' dom neut f)) = ((_87022 op ltle _87021 i k dom neut f i') = (term2010 A K op ltle _87021 _87023 i k i' dom neut f)).
Proof. exact (MK_COMB (@lem6589907 A K _87022 op ltle _87021 i k dom neut f i') (@lem6589886 A K op ltle _87021 i k i' dom neut f _87023 h1)). Qed.
Lemma lem6589909 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1968 A K _87022 op ltle _87021 i k dom neut f) = (term2011 A K _87022 op ltle _87021 _87023 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6589908 A K _87022 op ltle _87021 i k i' dom neut f _87023 h1)). Qed.
Lemma lem6589910 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589911 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1969 A K _87022 op ltle _87021 i k dom neut f) = (term2012 A K _87022 op ltle _87021 _87023 i k dom neut f).
Proof. exact (MK_COMB (@lem6589910 K) (@lem6589909 A K _87022 op ltle _87021 i k dom neut f _87023 h1)). Qed.
Lemma lem6589912 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1970 A K _87022 op ltle _87021 i k dom neut) = (term2013 A K _87022 op ltle _87021 _87023 i k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6589911 A K _87022 op ltle _87021 i k dom neut f _87023 h1)). Qed.
Lemma lem6589913 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6589914 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1971 A K _87022 op ltle _87021 i k dom neut) = (term2014 A K _87022 op ltle _87021 _87023 i k dom neut).
Proof. exact (MK_COMB (@lem6589913 A K) (@lem6589912 A K _87022 op ltle _87021 i k dom neut _87023 h1)). Qed.
Lemma lem6589915 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1972 A K _87022 op ltle _87021 i k dom) = (term2015 A K _87022 op ltle _87021 _87023 i k dom).
Proof. exact (fun_ext (fun neut : A => @lem6589914 A K _87022 op ltle _87021 i k dom neut _87023 h1)). Qed.
Lemma lem6589916 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6589917 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1973 A K _87022 op ltle _87021 i k dom) = (term2016 A K _87022 op ltle _87021 _87023 i k dom).
Proof. exact (MK_COMB (@lem6589916 A) (@lem6589915 A K _87022 op ltle _87021 i k dom _87023 h1)). Qed.
Lemma lem6589918 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1974 A K _87022 op ltle _87021 i k) = (term2017 A K _87022 op ltle _87021 _87023 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6589917 A K _87022 op ltle _87021 i k dom _87023 h1)). Qed.
Lemma lem6589919 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6589920 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (k : K -> Prop) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1975 A K _87022 op ltle _87021 i k) = (term2018 A K _87022 op ltle _87021 _87023 i k).
Proof. exact (MK_COMB (@lem6589919 A) (@lem6589918 A K _87022 op ltle _87021 i k _87023 h1)). Qed.
Lemma lem6589921 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1976 A K _87022 op ltle _87021 i) = (term2019 A K _87022 op ltle _87021 _87023 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589920 A K _87022 op ltle _87021 i k _87023 h1)). Qed.
Lemma lem6589922 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6589923 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (i : K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1977 A K _87022 op ltle _87021 i) = (term2020 A K _87022 op ltle _87021 _87023 i).
Proof. exact (MK_COMB (@lem6589922 K) (@lem6589921 A K _87022 op ltle _87021 i _87023 h1)). Qed.
Lemma lem6589924 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1978 A K _87022 op ltle _87021) = (term2021 A K _87022 op ltle _87021 _87023).
Proof. exact (fun_ext (fun i : K => @lem6589923 A K _87022 op ltle _87021 i _87023 h1)). Qed.
Lemma lem6589925 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589926 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1979 A K _87022 op ltle _87021) = (term2022 A K _87022 op ltle _87021 _87023).
Proof. exact (MK_COMB (@lem6589925 K) (@lem6589924 A K _87022 op ltle _87021 _87023 h1)). Qed.
Lemma lem6589927 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1980 A K _87022 op ltle) = (term2023 A K _87022 op ltle _87023).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6589926 A K _87022 op ltle _87021 _87023 h1)). Qed.
Lemma lem6589928 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6589929 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1981 A K _87022 op ltle) = (term2024 A K _87022 op ltle _87023).
Proof. exact (MK_COMB (@lem6589928 A K) (@lem6589927 A K _87022 op ltle _87023 h1)). Qed.
Lemma lem6589930 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1982 A K _87022 op) = (term2025 A K _87022 op _87023).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6589929 A K _87022 op ltle _87023 h1)). Qed.
Lemma lem6589931 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6589932 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1983 A K _87022 op) = (term2026 A K _87022 op _87023).
Proof. exact (MK_COMB (@lem6589931 K) (@lem6589930 A K _87022 op _87023 h1)). Qed.
Lemma lem6589933 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1984 A K _87022) = (term2027 A K _87022 _87023).
Proof. exact (fun_ext (fun op : type1400 A => @lem6589932 A K _87022 op _87023 h1)). Qed.
Lemma lem6589934 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6589935 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1985 A K _87022) = (term2028 A K _87022 _87023).
Proof. exact (MK_COMB (@lem6589934 A) (@lem6589933 A K _87022 _87023 h1)). Qed.
Lemma lem6589936 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589937 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1986 A K _87022) = (term2029 A K _87022 _87023).
Proof. exact (MK_COMB (@lem6589936) (@lem6589935 A K _87022 _87023 h1)). Qed.
Lemma lem6589938 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1987 A K _87022) = (term2030 A K _87023 _87022).
Proof. exact (MK_COMB (@lem6589937 A K _87022 _87023 h1) (@lem6589853 A K _87022)). Qed.
Lemma lem6589939 {A K : Type'} (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1988 A K) = (term2031 A K _87023).
Proof. exact (fun_ext (fun _87022 : type397 A K => @lem6589938 A K _87022 _87023 h1)). Qed.
Lemma lem6589940 {A K : Type'} : (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)) = (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)).
Proof. exact (eq_refl (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A))). Qed.
Lemma lem6589941 {A K : Type'} (_87023 : type1362 K) (h1 : _87023 = (term1990 K)) : (term1989 A K) = (term2032 A K _87023).
Proof. exact (MK_COMB (@lem6589940 A K) (@lem6589939 A K _87023 h1)). Qed.
Lemma lem6589942 {A K : Type'} (_87023 : type1362 K) : term2033 A K _87023.
Proof. exact (fun h0 : _87023 = (term1990 K) => @lem6589941 A K _87023 h0). Qed.
Lemma lem6589943 {A K : Type'} : term2034 A K.
Proof. exact (fun _87023 : type1362 K => @lem6589942 A K _87023). Qed.
Lemma lem6589945 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6589946 {K : Type'} (P : Prop) (c : type1362 K) (Q : type392 K) : term2035 K P c Q.
Proof. exact (@lem6589945 (type1362 K) P c Q). Qed.
Lemma lem6589947 {A K : Type'} : term2036 A K.
Proof. exact (@lem6589946 K (term1989 A K) (term1990 K) (term2037 A K)). Qed.
Lemma lem6589948 {A K : Type'} (_87023 : type1362 K) : (term2038 A K _87023) = (term2032 A K _87023).
Proof. exact (eq_refl (term2038 A K _87023)). Qed.
Lemma lem6589949 {A K : Type'} : (term2039 A K) = (term2039 A K).
Proof. exact (eq_refl (term2039 A K)). Qed.
Lemma lem6589950 {A K : Type'} (_87023 : type1362 K) : ((term1989 A K) = (term2038 A K _87023)) = ((term1989 A K) = (term2032 A K _87023)).
Proof. exact (MK_COMB (@lem6589949 A K) (@lem6589948 A K _87023)). Qed.
Lemma lem6589951 {K : Type'} (_87023 : type1362 K) : (term2040 K _87023) = (term2040 K _87023).
Proof. exact (eq_refl (term2040 K _87023)). Qed.
Lemma lem6589952 {A K : Type'} (_87023 : type1362 K) : (term2041 A K _87023) = (term2033 A K _87023).
Proof. exact (MK_COMB (@lem6589951 K _87023) (@lem6589950 A K _87023)). Qed.
Lemma lem6589953 {A K : Type'} : (term2042 A K) = (term2043 A K).
Proof. exact (fun_ext (fun _87023 : type1362 K => @lem6589952 A K _87023)). Qed.
Lemma lem6589954 {K : Type'} : (@all (K -> (K -> Prop) -> K -> K -> Prop)) = (@all (K -> (K -> Prop) -> K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> K -> K -> Prop))). Qed.
Lemma lem6589955 {A K : Type'} : (term2044 A K) = (term2034 A K).
Proof. exact (MK_COMB (@lem6589954 K) (@lem6589953 A K)). Qed.
Lemma lem6589956 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6589957 {A K : Type'} : (term2045 A K) = (term2046 A K).
Proof. exact (MK_COMB (@lem6589956) (@lem6589955 A K)). Qed.
Lemma lem6589958 {A K : Type'} (_87023 : type1362 K) : (term2038 A K _87023) = (term2032 A K _87023).
Proof. exact (eq_refl (term2038 A K _87023)). Qed.
Lemma lem6589959 {K : Type'} (_87023 : type1362 K) : (term2040 K _87023) = (term2040 K _87023).
Proof. exact (eq_refl (term2040 K _87023)). Qed.
Lemma lem6589960 {A K : Type'} (_87023 : type1362 K) : (term2047 A K _87023) = (term2048 A K _87023).
Proof. exact (MK_COMB (@lem6589959 K _87023) (@lem6589958 A K _87023)). Qed.
Lemma lem6589961 {A K : Type'} : (term2049 A K) = (term2050 A K).
Proof. exact (fun_ext (fun _87023 : type1362 K => @lem6589960 A K _87023)). Qed.
Lemma lem6589962 {K : Type'} : (@all (K -> (K -> Prop) -> K -> K -> Prop)) = (@all (K -> (K -> Prop) -> K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> K -> K -> Prop))). Qed.
Lemma lem6589963 {A K : Type'} : (term2051 A K) = (term2052 A K).
Proof. exact (MK_COMB (@lem6589962 K) (@lem6589961 A K)). Qed.
Lemma lem6589964 {A K : Type'} : (term2039 A K) = (term2039 A K).
Proof. exact (eq_refl (term2039 A K)). Qed.
Lemma lem6589965 {A K : Type'} : ((term1989 A K) = (term2051 A K)) = ((term1989 A K) = (term2052 A K)).
Proof. exact (MK_COMB (@lem6589964 A K) (@lem6589963 A K)). Qed.
Lemma lem6589966 {A K : Type'} : (term2036 A K) = (term2053 A K).
Proof. exact (MK_COMB (@lem6589957 A K) (@lem6589965 A K)). Qed.
Lemma lem6589967 {A K : Type'} : term2053 A K.
Proof. exact (EQ_MP (@lem6589966 A K) (@lem6589947 A K)). Qed.
Lemma lem6589968 {A K : Type'} : (term1989 A K) = (term2052 A K).
Proof. exact (@lem6589967 A K (@lem6589943 A K)). Qed.
Lemma lem6589970 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589971 {K : Type'} (s : type1362 K) (t : type1362 K) : (s = (term2054 K t)) = (term2055 K s t).
Proof. exact (@lem6589970 (type667 K) K s t). Qed.
Lemma lem6589972 {K : Type'} (_87023 : type1362 K) : (_87023 = (term2056 K)) = (term2057 K _87023).
Proof. exact (@lem6589971 K _87023 (term1990 K)). Qed.
Lemma lem6589973 {K : Type'} (i : K) : (term1991 K i) = (term1992 K i).
Proof. exact (eq_refl (term1991 K i)). Qed.
Lemma lem6589974 {K : Type'} : (term2056 K) = (term1990 K).
Proof. exact (fun_ext (fun i : K => @lem6589973 K i)). Qed.
Lemma lem6589975 {K : Type'} (_87023 : type1362 K) : (@eq (K -> (K -> Prop) -> K -> K -> Prop) _87023) = (@eq (K -> (K -> Prop) -> K -> K -> Prop) _87023).
Proof. exact (eq_refl (@eq (K -> (K -> Prop) -> K -> K -> Prop) _87023)). Qed.
Lemma lem6589976 {K : Type'} (_87023 : type1362 K) : (_87023 = (term2056 K)) = (_87023 = (term1990 K)).
Proof. exact (MK_COMB (@lem6589975 K _87023) (@lem6589974 K)). Qed.
Lemma lem6589977 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589978 {K : Type'} (_87023 : type1362 K) : (term2058 K _87023) = (term2059 K _87023).
Proof. exact (MK_COMB (@lem6589977) (@lem6589976 K _87023)). Qed.
Lemma lem6589979 {K : Type'} (i : K) : (term1991 K i) = (term1992 K i).
Proof. exact (eq_refl (term1991 K i)). Qed.
Lemma lem6589980 {K : Type'} (_87023 : type1362 K) (i : K) : (term1993 K _87023 i) = (term1993 K _87023 i).
Proof. exact (eq_refl (term1993 K _87023 i)). Qed.
Lemma lem6589981 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term1991 K i)) = ((_87023 i) = (term1992 K i)).
Proof. exact (MK_COMB (@lem6589980 K _87023 i) (@lem6589979 K i)). Qed.
Lemma lem6589982 {K : Type'} (_87023 : type1362 K) : (term2060 K _87023) = (term2061 K _87023).
Proof. exact (fun_ext (fun i : K => @lem6589981 K _87023 i)). Qed.
Lemma lem6589983 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6589984 {K : Type'} (_87023 : type1362 K) : (term2057 K _87023) = (term2062 K _87023).
Proof. exact (MK_COMB (@lem6589983 K) (@lem6589982 K _87023)). Qed.
Lemma lem6589985 {K : Type'} (_87023 : type1362 K) : ((_87023 = (term2056 K)) = (term2057 K _87023)) = ((_87023 = (term1990 K)) = (term2062 K _87023)).
Proof. exact (MK_COMB (@lem6589978 K _87023) (@lem6589984 K _87023)). Qed.
Lemma lem6589986 {K : Type'} (_87023 : type1362 K) : (_87023 = (term1990 K)) = (term2062 K _87023).
Proof. exact (EQ_MP (@lem6589985 K _87023) (@lem6589972 K _87023)). Qed.
Lemma lem6589988 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6589989 {K : Type'} (s : type667 K) (t : type667 K) : (s = (term2063 K t)) = (term2064 K s t).
Proof. exact (@lem6589988 (type1402 K) (K -> Prop) s t). Qed.
Lemma lem6589990 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term2065 K i)) = (term2066 K _87023 i).
Proof. exact (@lem6589989 K (_87023 i) (term1992 K i)). Qed.
Lemma lem6589991 {K : Type'} (i : K) (k : K -> Prop) : (term1994 K i k) = (term1995 K i k).
Proof. exact (eq_refl (term1994 K i k)). Qed.
Lemma lem6589992 {K : Type'} (i : K) : (term2065 K i) = (term1992 K i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589991 K i k)). Qed.
Lemma lem6589993 {K : Type'} (_87023 : type1362 K) (i : K) : (term1993 K _87023 i) = (term1993 K _87023 i).
Proof. exact (eq_refl (term1993 K _87023 i)). Qed.
Lemma lem6589994 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term2065 K i)) = ((_87023 i) = (term1992 K i)).
Proof. exact (MK_COMB (@lem6589993 K _87023 i) (@lem6589992 K i)). Qed.
Lemma lem6589995 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6589996 {K : Type'} (_87023 : type1362 K) (i : K) : (term2067 K _87023 i) = (term2068 K _87023 i).
Proof. exact (MK_COMB (@lem6589995) (@lem6589994 K _87023 i)). Qed.
Lemma lem6589997 {K : Type'} (i : K) (k : K -> Prop) : (term1994 K i k) = (term1995 K i k).
Proof. exact (eq_refl (term1994 K i k)). Qed.
Lemma lem6589998 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term1996 K _87023 i k) = (term1996 K _87023 i k).
Proof. exact (eq_refl (term1996 K _87023 i k)). Qed.
Lemma lem6589999 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term1994 K i k)) = ((_87023 i k) = (term1995 K i k)).
Proof. exact (MK_COMB (@lem6589998 K _87023 i k) (@lem6589997 K i k)). Qed.
Lemma lem6590000 {K : Type'} (_87023 : type1362 K) (i : K) : (term2069 K _87023 i) = (term2070 K _87023 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6589999 K _87023 i k)). Qed.
Lemma lem6590001 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590002 {K : Type'} (_87023 : type1362 K) (i : K) : (term2066 K _87023 i) = (term2071 K _87023 i).
Proof. exact (MK_COMB (@lem6590001 K) (@lem6590000 K _87023 i)). Qed.
Lemma lem6590003 {K : Type'} (_87023 : type1362 K) (i : K) : (((_87023 i) = (term2065 K i)) = (term2066 K _87023 i)) = (((_87023 i) = (term1992 K i)) = (term2071 K _87023 i)).
Proof. exact (MK_COMB (@lem6589996 K _87023 i) (@lem6590002 K _87023 i)). Qed.
Lemma lem6590004 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term1992 K i)) = (term2071 K _87023 i).
Proof. exact (EQ_MP (@lem6590003 K _87023 i) (@lem6589990 K _87023 i)). Qed.
Lemma lem6590006 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6590007 {K : Type'} (s : type1402 K) (t : type1402 K) : (s = (term2072 K t)) = (term2073 K s t).
Proof. exact (@lem6590006 (K -> Prop) K s t). Qed.
Lemma lem6590008 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term2074 K i k)) = (term2075 K _87023 i k).
Proof. exact (@lem6590007 K (_87023 i k) (term1995 K i k)). Qed.
Lemma lem6590009 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term1997 K i k i') = (term1759 K i k i').
Proof. exact (eq_refl (term1997 K i k i')). Qed.
Lemma lem6590010 {K : Type'} (i : K) (k : K -> Prop) : (term2074 K i k) = (term1995 K i k).
Proof. exact (fun_ext (fun i' : K => @lem6590009 K i k i')). Qed.
Lemma lem6590011 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term1996 K _87023 i k) = (term1996 K _87023 i k).
Proof. exact (eq_refl (term1996 K _87023 i k)). Qed.
Lemma lem6590012 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term2074 K i k)) = ((_87023 i k) = (term1995 K i k)).
Proof. exact (MK_COMB (@lem6590011 K _87023 i k) (@lem6590010 K i k)). Qed.
Lemma lem6590013 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6590014 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2076 K _87023 i k) = (term2077 K _87023 i k).
Proof. exact (MK_COMB (@lem6590013) (@lem6590012 K _87023 i k)). Qed.
Lemma lem6590015 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term1997 K i k i') = (term1759 K i k i').
Proof. exact (eq_refl (term1997 K i k i')). Qed.
Lemma lem6590016 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term1998 K _87023 i k i') = (term1998 K _87023 i k i').
Proof. exact (eq_refl (term1998 K _87023 i k i')). Qed.
Lemma lem6590017 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term1997 K i k i')) = ((_87023 i k i') = (term1759 K i k i')).
Proof. exact (MK_COMB (@lem6590016 K _87023 i k i') (@lem6590015 K i k i')). Qed.
Lemma lem6590018 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2078 K _87023 i k) = (term2079 K _87023 i k).
Proof. exact (fun_ext (fun i' : K => @lem6590017 K _87023 i k i')). Qed.
Lemma lem6590019 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590020 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2075 K _87023 i k) = (term2080 K _87023 i k).
Proof. exact (MK_COMB (@lem6590019 K) (@lem6590018 K _87023 i k)). Qed.
Lemma lem6590021 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (((_87023 i k) = (term2074 K i k)) = (term2075 K _87023 i k)) = (((_87023 i k) = (term1995 K i k)) = (term2080 K _87023 i k)).
Proof. exact (MK_COMB (@lem6590014 K _87023 i k) (@lem6590020 K _87023 i k)). Qed.
Lemma lem6590022 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term1995 K i k)) = (term2080 K _87023 i k).
Proof. exact (EQ_MP (@lem6590021 K _87023 i k) (@lem6590008 K _87023 i k)). Qed.
Lemma lem6590024 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6590025 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6590024 Prop K s t). Qed.
Lemma lem6590026 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term2081 K i k i')) = (term2082 K _87023 i k i').
Proof. exact (@lem6590025 K (_87023 i k i') (term1759 K i k i')). Qed.
Lemma lem6590027 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1760 K i k i' j) = (term1577 K i k j i').
Proof. exact (eq_refl (term1760 K i k i' j)). Qed.
Lemma lem6590028 {K : Type'} (i : K) (k : K -> Prop) (i' : K) : (term2081 K i k i') = (term1759 K i k i').
Proof. exact (fun_ext (fun j : K => @lem6590027 K i k j i')). Qed.
Lemma lem6590029 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term1998 K _87023 i k i') = (term1998 K _87023 i k i').
Proof. exact (eq_refl (term1998 K _87023 i k i')). Qed.
Lemma lem6590030 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term2081 K i k i')) = ((_87023 i k i') = (term1759 K i k i')).
Proof. exact (MK_COMB (@lem6590029 K _87023 i k i') (@lem6590028 K i k i')). Qed.
Lemma lem6590031 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6590032 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2083 K _87023 i k i') = (term2084 K _87023 i k i').
Proof. exact (MK_COMB (@lem6590031) (@lem6590030 K _87023 i k i')). Qed.
Lemma lem6590033 {K : Type'} (i : K) (k : K -> Prop) (j : K) (i' : K) : (term1760 K i k i' j) = (term1577 K i k j i').
Proof. exact (eq_refl (term1760 K i k i' j)). Qed.
Lemma lem6590034 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) (j : K) : (term2085 K _87023 i k i' j) = (term2085 K _87023 i k i' j).
Proof. exact (eq_refl (term2085 K _87023 i k i' j)). Qed.
Lemma lem6590035 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (j : K) (i' : K) : ((_87023 i k i' j) = (term1760 K i k i' j)) = ((_87023 i k i' j) = (term1577 K i k j i')).
Proof. exact (MK_COMB (@lem6590034 K _87023 i k i' j) (@lem6590033 K i k j i')). Qed.
Lemma lem6590036 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2086 K _87023 i k i') = (term2087 K _87023 i k i').
Proof. exact (fun_ext (fun j : K => @lem6590035 K _87023 i k j i')). Qed.
Lemma lem6590037 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590038 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2082 K _87023 i k i') = (term2088 K _87023 i k i').
Proof. exact (MK_COMB (@lem6590037 K) (@lem6590036 K _87023 i k i')). Qed.
Lemma lem6590039 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (((_87023 i k i') = (term2081 K i k i')) = (term2082 K _87023 i k i')) = (((_87023 i k i') = (term1759 K i k i')) = (term2088 K _87023 i k i')).
Proof. exact (MK_COMB (@lem6590032 K _87023 i k i') (@lem6590038 K _87023 i k i')). Qed.
Lemma lem6590040 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term1759 K i k i')) = (term2088 K _87023 i k i').
Proof. exact (EQ_MP (@lem6590039 K _87023 i k i') (@lem6590026 K _87023 i k i')). Qed.
Lemma lem6590041 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (j : K) (i' : K) : ((_87023 i k i' j) = (term1577 K i k j i')) = ((_87023 i k i' j) = (term1577 K i k j i')).
Proof. exact (eq_refl ((_87023 i k i' j) = (term1577 K i k j i'))). Qed.
Lemma lem6590042 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2087 K _87023 i k i') = (term2087 K _87023 i k i').
Proof. exact (fun_ext (fun j : K => @lem6590041 K _87023 i k j i')). Qed.
Lemma lem6590043 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590044 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2088 K _87023 i k i') = (term2088 K _87023 i k i').
Proof. exact (MK_COMB (@lem6590043 K) (@lem6590042 K _87023 i k i')). Qed.
Lemma lem6590045 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : ((_87023 i k i') = (term1759 K i k i')) = (term2088 K _87023 i k i').
Proof. exact (TRANS (@lem6590040 K _87023 i k i') (@lem6590044 K _87023 i k i')). Qed.
Lemma lem6590046 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2079 K _87023 i k) = (term2089 K _87023 i k).
Proof. exact (fun_ext (fun i' : K => @lem6590045 K _87023 i k i')). Qed.
Lemma lem6590047 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590048 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2080 K _87023 i k) = (term2090 K _87023 i k).
Proof. exact (MK_COMB (@lem6590047 K) (@lem6590046 K _87023 i k)). Qed.
Lemma lem6590049 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : ((_87023 i k) = (term1995 K i k)) = (term2090 K _87023 i k).
Proof. exact (TRANS (@lem6590022 K _87023 i k) (@lem6590048 K _87023 i k)). Qed.
Lemma lem6590050 {K : Type'} (_87023 : type1362 K) (i : K) : (term2070 K _87023 i) = (term2091 K _87023 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590049 K _87023 i k)). Qed.
Lemma lem6590051 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590052 {K : Type'} (_87023 : type1362 K) (i : K) : (term2071 K _87023 i) = (term2092 K _87023 i).
Proof. exact (MK_COMB (@lem6590051 K) (@lem6590050 K _87023 i)). Qed.
Lemma lem6590053 {K : Type'} (_87023 : type1362 K) (i : K) : ((_87023 i) = (term1992 K i)) = (term2092 K _87023 i).
Proof. exact (TRANS (@lem6590004 K _87023 i) (@lem6590052 K _87023 i)). Qed.
Lemma lem6590054 {K : Type'} (_87023 : type1362 K) : (term2061 K _87023) = (term2093 K _87023).
Proof. exact (fun_ext (fun i : K => @lem6590053 K _87023 i)). Qed.
Lemma lem6590055 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590056 {K : Type'} (_87023 : type1362 K) : (term2062 K _87023) = (term2094 K _87023).
Proof. exact (MK_COMB (@lem6590055 K) (@lem6590054 K _87023)). Qed.
Lemma lem6590057 {K : Type'} (_87023 : type1362 K) : (_87023 = (term1990 K)) = (term2094 K _87023).
Proof. exact (TRANS (@lem6589986 K _87023) (@lem6590056 K _87023)). Qed.
Lemma lem6590058 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590059 {K : Type'} (_87023 : type1362 K) : (term2040 K _87023) = (term2095 K _87023).
Proof. exact (MK_COMB (@lem6590058) (@lem6590057 K _87023)). Qed.
Lemma lem6590060 {A K : Type'} (_87023 : type1362 K) : (term2032 A K _87023) = (term2032 A K _87023).
Proof. exact (eq_refl (term2032 A K _87023)). Qed.
Lemma lem6590061 {A K : Type'} (_87023 : type1362 K) : (term2048 A K _87023) = (term2096 A K _87023).
Proof. exact (MK_COMB (@lem6590059 K _87023) (@lem6590060 A K _87023)). Qed.
Lemma lem6590062 {A K : Type'} : (term2050 A K) = (term2097 A K).
Proof. exact (fun_ext (fun _87023 : type1362 K => @lem6590061 A K _87023)). Qed.
Lemma lem6590063 {K : Type'} : (@all (K -> (K -> Prop) -> K -> K -> Prop)) = (@all (K -> (K -> Prop) -> K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> K -> K -> Prop))). Qed.
Lemma lem6590064 {A K : Type'} : (term2052 A K) = (term2098 A K).
Proof. exact (MK_COMB (@lem6590063 K) (@lem6590062 A K)). Qed.
Lemma lem6590065 {A K : Type'} : (term2039 A K) = (term2039 A K).
Proof. exact (eq_refl (term2039 A K)). Qed.
Lemma lem6590066 {A K : Type'} : ((term1989 A K) = (term2052 A K)) = ((term1989 A K) = (term2098 A K)).
Proof. exact (MK_COMB (@lem6590065 A K) (@lem6590064 A K)). Qed.
Lemma lem6590069 {A K : Type'} : (term1989 A K) = (term2098 A K).
Proof. exact (EQ_MP (@lem6590066 A K) (@lem6589968 A K)). Qed.
Lemma lem6590070 {A K : Type'} : (term1818 A K) = (term2098 A K).
Proof. exact (TRANS (@lem6589366 A K) (@lem6590069 A K)). Qed.
Lemma lem6590071 {A K : Type'} : (term1756 A K) = (term2098 A K).
Proof. exact (TRANS (@lem6588627 A K) (@lem6590070 A K)). Qed.
Lemma lem6590072 {A K : Type'} : (term1755 A K) = (term2098 A K).
Proof. exact (TRANS (@lem6588031 A K) (@lem6590071 A K)). Qed.
Lemma lem6590073 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)) = ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f))). Qed.
Lemma lem6590096 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1563 A K ltle k dom f neut j i) = (term1563 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j i)). Qed.
Lemma lem6590097 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6590096 A K ltle k dom f neut j i)). Qed.
Lemma lem6590098 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590099 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590098 K) (@lem6590097 A K ltle k dom f neut i)). Qed.
Lemma lem6590108 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6590109 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590108 A K dom f i neut) (@lem6590099 A K ltle k dom f neut i)). Qed.
Lemma lem6590110 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6590111 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term1572 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590110) (@lem6590109 A K ltle k dom f neut i)). Qed.
Lemma lem6590112 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590113 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1574 A K ltle k dom f neut i) = (term1574 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590112) (@lem6590111 A K ltle k dom f neut i)). Qed.
Lemma lem6590114 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1846 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1846 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6590113 A K ltle k dom f neut i) (@lem6590073 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6590115 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term719 A K _87021 k dom f neut).
Proof. exact (eq_refl (term719 A K _87021 k dom f neut)). Qed.
Lemma lem6590128 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6590129 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6590128 K k ltle j i)). Qed.
Lemma lem6590130 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590131 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6590130 K) (@lem6590129 K k ltle i)). Qed.
Lemma lem6590132 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6590133 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6590132) (@lem6590131 K k ltle i)). Qed.
Lemma lem6590134 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87021 k dom f neut) = (term720 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590133 K k ltle i) (@lem6590115 A K _87021 k dom f neut)). Qed.
Lemma lem6590153 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6590154 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6590153 A K ltle k dom f neut j i)). Qed.
Lemma lem6590155 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590156 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590155 K) (@lem6590154 A K ltle k dom f neut i)). Qed.
Lemma lem6590157 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6590158 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6590157) (@lem6590156 A K ltle k dom f neut i)). Qed.
Lemma lem6590159 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87021 k dom f neut) = (term721 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590158 A K ltle k dom f neut i) (@lem6590134 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6590164 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6590165 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87021 k dom f neut) = (term722 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590164 K k i) (@lem6590159 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6590168 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6590169 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87021 k dom f neut) = (term1311 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590168 A K dom f i) (@lem6590165 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6590174 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6590175 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87021 k dom f neut) = (term1312 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590174 A K f i neut) (@lem6590169 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6590176 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590177 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _87021 k dom f neut) = (term1313 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590176) (@lem6590175 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6590178 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1847 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1847 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6590177 A K ltle i _87021 k dom f neut) (@lem6590114 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6590211 {A K : Type'} (x : K) (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1683 A K x _87020 i k dom f neut) = (term1683 A K x _87020 i k dom f neut).
Proof. exact (eq_refl (term1683 A K x _87020 i k dom f neut)). Qed.
Lemma lem6590212 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1684 A K _87020 i k dom f neut) = (term1684 A K _87020 i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6590211 A K x _87020 i k dom f neut)). Qed.
Lemma lem6590213 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590214 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1685 A K _87020 i k dom f neut) = (term1685 A K _87020 i k dom f neut).
Proof. exact (MK_COMB (@lem6590213 K) (@lem6590212 A K _87020 i k dom f neut)). Qed.
Lemma lem6590215 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1687 A K _87020 i k dom f) = (term1687 A K _87020 i k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6590214 A K _87020 i k dom f neut)). Qed.
Lemma lem6590216 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6590217 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1688 A K _87020 i k dom f) = (term1688 A K _87020 i k dom f).
Proof. exact (MK_COMB (@lem6590216 A) (@lem6590215 A K _87020 i k dom f)). Qed.
Lemma lem6590218 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1690 A K _87020 i k dom) = (term1690 A K _87020 i k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6590217 A K _87020 i k dom f)). Qed.
Lemma lem6590219 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6590220 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term1691 A K _87020 i k dom) = (term1691 A K _87020 i k dom).
Proof. exact (MK_COMB (@lem6590219 A K) (@lem6590218 A K _87020 i k dom)). Qed.
Lemma lem6590221 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1693 A K _87020 i k) = (term1693 A K _87020 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6590220 A K _87020 i k dom)). Qed.
Lemma lem6590222 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6590223 {A K : Type'} (_87020 : type1452 A K) (i : K) (k : K -> Prop) : (term1694 A K _87020 i k) = (term1694 A K _87020 i k).
Proof. exact (MK_COMB (@lem6590222 A) (@lem6590221 A K _87020 i k)). Qed.
Lemma lem6590224 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1696 A K _87020 i) = (term1696 A K _87020 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590223 A K _87020 i k)). Qed.
Lemma lem6590225 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590226 {A K : Type'} (_87020 : type1452 A K) (i : K) : (term1697 A K _87020 i) = (term1697 A K _87020 i).
Proof. exact (MK_COMB (@lem6590225 K) (@lem6590224 A K _87020 i)). Qed.
Lemma lem6590227 {A K : Type'} (_87020 : type1452 A K) : (term1699 A K _87020) = (term1699 A K _87020).
Proof. exact (fun_ext (fun i : K => @lem6590226 A K _87020 i)). Qed.
Lemma lem6590228 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590229 {A K : Type'} (_87020 : type1452 A K) : (term1700 A K _87020) = (term1700 A K _87020).
Proof. exact (MK_COMB (@lem6590228 K) (@lem6590227 A K _87020)). Qed.
Lemma lem6590230 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590231 {A K : Type'} (_87020 : type1452 A K) : (term1702 A K _87020) = (term1702 A K _87020).
Proof. exact (MK_COMB (@lem6590230) (@lem6590229 A K _87020)). Qed.
Lemma lem6590232 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1848 A K _87022 _87021 _87020 i dom neut op ltle k f) = (term1848 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6590231 A K _87020) (@lem6590178 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6590233 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1849 A K _87022 _87021 i dom neut op ltle k f) = (term1849 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (fun_ext (fun _87020 : type1452 A K => @lem6590232 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6590234 {A K : Type'} : (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)) = (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K))). Qed.
Lemma lem6590235 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1850 A K _87022 _87021 i dom neut op ltle k f) = (term1850 A K _87022 _87021 i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6590234 A K) (@lem6590233 A K _87022 _87021 i dom neut op ltle k f)). Qed.
Lemma lem6590236 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1851 A K _87022 _87021 dom neut op ltle k f) = (term1851 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (fun_ext (fun i : K => @lem6590235 A K _87022 _87021 i dom neut op ltle k f)). Qed.
Lemma lem6590237 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590238 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1852 A K _87022 _87021 dom neut op ltle k f) = (term1852 A K _87022 _87021 dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6590237 K) (@lem6590236 A K _87022 _87021 dom neut op ltle k f)). Qed.
Lemma lem6590239 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1853 A K _87022 _87021 neut op ltle k f) = (term1853 A K _87022 _87021 neut op ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6590238 A K _87022 _87021 dom neut op ltle k f)). Qed.
Lemma lem6590240 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6590241 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1854 A K _87022 _87021 neut op ltle k f) = (term1854 A K _87022 _87021 neut op ltle k f).
Proof. exact (MK_COMB (@lem6590240 A) (@lem6590239 A K _87022 _87021 neut op ltle k f)). Qed.
Lemma lem6590242 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1855 A K _87022 _87021 op ltle k f) = (term1855 A K _87022 _87021 op ltle k f).
Proof. exact (fun_ext (fun neut : A => @lem6590241 A K _87022 _87021 neut op ltle k f)). Qed.
Lemma lem6590243 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6590244 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1856 A K _87022 _87021 op ltle k f) = (term1856 A K _87022 _87021 op ltle k f).
Proof. exact (MK_COMB (@lem6590243 A) (@lem6590242 A K _87022 _87021 op ltle k f)). Qed.
Lemma lem6590245 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1857 A K _87022 _87021 ltle k f) = (term1857 A K _87022 _87021 ltle k f).
Proof. exact (fun_ext (fun op : type1400 A => @lem6590244 A K _87022 _87021 op ltle k f)). Qed.
Lemma lem6590246 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6590247 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1858 A K _87022 _87021 ltle k f) = (term1858 A K _87022 _87021 ltle k f).
Proof. exact (MK_COMB (@lem6590246 A) (@lem6590245 A K _87022 _87021 ltle k f)). Qed.
Lemma lem6590248 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) : (term1859 A K _87022 _87021 k f) = (term1859 A K _87022 _87021 k f).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6590247 A K _87022 _87021 ltle k f)). Qed.
Lemma lem6590249 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6590250 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (k : K -> Prop) (f : K -> A) : (term1860 A K _87022 _87021 k f) = (term1860 A K _87022 _87021 k f).
Proof. exact (MK_COMB (@lem6590249 K) (@lem6590248 A K _87022 _87021 k f)). Qed.
Lemma lem6590251 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (f : K -> A) : (term1861 A K _87022 _87021 f) = (term1861 A K _87022 _87021 f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590250 A K _87022 _87021 k f)). Qed.
Lemma lem6590252 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590253 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (f : K -> A) : (term1862 A K _87022 _87021 f) = (term1862 A K _87022 _87021 f).
Proof. exact (MK_COMB (@lem6590252 K) (@lem6590251 A K _87022 _87021 f)). Qed.
Lemma lem6590254 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1863 A K _87022 _87021) = (term1863 A K _87022 _87021).
Proof. exact (fun_ext (fun f : K -> A => @lem6590253 A K _87022 _87021 f)). Qed.
Lemma lem6590255 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6590256 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1864 A K _87022 _87021) = (term1864 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6590255 A K) (@lem6590254 A K _87022 _87021)). Qed.
Lemma lem6590257 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6590258 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6590257 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6590259 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6590260 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6590259 K) (@lem6590258 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6590263 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87021 k dom f neut GEN_PVAR_272) = (term804 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6590264 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6590263 A K _87021 k dom f neut GEN_PVAR_272) (@lem6590260 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6590265 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87021 k dom f neut) = (term806 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6590264 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6590266 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590267 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87021 k dom f neut) = (term807 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6590266 K) (@lem6590265 A K _87021 k dom f neut)). Qed.
Lemma lem6590268 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87021 k dom f) = (term808 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6590267 A K _87021 k dom f neut)). Qed.
Lemma lem6590269 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6590270 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87021 k dom f) = (term809 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6590269 A) (@lem6590268 A K _87021 k dom f)). Qed.
Lemma lem6590271 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87021 k dom) = (term810 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6590270 A K _87021 k dom f)). Qed.
Lemma lem6590272 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6590273 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87021 k dom) = (term811 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6590272 A K) (@lem6590271 A K _87021 k dom)). Qed.
Lemma lem6590274 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term812 A K _87021 k) = (term812 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6590273 A K _87021 k dom)). Qed.
Lemma lem6590275 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6590276 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term813 A K _87021 k) = (term813 A K _87021 k).
Proof. exact (MK_COMB (@lem6590275 A) (@lem6590274 A K _87021 k)). Qed.
Lemma lem6590277 {A K : Type'} (_87021 : type835 A K) : (term814 A K _87021) = (term814 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590276 A K _87021 k)). Qed.
Lemma lem6590278 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590279 {A K : Type'} (_87021 : type835 A K) : (term815 A K _87021) = (term815 A K _87021).
Proof. exact (MK_COMB (@lem6590278 K) (@lem6590277 A K _87021)). Qed.
Lemma lem6590280 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590281 {A K : Type'} (_87021 : type835 A K) : (term816 A K _87021) = (term816 A K _87021).
Proof. exact (MK_COMB (@lem6590280) (@lem6590279 A K _87021)). Qed.
Lemma lem6590282 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : (term1865 A K _87022 _87021) = (term1865 A K _87022 _87021).
Proof. exact (MK_COMB (@lem6590281 A K _87021) (@lem6590256 A K _87022 _87021)). Qed.
Lemma lem6590283 {A K : Type'} (_87022 : type397 A K) : (term1866 A K _87022) = (term1866 A K _87022).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6590282 A K _87022 _87021)). Qed.
Lemma lem6590284 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6590285 {A K : Type'} (_87022 : type397 A K) : (term1867 A K _87022) = (term1867 A K _87022).
Proof. exact (MK_COMB (@lem6590284 A K) (@lem6590283 A K _87022)). Qed.
Lemma lem6590286 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) (dom : A -> Prop) (neut : A) (f : K -> A) : ((_87022 op ltle _87021 i k dom neut f i') = (term2010 A K op ltle _87021 _87023 i k i' dom neut f)) = ((_87022 op ltle _87021 i k dom neut f i') = (term2010 A K op ltle _87021 _87023 i k i' dom neut f)).
Proof. exact (eq_refl ((_87022 op ltle _87021 i k dom neut f i') = (term2010 A K op ltle _87021 _87023 i k i' dom neut f))). Qed.
Lemma lem6590287 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2011 A K _87022 op ltle _87021 _87023 i k dom neut f) = (term2011 A K _87022 op ltle _87021 _87023 i k dom neut f).
Proof. exact (fun_ext (fun i' : K => @lem6590286 A K _87022 op ltle _87021 _87023 i k i' dom neut f)). Qed.
Lemma lem6590288 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590289 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2012 A K _87022 op ltle _87021 _87023 i k dom neut f) = (term2012 A K _87022 op ltle _87021 _87023 i k dom neut f).
Proof. exact (MK_COMB (@lem6590288 K) (@lem6590287 A K _87022 op ltle _87021 _87023 i k dom neut f)). Qed.
Lemma lem6590290 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term2013 A K _87022 op ltle _87021 _87023 i k dom neut) = (term2013 A K _87022 op ltle _87021 _87023 i k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6590289 A K _87022 op ltle _87021 _87023 i k dom neut f)). Qed.
Lemma lem6590291 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6590292 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term2014 A K _87022 op ltle _87021 _87023 i k dom neut) = (term2014 A K _87022 op ltle _87021 _87023 i k dom neut).
Proof. exact (MK_COMB (@lem6590291 A K) (@lem6590290 A K _87022 op ltle _87021 _87023 i k dom neut)). Qed.
Lemma lem6590293 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term2015 A K _87022 op ltle _87021 _87023 i k dom) = (term2015 A K _87022 op ltle _87021 _87023 i k dom).
Proof. exact (fun_ext (fun neut : A => @lem6590292 A K _87022 op ltle _87021 _87023 i k dom neut)). Qed.
Lemma lem6590294 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6590295 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) (dom : A -> Prop) : (term2016 A K _87022 op ltle _87021 _87023 i k dom) = (term2016 A K _87022 op ltle _87021 _87023 i k dom).
Proof. exact (MK_COMB (@lem6590294 A) (@lem6590293 A K _87022 op ltle _87021 _87023 i k dom)). Qed.
Lemma lem6590296 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2017 A K _87022 op ltle _87021 _87023 i k) = (term2017 A K _87022 op ltle _87021 _87023 i k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6590295 A K _87022 op ltle _87021 _87023 i k dom)). Qed.
Lemma lem6590297 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6590298 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2018 A K _87022 op ltle _87021 _87023 i k) = (term2018 A K _87022 op ltle _87021 _87023 i k).
Proof. exact (MK_COMB (@lem6590297 A) (@lem6590296 A K _87022 op ltle _87021 _87023 i k)). Qed.
Lemma lem6590299 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) : (term2019 A K _87022 op ltle _87021 _87023 i) = (term2019 A K _87022 op ltle _87021 _87023 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590298 A K _87022 op ltle _87021 _87023 i k)). Qed.
Lemma lem6590300 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590301 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) (i : K) : (term2020 A K _87022 op ltle _87021 _87023 i) = (term2020 A K _87022 op ltle _87021 _87023 i).
Proof. exact (MK_COMB (@lem6590300 K) (@lem6590299 A K _87022 op ltle _87021 _87023 i)). Qed.
Lemma lem6590302 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) : (term2021 A K _87022 op ltle _87021 _87023) = (term2021 A K _87022 op ltle _87021 _87023).
Proof. exact (fun_ext (fun i : K => @lem6590301 A K _87022 op ltle _87021 _87023 i)). Qed.
Lemma lem6590303 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590304 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87021 : type835 A K) (_87023 : type1362 K) : (term2022 A K _87022 op ltle _87021 _87023) = (term2022 A K _87022 op ltle _87021 _87023).
Proof. exact (MK_COMB (@lem6590303 K) (@lem6590302 A K _87022 op ltle _87021 _87023)). Qed.
Lemma lem6590305 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87023 : type1362 K) : (term2023 A K _87022 op ltle _87023) = (term2023 A K _87022 op ltle _87023).
Proof. exact (fun_ext (fun _87021 : type835 A K => @lem6590304 A K _87022 op ltle _87021 _87023)). Qed.
Lemma lem6590306 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6590307 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (_87023 : type1362 K) : (term2024 A K _87022 op ltle _87023) = (term2024 A K _87022 op ltle _87023).
Proof. exact (MK_COMB (@lem6590306 A K) (@lem6590305 A K _87022 op ltle _87023)). Qed.
Lemma lem6590308 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (_87023 : type1362 K) : (term2025 A K _87022 op _87023) = (term2025 A K _87022 op _87023).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6590307 A K _87022 op ltle _87023)). Qed.
Lemma lem6590309 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6590310 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (_87023 : type1362 K) : (term2026 A K _87022 op _87023) = (term2026 A K _87022 op _87023).
Proof. exact (MK_COMB (@lem6590309 K) (@lem6590308 A K _87022 op _87023)). Qed.
Lemma lem6590311 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) : (term2027 A K _87022 _87023) = (term2027 A K _87022 _87023).
Proof. exact (fun_ext (fun op : type1400 A => @lem6590310 A K _87022 op _87023)). Qed.
Lemma lem6590312 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6590313 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) : (term2028 A K _87022 _87023) = (term2028 A K _87022 _87023).
Proof. exact (MK_COMB (@lem6590312 A) (@lem6590311 A K _87022 _87023)). Qed.
Lemma lem6590314 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590315 {A K : Type'} (_87022 : type397 A K) (_87023 : type1362 K) : (term2029 A K _87022 _87023) = (term2029 A K _87022 _87023).
Proof. exact (MK_COMB (@lem6590314) (@lem6590313 A K _87022 _87023)). Qed.
Lemma lem6590316 {A K : Type'} (_87023 : type1362 K) (_87022 : type397 A K) : (term2030 A K _87023 _87022) = (term2030 A K _87023 _87022).
Proof. exact (MK_COMB (@lem6590315 A K _87022 _87023) (@lem6590285 A K _87022)). Qed.
Lemma lem6590317 {A K : Type'} (_87023 : type1362 K) : (term2031 A K _87023) = (term2031 A K _87023).
Proof. exact (fun_ext (fun _87022 : type397 A K => @lem6590316 A K _87023 _87022)). Qed.
Lemma lem6590318 {A K : Type'} : (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)) = (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A)).
Proof. exact (eq_refl (@all ((A -> A -> A) -> (K -> K -> Prop) -> ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) -> K -> (K -> Prop) -> (A -> Prop) -> A -> (K -> A) -> K -> A))). Qed.
Lemma lem6590319 {A K : Type'} (_87023 : type1362 K) : (term2032 A K _87023) = (term2032 A K _87023).
Proof. exact (MK_COMB (@lem6590318 A K) (@lem6590317 A K _87023)). Qed.
Lemma lem6590334 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (j : K) (i' : K) : ((_87023 i k i' j) = (term1577 K i k j i')) = ((_87023 i k i' j) = (term1577 K i k j i')).
Proof. exact (eq_refl ((_87023 i k i' j) = (term1577 K i k j i'))). Qed.
Lemma lem6590335 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2087 K _87023 i k i') = (term2087 K _87023 i k i').
Proof. exact (fun_ext (fun j : K => @lem6590334 K _87023 i k j i')). Qed.
Lemma lem6590336 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590337 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) (i' : K) : (term2088 K _87023 i k i') = (term2088 K _87023 i k i').
Proof. exact (MK_COMB (@lem6590336 K) (@lem6590335 K _87023 i k i')). Qed.
Lemma lem6590338 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2089 K _87023 i k) = (term2089 K _87023 i k).
Proof. exact (fun_ext (fun i' : K => @lem6590337 K _87023 i k i')). Qed.
Lemma lem6590339 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590340 {K : Type'} (_87023 : type1362 K) (i : K) (k : K -> Prop) : (term2090 K _87023 i k) = (term2090 K _87023 i k).
Proof. exact (MK_COMB (@lem6590339 K) (@lem6590338 K _87023 i k)). Qed.
Lemma lem6590341 {K : Type'} (_87023 : type1362 K) (i : K) : (term2091 K _87023 i) = (term2091 K _87023 i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6590340 K _87023 i k)). Qed.
Lemma lem6590342 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6590343 {K : Type'} (_87023 : type1362 K) (i : K) : (term2092 K _87023 i) = (term2092 K _87023 i).
Proof. exact (MK_COMB (@lem6590342 K) (@lem6590341 K _87023 i)). Qed.
Lemma lem6590344 {K : Type'} (_87023 : type1362 K) : (term2093 K _87023) = (term2093 K _87023).
Proof. exact (fun_ext (fun i : K => @lem6590343 K _87023 i)). Qed.
Lemma lem6590345 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6590346 {K : Type'} (_87023 : type1362 K) : (term2094 K _87023) = (term2094 K _87023).
Proof. exact (MK_COMB (@lem6590345 K) (@lem6590344 K _87023)). Qed.
Lemma lem6590347 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6590348 {K : Type'} (_87023 : type1362 K) : (term2095 K _87023) = (term2095 K _87023).
Proof. exact (MK_COMB (@lem6590347) (@lem6590346 K _87023)). Qed.
Lemma lem6590349 {A K : Type'} (_87023 : type1362 K) : (term2096 A K _87023) = (term2096 A K _87023).
Proof. exact (MK_COMB (@lem6590348 K _87023) (@lem6590319 A K _87023)). Qed.
Lemma lem6590350 {A K : Type'} : (term2097 A K) = (term2097 A K).
Proof. exact (fun_ext (fun _87023 : type1362 K => @lem6590349 A K _87023)). Qed.
Lemma lem6590351 {K : Type'} : (@all (K -> (K -> Prop) -> K -> K -> Prop)) = (@all (K -> (K -> Prop) -> K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> (K -> Prop) -> K -> K -> Prop))). Qed.
Lemma lem6590352 {A K : Type'} : (term2098 A K) = (term2098 A K).
Proof. exact (MK_COMB (@lem6590351 K) (@lem6590350 A K)). Qed.
Lemma lem6590661 {A K : Type'} : (term1755 A K) = (term2098 A K).
Proof. exact (TRANS (@lem6590072 A K) (@lem6590352 A K)). Qed.
Lemma lem6590662 {A K : Type'} : (term2098 A K) = (term1755 A K).
Proof. exact (SYM (@lem6590661 A K)). Qed.
Lemma lem6590665 {A K : Type'} (_87021 : type835 A K) (h1 : term815 A K _87021) : term815 A K _87021.
Proof. exact (h1). Qed.
Lemma lem6590667 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1312 A K ltle i _87021 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6590668 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term1572 A K ltle k dom f neut i) : term1572 A K ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6590670 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6590671 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)) = (term2099 A K _87022 _87021 _87020 i dom neut op ltle k f).
Proof. exact (@lem6590670 ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f))). Qed.
Lemma lem6590672 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2099 A K _87022 _87021 _87020 i dom neut op ltle k f) = ((term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6590671 A K _87022 _87021 _87020 i dom neut op ltle k f)). Qed.
Lemma lem6591363 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6591364 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6591365 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6591364 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591366 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6591367 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6591369 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6591367) (@lem6591366 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6591370 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6591369 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6591371 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6591372 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591371 K) (@lem6591370 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591373 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6591365 A K GEN_PVAR_272 k dom f neut) (@lem6591372 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591374 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6591363 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6591375 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6591376 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591375 K) (@lem6591374 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591378 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87021 k dom f neut GEN_PVAR_272) = (term831 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591379 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _87021 GEN_PVAR_272 k dom f neut) = (term832 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591378 A K _87021 k dom f neut GEN_PVAR_272) (@lem6591376 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591381 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _87021 k dom f neut GEN_PVAR_272) = (term833 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591382 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _87021 GEN_PVAR_272 k dom f neut) = (term835 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591381 A K _87021 k dom f neut GEN_PVAR_272) (@lem6591373 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591384 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _87021 GEN_PVAR_272 k dom f neut) = (term837 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591383) (@lem6591382 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591385 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _87021 GEN_PVAR_272 k dom f neut) = (term839 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591384 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6591379 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591386 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_87021 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591387 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87021 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6591386 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6591385 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591388 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87021 k dom f neut) = (term840 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6591387 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591389 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6591390 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87021 k dom f neut) = (term841 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591389 K) (@lem6591388 A K _87021 k dom f neut)). Qed.
Lemma lem6591391 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87021 k dom f) = (term842 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6591390 A K _87021 k dom f neut)). Qed.
Lemma lem6591392 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6591393 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87021 k dom f) = (term843 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591392 A) (@lem6591391 A K _87021 k dom f)). Qed.
Lemma lem6591394 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87021 k dom) = (term844 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6591393 A K _87021 k dom f)). Qed.
Lemma lem6591395 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6591396 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87021 k dom) = (term845 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591395 A K) (@lem6591394 A K _87021 k dom)). Qed.
Lemma lem6591397 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term812 A K _87021 k) = (term846 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6591396 A K _87021 k dom)). Qed.
Lemma lem6591398 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6591399 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term813 A K _87021 k) = (term847 A K _87021 k).
Proof. exact (MK_COMB (@lem6591398 A) (@lem6591397 A K _87021 k)). Qed.
Lemma lem6591400 {A K : Type'} (_87021 : type835 A K) : (term814 A K _87021) = (term848 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6591399 A K _87021 k)). Qed.
Lemma lem6591401 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6591402 {A K : Type'} (_87021 : type835 A K) : (term815 A K _87021) = (term849 A K _87021).
Proof. exact (MK_COMB (@lem6591401 K) (@lem6591400 A K _87021)). Qed.
Lemma lem6591420 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6591421 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6591420 K P Q). Qed.
Lemma lem6591422 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _87021 k dom f neut) = (term853 A K _87021 k dom f neut).
Proof. exact (@lem6591421 K (term854 A K _87021 k dom f neut) (term855 A K _87021 k dom f neut)). Qed.
Lemma lem6591423 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _87021 k dom f neut GEN_PVAR_272) = (term835 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591424 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591425 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _87021 k dom f neut GEN_PVAR_272) = (term837 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591424) (@lem6591423 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591426 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _87021 k dom f neut GEN_PVAR_272) = (term832 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591427 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _87021 k dom f neut GEN_PVAR_272) = (term839 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6591425 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6591426 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591428 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _87021 k dom f neut) = (term840 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6591427 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591429 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6591430 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _87021 k dom f neut) = (term841 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591429 K) (@lem6591428 A K _87021 k dom f neut)). Qed.
Lemma lem6591431 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6591432 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _87021 k dom f neut) = (term862 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591431) (@lem6591430 A K _87021 k dom f neut)). Qed.
Lemma lem6591433 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _87021 k dom f neut GEN_PVAR_272) = (term835 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591434 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _87021 k dom f neut) = (term854 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6591433 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591435 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6591436 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _87021 k dom f neut) = (term865 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591435 K) (@lem6591434 A K _87021 k dom f neut)). Qed.
Lemma lem6591437 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591438 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _87021 k dom f neut) = (term867 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591437) (@lem6591436 A K _87021 k dom f neut)). Qed.
Lemma lem6591439 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _87021 k dom f neut GEN_PVAR_272) = (term832 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6591440 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _87021 k dom f neut) = (term855 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6591439 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6591441 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6591442 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _87021 k dom f neut) = (term870 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591441 K) (@lem6591440 A K _87021 k dom f neut)). Qed.
Lemma lem6591443 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _87021 k dom f neut) = (term871 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591438 A K _87021 k dom f neut) (@lem6591442 A K _87021 k dom f neut)). Qed.
Lemma lem6591444 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _87021 k dom f neut) = (term853 A K _87021 k dom f neut)) = ((term841 A K _87021 k dom f neut) = (term871 A K _87021 k dom f neut)).
Proof. exact (MK_COMB (@lem6591432 A K _87021 k dom f neut) (@lem6591443 A K _87021 k dom f neut)). Qed.
Lemma lem6591445 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _87021 k dom f neut) = (term871 A K _87021 k dom f neut).
Proof. exact (EQ_MP (@lem6591444 A K _87021 k dom f neut) (@lem6591422 A K _87021 k dom f neut)). Qed.
Lemma lem6591550 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _87021 k dom f) = (term872 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6591445 A K _87021 k dom f neut)). Qed.
Lemma lem6591551 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6591552 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _87021 k dom f) = (term873 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591551 A) (@lem6591550 A K _87021 k dom f)). Qed.
Lemma lem6591554 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6591555 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6591554 A P Q). Qed.
Lemma lem6591556 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _87021 k dom f) = (term875 A K _87021 k dom f).
Proof. exact (@lem6591555 A (term876 A K _87021 k dom f) (term877 A K _87021 k dom f)). Qed.
Lemma lem6591557 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _87021 k dom f neut) = (term865 A K _87021 k dom f neut).
Proof. exact (eq_refl (term878 A K _87021 k dom f neut)). Qed.
Lemma lem6591558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591559 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _87021 k dom f neut) = (term867 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591558) (@lem6591557 A K _87021 k dom f neut)). Qed.
Lemma lem6591560 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _87021 k dom f neut) = (term870 A K _87021 k dom f neut).
Proof. exact (eq_refl (term880 A K _87021 k dom f neut)). Qed.
Lemma lem6591561 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _87021 k dom f neut) = (term871 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6591559 A K _87021 k dom f neut) (@lem6591560 A K _87021 k dom f neut)). Qed.
Lemma lem6591562 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _87021 k dom f) = (term872 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6591561 A K _87021 k dom f neut)). Qed.
Lemma lem6591563 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6591564 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _87021 k dom f) = (term873 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591563 A) (@lem6591562 A K _87021 k dom f)). Qed.
Lemma lem6591565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6591566 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _87021 k dom f) = (term884 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591565) (@lem6591564 A K _87021 k dom f)). Qed.
Lemma lem6591567 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _87021 k dom f neut) = (term865 A K _87021 k dom f neut).
Proof. exact (eq_refl (term878 A K _87021 k dom f neut)). Qed.
Lemma lem6591568 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _87021 k dom f) = (term876 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6591567 A K _87021 k dom f neut)). Qed.
Lemma lem6591569 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6591570 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _87021 k dom f) = (term887 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591569 A) (@lem6591568 A K _87021 k dom f)). Qed.
Lemma lem6591571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591572 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _87021 k dom f) = (term889 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591571) (@lem6591570 A K _87021 k dom f)). Qed.
Lemma lem6591573 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _87021 k dom f neut) = (term870 A K _87021 k dom f neut).
Proof. exact (eq_refl (term880 A K _87021 k dom f neut)). Qed.
Lemma lem6591574 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _87021 k dom f) = (term877 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6591573 A K _87021 k dom f neut)). Qed.
Lemma lem6591575 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6591576 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _87021 k dom f) = (term892 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591575 A) (@lem6591574 A K _87021 k dom f)). Qed.
Lemma lem6591577 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _87021 k dom f) = (term893 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591572 A K _87021 k dom f) (@lem6591576 A K _87021 k dom f)). Qed.
Lemma lem6591578 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _87021 k dom f) = (term875 A K _87021 k dom f)) = ((term873 A K _87021 k dom f) = (term893 A K _87021 k dom f)).
Proof. exact (MK_COMB (@lem6591566 A K _87021 k dom f) (@lem6591577 A K _87021 k dom f)). Qed.
Lemma lem6591579 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _87021 k dom f) = (term893 A K _87021 k dom f).
Proof. exact (EQ_MP (@lem6591578 A K _87021 k dom f) (@lem6591556 A K _87021 k dom f)). Qed.
Lemma lem6591692 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _87021 k dom f) = (term893 A K _87021 k dom f).
Proof. exact (TRANS (@lem6591552 A K _87021 k dom f) (@lem6591579 A K _87021 k dom f)). Qed.
Lemma lem6591693 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _87021 k dom) = (term894 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6591692 A K _87021 k dom f)). Qed.
Lemma lem6591694 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6591695 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _87021 k dom) = (term895 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591694 A K) (@lem6591693 A K _87021 k dom)). Qed.
Lemma lem6591697 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6591698 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6591697 (K -> A) P Q). Qed.
Lemma lem6591699 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _87021 k dom) = (term899 A K _87021 k dom).
Proof. exact (@lem6591698 A K (term900 A K _87021 k dom) (term901 A K _87021 k dom)). Qed.
Lemma lem6591700 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _87021 k dom f) = (term887 A K _87021 k dom f).
Proof. exact (eq_refl (term902 A K _87021 k dom f)). Qed.
Lemma lem6591701 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591702 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _87021 k dom f) = (term889 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591701) (@lem6591700 A K _87021 k dom f)). Qed.
Lemma lem6591703 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _87021 k dom f) = (term892 A K _87021 k dom f).
Proof. exact (eq_refl (term904 A K _87021 k dom f)). Qed.
Lemma lem6591704 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _87021 k dom f) = (term893 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6591702 A K _87021 k dom f) (@lem6591703 A K _87021 k dom f)). Qed.
Lemma lem6591705 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _87021 k dom) = (term894 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6591704 A K _87021 k dom f)). Qed.
Lemma lem6591706 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6591707 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _87021 k dom) = (term895 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591706 A K) (@lem6591705 A K _87021 k dom)). Qed.
Lemma lem6591708 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6591709 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _87021 k dom) = (term908 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591708) (@lem6591707 A K _87021 k dom)). Qed.
Lemma lem6591710 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _87021 k dom f) = (term887 A K _87021 k dom f).
Proof. exact (eq_refl (term902 A K _87021 k dom f)). Qed.
Lemma lem6591711 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _87021 k dom) = (term900 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6591710 A K _87021 k dom f)). Qed.
Lemma lem6591712 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6591713 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _87021 k dom) = (term911 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591712 A K) (@lem6591711 A K _87021 k dom)). Qed.
Lemma lem6591714 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591715 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _87021 k dom) = (term913 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591714) (@lem6591713 A K _87021 k dom)). Qed.
Lemma lem6591716 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _87021 k dom f) = (term892 A K _87021 k dom f).
Proof. exact (eq_refl (term904 A K _87021 k dom f)). Qed.
Lemma lem6591717 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _87021 k dom) = (term901 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6591716 A K _87021 k dom f)). Qed.
Lemma lem6591718 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6591719 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _87021 k dom) = (term916 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591718 A K) (@lem6591717 A K _87021 k dom)). Qed.
Lemma lem6591720 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _87021 k dom) = (term917 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591715 A K _87021 k dom) (@lem6591719 A K _87021 k dom)). Qed.
Lemma lem6591721 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _87021 k dom) = (term899 A K _87021 k dom)) = ((term895 A K _87021 k dom) = (term917 A K _87021 k dom)).
Proof. exact (MK_COMB (@lem6591709 A K _87021 k dom) (@lem6591720 A K _87021 k dom)). Qed.
Lemma lem6591722 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _87021 k dom) = (term917 A K _87021 k dom).
Proof. exact (EQ_MP (@lem6591721 A K _87021 k dom) (@lem6591699 A K _87021 k dom)). Qed.
Lemma lem6591843 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _87021 k dom) = (term917 A K _87021 k dom).
Proof. exact (TRANS (@lem6591695 A K _87021 k dom) (@lem6591722 A K _87021 k dom)). Qed.
Lemma lem6591844 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term846 A K _87021 k) = (term918 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6591843 A K _87021 k dom)). Qed.
Lemma lem6591845 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6591846 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term847 A K _87021 k) = (term919 A K _87021 k).
Proof. exact (MK_COMB (@lem6591845 A) (@lem6591844 A K _87021 k)). Qed.
Lemma lem6591848 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6591849 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6591848 (A -> Prop) P Q). Qed.
Lemma lem6591850 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term922 A K _87021 k) = (term923 A K _87021 k).
Proof. exact (@lem6591849 A (term924 A K _87021 k) (term925 A K _87021 k)). Qed.
Lemma lem6591851 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _87021 k dom) = (term911 A K _87021 k dom).
Proof. exact (eq_refl (term926 A K _87021 k dom)). Qed.
Lemma lem6591852 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591853 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _87021 k dom) = (term913 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591852) (@lem6591851 A K _87021 k dom)). Qed.
Lemma lem6591854 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _87021 k dom) = (term916 A K _87021 k dom).
Proof. exact (eq_refl (term928 A K _87021 k dom)). Qed.
Lemma lem6591855 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _87021 k dom) = (term917 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6591853 A K _87021 k dom) (@lem6591854 A K _87021 k dom)). Qed.
Lemma lem6591856 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term930 A K _87021 k) = (term918 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6591855 A K _87021 k dom)). Qed.
Lemma lem6591857 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6591858 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term922 A K _87021 k) = (term919 A K _87021 k).
Proof. exact (MK_COMB (@lem6591857 A) (@lem6591856 A K _87021 k)). Qed.
Lemma lem6591859 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6591860 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term931 A K _87021 k) = (term932 A K _87021 k).
Proof. exact (MK_COMB (@lem6591859) (@lem6591858 A K _87021 k)). Qed.
Lemma lem6591861 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _87021 k dom) = (term911 A K _87021 k dom).
Proof. exact (eq_refl (term926 A K _87021 k dom)). Qed.
Lemma lem6591862 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term933 A K _87021 k) = (term924 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6591861 A K _87021 k dom)). Qed.
Lemma lem6591863 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6591864 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term934 A K _87021 k) = (term935 A K _87021 k).
Proof. exact (MK_COMB (@lem6591863 A) (@lem6591862 A K _87021 k)). Qed.
Lemma lem6591865 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6591866 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term936 A K _87021 k) = (term937 A K _87021 k).
Proof. exact (MK_COMB (@lem6591865) (@lem6591864 A K _87021 k)). Qed.
Lemma lem6591867 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _87021 k dom) = (term916 A K _87021 k dom).
Proof. exact (eq_refl (term928 A K _87021 k dom)). Qed.
Lemma lem6591868 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term938 A K _87021 k) = (term925 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6591867 A K _87021 k dom)). Qed.
Lemma lem6591869 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6591870 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term939 A K _87021 k) = (term940 A K _87021 k).
Proof. exact (MK_COMB (@lem6591869 A) (@lem6591868 A K _87021 k)). Qed.
Lemma lem6591871 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term923 A K _87021 k) = (term941 A K _87021 k).
Proof. exact (MK_COMB (@lem6591866 A K _87021 k) (@lem6591870 A K _87021 k)). Qed.
Lemma lem6591872 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((term922 A K _87021 k) = (term923 A K _87021 k)) = ((term919 A K _87021 k) = (term941 A K _87021 k)).
Proof. exact (MK_COMB (@lem6591860 A K _87021 k) (@lem6591871 A K _87021 k)). Qed.
Lemma lem6591873 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term919 A K _87021 k) = (term941 A K _87021 k).
Proof. exact (EQ_MP (@lem6591872 A K _87021 k) (@lem6591850 A K _87021 k)). Qed.
Lemma lem6592002 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term847 A K _87021 k) = (term941 A K _87021 k).
Proof. exact (TRANS (@lem6591846 A K _87021 k) (@lem6591873 A K _87021 k)). Qed.
Lemma lem6592003 {A K : Type'} (_87021 : type835 A K) : (term848 A K _87021) = (term942 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592002 A K _87021 k)). Qed.
Lemma lem6592004 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592005 {A K : Type'} (_87021 : type835 A K) : (term849 A K _87021) = (term943 A K _87021).
Proof. exact (MK_COMB (@lem6592004 K) (@lem6592003 A K _87021)). Qed.
Lemma lem6592007 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6592008 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6592007 (K -> Prop) P Q). Qed.
Lemma lem6592009 {A K : Type'} (_87021 : type835 A K) : (term944 A K _87021) = (term945 A K _87021).
Proof. exact (@lem6592008 K (term946 A K _87021) (term947 A K _87021)). Qed.
Lemma lem6592010 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term948 A K _87021 k) = (term935 A K _87021 k).
Proof. exact (eq_refl (term948 A K _87021 k)). Qed.
Lemma lem6592011 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6592012 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term949 A K _87021 k) = (term937 A K _87021 k).
Proof. exact (MK_COMB (@lem6592011) (@lem6592010 A K _87021 k)). Qed.
Lemma lem6592013 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term950 A K _87021 k) = (term940 A K _87021 k).
Proof. exact (eq_refl (term950 A K _87021 k)). Qed.
Lemma lem6592014 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term951 A K _87021 k) = (term941 A K _87021 k).
Proof. exact (MK_COMB (@lem6592012 A K _87021 k) (@lem6592013 A K _87021 k)). Qed.
Lemma lem6592015 {A K : Type'} (_87021 : type835 A K) : (term952 A K _87021) = (term942 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592014 A K _87021 k)). Qed.
Lemma lem6592016 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592017 {A K : Type'} (_87021 : type835 A K) : (term944 A K _87021) = (term943 A K _87021).
Proof. exact (MK_COMB (@lem6592016 K) (@lem6592015 A K _87021)). Qed.
Lemma lem6592018 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592019 {A K : Type'} (_87021 : type835 A K) : (term953 A K _87021) = (term954 A K _87021).
Proof. exact (MK_COMB (@lem6592018) (@lem6592017 A K _87021)). Qed.
Lemma lem6592020 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term948 A K _87021 k) = (term935 A K _87021 k).
Proof. exact (eq_refl (term948 A K _87021 k)). Qed.
Lemma lem6592021 {A K : Type'} (_87021 : type835 A K) : (term955 A K _87021) = (term946 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592020 A K _87021 k)). Qed.
Lemma lem6592022 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592023 {A K : Type'} (_87021 : type835 A K) : (term956 A K _87021) = (term957 A K _87021).
Proof. exact (MK_COMB (@lem6592022 K) (@lem6592021 A K _87021)). Qed.
Lemma lem6592024 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6592025 {A K : Type'} (_87021 : type835 A K) : (term958 A K _87021) = (term959 A K _87021).
Proof. exact (MK_COMB (@lem6592024) (@lem6592023 A K _87021)). Qed.
Lemma lem6592026 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term950 A K _87021 k) = (term940 A K _87021 k).
Proof. exact (eq_refl (term950 A K _87021 k)). Qed.
Lemma lem6592027 {A K : Type'} (_87021 : type835 A K) : (term960 A K _87021) = (term947 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592026 A K _87021 k)). Qed.
Lemma lem6592028 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592029 {A K : Type'} (_87021 : type835 A K) : (term961 A K _87021) = (term962 A K _87021).
Proof. exact (MK_COMB (@lem6592028 K) (@lem6592027 A K _87021)). Qed.
Lemma lem6592030 {A K : Type'} (_87021 : type835 A K) : (term945 A K _87021) = (term963 A K _87021).
Proof. exact (MK_COMB (@lem6592025 A K _87021) (@lem6592029 A K _87021)). Qed.
Lemma lem6592031 {A K : Type'} (_87021 : type835 A K) : ((term944 A K _87021) = (term945 A K _87021)) = ((term943 A K _87021) = (term963 A K _87021)).
Proof. exact (MK_COMB (@lem6592019 A K _87021) (@lem6592030 A K _87021)). Qed.
Lemma lem6592032 {A K : Type'} (_87021 : type835 A K) : (term943 A K _87021) = (term963 A K _87021).
Proof. exact (EQ_MP (@lem6592031 A K _87021) (@lem6592009 A K _87021)). Qed.
Lemma lem6592169 {A K : Type'} (_87021 : type835 A K) : (term849 A K _87021) = (term963 A K _87021).
Proof. exact (TRANS (@lem6592005 A K _87021) (@lem6592032 A K _87021)). Qed.
Lemma lem6592171 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6592172 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6592171 K P Q). Qed.
Lemma lem6592173 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _87021 GEN_PVAR_272 k dom f neut) = (term967 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6592172 K (term968 A K _87021 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592174 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592175 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6592174 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592176 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592177 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6592176 K) (@lem6592175 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592178 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87021 k dom f neut GEN_PVAR_272) = (term831 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6592179 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _87021 GEN_PVAR_272 k dom f neut) = (term832 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6592178 A K _87021 k dom f neut GEN_PVAR_272) (@lem6592177 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592180 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592181 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _87021 GEN_PVAR_272 k dom f neut) = (term972 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6592180) (@lem6592179 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592182 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592183 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87021 k dom f neut GEN_PVAR_272) = (term831 A K _87021 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6592184 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _87021 GEN_PVAR_272 k dom f neut j) = (term974 A K _87021 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6592183 A K _87021 k dom f neut GEN_PVAR_272) (@lem6592182 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592185 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _87021 GEN_PVAR_272 k dom f neut) = (term976 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6592184 A K _87021 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592186 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592187 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _87021 GEN_PVAR_272 k dom f neut) = (term977 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6592186 K) (@lem6592185 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592188 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _87021 GEN_PVAR_272 k dom f neut) = (term967 A K _87021 GEN_PVAR_272 k dom f neut)) = ((term832 A K _87021 GEN_PVAR_272 k dom f neut) = (term977 A K _87021 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6592181 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6592187 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592189 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _87021 GEN_PVAR_272 k dom f neut) = (term977 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6592188 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6592173 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592190 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _87021 k dom f neut) = (term978 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6592189 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592191 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6592192 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _87021 k dom f neut) = (term979 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592191 K) (@lem6592190 A K _87021 k dom f neut)). Qed.
Lemma lem6592194 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6592195 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6592194 K K P). Qed.
Lemma lem6592196 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _87021 k dom f neut) = (term985 A K _87021 k dom f neut).
Proof. exact (@lem6592195 K (term986 A K _87021 k dom f neut)). Qed.
Lemma lem6592197 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _87021 k dom f neut GEN_PVAR_272) = (term976 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6592198 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6592199 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _87021 k dom f neut GEN_PVAR_272 j) = (term989 A K _87021 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6592197 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6592198 K j)). Qed.
Lemma lem6592200 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _87021 GEN_PVAR_272 k dom f neut j) = (term974 A K _87021 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _87021 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592201 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _87021 k dom f neut GEN_PVAR_272 j) = (term974 A K _87021 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6592199 A K _87021 GEN_PVAR_272 k dom f neut j) (@lem6592200 A K _87021 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592202 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _87021 k dom f neut GEN_PVAR_272) = (term976 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6592201 A K _87021 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6592203 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592204 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _87021 k dom f neut GEN_PVAR_272) = (term977 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6592203 K) (@lem6592202 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592205 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _87021 k dom f neut) = (term978 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6592204 A K _87021 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6592206 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6592207 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _87021 k dom f neut) = (term979 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592206 K) (@lem6592205 A K _87021 k dom f neut)). Qed.
Lemma lem6592208 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592209 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _87021 k dom f neut) = (term994 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592208) (@lem6592207 A K _87021 k dom f neut)). Qed.
Lemma lem6592210 {A K : Type'} (_87021 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _87021 k dom f neut GEN_PVAR_272) = (term976 A K _87021 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _87021 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6592211 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6592212 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _87021 k dom f neut j GEN_PVAR_272) = (term996 A K _87021 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6592210 A K _87021 GEN_PVAR_272 k dom f neut) (@lem6592211 K j GEN_PVAR_272)). Qed.
Lemma lem6592213 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _87021 k dom f neut j GEN_PVAR_272) = (term997 A K _87021 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _87021 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6592214 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _87021 k dom f neut j GEN_PVAR_272) = (term997 A K _87021 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6592212 A K _87021 k dom f neut j GEN_PVAR_272) (@lem6592213 A K _87021 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6592215 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _87021 k dom f neut j) = (term999 A K _87021 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6592214 A K _87021 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6592216 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6592217 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _87021 k dom f neut j) = (term1001 A K _87021 k dom f neut j).
Proof. exact (MK_COMB (@lem6592216 K) (@lem6592215 A K _87021 k dom f neut j)). Qed.
Lemma lem6592218 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _87021 k dom f neut) = (term1003 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6592217 A K _87021 k dom f neut j)). Qed.
Lemma lem6592219 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6592220 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _87021 k dom f neut) = (term1004 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592219 K) (@lem6592218 A K _87021 k dom f neut)). Qed.
Lemma lem6592221 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _87021 k dom f neut) = (term985 A K _87021 k dom f neut)) = ((term979 A K _87021 k dom f neut) = (term1004 A K _87021 k dom f neut)).
Proof. exact (MK_COMB (@lem6592209 A K _87021 k dom f neut) (@lem6592220 A K _87021 k dom f neut)). Qed.
Lemma lem6592222 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _87021 k dom f neut) = (term1004 A K _87021 k dom f neut).
Proof. exact (EQ_MP (@lem6592221 A K _87021 k dom f neut) (@lem6592196 A K _87021 k dom f neut)). Qed.
Lemma lem6592223 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _87021 k dom f neut) = (term1004 A K _87021 k dom f neut).
Proof. exact (TRANS (@lem6592192 A K _87021 k dom f neut) (@lem6592222 A K _87021 k dom f neut)). Qed.
Lemma lem6592224 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _87021 k dom f) = (term1005 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6592223 A K _87021 k dom f neut)). Qed.
Lemma lem6592225 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6592226 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _87021 k dom f) = (term1006 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6592225 A) (@lem6592224 A K _87021 k dom f)). Qed.
Lemma lem6592228 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6592229 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6592228 A (K -> K) P). Qed.
Lemma lem6592230 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _87021 k dom f) = (term1010 A K _87021 k dom f).
Proof. exact (@lem6592229 A K (term1011 A K _87021 k dom f)). Qed.
Lemma lem6592231 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _87021 k dom f neut) = (term1003 A K _87021 k dom f neut).
Proof. exact (eq_refl (term1012 A K _87021 k dom f neut)). Qed.
Lemma lem6592232 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6592233 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _87021 k dom f neut j) = (term1014 A K _87021 k dom f neut j).
Proof. exact (MK_COMB (@lem6592231 A K _87021 k dom f neut) (@lem6592232 K j)). Qed.
Lemma lem6592234 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _87021 k dom f neut j) = (term1001 A K _87021 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _87021 k dom f neut j)). Qed.
Lemma lem6592235 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _87021 k dom f neut j) = (term1001 A K _87021 k dom f neut j).
Proof. exact (TRANS (@lem6592233 A K _87021 k dom f neut j) (@lem6592234 A K _87021 k dom f neut j)). Qed.
Lemma lem6592236 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _87021 k dom f neut) = (term1003 A K _87021 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6592235 A K _87021 k dom f neut j)). Qed.
Lemma lem6592237 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6592238 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _87021 k dom f neut) = (term1004 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592237 K) (@lem6592236 A K _87021 k dom f neut)). Qed.
Lemma lem6592239 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _87021 k dom f) = (term1005 A K _87021 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6592238 A K _87021 k dom f neut)). Qed.
Lemma lem6592240 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6592241 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _87021 k dom f) = (term1006 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6592240 A) (@lem6592239 A K _87021 k dom f)). Qed.
Lemma lem6592242 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592243 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _87021 k dom f) = (term1019 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6592242) (@lem6592241 A K _87021 k dom f)). Qed.
Lemma lem6592244 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _87021 k dom f neut) = (term1003 A K _87021 k dom f neut).
Proof. exact (eq_refl (term1012 A K _87021 k dom f neut)). Qed.
Lemma lem6592245 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6592246 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _87021 k dom f j neut) = (term1021 A K _87021 k dom f j neut).
Proof. exact (MK_COMB (@lem6592244 A K _87021 k dom f neut) (@lem6592245 A K j neut)). Qed.
Lemma lem6592247 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _87021 k dom f j neut) = (term1022 A K _87021 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _87021 k dom f j neut)). Qed.
Lemma lem6592248 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _87021 k dom f j neut) = (term1022 A K _87021 k dom f j neut).
Proof. exact (TRANS (@lem6592246 A K _87021 k dom f j neut) (@lem6592247 A K _87021 k dom f j neut)). Qed.
Lemma lem6592249 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _87021 k dom f j) = (term1024 A K _87021 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6592248 A K _87021 k dom f j neut)). Qed.
Lemma lem6592250 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6592251 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _87021 k dom f j) = (term1026 A K _87021 k dom f j).
Proof. exact (MK_COMB (@lem6592250 A) (@lem6592249 A K _87021 k dom f j)). Qed.
Lemma lem6592252 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _87021 k dom f) = (term1028 A K _87021 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6592251 A K _87021 k dom f j)). Qed.
Lemma lem6592253 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6592254 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _87021 k dom f) = (term1029 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6592253 A K) (@lem6592252 A K _87021 k dom f)). Qed.
Lemma lem6592255 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _87021 k dom f) = (term1010 A K _87021 k dom f)) = ((term1006 A K _87021 k dom f) = (term1029 A K _87021 k dom f)).
Proof. exact (MK_COMB (@lem6592243 A K _87021 k dom f) (@lem6592254 A K _87021 k dom f)). Qed.
Lemma lem6592256 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _87021 k dom f) = (term1029 A K _87021 k dom f).
Proof. exact (EQ_MP (@lem6592255 A K _87021 k dom f) (@lem6592230 A K _87021 k dom f)). Qed.
Lemma lem6592257 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _87021 k dom f) = (term1029 A K _87021 k dom f).
Proof. exact (TRANS (@lem6592226 A K _87021 k dom f) (@lem6592256 A K _87021 k dom f)). Qed.
Lemma lem6592258 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _87021 k dom) = (term1030 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6592257 A K _87021 k dom f)). Qed.
Lemma lem6592259 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6592260 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _87021 k dom) = (term1031 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6592259 A K) (@lem6592258 A K _87021 k dom)). Qed.
Lemma lem6592262 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6592263 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6592262 (K -> A) (type1411 A K) P). Qed.
Lemma lem6592264 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _87021 k dom) = (term1035 A K _87021 k dom).
Proof. exact (@lem6592263 A K (term1036 A K _87021 k dom)). Qed.
Lemma lem6592265 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _87021 k dom f) = (term1028 A K _87021 k dom f).
Proof. exact (eq_refl (term1037 A K _87021 k dom f)). Qed.
Lemma lem6592266 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6592267 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _87021 k dom f j) = (term1039 A K _87021 k dom f j).
Proof. exact (MK_COMB (@lem6592265 A K _87021 k dom f) (@lem6592266 A K j)). Qed.
Lemma lem6592268 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _87021 k dom f j) = (term1026 A K _87021 k dom f j).
Proof. exact (eq_refl (term1039 A K _87021 k dom f j)). Qed.
Lemma lem6592269 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _87021 k dom f j) = (term1026 A K _87021 k dom f j).
Proof. exact (TRANS (@lem6592267 A K _87021 k dom f j) (@lem6592268 A K _87021 k dom f j)). Qed.
Lemma lem6592270 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _87021 k dom f) = (term1028 A K _87021 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6592269 A K _87021 k dom f j)). Qed.
Lemma lem6592271 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6592272 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _87021 k dom f) = (term1029 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6592271 A K) (@lem6592270 A K _87021 k dom f)). Qed.
Lemma lem6592273 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _87021 k dom) = (term1030 A K _87021 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6592272 A K _87021 k dom f)). Qed.
Lemma lem6592274 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6592275 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _87021 k dom) = (term1031 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6592274 A K) (@lem6592273 A K _87021 k dom)). Qed.
Lemma lem6592276 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592277 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _87021 k dom) = (term1044 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6592276) (@lem6592275 A K _87021 k dom)). Qed.
Lemma lem6592278 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _87021 k dom f) = (term1028 A K _87021 k dom f).
Proof. exact (eq_refl (term1037 A K _87021 k dom f)). Qed.
Lemma lem6592279 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6592280 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _87021 k dom j f) = (term1046 A K _87021 k dom j f).
Proof. exact (MK_COMB (@lem6592278 A K _87021 k dom f) (@lem6592279 A K j f)). Qed.
Lemma lem6592281 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _87021 k dom j f) = (term1047 A K _87021 k dom j f).
Proof. exact (eq_refl (term1046 A K _87021 k dom j f)). Qed.
Lemma lem6592282 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _87021 k dom j f) = (term1047 A K _87021 k dom j f).
Proof. exact (TRANS (@lem6592280 A K _87021 k dom j f) (@lem6592281 A K _87021 k dom j f)). Qed.
Lemma lem6592283 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _87021 k dom j) = (term1049 A K _87021 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6592282 A K _87021 k dom j f)). Qed.
Lemma lem6592284 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6592285 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _87021 k dom j) = (term1051 A K _87021 k dom j).
Proof. exact (MK_COMB (@lem6592284 A K) (@lem6592283 A K _87021 k dom j)). Qed.
Lemma lem6592286 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _87021 k dom) = (term1053 A K _87021 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6592285 A K _87021 k dom j)). Qed.
Lemma lem6592287 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6592288 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _87021 k dom) = (term1054 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6592287 A K) (@lem6592286 A K _87021 k dom)). Qed.
Lemma lem6592289 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _87021 k dom) = (term1035 A K _87021 k dom)) = ((term1031 A K _87021 k dom) = (term1054 A K _87021 k dom)).
Proof. exact (MK_COMB (@lem6592277 A K _87021 k dom) (@lem6592288 A K _87021 k dom)). Qed.
Lemma lem6592290 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _87021 k dom) = (term1054 A K _87021 k dom).
Proof. exact (EQ_MP (@lem6592289 A K _87021 k dom) (@lem6592264 A K _87021 k dom)). Qed.
Lemma lem6592291 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _87021 k dom) = (term1054 A K _87021 k dom).
Proof. exact (TRANS (@lem6592260 A K _87021 k dom) (@lem6592290 A K _87021 k dom)). Qed.
Lemma lem6592292 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term925 A K _87021 k) = (term1055 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6592291 A K _87021 k dom)). Qed.
Lemma lem6592293 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6592294 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term940 A K _87021 k) = (term1056 A K _87021 k).
Proof. exact (MK_COMB (@lem6592293 A) (@lem6592292 A K _87021 k)). Qed.
Lemma lem6592296 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6592297 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6592296 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6592298 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1059 A K _87021 k) = (term1060 A K _87021 k).
Proof. exact (@lem6592297 A K (term1061 A K _87021 k)). Qed.
Lemma lem6592299 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _87021 k dom) = (term1053 A K _87021 k dom).
Proof. exact (eq_refl (term1062 A K _87021 k dom)). Qed.
Lemma lem6592300 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6592301 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _87021 k dom j) = (term1064 A K _87021 k dom j).
Proof. exact (MK_COMB (@lem6592299 A K _87021 k dom) (@lem6592300 A K j)). Qed.
Lemma lem6592302 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _87021 k dom j) = (term1051 A K _87021 k dom j).
Proof. exact (eq_refl (term1064 A K _87021 k dom j)). Qed.
Lemma lem6592303 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _87021 k dom j) = (term1051 A K _87021 k dom j).
Proof. exact (TRANS (@lem6592301 A K _87021 k dom j) (@lem6592302 A K _87021 k dom j)). Qed.
Lemma lem6592304 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _87021 k dom) = (term1053 A K _87021 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6592303 A K _87021 k dom j)). Qed.
Lemma lem6592305 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6592306 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _87021 k dom) = (term1054 A K _87021 k dom).
Proof. exact (MK_COMB (@lem6592305 A K) (@lem6592304 A K _87021 k dom)). Qed.
Lemma lem6592307 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1067 A K _87021 k) = (term1055 A K _87021 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6592306 A K _87021 k dom)). Qed.
Lemma lem6592308 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6592309 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1059 A K _87021 k) = (term1056 A K _87021 k).
Proof. exact (MK_COMB (@lem6592308 A) (@lem6592307 A K _87021 k)). Qed.
Lemma lem6592310 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592311 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1068 A K _87021 k) = (term1069 A K _87021 k).
Proof. exact (MK_COMB (@lem6592310) (@lem6592309 A K _87021 k)). Qed.
Lemma lem6592312 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _87021 k dom) = (term1053 A K _87021 k dom).
Proof. exact (eq_refl (term1062 A K _87021 k dom)). Qed.
Lemma lem6592313 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6592314 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _87021 k j dom) = (term1071 A K _87021 k j dom).
Proof. exact (MK_COMB (@lem6592312 A K _87021 k dom) (@lem6592313 A K j dom)). Qed.
Lemma lem6592315 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _87021 k j dom) = (term1072 A K _87021 k j dom).
Proof. exact (eq_refl (term1071 A K _87021 k j dom)). Qed.
Lemma lem6592316 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _87021 k j dom) = (term1072 A K _87021 k j dom).
Proof. exact (TRANS (@lem6592314 A K _87021 k j dom) (@lem6592315 A K _87021 k j dom)). Qed.
Lemma lem6592317 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _87021 k j) = (term1074 A K _87021 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6592316 A K _87021 k j dom)). Qed.
Lemma lem6592318 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6592319 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _87021 k j) = (term1076 A K _87021 k j).
Proof. exact (MK_COMB (@lem6592318 A) (@lem6592317 A K _87021 k j)). Qed.
Lemma lem6592320 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1077 A K _87021 k) = (term1078 A K _87021 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6592319 A K _87021 k j)). Qed.
Lemma lem6592321 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6592322 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1060 A K _87021 k) = (term1079 A K _87021 k).
Proof. exact (MK_COMB (@lem6592321 A K) (@lem6592320 A K _87021 k)). Qed.
Lemma lem6592323 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : ((term1059 A K _87021 k) = (term1060 A K _87021 k)) = ((term1056 A K _87021 k) = (term1079 A K _87021 k)).
Proof. exact (MK_COMB (@lem6592311 A K _87021 k) (@lem6592322 A K _87021 k)). Qed.
Lemma lem6592324 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1056 A K _87021 k) = (term1079 A K _87021 k).
Proof. exact (EQ_MP (@lem6592323 A K _87021 k) (@lem6592298 A K _87021 k)). Qed.
Lemma lem6592325 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term940 A K _87021 k) = (term1079 A K _87021 k).
Proof. exact (TRANS (@lem6592294 A K _87021 k) (@lem6592324 A K _87021 k)). Qed.
Lemma lem6592326 {A K : Type'} (_87021 : type835 A K) : (term947 A K _87021) = (term1080 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592325 A K _87021 k)). Qed.
Lemma lem6592327 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592328 {A K : Type'} (_87021 : type835 A K) : (term962 A K _87021) = (term1081 A K _87021).
Proof. exact (MK_COMB (@lem6592327 K) (@lem6592326 A K _87021)). Qed.
Lemma lem6592330 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6592331 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6592330 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6592332 {A K : Type'} (_87021 : type835 A K) : (term1084 A K _87021) = (term1085 A K _87021).
Proof. exact (@lem6592331 A K (term1086 A K _87021)). Qed.
Lemma lem6592333 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1087 A K _87021 k) = (term1078 A K _87021 k).
Proof. exact (eq_refl (term1087 A K _87021 k)). Qed.
Lemma lem6592334 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6592335 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _87021 k j) = (term1089 A K _87021 k j).
Proof. exact (MK_COMB (@lem6592333 A K _87021 k) (@lem6592334 A K j)). Qed.
Lemma lem6592336 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _87021 k j) = (term1076 A K _87021 k j).
Proof. exact (eq_refl (term1089 A K _87021 k j)). Qed.
Lemma lem6592337 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _87021 k j) = (term1076 A K _87021 k j).
Proof. exact (TRANS (@lem6592335 A K _87021 k j) (@lem6592336 A K _87021 k j)). Qed.
Lemma lem6592338 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1090 A K _87021 k) = (term1078 A K _87021 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6592337 A K _87021 k j)). Qed.
Lemma lem6592339 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6592340 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1091 A K _87021 k) = (term1079 A K _87021 k).
Proof. exact (MK_COMB (@lem6592339 A K) (@lem6592338 A K _87021 k)). Qed.
Lemma lem6592341 {A K : Type'} (_87021 : type835 A K) : (term1092 A K _87021) = (term1080 A K _87021).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592340 A K _87021 k)). Qed.
Lemma lem6592342 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592343 {A K : Type'} (_87021 : type835 A K) : (term1084 A K _87021) = (term1081 A K _87021).
Proof. exact (MK_COMB (@lem6592342 K) (@lem6592341 A K _87021)). Qed.
Lemma lem6592344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592345 {A K : Type'} (_87021 : type835 A K) : (term1093 A K _87021) = (term1094 A K _87021).
Proof. exact (MK_COMB (@lem6592344) (@lem6592343 A K _87021)). Qed.
Lemma lem6592346 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (term1087 A K _87021 k) = (term1078 A K _87021 k).
Proof. exact (eq_refl (term1087 A K _87021 k)). Qed.
Lemma lem6592347 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6592348 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _87021 j k) = (term1096 A K _87021 j k).
Proof. exact (MK_COMB (@lem6592346 A K _87021 k) (@lem6592347 A K j k)). Qed.
Lemma lem6592349 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _87021 j k) = (term1097 A K _87021 j k).
Proof. exact (eq_refl (term1096 A K _87021 j k)). Qed.
Lemma lem6592350 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _87021 j k) = (term1097 A K _87021 j k).
Proof. exact (TRANS (@lem6592348 A K _87021 j k) (@lem6592349 A K _87021 j k)). Qed.
Lemma lem6592351 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) : (term1098 A K _87021 j) = (term1099 A K _87021 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6592350 A K _87021 j k)). Qed.
Lemma lem6592352 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6592353 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) : (term1100 A K _87021 j) = (term1101 A K _87021 j).
Proof. exact (MK_COMB (@lem6592352 K) (@lem6592351 A K _87021 j)). Qed.
Lemma lem6592354 {A K : Type'} (_87021 : type835 A K) : (term1102 A K _87021) = (term1103 A K _87021).
Proof. exact (fun_ext (fun j : type834 A K => @lem6592353 A K _87021 j)). Qed.
Lemma lem6592355 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6592356 {A K : Type'} (_87021 : type835 A K) : (term1085 A K _87021) = (term1104 A K _87021).
Proof. exact (MK_COMB (@lem6592355 A K) (@lem6592354 A K _87021)). Qed.
Lemma lem6592357 {A K : Type'} (_87021 : type835 A K) : ((term1084 A K _87021) = (term1085 A K _87021)) = ((term1081 A K _87021) = (term1104 A K _87021)).
Proof. exact (MK_COMB (@lem6592345 A K _87021) (@lem6592356 A K _87021)). Qed.
Lemma lem6592358 {A K : Type'} (_87021 : type835 A K) : (term1081 A K _87021) = (term1104 A K _87021).
Proof. exact (EQ_MP (@lem6592357 A K _87021) (@lem6592332 A K _87021)). Qed.
Lemma lem6592359 {A K : Type'} (_87021 : type835 A K) : (term962 A K _87021) = (term1104 A K _87021).
Proof. exact (TRANS (@lem6592328 A K _87021) (@lem6592358 A K _87021)). Qed.
Lemma lem6592360 {A K : Type'} (_87021 : type835 A K) : (term959 A K _87021) = (term959 A K _87021).
Proof. exact (eq_refl (term959 A K _87021)). Qed.
Lemma lem6592361 {A K : Type'} (_87021 : type835 A K) : (term963 A K _87021) = (term1105 A K _87021).
Proof. exact (MK_COMB (@lem6592360 A K _87021) (@lem6592359 A K _87021)). Qed.
Lemma lem6592363 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6592364 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6592363 (type834 A K) P Q). Qed.
Lemma lem6592365 {A K : Type'} (_87021 : type835 A K) : (term1110 A K _87021) = (term1111 A K _87021).
Proof. exact (@lem6592364 A K (term957 A K _87021) (term1103 A K _87021)). Qed.
Lemma lem6592366 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) : (term1112 A K _87021 j) = (term1101 A K _87021 j).
Proof. exact (eq_refl (term1112 A K _87021 j)). Qed.
Lemma lem6592367 {A K : Type'} (_87021 : type835 A K) : (term1113 A K _87021) = (term1103 A K _87021).
Proof. exact (fun_ext (fun j : type834 A K => @lem6592366 A K _87021 j)). Qed.
Lemma lem6592368 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6592369 {A K : Type'} (_87021 : type835 A K) : (term1114 A K _87021) = (term1104 A K _87021).
Proof. exact (MK_COMB (@lem6592368 A K) (@lem6592367 A K _87021)). Qed.
Lemma lem6592370 {A K : Type'} (_87021 : type835 A K) : (term959 A K _87021) = (term959 A K _87021).
Proof. exact (eq_refl (term959 A K _87021)). Qed.
Lemma lem6592371 {A K : Type'} (_87021 : type835 A K) : (term1110 A K _87021) = (term1105 A K _87021).
Proof. exact (MK_COMB (@lem6592370 A K _87021) (@lem6592369 A K _87021)). Qed.
Lemma lem6592372 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592373 {A K : Type'} (_87021 : type835 A K) : (term1115 A K _87021) = (term1116 A K _87021).
Proof. exact (MK_COMB (@lem6592372) (@lem6592371 A K _87021)). Qed.
Lemma lem6592374 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) : (term1112 A K _87021 j) = (term1101 A K _87021 j).
Proof. exact (eq_refl (term1112 A K _87021 j)). Qed.
Lemma lem6592375 {A K : Type'} (_87021 : type835 A K) : (term959 A K _87021) = (term959 A K _87021).
Proof. exact (eq_refl (term959 A K _87021)). Qed.
Lemma lem6592376 {A K : Type'} (_87021 : type835 A K) (j : type834 A K) : (term1117 A K _87021 j) = (term1118 A K _87021 j).
Proof. exact (MK_COMB (@lem6592375 A K _87021) (@lem6592374 A K _87021 j)). Qed.
Lemma lem6592377 {A K : Type'} (_87021 : type835 A K) : (term1119 A K _87021) = (term1120 A K _87021).
Proof. exact (fun_ext (fun j : type834 A K => @lem6592376 A K _87021 j)). Qed.
Lemma lem6592378 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6592379 {A K : Type'} (_87021 : type835 A K) : (term1111 A K _87021) = (term1121 A K _87021).
Proof. exact (MK_COMB (@lem6592378 A K) (@lem6592377 A K _87021)). Qed.
Lemma lem6592380 {A K : Type'} (_87021 : type835 A K) : ((term1110 A K _87021) = (term1111 A K _87021)) = ((term1105 A K _87021) = (term1121 A K _87021)).
Proof. exact (MK_COMB (@lem6592373 A K _87021) (@lem6592379 A K _87021)). Qed.
Lemma lem6592381 {A K : Type'} (_87021 : type835 A K) : (term1105 A K _87021) = (term1121 A K _87021).
Proof. exact (EQ_MP (@lem6592380 A K _87021) (@lem6592365 A K _87021)). Qed.
Lemma lem6592382 {A K : Type'} (_87021 : type835 A K) : (term963 A K _87021) = (term1121 A K _87021).
Proof. exact (TRANS (@lem6592361 A K _87021) (@lem6592381 A K _87021)). Qed.
Lemma lem6592383 {A K : Type'} (_87021 : type835 A K) : (term849 A K _87021) = (term1121 A K _87021).
Proof. exact (TRANS (@lem6592169 A K _87021) (@lem6592382 A K _87021)). Qed.
Lemma lem6592384 {A K : Type'} (_87021 : type835 A K) : (term815 A K _87021) = (term1121 A K _87021).
Proof. exact (TRANS (@lem6591402 A K _87021) (@lem6592383 A K _87021)). Qed.
Lemma lem6592385 {A K : Type'} (_87021 : type835 A K) (h1 : term815 A K _87021) : term1121 A K _87021.
Proof. exact (EQ_MP (@lem6592384 A K _87021) (@lem6590665 A K _87021 h1)). Qed.
Lemma lem6592646 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6592648 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6592649 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6592648 A K dom f j) (@lem6592646 A K f j neut)). Qed.
Lemma lem6592650 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6592651 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6592650 A K dom f j neut) (@lem6592649 A K dom f j neut)). Qed.
Lemma lem6592653 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6592654 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6592653 K k j) (@lem6592651 A K dom f j neut)). Qed.
Lemma lem6592655 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6592656 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6592655 A K k dom f j neut) (@lem6592654 A K k dom f j neut)). Qed.
Lemma lem6592658 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6592659 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6592658 K ltle j i) (@lem6592656 A K k dom f j neut)). Qed.
Lemma lem6592660 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6592661 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6592660 A K ltle i k dom f j neut) (@lem6592659 A K ltle i k dom f j neut)). Qed.
Lemma lem6592662 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6592663 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6592664 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6592663) (@lem6592661 A K ltle i k dom f j neut)). Qed.
Lemma lem6592665 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6592664 A K ltle i k dom f j neut) (@lem6592662 K j i)). Qed.
Lemma lem6592666 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6592667 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6592666 A K ltle k dom f neut j i) (@lem6592665 A K ltle k dom f neut j i)). Qed.
Lemma lem6592668 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6592667 A K ltle k dom f neut j i)). Qed.
Lemma lem6592669 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6592670 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592669 K) (@lem6592668 A K ltle k dom f neut i)). Qed.
Lemma lem6592685 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6592686 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6592685 K k ltle j i)). Qed.
Lemma lem6592687 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6592688 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6592687 K) (@lem6592686 K k ltle i)). Qed.
Lemma lem6592689 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term719 A K _87021 k dom f neut).
Proof. exact (eq_refl (term719 A K _87021 k dom f neut)). Qed.
Lemma lem6592690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6592691 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6592690) (@lem6592688 K k ltle i)). Qed.
Lemma lem6592692 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87021 k dom f neut) = (term1143 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592691 K k ltle i) (@lem6592689 A K _87021 k dom f neut)). Qed.
Lemma lem6592693 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6592694 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592693) (@lem6592670 A K ltle k dom f neut i)). Qed.
Lemma lem6592695 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87021 k dom f neut) = (term1145 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592694 A K ltle k dom f neut i) (@lem6592692 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6592697 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6592698 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87021 k dom f neut) = (term1146 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592697 K k i) (@lem6592695 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6592700 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6592701 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87021 k dom f neut) = (term1349 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592700 A K dom f i) (@lem6592698 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6592703 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6592804 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87021 k dom f neut) = (term1350 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6592703 A K f i neut) (@lem6592701 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6592805 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1350 A K ltle i _87021 k dom f neut.
Proof. exact (EQ_MP (@lem6592804 A K ltle i _87021 k dom f neut) (@lem6590667 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6592809 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1122 A K f i neut) = ((f i) = neut).
Proof. exact (@lem16933 ((f i) = neut)). Qed.
Lemma lem6592811 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1123 A K dom f i).
Proof. exact (eq_refl (term1123 A K dom f i)). Qed.
Lemma lem6592812 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1124 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (MK_COMB (@lem6592811 A K dom f i) (@lem6592809 A K f i neut)). Qed.
Lemma lem6592813 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1124 A K dom f i neut).
Proof. exact (@lem17045 (term591 A K dom f i) (term572 A K f i neut)). Qed.
Lemma lem6592814 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (TRANS (@lem6592813 A K dom f i neut) (@lem6592812 A K dom f i neut)). Qed.
Lemma lem6592837 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2100 A K ltle k dom f neut j i) = (term2101 A K ltle k dom f neut j i).
Proof. exact (@lem17362 (term1559 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6592838 {K : Type'} (P : K -> Prop) : (term2102 K P) = (term2103 K P).
Proof. exact (@lem18392 K P). Qed.
Lemma lem6592839 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2104 A K ltle k dom f neut i) = (term2105 A K ltle k dom f neut i).
Proof. exact (@lem6592838 K (term1565 A K ltle k dom f neut i)). Qed.
Lemma lem6592840 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2106 A K ltle k dom f neut i j) = (term1563 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term2106 A K ltle k dom f neut i j)). Qed.
Lemma lem6592841 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6592842 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2107 A K ltle k dom f neut i j) = (term2100 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6592841) (@lem6592840 A K ltle k dom f neut j i)). Qed.
Lemma lem6592843 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2107 A K ltle k dom f neut i j) = (term2101 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6592842 A K ltle k dom f neut j i) (@lem6592837 A K ltle k dom f neut j i)). Qed.
Lemma lem6592844 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2108 A K ltle k dom f neut i) = (term2109 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6592843 A K ltle k dom f neut j i)). Qed.
Lemma lem6592845 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592846 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2105 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592845 K) (@lem6592844 A K ltle k dom f neut i)). Qed.
Lemma lem6592847 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2104 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6592839 A K ltle k dom f neut i) (@lem6592846 A K ltle k dom f neut i)). Qed.
Lemma lem6592848 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6592849 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2111 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (MK_COMB (@lem6592848) (@lem6592814 A K dom f i neut)). Qed.
Lemma lem6592850 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2113 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592849 A K dom f i neut) (@lem6592847 A K ltle k dom f neut i)). Qed.
Lemma lem6592851 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2113 A K ltle k dom f neut i).
Proof. exact (@lem17045 (term595 A K dom f i neut) (term1567 A K ltle k dom f neut i)). Qed.
Lemma lem6592852 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6592851 A K ltle k dom f neut i) (@lem6592850 A K ltle k dom f neut i)). Qed.
Lemma lem6592903 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6592904 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6592903 K P Q). Qed.
Lemma lem6592905 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2115 A K ltle k dom f neut i) = (term2116 A K ltle k dom f neut i).
Proof. exact (@lem6592904 K (term1125 A K dom f i neut) (term2109 A K ltle k dom f neut i)). Qed.
Lemma lem6592906 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2117 A K ltle k dom f neut i j) = (term2101 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term2117 A K ltle k dom f neut i j)). Qed.
Lemma lem6592907 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2118 A K ltle k dom f neut i) = (term2109 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6592906 A K ltle k dom f neut j i)). Qed.
Lemma lem6592908 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592909 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2119 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592908 K) (@lem6592907 A K ltle k dom f neut i)). Qed.
Lemma lem6592910 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (eq_refl (term2112 A K dom f i neut)). Qed.
Lemma lem6592911 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2115 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592910 A K dom f i neut) (@lem6592909 A K ltle k dom f neut i)). Qed.
Lemma lem6592912 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6592913 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2120 A K ltle k dom f neut i) = (term2121 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592912) (@lem6592911 A K ltle k dom f neut i)). Qed.
Lemma lem6592914 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2117 A K ltle k dom f neut i j) = (term2101 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term2117 A K ltle k dom f neut i j)). Qed.
Lemma lem6592915 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (eq_refl (term2112 A K dom f i neut)). Qed.
Lemma lem6592916 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2122 A K ltle k dom f neut i j) = (term2123 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6592915 A K dom f i neut) (@lem6592914 A K ltle k dom f neut j i)). Qed.
Lemma lem6592917 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2124 A K ltle k dom f neut i) = (term2125 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6592916 A K ltle k dom f neut j i)). Qed.
Lemma lem6592918 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6592919 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2116 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6592918 K) (@lem6592917 A K ltle k dom f neut i)). Qed.
Lemma lem6592920 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : ((term2115 A K ltle k dom f neut i) = (term2116 A K ltle k dom f neut i)) = ((term2114 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i)).
Proof. exact (MK_COMB (@lem6592913 A K ltle k dom f neut i) (@lem6592919 A K ltle k dom f neut i)). Qed.
Lemma lem6592922 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2114 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (EQ_MP (@lem6592920 A K ltle k dom f neut i) (@lem6592905 A K ltle k dom f neut i)). Qed.
Lemma lem6592923 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6592852 A K ltle k dom f neut i) (@lem6592922 A K ltle k dom f neut i)). Qed.
Lemma lem6592924 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term1572 A K ltle k dom f neut i) : term2126 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6592923 A K ltle k dom f neut i) (@lem6590668 A K ltle k dom f neut i h1)). Qed.
Lemma lem6592931 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2123 A K ltle k dom f neut j i) : term2123 A K ltle k dom f neut j i.
Proof. exact (h1). Qed.
Lemma lem6593651 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6593652 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6593663 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593664 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6593663 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6593665 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) : (_87021 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021 k).
Proof. exact (@lem6593664 A K _87021 k). Qed.
Lemma lem6593666 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6593667 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_87021 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021 k dom).
Proof. exact (MK_COMB (@lem6593665 A K _87021 k) (@lem6593666 A dom)). Qed.
Lemma lem6593669 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593670 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6593669 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6593671 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021 k dom) = (term1163 A K _87021 k dom).
Proof. exact (@lem6593670 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87021 k) dom). Qed.
Lemma lem6593672 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_87021 k dom) = (term1163 A K _87021 k dom).
Proof. exact (TRANS (@lem6593667 A K _87021 k dom) (@lem6593671 A K _87021 k dom)). Qed.
Lemma lem6593673 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6593674 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_87021 k dom f) = (term1164 A K _87021 k dom f).
Proof. exact (MK_COMB (@lem6593672 A K _87021 k dom) (@lem6593673 A K f)). Qed.
Lemma lem6593676 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593677 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6593676 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6593678 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _87021 k dom f) = (term1165 A K _87021 k dom f).
Proof. exact (@lem6593677 A K (term1163 A K _87021 k dom) f). Qed.
Lemma lem6593679 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_87021 k dom f) = (term1165 A K _87021 k dom f).
Proof. exact (TRANS (@lem6593674 A K _87021 k dom f) (@lem6593678 A K _87021 k dom f)). Qed.
Lemma lem6593680 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6593681 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87021 k dom f neut) = (term1166 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593679 A K _87021 k dom f) (@lem6593680 A neut)). Qed.
Lemma lem6593683 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593684 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6593683 A (K -> Prop) f x). Qed.
Lemma lem6593685 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _87021 k dom f neut) = (term1167 A K _87021 k dom f neut).
Proof. exact (@lem6593684 A K (term1165 A K _87021 k dom f) neut). Qed.
Lemma lem6593687 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87021 k dom f neut) = (term1167 A K _87021 k dom f neut).
Proof. exact (TRANS (@lem6593681 A K _87021 k dom f neut) (@lem6593685 A K _87021 k dom f neut)). Qed.
Lemma lem6593688 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _87021 k dom f neut) = (term1168 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593652 K) (@lem6593687 A K _87021 k dom f neut)). Qed.
Lemma lem6593690 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593691 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6593690 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6593692 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _87021 k dom f neut) = (term1169 A K _87021 k dom f neut).
Proof. exact (@lem6593691 K (@GSPEC K) (term1167 A K _87021 k dom f neut)). Qed.
Lemma lem6593693 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _87021 k dom f neut) = (term1169 A K _87021 k dom f neut).
Proof. exact (TRANS (@lem6593688 A K _87021 k dom f neut) (@lem6593692 A K _87021 k dom f neut)). Qed.
Lemma lem6593694 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term1170 A K _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593651 K) (@lem6593693 A K _87021 k dom f neut)). Qed.
Lemma lem6593696 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593697 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6593696 (K -> Prop) Prop f x). Qed.
Lemma lem6593698 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _87021 k dom f neut) = (term1171 A K _87021 k dom f neut).
Proof. exact (@lem6593697 K (@FINITE K) (term1169 A K _87021 k dom f neut)). Qed.
Lemma lem6593699 {A K : Type'} (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87021 k dom f neut) = (term1171 A K _87021 k dom f neut).
Proof. exact (TRANS (@lem6593694 A K _87021 k dom f neut) (@lem6593698 A K _87021 k dom f neut)). Qed.
Lemma lem6593706 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593707 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6593706 K (K -> Prop) f x). Qed.
Lemma lem6593708 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6593707 K ltle j). Qed.
Lemma lem6593709 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6593710 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6593708 K ltle j) (@lem6593709 K i)). Qed.
Lemma lem6593712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593713 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593712 K Prop f x). Qed.
Lemma lem6593714 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6593713 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6593716 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6593710 K ltle j i) (@lem6593714 K ltle j i)). Qed.
Lemma lem6593723 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593724 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6593723 K (K -> Prop) f x). Qed.
Lemma lem6593725 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6593724 K ltle i). Qed.
Lemma lem6593726 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6593727 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6593725 K ltle i) (@lem6593726 K j)). Qed.
Lemma lem6593729 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593730 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593729 K Prop f x). Qed.
Lemma lem6593731 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6593730 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6593733 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6593727 K ltle i j) (@lem6593731 K ltle i j)). Qed.
Lemma lem6593734 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593735 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6593734) (@lem6593733 K ltle i j)). Qed.
Lemma lem6593736 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6593735 K ltle i j) (@lem6593716 K ltle j i)). Qed.
Lemma lem6593743 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6593744 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6593743 K i j) (@lem6593736 K ltle j i)). Qed.
Lemma lem6593745 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593750 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593751 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593750 K Prop f x). Qed.
Lemma lem6593753 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6593751 K k j). Qed.
Lemma lem6593754 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6593745) (@lem6593753 K k j)). Qed.
Lemma lem6593755 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593756 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6593755) (@lem6593754 K k j)). Qed.
Lemma lem6593757 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6593756 K k j) (@lem6593744 K ltle j i)). Qed.
Lemma lem6593758 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6593757 K k ltle j i)). Qed.
Lemma lem6593759 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6593760 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6593759 K) (@lem6593758 K k ltle i)). Qed.
Lemma lem6593761 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6593762 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6593761) (@lem6593760 K k ltle i)). Qed.
Lemma lem6593763 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _87021 k dom f neut) = (term1184 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593762 K k ltle i) (@lem6593699 A K _87021 k dom f neut)). Qed.
Lemma lem6593768 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6593769 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6593774 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593775 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6593774 K A f x). Qed.
Lemma lem6593777 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6593775 A K f j). Qed.
Lemma lem6593778 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6593779 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6593769 A) (@lem6593777 A K f j)). Qed.
Lemma lem6593780 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6593779 A K f j) (@lem6593778 A neut)). Qed.
Lemma lem6593781 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593782 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6593787 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593788 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6593787 K A f x). Qed.
Lemma lem6593790 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6593788 A K f j). Qed.
Lemma lem6593791 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6593782 A dom) (@lem6593790 A K f j)). Qed.
Lemma lem6593793 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593794 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6593793 A Prop f x). Qed.
Lemma lem6593795 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6593794 A dom (@I (K -> A) f j)). Qed.
Lemma lem6593796 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6593791 A K dom f j) (@lem6593795 A K dom f j)). Qed.
Lemma lem6593797 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6593781) (@lem6593796 A K dom f j)). Qed.
Lemma lem6593798 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593799 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6593798) (@lem6593797 A K dom f j)). Qed.
Lemma lem6593800 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6593799 A K dom f j) (@lem6593780 A K f j neut)). Qed.
Lemma lem6593801 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593806 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593807 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593806 K Prop f x). Qed.
Lemma lem6593809 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6593807 K k j). Qed.
Lemma lem6593810 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6593801) (@lem6593809 K k j)). Qed.
Lemma lem6593811 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593812 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6593811) (@lem6593810 K k j)). Qed.
Lemma lem6593813 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6593812 K k j) (@lem6593800 A K dom f j neut)). Qed.
Lemma lem6593814 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593821 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593822 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6593821 K (K -> Prop) f x). Qed.
Lemma lem6593823 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6593822 K ltle j). Qed.
Lemma lem6593824 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6593825 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6593823 K ltle j) (@lem6593824 K i)). Qed.
Lemma lem6593827 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593828 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593827 K Prop f x). Qed.
Lemma lem6593829 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6593828 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6593831 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6593825 K ltle j i) (@lem6593829 K ltle j i)). Qed.
Lemma lem6593832 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6593814) (@lem6593831 K ltle j i)). Qed.
Lemma lem6593833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593834 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6593833) (@lem6593832 K ltle j i)). Qed.
Lemma lem6593835 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6593834 K ltle j i) (@lem6593813 A K k dom f j neut)). Qed.
Lemma lem6593836 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6593837 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6593836) (@lem6593835 A K ltle i k dom f j neut)). Qed.
Lemma lem6593838 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6593837 A K ltle i k dom f j neut) (@lem6593768 K j i)). Qed.
Lemma lem6593839 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6593838 A K ltle k dom f neut j i)). Qed.
Lemma lem6593840 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6593841 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6593840 K) (@lem6593839 A K ltle k dom f neut i)). Qed.
Lemma lem6593842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6593843 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6593842) (@lem6593841 A K ltle k dom f neut i)). Qed.
Lemma lem6593844 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _87021 k dom f neut) = (term1203 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593843 A K ltle k dom f neut i) (@lem6593763 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6593845 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593850 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593851 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6593850 K Prop f x). Qed.
Lemma lem6593853 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6593851 K k i). Qed.
Lemma lem6593854 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6593845) (@lem6593853 K k i)). Qed.
Lemma lem6593855 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6593856 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6593855) (@lem6593854 K k i)). Qed.
Lemma lem6593857 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _87021 k dom f neut) = (term1205 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593856 K k i) (@lem6593844 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6593858 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6593863 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593864 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6593863 K A f x). Qed.
Lemma lem6593866 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6593864 A K f i). Qed.
Lemma lem6593867 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6593858 A dom) (@lem6593866 A K f i)). Qed.
Lemma lem6593869 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593870 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6593869 A Prop f x). Qed.
Lemma lem6593871 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6593870 A dom (@I (K -> A) f i)). Qed.
Lemma lem6593872 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6593867 A K dom f i) (@lem6593871 A K dom f i)). Qed.
Lemma lem6593873 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6593874 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term1209 A K dom f i).
Proof. exact (MK_COMB (@lem6593873) (@lem6593872 A K dom f i)). Qed.
Lemma lem6593875 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1349 A K ltle i _87021 k dom f neut) = (term1353 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593874 A K dom f i) (@lem6593857 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6593876 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6593877 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6593882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6593883 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6593882 K A f x). Qed.
Lemma lem6593885 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6593883 A K f i). Qed.
Lemma lem6593886 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6593887 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6593877 A) (@lem6593885 A K f i)). Qed.
Lemma lem6593888 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6593887 A K f i) (@lem6593886 A neut)). Qed.
Lemma lem6593889 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term572 A K f i neut) = (term1208 A K f i neut).
Proof. exact (MK_COMB (@lem6593876) (@lem6593888 A K f i neut)). Qed.
Lemma lem6593890 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6593891 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1354 A K f i neut).
Proof. exact (MK_COMB (@lem6593890) (@lem6593889 A K f i neut)). Qed.
Lemma lem6593892 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1350 A K ltle i _87021 k dom f neut) = (term1355 A K ltle i _87021 k dom f neut).
Proof. exact (MK_COMB (@lem6593891 A K f i neut) (@lem6593875 A K ltle i _87021 k dom f neut)). Qed.
Lemma lem6593893 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1355 A K ltle i _87021 k dom f neut.
Proof. exact (EQ_MP (@lem6593892 A K ltle i _87021 k dom f neut) (@lem6592805 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6594112 {K : Type'} (j : K) (i : K) : (term2 K j i) = (term2 K j i).
Proof. exact (eq_refl (term2 K j i)). Qed.
Lemma lem6594113 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6594114 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6594119 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594120 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6594119 K A f x). Qed.
Lemma lem6594122 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6594120 A K f j). Qed.
Lemma lem6594123 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6594124 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6594114 A) (@lem6594122 A K f j)). Qed.
Lemma lem6594125 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6594124 A K f j) (@lem6594123 A neut)). Qed.
Lemma lem6594126 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term572 A K f j neut) = (term1208 A K f j neut).
Proof. exact (MK_COMB (@lem6594113) (@lem6594125 A K f j neut)). Qed.
Lemma lem6594127 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6594132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594133 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6594132 K A f x). Qed.
Lemma lem6594135 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6594133 A K f j). Qed.
Lemma lem6594136 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6594127 A dom) (@lem6594135 A K f j)). Qed.
Lemma lem6594138 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594139 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6594138 A Prop f x). Qed.
Lemma lem6594140 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6594139 A dom (@I (K -> A) f j)). Qed.
Lemma lem6594141 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6594136 A K dom f j) (@lem6594140 A K dom f j)). Qed.
Lemma lem6594142 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6594143 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term592 A K dom f j) = (term1209 A K dom f j).
Proof. exact (MK_COMB (@lem6594142) (@lem6594141 A K dom f j)). Qed.
Lemma lem6594144 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term595 A K dom f j neut) = (term1210 A K dom f j neut).
Proof. exact (MK_COMB (@lem6594143 A K dom f j) (@lem6594126 A K f j neut)). Qed.
Lemma lem6594149 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594150 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6594149 K Prop f x). Qed.
Lemma lem6594152 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6594150 K k j). Qed.
Lemma lem6594159 {K : Type'} (j : K) (i : K) : (term38 K j i) = (term38 K j i).
Proof. exact (eq_refl (term38 K j i)). Qed.
Lemma lem6594160 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term39 K i k j) = (term1219 K i k j).
Proof. exact (MK_COMB (@lem6594159 K j i) (@lem6594152 K k j)). Qed.
Lemma lem6594161 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6594162 {K : Type'} (i : K) (k : K -> Prop) (j : K) : (term41 K i k j) = (term1220 K i k j).
Proof. exact (MK_COMB (@lem6594161) (@lem6594160 K i k j)). Qed.
Lemma lem6594163 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term658 A K i k dom f j neut) = (term1221 A K i k dom f j neut).
Proof. exact (MK_COMB (@lem6594162 K i k j) (@lem6594144 A K dom f j neut)). Qed.
Lemma lem6594170 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594171 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6594170 K (K -> Prop) f x). Qed.
Lemma lem6594172 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6594171 K ltle j). Qed.
Lemma lem6594173 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6594174 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6594172 K ltle j) (@lem6594173 K i)). Qed.
Lemma lem6594176 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594177 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6594176 K Prop f x). Qed.
Lemma lem6594178 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6594177 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6594180 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6594174 K ltle j i) (@lem6594178 K ltle j i)). Qed.
Lemma lem6594181 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6594182 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term2127 K ltle j i).
Proof. exact (MK_COMB (@lem6594181) (@lem6594180 K ltle j i)). Qed.
Lemma lem6594183 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1559 A K ltle i k dom f j neut) = (term2128 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6594182 K ltle j i) (@lem6594163 A K i k dom f j neut)). Qed.
Lemma lem6594184 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6594185 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term2129 A K ltle i k dom f j neut) = (term2130 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6594184) (@lem6594183 A K ltle i k dom f j neut)). Qed.
Lemma lem6594186 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2101 A K ltle k dom f neut j i) = (term2131 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6594185 A K ltle i k dom f j neut) (@lem6594112 K j i)). Qed.
Lemma lem6594187 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6594192 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594193 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6594192 K A f x). Qed.
Lemma lem6594195 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6594193 A K f i). Qed.
Lemma lem6594196 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6594197 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6594187 A) (@lem6594195 A K f i)). Qed.
Lemma lem6594198 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6594197 A K f i) (@lem6594196 A neut)). Qed.
Lemma lem6594199 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6594200 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6594205 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594206 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6594205 K A f x). Qed.
Lemma lem6594208 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6594206 A K f i). Qed.
Lemma lem6594209 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6594200 A dom) (@lem6594208 A K f i)). Qed.
Lemma lem6594211 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6594212 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6594211 A Prop f x). Qed.
Lemma lem6594213 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6594212 A dom (@I (K -> A) f i)). Qed.
Lemma lem6594214 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6594209 A K dom f i) (@lem6594213 A K dom f i)). Qed.
Lemma lem6594215 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1189 A K dom f i) = (term1190 A K dom f i).
Proof. exact (MK_COMB (@lem6594199) (@lem6594214 A K dom f i)). Qed.
Lemma lem6594216 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6594217 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1191 A K dom f i).
Proof. exact (MK_COMB (@lem6594216) (@lem6594215 A K dom f i)). Qed.
Lemma lem6594218 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1125 A K dom f i neut) = (term1192 A K dom f i neut).
Proof. exact (MK_COMB (@lem6594217 A K dom f i) (@lem6594198 A K f i neut)). Qed.
Lemma lem6594219 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6594220 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2132 A K dom f i neut).
Proof. exact (MK_COMB (@lem6594219) (@lem6594218 A K dom f i neut)). Qed.
Lemma lem6594221 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term2123 A K ltle k dom f neut j i) = (term2133 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6594220 A K dom f i neut) (@lem6594186 A K ltle k dom f neut j i)). Qed.
Lemma lem6594222 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2123 A K ltle k dom f neut j i) : term2133 A K ltle k dom f neut j i.
Proof. exact (EQ_MP (@lem6594221 A K ltle k dom f neut j i) (@lem6592931 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6594668 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1353 A K ltle i _87021 k dom f neut.
Proof. exact (proj2 (@lem6593893 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6594670 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1205 A K ltle i _87021 k dom f neut.
Proof. exact (proj2 (@lem6594668 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6594672 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1203 A K ltle i _87021 k dom f neut.
Proof. exact (proj2 (@lem6594670 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6594675 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (proj1 (@lem6594672 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6594680 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1192 A K dom f i neut) : term1192 A K dom f i neut.
Proof. exact (h1). Qed.
Lemma lem6594681 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2131 A K ltle k dom f neut j i.
Proof. exact (h1). Qed.
Lemma lem6594685 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2128 A K ltle i k dom f j neut.
Proof. exact (proj1 (@lem6594681 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6594686 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1221 A K i k dom f j neut.
Proof. exact (proj2 (@lem6594685 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6594688 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1210 A K dom f j neut.
Proof. exact (proj2 (@lem6594686 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6594689 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1219 K i k j.
Proof. exact (proj1 (@lem6594686 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6595105 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6595517 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6595945 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6596237 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1199 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1199 A K ltle k dom f neut j i)). Qed.
Lemma lem6596238 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1200 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6596237 A K ltle k dom f neut j i)). Qed.
Lemma lem6596239 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6596241 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1201 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6596239 K) (@lem6596238 A K ltle k dom f neut i)). Qed.
Lemma lem6596242 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6596241 A K ltle k dom f neut i) (@lem6594675 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6596373 {K : Type'} (k : K -> Prop) (j : K) (h1 : @I (K -> Prop) k j) : @I (K -> Prop) k j.
Proof. exact (h1). Qed.
Lemma lem6596776 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2134 A K ltle k dom f neut i _87158.
Proof. exact (@lem6596242 A K ltle i _87021 k dom f neut h1 _87158). Qed.
Lemma lem6596777 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2134 A K ltle k dom f neut i _87158) = (term1199 A K ltle k dom f neut _87158 i).
Proof. exact (eq_refl (term2134 A K ltle k dom f neut i _87158)). Qed.
Lemma lem6596778 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1199 A K ltle k dom f neut _87158 i.
Proof. exact (EQ_MP (@lem6596777 A K ltle k dom f neut _87158 i) (@lem6596776 A K _87158 ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6596925 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6597095 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1208 A K f i neut.
Proof. exact (proj1 (@lem6593893 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6597141 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6597357 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2 K j i.
Proof. exact (proj2 (@lem6594681 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6597365 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6597543 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term1199 A K ltle k dom f neut _87158 i) = (term2135 A K ltle k dom f neut _87158 i).
Proof. exact (@lem6586915 (term1195 K ltle _87158 i) (term1193 A K k dom f _87158 neut) (_87158 = i)). Qed.
Lemma lem6597544 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2136 A K k dom f neut _87158 i) = (term2137 A K k dom f neut _87158 i).
Proof. exact (@lem6586915 (term1178 K k _87158) (term1192 A K dom f _87158 neut) (_87158 = i)). Qed.
Lemma lem6597551 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2138 A K dom f neut _87158 i) = (term2139 A K dom f neut _87158 i).
Proof. exact (@lem6586915 (term1190 A K dom f _87158) ((@I (K -> A) f _87158) = neut) (_87158 = i)). Qed.
Lemma lem6597552 {K : Type'} (k : K -> Prop) (_87158 : K) : (term1179 K k _87158) = (term1179 K k _87158).
Proof. exact (eq_refl (term1179 K k _87158)). Qed.
Lemma lem6597555 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2137 A K k dom f neut _87158 i) = (term2140 A K k dom f neut _87158 i).
Proof. exact (MK_COMB (@lem6597552 K k _87158) (@lem6597551 A K dom f neut _87158 i)). Qed.
Lemma lem6597556 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2136 A K k dom f neut _87158 i) = (term2140 A K k dom f neut _87158 i).
Proof. exact (TRANS (@lem6597544 A K k dom f neut _87158 i) (@lem6597555 A K k dom f neut _87158 i)). Qed.
Lemma lem6597557 {K : Type'} (ltle : type1402 K) (_87158 : K) (i : K) : (term1196 K ltle _87158 i) = (term1196 K ltle _87158 i).
Proof. exact (eq_refl (term1196 K ltle _87158 i)). Qed.
Lemma lem6597560 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2135 A K ltle k dom f neut _87158 i) = (term2141 A K ltle k dom f neut _87158 i).
Proof. exact (MK_COMB (@lem6597557 K ltle _87158 i) (@lem6597556 A K k dom f neut _87158 i)). Qed.
Lemma lem6597562 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term1199 A K ltle k dom f neut _87158 i) = (term2141 A K ltle k dom f neut _87158 i).
Proof. exact (TRANS (@lem6597543 A K ltle k dom f neut _87158 i) (@lem6597560 A K ltle k dom f neut _87158 i)). Qed.
Lemma lem6597563 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2141 A K ltle k dom f neut _87158 i.
Proof. exact (EQ_MP (@lem6597562 A K ltle k dom f neut _87158 i) (@lem6596778 A K _87158 ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6597587 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1208 A K f j neut.
Proof. exact (proj2 (@lem6594688 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6597589 {K : Type'} (k : K -> Prop) (j : K) (h1 : @I (K -> Prop) k j) : @I (K -> Prop) k j.
Proof. exact (h1). Qed.
Lemma lem6597742 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : neut = (@I (K -> A) f i).
Proof. exact (SYM (@lem6597141 A K f i neut h1)). Qed.
Lemma lem6597812 {A K : Type'} (f : K -> A) (i : K) : (term1234 A K f i) = (term1234 A K f i).
Proof. exact (eq_refl (term1234 A K f i)). Qed.
Lemma lem6597813 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1235 A K f i neut) = (term1236 A K f i).
Proof. exact (MK_COMB (@lem6597812 A K f i) (@lem6597742 A K f i neut h1)). Qed.
Lemma lem6597814 {A K : Type'} (f : K -> A) (i : K) : (term1236 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1236 A K f i)). Qed.
Lemma lem6597815 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1238 A K f i neut).
Proof. exact (eq_refl (term1238 A K f i neut)). Qed.
Lemma lem6597816 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1235 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6597815 A K f i neut) (@lem6597814 A K f i)). Qed.
Lemma lem6597817 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1235 A K f i neut) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1235 A K f i neut)). Qed.
Lemma lem6597818 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6597819 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1239 A K f i neut).
Proof. exact (MK_COMB (@lem6597818) (@lem6597817 A K f i neut)). Qed.
Lemma lem6597820 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6597821 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1237 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6597819 A K f i neut) (@lem6597820 A K f i)). Qed.
Lemma lem6597822 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6597816 A K neut f i) (@lem6597821 A K neut f i)). Qed.
Lemma lem6597823 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1208 A K f i neut) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6597822 A K neut f i) (@lem6597813 A K f i neut h1)). Qed.
Lemma lem6597824 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6597823 A K f i neut h2) (@lem6597095 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6598187 {K : Type'} (i : K) : (term83 K i) = (term83 K i).
Proof. exact (eq_refl (term83 K i)). Qed.
Lemma lem6598188 {K : Type'} (j : K) (i : K) (h1 : j = i) : (term84 K i j) = (term85 K i).
Proof. exact (MK_COMB (@lem6598187 K i) (@lem6597365 K j i h1)). Qed.
Lemma lem6598189 {K : Type'} (i : K) : (term85 K i) = (term86 K i).
Proof. exact (eq_refl (term85 K i)). Qed.
Lemma lem6598190 {K : Type'} (i : K) (j : K) : (term87 K i j) = (term87 K i j).
Proof. exact (eq_refl (term87 K i j)). Qed.
Lemma lem6598191 {K : Type'} (j : K) (i : K) : ((term84 K i j) = (term85 K i)) = ((term84 K i j) = (term86 K i)).
Proof. exact (MK_COMB (@lem6598190 K i j) (@lem6598189 K i)). Qed.
Lemma lem6598192 {K : Type'} (j : K) (i : K) : (term84 K i j) = (term2 K j i).
Proof. exact (eq_refl (term84 K i j)). Qed.
Lemma lem6598193 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6598194 {K : Type'} (j : K) (i : K) : (term87 K i j) = (term88 K j i).
Proof. exact (MK_COMB (@lem6598193) (@lem6598192 K j i)). Qed.
Lemma lem6598195 {K : Type'} (i : K) : (term86 K i) = (term86 K i).
Proof. exact (eq_refl (term86 K i)). Qed.
Lemma lem6598196 {K : Type'} (j : K) (i : K) : ((term84 K i j) = (term86 K i)) = ((term2 K j i) = (term86 K i)).
Proof. exact (MK_COMB (@lem6598194 K j i) (@lem6598195 K i)). Qed.
Lemma lem6598197 {K : Type'} (j : K) (i : K) : ((term84 K i j) = (term85 K i)) = ((term2 K j i) = (term86 K i)).
Proof. exact (TRANS (@lem6598191 K j i) (@lem6598196 K j i)). Qed.
Lemma lem6598198 {K : Type'} (j : K) (i : K) (h1 : j = i) : (term2 K j i) = (term86 K i).
Proof. exact (EQ_MP (@lem6598197 K j i) (@lem6598188 K j i h1)). Qed.
Lemma lem6598199 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : term86 K i.
Proof. exact (EQ_MP (@lem6598198 K j i h2) (@lem6597357 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6599144 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1188 A K dom f i.
Proof. exact (proj1 (@lem6594668 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6599145 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6599144 A K ltle i _87021 k dom f neut h1). Qed.
Lemma lem6599147 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6599148 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6599147 (term1188 A K dom f i)). Qed.
Lemma lem6599149 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6599148 A K dom f i) (@lem6599145 A K ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6599152 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6599154 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6599152 (term1188 A K dom f i)). Qed.
Lemma lem6599157 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6599154 A K dom f i) (@lem6596925 A K dom f i h1)). Qed.
Lemma lem6599160 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (@lem6599157 A K dom f i h1 (@lem6599149 A K ltle i _87021 k dom f neut h2)). Qed.
Lemma lem6599161 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6599160 A K ltle i _87021 k dom f neut h1 h2). Qed.
Lemma lem6599163 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6599164 : term96 = False.
Proof. exact (@lem6599163 False). Qed.
Lemma lem6599165 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6599164) (@lem6599161 A K ltle i _87021 k dom f neut h1 h2)). Qed.
Lemma lem6599931 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6599932 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6599931 A x). Qed.
Lemma lem6599933 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6599932 A (@I (K -> A) f i)). Qed.
Lemma lem6599934 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6599933 A K f i). Qed.
Lemma lem6599936 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6599937 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6599936 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6599938 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6599937 A K f i) (@lem6599934 A K f i)). Qed.
Lemma lem6599941 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6599943 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6599941 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6599946 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6599943 A K f i) (@lem6597824 A K ltle _87021 k dom f i neut h1 h2)). Qed.
Lemma lem6599949 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (@lem6599946 A K ltle _87021 k dom f i neut h1 h2 (@lem6599938 A K f i)). Qed.
Lemma lem6599950 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6599949 A K ltle _87021 k dom f i neut h1 h2). Qed.
Lemma lem6599952 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6599953 : term96 = False.
Proof. exact (@lem6599952 False). Qed.
Lemma lem6600720 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6600721 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6600720 K x). Qed.
Lemma lem6600722 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6600721 K i). Qed.
Lemma lem6600723 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6600722 K i). Qed.
Lemma lem6600725 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6600726 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6600725 (i = i)). Qed.
Lemma lem6600727 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6600726 K i) (@lem6600723 K i)). Qed.
Lemma lem6600730 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6600732 {K : Type'} (i : K) : (term86 K i) = (term95 K i).
Proof. exact (@lem6600730 (i = i)). Qed.
Lemma lem6600735 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : term95 K i.
Proof. exact (EQ_MP (@lem6600732 K i) (@lem6598199 A K ltle k dom f neut j i h1 h2)). Qed.
Lemma lem6600738 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : False.
Proof. exact (@lem6600735 A K ltle k dom f neut j i h1 h2 (@lem6600727 K i)). Qed.
Lemma lem6600739 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6600738 A K ltle k dom f neut j i h1 h2). Qed.
Lemma lem6600741 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6600742 : term96 = False.
Proof. exact (@lem6600741 False). Qed.
Lemma lem6601509 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1172 K ltle j i.
Proof. exact (proj1 (@lem6594685 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601510 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2142 K ltle j i.
Proof. exact (fun h0 : term1195 K ltle j i => @lem6601509 A K ltle k dom f neut j i h1). Qed.
Lemma lem6601512 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6601513 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term2142 K ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6601512 (term1172 K ltle j i)). Qed.
Lemma lem6601514 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1172 K ltle j i.
Proof. exact (EQ_MP (@lem6601513 K ltle j i) (@lem6601510 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601516 {K : Type'} (k : K -> Prop) (j : K) (h1 : @I (K -> Prop) k j) : @I (K -> Prop) k j.
Proof. exact (h1). Qed.
Lemma lem6601517 {K : Type'} (k : K -> Prop) (j : K) (h1 : @I (K -> Prop) k j) : term1251 K k j.
Proof. exact (fun h0 : term1178 K k j => @lem6601516 K k j h1). Qed.
Lemma lem6601519 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6601520 {K : Type'} (k : K -> Prop) (j : K) : (term1251 K k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6601519 (@I (K -> Prop) k j)). Qed.
Lemma lem6601521 {K : Type'} (k : K -> Prop) (j : K) (h1 : @I (K -> Prop) k j) : @I (K -> Prop) k j.
Proof. exact (EQ_MP (@lem6601520 K k j) (@lem6601517 K k j h1)). Qed.
Lemma lem6601523 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1188 A K dom f j.
Proof. exact (proj1 (@lem6594688 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601524 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1247 A K dom f j.
Proof. exact (fun h0 : term1190 A K dom f j => @lem6601523 A K ltle k dom f neut j i h1). Qed.
Lemma lem6601526 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6601527 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1247 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6601526 (term1188 A K dom f j)). Qed.
Lemma lem6601528 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1188 A K dom f j.
Proof. exact (EQ_MP (@lem6601527 A K dom f j) (@lem6601524 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601530 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2 K j i.
Proof. exact (proj2 (@lem6594681 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601531 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2143 K j i.
Proof. exact (fun h0 : j = i => @lem6601530 A K ltle k dom f neut j i h1). Qed.
Lemma lem6601533 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6601534 {K : Type'} (j : K) (i : K) : (term2143 K j i) = (term2 K j i).
Proof. exact (@lem6601533 (j = i)). Qed.
Lemma lem6601535 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2 K j i.
Proof. exact (EQ_MP (@lem6601534 K j i) (@lem6601531 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601541 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601542 {A K : Type'} (k : K -> Prop) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2141 A K ltle k dom f neut _87158 i) = (term2145 A K k ltle dom f neut _87158 i).
Proof. exact (@lem6601541 (term1178 K k _87158) (term1195 K ltle _87158 i) (term2139 A K dom f neut _87158 i)). Qed.
Lemma lem6601556 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601557 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (f : K -> A) (neut : A) (_87158 : K) (i : K) : (term2146 A K ltle dom f neut _87158 i) = (term2147 A K dom ltle f neut _87158 i).
Proof. exact (@lem6601556 (term1190 A K dom f _87158) (term1195 K ltle _87158 i) (term2148 A K f neut _87158 i)). Qed.
Lemma lem6601571 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601572 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2149 A K ltle f neut _87158 i) = (term2150 A K f neut ltle _87158 i).
Proof. exact (@lem6601571 ((@I (K -> A) f _87158) = neut) (term1195 K ltle _87158 i) (_87158 = i)). Qed.
Lemma lem6601588 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6601589 {K : Type'} (ltle : type1402 K) (_87158 : K) (i : K) : (term2151 K ltle _87158 i) = (term2152 K ltle _87158 i).
Proof. exact (@lem6601588 (_87158 = i) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601597 {A K : Type'} (f : K -> A) (_87158 : K) (neut : A) : (term2153 A K f _87158 neut) = (term2153 A K f _87158 neut).
Proof. exact (eq_refl (term2153 A K f _87158 neut)). Qed.
Lemma lem6601598 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2150 A K f neut ltle _87158 i) = (term2154 A K f neut ltle _87158 i).
Proof. exact (MK_COMB (@lem6601597 A K f _87158 neut) (@lem6601589 K ltle _87158 i)). Qed.
Lemma lem6601609 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2149 A K ltle f neut _87158 i) = (term2154 A K f neut ltle _87158 i).
Proof. exact (TRANS (@lem6601572 A K f neut ltle _87158 i) (@lem6601598 A K f neut ltle _87158 i)). Qed.
Lemma lem6601610 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) : (term1191 A K dom f _87158) = (term1191 A K dom f _87158).
Proof. exact (eq_refl (term1191 A K dom f _87158)). Qed.
Lemma lem6601611 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2147 A K dom ltle f neut _87158 i) = (term2155 A K dom f neut ltle _87158 i).
Proof. exact (MK_COMB (@lem6601610 A K dom f _87158) (@lem6601609 A K f neut ltle _87158 i)). Qed.
Lemma lem6601615 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601616 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2155 A K dom f neut ltle _87158 i) = (term2156 A K neut dom f ltle _87158 i).
Proof. exact (@lem6601615 ((@I (K -> A) f _87158) = neut) (term1190 A K dom f _87158) (term2152 K ltle _87158 i)). Qed.
Lemma lem6601632 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601633 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2157 A K dom f ltle _87158 i) = (term2158 A K dom f ltle _87158 i).
Proof. exact (@lem6601632 (_87158 = i) (term1190 A K dom f _87158) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601651 {A K : Type'} (f : K -> A) (_87158 : K) (neut : A) : (term2153 A K f _87158 neut) = (term2153 A K f _87158 neut).
Proof. exact (eq_refl (term2153 A K f _87158 neut)). Qed.
Lemma lem6601652 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2156 A K neut dom f ltle _87158 i) = (term2159 A K neut dom f ltle _87158 i).
Proof. exact (MK_COMB (@lem6601651 A K f _87158 neut) (@lem6601633 A K dom f ltle _87158 i)). Qed.
Lemma lem6601663 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2155 A K dom f neut ltle _87158 i) = (term2159 A K neut dom f ltle _87158 i).
Proof. exact (TRANS (@lem6601616 A K neut dom f ltle _87158 i) (@lem6601652 A K neut dom f ltle _87158 i)). Qed.
Lemma lem6601664 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2147 A K dom ltle f neut _87158 i) = (term2159 A K neut dom f ltle _87158 i).
Proof. exact (TRANS (@lem6601611 A K dom f neut ltle _87158 i) (@lem6601663 A K neut dom f ltle _87158 i)). Qed.
Lemma lem6601665 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2146 A K ltle dom f neut _87158 i) = (term2159 A K neut dom f ltle _87158 i).
Proof. exact (TRANS (@lem6601557 A K dom ltle f neut _87158 i) (@lem6601664 A K neut dom f ltle _87158 i)). Qed.
Lemma lem6601666 {K : Type'} (k : K -> Prop) (_87158 : K) : (term1179 K k _87158) = (term1179 K k _87158).
Proof. exact (eq_refl (term1179 K k _87158)). Qed.
Lemma lem6601667 {A K : Type'} (k : K -> Prop) (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2145 A K k ltle dom f neut _87158 i) = (term2160 A K k neut dom f ltle _87158 i).
Proof. exact (MK_COMB (@lem6601666 K k _87158) (@lem6601665 A K neut dom f ltle _87158 i)). Qed.
Lemma lem6601671 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601672 {A K : Type'} (neut : A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2160 A K k neut dom f ltle _87158 i) = (term2161 A K neut k dom f ltle _87158 i).
Proof. exact (@lem6601671 ((@I (K -> A) f _87158) = neut) (term1178 K k _87158) (term2158 A K dom f ltle _87158 i)). Qed.
Lemma lem6601688 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601689 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2162 A K k dom f ltle _87158 i) = (term2163 A K k dom f ltle _87158 i).
Proof. exact (@lem6601688 (_87158 = i) (term1178 K k _87158) (term2164 A K dom f ltle _87158 i)). Qed.
Lemma lem6601705 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601706 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2165 A K k dom f ltle _87158 i) = (term2166 A K dom f k ltle _87158 i).
Proof. exact (@lem6601705 (term1190 A K dom f _87158) (term1178 K k _87158) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601722 {K : Type'} (_87158 : K) (i : K) : (term38 K _87158 i) = (term38 K _87158 i).
Proof. exact (eq_refl (term38 K _87158 i)). Qed.
Lemma lem6601723 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2163 A K k dom f ltle _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (MK_COMB (@lem6601722 K _87158 i) (@lem6601706 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601734 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2162 A K k dom f ltle _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601689 A K k dom f ltle _87158 i) (@lem6601723 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601735 {A K : Type'} (f : K -> A) (_87158 : K) (neut : A) : (term2153 A K f _87158 neut) = (term2153 A K f _87158 neut).
Proof. exact (eq_refl (term2153 A K f _87158 neut)). Qed.
Lemma lem6601736 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2161 A K neut k dom f ltle _87158 i) = (term2168 A K neut dom f k ltle _87158 i).
Proof. exact (MK_COMB (@lem6601735 A K f _87158 neut) (@lem6601734 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601747 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2160 A K k neut dom f ltle _87158 i) = (term2168 A K neut dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601672 A K neut k dom f ltle _87158 i) (@lem6601736 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601748 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2145 A K k ltle dom f neut _87158 i) = (term2168 A K neut dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601667 A K k neut dom f ltle _87158 i) (@lem6601747 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601749 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2141 A K ltle k dom f neut _87158 i) = (term2168 A K neut dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601542 A K k ltle dom f neut _87158 i) (@lem6601748 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601750 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6601751 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2169 A K ltle k dom f neut _87158 i) = (term2170 A K neut dom f k ltle _87158 i).
Proof. exact (MK_COMB (@lem6601750) (@lem6601749 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601767 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601768 {A K : Type'} (k : K -> Prop) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2171 A K ltle k dom f _87158 i) = (term2172 A K k ltle dom f _87158 i).
Proof. exact (@lem6601767 (term1178 K k _87158) (term1195 K ltle _87158 i) (term2173 A K dom f _87158 i)). Qed.
Lemma lem6601782 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601783 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2174 A K ltle dom f _87158 i) = (term2175 A K dom f ltle _87158 i).
Proof. exact (@lem6601782 (term1190 A K dom f _87158) (term1195 K ltle _87158 i) (_87158 = i)). Qed.
Lemma lem6601797 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6601798 {K : Type'} (ltle : type1402 K) (_87158 : K) (i : K) : (term2151 K ltle _87158 i) = (term2152 K ltle _87158 i).
Proof. exact (@lem6601797 (_87158 = i) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601806 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) : (term1191 A K dom f _87158) = (term1191 A K dom f _87158).
Proof. exact (eq_refl (term1191 A K dom f _87158)). Qed.
Lemma lem6601807 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2175 A K dom f ltle _87158 i) = (term2157 A K dom f ltle _87158 i).
Proof. exact (MK_COMB (@lem6601806 A K dom f _87158) (@lem6601798 K ltle _87158 i)). Qed.
Lemma lem6601811 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601812 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2157 A K dom f ltle _87158 i) = (term2158 A K dom f ltle _87158 i).
Proof. exact (@lem6601811 (_87158 = i) (term1190 A K dom f _87158) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601830 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2175 A K dom f ltle _87158 i) = (term2158 A K dom f ltle _87158 i).
Proof. exact (TRANS (@lem6601807 A K dom f ltle _87158 i) (@lem6601812 A K dom f ltle _87158 i)). Qed.
Lemma lem6601831 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2174 A K ltle dom f _87158 i) = (term2158 A K dom f ltle _87158 i).
Proof. exact (TRANS (@lem6601783 A K dom f ltle _87158 i) (@lem6601830 A K dom f ltle _87158 i)). Qed.
Lemma lem6601832 {K : Type'} (k : K -> Prop) (_87158 : K) : (term1179 K k _87158) = (term1179 K k _87158).
Proof. exact (eq_refl (term1179 K k _87158)). Qed.
Lemma lem6601833 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2172 A K k ltle dom f _87158 i) = (term2162 A K k dom f ltle _87158 i).
Proof. exact (MK_COMB (@lem6601832 K k _87158) (@lem6601831 A K dom f ltle _87158 i)). Qed.
Lemma lem6601837 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601838 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_87158 : K) (i : K) : (term2162 A K k dom f ltle _87158 i) = (term2163 A K k dom f ltle _87158 i).
Proof. exact (@lem6601837 (_87158 = i) (term1178 K k _87158) (term2164 A K dom f ltle _87158 i)). Qed.
Lemma lem6601854 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6601855 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2165 A K k dom f ltle _87158 i) = (term2166 A K dom f k ltle _87158 i).
Proof. exact (@lem6601854 (term1190 A K dom f _87158) (term1178 K k _87158) (term1195 K ltle _87158 i)). Qed.
Lemma lem6601871 {K : Type'} (_87158 : K) (i : K) : (term38 K _87158 i) = (term38 K _87158 i).
Proof. exact (eq_refl (term38 K _87158 i)). Qed.
Lemma lem6601872 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2163 A K k dom f ltle _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (MK_COMB (@lem6601871 K _87158 i) (@lem6601855 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601883 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2162 A K k dom f ltle _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601838 A K k dom f ltle _87158 i) (@lem6601872 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601884 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2172 A K k ltle dom f _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601833 A K k dom f ltle _87158 i) (@lem6601883 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601885 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2171 A K ltle k dom f _87158 i) = (term2167 A K dom f k ltle _87158 i).
Proof. exact (TRANS (@lem6601768 A K k ltle dom f _87158 i) (@lem6601884 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601886 {A K : Type'} (f : K -> A) (_87158 : K) (neut : A) : (term2153 A K f _87158 neut) = (term2153 A K f _87158 neut).
Proof. exact (eq_refl (term2153 A K f _87158 neut)). Qed.
Lemma lem6601887 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : (term2176 A K neut ltle k dom f _87158 i) = (term2168 A K neut dom f k ltle _87158 i).
Proof. exact (MK_COMB (@lem6601886 A K f _87158 neut) (@lem6601885 A K dom f k ltle _87158 i)). Qed.
Lemma lem6601898 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : ((term2141 A K ltle k dom f neut _87158 i) = (term2176 A K neut ltle k dom f _87158 i)) = ((term2168 A K neut dom f k ltle _87158 i) = (term2168 A K neut dom f k ltle _87158 i)).
Proof. exact (MK_COMB (@lem6601751 A K neut dom f k ltle _87158 i) (@lem6601887 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601900 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6601901 (x : Prop) : (x = x) = True.
Proof. exact (@lem6601900 Prop x). Qed.
Lemma lem6601902 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_87158 : K) (i : K) : ((term2168 A K neut dom f k ltle _87158 i) = (term2168 A K neut dom f k ltle _87158 i)) = True.
Proof. exact (@lem6601901 (term2168 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601903 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : ((term2141 A K ltle k dom f neut _87158 i) = (term2176 A K neut ltle k dom f _87158 i)) = True.
Proof. exact (TRANS (@lem6601898 A K neut dom f k ltle _87158 i) (@lem6601902 A K neut dom f k ltle _87158 i)). Qed.
Lemma lem6601904 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : True = ((term2141 A K ltle k dom f neut _87158 i) = (term2176 A K neut ltle k dom f _87158 i)).
Proof. exact (SYM (@lem6601903 A K neut ltle k dom f _87158 i)). Qed.
Lemma lem6601905 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2141 A K ltle k dom f neut _87158 i) = (term2176 A K neut ltle k dom f _87158 i).
Proof. exact (EQ_MP (@lem6601904 A K neut ltle k dom f _87158 i) (@lem0)). Qed.
Lemma lem6601906 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2176 A K neut ltle k dom f _87158 i.
Proof. exact (EQ_MP (@lem6601905 A K neut ltle k dom f _87158 i) (@lem6597563 A K _87158 ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6601908 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6601909 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_87158 : K) (neut : A) : (term2176 A K neut ltle k dom f _87158 i) = (term2177 A K ltle k dom i f _87158 neut).
Proof. exact (@lem6601908 (term2171 A K ltle k dom f _87158 i) ((@I (K -> A) f _87158) = neut)). Qed.
Lemma lem6601911 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6601912 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2178 A K ltle k dom f _87158 i) = (term2179 A K ltle k dom f _87158 i).
Proof. exact (@lem6601911 (term1195 K ltle _87158 i) (term2180 A K k dom f _87158 i)). Qed.
Lemma lem6601914 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6601915 {K : Type'} (ltle : type1402 K) (_87158 : K) (i : K) : (term2181 K ltle _87158 i) = (term1172 K ltle _87158 i).
Proof. exact (@lem6601914 (term1172 K ltle _87158 i)). Qed.
Lemma lem6601916 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6601917 {K : Type'} (ltle : type1402 K) (_87158 : K) (i : K) : (term2182 K ltle _87158 i) = (term2127 K ltle _87158 i).
Proof. exact (MK_COMB (@lem6601916) (@lem6601915 K ltle _87158 i)). Qed.
Lemma lem6601919 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6601920 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2183 A K k dom f _87158 i) = (term2184 A K k dom f _87158 i).
Proof. exact (@lem6601919 (term1178 K k _87158) (term2173 A K dom f _87158 i)). Qed.
Lemma lem6601922 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6601923 {K : Type'} (k : K -> Prop) (_87158 : K) : (term2185 K k _87158) = (@I (K -> Prop) k _87158).
Proof. exact (@lem6601922 (@I (K -> Prop) k _87158)). Qed.
Lemma lem6601924 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6601925 {K : Type'} (k : K -> Prop) (_87158 : K) : (term2186 K k _87158) = (term1211 K k _87158).
Proof. exact (MK_COMB (@lem6601924) (@lem6601923 K k _87158)). Qed.
Lemma lem6601927 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6601928 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2187 A K dom f _87158 i) = (term2188 A K dom f _87158 i).
Proof. exact (@lem6601927 (term1190 A K dom f _87158) (_87158 = i)). Qed.
Lemma lem6601930 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6601931 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) : (term1379 A K dom f _87158) = (term1188 A K dom f _87158).
Proof. exact (@lem6601930 (term1188 A K dom f _87158)). Qed.
Lemma lem6601932 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6601933 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) : (term2189 A K dom f _87158) = (term1209 A K dom f _87158).
Proof. exact (MK_COMB (@lem6601932) (@lem6601931 A K dom f _87158)). Qed.
Lemma lem6601934 {K : Type'} (_87158 : K) (i : K) : (term2 K _87158 i) = (term2 K _87158 i).
Proof. exact (eq_refl (term2 K _87158 i)). Qed.
Lemma lem6601935 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2188 A K dom f _87158 i) = (term2190 A K dom f _87158 i).
Proof. exact (MK_COMB (@lem6601933 A K dom f _87158) (@lem6601934 K _87158 i)). Qed.
Lemma lem6601936 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2187 A K dom f _87158 i) = (term2190 A K dom f _87158 i).
Proof. exact (TRANS (@lem6601928 A K dom f _87158 i) (@lem6601935 A K dom f _87158 i)). Qed.
Lemma lem6601937 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2184 A K k dom f _87158 i) = (term2191 A K k dom f _87158 i).
Proof. exact (MK_COMB (@lem6601925 K k _87158) (@lem6601936 A K dom f _87158 i)). Qed.
Lemma lem6601938 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2183 A K k dom f _87158 i) = (term2191 A K k dom f _87158 i).
Proof. exact (TRANS (@lem6601920 A K k dom f _87158 i) (@lem6601937 A K k dom f _87158 i)). Qed.
Lemma lem6601939 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2179 A K ltle k dom f _87158 i) = (term2192 A K ltle k dom f _87158 i).
Proof. exact (MK_COMB (@lem6601917 K ltle _87158 i) (@lem6601938 A K k dom f _87158 i)). Qed.
Lemma lem6601940 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2178 A K ltle k dom f _87158 i) = (term2192 A K ltle k dom f _87158 i).
Proof. exact (TRANS (@lem6601912 A K ltle k dom f _87158 i) (@lem6601939 A K ltle k dom f _87158 i)). Qed.
Lemma lem6601941 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6601942 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87158 : K) (i : K) : (term2193 A K ltle k dom f _87158 i) = (term2194 A K ltle k dom f _87158 i).
Proof. exact (MK_COMB (@lem6601941) (@lem6601940 A K ltle k dom f _87158 i)). Qed.
Lemma lem6601943 {A K : Type'} (f : K -> A) (_87158 : K) (neut : A) : ((@I (K -> A) f _87158) = neut) = ((@I (K -> A) f _87158) = neut).
Proof. exact (eq_refl ((@I (K -> A) f _87158) = neut)). Qed.
Lemma lem6601944 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_87158 : K) (neut : A) : (term2177 A K ltle k dom i f _87158 neut) = (term2195 A K ltle k dom i f _87158 neut).
Proof. exact (MK_COMB (@lem6601942 A K ltle k dom f _87158 i) (@lem6601943 A K f _87158 neut)). Qed.
Lemma lem6601945 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_87158 : K) (neut : A) : (term2176 A K neut ltle k dom f _87158 i) = (term2195 A K ltle k dom i f _87158 neut).
Proof. exact (TRANS (@lem6601909 A K ltle k dom i f _87158 neut) (@lem6601944 A K ltle k dom i f _87158 neut)). Qed.
Lemma lem6601947 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term2190 A K dom f j i.
Proof. exact (conj (@lem6601528 A K ltle k dom f neut j i h1) (@lem6601535 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601948 {A K : Type'} (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : @I (K -> Prop) k j) : term2191 A K k dom f j i.
Proof. exact (conj (@lem6601521 K k j h2) (@lem6601947 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601949 {A K : Type'} (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : @I (K -> Prop) k j) : term2192 A K ltle k dom f j i.
Proof. exact (conj (@lem6601514 A K ltle k dom f neut j i h1) (@lem6601948 A K ltle dom f neut i k j h1 h2)). Qed.
Lemma lem6601951 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2195 A K ltle k dom i f _87158 neut.
Proof. exact (EQ_MP (@lem6601945 A K ltle k dom i f _87158 neut) (@lem6601906 A K _87158 ltle i _87021 k dom f neut h1)). Qed.
Lemma lem6601952 {A K : Type'} (_87158 : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2195 A K ltle k dom i f _87158 neut.
Proof. exact (@lem6601951 A K _87158 ltle i _87021 k dom f neut h1). Qed.
Lemma lem6601953 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) : term2195 A K ltle k dom i f j neut.
Proof. exact (@lem6601952 A K j ltle i _87021 k dom f neut h1). Qed.
Lemma lem6601956 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : (@I (K -> A) f j) = neut.
Proof. exact (@lem6601953 A K j ltle i _87021 k dom f neut h1 (@lem6601949 A K ltle dom f neut i k j h2 h3)). Qed.
Lemma lem6601957 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : term1386 A K f j neut.
Proof. exact (fun h0 : term1208 A K f j neut => @lem6601956 A K _87021 ltle dom f neut i k j h1 h2 h3). Qed.
Lemma lem6601959 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6601960 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1386 A K f j neut) = ((@I (K -> A) f j) = neut).
Proof. exact (@lem6601959 ((@I (K -> A) f j) = neut)). Qed.
Lemma lem6601961 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : (@I (K -> A) f j) = neut.
Proof. exact (EQ_MP (@lem6601960 A K f j neut) (@lem6601957 A K _87021 ltle dom f neut i k j h1 h2 h3)). Qed.
Lemma lem6601964 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6601966 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1208 A K f j neut) = (term1387 A K f j neut).
Proof. exact (@lem6601964 ((@I (K -> A) f j) = neut)). Qed.
Lemma lem6601969 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) : term1387 A K f j neut.
Proof. exact (EQ_MP (@lem6601966 A K f j neut) (@lem6597587 A K ltle k dom f neut j i h1)). Qed.
Lemma lem6601972 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : False.
Proof. exact (@lem6601969 A K ltle k dom f neut j i h2 (@lem6601961 A K _87021 ltle dom f neut i k j h1 h2 h3)). Qed.
Lemma lem6601973 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : term96.
Proof. exact (fun h0 : ~ False => @lem6601972 A K _87021 ltle dom f neut i k j h1 h2 h3). Qed.
Lemma lem6601975 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6601976 : term96 = False.
Proof. exact (@lem6601975 False). Qed.
Lemma lem6601977 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : False.
Proof. exact (EQ_MP (@lem6601976) (@lem6601973 A K _87021 ltle dom f neut i k j h1 h2 h3)). Qed.
Lemma lem6601978 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : False.
Proof. exact (EQ_MP (@lem6600742) (@lem6600739 A K ltle k dom f neut j i h1 h2)). Qed.
Lemma lem6601979 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6599953) (@lem6599950 A K ltle _87021 k dom f i neut h1 h2)). Qed.
Lemma lem6601980 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : (@I (K -> Prop) k j) = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j => @lem6601977 A K _87021 ltle dom f neut i k j h1 h2 h3) (fun h4 : False => @lem6597589 K k j h3)). Qed.
Lemma lem6601981 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : False.
Proof. exact (EQ_MP (@lem6601980 A K _87021 ltle dom f neut i k j h1 h2 h3) (@lem6597589 K k j h3)). Qed.
Lemma lem6601982 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : (j = i) = False.
Proof. exact (prop_ext (fun h3 : j = i => @lem6601978 A K ltle k dom f neut j i h1 h2) (fun h3 : False => @lem6597365 K j i h2)). Qed.
Lemma lem6601983 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : False.
Proof. exact (EQ_MP (@lem6601982 A K ltle k dom f neut j i h1 h2) (@lem6597365 K j i h2)). Qed.
Lemma lem6601984 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6601979 A K ltle _87021 k dom f i neut h1 h2) (fun h3 : False => @lem6597141 A K f i neut h2)). Qed.
Lemma lem6601985 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6601984 A K ltle _87021 k dom f i neut h1 h2) (@lem6597141 A K f i neut h2)). Qed.
Lemma lem6601986 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6599165 A K ltle i _87021 k dom f neut h1 h2) (fun h3 : False => @lem6596925 A K dom f i h1)). Qed.
Lemma lem6601987 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6601986 A K ltle i _87021 k dom f neut h1 h2) (@lem6596925 A K dom f i h1)). Qed.
Lemma lem6601988 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : (@I (K -> Prop) k j) = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j => @lem6601981 A K _87021 ltle dom f neut i k j h1 h2 h3) (fun h4 : False => @lem6596373 K k j h3)). Qed.
Lemma lem6601989 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : False.
Proof. exact (EQ_MP (@lem6601988 A K _87021 ltle dom f neut i k j h1 h2 h3) (@lem6596373 K k j h3)). Qed.
Lemma lem6601990 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : (j = i) = False.
Proof. exact (prop_ext (fun h3 : j = i => @lem6601983 A K ltle k dom f neut j i h1 h2) (fun h3 : False => @lem6595945 K j i h2)). Qed.
Lemma lem6601991 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : False.
Proof. exact (EQ_MP (@lem6601990 A K ltle k dom f neut j i h1 h2) (@lem6595945 K j i h2)). Qed.
Lemma lem6601992 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6601985 A K ltle _87021 k dom f i neut h1 h2) (fun h3 : False => @lem6595517 A K f i neut h2)). Qed.
Lemma lem6601993 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6601992 A K ltle _87021 k dom f i neut h1 h2) (@lem6595517 A K f i neut h2)). Qed.
Lemma lem6601994 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6601987 A K ltle i _87021 k dom f neut h1 h2) (fun h3 : False => @lem6595105 A K dom f i h1)). Qed.
Lemma lem6601995 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6601994 A K ltle i _87021 k dom f neut h1 h2) (@lem6595105 A K dom f i h1)). Qed.
Lemma lem6601996 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : (@I (K -> Prop) k j) = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j => @lem6601989 A K _87021 ltle dom f neut i k j h1 h2 h3) (fun h4 : False => @lem6596373 K k j h3)). Qed.
Lemma lem6601997 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) (h3 : @I (K -> Prop) k j) : False.
Proof. exact (EQ_MP (@lem6601996 A K _87021 ltle dom f neut i k j h1 h2 h3) (@lem6596373 K k j h3)). Qed.
Lemma lem6601998 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : (j = i) = False.
Proof. exact (prop_ext (fun h3 : j = i => @lem6601991 A K ltle k dom f neut j i h1 h2) (fun h3 : False => @lem6595945 K j i h2)). Qed.
Lemma lem6601999 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term2131 A K ltle k dom f neut j i) (h2 : j = i) : False.
Proof. exact (EQ_MP (@lem6601998 A K ltle k dom f neut j i h1 h2) (@lem6595945 K j i h2)). Qed.
Lemma lem6602000 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6601993 A K ltle _87021 k dom f i neut h1 h2) (fun h3 : False => @lem6595517 A K f i neut h2)). Qed.
Lemma lem6602001 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6602000 A K ltle _87021 k dom f i neut h1 h2) (@lem6595517 A K f i neut h2)). Qed.
Lemma lem6602002 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6601995 A K ltle i _87021 k dom f neut h1 h2) (fun h3 : False => @lem6595105 A K dom f i h1)). Qed.
Lemma lem6602003 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6602002 A K ltle i _87021 k dom f neut h1 h2) (@lem6595105 A K dom f i h1)). Qed.
Lemma lem6602004 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2131 A K ltle k dom f neut j i) : False.
Proof. exact (or_elim (@lem6594689 A K ltle k dom f neut j i h2) (fun h0 : j = i => @lem6601999 A K ltle k dom f neut j i h2 h0) (fun h0 : @I (K -> Prop) k j => @lem6601997 A K _87021 ltle dom f neut i k j h1 h2 h0)). Qed.
Lemma lem6602005 {A K : Type'} (ltle : type1402 K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term1192 A K dom f i neut) : False.
Proof. exact (or_elim (@lem6594680 A K dom f i neut h2) (fun h0 : term1190 A K dom f i => @lem6602003 A K ltle i _87021 k dom f neut h0 h1) (fun h0 : (@I (K -> A) f i) = neut => @lem6602001 A K ltle _87021 k dom f i neut h1 h0)). Qed.
Lemma lem6602006 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term1312 A K ltle i _87021 k dom f neut) (h2 : term2123 A K ltle k dom f neut j i) : False.
Proof. exact (or_elim (@lem6594222 A K ltle k dom f neut j i h2) (fun h0 : term1192 A K dom f i neut => @lem6602005 A K ltle _87021 k dom f i neut h1 h0) (fun h0 : term2131 A K ltle k dom f neut j i => @lem6602004 A K _87021 ltle k dom f neut j i h1 h0)). Qed.
Lemma lem6602007 {A K : Type'} (_87021 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) (h1 : term815 A K _87021) (h2 : term1312 A K ltle i _87021 k dom f neut) (h3 : term2123 A K ltle k dom f neut j i) : False.
Proof. exact (ex_elim (@lem6592385 A K _87021 h1) (fun j' : type834 A K => fun h0 : term1120 A K _87021 j' => @lem6602006 A K _87021 ltle k dom f neut j i h2 h3)). Qed.
Lemma lem6602008 {A K : Type'} (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87021) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87021 k dom f neut) : False.
Proof. exact (ex_elim (@lem6592924 A K ltle k dom f neut i h2) (fun j : K => fun h0 : term2125 A K ltle k dom f neut i j => @lem6602007 A K _87021 ltle k dom f neut j i h1 h3 h0)). Qed.
Lemma lem6602009 {A K : Type'} (_87022 : type397 A K) (_87020 : type1452 A K) (op : type1400 A) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87021) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87021 k dom f neut) : term2099 A K _87022 _87021 _87020 i dom neut op ltle k f.
Proof. exact (fun h0 : term2196 A K _87022 _87021 _87020 i dom neut op ltle k f => @lem6602008 A K ltle i _87021 k dom f neut h1 h2 h3). Qed.
Lemma lem6602010 {A K : Type'} (_87022 : type397 A K) (_87020 : type1452 A K) (op : type1400 A) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87021) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87021 k dom f neut) : (term1844 A K _87022 op ltle _87021 _87020 i k dom f neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6590672 A K _87022 _87021 _87020 i dom neut op ltle k f) (@lem6602009 A K _87022 _87020 op ltle i _87021 k dom f neut h1 h2 h3)). Qed.
Lemma lem6602011 {A K : Type'} (_87022 : type397 A K) (_87020 : type1452 A K) (op : type1400 A) (ltle : type1402 K) (i : K) (_87021 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87021) (h2 : term1312 A K ltle i _87021 k dom f neut) : term1846 A K _87022 _87021 _87020 i dom neut op ltle k f.
Proof. exact (fun h0 : term1572 A K ltle k dom f neut i => @lem6602010 A K _87022 _87020 op ltle i _87021 k dom f neut h1 h0 h2). Qed.
Lemma lem6602012 {A K : Type'} (_87022 : type397 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1847 A K _87022 _87021 _87020 i dom neut op ltle k f.
Proof. exact (fun h0 : term1312 A K ltle i _87021 k dom f neut => @lem6602011 A K _87022 _87020 op ltle i _87021 k dom f neut h1 h0). Qed.
Lemma lem6602013 {A K : Type'} (_87022 : type397 A K) (_87020 : type1452 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1848 A K _87022 _87021 _87020 i dom neut op ltle k f.
Proof. exact (fun h0 : term1700 A K _87020 => @lem6602012 A K _87022 _87020 i dom neut op ltle k f _87021 h1). Qed.
Lemma lem6602018 {A K : Type'} (_87022 : type397 A K) (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1850 A K _87022 _87021 i dom neut op ltle k f.
Proof. exact (fun _87020 : type1452 A K => @lem6602013 A K _87022 _87020 i dom neut op ltle k f _87021 h1). Qed.
Lemma lem6602023 {A K : Type'} (_87022 : type397 A K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1852 A K _87022 _87021 dom neut op ltle k f.
Proof. exact (fun i : K => @lem6602018 A K _87022 i dom neut op ltle k f _87021 h1). Qed.
Lemma lem6602028 {A K : Type'} (_87022 : type397 A K) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1854 A K _87022 _87021 neut op ltle k f.
Proof. exact (fun dom : A -> Prop => @lem6602023 A K _87022 dom neut op ltle k f _87021 h1). Qed.
Lemma lem6602033 {A K : Type'} (_87022 : type397 A K) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1856 A K _87022 _87021 op ltle k f.
Proof. exact (fun neut : A => @lem6602028 A K _87022 neut op ltle k f _87021 h1). Qed.
Lemma lem6602038 {A K : Type'} (_87022 : type397 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1858 A K _87022 _87021 ltle k f.
Proof. exact (fun op : type1400 A => @lem6602033 A K _87022 op ltle k f _87021 h1). Qed.
Lemma lem6602043 {A K : Type'} (_87022 : type397 A K) (k : K -> Prop) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1860 A K _87022 _87021 k f.
Proof. exact (fun ltle : type1402 K => @lem6602038 A K _87022 ltle k f _87021 h1). Qed.
Lemma lem6602048 {A K : Type'} (_87022 : type397 A K) (f : K -> A) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1862 A K _87022 _87021 f.
Proof. exact (fun k : K -> Prop => @lem6602043 A K _87022 k f _87021 h1). Qed.
Lemma lem6602053 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) (h1 : term815 A K _87021) : term1864 A K _87022 _87021.
Proof. exact (fun f : K -> A => @lem6602048 A K _87022 f _87021 h1). Qed.
Lemma lem6602054 {A K : Type'} (_87022 : type397 A K) (_87021 : type835 A K) : term1865 A K _87022 _87021.
Proof. exact (fun h0 : term815 A K _87021 => @lem6602053 A K _87022 _87021 h0). Qed.
Lemma lem6602059 {A K : Type'} (_87022 : type397 A K) : term1867 A K _87022.
Proof. exact (fun _87021 : type835 A K => @lem6602054 A K _87022 _87021). Qed.
Lemma lem6602060 {A K : Type'} (_87023 : type1362 K) (_87022 : type397 A K) : term2030 A K _87023 _87022.
Proof. exact (fun h0 : term2028 A K _87022 _87023 => @lem6602059 A K _87022). Qed.
Lemma lem6602065 {A K : Type'} (_87023 : type1362 K) : term2032 A K _87023.
Proof. exact (fun _87022 : type397 A K => @lem6602060 A K _87023 _87022). Qed.
Lemma lem6602066 {A K : Type'} (_87023 : type1362 K) : term2096 A K _87023.
Proof. exact (fun h0 : term2094 K _87023 => @lem6602065 A K _87023). Qed.
Lemma lem6602071 {A K : Type'} : term2098 A K.
Proof. exact (fun _87023 : type1362 K => @lem6602066 A K _87023). Qed.
Lemma lem6602072 {A K : Type'} : term1755 A K.
Proof. exact (EQ_MP (@lem6590662 A K) (@lem6602071 A K)). Qed.
Lemma lem6602073 {A K : Type'} (f : K -> A) : term2197 A K f.
Proof. exact (@lem6602072 A K f). Qed.
Lemma lem6602074 {A K : Type'} (f : K -> A) : (term2197 A K f) = (term1751 A K f).
Proof. exact (eq_refl (term2197 A K f)). Qed.
Lemma lem6602075 {A K : Type'} (f : K -> A) : term1751 A K f.
Proof. exact (EQ_MP (@lem6602074 A K f) (@lem6602073 A K f)). Qed.
Lemma lem6602076 {A K : Type'} (f : K -> A) (k : K -> Prop) : term2198 A K f k.
Proof. exact (@lem6602075 A K f k). Qed.
Lemma lem6602077 {A K : Type'} (k : K -> Prop) (f : K -> A) : (term2198 A K f k) = (term1747 A K k f).
Proof. exact (eq_refl (term2198 A K f k)). Qed.
Lemma lem6602078 {A K : Type'} (k : K -> Prop) (f : K -> A) : term1747 A K k f.
Proof. exact (EQ_MP (@lem6602077 A K k f) (@lem6602076 A K f k)). Qed.
Lemma lem6602079 {A K : Type'} (k : K -> Prop) (f : K -> A) (ltle : type1402 K) : term2199 A K k f ltle.
Proof. exact (@lem6602078 A K k f ltle). Qed.
Lemma lem6602080 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2199 A K k f ltle) = (term1743 A K ltle k f).
Proof. exact (eq_refl (term2199 A K k f ltle)). Qed.
Lemma lem6602081 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1743 A K ltle k f.
Proof. exact (EQ_MP (@lem6602080 A K ltle k f) (@lem6602079 A K k f ltle)). Qed.
Lemma lem6602082 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (op : type1400 A) : term2200 A K ltle k f op.
Proof. exact (@lem6602081 A K ltle k f op). Qed.
Lemma lem6602083 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2200 A K ltle k f op) = (term1739 A K op ltle k f).
Proof. exact (eq_refl (term2200 A K ltle k f op)). Qed.
Lemma lem6602084 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1739 A K op ltle k f.
Proof. exact (EQ_MP (@lem6602083 A K op ltle k f) (@lem6602082 A K ltle k f op)). Qed.
Lemma lem6602085 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (neut : A) : term2201 A K op ltle k f neut.
Proof. exact (@lem6602084 A K op ltle k f neut). Qed.
Lemma lem6602086 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2201 A K op ltle k f neut) = (term1735 A K neut op ltle k f).
Proof. exact (eq_refl (term2201 A K op ltle k f neut)). Qed.
Lemma lem6602087 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1735 A K neut op ltle k f.
Proof. exact (EQ_MP (@lem6602086 A K neut op ltle k f) (@lem6602085 A K op ltle k f neut)). Qed.
Lemma lem6602088 {A K : Type'} (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : term2202 A K neut op ltle k f dom.
Proof. exact (@lem6602087 A K neut op ltle k f dom). Qed.
Lemma lem6602089 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2202 A K neut op ltle k f dom) = (term1731 A K dom neut op ltle k f).
Proof. exact (eq_refl (term2202 A K neut op ltle k f dom)). Qed.
Lemma lem6602090 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1731 A K dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6602089 A K dom neut op ltle k f) (@lem6602088 A K neut op ltle k f dom)). Qed.
Lemma lem6602091 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) : term2203 A K dom neut op ltle k f i.
Proof. exact (@lem6602090 A K dom neut op ltle k f i). Qed.
Lemma lem6602092 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2203 A K dom neut op ltle k f i) = (term1712 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term2203 A K dom neut op ltle k f i)). Qed.
Lemma lem6602093 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1712 A K i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6602092 A K i dom neut op ltle k f) (@lem6602091 A K dom neut op ltle k f i)). Qed.
Lemma lem6602095 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1616 A K i dom neut op ltle k f.
Proof. exact (@lem6587816 A K i dom neut op ltle k f (@lem6602093 A K i dom neut op ltle k f)). Qed.
Lemma lem6602096 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1617 A K i dom neut op ltle k f) : False.
Proof. exact (@lem6602095 A K i dom neut op ltle k f (@lem6587623 A K i dom neut op ltle k f h1)). Qed.
Lemma lem6602097 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1617 A K i dom neut op ltle k f) : (term1617 A K i dom neut op ltle k f) = False.
Proof. exact (prop_ext (fun h2 : term1617 A K i dom neut op ltle k f => @lem6602096 A K i dom neut op ltle k f h1) (fun h2 : False => @lem6587623 A K i dom neut op ltle k f h1)). Qed.
Lemma lem6602098 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1617 A K i dom neut op ltle k f) : False.
Proof. exact (EQ_MP (@lem6602097 A K i dom neut op ltle k f h1) (@lem6587623 A K i dom neut op ltle k f h1)). Qed.
Lemma lem6602099 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1616 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1617 A K i dom neut op ltle k f => @lem6602098 A K i dom neut op ltle k f h0). Qed.
Lemma lem6602100 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1615 A K i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6587622 A K i dom neut op ltle k f) (@lem6602099 A K i dom neut op ltle k f)). Qed.
Lemma lem6602102 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1614 A K i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6587618 A K i dom neut op ltle k f) (@lem6602100 A K i dom neut op ltle k f)). Qed.
Lemma lem6602103 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1612 A K i dom neut op ltle k f.
Proof. exact (@lem6602102 A K i dom neut op ltle k f (@lem6586920 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6602105 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : (term1511 A K ltle i k f dom neut) = i) : (term1511 A K ltle i k f dom neut) = i.
Proof. exact (h1). Qed.
Lemma lem6602106 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1508 A K i dom neut op ltle k f) = (term1508 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term1508 A K i dom neut op ltle k f)). Qed.
Lemma lem6602107 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : (term1511 A K ltle i k f dom neut) = i) : (term1519 A K op ltle i k f dom neut) = (term2204 A K dom neut op ltle k f i).
Proof. exact (MK_COMB (@lem6602106 A K i dom neut op ltle k f) (@lem6602105 A K ltle k f dom neut i h1)). Qed.
Lemma lem6602108 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2204 A K dom neut op ltle k f i) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term2204 A K dom neut op ltle k f i)). Qed.
Lemma lem6602109 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2206 A K op ltle i k f dom neut) = (term2206 A K op ltle i k f dom neut).
Proof. exact (eq_refl (term2206 A K op ltle i k f dom neut)). Qed.
Lemma lem6602110 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1519 A K op ltle i k f dom neut) = (term2204 A K dom neut op ltle k f i)) = ((term1519 A K op ltle i k f dom neut) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f))).
Proof. exact (MK_COMB (@lem6602109 A K op ltle i k f dom neut) (@lem6602108 A K i dom neut op ltle k f)). Qed.
Lemma lem6602111 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K op ltle i k f dom neut) = ((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl (term1519 A K op ltle i k f dom neut)). Qed.
Lemma lem6602112 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6602113 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2206 A K op ltle i k f dom neut) = (term2207 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6602112) (@lem6602111 A K i dom neut op ltle k f)). Qed.
Lemma lem6602114 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)).
Proof. exact (eq_refl ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f))). Qed.
Lemma lem6602115 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1519 A K op ltle i k f dom neut) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f))) = (((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f))).
Proof. exact (MK_COMB (@lem6602113 A K i dom neut op ltle k f) (@lem6602114 A K i dom neut op ltle k f)). Qed.
Lemma lem6602116 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1519 A K op ltle i k f dom neut) = (term2204 A K dom neut op ltle k f i)) = (((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f))).
Proof. exact (TRANS (@lem6602110 A K i dom neut op ltle k f) (@lem6602115 A K i dom neut op ltle k f)). Qed.
Lemma lem6602117 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : (term1511 A K ltle i k f dom neut) = i) : ((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)).
Proof. exact (EQ_MP (@lem6602116 A K i dom neut op ltle k f) (@lem6602107 A K op ltle k f dom neut i h1)). Qed.
Lemma lem6602118 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : (term1511 A K ltle i k f dom neut) = i) : ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)) = ((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6602117 A K op ltle k f dom neut i h1)). Qed.
Lemma lem6602120 {A B : Type'} (f : A -> B) (x : A) : (@LET A B f x) = (f x).
Proof. exact (EQ_MP (@lem57692 A B f x) (@lem57691 A B f x)). Qed.
Lemma lem6602121 {A K : Type'} (f : K -> A) (x : K) : (@LET K A f x) = (f x).
Proof. exact (@lem6602120 K A f x). Qed.
Lemma lem6602122 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (i : K) : (term2205 A K op ltle k dom neut f i) = (term2208 A K op ltle k dom neut f i).
Proof. exact (@lem6602121 A K (term1603 A K op ltle i k dom neut f) i). Qed.
Lemma lem6602123 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2208 A K op ltle k dom neut f i) = (term2209 A K op ltle k i dom neut f).
Proof. exact (eq_refl (term2208 A K op ltle k dom neut f i)). Qed.
Lemma lem6602124 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2205 A K op ltle k dom neut f i) = (term2209 A K op ltle k i dom neut f).
Proof. exact (TRANS (@lem6602122 A K op ltle k dom neut f i) (@lem6602123 A K op ltle k i dom neut f)). Qed.
Lemma lem6602126 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (EQ_MP (@lem57695 A t) (@lem57694 A t)). Qed.
Lemma lem6602127 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (@lem6602126 A t). Qed.
Lemma lem6602128 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2209 A K op ltle k i dom neut f) = (term2210 A K op ltle k i dom neut f).
Proof. exact (@lem6602127 A (term2210 A K op ltle k i dom neut f)). Qed.
Lemma lem6602129 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2205 A K op ltle k dom neut f i) = (term2210 A K op ltle k i dom neut f).
Proof. exact (TRANS (@lem6602124 A K op ltle k i dom neut f) (@lem6602128 A K op ltle k i dom neut f)). Qed.
Lemma lem6602130 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6602131 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term2211 A K op ltle k dom neut f i) = (term2212 A K op ltle k i dom neut f).
Proof. exact (MK_COMB (@lem6602130 A) (@lem6602129 A K op ltle k i dom neut f)). Qed.
Lemma lem6602132 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6602133 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)) = ((term2210 A K op ltle k i dom neut f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6602131 A K op ltle k i dom neut f) (@lem6602132 A K i dom neut op ltle k f)). Qed.
Lemma lem6602134 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term2210 A K op ltle k i dom neut f) = (term493 A K i dom neut op ltle k f)) = ((term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6602133 A K i dom neut op ltle k f)). Qed.
Lemma lem6602135 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term29 _124523 i k) : term29 _124523 i k.
Proof. exact (h1). Qed.
Lemma lem6602136 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) (h1 : term29 _124523 i k) : (term24 _124523 k i) = k.
Proof. exact (@lem6450273 _124523 i k (@lem6602135 _124523 i k h1)). Qed.
Lemma lem6602166 {K : Type'} (i : K) (k : K -> Prop) : term526 K i k.
Proof. exact (@lem82 (@IN K i k)). Qed.
Lemma lem6609707 {_124523 : Type'} (i : _124523) (k : _124523 -> Prop) : term27 _124523 i k.
Proof. exact (fun h0 : term29 _124523 i k => @lem6602136 _124523 i k h0). Qed.
Lemma lem6609708 {K : Type'} (i : K) (k : K -> Prop) : term27 K i k.
Proof. exact (@lem6609707 K i k). Qed.
Lemma lem6609718 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (@IN K i k) = False.
Proof. exact (@lem6602166 K i k (@lem6452322 K i k h1)). Qed.
Lemma lem6609723 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6609724 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term29 K i k) = (~ False).
Proof. exact (MK_COMB (@lem6609723) (@lem6609718 K i k h1)). Qed.
Lemma lem6609726 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem6609731 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term29 K i k) = True.
Proof. exact (TRANS (@lem6609724 K i k h1) (@lem6609726)). Qed.
Lemma lem6609732 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : True = (term29 K i k).
Proof. exact (SYM (@lem6609731 K i k h1)). Qed.
Lemma lem6609733 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : term29 K i k.
Proof. exact (EQ_MP (@lem6609732 K i k h1) (@lem0)). Qed.
Lemma lem6609734 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term24 K k i) = k.
Proof. exact (@lem6609708 K i k (@lem6609733 K i k h1)). Qed.
Lemma lem6609739 {K : Type'} (j : K) : (@IN K j) = (@IN K j).
Proof. exact (eq_refl (@IN K j)). Qed.
Lemma lem6609740 {K : Type'} (j : K) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term34 K j k i) = (@IN K j k).
Proof. exact (MK_COMB (@lem6609739 K j) (@lem6609734 K i k h1)). Qed.
Lemma lem6612454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6612455 {K : Type'} (j : K) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2213 K j k i) = (term332 K j k).
Proof. exact (MK_COMB (@lem6612454) (@lem6609740 K j i k h1)). Qed.
Lemma lem6617930 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term426 A K f j dom neut) = (term426 A K f j dom neut).
Proof. exact (eq_refl (term426 A K f j dom neut)). Qed.
Lemma lem6617931 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2214 A K k i f j dom neut) = (term601 A K k f j dom neut).
Proof. exact (MK_COMB (@lem6612455 K j i k h1) (@lem6617930 A K f j dom neut)). Qed.
Lemma lem6623412 {K : Type'} (GEN_PVAR_265 : K) : (@SETSPEC K GEN_PVAR_265) = (@SETSPEC K GEN_PVAR_265).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_265)). Qed.
Lemma lem6623413 {A K : Type'} (GEN_PVAR_265 : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2215 A K GEN_PVAR_265 k i f j dom neut) = (term622 A K GEN_PVAR_265 k f j dom neut).
Proof. exact (MK_COMB (@lem6623412 K GEN_PVAR_265) (@lem6617931 A K f j dom neut i k h1)). Qed.
Lemma lem6634340 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6634341 {A K : Type'} (GEN_PVAR_265 : K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2216 A K GEN_PVAR_265 k i f dom neut j) = (term624 A K GEN_PVAR_265 k f dom neut j).
Proof. exact (MK_COMB (@lem6623413 A K GEN_PVAR_265 f j dom neut i k h1) (@lem6634340 K j)). Qed.
Lemma lem6645272 {A K : Type'} (GEN_PVAR_265 : K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2217 A K GEN_PVAR_265 k i f dom neut) = (term626 A K GEN_PVAR_265 k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6634341 A K GEN_PVAR_265 f dom neut j i k h1)). Qed.
Lemma lem6656207 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6656208 {A K : Type'} (GEN_PVAR_265 : K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2218 A K GEN_PVAR_265 k i f dom neut) = (term628 A K GEN_PVAR_265 k f dom neut).
Proof. exact (MK_COMB (@lem6656207 K) (@lem6645272 A K GEN_PVAR_265 f dom neut i k h1)). Qed.
Lemma lem6667155 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2219 A K k i f dom neut) = (term630 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_265 : K => @lem6656208 A K GEN_PVAR_265 f dom neut i k h1)). Qed.
Lemma lem6678106 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6678107 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2220 A K k i f dom neut) = (term586 A K k f dom neut).
Proof. exact (MK_COMB (@lem6678106 K) (@lem6667155 A K f dom neut i k h1)). Qed.
Lemma lem6689066 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6689067 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2221 A K op ltle k i f dom neut) = (term1260 A K op ltle k f dom neut).
Proof. exact (MK_COMB (@lem6689066 A K dom neut op ltle) (@lem6678107 A K f dom neut i k h1)). Qed.
Lemma lem6700070 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6700071 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2222 A K op ltle k i dom neut f) = (term22 A K op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6689067 A K op ltle f dom neut i k h1) (@lem6700070 A K f)). Qed.
Lemma lem6711078 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) : (term1598 A K op f i) = (term1598 A K op f i).
Proof. exact (eq_refl (term1598 A K op f i)). Qed.
Lemma lem6711079 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2210 A K op ltle k i dom neut f) = (term2223 A K i op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6711078 A K op f i) (@lem6700071 A K op ltle dom neut f i k h1)). Qed.
Lemma lem6724047 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6724048 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2212 A K op ltle k i dom neut f) = (term2224 A K i op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6724047 A) (@lem6711079 A K op ltle dom neut f i k h1)). Qed.
Lemma lem6739037 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6739038 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : ((term2210 A K op ltle k i dom neut f) = (term493 A K i dom neut op ltle k f)) = ((term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6724048 A K op ltle dom neut f i k h1) (@lem6739037 A K i dom neut op ltle k f)). Qed.
Lemma lem6754033 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : ((term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f)) = ((term2210 A K op ltle k i dom neut f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6739038 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6754037 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6449523 A K dom neut op ltle k f) (@lem6449522 A K dom neut op ltle k f)). Qed.
Lemma lem6754038 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term22 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (@lem6754037 A K dom neut op ltle k f). Qed.
Lemma lem6754039 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) : (term1598 A K op f i) = (term1598 A K op f i).
Proof. exact (eq_refl (term1598 A K op f i)). Qed.
Lemma lem6754040 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6754039 A K op f i) (@lem6754038 A K dom neut op ltle k f)). Qed.
Lemma lem6754041 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6754042 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2224 A K i op ltle k dom neut f) = (term2225 A K i dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6754041 A) (@lem6754040 A K i dom neut op ltle k f)). Qed.
Lemma lem6754043 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (eq_refl (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6754044 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f)) = ((term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (MK_COMB (@lem6754042 A K i dom neut op ltle k f) (@lem6754043 A K i dom neut op ltle k f)). Qed.
Lemma lem6754046 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6754047 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem6754046 A x). Qed.
Lemma lem6754048 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term493 A K i dom neut op ltle k f) = (term493 A K i dom neut op ltle k f)) = True.
Proof. exact (@lem6754047 A (term493 A K i dom neut op ltle k f)). Qed.
Lemma lem6754049 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f)) = True.
Proof. exact (TRANS (@lem6754044 A K i dom neut op ltle k f) (@lem6754048 A K i dom neut op ltle k f)). Qed.
Lemma lem6754050 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : True = ((term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (SYM (@lem6754049 A K i dom neut op ltle k f)). Qed.
Lemma lem6754051 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2223 A K i op ltle k dom neut f) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6754050 A K i dom neut op ltle k f) (@lem0)). Qed.
Lemma lem6754052 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2210 A K op ltle k i dom neut f) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6754033 A K dom neut op ltle f i k h1) (@lem6754051 A K i dom neut op ltle k f)). Qed.
Lemma lem6754053 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : term29 K i k) : (term2205 A K op ltle k dom neut f i) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6602134 A K i dom neut op ltle k f) (@lem6754052 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6754055 {A : Type'} (P : A -> Prop) (x : A) : term7 A P x.
Proof. exact (EQ_MP (@lem6449505 A P x) (@lem6449504 A P x)). Qed.
Lemma lem6754056 {K : Type'} (P : K -> Prop) (x : K) : term7 K P x.
Proof. exact (@lem6754055 K P x). Qed.
Lemma lem6754057 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : term2226 A K ltle k f dom neut i.
Proof. exact (@lem6754056 K (term1532 A K ltle i k f dom neut) i). Qed.
Lemma lem6754061 {A B : Type'} (f : A -> B) (y : A) : (term2227 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6754062 {K : Type'} (f : K -> Prop) (y : K) : (term90 K f y) = (f y).
Proof. exact (@lem6754061 K Prop f y). Qed.
Lemma lem6754063 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2228 A K ltle i k f dom neut j) = (term1533 A K ltle i k f dom neut j).
Proof. exact (@lem6754062 K (term1532 A K ltle i k f dom neut) j). Qed.
Lemma lem6754064 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1533 A K ltle i k f dom neut i') = (term1534 A K ltle i k f dom neut i').
Proof. exact (eq_refl (term1533 A K ltle i k f dom neut i')). Qed.
Lemma lem6754065 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1535 A K ltle i k f dom neut) = (term1532 A K ltle i k f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6754064 A K ltle i k f dom neut i')). Qed.
Lemma lem6754066 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6754067 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2228 A K ltle i k f dom neut j) = (term1533 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6754065 A K ltle i k f dom neut) (@lem6754066 K j)). Qed.
Lemma lem6754068 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6754069 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2229 A K ltle i k f dom neut j) = (term2230 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6754068) (@lem6754067 A K ltle i k f dom neut j)). Qed.
Lemma lem6754070 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term1533 A K ltle i k f dom neut j) = (term1534 A K ltle i k f dom neut j).
Proof. exact (eq_refl (term1533 A K ltle i k f dom neut j)). Qed.
Lemma lem6754071 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : ((term2228 A K ltle i k f dom neut j) = (term1533 A K ltle i k f dom neut j)) = ((term1533 A K ltle i k f dom neut j) = (term1534 A K ltle i k f dom neut j)).
Proof. exact (MK_COMB (@lem6754069 A K ltle i k f dom neut j) (@lem6754070 A K ltle i k f dom neut j)). Qed.
Lemma lem6754072 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term1533 A K ltle i k f dom neut j) = (term1534 A K ltle i k f dom neut j).
Proof. exact (EQ_MP (@lem6754071 A K ltle i k f dom neut j) (@lem6754063 A K ltle i k f dom neut j)). Qed.
Lemma lem6754089 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6754090 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2230 A K ltle i k f dom neut j) = (term2231 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6754089) (@lem6754072 A K ltle i k f dom neut j)). Qed.
Lemma lem6754093 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6754094 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : ((term1533 A K ltle i k f dom neut j) = (j = i)) = ((term1534 A K ltle i k f dom neut j) = (j = i)).
Proof. exact (MK_COMB (@lem6754090 A K ltle i k f dom neut j) (@lem6754093 K j i)). Qed.
Lemma lem6754097 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : ((term1534 A K ltle i k f dom neut j) = (j = i)) = ((term1533 A K ltle i k f dom neut j) = (j = i)).
Proof. exact (SYM (@lem6754094 A K ltle k f dom neut j i)). Qed.
Lemma lem6760636 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term500 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6760637 (p : Prop) (q : Prop) (p' : Prop) : term501 p q p'.
Proof. exact (fun q' : Prop => @lem6760636 p q p' q'). Qed.
Lemma lem6760638 (p : Prop) (q : Prop) : term502 p q.
Proof. exact (fun p' : Prop => @lem6760637 p q p'). Qed.
Lemma lem6760639 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : term2232 A K ltle i k f dom neut j.
Proof. exact (@lem6760638 (j = i) (term1534 A K ltle i k f dom neut j)). Qed.
Lemma lem6760640 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) : term2233 A K ltle i k f dom neut j p'.
Proof. exact (@lem6760639 A K ltle i k f dom neut j p'). Qed.
Lemma lem6760641 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) : (term2233 A K ltle i k f dom neut j p') = (term2234 A K ltle i k f dom neut j p').
Proof. exact (eq_refl (term2233 A K ltle i k f dom neut j p')). Qed.
Lemma lem6760642 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) : term2234 A K ltle i k f dom neut j p'.
Proof. exact (EQ_MP (@lem6760641 A K ltle i k f dom neut j p') (@lem6760640 A K ltle i k f dom neut j p')). Qed.
Lemma lem6760643 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) (q' : Prop) : term2235 A K ltle i k f dom neut j p' q'.
Proof. exact (@lem6760642 A K ltle i k f dom neut j p' q'). Qed.
Lemma lem6760644 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) (q' : Prop) : (term2235 A K ltle i k f dom neut j p' q') = (term2236 A K ltle i k f dom neut j p' q').
Proof. exact (eq_refl (term2235 A K ltle i k f dom neut j p' q')). Qed.
Lemma lem6760645 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (p' : Prop) (q' : Prop) : term2236 A K ltle i k f dom neut j p' q'.
Proof. exact (EQ_MP (@lem6760644 A K ltle i k f dom neut j p' q') (@lem6760643 A K ltle i k f dom neut j p' q')). Qed.
Lemma lem6760648 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6760649 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (q' : Prop) : term2237 A K ltle k f dom neut j i q'.
Proof. exact (@lem6760645 A K ltle i k f dom neut j (j = i) q'). Qed.
Lemma lem6760650 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (q' : Prop) : term2238 A K ltle k f dom neut j i q'.
Proof. exact (@lem6760649 A K ltle k f dom neut j i q' (@lem6760648 K j i)). Qed.
Lemma lem6760655 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6760656 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6760657 {K : Type'} (j : K) (i : K) (h1 : j = i) : (@IN K j) = (@IN K i).
Proof. exact (MK_COMB (@lem6760656 K) (@lem6760655 K j i h1)). Qed.
Lemma lem6760658 {K : Type'} (i : K) (k : K -> Prop) : (@INSERT K i k) = (@INSERT K i k).
Proof. exact (eq_refl (@INSERT K i k)). Qed.
Lemma lem6760659 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : j = i) : (term36 K j i k) = (term1552 K i k).
Proof. exact (MK_COMB (@lem6760657 K j i h1) (@lem6760658 K i k)). Qed.
Lemma lem6760660 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6760661 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : j = i) : (term40 K j i k) = (term1556 K i k).
Proof. exact (MK_COMB (@lem6760660) (@lem6760659 K k j i h1)). Qed.
Lemma lem6760665 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6760666 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6760667 {A K : Type'} (f : K -> A) (j : K) (i : K) (h1 : j = i) : (f j) = (f i).
Proof. exact (MK_COMB (@lem6760666 A K f) (@lem6760665 K j i h1)). Qed.
Lemma lem6760668 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6760669 {A K : Type'} (f : K -> A) (j : K) (i : K) (h1 : j = i) : (term2239 A K f j) = (term2239 A K f i).
Proof. exact (MK_COMB (@lem6760668 A) (@lem6760667 A K f j i h1)). Qed.
Lemma lem6760670 {A : Type'} (dom : A -> Prop) (neut : A) : (term2240 A dom neut) = (term2240 A dom neut).
Proof. exact (eq_refl (term2240 A dom neut)). Qed.
Lemma lem6760671 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term426 A K f j dom neut) = (term426 A K f i dom neut).
Proof. exact (MK_COMB (@lem6760669 A K f j i h1) (@lem6760670 A dom neut)). Qed.
Lemma lem6760672 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6760673 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term454 A K f j dom neut) = (term454 A K f i dom neut).
Proof. exact (MK_COMB (@lem6760672) (@lem6760671 A K f dom neut j i h1)). Qed.
Lemma lem6760681 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term500 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6760682 (p : Prop) (q : Prop) (p' : Prop) : term501 p q p'.
Proof. exact (fun q' : Prop => @lem6760681 p q p' q'). Qed.
Lemma lem6760683 (p : Prop) (q : Prop) : term502 p q.
Proof. exact (fun p' : Prop => @lem6760682 p q p'). Qed.
Lemma lem6760684 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) : term2241 A K ltle i k f dom neut j' j.
Proof. exact (@lem6760683 (term2242 A K ltle j i k f j' dom neut) (j' = j)). Qed.
Lemma lem6760685 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) : term2243 A K ltle i k f dom neut j' j p'.
Proof. exact (@lem6760684 A K ltle i k f dom neut j' j p'). Qed.
Lemma lem6760686 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) : (term2243 A K ltle i k f dom neut j' j p') = (term2244 A K ltle i k f dom neut j' j p').
Proof. exact (eq_refl (term2243 A K ltle i k f dom neut j' j p')). Qed.
Lemma lem6760687 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) : term2244 A K ltle i k f dom neut j' j p'.
Proof. exact (EQ_MP (@lem6760686 A K ltle i k f dom neut j' j p') (@lem6760685 A K ltle i k f dom neut j' j p')). Qed.
Lemma lem6760688 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) (q' : Prop) : term2245 A K ltle i k f dom neut j' j p' q'.
Proof. exact (@lem6760687 A K ltle i k f dom neut j' j p' q'). Qed.
Lemma lem6760689 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) (q' : Prop) : (term2245 A K ltle i k f dom neut j' j p' q') = (term2246 A K ltle i k f dom neut j' j p' q').
Proof. exact (eq_refl (term2245 A K ltle i k f dom neut j' j p' q')). Qed.
Lemma lem6760690 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (p' : Prop) (q' : Prop) : term2246 A K ltle i k f dom neut j' j p' q'.
Proof. exact (EQ_MP (@lem6760689 A K ltle i k f dom neut j' j p' q') (@lem6760688 A K ltle i k f dom neut j' j p' q')). Qed.
Lemma lem6760694 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6760695 {K : Type'} (ltle : type1402 K) (j' : K) : (ltle j') = (ltle j').
Proof. exact (eq_refl (ltle j')). Qed.
Lemma lem6760696 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) (i : K) (h1 : j = i) : (ltle j' j) = (ltle j' i).
Proof. exact (MK_COMB (@lem6760695 K ltle j') (@lem6760694 K j i h1)). Qed.
Lemma lem6760697 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6760698 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) (i : K) (h1 : j = i) : (term447 K ltle j' j) = (term447 K ltle j' i).
Proof. exact (MK_COMB (@lem6760697) (@lem6760696 K ltle j' j i h1)). Qed.
Lemma lem6760701 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term643 A K i k f j' dom neut) = (term643 A K i k f j' dom neut).
Proof. exact (eq_refl (term643 A K i k f j' dom neut)). Qed.
Lemma lem6760702 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2242 A K ltle j i k f j' dom neut) = (term1558 A K ltle i k f j' dom neut).
Proof. exact (MK_COMB (@lem6760698 K ltle j' j i h1) (@lem6760701 A K i k f j' dom neut)). Qed.
Lemma lem6760707 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) (q' : Prop) : term2247 A K j ltle i k f j' dom neut q'.
Proof. exact (@lem6760690 A K ltle i k f dom neut j' j (term1558 A K ltle i k f j' dom neut) q'). Qed.
Lemma lem6760708 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) (q' : Prop) (j : K) (i : K) (h1 : j = i) : term2248 A K j ltle i k f j' dom neut q'.
Proof. exact (@lem6760707 A K j ltle i k f j' dom neut q' (@lem6760702 A K ltle k f j' dom neut j i h1)). Qed.
Lemma lem6760723 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6760724 {K : Type'} (j' : K) : (@eq K j') = (@eq K j').
Proof. exact (eq_refl (@eq K j')). Qed.
Lemma lem6760725 {K : Type'} (j' : K) (j : K) (i : K) (h1 : j = i) : (j' = j) = (j' = i).
Proof. exact (MK_COMB (@lem6760724 K j') (@lem6760723 K j i h1)). Qed.
Lemma lem6760728 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (i : K) (h1 : j = i) : term2249 A K ltle k f dom neut j j' i.
Proof. exact (fun h0 : term1558 A K ltle i k f j' dom neut => @lem6760725 K j' j i h1). Qed.
Lemma lem6760729 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (i : K) (h1 : j = i) : term2250 A K j ltle k f dom neut j' i.
Proof. exact (@lem6760708 A K ltle k f j' dom neut (j' = i) j i h1). Qed.
Lemma lem6760730 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (i : K) (h1 : j = i) : (term2251 A K ltle i k f dom neut j' j) = (term1562 A K ltle k f dom neut j' i).
Proof. exact (@lem6760729 A K ltle k f dom neut j' j i h1 (@lem6760728 A K ltle k f dom neut j' j i h1)). Qed.
Lemma lem6760774 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2252 A K ltle i k f dom neut j) = (term1564 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j' : K => @lem6760730 A K ltle k f dom neut j' j i h1)). Qed.
Lemma lem6760818 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6760819 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2253 A K ltle i k f dom neut j) = (term1566 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6760818 K) (@lem6760774 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6760867 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2254 A K ltle i k f dom neut j) = (term1568 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6760673 A K f dom neut j i h1) (@lem6760819 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6760917 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term1534 A K ltle i k f dom neut j) = (term1570 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6760661 K k j i h1) (@lem6760867 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6760969 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : term2255 A K j ltle k f dom neut i.
Proof. exact (fun h0 : j = i => @lem6760917 A K ltle k f dom neut j i h0). Qed.
Lemma lem6760970 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : term2256 A K j ltle k f dom neut i.
Proof. exact (@lem6760650 A K ltle k f dom neut j i (term1570 A K ltle k f dom neut i)). Qed.
Lemma lem6760971 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2257 A K ltle i k f dom neut j) = (term2258 A K j ltle k f dom neut i).
Proof. exact (@lem6760970 A K j ltle k f dom neut i (@lem6760969 A K j ltle k f dom neut i)). Qed.
Lemma lem6761101 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2258 A K j ltle k f dom neut i) = (term2257 A K ltle i k f dom neut j).
Proof. exact (SYM (@lem6760971 A K j ltle k f dom neut i)). Qed.
Lemma lem6761102 (t1 : Prop) : term1546 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem6761103 (t1 : Prop) : (term1546 t1) = (term1547 t1).
Proof. exact (eq_refl (term1546 t1)). Qed.
Lemma lem6761104 (t1 : Prop) : term1547 t1.
Proof. exact (EQ_MP (@lem6761103 t1) (@lem6761102 t1)). Qed.
Lemma lem6761105 (t1 : Prop) (t2 : Prop) : term1548 t1 t2.
Proof. exact (@lem6761104 t1 t2). Qed.
Lemma lem6761106 (t1 : Prop) (t2 : Prop) : (term1548 t1 t2) = (term1549 t1 t2).
Proof. exact (eq_refl (term1548 t1 t2)). Qed.
Lemma lem6761107 (t1 : Prop) (t2 : Prop) : term1549 t1 t2.
Proof. exact (EQ_MP (@lem6761106 t1 t2) (@lem6761105 t1 t2)). Qed.
Lemma lem6761108 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term1550 t1 t2 t3.
Proof. exact (@lem6761107 t1 t2 t3). Qed.
Lemma lem6761109 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1550 t1 t2 t3) = ((term1366 t1 t2 t3) = (term1551 t1 t2 t3)).
Proof. exact (eq_refl (term1550 t1 t2 t3)). Qed.
Lemma lem6761110 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1366 t1 t2 t3) = (term1551 t1 t2 t3).
Proof. exact (EQ_MP (@lem6761109 t1 t2 t3) (@lem6761108 t1 t2 t3)). Qed.
Lemma lem6761111 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1551 t1 t2 t3) = (term1366 t1 t2 t3).
Proof. exact (SYM (@lem6761110 t1 t2 t3)). Qed.
Lemma lem6761112 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6761113 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6761112 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6761114 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6761113 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6761115 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term504 A K f i dom) : term1265 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555423 A K f i dom h5) (@lem6761114 A K ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6761116 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1266 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555422 A K f i neut h4) (@lem6761115 A K ltle neut k f i dom h1 h2 h3 h5 h6)). Qed.
Lemma lem6761204 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761205 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6761204 A P x). Qed.
Lemma lem6761206 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6761205 A dom (f i)). Qed.
Lemma lem6761207 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761208 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6761207) (@lem6761206 A K dom f i)). Qed.
Lemma lem6761212 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761213 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761212 K P x). Qed.
Lemma lem6761214 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6761213 K k i). Qed.
Lemma lem6761215 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6761216 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6761215) (@lem6761214 K k i)). Qed.
Lemma lem6761217 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761218 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6761217) (@lem6761216 K k i)). Qed.
Lemma lem6761232 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761233 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761232 K P x). Qed.
Lemma lem6761234 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6761233 K k j). Qed.
Lemma lem6761235 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761236 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6761235) (@lem6761234 K k j)). Qed.
Lemma lem6761238 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6761239 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6761238 A s x t). Qed.
Lemma lem6761240 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6761239 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6761244 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761245 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6761244 A P x). Qed.
Lemma lem6761246 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6761245 A dom (f j)). Qed.
Lemma lem6761247 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761248 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6761247) (@lem6761246 A K dom f j)). Qed.
Lemma lem6761250 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761251 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6761250 A y x s). Qed.
Lemma lem6761252 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6761251 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6761258 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6761259 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6761258 A x). Qed.
Lemma lem6761260 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6761259 A (f j)). Qed.
Lemma lem6761261 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6761262 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6761261 A K f j neut) (@lem6761260 A K f j)). Qed.
Lemma lem6761264 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6761265 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6761264 ((f j) = neut)). Qed.
Lemma lem6761268 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6761262 A K f j neut) (@lem6761265 A K f j neut)). Qed.
Lemma lem6761269 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6761252 A K neut f j) (@lem6761268 A K f j neut)). Qed.
Lemma lem6761270 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6761271 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6761270) (@lem6761269 A K f j neut)). Qed.
Lemma lem6761272 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6761248 A K dom f j) (@lem6761271 A K f j neut)). Qed.
Lemma lem6761275 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6761240 A K dom f j neut) (@lem6761272 A K dom f j neut)). Qed.
Lemma lem6761276 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6761236 K k j) (@lem6761275 A K dom f j neut)). Qed.
Lemma lem6761279 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6761280 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6761279 K ltle j i) (@lem6761276 A K k dom f j neut)). Qed.
Lemma lem6761283 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6761284 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6761283) (@lem6761280 A K ltle i k dom f j neut)). Qed.
Lemma lem6761287 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6761288 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6761284 A K ltle i k dom f j neut) (@lem6761287 K j i)). Qed.
Lemma lem6761291 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6761288 A K ltle k dom f neut j i)). Qed.
Lemma lem6761292 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761293 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761292 K) (@lem6761291 A K ltle k dom f neut i)). Qed.
Lemma lem6761298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761299 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761298) (@lem6761293 A K ltle k dom f neut i)). Qed.
Lemma lem6761309 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761310 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761309 K P x). Qed.
Lemma lem6761311 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6761310 K k j). Qed.
Lemma lem6761312 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6761313 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6761312) (@lem6761311 K k j)). Qed.
Lemma lem6761320 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6761321 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6761313 K k j) (@lem6761320 K ltle j i)). Qed.
Lemma lem6761324 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6761321 K k ltle j i)). Qed.
Lemma lem6761325 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761326 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6761325 K) (@lem6761324 K k ltle i)). Qed.
Lemma lem6761331 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761332 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6761331) (@lem6761326 K k ltle i)). Qed.
Lemma lem6761340 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761341 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761340 K P x). Qed.
Lemma lem6761342 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6761341 K k j). Qed.
Lemma lem6761343 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761344 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6761343) (@lem6761342 K k j)). Qed.
Lemma lem6761346 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6761347 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6761346 A s x t). Qed.
Lemma lem6761348 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6761347 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6761352 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761353 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6761352 A P x). Qed.
Lemma lem6761354 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6761353 A dom (f j)). Qed.
Lemma lem6761355 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761356 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6761355) (@lem6761354 A K dom f j)). Qed.
Lemma lem6761358 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761359 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6761358 A y x s). Qed.
Lemma lem6761360 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6761359 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6761366 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6761367 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6761366 A x). Qed.
Lemma lem6761368 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6761367 A (f j)). Qed.
Lemma lem6761369 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6761370 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6761369 A K f j neut) (@lem6761368 A K f j)). Qed.
Lemma lem6761372 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6761373 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6761372 ((f j) = neut)). Qed.
Lemma lem6761376 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6761370 A K f j neut) (@lem6761373 A K f j neut)). Qed.
Lemma lem6761377 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6761360 A K neut f j) (@lem6761376 A K f j neut)). Qed.
Lemma lem6761378 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6761379 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6761378) (@lem6761377 A K f j neut)). Qed.
Lemma lem6761380 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6761356 A K dom f j) (@lem6761379 A K f j neut)). Qed.
Lemma lem6761383 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6761348 A K dom f j neut) (@lem6761380 A K dom f j neut)). Qed.
Lemma lem6761384 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6761344 K k j) (@lem6761383 A K dom f j neut)). Qed.
Lemma lem6761387 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6761388 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6761387 K GEN_PVAR_272) (@lem6761384 A K k dom f j neut)). Qed.
Lemma lem6761389 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6761390 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6761388 A K GEN_PVAR_272 k dom f j neut) (@lem6761389 K j)). Qed.
Lemma lem6761391 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6761390 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6761392 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6761393 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6761392 K) (@lem6761391 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6761398 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6761393 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6761399 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6761400 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6761399 K) (@lem6761398 A K k dom f neut)). Qed.
Lemma lem6761401 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6761402 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6761401 K) (@lem6761400 A K k dom f neut)). Qed.
Lemma lem6761403 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761332 K k ltle i) (@lem6761402 A K k dom f neut)). Qed.
Lemma lem6761406 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761299 A K ltle k dom f neut i) (@lem6761403 A K ltle i k dom f neut)). Qed.
Lemma lem6761409 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761218 K k i) (@lem6761406 A K ltle i k dom f neut)). Qed.
Lemma lem6761412 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1265 A K ltle i k f dom neut) = (term1272 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761208 A K dom f i) (@lem6761409 A K ltle i k dom f neut)). Qed.
Lemma lem6761415 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6761416 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1266 A K ltle i k f dom neut) = (term1274 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761415 A K f i neut) (@lem6761412 A K ltle i k dom f neut)). Qed.
Lemma lem6761419 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6761420 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1269 A K ltle i k f dom neut) = (term1275 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6761419) (@lem6761416 A K ltle i k dom f neut)). Qed.
Lemma lem6761430 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761431 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6761430 K y x s). Qed.
Lemma lem6761432 {K : Type'} (i : K) (k : K -> Prop) : (term1552 K i k) = (term1553 K i k).
Proof. exact (@lem6761431 K i i k). Qed.
Lemma lem6761436 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6761437 {K : Type'} (x : K) : (x = x) = True.
Proof. exact (@lem6761436 K x). Qed.
Lemma lem6761438 {K : Type'} (i : K) : (i = i) = True.
Proof. exact (@lem6761437 K i). Qed.
Lemma lem6761439 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6761440 {K : Type'} (i : K) : (term1554 K i) = (or True).
Proof. exact (MK_COMB (@lem6761439) (@lem6761438 K i)). Qed.
Lemma lem6761442 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761443 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761442 K P x). Qed.
Lemma lem6761444 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6761443 K k i). Qed.
Lemma lem6761445 {K : Type'} (k : K -> Prop) (i : K) : (term1553 K i k) = (term1555 K k i).
Proof. exact (MK_COMB (@lem6761440 K i) (@lem6761444 K k i)). Qed.
Lemma lem6761447 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem1831 t)). Qed.
Lemma lem6761448 {K : Type'} (k : K -> Prop) (i : K) : (term1555 K k i) = True.
Proof. exact (@lem6761447 (k i)). Qed.
Lemma lem6761449 {K : Type'} (i : K) (k : K -> Prop) : (term1553 K i k) = True.
Proof. exact (TRANS (@lem6761445 K k i) (@lem6761448 K k i)). Qed.
Lemma lem6761450 {K : Type'} (i : K) (k : K -> Prop) : (term1552 K i k) = True.
Proof. exact (TRANS (@lem6761432 K i k) (@lem6761449 K i k)). Qed.
Lemma lem6761451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761452 {K : Type'} (i : K) (k : K -> Prop) : (term1556 K i k) = (and True).
Proof. exact (MK_COMB (@lem6761451) (@lem6761450 K i k)). Qed.
Lemma lem6761456 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6761457 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6761456 A s x t). Qed.
Lemma lem6761458 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term569 A K dom f i neut).
Proof. exact (@lem6761457 A dom (f i) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6761462 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761463 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6761462 A P x). Qed.
Lemma lem6761464 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6761463 A dom (f i)). Qed.
Lemma lem6761465 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761466 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6761465) (@lem6761464 A K dom f i)). Qed.
Lemma lem6761468 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761469 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6761468 A y x s). Qed.
Lemma lem6761470 {A K : Type'} (neut : A) (f : K -> A) (i : K) : (term570 A K f i neut) = (term593 A K neut f i).
Proof. exact (@lem6761469 A neut (f i) (@EMPTY A)). Qed.
Lemma lem6761476 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6761477 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6761476 A x). Qed.
Lemma lem6761478 {A K : Type'} (f : K -> A) (i : K) : (term594 A K f i) = False.
Proof. exact (@lem6761477 A (f i)). Qed.
Lemma lem6761479 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term512 A K f i neut) = (term512 A K f i neut).
Proof. exact (eq_refl (term512 A K f i neut)). Qed.
Lemma lem6761480 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = (term527 A K f i neut).
Proof. exact (MK_COMB (@lem6761479 A K f i neut) (@lem6761478 A K f i)). Qed.
Lemma lem6761482 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6761483 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term527 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6761482 ((f i) = neut)). Qed.
Lemma lem6761486 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term593 A K neut f i) = ((f i) = neut).
Proof. exact (TRANS (@lem6761480 A K f i neut) (@lem6761483 A K f i neut)). Qed.
Lemma lem6761487 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term570 A K f i neut) = ((f i) = neut).
Proof. exact (TRANS (@lem6761470 A K neut f i) (@lem6761486 A K f i neut)). Qed.
Lemma lem6761488 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6761489 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term571 A K f i neut) = (term572 A K f i neut).
Proof. exact (MK_COMB (@lem6761488) (@lem6761487 A K f i neut)). Qed.
Lemma lem6761490 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term569 A K dom f i neut) = (term595 A K dom f i neut).
Proof. exact (MK_COMB (@lem6761466 A K dom f i) (@lem6761489 A K f i neut)). Qed.
Lemma lem6761493 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term426 A K f i dom neut) = (term595 A K dom f i neut).
Proof. exact (TRANS (@lem6761458 A K dom f i neut) (@lem6761490 A K dom f i neut)). Qed.
Lemma lem6761494 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761495 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term454 A K f i dom neut) = (term1557 A K dom f i neut).
Proof. exact (MK_COMB (@lem6761494) (@lem6761493 A K dom f i neut)). Qed.
Lemma lem6761507 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761508 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6761507 K y x s). Qed.
Lemma lem6761509 {K : Type'} (i : K) (j' : K) (k : K -> Prop) : (term36 K j' i k) = (term37 K i j' k).
Proof. exact (@lem6761508 K i j' k). Qed.
Lemma lem6761515 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761516 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6761515 K P x). Qed.
Lemma lem6761517 {K : Type'} (k : K -> Prop) (j' : K) : (@IN K j' k) = (k j').
Proof. exact (@lem6761516 K k j'). Qed.
Lemma lem6761518 {K : Type'} (j' : K) (i : K) : (term38 K j' i) = (term38 K j' i).
Proof. exact (eq_refl (term38 K j' i)). Qed.
Lemma lem6761519 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term37 K i j' k) = (term39 K i k j').
Proof. exact (MK_COMB (@lem6761518 K j' i) (@lem6761517 K k j')). Qed.
Lemma lem6761522 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term36 K j' i k) = (term39 K i k j').
Proof. exact (TRANS (@lem6761509 K i j' k) (@lem6761519 K i k j')). Qed.
Lemma lem6761523 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761524 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term40 K j' i k) = (term41 K i k j').
Proof. exact (MK_COMB (@lem6761523) (@lem6761522 K i k j')). Qed.
Lemma lem6761526 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6761527 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6761526 A s x t). Qed.
Lemma lem6761528 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term426 A K f j' dom neut) = (term569 A K dom f j' neut).
Proof. exact (@lem6761527 A dom (f j') (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6761532 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6761533 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6761532 A P x). Qed.
Lemma lem6761534 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term504 A K f j' dom) = (term591 A K dom f j').
Proof. exact (@lem6761533 A dom (f j')). Qed.
Lemma lem6761535 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761536 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term573 A K f j' dom) = (term592 A K dom f j').
Proof. exact (MK_COMB (@lem6761535) (@lem6761534 A K dom f j')). Qed.
Lemma lem6761538 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6761539 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6761538 A y x s). Qed.
Lemma lem6761540 {A K : Type'} (neut : A) (f : K -> A) (j' : K) : (term570 A K f j' neut) = (term593 A K neut f j').
Proof. exact (@lem6761539 A neut (f j') (@EMPTY A)). Qed.
Lemma lem6761546 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6761547 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6761546 A x). Qed.
Lemma lem6761548 {A K : Type'} (f : K -> A) (j' : K) : (term594 A K f j') = False.
Proof. exact (@lem6761547 A (f j')). Qed.
Lemma lem6761549 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term512 A K f j' neut) = (term512 A K f j' neut).
Proof. exact (eq_refl (term512 A K f j' neut)). Qed.
Lemma lem6761550 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term593 A K neut f j') = (term527 A K f j' neut).
Proof. exact (MK_COMB (@lem6761549 A K f j' neut) (@lem6761548 A K f j')). Qed.
Lemma lem6761552 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6761553 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term527 A K f j' neut) = ((f j') = neut).
Proof. exact (@lem6761552 ((f j') = neut)). Qed.
Lemma lem6761556 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term593 A K neut f j') = ((f j') = neut).
Proof. exact (TRANS (@lem6761550 A K f j' neut) (@lem6761553 A K f j' neut)). Qed.
Lemma lem6761557 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term570 A K f j' neut) = ((f j') = neut).
Proof. exact (TRANS (@lem6761540 A K neut f j') (@lem6761556 A K f j' neut)). Qed.
Lemma lem6761558 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6761559 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term571 A K f j' neut) = (term572 A K f j' neut).
Proof. exact (MK_COMB (@lem6761558) (@lem6761557 A K f j' neut)). Qed.
Lemma lem6761560 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term569 A K dom f j' neut) = (term595 A K dom f j' neut).
Proof. exact (MK_COMB (@lem6761536 A K dom f j') (@lem6761559 A K f j' neut)). Qed.
Lemma lem6761563 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term426 A K f j' dom neut) = (term595 A K dom f j' neut).
Proof. exact (TRANS (@lem6761528 A K dom f j' neut) (@lem6761560 A K dom f j' neut)). Qed.
Lemma lem6761564 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term643 A K i k f j' dom neut) = (term658 A K i k dom f j' neut).
Proof. exact (MK_COMB (@lem6761524 K i k j') (@lem6761563 A K dom f j' neut)). Qed.
Lemma lem6761567 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (term447 K ltle j' i) = (term447 K ltle j' i).
Proof. exact (eq_refl (term447 K ltle j' i)). Qed.
Lemma lem6761568 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1558 A K ltle i k f j' dom neut) = (term1559 A K ltle i k dom f j' neut).
Proof. exact (MK_COMB (@lem6761567 K ltle j' i) (@lem6761564 A K i k dom f j' neut)). Qed.
Lemma lem6761571 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6761572 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1560 A K ltle i k f j' dom neut) = (term1561 A K ltle i k dom f j' neut).
Proof. exact (MK_COMB (@lem6761571) (@lem6761568 A K ltle i k dom f j' neut)). Qed.
Lemma lem6761575 {K : Type'} (j' : K) (i : K) : (j' = i) = (j' = i).
Proof. exact (eq_refl (j' = i)). Qed.
Lemma lem6761576 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term1562 A K ltle k f dom neut j' i) = (term1563 A K ltle k dom f neut j' i).
Proof. exact (MK_COMB (@lem6761572 A K ltle i k dom f j' neut) (@lem6761575 K j' i)). Qed.
Lemma lem6761579 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1564 A K ltle k f dom neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6761576 A K ltle k dom f neut j' i)). Qed.
Lemma lem6761580 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761581 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1566 A K ltle k f dom neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761580 K) (@lem6761579 A K ltle k dom f neut i)). Qed.
Lemma lem6761586 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1568 A K ltle k f dom neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761495 A K dom f i neut) (@lem6761581 A K ltle k dom f neut i)). Qed.
Lemma lem6761589 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1570 A K ltle k f dom neut i) = (term1571 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761452 K i k) (@lem6761586 A K ltle k dom f neut i)). Qed.
Lemma lem6761591 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6761592 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1571 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (@lem6761591 (term1569 A K ltle k dom f neut i)). Qed.
Lemma lem6761619 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1570 A K ltle k f dom neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6761589 A K ltle k dom f neut i) (@lem6761592 A K ltle k dom f neut i)). Qed.
Lemma lem6761620 {K : Type'} (j : K) (i : K) : (term202 K j i) = (term202 K j i).
Proof. exact (eq_refl (term202 K j i)). Qed.
Lemma lem6761621 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2258 A K j ltle k f dom neut i) = (term2259 A K j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761620 K j i) (@lem6761619 A K ltle k dom f neut i)). Qed.
Lemma lem6761626 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2260 A K j ltle k f dom neut i) = (term2261 A K j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761420 A K ltle i k dom f neut) (@lem6761621 A K j ltle k dom f neut i)). Qed.
Lemma lem6761629 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2261 A K j ltle k dom f neut i) = (term2260 A K j ltle k f dom neut i).
Proof. exact (SYM (@lem6761626 A K j ltle k dom f neut i)). Qed.
Lemma lem6761631 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6761632 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2261 A K j ltle k dom f neut i) = (term2262 A K j ltle k dom f neut i).
Proof. exact (@lem6761631 (term2261 A K j ltle k dom f neut i)). Qed.
Lemma lem6761633 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2262 A K j ltle k dom f neut i) = (term2261 A K j ltle k dom f neut i).
Proof. exact (SYM (@lem6761632 A K j ltle k dom f neut i)). Qed.
Lemma lem6761634 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2263 A K j ltle k dom f neut i) : term2263 A K j ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6761637 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2262 A K j ltle k dom f neut i) : term2262 A K j ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6761638 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2264 A K j ltle k dom f neut i.
Proof. exact (fun h0 : term2262 A K j ltle k dom f neut i => @lem6761637 A K j ltle k dom f neut i h0). Qed.
Lemma lem6761639 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2264 A K j ltle k dom f neut i) : term2264 A K j ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6761640 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2262 A K j ltle k dom f neut i) : term2262 A K j ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6761641 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2262 A K j ltle k dom f neut i) (h2 : term2264 A K j ltle k dom f neut i) : term2262 A K j ltle k dom f neut i.
Proof. exact (@lem6761639 A K j ltle k dom f neut i h2 (@lem6761640 A K j ltle k dom f neut i h1)). Qed.
Lemma lem6761642 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2262 A K j ltle k dom f neut i) : term2265 A K j ltle k dom f neut i.
Proof. exact (fun h0 : term2264 A K j ltle k dom f neut i => @lem6761641 A K j ltle k dom f neut i h1 h0). Qed.
Lemma lem6761643 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2264 A K j ltle k dom f neut i) : term2264 A K j ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6761644 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2262 A K j ltle k dom f neut i) (h2 : term2264 A K j ltle k dom f neut i) : term2262 A K j ltle k dom f neut i.
Proof. exact (@lem6761642 A K j ltle k dom f neut i h1 (@lem6761643 A K j ltle k dom f neut i h2)). Qed.
Lemma lem6761645 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2264 A K j ltle k dom f neut i) : term2264 A K j ltle k dom f neut i.
Proof. exact (fun h0 : term2262 A K j ltle k dom f neut i => @lem6761644 A K j ltle k dom f neut i h0 h1). Qed.
Lemma lem6761646 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2266 A K j ltle k dom f neut i.
Proof. exact (fun h0 : term2264 A K j ltle k dom f neut i => @lem6761645 A K j ltle k dom f neut i h0). Qed.
Lemma lem6761649 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2264 A K j ltle k dom f neut i.
Proof. exact (@lem6761646 A K j ltle k dom f neut i (@lem6761638 A K j ltle k dom f neut i)). Qed.
Lemma lem6761650 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2264 A K j ltle k dom f neut i.
Proof. exact (@lem6761649 A K j ltle k dom f neut i). Qed.
Lemma lem6761680 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6761681 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2262 A K j ltle k dom f neut i) = (term2267 A K j ltle k dom f neut i).
Proof. exact (@lem6761680 (term2263 A K j ltle k dom f neut i)). Qed.
Lemma lem6761683 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6761684 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2267 A K j ltle k dom f neut i) = (term2261 A K j ltle k dom f neut i).
Proof. exact (@lem6761683 (term2261 A K j ltle k dom f neut i)). Qed.
Lemma lem6761687 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2262 A K j ltle k dom f neut i) = (term2261 A K j ltle k dom f neut i).
Proof. exact (TRANS (@lem6761681 A K j ltle k dom f neut i) (@lem6761684 A K j ltle k dom f neut i)). Qed.
Lemma lem6761748 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2268 A K ltle k dom f neut i) = (term2269 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6761687 A K j ltle k dom f neut i)). Qed.
Lemma lem6761749 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761750 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2270 A K ltle k dom f neut i) = (term2271 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761749 K) (@lem6761748 A K ltle k dom f neut i)). Qed.
Lemma lem6761755 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2272 A K k dom f neut i) = (term2273 A K k dom f neut i).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6761750 A K ltle k dom f neut i)). Qed.
Lemma lem6761756 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6761757 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2274 A K k dom f neut i) = (term2275 A K k dom f neut i).
Proof. exact (MK_COMB (@lem6761756 K) (@lem6761755 A K k dom f neut i)). Qed.
Lemma lem6761762 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2276 A K dom f neut i) = (term2277 A K dom f neut i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6761757 A K k dom f neut i)). Qed.
Lemma lem6761763 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6761764 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2278 A K dom f neut i) = (term2279 A K dom f neut i).
Proof. exact (MK_COMB (@lem6761763 K) (@lem6761762 A K dom f neut i)). Qed.
Lemma lem6761769 {A K : Type'} (f : K -> A) (neut : A) (i : K) : (term2280 A K f neut i) = (term2281 A K f neut i).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6761764 A K dom f neut i)). Qed.
Lemma lem6761770 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6761771 {A K : Type'} (f : K -> A) (neut : A) (i : K) : (term2282 A K f neut i) = (term2283 A K f neut i).
Proof. exact (MK_COMB (@lem6761770 A) (@lem6761769 A K f neut i)). Qed.
Lemma lem6761776 {A K : Type'} (neut : A) (i : K) : (term2284 A K neut i) = (term2285 A K neut i).
Proof. exact (fun_ext (fun f : K -> A => @lem6761771 A K f neut i)). Qed.
Lemma lem6761777 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6761778 {A K : Type'} (neut : A) (i : K) : (term2286 A K neut i) = (term2287 A K neut i).
Proof. exact (MK_COMB (@lem6761777 A K) (@lem6761776 A K neut i)). Qed.
Lemma lem6761783 {A K : Type'} (i : K) : (term2288 A K i) = (term2289 A K i).
Proof. exact (fun_ext (fun neut : A => @lem6761778 A K neut i)). Qed.
Lemma lem6761784 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6761785 {A K : Type'} (i : K) : (term2290 A K i) = (term2291 A K i).
Proof. exact (MK_COMB (@lem6761784 A) (@lem6761783 A K i)). Qed.
Lemma lem6761790 {A K : Type'} : (term2292 A K) = (term2293 A K).
Proof. exact (fun_ext (fun i : K => @lem6761785 A K i)). Qed.
Lemma lem6761791 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761798 {A K : Type'} : (term2294 A K) = (term2295 A K).
Proof. exact (MK_COMB (@lem6761791 K) (@lem6761790 A K)). Qed.
Lemma lem6761799 {A K : Type'} (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : _87974 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6761800 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6761801 {A K : Type'} (k : K -> Prop) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6761799 A K _87974 h1) (@lem6761800 K k)). Qed.
Lemma lem6761802 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6761803 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term709 A K _87974 k) = (term709 A K _87974 k).
Proof. exact (eq_refl (term709 A K _87974 k)). Qed.
Lemma lem6761804 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term707 A K k)) = ((_87974 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6761803 A K _87974 k) (@lem6761802 A K k)). Qed.
Lemma lem6761805 {A K : Type'} (k : K -> Prop) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6761804 A K _87974 k) (@lem6761801 A K k _87974 h1)). Qed.
Lemma lem6761806 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6761807 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6761805 A K k _87974 h1) (@lem6761806 A dom)). Qed.
Lemma lem6761808 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6761809 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87974 k dom) = (term712 A K _87974 k dom).
Proof. exact (eq_refl (term712 A K _87974 k dom)). Qed.
Lemma lem6761810 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term710 A K k dom)) = ((_87974 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6761809 A K _87974 k dom) (@lem6761808 A K k dom)). Qed.
Lemma lem6761811 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6761810 A K _87974 k dom) (@lem6761807 A K k dom _87974 h1)). Qed.
Lemma lem6761812 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6761813 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6761811 A K k dom _87974 h1) (@lem6761812 A K f)). Qed.
Lemma lem6761814 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6761815 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87974 k dom f) = (term715 A K _87974 k dom f).
Proof. exact (eq_refl (term715 A K _87974 k dom f)). Qed.
Lemma lem6761816 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term713 A K k dom f)) = ((_87974 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6761815 A K _87974 k dom f) (@lem6761814 A K k dom f)). Qed.
Lemma lem6761817 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6761816 A K _87974 k dom f) (@lem6761813 A K k dom f _87974 h1)). Qed.
Lemma lem6761818 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6761819 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6761817 A K k dom f _87974 h1) (@lem6761818 A neut)). Qed.
Lemma lem6761820 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6761821 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87974 k dom f neut) = (term717 A K _87974 k dom f neut).
Proof. exact (eq_refl (term717 A K _87974 k dom f neut)). Qed.
Lemma lem6761822 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term716 A K k dom f neut)) = ((_87974 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6761821 A K _87974 k dom f neut) (@lem6761820 A K k dom f neut)). Qed.
Lemma lem6761823 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (_87974 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6761822 A K _87974 k dom f neut) (@lem6761819 A K k dom f neut _87974 h1)). Qed.
Lemma lem6761871 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term1563 A K ltle k dom f neut j' i) = (term1563 A K ltle k dom f neut j' i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j' i)). Qed.
Lemma lem6761872 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6761871 A K ltle k dom f neut j' i)). Qed.
Lemma lem6761873 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761874 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761873 K) (@lem6761872 A K ltle k dom f neut i)). Qed.
Lemma lem6761893 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6761894 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761893 A K dom f i neut) (@lem6761874 A K ltle k dom f neut i)). Qed.
Lemma lem6761901 {K : Type'} (j : K) (i : K) : (term202 K j i) = (term202 K j i).
Proof. exact (eq_refl (term202 K j i)). Qed.
Lemma lem6761902 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2259 A K j ltle k dom f neut i) = (term2259 A K j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761901 K j i) (@lem6761894 A K ltle k dom f neut i)). Qed.
Lemma lem6761904 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term631 A K k dom f neut) = (_87974 k dom f neut).
Proof. exact (SYM (@lem6761823 A K k dom f neut _87974 h1)). Qed.
Lemma lem6761905 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term631 A K k dom f neut) = (_87974 k dom f neut).
Proof. exact (@lem6761904 A K k dom f neut _87974 h1). Qed.
Lemma lem6761906 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6761907 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6761906 K) (@lem6761905 A K k dom f neut _87974 h1)). Qed.
Lemma lem6761908 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6761909 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6761908 K) (@lem6761907 A K k dom f neut _87974 h1)). Qed.
Lemma lem6761936 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6761937 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6761936 K k ltle j i)). Qed.
Lemma lem6761938 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761939 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6761938 K) (@lem6761937 K k ltle i)). Qed.
Lemma lem6761940 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761941 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6761940) (@lem6761939 K k ltle i)). Qed.
Lemma lem6761942 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6761941 K k ltle i) (@lem6761909 A K k dom f neut _87974 h1)). Qed.
Lemma lem6761981 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6761982 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6761981 A K ltle k dom f neut j i)). Qed.
Lemma lem6761983 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6761984 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761983 K) (@lem6761982 A K ltle k dom f neut i)). Qed.
Lemma lem6761985 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6761986 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6761985) (@lem6761984 A K ltle k dom f neut i)). Qed.
Lemma lem6761987 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6761986 A K ltle k dom f neut i) (@lem6761942 A K ltle i k dom f neut _87974 h1)). Qed.
Lemma lem6761994 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6761995 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6761994 K k i) (@lem6761987 A K ltle i k dom f neut _87974 h1)). Qed.
Lemma lem6762002 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6762003 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term1272 A K ltle i k dom f neut) = (term1311 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762002 A K dom f i) (@lem6761995 A K ltle i k dom f neut _87974 h1)). Qed.
Lemma lem6762014 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6762015 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term1274 A K ltle i k dom f neut) = (term1312 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762014 A K f i neut) (@lem6762003 A K ltle i k dom f neut _87974 h1)). Qed.
Lemma lem6762016 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6762017 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term1275 A K ltle i k dom f neut) = (term1313 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762016) (@lem6762015 A K ltle i k dom f neut _87974 h1)). Qed.
Lemma lem6762018 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2261 A K j ltle k dom f neut i) = (term2296 A K _87974 j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762017 A K ltle i k dom f neut _87974 h1) (@lem6761902 A K j ltle k dom f neut i)). Qed.
Lemma lem6762019 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2269 A K ltle k dom f neut i) = (term2297 A K _87974 ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6762018 A K j ltle k dom f neut i _87974 h1)). Qed.
Lemma lem6762020 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762021 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2271 A K ltle k dom f neut i) = (term2298 A K _87974 ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762020 K) (@lem6762019 A K ltle k dom f neut i _87974 h1)). Qed.
Lemma lem6762022 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2273 A K k dom f neut i) = (term2299 A K _87974 k dom f neut i).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6762021 A K ltle k dom f neut i _87974 h1)). Qed.
Lemma lem6762023 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6762024 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2275 A K k dom f neut i) = (term2300 A K _87974 k dom f neut i).
Proof. exact (MK_COMB (@lem6762023 K) (@lem6762022 A K k dom f neut i _87974 h1)). Qed.
Lemma lem6762025 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2277 A K dom f neut i) = (term2301 A K _87974 dom f neut i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762024 A K k dom f neut i _87974 h1)). Qed.
Lemma lem6762026 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762027 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2279 A K dom f neut i) = (term2302 A K _87974 dom f neut i).
Proof. exact (MK_COMB (@lem6762026 K) (@lem6762025 A K dom f neut i _87974 h1)). Qed.
Lemma lem6762028 {A K : Type'} (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2281 A K f neut i) = (term2303 A K _87974 f neut i).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762027 A K dom f neut i _87974 h1)). Qed.
Lemma lem6762029 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762030 {A K : Type'} (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2283 A K f neut i) = (term2304 A K _87974 f neut i).
Proof. exact (MK_COMB (@lem6762029 A) (@lem6762028 A K f neut i _87974 h1)). Qed.
Lemma lem6762031 {A K : Type'} (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2285 A K neut i) = (term2305 A K _87974 neut i).
Proof. exact (fun_ext (fun f : K -> A => @lem6762030 A K f neut i _87974 h1)). Qed.
Lemma lem6762032 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762033 {A K : Type'} (neut : A) (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2287 A K neut i) = (term2306 A K _87974 neut i).
Proof. exact (MK_COMB (@lem6762032 A K) (@lem6762031 A K neut i _87974 h1)). Qed.
Lemma lem6762034 {A K : Type'} (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2289 A K i) = (term2307 A K _87974 i).
Proof. exact (fun_ext (fun neut : A => @lem6762033 A K neut i _87974 h1)). Qed.
Lemma lem6762035 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762036 {A K : Type'} (i : K) (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2291 A K i) = (term2308 A K _87974 i).
Proof. exact (MK_COMB (@lem6762035 A) (@lem6762034 A K i _87974 h1)). Qed.
Lemma lem6762037 {A K : Type'} (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2293 A K) = (term2309 A K _87974).
Proof. exact (fun_ext (fun i : K => @lem6762036 A K i _87974 h1)). Qed.
Lemma lem6762038 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762039 {A K : Type'} (_87974 : type835 A K) (h1 : _87974 = (term706 A K)) : (term2295 A K) = (term2310 A K _87974).
Proof. exact (MK_COMB (@lem6762038 K) (@lem6762037 A K _87974 h1)). Qed.
Lemma lem6762040 {A K : Type'} (_87974 : type835 A K) : term2311 A K _87974.
Proof. exact (fun h0 : _87974 = (term706 A K) => @lem6762039 A K _87974 h0). Qed.
Lemma lem6762041 {A K : Type'} : term2312 A K.
Proof. exact (fun _87974 : type835 A K => @lem6762040 A K _87974). Qed.
Lemma lem6762043 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6762044 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6762043 (type835 A K) P c Q). Qed.
Lemma lem6762045 {A K : Type'} : term2313 A K.
Proof. exact (@lem6762044 A K (term2295 A K) (term706 A K) (term2314 A K)). Qed.
Lemma lem6762046 {A K : Type'} (_87974 : type835 A K) : (term2315 A K _87974) = (term2310 A K _87974).
Proof. exact (eq_refl (term2315 A K _87974)). Qed.
Lemma lem6762047 {A K : Type'} : (term2316 A K) = (term2316 A K).
Proof. exact (eq_refl (term2316 A K)). Qed.
Lemma lem6762048 {A K : Type'} (_87974 : type835 A K) : ((term2295 A K) = (term2315 A K _87974)) = ((term2295 A K) = (term2310 A K _87974)).
Proof. exact (MK_COMB (@lem6762047 A K) (@lem6762046 A K _87974)). Qed.
Lemma lem6762049 {A K : Type'} (_87974 : type835 A K) : (term746 A K _87974) = (term746 A K _87974).
Proof. exact (eq_refl (term746 A K _87974)). Qed.
Lemma lem6762050 {A K : Type'} (_87974 : type835 A K) : (term2317 A K _87974) = (term2311 A K _87974).
Proof. exact (MK_COMB (@lem6762049 A K _87974) (@lem6762048 A K _87974)). Qed.
Lemma lem6762051 {A K : Type'} : (term2318 A K) = (term2319 A K).
Proof. exact (fun_ext (fun _87974 : type835 A K => @lem6762050 A K _87974)). Qed.
Lemma lem6762052 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6762053 {A K : Type'} : (term2320 A K) = (term2312 A K).
Proof. exact (MK_COMB (@lem6762052 A K) (@lem6762051 A K)). Qed.
Lemma lem6762054 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6762055 {A K : Type'} : (term2321 A K) = (term2322 A K).
Proof. exact (MK_COMB (@lem6762054) (@lem6762053 A K)). Qed.
Lemma lem6762056 {A K : Type'} (_87974 : type835 A K) : (term2315 A K _87974) = (term2310 A K _87974).
Proof. exact (eq_refl (term2315 A K _87974)). Qed.
Lemma lem6762057 {A K : Type'} (_87974 : type835 A K) : (term746 A K _87974) = (term746 A K _87974).
Proof. exact (eq_refl (term746 A K _87974)). Qed.
Lemma lem6762058 {A K : Type'} (_87974 : type835 A K) : (term2323 A K _87974) = (term2324 A K _87974).
Proof. exact (MK_COMB (@lem6762057 A K _87974) (@lem6762056 A K _87974)). Qed.
Lemma lem6762059 {A K : Type'} : (term2325 A K) = (term2326 A K).
Proof. exact (fun_ext (fun _87974 : type835 A K => @lem6762058 A K _87974)). Qed.
Lemma lem6762060 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6762061 {A K : Type'} : (term2327 A K) = (term2328 A K).
Proof. exact (MK_COMB (@lem6762060 A K) (@lem6762059 A K)). Qed.
Lemma lem6762062 {A K : Type'} : (term2316 A K) = (term2316 A K).
Proof. exact (eq_refl (term2316 A K)). Qed.
Lemma lem6762063 {A K : Type'} : ((term2295 A K) = (term2327 A K)) = ((term2295 A K) = (term2328 A K)).
Proof. exact (MK_COMB (@lem6762062 A K) (@lem6762061 A K)). Qed.
Lemma lem6762064 {A K : Type'} : (term2313 A K) = (term2329 A K).
Proof. exact (MK_COMB (@lem6762055 A K) (@lem6762063 A K)). Qed.
Lemma lem6762065 {A K : Type'} : term2329 A K.
Proof. exact (EQ_MP (@lem6762064 A K) (@lem6762045 A K)). Qed.
Lemma lem6762066 {A K : Type'} : (term2295 A K) = (term2328 A K).
Proof. exact (@lem6762065 A K (@lem6762041 A K)). Qed.
Lemma lem6762068 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6762069 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6762068 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6762070 {A K : Type'} (_87974 : type835 A K) : (_87974 = (term764 A K)) = (term765 A K _87974).
Proof. exact (@lem6762069 A K _87974 (term706 A K)). Qed.
Lemma lem6762071 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6762072 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762071 A K k)). Qed.
Lemma lem6762073 {A K : Type'} (_87974 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974)). Qed.
Lemma lem6762074 {A K : Type'} (_87974 : type835 A K) : (_87974 = (term764 A K)) = (_87974 = (term706 A K)).
Proof. exact (MK_COMB (@lem6762073 A K _87974) (@lem6762072 A K)). Qed.
Lemma lem6762075 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762076 {A K : Type'} (_87974 : type835 A K) : (term766 A K _87974) = (term767 A K _87974).
Proof. exact (MK_COMB (@lem6762075) (@lem6762074 A K _87974)). Qed.
Lemma lem6762077 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6762078 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term709 A K _87974 k) = (term709 A K _87974 k).
Proof. exact (eq_refl (term709 A K _87974 k)). Qed.
Lemma lem6762079 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term707 A K k)) = ((_87974 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6762078 A K _87974 k) (@lem6762077 A K k)). Qed.
Lemma lem6762080 {A K : Type'} (_87974 : type835 A K) : (term768 A K _87974) = (term769 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762079 A K _87974 k)). Qed.
Lemma lem6762081 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762082 {A K : Type'} (_87974 : type835 A K) : (term765 A K _87974) = (term770 A K _87974).
Proof. exact (MK_COMB (@lem6762081 K) (@lem6762080 A K _87974)). Qed.
Lemma lem6762083 {A K : Type'} (_87974 : type835 A K) : ((_87974 = (term764 A K)) = (term765 A K _87974)) = ((_87974 = (term706 A K)) = (term770 A K _87974)).
Proof. exact (MK_COMB (@lem6762076 A K _87974) (@lem6762082 A K _87974)). Qed.
Lemma lem6762084 {A K : Type'} (_87974 : type835 A K) : (_87974 = (term706 A K)) = (term770 A K _87974).
Proof. exact (EQ_MP (@lem6762083 A K _87974) (@lem6762070 A K _87974)). Qed.
Lemma lem6762086 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6762087 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6762086 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6762088 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term773 A K k)) = (term774 A K _87974 k).
Proof. exact (@lem6762087 A K (_87974 k) (term708 A K k)). Qed.
Lemma lem6762089 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6762090 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762089 A K k dom)). Qed.
Lemma lem6762091 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term709 A K _87974 k) = (term709 A K _87974 k).
Proof. exact (eq_refl (term709 A K _87974 k)). Qed.
Lemma lem6762092 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term773 A K k)) = ((_87974 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6762091 A K _87974 k) (@lem6762090 A K k)). Qed.
Lemma lem6762093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762094 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term775 A K _87974 k) = (term776 A K _87974 k).
Proof. exact (MK_COMB (@lem6762093) (@lem6762092 A K _87974 k)). Qed.
Lemma lem6762095 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6762096 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87974 k dom) = (term712 A K _87974 k dom).
Proof. exact (eq_refl (term712 A K _87974 k dom)). Qed.
Lemma lem6762097 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term710 A K k dom)) = ((_87974 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6762096 A K _87974 k dom) (@lem6762095 A K k dom)). Qed.
Lemma lem6762098 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term777 A K _87974 k) = (term778 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762097 A K _87974 k dom)). Qed.
Lemma lem6762099 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762100 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term774 A K _87974 k) = (term779 A K _87974 k).
Proof. exact (MK_COMB (@lem6762099 A) (@lem6762098 A K _87974 k)). Qed.
Lemma lem6762101 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (((_87974 k) = (term773 A K k)) = (term774 A K _87974 k)) = (((_87974 k) = (term708 A K k)) = (term779 A K _87974 k)).
Proof. exact (MK_COMB (@lem6762094 A K _87974 k) (@lem6762100 A K _87974 k)). Qed.
Lemma lem6762102 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term708 A K k)) = (term779 A K _87974 k).
Proof. exact (EQ_MP (@lem6762101 A K _87974 k) (@lem6762088 A K _87974 k)). Qed.
Lemma lem6762104 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6762105 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6762104 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6762106 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term782 A K k dom)) = (term783 A K _87974 k dom).
Proof. exact (@lem6762105 A K (_87974 k dom) (term711 A K k dom)). Qed.
Lemma lem6762107 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6762108 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762107 A K k dom f)). Qed.
Lemma lem6762109 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _87974 k dom) = (term712 A K _87974 k dom).
Proof. exact (eq_refl (term712 A K _87974 k dom)). Qed.
Lemma lem6762110 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term782 A K k dom)) = ((_87974 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6762109 A K _87974 k dom) (@lem6762108 A K k dom)). Qed.
Lemma lem6762111 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762112 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _87974 k dom) = (term785 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762111) (@lem6762110 A K _87974 k dom)). Qed.
Lemma lem6762113 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6762114 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87974 k dom f) = (term715 A K _87974 k dom f).
Proof. exact (eq_refl (term715 A K _87974 k dom f)). Qed.
Lemma lem6762115 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term713 A K k dom f)) = ((_87974 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6762114 A K _87974 k dom f) (@lem6762113 A K k dom f)). Qed.
Lemma lem6762116 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _87974 k dom) = (term787 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762115 A K _87974 k dom f)). Qed.
Lemma lem6762117 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762118 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _87974 k dom) = (term788 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762117 A K) (@lem6762116 A K _87974 k dom)). Qed.
Lemma lem6762119 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_87974 k dom) = (term782 A K k dom)) = (term783 A K _87974 k dom)) = (((_87974 k dom) = (term711 A K k dom)) = (term788 A K _87974 k dom)).
Proof. exact (MK_COMB (@lem6762112 A K _87974 k dom) (@lem6762118 A K _87974 k dom)). Qed.
Lemma lem6762120 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term711 A K k dom)) = (term788 A K _87974 k dom).
Proof. exact (EQ_MP (@lem6762119 A K _87974 k dom) (@lem6762106 A K _87974 k dom)). Qed.
Lemma lem6762122 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6762123 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6762122 (K -> Prop) A s t). Qed.
Lemma lem6762124 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term791 A K k dom f)) = (term792 A K _87974 k dom f).
Proof. exact (@lem6762123 A K (_87974 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6762125 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6762126 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762125 A K k dom f neut)). Qed.
Lemma lem6762127 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _87974 k dom f) = (term715 A K _87974 k dom f).
Proof. exact (eq_refl (term715 A K _87974 k dom f)). Qed.
Lemma lem6762128 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term791 A K k dom f)) = ((_87974 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6762127 A K _87974 k dom f) (@lem6762126 A K k dom f)). Qed.
Lemma lem6762129 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762130 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _87974 k dom f) = (term794 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762129) (@lem6762128 A K _87974 k dom f)). Qed.
Lemma lem6762131 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6762132 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87974 k dom f neut) = (term717 A K _87974 k dom f neut).
Proof. exact (eq_refl (term717 A K _87974 k dom f neut)). Qed.
Lemma lem6762133 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term716 A K k dom f neut)) = ((_87974 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6762132 A K _87974 k dom f neut) (@lem6762131 A K k dom f neut)). Qed.
Lemma lem6762134 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _87974 k dom f) = (term796 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762133 A K _87974 k dom f neut)). Qed.
Lemma lem6762135 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762136 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _87974 k dom f) = (term797 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762135 A) (@lem6762134 A K _87974 k dom f)). Qed.
Lemma lem6762137 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_87974 k dom f) = (term791 A K k dom f)) = (term792 A K _87974 k dom f)) = (((_87974 k dom f) = (term714 A K k dom f)) = (term797 A K _87974 k dom f)).
Proof. exact (MK_COMB (@lem6762130 A K _87974 k dom f) (@lem6762136 A K _87974 k dom f)). Qed.
Lemma lem6762138 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term714 A K k dom f)) = (term797 A K _87974 k dom f).
Proof. exact (EQ_MP (@lem6762137 A K _87974 k dom f) (@lem6762124 A K _87974 k dom f)). Qed.
Lemma lem6762140 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6762141 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6762140 Prop K s t). Qed.
Lemma lem6762142 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _87974 k dom f neut).
Proof. exact (@lem6762141 K (_87974 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6762143 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762144 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762143 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762145 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _87974 k dom f neut) = (term717 A K _87974 k dom f neut).
Proof. exact (eq_refl (term717 A K _87974 k dom f neut)). Qed.
Lemma lem6762146 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term799 A K k dom f neut)) = ((_87974 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6762145 A K _87974 k dom f neut) (@lem6762144 A K k dom f neut)). Qed.
Lemma lem6762147 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762148 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _87974 k dom f neut) = (term803 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762147) (@lem6762146 A K _87974 k dom f neut)). Qed.
Lemma lem6762149 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762150 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87974 k dom f neut GEN_PVAR_272) = (term804 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762151 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6762150 A K _87974 k dom f neut GEN_PVAR_272) (@lem6762149 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762152 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _87974 k dom f neut) = (term806 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762151 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762153 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762154 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _87974 k dom f neut) = (term807 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762153 K) (@lem6762152 A K _87974 k dom f neut)). Qed.
Lemma lem6762155 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_87974 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _87974 k dom f neut)) = (((_87974 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87974 k dom f neut)).
Proof. exact (MK_COMB (@lem6762148 A K _87974 k dom f neut) (@lem6762154 A K _87974 k dom f neut)). Qed.
Lemma lem6762156 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87974 k dom f neut).
Proof. exact (EQ_MP (@lem6762155 A K _87974 k dom f neut) (@lem6762142 A K _87974 k dom f neut)). Qed.
Lemma lem6762157 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6762158 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87974 k dom f neut) = (term806 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762157 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762159 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762160 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87974 k dom f neut) = (term807 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762159 K) (@lem6762158 A K _87974 k dom f neut)). Qed.
Lemma lem6762161 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _87974 k dom f neut).
Proof. exact (TRANS (@lem6762156 A K _87974 k dom f neut) (@lem6762160 A K _87974 k dom f neut)). Qed.
Lemma lem6762162 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _87974 k dom f) = (term808 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762161 A K _87974 k dom f neut)). Qed.
Lemma lem6762163 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762164 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _87974 k dom f) = (term809 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762163 A) (@lem6762162 A K _87974 k dom f)). Qed.
Lemma lem6762165 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_87974 k dom f) = (term714 A K k dom f)) = (term809 A K _87974 k dom f).
Proof. exact (TRANS (@lem6762138 A K _87974 k dom f) (@lem6762164 A K _87974 k dom f)). Qed.
Lemma lem6762166 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _87974 k dom) = (term810 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762165 A K _87974 k dom f)). Qed.
Lemma lem6762167 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762168 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _87974 k dom) = (term811 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762167 A K) (@lem6762166 A K _87974 k dom)). Qed.
Lemma lem6762169 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_87974 k dom) = (term711 A K k dom)) = (term811 A K _87974 k dom).
Proof. exact (TRANS (@lem6762120 A K _87974 k dom) (@lem6762168 A K _87974 k dom)). Qed.
Lemma lem6762170 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term778 A K _87974 k) = (term812 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762169 A K _87974 k dom)). Qed.
Lemma lem6762171 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762172 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term779 A K _87974 k) = (term813 A K _87974 k).
Proof. exact (MK_COMB (@lem6762171 A) (@lem6762170 A K _87974 k)). Qed.
Lemma lem6762173 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((_87974 k) = (term708 A K k)) = (term813 A K _87974 k).
Proof. exact (TRANS (@lem6762102 A K _87974 k) (@lem6762172 A K _87974 k)). Qed.
Lemma lem6762174 {A K : Type'} (_87974 : type835 A K) : (term769 A K _87974) = (term814 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762173 A K _87974 k)). Qed.
Lemma lem6762175 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762176 {A K : Type'} (_87974 : type835 A K) : (term770 A K _87974) = (term815 A K _87974).
Proof. exact (MK_COMB (@lem6762175 K) (@lem6762174 A K _87974)). Qed.
Lemma lem6762177 {A K : Type'} (_87974 : type835 A K) : (_87974 = (term706 A K)) = (term815 A K _87974).
Proof. exact (TRANS (@lem6762084 A K _87974) (@lem6762176 A K _87974)). Qed.
Lemma lem6762178 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6762179 {A K : Type'} (_87974 : type835 A K) : (term746 A K _87974) = (term816 A K _87974).
Proof. exact (MK_COMB (@lem6762178) (@lem6762177 A K _87974)). Qed.
Lemma lem6762180 {A K : Type'} (_87974 : type835 A K) : (term2310 A K _87974) = (term2310 A K _87974).
Proof. exact (eq_refl (term2310 A K _87974)). Qed.
Lemma lem6762181 {A K : Type'} (_87974 : type835 A K) : (term2324 A K _87974) = (term2330 A K _87974).
Proof. exact (MK_COMB (@lem6762179 A K _87974) (@lem6762180 A K _87974)). Qed.
Lemma lem6762182 {A K : Type'} : (term2326 A K) = (term2331 A K).
Proof. exact (fun_ext (fun _87974 : type835 A K => @lem6762181 A K _87974)). Qed.
Lemma lem6762183 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6762184 {A K : Type'} : (term2328 A K) = (term2332 A K).
Proof. exact (MK_COMB (@lem6762183 A K) (@lem6762182 A K)). Qed.
Lemma lem6762185 {A K : Type'} : (term2316 A K) = (term2316 A K).
Proof. exact (eq_refl (term2316 A K)). Qed.
Lemma lem6762186 {A K : Type'} : ((term2295 A K) = (term2328 A K)) = ((term2295 A K) = (term2332 A K)).
Proof. exact (MK_COMB (@lem6762185 A K) (@lem6762184 A K)). Qed.
Lemma lem6762189 {A K : Type'} : (term2295 A K) = (term2332 A K).
Proof. exact (EQ_MP (@lem6762186 A K) (@lem6762066 A K)). Qed.
Lemma lem6762190 {A K : Type'} : (term2294 A K) = (term2332 A K).
Proof. exact (TRANS (@lem6761798 A K) (@lem6762189 A K)). Qed.
Lemma lem6762213 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term1563 A K ltle k dom f neut j' i) = (term1563 A K ltle k dom f neut j' i).
Proof. exact (eq_refl (term1563 A K ltle k dom f neut j' i)). Qed.
Lemma lem6762214 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1565 A K ltle k dom f neut i) = (term1565 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6762213 A K ltle k dom f neut j' i)). Qed.
Lemma lem6762215 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762216 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1567 A K ltle k dom f neut i) = (term1567 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762215 K) (@lem6762214 A K ltle k dom f neut i)). Qed.
Lemma lem6762225 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1557 A K dom f i neut) = (term1557 A K dom f i neut).
Proof. exact (eq_refl (term1557 A K dom f i neut)). Qed.
Lemma lem6762226 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762225 A K dom f i neut) (@lem6762216 A K ltle k dom f neut i)). Qed.
Lemma lem6762229 {K : Type'} (j : K) (i : K) : (term202 K j i) = (term202 K j i).
Proof. exact (eq_refl (term202 K j i)). Qed.
Lemma lem6762230 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2259 A K j ltle k dom f neut i) = (term2259 A K j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762229 K j i) (@lem6762226 A K ltle k dom f neut i)). Qed.
Lemma lem6762231 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87974 k dom f neut) = (term719 A K _87974 k dom f neut).
Proof. exact (eq_refl (term719 A K _87974 k dom f neut)). Qed.
Lemma lem6762244 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6762245 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6762244 K k ltle j i)). Qed.
Lemma lem6762246 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762247 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6762246 K) (@lem6762245 K k ltle i)). Qed.
Lemma lem6762248 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762249 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6762248) (@lem6762247 K k ltle i)). Qed.
Lemma lem6762250 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87974 k dom f neut) = (term720 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762249 K k ltle i) (@lem6762231 A K _87974 k dom f neut)). Qed.
Lemma lem6762269 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6762270 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6762269 A K ltle k dom f neut j i)). Qed.
Lemma lem6762271 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762272 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762271 K) (@lem6762270 A K ltle k dom f neut i)). Qed.
Lemma lem6762273 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762274 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762273) (@lem6762272 A K ltle k dom f neut i)). Qed.
Lemma lem6762275 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87974 k dom f neut) = (term721 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762274 A K ltle k dom f neut i) (@lem6762250 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6762280 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6762281 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87974 k dom f neut) = (term722 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762280 K k i) (@lem6762275 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6762284 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6762285 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87974 k dom f neut) = (term1311 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762284 A K dom f i) (@lem6762281 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6762290 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6762291 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87974 k dom f neut) = (term1312 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762290 A K f i neut) (@lem6762285 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6762292 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6762293 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1313 A K ltle i _87974 k dom f neut) = (term1313 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762292) (@lem6762291 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6762294 {A K : Type'} (_87974 : type835 A K) (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2296 A K _87974 j ltle k dom f neut i) = (term2296 A K _87974 j ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762293 A K ltle i _87974 k dom f neut) (@lem6762230 A K j ltle k dom f neut i)). Qed.
Lemma lem6762295 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2297 A K _87974 ltle k dom f neut i) = (term2297 A K _87974 ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6762294 A K _87974 j ltle k dom f neut i)). Qed.
Lemma lem6762296 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762297 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2298 A K _87974 ltle k dom f neut i) = (term2298 A K _87974 ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6762296 K) (@lem6762295 A K _87974 ltle k dom f neut i)). Qed.
Lemma lem6762298 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2299 A K _87974 k dom f neut i) = (term2299 A K _87974 k dom f neut i).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6762297 A K _87974 ltle k dom f neut i)). Qed.
Lemma lem6762299 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6762300 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2300 A K _87974 k dom f neut i) = (term2300 A K _87974 k dom f neut i).
Proof. exact (MK_COMB (@lem6762299 K) (@lem6762298 A K _87974 k dom f neut i)). Qed.
Lemma lem6762301 {A K : Type'} (_87974 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2301 A K _87974 dom f neut i) = (term2301 A K _87974 dom f neut i).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762300 A K _87974 k dom f neut i)). Qed.
Lemma lem6762302 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762303 {A K : Type'} (_87974 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2302 A K _87974 dom f neut i) = (term2302 A K _87974 dom f neut i).
Proof. exact (MK_COMB (@lem6762302 K) (@lem6762301 A K _87974 dom f neut i)). Qed.
Lemma lem6762304 {A K : Type'} (_87974 : type835 A K) (f : K -> A) (neut : A) (i : K) : (term2303 A K _87974 f neut i) = (term2303 A K _87974 f neut i).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762303 A K _87974 dom f neut i)). Qed.
Lemma lem6762305 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762306 {A K : Type'} (_87974 : type835 A K) (f : K -> A) (neut : A) (i : K) : (term2304 A K _87974 f neut i) = (term2304 A K _87974 f neut i).
Proof. exact (MK_COMB (@lem6762305 A) (@lem6762304 A K _87974 f neut i)). Qed.
Lemma lem6762307 {A K : Type'} (_87974 : type835 A K) (neut : A) (i : K) : (term2305 A K _87974 neut i) = (term2305 A K _87974 neut i).
Proof. exact (fun_ext (fun f : K -> A => @lem6762306 A K _87974 f neut i)). Qed.
Lemma lem6762308 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762309 {A K : Type'} (_87974 : type835 A K) (neut : A) (i : K) : (term2306 A K _87974 neut i) = (term2306 A K _87974 neut i).
Proof. exact (MK_COMB (@lem6762308 A K) (@lem6762307 A K _87974 neut i)). Qed.
Lemma lem6762310 {A K : Type'} (_87974 : type835 A K) (i : K) : (term2307 A K _87974 i) = (term2307 A K _87974 i).
Proof. exact (fun_ext (fun neut : A => @lem6762309 A K _87974 neut i)). Qed.
Lemma lem6762311 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762312 {A K : Type'} (_87974 : type835 A K) (i : K) : (term2308 A K _87974 i) = (term2308 A K _87974 i).
Proof. exact (MK_COMB (@lem6762311 A) (@lem6762310 A K _87974 i)). Qed.
Lemma lem6762313 {A K : Type'} (_87974 : type835 A K) : (term2309 A K _87974) = (term2309 A K _87974).
Proof. exact (fun_ext (fun i : K => @lem6762312 A K _87974 i)). Qed.
Lemma lem6762314 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762315 {A K : Type'} (_87974 : type835 A K) : (term2310 A K _87974) = (term2310 A K _87974).
Proof. exact (MK_COMB (@lem6762314 K) (@lem6762313 A K _87974)). Qed.
Lemma lem6762316 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762317 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6762316 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762318 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6762319 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762318 K) (@lem6762317 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762322 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _87974 k dom f neut GEN_PVAR_272) = (term804 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762323 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6762322 A K _87974 k dom f neut GEN_PVAR_272) (@lem6762319 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762324 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87974 k dom f neut) = (term806 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762323 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762325 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762326 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87974 k dom f neut) = (term807 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762325 K) (@lem6762324 A K _87974 k dom f neut)). Qed.
Lemma lem6762327 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87974 k dom f) = (term808 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762326 A K _87974 k dom f neut)). Qed.
Lemma lem6762328 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762329 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87974 k dom f) = (term809 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762328 A) (@lem6762327 A K _87974 k dom f)). Qed.
Lemma lem6762330 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87974 k dom) = (term810 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762329 A K _87974 k dom f)). Qed.
Lemma lem6762331 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762332 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87974 k dom) = (term811 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762331 A K) (@lem6762330 A K _87974 k dom)). Qed.
Lemma lem6762333 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term812 A K _87974 k) = (term812 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762332 A K _87974 k dom)). Qed.
Lemma lem6762334 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762335 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term813 A K _87974 k) = (term813 A K _87974 k).
Proof. exact (MK_COMB (@lem6762334 A) (@lem6762333 A K _87974 k)). Qed.
Lemma lem6762336 {A K : Type'} (_87974 : type835 A K) : (term814 A K _87974) = (term814 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762335 A K _87974 k)). Qed.
Lemma lem6762337 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762338 {A K : Type'} (_87974 : type835 A K) : (term815 A K _87974) = (term815 A K _87974).
Proof. exact (MK_COMB (@lem6762337 K) (@lem6762336 A K _87974)). Qed.
Lemma lem6762339 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6762340 {A K : Type'} (_87974 : type835 A K) : (term816 A K _87974) = (term816 A K _87974).
Proof. exact (MK_COMB (@lem6762339) (@lem6762338 A K _87974)). Qed.
Lemma lem6762341 {A K : Type'} (_87974 : type835 A K) : (term2330 A K _87974) = (term2330 A K _87974).
Proof. exact (MK_COMB (@lem6762340 A K _87974) (@lem6762315 A K _87974)). Qed.
Lemma lem6762342 {A K : Type'} : (term2331 A K) = (term2331 A K).
Proof. exact (fun_ext (fun _87974 : type835 A K => @lem6762341 A K _87974)). Qed.
Lemma lem6762343 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6762344 {A K : Type'} : (term2332 A K) = (term2332 A K).
Proof. exact (MK_COMB (@lem6762343 A K) (@lem6762342 A K)). Qed.
Lemma lem6762497 {A K : Type'} : (term2294 A K) = (term2332 A K).
Proof. exact (TRANS (@lem6762190 A K) (@lem6762344 A K)). Qed.
Lemma lem6762498 {A K : Type'} : (term2332 A K) = (term2294 A K).
Proof. exact (SYM (@lem6762497 A K)). Qed.
Lemma lem6762499 {A K : Type'} (_87974 : type835 A K) (h1 : term815 A K _87974) : term815 A K _87974.
Proof. exact (h1). Qed.
Lemma lem6762500 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1312 A K ltle i _87974 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6762503 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6762504 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1569 A K ltle k dom f neut i) = (term2333 A K ltle k dom f neut i).
Proof. exact (@lem6762503 (term1569 A K ltle k dom f neut i)). Qed.
Lemma lem6762505 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2333 A K ltle k dom f neut i) = (term1569 A K ltle k dom f neut i).
Proof. exact (SYM (@lem6762504 A K ltle k dom f neut i)). Qed.
Lemma lem6762506 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term1572 A K ltle k dom f neut i) : term1572 A K ltle k dom f neut i.
Proof. exact (h1). Qed.
Lemma lem6762510 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762511 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6762512 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6762511 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762513 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762514 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6762516 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6762514) (@lem6762513 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762517 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6762516 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762518 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762519 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762518 K) (@lem6762517 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762520 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6762512 A K GEN_PVAR_272 k dom f neut) (@lem6762519 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762521 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6762510 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6762522 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6762523 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762522 K) (@lem6762521 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762525 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87974 k dom f neut GEN_PVAR_272) = (term831 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762526 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _87974 GEN_PVAR_272 k dom f neut) = (term832 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762525 A K _87974 k dom f neut GEN_PVAR_272) (@lem6762523 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762528 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _87974 k dom f neut GEN_PVAR_272) = (term833 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762529 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _87974 GEN_PVAR_272 k dom f neut) = (term835 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762528 A K _87974 k dom f neut GEN_PVAR_272) (@lem6762520 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762530 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762531 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _87974 GEN_PVAR_272 k dom f neut) = (term837 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762530) (@lem6762529 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762532 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _87974 GEN_PVAR_272 k dom f neut) = (term839 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762531 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6762526 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762533 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_87974 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762534 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_87974 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6762533 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6762532 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762535 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _87974 k dom f neut) = (term840 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762534 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762536 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762537 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _87974 k dom f neut) = (term841 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762536 K) (@lem6762535 A K _87974 k dom f neut)). Qed.
Lemma lem6762538 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _87974 k dom f) = (term842 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762537 A K _87974 k dom f neut)). Qed.
Lemma lem6762539 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762540 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _87974 k dom f) = (term843 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762539 A) (@lem6762538 A K _87974 k dom f)). Qed.
Lemma lem6762541 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _87974 k dom) = (term844 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762540 A K _87974 k dom f)). Qed.
Lemma lem6762542 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762543 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _87974 k dom) = (term845 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762542 A K) (@lem6762541 A K _87974 k dom)). Qed.
Lemma lem6762544 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term812 A K _87974 k) = (term846 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762543 A K _87974 k dom)). Qed.
Lemma lem6762545 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762546 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term813 A K _87974 k) = (term847 A K _87974 k).
Proof. exact (MK_COMB (@lem6762545 A) (@lem6762544 A K _87974 k)). Qed.
Lemma lem6762547 {A K : Type'} (_87974 : type835 A K) : (term814 A K _87974) = (term848 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6762546 A K _87974 k)). Qed.
Lemma lem6762548 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6762549 {A K : Type'} (_87974 : type835 A K) : (term815 A K _87974) = (term849 A K _87974).
Proof. exact (MK_COMB (@lem6762548 K) (@lem6762547 A K _87974)). Qed.
Lemma lem6762567 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6762568 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6762567 K P Q). Qed.
Lemma lem6762569 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _87974 k dom f neut) = (term853 A K _87974 k dom f neut).
Proof. exact (@lem6762568 K (term854 A K _87974 k dom f neut) (term855 A K _87974 k dom f neut)). Qed.
Lemma lem6762570 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _87974 k dom f neut GEN_PVAR_272) = (term835 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762572 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _87974 k dom f neut GEN_PVAR_272) = (term837 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762571) (@lem6762570 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762573 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _87974 k dom f neut GEN_PVAR_272) = (term832 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762574 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _87974 k dom f neut GEN_PVAR_272) = (term839 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6762572 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6762573 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762575 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _87974 k dom f neut) = (term840 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762574 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762576 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762577 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _87974 k dom f neut) = (term841 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762576 K) (@lem6762575 A K _87974 k dom f neut)). Qed.
Lemma lem6762578 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762579 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _87974 k dom f neut) = (term862 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762578) (@lem6762577 A K _87974 k dom f neut)). Qed.
Lemma lem6762580 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _87974 k dom f neut GEN_PVAR_272) = (term835 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762581 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _87974 k dom f neut) = (term854 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762580 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762582 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762583 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _87974 k dom f neut) = (term865 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762582 K) (@lem6762581 A K _87974 k dom f neut)). Qed.
Lemma lem6762584 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762585 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _87974 k dom f neut) = (term867 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762584) (@lem6762583 A K _87974 k dom f neut)). Qed.
Lemma lem6762586 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _87974 k dom f neut GEN_PVAR_272) = (term832 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6762587 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _87974 k dom f neut) = (term855 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6762586 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6762588 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6762589 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _87974 k dom f neut) = (term870 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762588 K) (@lem6762587 A K _87974 k dom f neut)). Qed.
Lemma lem6762590 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _87974 k dom f neut) = (term871 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762585 A K _87974 k dom f neut) (@lem6762589 A K _87974 k dom f neut)). Qed.
Lemma lem6762591 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _87974 k dom f neut) = (term853 A K _87974 k dom f neut)) = ((term841 A K _87974 k dom f neut) = (term871 A K _87974 k dom f neut)).
Proof. exact (MK_COMB (@lem6762579 A K _87974 k dom f neut) (@lem6762590 A K _87974 k dom f neut)). Qed.
Lemma lem6762592 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _87974 k dom f neut) = (term871 A K _87974 k dom f neut).
Proof. exact (EQ_MP (@lem6762591 A K _87974 k dom f neut) (@lem6762569 A K _87974 k dom f neut)). Qed.
Lemma lem6762697 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _87974 k dom f) = (term872 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762592 A K _87974 k dom f neut)). Qed.
Lemma lem6762698 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762699 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _87974 k dom f) = (term873 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762698 A) (@lem6762697 A K _87974 k dom f)). Qed.
Lemma lem6762701 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6762702 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6762701 A P Q). Qed.
Lemma lem6762703 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _87974 k dom f) = (term875 A K _87974 k dom f).
Proof. exact (@lem6762702 A (term876 A K _87974 k dom f) (term877 A K _87974 k dom f)). Qed.
Lemma lem6762704 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _87974 k dom f neut) = (term865 A K _87974 k dom f neut).
Proof. exact (eq_refl (term878 A K _87974 k dom f neut)). Qed.
Lemma lem6762705 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762706 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _87974 k dom f neut) = (term867 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762705) (@lem6762704 A K _87974 k dom f neut)). Qed.
Lemma lem6762707 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _87974 k dom f neut) = (term870 A K _87974 k dom f neut).
Proof. exact (eq_refl (term880 A K _87974 k dom f neut)). Qed.
Lemma lem6762708 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _87974 k dom f neut) = (term871 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6762706 A K _87974 k dom f neut) (@lem6762707 A K _87974 k dom f neut)). Qed.
Lemma lem6762709 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _87974 k dom f) = (term872 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762708 A K _87974 k dom f neut)). Qed.
Lemma lem6762710 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762711 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _87974 k dom f) = (term873 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762710 A) (@lem6762709 A K _87974 k dom f)). Qed.
Lemma lem6762712 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762713 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _87974 k dom f) = (term884 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762712) (@lem6762711 A K _87974 k dom f)). Qed.
Lemma lem6762714 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _87974 k dom f neut) = (term865 A K _87974 k dom f neut).
Proof. exact (eq_refl (term878 A K _87974 k dom f neut)). Qed.
Lemma lem6762715 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _87974 k dom f) = (term876 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762714 A K _87974 k dom f neut)). Qed.
Lemma lem6762716 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762717 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _87974 k dom f) = (term887 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762716 A) (@lem6762715 A K _87974 k dom f)). Qed.
Lemma lem6762718 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762719 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _87974 k dom f) = (term889 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762718) (@lem6762717 A K _87974 k dom f)). Qed.
Lemma lem6762720 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _87974 k dom f neut) = (term870 A K _87974 k dom f neut).
Proof. exact (eq_refl (term880 A K _87974 k dom f neut)). Qed.
Lemma lem6762721 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _87974 k dom f) = (term877 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6762720 A K _87974 k dom f neut)). Qed.
Lemma lem6762722 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6762723 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _87974 k dom f) = (term892 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762722 A) (@lem6762721 A K _87974 k dom f)). Qed.
Lemma lem6762724 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _87974 k dom f) = (term893 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762719 A K _87974 k dom f) (@lem6762723 A K _87974 k dom f)). Qed.
Lemma lem6762725 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _87974 k dom f) = (term875 A K _87974 k dom f)) = ((term873 A K _87974 k dom f) = (term893 A K _87974 k dom f)).
Proof. exact (MK_COMB (@lem6762713 A K _87974 k dom f) (@lem6762724 A K _87974 k dom f)). Qed.
Lemma lem6762726 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _87974 k dom f) = (term893 A K _87974 k dom f).
Proof. exact (EQ_MP (@lem6762725 A K _87974 k dom f) (@lem6762703 A K _87974 k dom f)). Qed.
Lemma lem6762839 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _87974 k dom f) = (term893 A K _87974 k dom f).
Proof. exact (TRANS (@lem6762699 A K _87974 k dom f) (@lem6762726 A K _87974 k dom f)). Qed.
Lemma lem6762840 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _87974 k dom) = (term894 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762839 A K _87974 k dom f)). Qed.
Lemma lem6762841 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762842 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _87974 k dom) = (term895 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762841 A K) (@lem6762840 A K _87974 k dom)). Qed.
Lemma lem6762844 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6762845 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6762844 (K -> A) P Q). Qed.
Lemma lem6762846 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _87974 k dom) = (term899 A K _87974 k dom).
Proof. exact (@lem6762845 A K (term900 A K _87974 k dom) (term901 A K _87974 k dom)). Qed.
Lemma lem6762847 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _87974 k dom f) = (term887 A K _87974 k dom f).
Proof. exact (eq_refl (term902 A K _87974 k dom f)). Qed.
Lemma lem6762848 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762849 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _87974 k dom f) = (term889 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762848) (@lem6762847 A K _87974 k dom f)). Qed.
Lemma lem6762850 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _87974 k dom f) = (term892 A K _87974 k dom f).
Proof. exact (eq_refl (term904 A K _87974 k dom f)). Qed.
Lemma lem6762851 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _87974 k dom f) = (term893 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6762849 A K _87974 k dom f) (@lem6762850 A K _87974 k dom f)). Qed.
Lemma lem6762852 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _87974 k dom) = (term894 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762851 A K _87974 k dom f)). Qed.
Lemma lem6762853 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762854 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _87974 k dom) = (term895 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762853 A K) (@lem6762852 A K _87974 k dom)). Qed.
Lemma lem6762855 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6762856 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _87974 k dom) = (term908 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762855) (@lem6762854 A K _87974 k dom)). Qed.
Lemma lem6762857 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _87974 k dom f) = (term887 A K _87974 k dom f).
Proof. exact (eq_refl (term902 A K _87974 k dom f)). Qed.
Lemma lem6762858 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _87974 k dom) = (term900 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762857 A K _87974 k dom f)). Qed.
Lemma lem6762859 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762860 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _87974 k dom) = (term911 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762859 A K) (@lem6762858 A K _87974 k dom)). Qed.
Lemma lem6762861 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6762862 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _87974 k dom) = (term913 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762861) (@lem6762860 A K _87974 k dom)). Qed.
Lemma lem6762863 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _87974 k dom f) = (term892 A K _87974 k dom f).
Proof. exact (eq_refl (term904 A K _87974 k dom f)). Qed.
Lemma lem6762864 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _87974 k dom) = (term901 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6762863 A K _87974 k dom f)). Qed.
Lemma lem6762865 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6762866 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _87974 k dom) = (term916 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762865 A K) (@lem6762864 A K _87974 k dom)). Qed.
Lemma lem6762867 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _87974 k dom) = (term917 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762862 A K _87974 k dom) (@lem6762866 A K _87974 k dom)). Qed.
Lemma lem6762868 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _87974 k dom) = (term899 A K _87974 k dom)) = ((term895 A K _87974 k dom) = (term917 A K _87974 k dom)).
Proof. exact (MK_COMB (@lem6762856 A K _87974 k dom) (@lem6762867 A K _87974 k dom)). Qed.
Lemma lem6762869 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _87974 k dom) = (term917 A K _87974 k dom).
Proof. exact (EQ_MP (@lem6762868 A K _87974 k dom) (@lem6762846 A K _87974 k dom)). Qed.
Lemma lem6762990 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _87974 k dom) = (term917 A K _87974 k dom).
Proof. exact (TRANS (@lem6762842 A K _87974 k dom) (@lem6762869 A K _87974 k dom)). Qed.
Lemma lem6762991 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term846 A K _87974 k) = (term918 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6762990 A K _87974 k dom)). Qed.
Lemma lem6762992 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6762993 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term847 A K _87974 k) = (term919 A K _87974 k).
Proof. exact (MK_COMB (@lem6762992 A) (@lem6762991 A K _87974 k)). Qed.
Lemma lem6762995 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6762996 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6762995 (A -> Prop) P Q). Qed.
Lemma lem6762997 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term922 A K _87974 k) = (term923 A K _87974 k).
Proof. exact (@lem6762996 A (term924 A K _87974 k) (term925 A K _87974 k)). Qed.
Lemma lem6762998 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _87974 k dom) = (term911 A K _87974 k dom).
Proof. exact (eq_refl (term926 A K _87974 k dom)). Qed.
Lemma lem6762999 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763000 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _87974 k dom) = (term913 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6762999) (@lem6762998 A K _87974 k dom)). Qed.
Lemma lem6763001 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _87974 k dom) = (term916 A K _87974 k dom).
Proof. exact (eq_refl (term928 A K _87974 k dom)). Qed.
Lemma lem6763002 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _87974 k dom) = (term917 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763000 A K _87974 k dom) (@lem6763001 A K _87974 k dom)). Qed.
Lemma lem6763003 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term930 A K _87974 k) = (term918 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763002 A K _87974 k dom)). Qed.
Lemma lem6763004 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763005 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term922 A K _87974 k) = (term919 A K _87974 k).
Proof. exact (MK_COMB (@lem6763004 A) (@lem6763003 A K _87974 k)). Qed.
Lemma lem6763006 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763007 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term931 A K _87974 k) = (term932 A K _87974 k).
Proof. exact (MK_COMB (@lem6763006) (@lem6763005 A K _87974 k)). Qed.
Lemma lem6763008 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _87974 k dom) = (term911 A K _87974 k dom).
Proof. exact (eq_refl (term926 A K _87974 k dom)). Qed.
Lemma lem6763009 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term933 A K _87974 k) = (term924 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763008 A K _87974 k dom)). Qed.
Lemma lem6763010 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763011 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term934 A K _87974 k) = (term935 A K _87974 k).
Proof. exact (MK_COMB (@lem6763010 A) (@lem6763009 A K _87974 k)). Qed.
Lemma lem6763012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763013 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term936 A K _87974 k) = (term937 A K _87974 k).
Proof. exact (MK_COMB (@lem6763012) (@lem6763011 A K _87974 k)). Qed.
Lemma lem6763014 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _87974 k dom) = (term916 A K _87974 k dom).
Proof. exact (eq_refl (term928 A K _87974 k dom)). Qed.
Lemma lem6763015 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term938 A K _87974 k) = (term925 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763014 A K _87974 k dom)). Qed.
Lemma lem6763016 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763017 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term939 A K _87974 k) = (term940 A K _87974 k).
Proof. exact (MK_COMB (@lem6763016 A) (@lem6763015 A K _87974 k)). Qed.
Lemma lem6763018 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term923 A K _87974 k) = (term941 A K _87974 k).
Proof. exact (MK_COMB (@lem6763013 A K _87974 k) (@lem6763017 A K _87974 k)). Qed.
Lemma lem6763019 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((term922 A K _87974 k) = (term923 A K _87974 k)) = ((term919 A K _87974 k) = (term941 A K _87974 k)).
Proof. exact (MK_COMB (@lem6763007 A K _87974 k) (@lem6763018 A K _87974 k)). Qed.
Lemma lem6763020 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term919 A K _87974 k) = (term941 A K _87974 k).
Proof. exact (EQ_MP (@lem6763019 A K _87974 k) (@lem6762997 A K _87974 k)). Qed.
Lemma lem6763149 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term847 A K _87974 k) = (term941 A K _87974 k).
Proof. exact (TRANS (@lem6762993 A K _87974 k) (@lem6763020 A K _87974 k)). Qed.
Lemma lem6763150 {A K : Type'} (_87974 : type835 A K) : (term848 A K _87974) = (term942 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763149 A K _87974 k)). Qed.
Lemma lem6763151 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763152 {A K : Type'} (_87974 : type835 A K) : (term849 A K _87974) = (term943 A K _87974).
Proof. exact (MK_COMB (@lem6763151 K) (@lem6763150 A K _87974)). Qed.
Lemma lem6763154 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6763155 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6763154 (K -> Prop) P Q). Qed.
Lemma lem6763156 {A K : Type'} (_87974 : type835 A K) : (term944 A K _87974) = (term945 A K _87974).
Proof. exact (@lem6763155 K (term946 A K _87974) (term947 A K _87974)). Qed.
Lemma lem6763157 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term948 A K _87974 k) = (term935 A K _87974 k).
Proof. exact (eq_refl (term948 A K _87974 k)). Qed.
Lemma lem6763158 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763159 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term949 A K _87974 k) = (term937 A K _87974 k).
Proof. exact (MK_COMB (@lem6763158) (@lem6763157 A K _87974 k)). Qed.
Lemma lem6763160 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term950 A K _87974 k) = (term940 A K _87974 k).
Proof. exact (eq_refl (term950 A K _87974 k)). Qed.
Lemma lem6763161 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term951 A K _87974 k) = (term941 A K _87974 k).
Proof. exact (MK_COMB (@lem6763159 A K _87974 k) (@lem6763160 A K _87974 k)). Qed.
Lemma lem6763162 {A K : Type'} (_87974 : type835 A K) : (term952 A K _87974) = (term942 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763161 A K _87974 k)). Qed.
Lemma lem6763163 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763164 {A K : Type'} (_87974 : type835 A K) : (term944 A K _87974) = (term943 A K _87974).
Proof. exact (MK_COMB (@lem6763163 K) (@lem6763162 A K _87974)). Qed.
Lemma lem6763165 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763166 {A K : Type'} (_87974 : type835 A K) : (term953 A K _87974) = (term954 A K _87974).
Proof. exact (MK_COMB (@lem6763165) (@lem6763164 A K _87974)). Qed.
Lemma lem6763167 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term948 A K _87974 k) = (term935 A K _87974 k).
Proof. exact (eq_refl (term948 A K _87974 k)). Qed.
Lemma lem6763168 {A K : Type'} (_87974 : type835 A K) : (term955 A K _87974) = (term946 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763167 A K _87974 k)). Qed.
Lemma lem6763169 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763170 {A K : Type'} (_87974 : type835 A K) : (term956 A K _87974) = (term957 A K _87974).
Proof. exact (MK_COMB (@lem6763169 K) (@lem6763168 A K _87974)). Qed.
Lemma lem6763171 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763172 {A K : Type'} (_87974 : type835 A K) : (term958 A K _87974) = (term959 A K _87974).
Proof. exact (MK_COMB (@lem6763171) (@lem6763170 A K _87974)). Qed.
Lemma lem6763173 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term950 A K _87974 k) = (term940 A K _87974 k).
Proof. exact (eq_refl (term950 A K _87974 k)). Qed.
Lemma lem6763174 {A K : Type'} (_87974 : type835 A K) : (term960 A K _87974) = (term947 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763173 A K _87974 k)). Qed.
Lemma lem6763175 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763176 {A K : Type'} (_87974 : type835 A K) : (term961 A K _87974) = (term962 A K _87974).
Proof. exact (MK_COMB (@lem6763175 K) (@lem6763174 A K _87974)). Qed.
Lemma lem6763177 {A K : Type'} (_87974 : type835 A K) : (term945 A K _87974) = (term963 A K _87974).
Proof. exact (MK_COMB (@lem6763172 A K _87974) (@lem6763176 A K _87974)). Qed.
Lemma lem6763178 {A K : Type'} (_87974 : type835 A K) : ((term944 A K _87974) = (term945 A K _87974)) = ((term943 A K _87974) = (term963 A K _87974)).
Proof. exact (MK_COMB (@lem6763166 A K _87974) (@lem6763177 A K _87974)). Qed.
Lemma lem6763179 {A K : Type'} (_87974 : type835 A K) : (term943 A K _87974) = (term963 A K _87974).
Proof. exact (EQ_MP (@lem6763178 A K _87974) (@lem6763156 A K _87974)). Qed.
Lemma lem6763316 {A K : Type'} (_87974 : type835 A K) : (term849 A K _87974) = (term963 A K _87974).
Proof. exact (TRANS (@lem6763152 A K _87974) (@lem6763179 A K _87974)). Qed.
Lemma lem6763318 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6763319 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6763318 K P Q). Qed.
Lemma lem6763320 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _87974 GEN_PVAR_272 k dom f neut) = (term967 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6763319 K (term968 A K _87974 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763321 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763322 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6763321 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763323 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763324 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6763323 K) (@lem6763322 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763325 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87974 k dom f neut GEN_PVAR_272) = (term831 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6763326 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _87974 GEN_PVAR_272 k dom f neut) = (term832 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6763325 A K _87974 k dom f neut GEN_PVAR_272) (@lem6763324 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763327 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763328 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _87974 GEN_PVAR_272 k dom f neut) = (term972 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6763327) (@lem6763326 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763329 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763330 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _87974 k dom f neut GEN_PVAR_272) = (term831 A K _87974 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6763331 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _87974 GEN_PVAR_272 k dom f neut j) = (term974 A K _87974 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6763330 A K _87974 k dom f neut GEN_PVAR_272) (@lem6763329 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763332 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _87974 GEN_PVAR_272 k dom f neut) = (term976 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6763331 A K _87974 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763333 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763334 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _87974 GEN_PVAR_272 k dom f neut) = (term977 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6763333 K) (@lem6763332 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763335 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _87974 GEN_PVAR_272 k dom f neut) = (term967 A K _87974 GEN_PVAR_272 k dom f neut)) = ((term832 A K _87974 GEN_PVAR_272 k dom f neut) = (term977 A K _87974 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6763328 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6763334 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763336 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _87974 GEN_PVAR_272 k dom f neut) = (term977 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6763335 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6763320 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763337 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _87974 k dom f neut) = (term978 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6763336 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763338 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763339 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _87974 k dom f neut) = (term979 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763338 K) (@lem6763337 A K _87974 k dom f neut)). Qed.
Lemma lem6763341 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6763342 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6763341 K K P). Qed.
Lemma lem6763343 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _87974 k dom f neut) = (term985 A K _87974 k dom f neut).
Proof. exact (@lem6763342 K (term986 A K _87974 k dom f neut)). Qed.
Lemma lem6763344 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _87974 k dom f neut GEN_PVAR_272) = (term976 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6763345 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763346 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _87974 k dom f neut GEN_PVAR_272 j) = (term989 A K _87974 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6763344 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6763345 K j)). Qed.
Lemma lem6763347 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _87974 GEN_PVAR_272 k dom f neut j) = (term974 A K _87974 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _87974 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763348 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _87974 k dom f neut GEN_PVAR_272 j) = (term974 A K _87974 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6763346 A K _87974 GEN_PVAR_272 k dom f neut j) (@lem6763347 A K _87974 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763349 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _87974 k dom f neut GEN_PVAR_272) = (term976 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6763348 A K _87974 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6763350 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763351 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _87974 k dom f neut GEN_PVAR_272) = (term977 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6763350 K) (@lem6763349 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763352 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _87974 k dom f neut) = (term978 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6763351 A K _87974 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6763353 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763354 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _87974 k dom f neut) = (term979 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763353 K) (@lem6763352 A K _87974 k dom f neut)). Qed.
Lemma lem6763355 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763356 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _87974 k dom f neut) = (term994 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763355) (@lem6763354 A K _87974 k dom f neut)). Qed.
Lemma lem6763357 {A K : Type'} (_87974 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _87974 k dom f neut GEN_PVAR_272) = (term976 A K _87974 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _87974 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6763358 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6763359 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _87974 k dom f neut j GEN_PVAR_272) = (term996 A K _87974 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6763357 A K _87974 GEN_PVAR_272 k dom f neut) (@lem6763358 K j GEN_PVAR_272)). Qed.
Lemma lem6763360 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _87974 k dom f neut j GEN_PVAR_272) = (term997 A K _87974 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _87974 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6763361 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _87974 k dom f neut j GEN_PVAR_272) = (term997 A K _87974 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6763359 A K _87974 k dom f neut j GEN_PVAR_272) (@lem6763360 A K _87974 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6763362 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _87974 k dom f neut j) = (term999 A K _87974 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6763361 A K _87974 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6763363 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763364 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _87974 k dom f neut j) = (term1001 A K _87974 k dom f neut j).
Proof. exact (MK_COMB (@lem6763363 K) (@lem6763362 A K _87974 k dom f neut j)). Qed.
Lemma lem6763365 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _87974 k dom f neut) = (term1003 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6763364 A K _87974 k dom f neut j)). Qed.
Lemma lem6763366 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6763367 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _87974 k dom f neut) = (term1004 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763366 K) (@lem6763365 A K _87974 k dom f neut)). Qed.
Lemma lem6763368 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _87974 k dom f neut) = (term985 A K _87974 k dom f neut)) = ((term979 A K _87974 k dom f neut) = (term1004 A K _87974 k dom f neut)).
Proof. exact (MK_COMB (@lem6763356 A K _87974 k dom f neut) (@lem6763367 A K _87974 k dom f neut)). Qed.
Lemma lem6763369 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _87974 k dom f neut) = (term1004 A K _87974 k dom f neut).
Proof. exact (EQ_MP (@lem6763368 A K _87974 k dom f neut) (@lem6763343 A K _87974 k dom f neut)). Qed.
Lemma lem6763370 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _87974 k dom f neut) = (term1004 A K _87974 k dom f neut).
Proof. exact (TRANS (@lem6763339 A K _87974 k dom f neut) (@lem6763369 A K _87974 k dom f neut)). Qed.
Lemma lem6763371 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _87974 k dom f) = (term1005 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6763370 A K _87974 k dom f neut)). Qed.
Lemma lem6763372 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6763373 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _87974 k dom f) = (term1006 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763372 A) (@lem6763371 A K _87974 k dom f)). Qed.
Lemma lem6763375 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6763376 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6763375 A (K -> K) P). Qed.
Lemma lem6763377 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _87974 k dom f) = (term1010 A K _87974 k dom f).
Proof. exact (@lem6763376 A K (term1011 A K _87974 k dom f)). Qed.
Lemma lem6763378 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _87974 k dom f neut) = (term1003 A K _87974 k dom f neut).
Proof. exact (eq_refl (term1012 A K _87974 k dom f neut)). Qed.
Lemma lem6763379 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763380 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _87974 k dom f neut j) = (term1014 A K _87974 k dom f neut j).
Proof. exact (MK_COMB (@lem6763378 A K _87974 k dom f neut) (@lem6763379 K j)). Qed.
Lemma lem6763381 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _87974 k dom f neut j) = (term1001 A K _87974 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _87974 k dom f neut j)). Qed.
Lemma lem6763382 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _87974 k dom f neut j) = (term1001 A K _87974 k dom f neut j).
Proof. exact (TRANS (@lem6763380 A K _87974 k dom f neut j) (@lem6763381 A K _87974 k dom f neut j)). Qed.
Lemma lem6763383 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _87974 k dom f neut) = (term1003 A K _87974 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6763382 A K _87974 k dom f neut j)). Qed.
Lemma lem6763384 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6763385 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _87974 k dom f neut) = (term1004 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763384 K) (@lem6763383 A K _87974 k dom f neut)). Qed.
Lemma lem6763386 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _87974 k dom f) = (term1005 A K _87974 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6763385 A K _87974 k dom f neut)). Qed.
Lemma lem6763387 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6763388 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _87974 k dom f) = (term1006 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763387 A) (@lem6763386 A K _87974 k dom f)). Qed.
Lemma lem6763389 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763390 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _87974 k dom f) = (term1019 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763389) (@lem6763388 A K _87974 k dom f)). Qed.
Lemma lem6763391 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _87974 k dom f neut) = (term1003 A K _87974 k dom f neut).
Proof. exact (eq_refl (term1012 A K _87974 k dom f neut)). Qed.
Lemma lem6763392 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6763393 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _87974 k dom f j neut) = (term1021 A K _87974 k dom f j neut).
Proof. exact (MK_COMB (@lem6763391 A K _87974 k dom f neut) (@lem6763392 A K j neut)). Qed.
Lemma lem6763394 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _87974 k dom f j neut) = (term1022 A K _87974 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _87974 k dom f j neut)). Qed.
Lemma lem6763395 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _87974 k dom f j neut) = (term1022 A K _87974 k dom f j neut).
Proof. exact (TRANS (@lem6763393 A K _87974 k dom f j neut) (@lem6763394 A K _87974 k dom f j neut)). Qed.
Lemma lem6763396 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _87974 k dom f j) = (term1024 A K _87974 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6763395 A K _87974 k dom f j neut)). Qed.
Lemma lem6763397 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6763398 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _87974 k dom f j) = (term1026 A K _87974 k dom f j).
Proof. exact (MK_COMB (@lem6763397 A) (@lem6763396 A K _87974 k dom f j)). Qed.
Lemma lem6763399 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _87974 k dom f) = (term1028 A K _87974 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6763398 A K _87974 k dom f j)). Qed.
Lemma lem6763400 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6763401 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _87974 k dom f) = (term1029 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763400 A K) (@lem6763399 A K _87974 k dom f)). Qed.
Lemma lem6763402 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _87974 k dom f) = (term1010 A K _87974 k dom f)) = ((term1006 A K _87974 k dom f) = (term1029 A K _87974 k dom f)).
Proof. exact (MK_COMB (@lem6763390 A K _87974 k dom f) (@lem6763401 A K _87974 k dom f)). Qed.
Lemma lem6763403 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _87974 k dom f) = (term1029 A K _87974 k dom f).
Proof. exact (EQ_MP (@lem6763402 A K _87974 k dom f) (@lem6763377 A K _87974 k dom f)). Qed.
Lemma lem6763404 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _87974 k dom f) = (term1029 A K _87974 k dom f).
Proof. exact (TRANS (@lem6763373 A K _87974 k dom f) (@lem6763403 A K _87974 k dom f)). Qed.
Lemma lem6763405 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _87974 k dom) = (term1030 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6763404 A K _87974 k dom f)). Qed.
Lemma lem6763406 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6763407 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _87974 k dom) = (term1031 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763406 A K) (@lem6763405 A K _87974 k dom)). Qed.
Lemma lem6763409 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6763410 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6763409 (K -> A) (type1411 A K) P). Qed.
Lemma lem6763411 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _87974 k dom) = (term1035 A K _87974 k dom).
Proof. exact (@lem6763410 A K (term1036 A K _87974 k dom)). Qed.
Lemma lem6763412 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _87974 k dom f) = (term1028 A K _87974 k dom f).
Proof. exact (eq_refl (term1037 A K _87974 k dom f)). Qed.
Lemma lem6763413 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763414 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _87974 k dom f j) = (term1039 A K _87974 k dom f j).
Proof. exact (MK_COMB (@lem6763412 A K _87974 k dom f) (@lem6763413 A K j)). Qed.
Lemma lem6763415 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _87974 k dom f j) = (term1026 A K _87974 k dom f j).
Proof. exact (eq_refl (term1039 A K _87974 k dom f j)). Qed.
Lemma lem6763416 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _87974 k dom f j) = (term1026 A K _87974 k dom f j).
Proof. exact (TRANS (@lem6763414 A K _87974 k dom f j) (@lem6763415 A K _87974 k dom f j)). Qed.
Lemma lem6763417 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _87974 k dom f) = (term1028 A K _87974 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6763416 A K _87974 k dom f j)). Qed.
Lemma lem6763418 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6763419 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _87974 k dom f) = (term1029 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763418 A K) (@lem6763417 A K _87974 k dom f)). Qed.
Lemma lem6763420 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _87974 k dom) = (term1030 A K _87974 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6763419 A K _87974 k dom f)). Qed.
Lemma lem6763421 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6763422 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _87974 k dom) = (term1031 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763421 A K) (@lem6763420 A K _87974 k dom)). Qed.
Lemma lem6763423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763424 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _87974 k dom) = (term1044 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763423) (@lem6763422 A K _87974 k dom)). Qed.
Lemma lem6763425 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _87974 k dom f) = (term1028 A K _87974 k dom f).
Proof. exact (eq_refl (term1037 A K _87974 k dom f)). Qed.
Lemma lem6763426 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6763427 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _87974 k dom j f) = (term1046 A K _87974 k dom j f).
Proof. exact (MK_COMB (@lem6763425 A K _87974 k dom f) (@lem6763426 A K j f)). Qed.
Lemma lem6763428 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _87974 k dom j f) = (term1047 A K _87974 k dom j f).
Proof. exact (eq_refl (term1046 A K _87974 k dom j f)). Qed.
Lemma lem6763429 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _87974 k dom j f) = (term1047 A K _87974 k dom j f).
Proof. exact (TRANS (@lem6763427 A K _87974 k dom j f) (@lem6763428 A K _87974 k dom j f)). Qed.
Lemma lem6763430 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _87974 k dom j) = (term1049 A K _87974 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6763429 A K _87974 k dom j f)). Qed.
Lemma lem6763431 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6763432 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _87974 k dom j) = (term1051 A K _87974 k dom j).
Proof. exact (MK_COMB (@lem6763431 A K) (@lem6763430 A K _87974 k dom j)). Qed.
Lemma lem6763433 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _87974 k dom) = (term1053 A K _87974 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6763432 A K _87974 k dom j)). Qed.
Lemma lem6763434 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6763435 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _87974 k dom) = (term1054 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763434 A K) (@lem6763433 A K _87974 k dom)). Qed.
Lemma lem6763436 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _87974 k dom) = (term1035 A K _87974 k dom)) = ((term1031 A K _87974 k dom) = (term1054 A K _87974 k dom)).
Proof. exact (MK_COMB (@lem6763424 A K _87974 k dom) (@lem6763435 A K _87974 k dom)). Qed.
Lemma lem6763437 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _87974 k dom) = (term1054 A K _87974 k dom).
Proof. exact (EQ_MP (@lem6763436 A K _87974 k dom) (@lem6763411 A K _87974 k dom)). Qed.
Lemma lem6763438 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _87974 k dom) = (term1054 A K _87974 k dom).
Proof. exact (TRANS (@lem6763407 A K _87974 k dom) (@lem6763437 A K _87974 k dom)). Qed.
Lemma lem6763439 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term925 A K _87974 k) = (term1055 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763438 A K _87974 k dom)). Qed.
Lemma lem6763440 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763441 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term940 A K _87974 k) = (term1056 A K _87974 k).
Proof. exact (MK_COMB (@lem6763440 A) (@lem6763439 A K _87974 k)). Qed.
Lemma lem6763443 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6763444 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6763443 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6763445 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1059 A K _87974 k) = (term1060 A K _87974 k).
Proof. exact (@lem6763444 A K (term1061 A K _87974 k)). Qed.
Lemma lem6763446 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _87974 k dom) = (term1053 A K _87974 k dom).
Proof. exact (eq_refl (term1062 A K _87974 k dom)). Qed.
Lemma lem6763447 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763448 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _87974 k dom j) = (term1064 A K _87974 k dom j).
Proof. exact (MK_COMB (@lem6763446 A K _87974 k dom) (@lem6763447 A K j)). Qed.
Lemma lem6763449 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _87974 k dom j) = (term1051 A K _87974 k dom j).
Proof. exact (eq_refl (term1064 A K _87974 k dom j)). Qed.
Lemma lem6763450 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _87974 k dom j) = (term1051 A K _87974 k dom j).
Proof. exact (TRANS (@lem6763448 A K _87974 k dom j) (@lem6763449 A K _87974 k dom j)). Qed.
Lemma lem6763451 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _87974 k dom) = (term1053 A K _87974 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6763450 A K _87974 k dom j)). Qed.
Lemma lem6763452 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6763453 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _87974 k dom) = (term1054 A K _87974 k dom).
Proof. exact (MK_COMB (@lem6763452 A K) (@lem6763451 A K _87974 k dom)). Qed.
Lemma lem6763454 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1067 A K _87974 k) = (term1055 A K _87974 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763453 A K _87974 k dom)). Qed.
Lemma lem6763455 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763456 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1059 A K _87974 k) = (term1056 A K _87974 k).
Proof. exact (MK_COMB (@lem6763455 A) (@lem6763454 A K _87974 k)). Qed.
Lemma lem6763457 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763458 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1068 A K _87974 k) = (term1069 A K _87974 k).
Proof. exact (MK_COMB (@lem6763457) (@lem6763456 A K _87974 k)). Qed.
Lemma lem6763459 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _87974 k dom) = (term1053 A K _87974 k dom).
Proof. exact (eq_refl (term1062 A K _87974 k dom)). Qed.
Lemma lem6763460 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6763461 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _87974 k j dom) = (term1071 A K _87974 k j dom).
Proof. exact (MK_COMB (@lem6763459 A K _87974 k dom) (@lem6763460 A K j dom)). Qed.
Lemma lem6763462 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _87974 k j dom) = (term1072 A K _87974 k j dom).
Proof. exact (eq_refl (term1071 A K _87974 k j dom)). Qed.
Lemma lem6763463 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _87974 k j dom) = (term1072 A K _87974 k j dom).
Proof. exact (TRANS (@lem6763461 A K _87974 k j dom) (@lem6763462 A K _87974 k j dom)). Qed.
Lemma lem6763464 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _87974 k j) = (term1074 A K _87974 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6763463 A K _87974 k j dom)). Qed.
Lemma lem6763465 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6763466 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _87974 k j) = (term1076 A K _87974 k j).
Proof. exact (MK_COMB (@lem6763465 A) (@lem6763464 A K _87974 k j)). Qed.
Lemma lem6763467 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1077 A K _87974 k) = (term1078 A K _87974 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6763466 A K _87974 k j)). Qed.
Lemma lem6763468 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6763469 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1060 A K _87974 k) = (term1079 A K _87974 k).
Proof. exact (MK_COMB (@lem6763468 A K) (@lem6763467 A K _87974 k)). Qed.
Lemma lem6763470 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : ((term1059 A K _87974 k) = (term1060 A K _87974 k)) = ((term1056 A K _87974 k) = (term1079 A K _87974 k)).
Proof. exact (MK_COMB (@lem6763458 A K _87974 k) (@lem6763469 A K _87974 k)). Qed.
Lemma lem6763471 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1056 A K _87974 k) = (term1079 A K _87974 k).
Proof. exact (EQ_MP (@lem6763470 A K _87974 k) (@lem6763445 A K _87974 k)). Qed.
Lemma lem6763472 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term940 A K _87974 k) = (term1079 A K _87974 k).
Proof. exact (TRANS (@lem6763441 A K _87974 k) (@lem6763471 A K _87974 k)). Qed.
Lemma lem6763473 {A K : Type'} (_87974 : type835 A K) : (term947 A K _87974) = (term1080 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763472 A K _87974 k)). Qed.
Lemma lem6763474 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763475 {A K : Type'} (_87974 : type835 A K) : (term962 A K _87974) = (term1081 A K _87974).
Proof. exact (MK_COMB (@lem6763474 K) (@lem6763473 A K _87974)). Qed.
Lemma lem6763477 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6763478 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6763477 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6763479 {A K : Type'} (_87974 : type835 A K) : (term1084 A K _87974) = (term1085 A K _87974).
Proof. exact (@lem6763478 A K (term1086 A K _87974)). Qed.
Lemma lem6763480 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1087 A K _87974 k) = (term1078 A K _87974 k).
Proof. exact (eq_refl (term1087 A K _87974 k)). Qed.
Lemma lem6763481 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763482 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _87974 k j) = (term1089 A K _87974 k j).
Proof. exact (MK_COMB (@lem6763480 A K _87974 k) (@lem6763481 A K j)). Qed.
Lemma lem6763483 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _87974 k j) = (term1076 A K _87974 k j).
Proof. exact (eq_refl (term1089 A K _87974 k j)). Qed.
Lemma lem6763484 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _87974 k j) = (term1076 A K _87974 k j).
Proof. exact (TRANS (@lem6763482 A K _87974 k j) (@lem6763483 A K _87974 k j)). Qed.
Lemma lem6763485 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1090 A K _87974 k) = (term1078 A K _87974 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6763484 A K _87974 k j)). Qed.
Lemma lem6763486 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6763487 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1091 A K _87974 k) = (term1079 A K _87974 k).
Proof. exact (MK_COMB (@lem6763486 A K) (@lem6763485 A K _87974 k)). Qed.
Lemma lem6763488 {A K : Type'} (_87974 : type835 A K) : (term1092 A K _87974) = (term1080 A K _87974).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763487 A K _87974 k)). Qed.
Lemma lem6763489 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763490 {A K : Type'} (_87974 : type835 A K) : (term1084 A K _87974) = (term1081 A K _87974).
Proof. exact (MK_COMB (@lem6763489 K) (@lem6763488 A K _87974)). Qed.
Lemma lem6763491 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763492 {A K : Type'} (_87974 : type835 A K) : (term1093 A K _87974) = (term1094 A K _87974).
Proof. exact (MK_COMB (@lem6763491) (@lem6763490 A K _87974)). Qed.
Lemma lem6763493 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (term1087 A K _87974 k) = (term1078 A K _87974 k).
Proof. exact (eq_refl (term1087 A K _87974 k)). Qed.
Lemma lem6763494 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6763495 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _87974 j k) = (term1096 A K _87974 j k).
Proof. exact (MK_COMB (@lem6763493 A K _87974 k) (@lem6763494 A K j k)). Qed.
Lemma lem6763496 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _87974 j k) = (term1097 A K _87974 j k).
Proof. exact (eq_refl (term1096 A K _87974 j k)). Qed.
Lemma lem6763497 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _87974 j k) = (term1097 A K _87974 j k).
Proof. exact (TRANS (@lem6763495 A K _87974 j k) (@lem6763496 A K _87974 j k)). Qed.
Lemma lem6763498 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) : (term1098 A K _87974 j) = (term1099 A K _87974 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6763497 A K _87974 j k)). Qed.
Lemma lem6763499 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6763500 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) : (term1100 A K _87974 j) = (term1101 A K _87974 j).
Proof. exact (MK_COMB (@lem6763499 K) (@lem6763498 A K _87974 j)). Qed.
Lemma lem6763501 {A K : Type'} (_87974 : type835 A K) : (term1102 A K _87974) = (term1103 A K _87974).
Proof. exact (fun_ext (fun j : type834 A K => @lem6763500 A K _87974 j)). Qed.
Lemma lem6763502 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6763503 {A K : Type'} (_87974 : type835 A K) : (term1085 A K _87974) = (term1104 A K _87974).
Proof. exact (MK_COMB (@lem6763502 A K) (@lem6763501 A K _87974)). Qed.
Lemma lem6763504 {A K : Type'} (_87974 : type835 A K) : ((term1084 A K _87974) = (term1085 A K _87974)) = ((term1081 A K _87974) = (term1104 A K _87974)).
Proof. exact (MK_COMB (@lem6763492 A K _87974) (@lem6763503 A K _87974)). Qed.
Lemma lem6763505 {A K : Type'} (_87974 : type835 A K) : (term1081 A K _87974) = (term1104 A K _87974).
Proof. exact (EQ_MP (@lem6763504 A K _87974) (@lem6763479 A K _87974)). Qed.
Lemma lem6763506 {A K : Type'} (_87974 : type835 A K) : (term962 A K _87974) = (term1104 A K _87974).
Proof. exact (TRANS (@lem6763475 A K _87974) (@lem6763505 A K _87974)). Qed.
Lemma lem6763507 {A K : Type'} (_87974 : type835 A K) : (term959 A K _87974) = (term959 A K _87974).
Proof. exact (eq_refl (term959 A K _87974)). Qed.
Lemma lem6763508 {A K : Type'} (_87974 : type835 A K) : (term963 A K _87974) = (term1105 A K _87974).
Proof. exact (MK_COMB (@lem6763507 A K _87974) (@lem6763506 A K _87974)). Qed.
Lemma lem6763510 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6763511 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6763510 (type834 A K) P Q). Qed.
Lemma lem6763512 {A K : Type'} (_87974 : type835 A K) : (term1110 A K _87974) = (term1111 A K _87974).
Proof. exact (@lem6763511 A K (term957 A K _87974) (term1103 A K _87974)). Qed.
Lemma lem6763513 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) : (term1112 A K _87974 j) = (term1101 A K _87974 j).
Proof. exact (eq_refl (term1112 A K _87974 j)). Qed.
Lemma lem6763514 {A K : Type'} (_87974 : type835 A K) : (term1113 A K _87974) = (term1103 A K _87974).
Proof. exact (fun_ext (fun j : type834 A K => @lem6763513 A K _87974 j)). Qed.
Lemma lem6763515 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6763516 {A K : Type'} (_87974 : type835 A K) : (term1114 A K _87974) = (term1104 A K _87974).
Proof. exact (MK_COMB (@lem6763515 A K) (@lem6763514 A K _87974)). Qed.
Lemma lem6763517 {A K : Type'} (_87974 : type835 A K) : (term959 A K _87974) = (term959 A K _87974).
Proof. exact (eq_refl (term959 A K _87974)). Qed.
Lemma lem6763518 {A K : Type'} (_87974 : type835 A K) : (term1110 A K _87974) = (term1105 A K _87974).
Proof. exact (MK_COMB (@lem6763517 A K _87974) (@lem6763516 A K _87974)). Qed.
Lemma lem6763519 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763520 {A K : Type'} (_87974 : type835 A K) : (term1115 A K _87974) = (term1116 A K _87974).
Proof. exact (MK_COMB (@lem6763519) (@lem6763518 A K _87974)). Qed.
Lemma lem6763521 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) : (term1112 A K _87974 j) = (term1101 A K _87974 j).
Proof. exact (eq_refl (term1112 A K _87974 j)). Qed.
Lemma lem6763522 {A K : Type'} (_87974 : type835 A K) : (term959 A K _87974) = (term959 A K _87974).
Proof. exact (eq_refl (term959 A K _87974)). Qed.
Lemma lem6763523 {A K : Type'} (_87974 : type835 A K) (j : type834 A K) : (term1117 A K _87974 j) = (term1118 A K _87974 j).
Proof. exact (MK_COMB (@lem6763522 A K _87974) (@lem6763521 A K _87974 j)). Qed.
Lemma lem6763524 {A K : Type'} (_87974 : type835 A K) : (term1119 A K _87974) = (term1120 A K _87974).
Proof. exact (fun_ext (fun j : type834 A K => @lem6763523 A K _87974 j)). Qed.
Lemma lem6763525 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6763526 {A K : Type'} (_87974 : type835 A K) : (term1111 A K _87974) = (term1121 A K _87974).
Proof. exact (MK_COMB (@lem6763525 A K) (@lem6763524 A K _87974)). Qed.
Lemma lem6763527 {A K : Type'} (_87974 : type835 A K) : ((term1110 A K _87974) = (term1111 A K _87974)) = ((term1105 A K _87974) = (term1121 A K _87974)).
Proof. exact (MK_COMB (@lem6763520 A K _87974) (@lem6763526 A K _87974)). Qed.
Lemma lem6763528 {A K : Type'} (_87974 : type835 A K) : (term1105 A K _87974) = (term1121 A K _87974).
Proof. exact (EQ_MP (@lem6763527 A K _87974) (@lem6763512 A K _87974)). Qed.
Lemma lem6763529 {A K : Type'} (_87974 : type835 A K) : (term963 A K _87974) = (term1121 A K _87974).
Proof. exact (TRANS (@lem6763508 A K _87974) (@lem6763528 A K _87974)). Qed.
Lemma lem6763530 {A K : Type'} (_87974 : type835 A K) : (term849 A K _87974) = (term1121 A K _87974).
Proof. exact (TRANS (@lem6763316 A K _87974) (@lem6763529 A K _87974)). Qed.
Lemma lem6763531 {A K : Type'} (_87974 : type835 A K) : (term815 A K _87974) = (term1121 A K _87974).
Proof. exact (TRANS (@lem6762549 A K _87974) (@lem6763530 A K _87974)). Qed.
Lemma lem6763532 {A K : Type'} (_87974 : type835 A K) (h1 : term815 A K _87974) : term1121 A K _87974.
Proof. exact (EQ_MP (@lem6763531 A K _87974) (@lem6762499 A K _87974 h1)). Qed.
Lemma lem6763541 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6763543 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6763544 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6763543 A K dom f j) (@lem6763541 A K f j neut)). Qed.
Lemma lem6763545 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6763546 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6763545 A K dom f j neut) (@lem6763544 A K dom f j neut)). Qed.
Lemma lem6763548 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6763549 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6763548 K k j) (@lem6763546 A K dom f j neut)). Qed.
Lemma lem6763550 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6763551 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6763550 A K k dom f j neut) (@lem6763549 A K k dom f j neut)). Qed.
Lemma lem6763553 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6763554 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6763553 K ltle j i) (@lem6763551 A K k dom f j neut)). Qed.
Lemma lem6763555 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6763556 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6763555 A K ltle i k dom f j neut) (@lem6763554 A K ltle i k dom f j neut)). Qed.
Lemma lem6763557 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6763558 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763559 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6763558) (@lem6763556 A K ltle i k dom f j neut)). Qed.
Lemma lem6763560 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6763559 A K ltle i k dom f j neut) (@lem6763557 K j i)). Qed.
Lemma lem6763561 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6763562 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6763561 A K ltle k dom f neut j i) (@lem6763560 A K ltle k dom f neut j i)). Qed.
Lemma lem6763563 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6763562 A K ltle k dom f neut j i)). Qed.
Lemma lem6763564 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763565 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763564 K) (@lem6763563 A K ltle k dom f neut i)). Qed.
Lemma lem6763580 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6763581 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6763580 K k ltle j i)). Qed.
Lemma lem6763582 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763583 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6763582 K) (@lem6763581 K k ltle i)). Qed.
Lemma lem6763584 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87974 k dom f neut) = (term719 A K _87974 k dom f neut).
Proof. exact (eq_refl (term719 A K _87974 k dom f neut)). Qed.
Lemma lem6763585 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763586 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6763585) (@lem6763583 K k ltle i)). Qed.
Lemma lem6763587 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _87974 k dom f neut) = (term1143 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763586 K k ltle i) (@lem6763584 A K _87974 k dom f neut)). Qed.
Lemma lem6763588 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763589 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763588) (@lem6763565 A K ltle k dom f neut i)). Qed.
Lemma lem6763590 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _87974 k dom f neut) = (term1145 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763589 A K ltle k dom f neut i) (@lem6763587 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6763592 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6763593 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _87974 k dom f neut) = (term1146 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763592 K k i) (@lem6763590 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6763595 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6763596 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _87974 k dom f neut) = (term1349 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763595 A K dom f i) (@lem6763593 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6763598 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6763699 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _87974 k dom f neut) = (term1350 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763598 A K f i neut) (@lem6763596 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6763700 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1350 A K ltle i _87974 k dom f neut.
Proof. exact (EQ_MP (@lem6763699 A K ltle i _87974 k dom f neut) (@lem6762500 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6763710 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1122 A K f i neut) = ((f i) = neut).
Proof. exact (@lem16933 ((f i) = neut)). Qed.
Lemma lem6763712 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1123 A K dom f i).
Proof. exact (eq_refl (term1123 A K dom f i)). Qed.
Lemma lem6763713 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1124 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (MK_COMB (@lem6763712 A K dom f i) (@lem6763710 A K f i neut)). Qed.
Lemma lem6763714 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1124 A K dom f i neut).
Proof. exact (@lem17045 (term591 A K dom f i) (term572 A K f i neut)). Qed.
Lemma lem6763715 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term596 A K dom f i neut) = (term1125 A K dom f i neut).
Proof. exact (TRANS (@lem6763714 A K dom f i neut) (@lem6763713 A K dom f i neut)). Qed.
Lemma lem6763738 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2100 A K ltle k dom f neut j' i) = (term2101 A K ltle k dom f neut j' i).
Proof. exact (@lem17362 (term1559 A K ltle i k dom f j' neut) (j' = i)). Qed.
Lemma lem6763739 {K : Type'} (P : K -> Prop) : (term2102 K P) = (term2103 K P).
Proof. exact (@lem18392 K P). Qed.
Lemma lem6763740 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2104 A K ltle k dom f neut i) = (term2105 A K ltle k dom f neut i).
Proof. exact (@lem6763739 K (term1565 A K ltle k dom f neut i)). Qed.
Lemma lem6763741 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2106 A K ltle k dom f neut i j') = (term1563 A K ltle k dom f neut j' i).
Proof. exact (eq_refl (term2106 A K ltle k dom f neut i j')). Qed.
Lemma lem6763742 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6763743 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2107 A K ltle k dom f neut i j') = (term2100 A K ltle k dom f neut j' i).
Proof. exact (MK_COMB (@lem6763742) (@lem6763741 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763744 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2107 A K ltle k dom f neut i j') = (term2101 A K ltle k dom f neut j' i).
Proof. exact (TRANS (@lem6763743 A K ltle k dom f neut j' i) (@lem6763738 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763745 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2108 A K ltle k dom f neut i) = (term2109 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6763744 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763746 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763747 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2105 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763746 K) (@lem6763745 A K ltle k dom f neut i)). Qed.
Lemma lem6763748 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2104 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6763740 A K ltle k dom f neut i) (@lem6763747 A K ltle k dom f neut i)). Qed.
Lemma lem6763749 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763750 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2111 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (MK_COMB (@lem6763749) (@lem6763715 A K dom f i neut)). Qed.
Lemma lem6763751 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2113 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763750 A K dom f i neut) (@lem6763748 A K ltle k dom f neut i)). Qed.
Lemma lem6763752 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2113 A K ltle k dom f neut i).
Proof. exact (@lem17045 (term595 A K dom f i neut) (term1567 A K ltle k dom f neut i)). Qed.
Lemma lem6763753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6763752 A K ltle k dom f neut i) (@lem6763751 A K ltle k dom f neut i)). Qed.
Lemma lem6763804 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6763805 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6763804 K P Q). Qed.
Lemma lem6763806 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2115 A K ltle k dom f neut i) = (term2116 A K ltle k dom f neut i).
Proof. exact (@lem6763805 K (term1125 A K dom f i neut) (term2109 A K ltle k dom f neut i)). Qed.
Lemma lem6763807 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2117 A K ltle k dom f neut i j') = (term2101 A K ltle k dom f neut j' i).
Proof. exact (eq_refl (term2117 A K ltle k dom f neut i j')). Qed.
Lemma lem6763808 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2118 A K ltle k dom f neut i) = (term2109 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6763807 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763809 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763810 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2119 A K ltle k dom f neut i) = (term2110 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763809 K) (@lem6763808 A K ltle k dom f neut i)). Qed.
Lemma lem6763811 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (eq_refl (term2112 A K dom f i neut)). Qed.
Lemma lem6763812 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2115 A K ltle k dom f neut i) = (term2114 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763811 A K dom f i neut) (@lem6763810 A K ltle k dom f neut i)). Qed.
Lemma lem6763813 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6763814 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2120 A K ltle k dom f neut i) = (term2121 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763813) (@lem6763812 A K ltle k dom f neut i)). Qed.
Lemma lem6763815 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2117 A K ltle k dom f neut i j') = (term2101 A K ltle k dom f neut j' i).
Proof. exact (eq_refl (term2117 A K ltle k dom f neut i j')). Qed.
Lemma lem6763816 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2112 A K dom f i neut).
Proof. exact (eq_refl (term2112 A K dom f i neut)). Qed.
Lemma lem6763817 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2122 A K ltle k dom f neut i j') = (term2123 A K ltle k dom f neut j' i).
Proof. exact (MK_COMB (@lem6763816 A K dom f i neut) (@lem6763815 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763818 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2124 A K ltle k dom f neut i) = (term2125 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j' : K => @lem6763817 A K ltle k dom f neut j' i)). Qed.
Lemma lem6763819 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6763820 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2116 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6763819 K) (@lem6763818 A K ltle k dom f neut i)). Qed.
Lemma lem6763821 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : ((term2115 A K ltle k dom f neut i) = (term2116 A K ltle k dom f neut i)) = ((term2114 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i)).
Proof. exact (MK_COMB (@lem6763814 A K ltle k dom f neut i) (@lem6763820 A K ltle k dom f neut i)). Qed.
Lemma lem6763823 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2114 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (EQ_MP (@lem6763821 A K ltle k dom f neut i) (@lem6763806 A K ltle k dom f neut i)). Qed.
Lemma lem6763824 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1572 A K ltle k dom f neut i) = (term2126 A K ltle k dom f neut i).
Proof. exact (TRANS (@lem6763753 A K ltle k dom f neut i) (@lem6763823 A K ltle k dom f neut i)). Qed.
Lemma lem6763825 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term1572 A K ltle k dom f neut i) : term2126 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6763824 A K ltle k dom f neut i) (@lem6762506 A K ltle k dom f neut i h1)). Qed.
Lemma lem6763826 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2123 A K ltle k dom f neut j' i) : term2123 A K ltle k dom f neut j' i.
Proof. exact (h1). Qed.
Lemma lem6763828 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6763829 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6763840 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763841 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6763840 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6763842 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) : (_87974 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974 k).
Proof. exact (@lem6763841 A K _87974 k). Qed.
Lemma lem6763843 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6763844 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_87974 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974 k dom).
Proof. exact (MK_COMB (@lem6763842 A K _87974 k) (@lem6763843 A dom)). Qed.
Lemma lem6763846 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763847 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6763846 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6763848 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974 k dom) = (term1163 A K _87974 k dom).
Proof. exact (@lem6763847 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _87974 k) dom). Qed.
Lemma lem6763849 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_87974 k dom) = (term1163 A K _87974 k dom).
Proof. exact (TRANS (@lem6763844 A K _87974 k dom) (@lem6763848 A K _87974 k dom)). Qed.
Lemma lem6763850 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6763851 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_87974 k dom f) = (term1164 A K _87974 k dom f).
Proof. exact (MK_COMB (@lem6763849 A K _87974 k dom) (@lem6763850 A K f)). Qed.
Lemma lem6763853 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763854 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6763853 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6763855 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _87974 k dom f) = (term1165 A K _87974 k dom f).
Proof. exact (@lem6763854 A K (term1163 A K _87974 k dom) f). Qed.
Lemma lem6763856 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_87974 k dom f) = (term1165 A K _87974 k dom f).
Proof. exact (TRANS (@lem6763851 A K _87974 k dom f) (@lem6763855 A K _87974 k dom f)). Qed.
Lemma lem6763857 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6763858 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87974 k dom f neut) = (term1166 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763856 A K _87974 k dom f) (@lem6763857 A neut)). Qed.
Lemma lem6763860 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763861 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6763860 A (K -> Prop) f x). Qed.
Lemma lem6763862 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _87974 k dom f neut) = (term1167 A K _87974 k dom f neut).
Proof. exact (@lem6763861 A K (term1165 A K _87974 k dom f) neut). Qed.
Lemma lem6763864 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_87974 k dom f neut) = (term1167 A K _87974 k dom f neut).
Proof. exact (TRANS (@lem6763858 A K _87974 k dom f neut) (@lem6763862 A K _87974 k dom f neut)). Qed.
Lemma lem6763865 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _87974 k dom f neut) = (term1168 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763829 K) (@lem6763864 A K _87974 k dom f neut)). Qed.
Lemma lem6763867 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763868 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6763867 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6763869 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _87974 k dom f neut) = (term1169 A K _87974 k dom f neut).
Proof. exact (@lem6763868 K (@GSPEC K) (term1167 A K _87974 k dom f neut)). Qed.
Lemma lem6763870 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _87974 k dom f neut) = (term1169 A K _87974 k dom f neut).
Proof. exact (TRANS (@lem6763865 A K _87974 k dom f neut) (@lem6763869 A K _87974 k dom f neut)). Qed.
Lemma lem6763871 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87974 k dom f neut) = (term1170 A K _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763828 K) (@lem6763870 A K _87974 k dom f neut)). Qed.
Lemma lem6763873 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763874 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6763873 (K -> Prop) Prop f x). Qed.
Lemma lem6763875 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _87974 k dom f neut) = (term1171 A K _87974 k dom f neut).
Proof. exact (@lem6763874 K (@FINITE K) (term1169 A K _87974 k dom f neut)). Qed.
Lemma lem6763876 {A K : Type'} (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _87974 k dom f neut) = (term1171 A K _87974 k dom f neut).
Proof. exact (TRANS (@lem6763871 A K _87974 k dom f neut) (@lem6763875 A K _87974 k dom f neut)). Qed.
Lemma lem6763883 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763884 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6763883 K (K -> Prop) f x). Qed.
Lemma lem6763885 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6763884 K ltle j). Qed.
Lemma lem6763886 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6763887 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6763885 K ltle j) (@lem6763886 K i)). Qed.
Lemma lem6763889 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763890 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6763889 K Prop f x). Qed.
Lemma lem6763891 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6763890 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6763893 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6763887 K ltle j i) (@lem6763891 K ltle j i)). Qed.
Lemma lem6763900 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763901 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6763900 K (K -> Prop) f x). Qed.
Lemma lem6763902 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6763901 K ltle i). Qed.
Lemma lem6763903 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6763904 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6763902 K ltle i) (@lem6763903 K j)). Qed.
Lemma lem6763906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763907 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6763906 K Prop f x). Qed.
Lemma lem6763908 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6763907 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6763910 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6763904 K ltle i j) (@lem6763908 K ltle i j)). Qed.
Lemma lem6763911 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763912 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6763911) (@lem6763910 K ltle i j)). Qed.
Lemma lem6763913 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6763912 K ltle i j) (@lem6763893 K ltle j i)). Qed.
Lemma lem6763920 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6763921 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6763920 K i j) (@lem6763913 K ltle j i)). Qed.
Lemma lem6763922 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6763927 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763928 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6763927 K Prop f x). Qed.
Lemma lem6763930 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6763928 K k j). Qed.
Lemma lem6763931 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6763922) (@lem6763930 K k j)). Qed.
Lemma lem6763932 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763933 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6763932) (@lem6763931 K k j)). Qed.
Lemma lem6763934 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6763933 K k j) (@lem6763921 K ltle j i)). Qed.
Lemma lem6763935 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6763934 K k ltle j i)). Qed.
Lemma lem6763936 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6763937 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6763936 K) (@lem6763935 K k ltle i)). Qed.
Lemma lem6763938 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6763939 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6763938) (@lem6763937 K k ltle i)). Qed.
Lemma lem6763940 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _87974 k dom f neut) = (term1184 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6763939 K k ltle i) (@lem6763876 A K _87974 k dom f neut)). Qed.
Lemma lem6763945 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6763946 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6763951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763952 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6763951 K A f x). Qed.
Lemma lem6763954 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6763952 A K f j). Qed.
Lemma lem6763955 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6763956 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6763946 A) (@lem6763954 A K f j)). Qed.
Lemma lem6763957 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6763956 A K f j) (@lem6763955 A neut)). Qed.
Lemma lem6763958 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6763959 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6763964 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763965 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6763964 K A f x). Qed.
Lemma lem6763967 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6763965 A K f j). Qed.
Lemma lem6763968 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6763959 A dom) (@lem6763967 A K f j)). Qed.
Lemma lem6763970 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763971 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6763970 A Prop f x). Qed.
Lemma lem6763972 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6763971 A dom (@I (K -> A) f j)). Qed.
Lemma lem6763973 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6763968 A K dom f j) (@lem6763972 A K dom f j)). Qed.
Lemma lem6763974 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6763958) (@lem6763973 A K dom f j)). Qed.
Lemma lem6763975 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763976 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6763975) (@lem6763974 A K dom f j)). Qed.
Lemma lem6763977 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6763976 A K dom f j) (@lem6763957 A K f j neut)). Qed.
Lemma lem6763978 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6763983 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763984 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6763983 K Prop f x). Qed.
Lemma lem6763986 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6763984 K k j). Qed.
Lemma lem6763987 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6763978) (@lem6763986 K k j)). Qed.
Lemma lem6763988 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6763989 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6763988) (@lem6763987 K k j)). Qed.
Lemma lem6763990 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6763989 K k j) (@lem6763977 A K dom f j neut)). Qed.
Lemma lem6763991 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6763998 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6763999 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6763998 K (K -> Prop) f x). Qed.
Lemma lem6764000 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6763999 K ltle j). Qed.
Lemma lem6764001 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6764002 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6764000 K ltle j) (@lem6764001 K i)). Qed.
Lemma lem6764004 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764005 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6764004 K Prop f x). Qed.
Lemma lem6764006 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6764005 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6764008 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6764002 K ltle j i) (@lem6764006 K ltle j i)). Qed.
Lemma lem6764009 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6763991) (@lem6764008 K ltle j i)). Qed.
Lemma lem6764010 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6764011 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6764010) (@lem6764009 K ltle j i)). Qed.
Lemma lem6764012 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6764011 K ltle j i) (@lem6763990 A K k dom f j neut)). Qed.
Lemma lem6764013 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6764014 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6764013) (@lem6764012 A K ltle i k dom f j neut)). Qed.
Lemma lem6764015 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6764014 A K ltle i k dom f j neut) (@lem6763945 K j i)). Qed.
Lemma lem6764016 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6764015 A K ltle k dom f neut j i)). Qed.
Lemma lem6764017 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6764018 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6764017 K) (@lem6764016 A K ltle k dom f neut i)). Qed.
Lemma lem6764019 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764020 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6764019) (@lem6764018 A K ltle k dom f neut i)). Qed.
Lemma lem6764021 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _87974 k dom f neut) = (term1203 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6764020 A K ltle k dom f neut i) (@lem6763940 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6764022 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6764027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764028 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6764027 K Prop f x). Qed.
Lemma lem6764030 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6764028 K k i). Qed.
Lemma lem6764031 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6764022) (@lem6764030 K k i)). Qed.
Lemma lem6764032 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764033 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6764032) (@lem6764031 K k i)). Qed.
Lemma lem6764034 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _87974 k dom f neut) = (term1205 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6764033 K k i) (@lem6764021 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6764035 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6764040 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764041 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764040 K A f x). Qed.
Lemma lem6764043 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6764041 A K f i). Qed.
Lemma lem6764044 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6764035 A dom) (@lem6764043 A K f i)). Qed.
Lemma lem6764046 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764047 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6764046 A Prop f x). Qed.
Lemma lem6764048 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6764047 A dom (@I (K -> A) f i)). Qed.
Lemma lem6764049 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6764044 A K dom f i) (@lem6764048 A K dom f i)). Qed.
Lemma lem6764050 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764051 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term1209 A K dom f i).
Proof. exact (MK_COMB (@lem6764050) (@lem6764049 A K dom f i)). Qed.
Lemma lem6764052 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1349 A K ltle i _87974 k dom f neut) = (term1353 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6764051 A K dom f i) (@lem6764034 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6764053 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6764054 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6764059 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764060 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764059 K A f x). Qed.
Lemma lem6764062 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6764060 A K f i). Qed.
Lemma lem6764063 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6764064 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6764054 A) (@lem6764062 A K f i)). Qed.
Lemma lem6764065 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6764064 A K f i) (@lem6764063 A neut)). Qed.
Lemma lem6764066 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term572 A K f i neut) = (term1208 A K f i neut).
Proof. exact (MK_COMB (@lem6764053) (@lem6764065 A K f i neut)). Qed.
Lemma lem6764067 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764068 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1354 A K f i neut).
Proof. exact (MK_COMB (@lem6764067) (@lem6764066 A K f i neut)). Qed.
Lemma lem6764069 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1350 A K ltle i _87974 k dom f neut) = (term1355 A K ltle i _87974 k dom f neut).
Proof. exact (MK_COMB (@lem6764068 A K f i neut) (@lem6764052 A K ltle i _87974 k dom f neut)). Qed.
Lemma lem6764070 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1355 A K ltle i _87974 k dom f neut.
Proof. exact (EQ_MP (@lem6764069 A K ltle i _87974 k dom f neut) (@lem6763700 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6764083 {K : Type'} (j' : K) (i : K) : (term2 K j' i) = (term2 K j' i).
Proof. exact (eq_refl (term2 K j' i)). Qed.
Lemma lem6764084 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6764085 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6764090 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764091 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764090 K A f x). Qed.
Lemma lem6764093 {A K : Type'} (f : K -> A) (j' : K) : (f j') = (@I (K -> A) f j').
Proof. exact (@lem6764091 A K f j'). Qed.
Lemma lem6764094 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6764095 {A K : Type'} (f : K -> A) (j' : K) : (term1185 A K f j') = (term1186 A K f j').
Proof. exact (MK_COMB (@lem6764085 A) (@lem6764093 A K f j')). Qed.
Lemma lem6764096 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : ((f j') = neut) = ((@I (K -> A) f j') = neut).
Proof. exact (MK_COMB (@lem6764095 A K f j') (@lem6764094 A neut)). Qed.
Lemma lem6764097 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term572 A K f j' neut) = (term1208 A K f j' neut).
Proof. exact (MK_COMB (@lem6764084) (@lem6764096 A K f j' neut)). Qed.
Lemma lem6764098 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6764103 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764104 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764103 K A f x). Qed.
Lemma lem6764106 {A K : Type'} (f : K -> A) (j' : K) : (f j') = (@I (K -> A) f j').
Proof. exact (@lem6764104 A K f j'). Qed.
Lemma lem6764107 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term591 A K dom f j') = (term1187 A K dom f j').
Proof. exact (MK_COMB (@lem6764098 A dom) (@lem6764106 A K f j')). Qed.
Lemma lem6764109 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764110 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6764109 A Prop f x). Qed.
Lemma lem6764111 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1187 A K dom f j') = (term1188 A K dom f j').
Proof. exact (@lem6764110 A dom (@I (K -> A) f j')). Qed.
Lemma lem6764112 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term591 A K dom f j') = (term1188 A K dom f j').
Proof. exact (TRANS (@lem6764107 A K dom f j') (@lem6764111 A K dom f j')). Qed.
Lemma lem6764113 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764114 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term592 A K dom f j') = (term1209 A K dom f j').
Proof. exact (MK_COMB (@lem6764113) (@lem6764112 A K dom f j')). Qed.
Lemma lem6764115 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term595 A K dom f j' neut) = (term1210 A K dom f j' neut).
Proof. exact (MK_COMB (@lem6764114 A K dom f j') (@lem6764097 A K f j' neut)). Qed.
Lemma lem6764120 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764121 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6764120 K Prop f x). Qed.
Lemma lem6764123 {K : Type'} (k : K -> Prop) (j' : K) : (k j') = (@I (K -> Prop) k j').
Proof. exact (@lem6764121 K k j'). Qed.
Lemma lem6764130 {K : Type'} (j' : K) (i : K) : (term38 K j' i) = (term38 K j' i).
Proof. exact (eq_refl (term38 K j' i)). Qed.
Lemma lem6764131 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term39 K i k j') = (term1219 K i k j').
Proof. exact (MK_COMB (@lem6764130 K j' i) (@lem6764123 K k j')). Qed.
Lemma lem6764132 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764133 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term41 K i k j') = (term1220 K i k j').
Proof. exact (MK_COMB (@lem6764132) (@lem6764131 K i k j')). Qed.
Lemma lem6764134 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term658 A K i k dom f j' neut) = (term1221 A K i k dom f j' neut).
Proof. exact (MK_COMB (@lem6764133 K i k j') (@lem6764115 A K dom f j' neut)). Qed.
Lemma lem6764141 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764142 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6764141 K (K -> Prop) f x). Qed.
Lemma lem6764143 {K : Type'} (ltle : type1402 K) (j' : K) : (ltle j') = (@I (K -> K -> Prop) ltle j').
Proof. exact (@lem6764142 K ltle j'). Qed.
Lemma lem6764144 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6764145 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (ltle j' i) = (@I (K -> K -> Prop) ltle j' i).
Proof. exact (MK_COMB (@lem6764143 K ltle j') (@lem6764144 K i)). Qed.
Lemma lem6764147 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764148 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6764147 K Prop f x). Qed.
Lemma lem6764149 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (@I (K -> K -> Prop) ltle j' i) = (term1172 K ltle j' i).
Proof. exact (@lem6764148 K (@I (K -> K -> Prop) ltle j') i). Qed.
Lemma lem6764151 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (ltle j' i) = (term1172 K ltle j' i).
Proof. exact (TRANS (@lem6764145 K ltle j' i) (@lem6764149 K ltle j' i)). Qed.
Lemma lem6764152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764153 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (term447 K ltle j' i) = (term2127 K ltle j' i).
Proof. exact (MK_COMB (@lem6764152) (@lem6764151 K ltle j' i)). Qed.
Lemma lem6764154 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1559 A K ltle i k dom f j' neut) = (term2128 A K ltle i k dom f j' neut).
Proof. exact (MK_COMB (@lem6764153 K ltle j' i) (@lem6764134 A K i k dom f j' neut)). Qed.
Lemma lem6764155 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6764156 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2129 A K ltle i k dom f j' neut) = (term2130 A K ltle i k dom f j' neut).
Proof. exact (MK_COMB (@lem6764155) (@lem6764154 A K ltle i k dom f j' neut)). Qed.
Lemma lem6764157 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2101 A K ltle k dom f neut j' i) = (term2131 A K ltle k dom f neut j' i).
Proof. exact (MK_COMB (@lem6764156 A K ltle i k dom f j' neut) (@lem6764083 K j' i)). Qed.
Lemma lem6764158 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6764163 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764164 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764163 K A f x). Qed.
Lemma lem6764166 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6764164 A K f i). Qed.
Lemma lem6764167 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6764168 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6764158 A) (@lem6764166 A K f i)). Qed.
Lemma lem6764169 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6764168 A K f i) (@lem6764167 A neut)). Qed.
Lemma lem6764170 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6764171 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6764176 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764177 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6764176 K A f x). Qed.
Lemma lem6764179 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6764177 A K f i). Qed.
Lemma lem6764180 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6764171 A dom) (@lem6764179 A K f i)). Qed.
Lemma lem6764182 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6764183 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6764182 A Prop f x). Qed.
Lemma lem6764184 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6764183 A dom (@I (K -> A) f i)). Qed.
Lemma lem6764185 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6764180 A K dom f i) (@lem6764184 A K dom f i)). Qed.
Lemma lem6764186 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1189 A K dom f i) = (term1190 A K dom f i).
Proof. exact (MK_COMB (@lem6764170) (@lem6764185 A K dom f i)). Qed.
Lemma lem6764187 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6764188 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1123 A K dom f i) = (term1191 A K dom f i).
Proof. exact (MK_COMB (@lem6764187) (@lem6764186 A K dom f i)). Qed.
Lemma lem6764189 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1125 A K dom f i neut) = (term1192 A K dom f i neut).
Proof. exact (MK_COMB (@lem6764188 A K dom f i) (@lem6764169 A K f i neut)). Qed.
Lemma lem6764190 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6764191 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term2112 A K dom f i neut) = (term2132 A K dom f i neut).
Proof. exact (MK_COMB (@lem6764190) (@lem6764189 A K dom f i neut)). Qed.
Lemma lem6764192 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) : (term2123 A K ltle k dom f neut j' i) = (term2133 A K ltle k dom f neut j' i).
Proof. exact (MK_COMB (@lem6764191 A K dom f i neut) (@lem6764157 A K ltle k dom f neut j' i)). Qed.
Lemma lem6764193 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2123 A K ltle k dom f neut j' i) : term2133 A K ltle k dom f neut j' i.
Proof. exact (EQ_MP (@lem6764192 A K ltle k dom f neut j' i) (@lem6763826 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6764639 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1353 A K ltle i _87974 k dom f neut.
Proof. exact (proj2 (@lem6764070 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6764641 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1205 A K ltle i _87974 k dom f neut.
Proof. exact (proj2 (@lem6764639 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6764643 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1203 A K ltle i _87974 k dom f neut.
Proof. exact (proj2 (@lem6764641 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6764646 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (proj1 (@lem6764643 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6764649 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1192 A K dom f i neut) : term1192 A K dom f i neut.
Proof. exact (h1). Qed.
Lemma lem6764650 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2131 A K ltle k dom f neut j' i.
Proof. exact (h1). Qed.
Lemma lem6764654 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2128 A K ltle i k dom f j' neut.
Proof. exact (proj1 (@lem6764650 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6764655 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1221 A K i k dom f j' neut.
Proof. exact (proj2 (@lem6764654 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6764657 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1210 A K dom f j' neut.
Proof. exact (proj2 (@lem6764655 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6764658 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1219 K i k j'.
Proof. exact (proj1 (@lem6764655 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6764829 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6764996 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6765179 {K : Type'} (j' : K) (i : K) (h1 : j' = i) : j' = i.
Proof. exact (h1). Qed.
Lemma lem6765308 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1199 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1199 A K ltle k dom f neut j i)). Qed.
Lemma lem6765309 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1200 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6765308 A K ltle k dom f neut j i)). Qed.
Lemma lem6765310 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6765312 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1201 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6765310 K) (@lem6765309 A K ltle k dom f neut i)). Qed.
Lemma lem6765313 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6765312 A K ltle k dom f neut i) (@lem6764646 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6765362 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : @I (K -> Prop) k j'.
Proof. exact (h1). Qed.
Lemma lem6765513 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2134 A K ltle k dom f neut i _88025.
Proof. exact (@lem6765313 A K ltle i _87974 k dom f neut h1 _88025). Qed.
Lemma lem6765514 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2134 A K ltle k dom f neut i _88025) = (term1199 A K ltle k dom f neut _88025 i).
Proof. exact (eq_refl (term2134 A K ltle k dom f neut i _88025)). Qed.
Lemma lem6765515 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1199 A K ltle k dom f neut _88025 i.
Proof. exact (EQ_MP (@lem6765514 A K ltle k dom f neut _88025 i) (@lem6765513 A K _88025 ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6765580 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6765596 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1208 A K f i neut.
Proof. exact (proj1 (@lem6764070 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6765642 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (@I (K -> A) f i) = neut.
Proof. exact (h1). Qed.
Lemma lem6765704 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2 K j' i.
Proof. exact (proj2 (@lem6764650 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6765712 {K : Type'} (j' : K) (i : K) (h1 : j' = i) : j' = i.
Proof. exact (h1). Qed.
Lemma lem6765736 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term1199 A K ltle k dom f neut _88025 i) = (term2135 A K ltle k dom f neut _88025 i).
Proof. exact (@lem6761111 (term1195 K ltle _88025 i) (term1193 A K k dom f _88025 neut) (_88025 = i)). Qed.
Lemma lem6765737 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2136 A K k dom f neut _88025 i) = (term2137 A K k dom f neut _88025 i).
Proof. exact (@lem6761111 (term1178 K k _88025) (term1192 A K dom f _88025 neut) (_88025 = i)). Qed.
Lemma lem6765744 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2138 A K dom f neut _88025 i) = (term2139 A K dom f neut _88025 i).
Proof. exact (@lem6761111 (term1190 A K dom f _88025) ((@I (K -> A) f _88025) = neut) (_88025 = i)). Qed.
Lemma lem6765745 {K : Type'} (k : K -> Prop) (_88025 : K) : (term1179 K k _88025) = (term1179 K k _88025).
Proof. exact (eq_refl (term1179 K k _88025)). Qed.
Lemma lem6765748 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2137 A K k dom f neut _88025 i) = (term2140 A K k dom f neut _88025 i).
Proof. exact (MK_COMB (@lem6765745 K k _88025) (@lem6765744 A K dom f neut _88025 i)). Qed.
Lemma lem6765749 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2136 A K k dom f neut _88025 i) = (term2140 A K k dom f neut _88025 i).
Proof. exact (TRANS (@lem6765737 A K k dom f neut _88025 i) (@lem6765748 A K k dom f neut _88025 i)). Qed.
Lemma lem6765750 {K : Type'} (ltle : type1402 K) (_88025 : K) (i : K) : (term1196 K ltle _88025 i) = (term1196 K ltle _88025 i).
Proof. exact (eq_refl (term1196 K ltle _88025 i)). Qed.
Lemma lem6765753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2135 A K ltle k dom f neut _88025 i) = (term2141 A K ltle k dom f neut _88025 i).
Proof. exact (MK_COMB (@lem6765750 K ltle _88025 i) (@lem6765749 A K k dom f neut _88025 i)). Qed.
Lemma lem6765755 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term1199 A K ltle k dom f neut _88025 i) = (term2141 A K ltle k dom f neut _88025 i).
Proof. exact (TRANS (@lem6765736 A K ltle k dom f neut _88025 i) (@lem6765753 A K ltle k dom f neut _88025 i)). Qed.
Lemma lem6765782 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : @I (K -> Prop) k j'.
Proof. exact (h1). Qed.
Lemma lem6765922 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1190 A K dom f i.
Proof. exact (h1). Qed.
Lemma lem6765923 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : neut = (@I (K -> A) f i).
Proof. exact (SYM (@lem6765642 A K f i neut h1)). Qed.
Lemma lem6765980 {A K : Type'} (f : K -> A) (i : K) : (term1234 A K f i) = (term1234 A K f i).
Proof. exact (eq_refl (term1234 A K f i)). Qed.
Lemma lem6765981 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1235 A K f i neut) = (term1236 A K f i).
Proof. exact (MK_COMB (@lem6765980 A K f i) (@lem6765923 A K f i neut h1)). Qed.
Lemma lem6765982 {A K : Type'} (f : K -> A) (i : K) : (term1236 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1236 A K f i)). Qed.
Lemma lem6765983 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1238 A K f i neut).
Proof. exact (eq_refl (term1238 A K f i neut)). Qed.
Lemma lem6765984 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1235 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6765983 A K f i neut) (@lem6765982 A K f i)). Qed.
Lemma lem6765985 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1235 A K f i neut) = (term1208 A K f i neut).
Proof. exact (eq_refl (term1235 A K f i neut)). Qed.
Lemma lem6765986 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6765987 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1238 A K f i neut) = (term1239 A K f i neut).
Proof. exact (MK_COMB (@lem6765986) (@lem6765985 A K f i neut)). Qed.
Lemma lem6765988 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1237 A K f i).
Proof. exact (eq_refl (term1237 A K f i)). Qed.
Lemma lem6765989 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1237 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (MK_COMB (@lem6765987 A K f i neut) (@lem6765988 A K f i)). Qed.
Lemma lem6765990 {A K : Type'} (neut : A) (f : K -> A) (i : K) : ((term1235 A K f i neut) = (term1236 A K f i)) = ((term1208 A K f i neut) = (term1237 A K f i)).
Proof. exact (TRANS (@lem6765984 A K neut f i) (@lem6765989 A K neut f i)). Qed.
Lemma lem6765991 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : (@I (K -> A) f i) = neut) : (term1208 A K f i neut) = (term1237 A K f i).
Proof. exact (EQ_MP (@lem6765990 A K neut f i) (@lem6765981 A K f i neut h1)). Qed.
Lemma lem6766116 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term1237 A K f i.
Proof. exact (EQ_MP (@lem6765991 A K f i neut h2) (@lem6765596 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6766327 {K : Type'} (i : K) : (term83 K i) = (term83 K i).
Proof. exact (eq_refl (term83 K i)). Qed.
Lemma lem6766328 {K : Type'} (j' : K) (i : K) (h1 : j' = i) : (term84 K i j') = (term85 K i).
Proof. exact (MK_COMB (@lem6766327 K i) (@lem6765712 K j' i h1)). Qed.
Lemma lem6766329 {K : Type'} (i : K) : (term85 K i) = (term86 K i).
Proof. exact (eq_refl (term85 K i)). Qed.
Lemma lem6766330 {K : Type'} (i : K) (j' : K) : (term87 K i j') = (term87 K i j').
Proof. exact (eq_refl (term87 K i j')). Qed.
Lemma lem6766331 {K : Type'} (j' : K) (i : K) : ((term84 K i j') = (term85 K i)) = ((term84 K i j') = (term86 K i)).
Proof. exact (MK_COMB (@lem6766330 K i j') (@lem6766329 K i)). Qed.
Lemma lem6766332 {K : Type'} (j' : K) (i : K) : (term84 K i j') = (term2 K j' i).
Proof. exact (eq_refl (term84 K i j')). Qed.
Lemma lem6766333 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6766334 {K : Type'} (j' : K) (i : K) : (term87 K i j') = (term88 K j' i).
Proof. exact (MK_COMB (@lem6766333) (@lem6766332 K j' i)). Qed.
Lemma lem6766335 {K : Type'} (i : K) : (term86 K i) = (term86 K i).
Proof. exact (eq_refl (term86 K i)). Qed.
Lemma lem6766336 {K : Type'} (j' : K) (i : K) : ((term84 K i j') = (term86 K i)) = ((term2 K j' i) = (term86 K i)).
Proof. exact (MK_COMB (@lem6766334 K j' i) (@lem6766335 K i)). Qed.
Lemma lem6766337 {K : Type'} (j' : K) (i : K) : ((term84 K i j') = (term85 K i)) = ((term2 K j' i) = (term86 K i)).
Proof. exact (TRANS (@lem6766331 K j' i) (@lem6766336 K j' i)). Qed.
Lemma lem6766338 {K : Type'} (j' : K) (i : K) (h1 : j' = i) : (term2 K j' i) = (term86 K i).
Proof. exact (EQ_MP (@lem6766337 K j' i) (@lem6766328 K j' i h1)). Qed.
Lemma lem6766518 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : term86 K i.
Proof. exact (EQ_MP (@lem6766338 K j' i h2) (@lem6765704 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6766658 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2141 A K ltle k dom f neut _88025 i.
Proof. exact (EQ_MP (@lem6765755 A K ltle k dom f neut _88025 i) (@lem6765515 A K _88025 ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6766742 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1208 A K f j' neut.
Proof. exact (proj2 (@lem6764657 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6766756 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : @I (K -> Prop) k j'.
Proof. exact (h1). Qed.
Lemma lem6767131 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1188 A K dom f i.
Proof. exact (proj1 (@lem6764639 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6767132 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6767131 A K ltle i _87974 k dom f neut h1). Qed.
Lemma lem6767134 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767135 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6767134 (term1188 A K dom f i)). Qed.
Lemma lem6767136 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6767135 A K dom f i) (@lem6767132 A K ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6767139 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6767141 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1190 A K dom f i) = (term1248 A K dom f i).
Proof. exact (@lem6767139 (term1188 A K dom f i)). Qed.
Lemma lem6767144 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (h1 : term1190 A K dom f i) : term1248 A K dom f i.
Proof. exact (EQ_MP (@lem6767141 A K dom f i) (@lem6765922 A K dom f i h1)). Qed.
Lemma lem6767147 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (@lem6767144 A K dom f i h1 (@lem6767136 A K ltle i _87974 k dom f neut h2)). Qed.
Lemma lem6767148 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6767147 A K ltle i _87974 k dom f neut h1 h2). Qed.
Lemma lem6767150 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767151 : term96 = False.
Proof. exact (@lem6767150 False). Qed.
Lemma lem6767152 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6767151) (@lem6767148 A K ltle i _87974 k dom f neut h1 h2)). Qed.
Lemma lem6767527 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6767528 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6767527 A x). Qed.
Lemma lem6767529 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (@lem6767528 A (@I (K -> A) f i)). Qed.
Lemma lem6767530 {A K : Type'} (f : K -> A) (i : K) : term1249 A K f i.
Proof. exact (fun h0 : term1237 A K f i => @lem6767529 A K f i). Qed.
Lemma lem6767532 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767533 {A K : Type'} (f : K -> A) (i : K) : (term1249 A K f i) = ((@I (K -> A) f i) = (@I (K -> A) f i)).
Proof. exact (@lem6767532 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6767534 {A K : Type'} (f : K -> A) (i : K) : (@I (K -> A) f i) = (@I (K -> A) f i).
Proof. exact (EQ_MP (@lem6767533 A K f i) (@lem6767530 A K f i)). Qed.
Lemma lem6767537 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6767539 {A K : Type'} (f : K -> A) (i : K) : (term1237 A K f i) = (term1250 A K f i).
Proof. exact (@lem6767537 ((@I (K -> A) f i) = (@I (K -> A) f i))). Qed.
Lemma lem6767542 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term1250 A K f i.
Proof. exact (EQ_MP (@lem6767539 A K f i) (@lem6766116 A K ltle _87974 k dom f i neut h1 h2)). Qed.
Lemma lem6767545 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (@lem6767542 A K ltle _87974 k dom f i neut h1 h2 (@lem6767534 A K f i)). Qed.
Lemma lem6767546 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : term96.
Proof. exact (fun h0 : ~ False => @lem6767545 A K ltle _87974 k dom f i neut h1 h2). Qed.
Lemma lem6767548 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767549 : term96 = False.
Proof. exact (@lem6767548 False). Qed.
Lemma lem6767925 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6767926 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6767925 K x). Qed.
Lemma lem6767927 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6767926 K i). Qed.
Lemma lem6767928 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6767927 K i). Qed.
Lemma lem6767930 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767931 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6767930 (i = i)). Qed.
Lemma lem6767932 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6767931 K i) (@lem6767928 K i)). Qed.
Lemma lem6767935 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6767937 {K : Type'} (i : K) : (term86 K i) = (term95 K i).
Proof. exact (@lem6767935 (i = i)). Qed.
Lemma lem6767940 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : term95 K i.
Proof. exact (EQ_MP (@lem6767937 K i) (@lem6766518 A K ltle k dom f neut j' i h1 h2)). Qed.
Lemma lem6767943 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : False.
Proof. exact (@lem6767940 A K ltle k dom f neut j' i h1 h2 (@lem6767932 K i)). Qed.
Lemma lem6767944 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : term96.
Proof. exact (fun h0 : ~ False => @lem6767943 A K ltle k dom f neut j' i h1 h2). Qed.
Lemma lem6767946 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6767947 : term96 = False.
Proof. exact (@lem6767946 False). Qed.
Lemma lem6768323 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1172 K ltle j' i.
Proof. exact (proj1 (@lem6764654 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768324 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2142 K ltle j' i.
Proof. exact (fun h0 : term1195 K ltle j' i => @lem6768323 A K ltle k dom f neut j' i h1). Qed.
Lemma lem6768326 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6768327 {K : Type'} (ltle : type1402 K) (j' : K) (i : K) : (term2142 K ltle j' i) = (term1172 K ltle j' i).
Proof. exact (@lem6768326 (term1172 K ltle j' i)). Qed.
Lemma lem6768328 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1172 K ltle j' i.
Proof. exact (EQ_MP (@lem6768327 K ltle j' i) (@lem6768324 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768330 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : @I (K -> Prop) k j'.
Proof. exact (h1). Qed.
Lemma lem6768331 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : term1251 K k j'.
Proof. exact (fun h0 : term1178 K k j' => @lem6768330 K k j' h1). Qed.
Lemma lem6768333 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6768334 {K : Type'} (k : K -> Prop) (j' : K) : (term1251 K k j') = (@I (K -> Prop) k j').
Proof. exact (@lem6768333 (@I (K -> Prop) k j')). Qed.
Lemma lem6768335 {K : Type'} (k : K -> Prop) (j' : K) (h1 : @I (K -> Prop) k j') : @I (K -> Prop) k j'.
Proof. exact (EQ_MP (@lem6768334 K k j') (@lem6768331 K k j' h1)). Qed.
Lemma lem6768337 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1188 A K dom f j'.
Proof. exact (proj1 (@lem6764657 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768338 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1247 A K dom f j'.
Proof. exact (fun h0 : term1190 A K dom f j' => @lem6768337 A K ltle k dom f neut j' i h1). Qed.
Lemma lem6768340 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6768341 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1247 A K dom f j') = (term1188 A K dom f j').
Proof. exact (@lem6768340 (term1188 A K dom f j')). Qed.
Lemma lem6768342 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1188 A K dom f j'.
Proof. exact (EQ_MP (@lem6768341 A K dom f j') (@lem6768338 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768344 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2 K j' i.
Proof. exact (proj2 (@lem6764650 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768345 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2143 K j' i.
Proof. exact (fun h0 : j' = i => @lem6768344 A K ltle k dom f neut j' i h1). Qed.
Lemma lem6768347 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6768348 {K : Type'} (j' : K) (i : K) : (term2143 K j' i) = (term2 K j' i).
Proof. exact (@lem6768347 (j' = i)). Qed.
Lemma lem6768349 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2 K j' i.
Proof. exact (EQ_MP (@lem6768348 K j' i) (@lem6768345 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768355 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768356 {A K : Type'} (k : K -> Prop) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2141 A K ltle k dom f neut _88025 i) = (term2145 A K k ltle dom f neut _88025 i).
Proof. exact (@lem6768355 (term1178 K k _88025) (term1195 K ltle _88025 i) (term2139 A K dom f neut _88025 i)). Qed.
Lemma lem6768370 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768371 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (f : K -> A) (neut : A) (_88025 : K) (i : K) : (term2146 A K ltle dom f neut _88025 i) = (term2147 A K dom ltle f neut _88025 i).
Proof. exact (@lem6768370 (term1190 A K dom f _88025) (term1195 K ltle _88025 i) (term2148 A K f neut _88025 i)). Qed.
Lemma lem6768385 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768386 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2149 A K ltle f neut _88025 i) = (term2150 A K f neut ltle _88025 i).
Proof. exact (@lem6768385 ((@I (K -> A) f _88025) = neut) (term1195 K ltle _88025 i) (_88025 = i)). Qed.
Lemma lem6768402 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6768403 {K : Type'} (ltle : type1402 K) (_88025 : K) (i : K) : (term2151 K ltle _88025 i) = (term2152 K ltle _88025 i).
Proof. exact (@lem6768402 (_88025 = i) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768411 {A K : Type'} (f : K -> A) (_88025 : K) (neut : A) : (term2153 A K f _88025 neut) = (term2153 A K f _88025 neut).
Proof. exact (eq_refl (term2153 A K f _88025 neut)). Qed.
Lemma lem6768412 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2150 A K f neut ltle _88025 i) = (term2154 A K f neut ltle _88025 i).
Proof. exact (MK_COMB (@lem6768411 A K f _88025 neut) (@lem6768403 K ltle _88025 i)). Qed.
Lemma lem6768423 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2149 A K ltle f neut _88025 i) = (term2154 A K f neut ltle _88025 i).
Proof. exact (TRANS (@lem6768386 A K f neut ltle _88025 i) (@lem6768412 A K f neut ltle _88025 i)). Qed.
Lemma lem6768424 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) : (term1191 A K dom f _88025) = (term1191 A K dom f _88025).
Proof. exact (eq_refl (term1191 A K dom f _88025)). Qed.
Lemma lem6768425 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2147 A K dom ltle f neut _88025 i) = (term2155 A K dom f neut ltle _88025 i).
Proof. exact (MK_COMB (@lem6768424 A K dom f _88025) (@lem6768423 A K f neut ltle _88025 i)). Qed.
Lemma lem6768429 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768430 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2155 A K dom f neut ltle _88025 i) = (term2156 A K neut dom f ltle _88025 i).
Proof. exact (@lem6768429 ((@I (K -> A) f _88025) = neut) (term1190 A K dom f _88025) (term2152 K ltle _88025 i)). Qed.
Lemma lem6768446 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768447 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2157 A K dom f ltle _88025 i) = (term2158 A K dom f ltle _88025 i).
Proof. exact (@lem6768446 (_88025 = i) (term1190 A K dom f _88025) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768465 {A K : Type'} (f : K -> A) (_88025 : K) (neut : A) : (term2153 A K f _88025 neut) = (term2153 A K f _88025 neut).
Proof. exact (eq_refl (term2153 A K f _88025 neut)). Qed.
Lemma lem6768466 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2156 A K neut dom f ltle _88025 i) = (term2159 A K neut dom f ltle _88025 i).
Proof. exact (MK_COMB (@lem6768465 A K f _88025 neut) (@lem6768447 A K dom f ltle _88025 i)). Qed.
Lemma lem6768477 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2155 A K dom f neut ltle _88025 i) = (term2159 A K neut dom f ltle _88025 i).
Proof. exact (TRANS (@lem6768430 A K neut dom f ltle _88025 i) (@lem6768466 A K neut dom f ltle _88025 i)). Qed.
Lemma lem6768478 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2147 A K dom ltle f neut _88025 i) = (term2159 A K neut dom f ltle _88025 i).
Proof. exact (TRANS (@lem6768425 A K dom f neut ltle _88025 i) (@lem6768477 A K neut dom f ltle _88025 i)). Qed.
Lemma lem6768479 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2146 A K ltle dom f neut _88025 i) = (term2159 A K neut dom f ltle _88025 i).
Proof. exact (TRANS (@lem6768371 A K dom ltle f neut _88025 i) (@lem6768478 A K neut dom f ltle _88025 i)). Qed.
Lemma lem6768480 {K : Type'} (k : K -> Prop) (_88025 : K) : (term1179 K k _88025) = (term1179 K k _88025).
Proof. exact (eq_refl (term1179 K k _88025)). Qed.
Lemma lem6768481 {A K : Type'} (k : K -> Prop) (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2145 A K k ltle dom f neut _88025 i) = (term2160 A K k neut dom f ltle _88025 i).
Proof. exact (MK_COMB (@lem6768480 K k _88025) (@lem6768479 A K neut dom f ltle _88025 i)). Qed.
Lemma lem6768485 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768486 {A K : Type'} (neut : A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2160 A K k neut dom f ltle _88025 i) = (term2161 A K neut k dom f ltle _88025 i).
Proof. exact (@lem6768485 ((@I (K -> A) f _88025) = neut) (term1178 K k _88025) (term2158 A K dom f ltle _88025 i)). Qed.
Lemma lem6768502 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768503 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2162 A K k dom f ltle _88025 i) = (term2163 A K k dom f ltle _88025 i).
Proof. exact (@lem6768502 (_88025 = i) (term1178 K k _88025) (term2164 A K dom f ltle _88025 i)). Qed.
Lemma lem6768519 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768520 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2165 A K k dom f ltle _88025 i) = (term2166 A K dom f k ltle _88025 i).
Proof. exact (@lem6768519 (term1190 A K dom f _88025) (term1178 K k _88025) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768536 {K : Type'} (_88025 : K) (i : K) : (term38 K _88025 i) = (term38 K _88025 i).
Proof. exact (eq_refl (term38 K _88025 i)). Qed.
Lemma lem6768537 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2163 A K k dom f ltle _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (MK_COMB (@lem6768536 K _88025 i) (@lem6768520 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768548 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2162 A K k dom f ltle _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768503 A K k dom f ltle _88025 i) (@lem6768537 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768549 {A K : Type'} (f : K -> A) (_88025 : K) (neut : A) : (term2153 A K f _88025 neut) = (term2153 A K f _88025 neut).
Proof. exact (eq_refl (term2153 A K f _88025 neut)). Qed.
Lemma lem6768550 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2161 A K neut k dom f ltle _88025 i) = (term2168 A K neut dom f k ltle _88025 i).
Proof. exact (MK_COMB (@lem6768549 A K f _88025 neut) (@lem6768548 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768561 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2160 A K k neut dom f ltle _88025 i) = (term2168 A K neut dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768486 A K neut k dom f ltle _88025 i) (@lem6768550 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768562 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2145 A K k ltle dom f neut _88025 i) = (term2168 A K neut dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768481 A K k neut dom f ltle _88025 i) (@lem6768561 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768563 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2141 A K ltle k dom f neut _88025 i) = (term2168 A K neut dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768356 A K k ltle dom f neut _88025 i) (@lem6768562 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768564 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6768565 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2169 A K ltle k dom f neut _88025 i) = (term2170 A K neut dom f k ltle _88025 i).
Proof. exact (MK_COMB (@lem6768564) (@lem6768563 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768581 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768582 {A K : Type'} (k : K -> Prop) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2171 A K ltle k dom f _88025 i) = (term2172 A K k ltle dom f _88025 i).
Proof. exact (@lem6768581 (term1178 K k _88025) (term1195 K ltle _88025 i) (term2173 A K dom f _88025 i)). Qed.
Lemma lem6768596 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768597 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2174 A K ltle dom f _88025 i) = (term2175 A K dom f ltle _88025 i).
Proof. exact (@lem6768596 (term1190 A K dom f _88025) (term1195 K ltle _88025 i) (_88025 = i)). Qed.
Lemma lem6768611 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6768612 {K : Type'} (ltle : type1402 K) (_88025 : K) (i : K) : (term2151 K ltle _88025 i) = (term2152 K ltle _88025 i).
Proof. exact (@lem6768611 (_88025 = i) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768620 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) : (term1191 A K dom f _88025) = (term1191 A K dom f _88025).
Proof. exact (eq_refl (term1191 A K dom f _88025)). Qed.
Lemma lem6768621 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2175 A K dom f ltle _88025 i) = (term2157 A K dom f ltle _88025 i).
Proof. exact (MK_COMB (@lem6768620 A K dom f _88025) (@lem6768612 K ltle _88025 i)). Qed.
Lemma lem6768625 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768626 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2157 A K dom f ltle _88025 i) = (term2158 A K dom f ltle _88025 i).
Proof. exact (@lem6768625 (_88025 = i) (term1190 A K dom f _88025) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768644 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2175 A K dom f ltle _88025 i) = (term2158 A K dom f ltle _88025 i).
Proof. exact (TRANS (@lem6768621 A K dom f ltle _88025 i) (@lem6768626 A K dom f ltle _88025 i)). Qed.
Lemma lem6768645 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2174 A K ltle dom f _88025 i) = (term2158 A K dom f ltle _88025 i).
Proof. exact (TRANS (@lem6768597 A K dom f ltle _88025 i) (@lem6768644 A K dom f ltle _88025 i)). Qed.
Lemma lem6768646 {K : Type'} (k : K -> Prop) (_88025 : K) : (term1179 K k _88025) = (term1179 K k _88025).
Proof. exact (eq_refl (term1179 K k _88025)). Qed.
Lemma lem6768647 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2172 A K k ltle dom f _88025 i) = (term2162 A K k dom f ltle _88025 i).
Proof. exact (MK_COMB (@lem6768646 K k _88025) (@lem6768645 A K dom f ltle _88025 i)). Qed.
Lemma lem6768651 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768652 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88025 : K) (i : K) : (term2162 A K k dom f ltle _88025 i) = (term2163 A K k dom f ltle _88025 i).
Proof. exact (@lem6768651 (_88025 = i) (term1178 K k _88025) (term2164 A K dom f ltle _88025 i)). Qed.
Lemma lem6768668 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6768669 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2165 A K k dom f ltle _88025 i) = (term2166 A K dom f k ltle _88025 i).
Proof. exact (@lem6768668 (term1190 A K dom f _88025) (term1178 K k _88025) (term1195 K ltle _88025 i)). Qed.
Lemma lem6768685 {K : Type'} (_88025 : K) (i : K) : (term38 K _88025 i) = (term38 K _88025 i).
Proof. exact (eq_refl (term38 K _88025 i)). Qed.
Lemma lem6768686 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2163 A K k dom f ltle _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (MK_COMB (@lem6768685 K _88025 i) (@lem6768669 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768697 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2162 A K k dom f ltle _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768652 A K k dom f ltle _88025 i) (@lem6768686 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768698 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2172 A K k ltle dom f _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768647 A K k dom f ltle _88025 i) (@lem6768697 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768699 {A K : Type'} (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2171 A K ltle k dom f _88025 i) = (term2167 A K dom f k ltle _88025 i).
Proof. exact (TRANS (@lem6768582 A K k ltle dom f _88025 i) (@lem6768698 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768700 {A K : Type'} (f : K -> A) (_88025 : K) (neut : A) : (term2153 A K f _88025 neut) = (term2153 A K f _88025 neut).
Proof. exact (eq_refl (term2153 A K f _88025 neut)). Qed.
Lemma lem6768701 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : (term2176 A K neut ltle k dom f _88025 i) = (term2168 A K neut dom f k ltle _88025 i).
Proof. exact (MK_COMB (@lem6768700 A K f _88025 neut) (@lem6768699 A K dom f k ltle _88025 i)). Qed.
Lemma lem6768712 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : ((term2141 A K ltle k dom f neut _88025 i) = (term2176 A K neut ltle k dom f _88025 i)) = ((term2168 A K neut dom f k ltle _88025 i) = (term2168 A K neut dom f k ltle _88025 i)).
Proof. exact (MK_COMB (@lem6768565 A K neut dom f k ltle _88025 i) (@lem6768701 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768714 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6768715 (x : Prop) : (x = x) = True.
Proof. exact (@lem6768714 Prop x). Qed.
Lemma lem6768716 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (k : K -> Prop) (ltle : type1402 K) (_88025 : K) (i : K) : ((term2168 A K neut dom f k ltle _88025 i) = (term2168 A K neut dom f k ltle _88025 i)) = True.
Proof. exact (@lem6768715 (term2168 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768717 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : ((term2141 A K ltle k dom f neut _88025 i) = (term2176 A K neut ltle k dom f _88025 i)) = True.
Proof. exact (TRANS (@lem6768712 A K neut dom f k ltle _88025 i) (@lem6768716 A K neut dom f k ltle _88025 i)). Qed.
Lemma lem6768718 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : True = ((term2141 A K ltle k dom f neut _88025 i) = (term2176 A K neut ltle k dom f _88025 i)).
Proof. exact (SYM (@lem6768717 A K neut ltle k dom f _88025 i)). Qed.
Lemma lem6768719 {A K : Type'} (neut : A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2141 A K ltle k dom f neut _88025 i) = (term2176 A K neut ltle k dom f _88025 i).
Proof. exact (EQ_MP (@lem6768718 A K neut ltle k dom f _88025 i) (@lem0)). Qed.
Lemma lem6768720 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2176 A K neut ltle k dom f _88025 i.
Proof. exact (EQ_MP (@lem6768719 A K neut ltle k dom f _88025 i) (@lem6766658 A K _88025 ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6768722 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6768723 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_88025 : K) (neut : A) : (term2176 A K neut ltle k dom f _88025 i) = (term2177 A K ltle k dom i f _88025 neut).
Proof. exact (@lem6768722 (term2171 A K ltle k dom f _88025 i) ((@I (K -> A) f _88025) = neut)). Qed.
Lemma lem6768725 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6768726 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2178 A K ltle k dom f _88025 i) = (term2179 A K ltle k dom f _88025 i).
Proof. exact (@lem6768725 (term1195 K ltle _88025 i) (term2180 A K k dom f _88025 i)). Qed.
Lemma lem6768728 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6768729 {K : Type'} (ltle : type1402 K) (_88025 : K) (i : K) : (term2181 K ltle _88025 i) = (term1172 K ltle _88025 i).
Proof. exact (@lem6768728 (term1172 K ltle _88025 i)). Qed.
Lemma lem6768730 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6768731 {K : Type'} (ltle : type1402 K) (_88025 : K) (i : K) : (term2182 K ltle _88025 i) = (term2127 K ltle _88025 i).
Proof. exact (MK_COMB (@lem6768730) (@lem6768729 K ltle _88025 i)). Qed.
Lemma lem6768733 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6768734 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2183 A K k dom f _88025 i) = (term2184 A K k dom f _88025 i).
Proof. exact (@lem6768733 (term1178 K k _88025) (term2173 A K dom f _88025 i)). Qed.
Lemma lem6768736 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6768737 {K : Type'} (k : K -> Prop) (_88025 : K) : (term2185 K k _88025) = (@I (K -> Prop) k _88025).
Proof. exact (@lem6768736 (@I (K -> Prop) k _88025)). Qed.
Lemma lem6768738 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6768739 {K : Type'} (k : K -> Prop) (_88025 : K) : (term2186 K k _88025) = (term1211 K k _88025).
Proof. exact (MK_COMB (@lem6768738) (@lem6768737 K k _88025)). Qed.
Lemma lem6768741 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6768742 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2187 A K dom f _88025 i) = (term2188 A K dom f _88025 i).
Proof. exact (@lem6768741 (term1190 A K dom f _88025) (_88025 = i)). Qed.
Lemma lem6768744 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6768745 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) : (term1379 A K dom f _88025) = (term1188 A K dom f _88025).
Proof. exact (@lem6768744 (term1188 A K dom f _88025)). Qed.
Lemma lem6768746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6768747 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) : (term2189 A K dom f _88025) = (term1209 A K dom f _88025).
Proof. exact (MK_COMB (@lem6768746) (@lem6768745 A K dom f _88025)). Qed.
Lemma lem6768748 {K : Type'} (_88025 : K) (i : K) : (term2 K _88025 i) = (term2 K _88025 i).
Proof. exact (eq_refl (term2 K _88025 i)). Qed.
Lemma lem6768749 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2188 A K dom f _88025 i) = (term2190 A K dom f _88025 i).
Proof. exact (MK_COMB (@lem6768747 A K dom f _88025) (@lem6768748 K _88025 i)). Qed.
Lemma lem6768750 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2187 A K dom f _88025 i) = (term2190 A K dom f _88025 i).
Proof. exact (TRANS (@lem6768742 A K dom f _88025 i) (@lem6768749 A K dom f _88025 i)). Qed.
Lemma lem6768751 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2184 A K k dom f _88025 i) = (term2191 A K k dom f _88025 i).
Proof. exact (MK_COMB (@lem6768739 K k _88025) (@lem6768750 A K dom f _88025 i)). Qed.
Lemma lem6768752 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2183 A K k dom f _88025 i) = (term2191 A K k dom f _88025 i).
Proof. exact (TRANS (@lem6768734 A K k dom f _88025 i) (@lem6768751 A K k dom f _88025 i)). Qed.
Lemma lem6768753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2179 A K ltle k dom f _88025 i) = (term2192 A K ltle k dom f _88025 i).
Proof. exact (MK_COMB (@lem6768731 K ltle _88025 i) (@lem6768752 A K k dom f _88025 i)). Qed.
Lemma lem6768754 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2178 A K ltle k dom f _88025 i) = (term2192 A K ltle k dom f _88025 i).
Proof. exact (TRANS (@lem6768726 A K ltle k dom f _88025 i) (@lem6768753 A K ltle k dom f _88025 i)). Qed.
Lemma lem6768755 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6768756 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88025 : K) (i : K) : (term2193 A K ltle k dom f _88025 i) = (term2194 A K ltle k dom f _88025 i).
Proof. exact (MK_COMB (@lem6768755) (@lem6768754 A K ltle k dom f _88025 i)). Qed.
Lemma lem6768757 {A K : Type'} (f : K -> A) (_88025 : K) (neut : A) : ((@I (K -> A) f _88025) = neut) = ((@I (K -> A) f _88025) = neut).
Proof. exact (eq_refl ((@I (K -> A) f _88025) = neut)). Qed.
Lemma lem6768758 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_88025 : K) (neut : A) : (term2177 A K ltle k dom i f _88025 neut) = (term2195 A K ltle k dom i f _88025 neut).
Proof. exact (MK_COMB (@lem6768756 A K ltle k dom f _88025 i) (@lem6768757 A K f _88025 neut)). Qed.
Lemma lem6768759 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (i : K) (f : K -> A) (_88025 : K) (neut : A) : (term2176 A K neut ltle k dom f _88025 i) = (term2195 A K ltle k dom i f _88025 neut).
Proof. exact (TRANS (@lem6768723 A K ltle k dom i f _88025 neut) (@lem6768758 A K ltle k dom i f _88025 neut)). Qed.
Lemma lem6768761 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term2190 A K dom f j' i.
Proof. exact (conj (@lem6768342 A K ltle k dom f neut j' i h1) (@lem6768349 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768762 {A K : Type'} (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : @I (K -> Prop) k j') : term2191 A K k dom f j' i.
Proof. exact (conj (@lem6768335 K k j' h2) (@lem6768761 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768763 {A K : Type'} (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : @I (K -> Prop) k j') : term2192 A K ltle k dom f j' i.
Proof. exact (conj (@lem6768328 A K ltle k dom f neut j' i h1) (@lem6768762 A K ltle dom f neut i k j' h1 h2)). Qed.
Lemma lem6768765 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2195 A K ltle k dom i f _88025 neut.
Proof. exact (EQ_MP (@lem6768759 A K ltle k dom i f _88025 neut) (@lem6768720 A K _88025 ltle i _87974 k dom f neut h1)). Qed.
Lemma lem6768766 {A K : Type'} (_88025 : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2195 A K ltle k dom i f _88025 neut.
Proof. exact (@lem6768765 A K _88025 ltle i _87974 k dom f neut h1). Qed.
Lemma lem6768767 {A K : Type'} (j' : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) : term2195 A K ltle k dom i f j' neut.
Proof. exact (@lem6768766 A K j' ltle i _87974 k dom f neut h1). Qed.
Lemma lem6768770 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> A) f j') = neut.
Proof. exact (@lem6768767 A K j' ltle i _87974 k dom f neut h1 (@lem6768763 A K ltle dom f neut i k j' h2 h3)). Qed.
Lemma lem6768771 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : term1386 A K f j' neut.
Proof. exact (fun h0 : term1208 A K f j' neut => @lem6768770 A K _87974 ltle dom f neut i k j' h1 h2 h3). Qed.
Lemma lem6768773 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6768774 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term1386 A K f j' neut) = ((@I (K -> A) f j') = neut).
Proof. exact (@lem6768773 ((@I (K -> A) f j') = neut)). Qed.
Lemma lem6768775 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> A) f j') = neut.
Proof. exact (EQ_MP (@lem6768774 A K f j' neut) (@lem6768771 A K _87974 ltle dom f neut i k j' h1 h2 h3)). Qed.
Lemma lem6768778 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6768780 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term1208 A K f j' neut) = (term1387 A K f j' neut).
Proof. exact (@lem6768778 ((@I (K -> A) f j') = neut)). Qed.
Lemma lem6768783 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) : term1387 A K f j' neut.
Proof. exact (EQ_MP (@lem6768780 A K f j' neut) (@lem6766742 A K ltle k dom f neut j' i h1)). Qed.
Lemma lem6768786 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (@lem6768783 A K ltle k dom f neut j' i h2 (@lem6768775 A K _87974 ltle dom f neut i k j' h1 h2 h3)). Qed.
Lemma lem6768787 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : term96.
Proof. exact (fun h0 : ~ False => @lem6768786 A K _87974 ltle dom f neut i k j' h1 h2 h3). Qed.
Lemma lem6768789 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6768790 : term96 = False.
Proof. exact (@lem6768789 False). Qed.
Lemma lem6768791 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (EQ_MP (@lem6768790) (@lem6768787 A K _87974 ltle dom f neut i k j' h1 h2 h3)). Qed.
Lemma lem6768792 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> Prop) k j') = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j' => @lem6768791 A K _87974 ltle dom f neut i k j' h1 h2 h3) (fun h4 : False => @lem6766756 K k j' h3)). Qed.
Lemma lem6768794 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (EQ_MP (@lem6768792 A K _87974 ltle dom f neut i k j' h1 h2 h3) (@lem6766756 K k j' h3)). Qed.
Lemma lem6768796 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : False.
Proof. exact (EQ_MP (@lem6767947) (@lem6767944 A K ltle k dom f neut j' i h1 h2)). Qed.
Lemma lem6768798 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6767549) (@lem6767546 A K ltle _87974 k dom f i neut h1 h2)). Qed.
Lemma lem6768799 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6767152 A K ltle i _87974 k dom f neut h1 h2) (fun h3 : False => @lem6765922 A K dom f i h1)). Qed.
Lemma lem6768801 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6768799 A K ltle i _87974 k dom f neut h1 h2) (@lem6765922 A K dom f i h1)). Qed.
Lemma lem6768802 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> Prop) k j') = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j' => @lem6768794 A K _87974 ltle dom f neut i k j' h1 h2 h3) (fun h4 : False => @lem6765782 K k j' h3)). Qed.
Lemma lem6768803 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (EQ_MP (@lem6768802 A K _87974 ltle dom f neut i k j' h1 h2 h3) (@lem6765782 K k j' h3)). Qed.
Lemma lem6768804 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : (j' = i) = False.
Proof. exact (prop_ext (fun h3 : j' = i => @lem6768796 A K ltle k dom f neut j' i h1 h2) (fun h3 : False => @lem6765712 K j' i h2)). Qed.
Lemma lem6768805 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : False.
Proof. exact (EQ_MP (@lem6768804 A K ltle k dom f neut j' i h1 h2) (@lem6765712 K j' i h2)). Qed.
Lemma lem6768806 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6768798 A K ltle _87974 k dom f i neut h1 h2) (fun h3 : False => @lem6765642 A K f i neut h2)). Qed.
Lemma lem6768807 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6768806 A K ltle _87974 k dom f i neut h1 h2) (@lem6765642 A K f i neut h2)). Qed.
Lemma lem6768808 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6768801 A K ltle i _87974 k dom f neut h1 h2) (fun h3 : False => @lem6765580 A K dom f i h1)). Qed.
Lemma lem6768809 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6768808 A K ltle i _87974 k dom f neut h1 h2) (@lem6765580 A K dom f i h1)). Qed.
Lemma lem6768810 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> Prop) k j') = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j' => @lem6768803 A K _87974 ltle dom f neut i k j' h1 h2 h3) (fun h4 : False => @lem6765362 K k j' h3)). Qed.
Lemma lem6768811 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (EQ_MP (@lem6768810 A K _87974 ltle dom f neut i k j' h1 h2 h3) (@lem6765362 K k j' h3)). Qed.
Lemma lem6768812 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : (j' = i) = False.
Proof. exact (prop_ext (fun h3 : j' = i => @lem6768805 A K ltle k dom f neut j' i h1 h2) (fun h3 : False => @lem6765179 K j' i h2)). Qed.
Lemma lem6768813 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : False.
Proof. exact (EQ_MP (@lem6768812 A K ltle k dom f neut j' i h1 h2) (@lem6765179 K j' i h2)). Qed.
Lemma lem6768814 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6768807 A K ltle _87974 k dom f i neut h1 h2) (fun h3 : False => @lem6764996 A K f i neut h2)). Qed.
Lemma lem6768815 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6768814 A K ltle _87974 k dom f i neut h1 h2) (@lem6764996 A K f i neut h2)). Qed.
Lemma lem6768816 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6768809 A K ltle i _87974 k dom f neut h1 h2) (fun h3 : False => @lem6764829 A K dom f i h1)). Qed.
Lemma lem6768817 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6768816 A K ltle i _87974 k dom f neut h1 h2) (@lem6764829 A K dom f i h1)). Qed.
Lemma lem6768818 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : (@I (K -> Prop) k j') = False.
Proof. exact (prop_ext (fun h4 : @I (K -> Prop) k j' => @lem6768811 A K _87974 ltle dom f neut i k j' h1 h2 h3) (fun h4 : False => @lem6765362 K k j' h3)). Qed.
Lemma lem6768819 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) (j' : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) (h3 : @I (K -> Prop) k j') : False.
Proof. exact (EQ_MP (@lem6768818 A K _87974 ltle dom f neut i k j' h1 h2 h3) (@lem6765362 K k j' h3)). Qed.
Lemma lem6768820 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : (j' = i) = False.
Proof. exact (prop_ext (fun h3 : j' = i => @lem6768813 A K ltle k dom f neut j' i h1 h2) (fun h3 : False => @lem6765179 K j' i h2)). Qed.
Lemma lem6768821 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term2131 A K ltle k dom f neut j' i) (h2 : j' = i) : False.
Proof. exact (EQ_MP (@lem6768820 A K ltle k dom f neut j' i h1 h2) (@lem6765179 K j' i h2)). Qed.
Lemma lem6768822 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : ((@I (K -> A) f i) = neut) = False.
Proof. exact (prop_ext (fun h3 : (@I (K -> A) f i) = neut => @lem6768815 A K ltle _87974 k dom f i neut h1 h2) (fun h3 : False => @lem6764996 A K f i neut h2)). Qed.
Lemma lem6768823 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : (@I (K -> A) f i) = neut) : False.
Proof. exact (EQ_MP (@lem6768822 A K ltle _87974 k dom f i neut h1 h2) (@lem6764996 A K f i neut h2)). Qed.
Lemma lem6768824 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : (term1190 A K dom f i) = False.
Proof. exact (prop_ext (fun h3 : term1190 A K dom f i => @lem6768817 A K ltle i _87974 k dom f neut h1 h2) (fun h3 : False => @lem6764829 A K dom f i h1)). Qed.
Lemma lem6768825 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term1190 A K dom f i) (h2 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6768824 A K ltle i _87974 k dom f neut h1 h2) (@lem6764829 A K dom f i h1)). Qed.
Lemma lem6768826 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2131 A K ltle k dom f neut j' i) : False.
Proof. exact (or_elim (@lem6764658 A K ltle k dom f neut j' i h2) (fun h0 : j' = i => @lem6768821 A K ltle k dom f neut j' i h2 h0) (fun h0 : @I (K -> Prop) k j' => @lem6768819 A K _87974 ltle dom f neut i k j' h1 h2 h0)). Qed.
Lemma lem6768827 {A K : Type'} (ltle : type1402 K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term1192 A K dom f i neut) : False.
Proof. exact (or_elim (@lem6764649 A K dom f i neut h2) (fun h0 : term1190 A K dom f i => @lem6768825 A K ltle i _87974 k dom f neut h0 h1) (fun h0 : (@I (K -> A) f i) = neut => @lem6768823 A K ltle _87974 k dom f i neut h1 h0)). Qed.
Lemma lem6768828 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term1312 A K ltle i _87974 k dom f neut) (h2 : term2123 A K ltle k dom f neut j' i) : False.
Proof. exact (or_elim (@lem6764193 A K ltle k dom f neut j' i h2) (fun h0 : term1192 A K dom f i neut => @lem6768827 A K ltle _87974 k dom f i neut h1 h0) (fun h0 : term2131 A K ltle k dom f neut j' i => @lem6768826 A K _87974 ltle k dom f neut j' i h1 h0)). Qed.
Lemma lem6768829 {A K : Type'} (_87974 : type835 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (i : K) (h1 : term815 A K _87974) (h2 : term1312 A K ltle i _87974 k dom f neut) (h3 : term2123 A K ltle k dom f neut j' i) : False.
Proof. exact (ex_elim (@lem6763532 A K _87974 h1) (fun j'' : type834 A K => fun h0 : term1120 A K _87974 j'' => @lem6768828 A K _87974 ltle k dom f neut j' i h2 h3)). Qed.
Lemma lem6768830 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (ex_elim (@lem6763825 A K ltle k dom f neut i h2) (fun j' : K => fun h0 : term2125 A K ltle k dom f neut i j' => @lem6768829 A K _87974 ltle k dom f neut j' i h1 h3 h0)). Qed.
Lemma lem6768831 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87974 k dom f neut) : (term1572 A K ltle k dom f neut i) = False.
Proof. exact (prop_ext (fun h4 : term1572 A K ltle k dom f neut i => @lem6768830 A K ltle i _87974 k dom f neut h1 h2 h3) (fun h4 : False => @lem6762506 A K ltle k dom f neut i h2)). Qed.
Lemma lem6768832 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1572 A K ltle k dom f neut i) (h3 : term1312 A K ltle i _87974 k dom f neut) : False.
Proof. exact (EQ_MP (@lem6768831 A K ltle i _87974 k dom f neut h1 h2 h3) (@lem6762506 A K ltle k dom f neut i h2)). Qed.
Lemma lem6768833 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1312 A K ltle i _87974 k dom f neut) : term2333 A K ltle k dom f neut i.
Proof. exact (fun h0 : term1572 A K ltle k dom f neut i => @lem6768832 A K ltle i _87974 k dom f neut h1 h0 h2). Qed.
Lemma lem6768834 {A K : Type'} (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1312 A K ltle i _87974 k dom f neut) : term1569 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6762505 A K ltle k dom f neut i) (@lem6768833 A K ltle i _87974 k dom f neut h1 h2)). Qed.
Lemma lem6768835 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_87974 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _87974) (h2 : term1312 A K ltle i _87974 k dom f neut) : term2259 A K j ltle k dom f neut i.
Proof. exact (fun h0 : j = i => @lem6768834 A K ltle i _87974 k dom f neut h1 h2). Qed.
Lemma lem6768836 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2296 A K _87974 j ltle k dom f neut i.
Proof. exact (fun h0 : term1312 A K ltle i _87974 k dom f neut => @lem6768835 A K j ltle i _87974 k dom f neut h1 h0). Qed.
Lemma lem6768841 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2298 A K _87974 ltle k dom f neut i.
Proof. exact (fun j : K => @lem6768836 A K j ltle k dom f neut i _87974 h1). Qed.
Lemma lem6768846 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2300 A K _87974 k dom f neut i.
Proof. exact (fun ltle : type1402 K => @lem6768841 A K ltle k dom f neut i _87974 h1). Qed.
Lemma lem6768851 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2302 A K _87974 dom f neut i.
Proof. exact (fun k : K -> Prop => @lem6768846 A K k dom f neut i _87974 h1). Qed.
Lemma lem6768856 {A K : Type'} (f : K -> A) (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2304 A K _87974 f neut i.
Proof. exact (fun dom : A -> Prop => @lem6768851 A K dom f neut i _87974 h1). Qed.
Lemma lem6768861 {A K : Type'} (neut : A) (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2306 A K _87974 neut i.
Proof. exact (fun f : K -> A => @lem6768856 A K f neut i _87974 h1). Qed.
Lemma lem6768866 {A K : Type'} (i : K) (_87974 : type835 A K) (h1 : term815 A K _87974) : term2308 A K _87974 i.
Proof. exact (fun neut : A => @lem6768861 A K neut i _87974 h1). Qed.
Lemma lem6768871 {A K : Type'} (_87974 : type835 A K) (h1 : term815 A K _87974) : term2310 A K _87974.
Proof. exact (fun i : K => @lem6768866 A K i _87974 h1). Qed.
Lemma lem6768872 {A K : Type'} (_87974 : type835 A K) : term2330 A K _87974.
Proof. exact (fun h0 : term815 A K _87974 => @lem6768871 A K _87974 h0). Qed.
Lemma lem6768877 {A K : Type'} : term2332 A K.
Proof. exact (fun _87974 : type835 A K => @lem6768872 A K _87974). Qed.
Lemma lem6768878 {A K : Type'} : term2294 A K.
Proof. exact (EQ_MP (@lem6762498 A K) (@lem6768877 A K)). Qed.
Lemma lem6768879 {A K : Type'} (i : K) : term2334 A K i.
Proof. exact (@lem6768878 A K i). Qed.
Lemma lem6768880 {A K : Type'} (i : K) : (term2334 A K i) = (term2290 A K i).
Proof. exact (eq_refl (term2334 A K i)). Qed.
Lemma lem6768881 {A K : Type'} (i : K) : term2290 A K i.
Proof. exact (EQ_MP (@lem6768880 A K i) (@lem6768879 A K i)). Qed.
Lemma lem6768882 {A K : Type'} (i : K) (neut : A) : term2335 A K i neut.
Proof. exact (@lem6768881 A K i neut). Qed.
Lemma lem6768883 {A K : Type'} (neut : A) (i : K) : (term2335 A K i neut) = (term2286 A K neut i).
Proof. exact (eq_refl (term2335 A K i neut)). Qed.
Lemma lem6768884 {A K : Type'} (neut : A) (i : K) : term2286 A K neut i.
Proof. exact (EQ_MP (@lem6768883 A K neut i) (@lem6768882 A K i neut)). Qed.
Lemma lem6768885 {A K : Type'} (neut : A) (i : K) (f : K -> A) : term2336 A K neut i f.
Proof. exact (@lem6768884 A K neut i f). Qed.
Lemma lem6768886 {A K : Type'} (f : K -> A) (neut : A) (i : K) : (term2336 A K neut i f) = (term2282 A K f neut i).
Proof. exact (eq_refl (term2336 A K neut i f)). Qed.
Lemma lem6768887 {A K : Type'} (f : K -> A) (neut : A) (i : K) : term2282 A K f neut i.
Proof. exact (EQ_MP (@lem6768886 A K f neut i) (@lem6768885 A K neut i f)). Qed.
Lemma lem6768888 {A K : Type'} (f : K -> A) (neut : A) (i : K) (dom : A -> Prop) : term2337 A K f neut i dom.
Proof. exact (@lem6768887 A K f neut i dom). Qed.
Lemma lem6768889 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2337 A K f neut i dom) = (term2278 A K dom f neut i).
Proof. exact (eq_refl (term2337 A K f neut i dom)). Qed.
Lemma lem6768890 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2278 A K dom f neut i.
Proof. exact (EQ_MP (@lem6768889 A K dom f neut i) (@lem6768888 A K f neut i dom)). Qed.
Lemma lem6768891 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (k : K -> Prop) : term2338 A K dom f neut i k.
Proof. exact (@lem6768890 A K dom f neut i k). Qed.
Lemma lem6768892 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2338 A K dom f neut i k) = (term2274 A K k dom f neut i).
Proof. exact (eq_refl (term2338 A K dom f neut i k)). Qed.
Lemma lem6768893 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2274 A K k dom f neut i.
Proof. exact (EQ_MP (@lem6768892 A K k dom f neut i) (@lem6768891 A K dom f neut i k)). Qed.
Lemma lem6768894 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (ltle : type1402 K) : term2339 A K k dom f neut i ltle.
Proof. exact (@lem6768893 A K k dom f neut i ltle). Qed.
Lemma lem6768895 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2339 A K k dom f neut i ltle) = (term2270 A K ltle k dom f neut i).
Proof. exact (eq_refl (term2339 A K k dom f neut i ltle)). Qed.
Lemma lem6768896 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2270 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6768895 A K ltle k dom f neut i) (@lem6768894 A K k dom f neut i ltle)). Qed.
Lemma lem6768897 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (j : K) : term2340 A K ltle k dom f neut i j.
Proof. exact (@lem6768896 A K ltle k dom f neut i j). Qed.
Lemma lem6768898 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term2340 A K ltle k dom f neut i j) = (term2262 A K j ltle k dom f neut i).
Proof. exact (eq_refl (term2340 A K ltle k dom f neut i j)). Qed.
Lemma lem6768899 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2262 A K j ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6768898 A K j ltle k dom f neut i) (@lem6768897 A K ltle k dom f neut i j)). Qed.
Lemma lem6768901 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2262 A K j ltle k dom f neut i.
Proof. exact (@lem6761650 A K j ltle k dom f neut i (@lem6768899 A K j ltle k dom f neut i)). Qed.
Lemma lem6768902 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2263 A K j ltle k dom f neut i) : False.
Proof. exact (@lem6768901 A K j ltle k dom f neut i (@lem6761634 A K j ltle k dom f neut i h1)). Qed.
Lemma lem6768903 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2263 A K j ltle k dom f neut i) : (term2263 A K j ltle k dom f neut i) = False.
Proof. exact (prop_ext (fun h2 : term2263 A K j ltle k dom f neut i => @lem6768902 A K j ltle k dom f neut i h1) (fun h2 : False => @lem6761634 A K j ltle k dom f neut i h1)). Qed.
Lemma lem6768904 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) (h1 : term2263 A K j ltle k dom f neut i) : False.
Proof. exact (EQ_MP (@lem6768903 A K j ltle k dom f neut i h1) (@lem6761634 A K j ltle k dom f neut i h1)). Qed.
Lemma lem6768905 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2262 A K j ltle k dom f neut i.
Proof. exact (fun h0 : term2263 A K j ltle k dom f neut i => @lem6768904 A K j ltle k dom f neut i h0). Qed.
Lemma lem6768906 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term2261 A K j ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6761633 A K j ltle k dom f neut i) (@lem6768905 A K j ltle k dom f neut i)). Qed.
Lemma lem6768908 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : term2260 A K j ltle k f dom neut i.
Proof. exact (EQ_MP (@lem6761629 A K j ltle k f dom neut i) (@lem6768906 A K j ltle k dom f neut i)). Qed.
Lemma lem6768909 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2258 A K j ltle k f dom neut i.
Proof. exact (@lem6768908 A K j ltle k f dom neut i (@lem6761116 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6768910 {A : Type'} (x : A) : term2341 A x.
Proof. exact (@lem3205665 A x). Qed.
Lemma lem6768911 {A : Type'} (x : A) : (term2341 A x) = (term2342 A x).
Proof. exact (eq_refl (term2341 A x)). Qed.
Lemma lem6768912 {A : Type'} (x : A) : term2342 A x.
Proof. exact (EQ_MP (@lem6768911 A x) (@lem6768910 A x)). Qed.
Lemma lem6768913 {A : Type'} (x : A) (y : A) : term2343 A x y.
Proof. exact (@lem6768912 A x y). Qed.
Lemma lem6768914 {A : Type'} (y : A) (x : A) : (term2343 A x y) = (term2344 A y x).
Proof. exact (eq_refl (term2343 A x y)). Qed.
Lemma lem6768915 {A : Type'} (y : A) (x : A) : term2344 A y x.
Proof. exact (EQ_MP (@lem6768914 A y x) (@lem6768913 A x y)). Qed.
Lemma lem6768916 {A : Type'} (y : A) (x : A) (s : A -> Prop) : term2345 A y x s.
Proof. exact (@lem6768915 A y x s). Qed.
Lemma lem6768917 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term2345 A y x s) = ((term36 A x y s) = (term37 A y x s)).
Proof. exact (eq_refl (term2345 A y x s)). Qed.
Lemma lem6768931 {K : Type'} (i : K) (k : K -> Prop) : term526 K i k.
Proof. exact (@lem82 (@IN K i k)). Qed.
Lemma lem6768953 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem6768917 A y x s) (@lem6768916 A y x s)). Qed.
Lemma lem6768954 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6768953 K y x s). Qed.
Lemma lem6768955 {K : Type'} (i : K) (j : K) (k : K -> Prop) : (term36 K j i k) = (term37 K i j k).
Proof. exact (@lem6768954 K i j k). Qed.
Lemma lem6768961 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6768962 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6768963 {K : Type'} (j : K) (i : K) (h1 : j = i) : (@eq K j) = (@eq K i).
Proof. exact (MK_COMB (@lem6768962 K) (@lem6768961 K j i h1)). Qed.
Lemma lem6768964 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6768965 {K : Type'} (j : K) (i : K) (h1 : j = i) : (j = i) = (i = i).
Proof. exact (MK_COMB (@lem6768963 K j i h1) (@lem6768964 K i)). Qed.
Lemma lem6768967 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6768968 {K : Type'} (x : K) : (x = x) = True.
Proof. exact (@lem6768967 K x). Qed.
Lemma lem6768969 {K : Type'} (i : K) : (i = i) = True.
Proof. exact (@lem6768968 K i). Qed.
Lemma lem6768970 {K : Type'} (j : K) (i : K) (h1 : j = i) : (j = i) = True.
Proof. exact (TRANS (@lem6768965 K j i h1) (@lem6768969 K i)). Qed.
Lemma lem6768971 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6768972 {K : Type'} (j : K) (i : K) (h1 : j = i) : (term38 K j i) = (or True).
Proof. exact (MK_COMB (@lem6768971) (@lem6768970 K j i h1)). Qed.
Lemma lem6768974 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6768975 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6768976 {K : Type'} (j : K) (i : K) (h1 : j = i) : (@IN K j) = (@IN K i).
Proof. exact (MK_COMB (@lem6768975 K) (@lem6768974 K j i h1)). Qed.
Lemma lem6768977 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6768978 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : j = i) : (@IN K j k) = (@IN K i k).
Proof. exact (MK_COMB (@lem6768976 K j i h1) (@lem6768977 K k)). Qed.
Lemma lem6768980 {K : Type'} (i : K) (k : K -> Prop) (h1 : term29 K i k) : (@IN K i k) = False.
Proof. exact (@lem6768931 K i k (@lem6452322 K i k h1)). Qed.
Lemma lem6768981 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (@IN K j k) = False.
Proof. exact (TRANS (@lem6768978 K k j i h2) (@lem6768980 K i k h1)). Qed.
Lemma lem6768982 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term37 K i j k) = (True \/ False).
Proof. exact (MK_COMB (@lem6768972 K j i h2) (@lem6768981 K k j i h1 h2)). Qed.
Lemma lem6768984 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem1831 t)). Qed.
Lemma lem6768985 : (True \/ False) = True.
Proof. exact (@lem6768984 False). Qed.
Lemma lem6768986 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term37 K i j k) = True.
Proof. exact (TRANS (@lem6768982 K k j i h1 h2) (@lem6768985)). Qed.
Lemma lem6768987 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term36 K j i k) = True.
Proof. exact (TRANS (@lem6768955 K i j k) (@lem6768986 K k j i h1 h2)). Qed.
Lemma lem6768988 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6768989 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term40 K j i k) = (and True).
Proof. exact (MK_COMB (@lem6768988) (@lem6768987 K k j i h1 h2)). Qed.
Lemma lem6768993 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6768994 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6768995 {A K : Type'} (f : K -> A) (j : K) (i : K) (h1 : j = i) : (f j) = (f i).
Proof. exact (MK_COMB (@lem6768994 A K f) (@lem6768993 K j i h1)). Qed.
Lemma lem6768996 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6768997 {A K : Type'} (f : K -> A) (j : K) (i : K) (h1 : j = i) : (term2239 A K f j) = (term2239 A K f i).
Proof. exact (MK_COMB (@lem6768996 A) (@lem6768995 A K f j i h1)). Qed.
Lemma lem6768998 {A : Type'} (dom : A -> Prop) (neut : A) : (term2240 A dom neut) = (term2240 A dom neut).
Proof. exact (eq_refl (term2240 A dom neut)). Qed.
Lemma lem6768999 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term426 A K f j dom neut) = (term426 A K f i dom neut).
Proof. exact (MK_COMB (@lem6768997 A K f j i h1) (@lem6768998 A dom neut)). Qed.
Lemma lem6769000 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769001 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term454 A K f j dom neut) = (term454 A K f i dom neut).
Proof. exact (MK_COMB (@lem6769000) (@lem6768999 A K f dom neut j i h1)). Qed.
Lemma lem6769011 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6769012 {K : Type'} (ltle : type1402 K) (j' : K) : (ltle j') = (ltle j').
Proof. exact (eq_refl (ltle j')). Qed.
Lemma lem6769013 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) (i : K) (h1 : j = i) : (ltle j' j) = (ltle j' i).
Proof. exact (MK_COMB (@lem6769012 K ltle j') (@lem6769011 K j i h1)). Qed.
Lemma lem6769014 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769015 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) (i : K) (h1 : j = i) : (term447 K ltle j' j) = (term447 K ltle j' i).
Proof. exact (MK_COMB (@lem6769014) (@lem6769013 K ltle j' j i h1)). Qed.
Lemma lem6769019 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem6768917 A y x s) (@lem6768916 A y x s)). Qed.
Lemma lem6769020 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6769019 K y x s). Qed.
Lemma lem6769021 {K : Type'} (i : K) (j' : K) (k : K -> Prop) : (term36 K j' i k) = (term37 K i j' k).
Proof. exact (@lem6769020 K i j' k). Qed.
Lemma lem6769026 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769027 {K : Type'} (i : K) (j' : K) (k : K -> Prop) : (term40 K j' i k) = (term2346 K i j' k).
Proof. exact (MK_COMB (@lem6769026) (@lem6769021 K i j' k)). Qed.
Lemma lem6769028 {A K : Type'} (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term426 A K f j' dom neut) = (term426 A K f j' dom neut).
Proof. exact (eq_refl (term426 A K f j' dom neut)). Qed.
Lemma lem6769029 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term643 A K i k f j' dom neut) = (term2347 A K i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769027 K i j' k) (@lem6769028 A K f j' dom neut)). Qed.
Lemma lem6769032 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2242 A K ltle j i k f j' dom neut) = (term2348 A K ltle i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769015 K ltle j' j i h1) (@lem6769029 A K i k f j' dom neut)). Qed.
Lemma lem6769035 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769036 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2349 A K ltle j i k f j' dom neut) = (term2350 A K ltle i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769035) (@lem6769032 A K ltle k f j' dom neut j i h1)). Qed.
Lemma lem6769040 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6769041 {K : Type'} (j' : K) : (@eq K j') = (@eq K j').
Proof. exact (eq_refl (@eq K j')). Qed.
Lemma lem6769042 {K : Type'} (j' : K) (j : K) (i : K) (h1 : j = i) : (j' = j) = (j' = i).
Proof. exact (MK_COMB (@lem6769041 K j') (@lem6769040 K j i h1)). Qed.
Lemma lem6769045 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) (i : K) (h1 : j = i) : (term2251 A K ltle i k f dom neut j' j) = (term2351 A K ltle k f dom neut j' i).
Proof. exact (MK_COMB (@lem6769036 A K ltle k f j' dom neut j i h1) (@lem6769042 K j' j i h1)). Qed.
Lemma lem6769048 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2252 A K ltle i k f dom neut j) = (term2352 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j' : K => @lem6769045 A K ltle k f dom neut j' j i h1)). Qed.
Lemma lem6769049 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769050 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2253 A K ltle i k f dom neut j) = (term2353 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6769049 K) (@lem6769048 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6769055 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : j = i) : (term2254 A K ltle i k f dom neut j) = (term2354 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6769001 A K f dom neut j i h1) (@lem6769050 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6769058 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term1534 A K ltle i k f dom neut j) = (term2355 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6768989 K k j i h1 h2) (@lem6769055 A K ltle k f dom neut j i h2)). Qed.
Lemma lem6769060 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6769061 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2355 A K ltle k f dom neut i) = (term2354 A K ltle k f dom neut i).
Proof. exact (@lem6769060 (term2354 A K ltle k f dom neut i)). Qed.
Lemma lem6769080 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term1534 A K ltle i k f dom neut j) = (term2354 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6769058 A K ltle f dom neut k j i h1 h2) (@lem6769061 A K ltle k f dom neut i)). Qed.
Lemma lem6769081 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769082 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term2356 A K ltle i k f dom neut j) = (term2357 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6769081) (@lem6769080 A K ltle f dom neut k j i h1 h2)). Qed.
Lemma lem6769086 {K : Type'} (j : K) (i : K) (h1 : j = i) : j = i.
Proof. exact (h1). Qed.
Lemma lem6769087 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6769088 {K : Type'} (j : K) (i : K) (h1 : j = i) : (@eq K j) = (@eq K i).
Proof. exact (MK_COMB (@lem6769087 K) (@lem6769086 K j i h1)). Qed.
Lemma lem6769089 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6769090 {K : Type'} (j : K) (i : K) (h1 : j = i) : (j = i) = (i = i).
Proof. exact (MK_COMB (@lem6769088 K j i h1) (@lem6769089 K i)). Qed.
Lemma lem6769092 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6769093 {K : Type'} (x : K) : (x = x) = True.
Proof. exact (@lem6769092 K x). Qed.
Lemma lem6769094 {K : Type'} (i : K) : (i = i) = True.
Proof. exact (@lem6769093 K i). Qed.
Lemma lem6769095 {K : Type'} (j : K) (i : K) (h1 : j = i) : (j = i) = True.
Proof. exact (TRANS (@lem6769090 K j i h1) (@lem6769094 K i)). Qed.
Lemma lem6769096 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term2358 A K ltle k f dom neut j i) = (term2359 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6769082 A K ltle f dom neut k j i h1 h2) (@lem6769095 K j i h2)). Qed.
Lemma lem6769098 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6769099 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2359 A K ltle k f dom neut i) = True.
Proof. exact (@lem6769098 (term2354 A K ltle k f dom neut i)). Qed.
Lemma lem6769100 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : (term2358 A K ltle k f dom neut j i) = True.
Proof. exact (TRANS (@lem6769096 A K ltle f dom neut k j i h1 h2) (@lem6769099 A K ltle k f dom neut i)). Qed.
Lemma lem6769101 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : True = (term2358 A K ltle k f dom neut j i).
Proof. exact (SYM (@lem6769100 A K ltle f dom neut k j i h1 h2)). Qed.
Lemma lem6769102 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (j : K) (i : K) (h1 : term29 K i k) (h2 : j = i) : term2358 A K ltle k f dom neut j i.
Proof. exact (EQ_MP (@lem6769101 A K ltle f dom neut k j i h1 h2) (@lem0)). Qed.
Lemma lem6769103 {A : Type'} (x : A) : term2341 A x.
Proof. exact (@lem3205665 A x). Qed.
Lemma lem6769104 {A : Type'} (x : A) : (term2341 A x) = (term2342 A x).
Proof. exact (eq_refl (term2341 A x)). Qed.
Lemma lem6769105 {A : Type'} (x : A) : term2342 A x.
Proof. exact (EQ_MP (@lem6769104 A x) (@lem6769103 A x)). Qed.
Lemma lem6769106 {A : Type'} (x : A) (y : A) : term2343 A x y.
Proof. exact (@lem6769105 A x y). Qed.
Lemma lem6769107 {A : Type'} (y : A) (x : A) : (term2343 A x y) = (term2344 A y x).
Proof. exact (eq_refl (term2343 A x y)). Qed.
Lemma lem6769108 {A : Type'} (y : A) (x : A) : term2344 A y x.
Proof. exact (EQ_MP (@lem6769107 A y x) (@lem6769106 A x y)). Qed.
Lemma lem6769109 {A : Type'} (y : A) (x : A) (s : A -> Prop) : term2345 A y x s.
Proof. exact (@lem6769108 A y x s). Qed.
Lemma lem6769110 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term2345 A y x s) = ((term36 A x y s) = (term37 A y x s)).
Proof. exact (eq_refl (term2345 A y x s)). Qed.
Lemma lem6769141 {K : Type'} (j : K) (i : K) : term2360 K j i.
Proof. exact (@lem82 (j = i)). Qed.
Lemma lem6769159 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem6769110 A y x s) (@lem6769109 A y x s)). Qed.
Lemma lem6769160 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6769159 K y x s). Qed.
Lemma lem6769161 {K : Type'} (i : K) (j : K) (k : K -> Prop) : (term36 K j i k) = (term37 K i j k).
Proof. exact (@lem6769160 K i j k). Qed.
Lemma lem6769165 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : (j = i) = False.
Proof. exact (@lem6769141 K j i (@lem6449483 K j i h1)). Qed.
Lemma lem6769166 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6769167 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : (term38 K j i) = (or False).
Proof. exact (MK_COMB (@lem6769166) (@lem6769165 K j i h1)). Qed.
Lemma lem6769168 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (@IN K j k).
Proof. exact (eq_refl (@IN K j k)). Qed.
Lemma lem6769169 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term2 K j i) : (term37 K i j k) = (term2361 K j k).
Proof. exact (MK_COMB (@lem6769167 K j i h1) (@lem6769168 K j k)). Qed.
Lemma lem6769171 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem1833 t)). Qed.
Lemma lem6769172 {K : Type'} (j : K) (k : K -> Prop) : (term2361 K j k) = (@IN K j k).
Proof. exact (@lem6769171 (@IN K j k)). Qed.
Lemma lem6769173 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term2 K j i) : (term37 K i j k) = (@IN K j k).
Proof. exact (TRANS (@lem6769169 K k j i h1) (@lem6769172 K j k)). Qed.
Lemma lem6769174 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term2 K j i) : (term36 K j i k) = (@IN K j k).
Proof. exact (TRANS (@lem6769161 K i j k) (@lem6769173 K k j i h1)). Qed.
Lemma lem6769175 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769176 {K : Type'} (k : K -> Prop) (j : K) (i : K) (h1 : term2 K j i) : (term40 K j i k) = (term332 K j k).
Proof. exact (MK_COMB (@lem6769175) (@lem6769174 K k j i h1)). Qed.
Lemma lem6769190 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem6769110 A y x s) (@lem6769109 A y x s)). Qed.
Lemma lem6769191 {K : Type'} (y : K) (x : K) (s : K -> Prop) : (term36 K x y s) = (term37 K y x s).
Proof. exact (@lem6769190 K y x s). Qed.
Lemma lem6769192 {K : Type'} (i : K) (j' : K) (k : K -> Prop) : (term36 K j' i k) = (term37 K i j' k).
Proof. exact (@lem6769191 K i j' k). Qed.
Lemma lem6769197 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769198 {K : Type'} (i : K) (j' : K) (k : K -> Prop) : (term40 K j' i k) = (term2346 K i j' k).
Proof. exact (MK_COMB (@lem6769197) (@lem6769192 K i j' k)). Qed.
Lemma lem6769199 {A K : Type'} (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term426 A K f j' dom neut) = (term426 A K f j' dom neut).
Proof. exact (eq_refl (term426 A K f j' dom neut)). Qed.
Lemma lem6769200 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term643 A K i k f j' dom neut) = (term2347 A K i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769198 K i j' k) (@lem6769199 A K f j' dom neut)). Qed.
Lemma lem6769203 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term447 K ltle j' j) = (term447 K ltle j' j).
Proof. exact (eq_refl (term447 K ltle j' j)). Qed.
Lemma lem6769204 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term2242 A K ltle j i k f j' dom neut) = (term2362 A K ltle j i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769203 K ltle j' j) (@lem6769200 A K i k f j' dom neut)). Qed.
Lemma lem6769207 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769208 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (f : K -> A) (j' : K) (dom : A -> Prop) (neut : A) : (term2349 A K ltle j i k f j' dom neut) = (term2363 A K ltle j i k f j' dom neut).
Proof. exact (MK_COMB (@lem6769207) (@lem6769204 A K ltle j i k f j' dom neut)). Qed.
Lemma lem6769211 {K : Type'} (j' : K) (j : K) : (j' = j) = (j' = j).
Proof. exact (eq_refl (j' = j)). Qed.
Lemma lem6769212 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K) (j : K) : (term2251 A K ltle i k f dom neut j' j) = (term2364 A K ltle i k f dom neut j' j).
Proof. exact (MK_COMB (@lem6769208 A K ltle j i k f j' dom neut) (@lem6769211 K j' j)). Qed.
Lemma lem6769215 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2252 A K ltle i k f dom neut j) = (term2365 A K ltle i k f dom neut j).
Proof. exact (fun_ext (fun j' : K => @lem6769212 A K ltle i k f dom neut j' j)). Qed.
Lemma lem6769216 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769217 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2253 A K ltle i k f dom neut j) = (term2366 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6769216 K) (@lem6769215 A K ltle i k f dom neut j)). Qed.
Lemma lem6769222 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term454 A K f j dom neut) = (term454 A K f j dom neut).
Proof. exact (eq_refl (term454 A K f j dom neut)). Qed.
Lemma lem6769223 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2254 A K ltle i k f dom neut j) = (term2367 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6769222 A K f j dom neut) (@lem6769217 A K ltle i k f dom neut j)). Qed.
Lemma lem6769226 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : term2 K j i) : (term1534 A K ltle i k f dom neut j) = (term2368 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6769176 K k j i h1) (@lem6769223 A K ltle i k f dom neut j)). Qed.
Lemma lem6769229 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769230 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : term2 K j i) : (term2356 A K ltle i k f dom neut j) = (term2369 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6769229) (@lem6769226 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6769232 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : (j = i) = False.
Proof. exact (@lem6769141 K j i (@lem6449483 K j i h1)). Qed.
Lemma lem6769233 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : term2 K j i) : (term2358 A K ltle k f dom neut j i) = (term2370 A K ltle i k f dom neut j).
Proof. exact (MK_COMB (@lem6769230 A K ltle k f dom neut j i h1) (@lem6769232 K j i h1)). Qed.
Lemma lem6769235 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem1823 t)). Qed.
Lemma lem6769236 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2370 A K ltle i k f dom neut j) = (term2371 A K ltle i k f dom neut j).
Proof. exact (@lem6769235 (term2368 A K ltle i k f dom neut j)). Qed.
Lemma lem6769257 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : term2 K j i) : (term2358 A K ltle k f dom neut j i) = (term2371 A K ltle i k f dom neut j).
Proof. exact (TRANS (@lem6769233 A K ltle k f dom neut j i h1) (@lem6769236 A K ltle i k f dom neut j)). Qed.
Lemma lem6769258 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) (h1 : term2 K j i) : (term2371 A K ltle i k f dom neut j) = (term2358 A K ltle k f dom neut j i).
Proof. exact (SYM (@lem6769257 A K ltle k f dom neut j i h1)). Qed.
Lemma lem6769259 (t1 : Prop) : term1546 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem6769260 (t1 : Prop) : (term1546 t1) = (term1547 t1).
Proof. exact (eq_refl (term1546 t1)). Qed.
Lemma lem6769261 (t1 : Prop) : term1547 t1.
Proof. exact (EQ_MP (@lem6769260 t1) (@lem6769259 t1)). Qed.
Lemma lem6769262 (t1 : Prop) (t2 : Prop) : term1548 t1 t2.
Proof. exact (@lem6769261 t1 t2). Qed.
Lemma lem6769263 (t1 : Prop) (t2 : Prop) : (term1548 t1 t2) = (term1549 t1 t2).
Proof. exact (eq_refl (term1548 t1 t2)). Qed.
Lemma lem6769264 (t1 : Prop) (t2 : Prop) : term1549 t1 t2.
Proof. exact (EQ_MP (@lem6769263 t1 t2) (@lem6769262 t1 t2)). Qed.
Lemma lem6769265 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term1550 t1 t2 t3.
Proof. exact (@lem6769264 t1 t2 t3). Qed.
Lemma lem6769266 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1550 t1 t2 t3) = ((term1366 t1 t2 t3) = (term1551 t1 t2 t3)).
Proof. exact (eq_refl (term1550 t1 t2 t3)). Qed.
Lemma lem6769267 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1366 t1 t2 t3) = (term1551 t1 t2 t3).
Proof. exact (EQ_MP (@lem6769266 t1 t2 t3) (@lem6769265 t1 t2 t3)). Qed.
Lemma lem6769268 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1551 t1 t2 t3) = (term1366 t1 t2 t3).
Proof. exact (SYM (@lem6769267 t1 t2 t3)). Qed.
Lemma lem6769269 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) : term581 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452665 K k ltle i h1) (@lem6452663 A K k f dom neut h2)). Qed.
Lemma lem6769270 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : term582 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452664 A K ltle k f dom neut i h1) (@lem6769269 A K ltle i k f dom neut h2 h3)). Qed.
Lemma lem6769271 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term583 A K ltle i k f dom neut.
Proof. exact (conj (@lem6452322 K i k h4) (@lem6769270 A K ltle i k f dom neut h1 h2 h3)). Qed.
Lemma lem6769272 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term504 A K f i dom) : term1265 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555423 A K f i dom h5) (@lem6769271 A K ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6769273 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1266 A K ltle i k f dom neut.
Proof. exact (conj (@lem6555422 A K f i neut h4) (@lem6769272 A K ltle neut k f i dom h1 h2 h3 h5 h6)). Qed.
Lemma lem6769274 {A K : Type'} (ltle : type1402 K) (neut : A) (j : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term2 K j i) (h6 : term29 K i k) (h7 : term504 A K f i dom) : term2372 A K j ltle i k f dom neut.
Proof. exact (conj (@lem6449483 K j i h5) (@lem6769273 A K ltle neut k f i dom h1 h2 h3 h4 h6 h7)). Qed.
Lemma lem6769370 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769371 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6769370 A P x). Qed.
Lemma lem6769372 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term504 A K f i dom) = (term591 A K dom f i).
Proof. exact (@lem6769371 A dom (f i)). Qed.
Lemma lem6769373 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769374 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term573 A K f i dom) = (term592 A K dom f i).
Proof. exact (MK_COMB (@lem6769373) (@lem6769372 A K dom f i)). Qed.
Lemma lem6769378 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769379 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769378 K P x). Qed.
Lemma lem6769380 {K : Type'} (k : K -> Prop) (i : K) : (@IN K i k) = (k i).
Proof. exact (@lem6769379 K k i). Qed.
Lemma lem6769381 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769382 {K : Type'} (k : K -> Prop) (i : K) : (term29 K i k) = (term30 K k i).
Proof. exact (MK_COMB (@lem6769381) (@lem6769380 K k i)). Qed.
Lemma lem6769383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769384 {K : Type'} (k : K -> Prop) (i : K) : (term599 K i k) = (term600 K k i).
Proof. exact (MK_COMB (@lem6769383) (@lem6769382 K k i)). Qed.
Lemma lem6769398 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769399 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769398 K P x). Qed.
Lemma lem6769400 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6769399 K k j). Qed.
Lemma lem6769401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769402 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6769401) (@lem6769400 K k j)). Qed.
Lemma lem6769404 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6769405 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6769404 A s x t). Qed.
Lemma lem6769406 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6769405 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6769410 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769411 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6769410 A P x). Qed.
Lemma lem6769412 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6769411 A dom (f j)). Qed.
Lemma lem6769413 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769414 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6769413) (@lem6769412 A K dom f j)). Qed.
Lemma lem6769416 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6769417 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6769416 A y x s). Qed.
Lemma lem6769418 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6769417 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6769424 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6769425 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6769424 A x). Qed.
Lemma lem6769426 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6769425 A (f j)). Qed.
Lemma lem6769427 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6769428 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6769427 A K f j neut) (@lem6769426 A K f j)). Qed.
Lemma lem6769430 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6769431 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6769430 ((f j) = neut)). Qed.
Lemma lem6769434 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6769428 A K f j neut) (@lem6769431 A K f j neut)). Qed.
Lemma lem6769435 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6769418 A K neut f j) (@lem6769434 A K f j neut)). Qed.
Lemma lem6769436 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769437 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6769436) (@lem6769435 A K f j neut)). Qed.
Lemma lem6769438 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6769414 A K dom f j) (@lem6769437 A K f j neut)). Qed.
Lemma lem6769441 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6769406 A K dom f j neut) (@lem6769438 A K dom f j neut)). Qed.
Lemma lem6769442 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6769402 K k j) (@lem6769441 A K dom f j neut)). Qed.
Lemma lem6769445 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term447 K ltle j i) = (term447 K ltle j i).
Proof. exact (eq_refl (term447 K ltle j i)). Qed.
Lemma lem6769446 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term603 A K ltle i k f j dom neut) = (term604 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6769445 K ltle j i) (@lem6769442 A K k dom f j neut)). Qed.
Lemma lem6769449 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769450 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term605 A K ltle i k f j dom neut) = (term606 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6769449) (@lem6769446 A K ltle i k dom f j neut)). Qed.
Lemma lem6769453 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6769454 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term607 A K ltle k f dom neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6769450 A K ltle i k dom f j neut) (@lem6769453 K j i)). Qed.
Lemma lem6769457 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term609 A K ltle k f dom neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6769454 A K ltle k dom f neut j i)). Qed.
Lemma lem6769458 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769459 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term481 A K ltle k f dom neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6769458 K) (@lem6769457 A K ltle k dom f neut i)). Qed.
Lemma lem6769464 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769465 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term612 A K ltle k f dom neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6769464) (@lem6769459 A K ltle k dom f neut i)). Qed.
Lemma lem6769475 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769476 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769475 K P x). Qed.
Lemma lem6769477 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6769476 K k j). Qed.
Lemma lem6769478 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769479 {K : Type'} (k : K -> Prop) (j : K) : (term324 K j k) = (term325 K k j).
Proof. exact (MK_COMB (@lem6769478) (@lem6769477 K k j)). Qed.
Lemma lem6769486 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term614 K ltle j i).
Proof. exact (eq_refl (term614 K ltle j i)). Qed.
Lemma lem6769487 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term615 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (MK_COMB (@lem6769479 K k j) (@lem6769486 K ltle j i)). Qed.
Lemma lem6769490 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term617 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6769487 K k ltle j i)). Qed.
Lemma lem6769491 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769492 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term482 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6769491 K) (@lem6769490 K k ltle i)). Qed.
Lemma lem6769497 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769498 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term620 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6769497) (@lem6769492 K k ltle i)). Qed.
Lemma lem6769506 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769507 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769506 K P x). Qed.
Lemma lem6769508 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6769507 K k j). Qed.
Lemma lem6769509 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769510 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6769509) (@lem6769508 K k j)). Qed.
Lemma lem6769512 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6769513 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6769512 A s x t). Qed.
Lemma lem6769514 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6769513 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6769518 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769519 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6769518 A P x). Qed.
Lemma lem6769520 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6769519 A dom (f j)). Qed.
Lemma lem6769521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769522 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6769521) (@lem6769520 A K dom f j)). Qed.
Lemma lem6769524 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6769525 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6769524 A y x s). Qed.
Lemma lem6769526 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6769525 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6769532 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6769533 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6769532 A x). Qed.
Lemma lem6769534 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6769533 A (f j)). Qed.
Lemma lem6769535 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6769536 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6769535 A K f j neut) (@lem6769534 A K f j)). Qed.
Lemma lem6769538 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6769539 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6769538 ((f j) = neut)). Qed.
Lemma lem6769542 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6769536 A K f j neut) (@lem6769539 A K f j neut)). Qed.
Lemma lem6769543 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6769526 A K neut f j) (@lem6769542 A K f j neut)). Qed.
Lemma lem6769544 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769545 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6769544) (@lem6769543 A K f j neut)). Qed.
Lemma lem6769546 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6769522 A K dom f j) (@lem6769545 A K f j neut)). Qed.
Lemma lem6769549 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6769514 A K dom f j neut) (@lem6769546 A K dom f j neut)). Qed.
Lemma lem6769550 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term601 A K k f j dom neut) = (term602 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6769510 K k j) (@lem6769549 A K dom f j neut)). Qed.
Lemma lem6769553 {K : Type'} (GEN_PVAR_272 : K) : (@SETSPEC K GEN_PVAR_272) = (@SETSPEC K GEN_PVAR_272).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_272)). Qed.
Lemma lem6769554 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term622 A K GEN_PVAR_272 k f j dom neut) = (term623 A K GEN_PVAR_272 k dom f j neut).
Proof. exact (MK_COMB (@lem6769553 K GEN_PVAR_272) (@lem6769550 A K k dom f j neut)). Qed.
Lemma lem6769555 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6769556 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term624 A K GEN_PVAR_272 k f dom neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6769554 A K GEN_PVAR_272 k dom f j neut) (@lem6769555 K j)). Qed.
Lemma lem6769557 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term626 A K GEN_PVAR_272 k f dom neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6769556 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6769558 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6769559 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term628 A K GEN_PVAR_272 k f dom neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6769558 K) (@lem6769557 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6769564 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term630 A K k f dom neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6769559 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6769565 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6769566 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term586 A K k f dom neut) = (term632 A K k dom f neut).
Proof. exact (MK_COMB (@lem6769565 K) (@lem6769564 A K k dom f neut)). Qed.
Lemma lem6769567 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6769568 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term480 A K k f dom neut) = (term633 A K k dom f neut).
Proof. exact (MK_COMB (@lem6769567 K) (@lem6769566 A K k dom f neut)). Qed.
Lemma lem6769569 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term581 A K ltle i k f dom neut) = (term634 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769498 K k ltle i) (@lem6769568 A K k dom f neut)). Qed.
Lemma lem6769572 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term582 A K ltle i k f dom neut) = (term635 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769465 A K ltle k dom f neut i) (@lem6769569 A K ltle i k dom f neut)). Qed.
Lemma lem6769575 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term583 A K ltle i k f dom neut) = (term636 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769384 K k i) (@lem6769572 A K ltle i k dom f neut)). Qed.
Lemma lem6769578 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1265 A K ltle i k f dom neut) = (term1272 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769374 A K dom f i) (@lem6769575 A K ltle i k dom f neut)). Qed.
Lemma lem6769581 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6769582 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1266 A K ltle i k f dom neut) = (term1274 A K ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769581 A K f i neut) (@lem6769578 A K ltle i k dom f neut)). Qed.
Lemma lem6769585 {K : Type'} (j : K) (i : K) : (term1213 K j i) = (term1213 K j i).
Proof. exact (eq_refl (term1213 K j i)). Qed.
Lemma lem6769586 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2372 A K j ltle i k f dom neut) = (term2373 A K j ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769585 K j i) (@lem6769582 A K ltle i k dom f neut)). Qed.
Lemma lem6769589 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769590 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2374 A K j ltle i k f dom neut) = (term2375 A K j ltle i k dom f neut).
Proof. exact (MK_COMB (@lem6769589) (@lem6769586 A K j ltle i k dom f neut)). Qed.
Lemma lem6769594 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769595 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769594 K P x). Qed.
Lemma lem6769596 {K : Type'} (k : K -> Prop) (j : K) : (@IN K j k) = (k j).
Proof. exact (@lem6769595 K k j). Qed.
Lemma lem6769597 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769598 {K : Type'} (k : K -> Prop) (j : K) : (term332 K j k) = (term333 K k j).
Proof. exact (MK_COMB (@lem6769597) (@lem6769596 K k j)). Qed.
Lemma lem6769602 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6769603 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6769602 A s x t). Qed.
Lemma lem6769604 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term569 A K dom f j neut).
Proof. exact (@lem6769603 A dom (f j) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6769608 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769609 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6769608 A P x). Qed.
Lemma lem6769610 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term504 A K f j dom) = (term591 A K dom f j).
Proof. exact (@lem6769609 A dom (f j)). Qed.
Lemma lem6769611 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769612 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term573 A K f j dom) = (term592 A K dom f j).
Proof. exact (MK_COMB (@lem6769611) (@lem6769610 A K dom f j)). Qed.
Lemma lem6769614 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6769615 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6769614 A y x s). Qed.
Lemma lem6769616 {A K : Type'} (neut : A) (f : K -> A) (j : K) : (term570 A K f j neut) = (term593 A K neut f j).
Proof. exact (@lem6769615 A neut (f j) (@EMPTY A)). Qed.
Lemma lem6769622 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6769623 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6769622 A x). Qed.
Lemma lem6769624 {A K : Type'} (f : K -> A) (j : K) : (term594 A K f j) = False.
Proof. exact (@lem6769623 A (f j)). Qed.
Lemma lem6769625 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term512 A K f j neut) = (term512 A K f j neut).
Proof. exact (eq_refl (term512 A K f j neut)). Qed.
Lemma lem6769626 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = (term527 A K f j neut).
Proof. exact (MK_COMB (@lem6769625 A K f j neut) (@lem6769624 A K f j)). Qed.
Lemma lem6769628 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6769629 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term527 A K f j neut) = ((f j) = neut).
Proof. exact (@lem6769628 ((f j) = neut)). Qed.
Lemma lem6769632 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term593 A K neut f j) = ((f j) = neut).
Proof. exact (TRANS (@lem6769626 A K f j neut) (@lem6769629 A K f j neut)). Qed.
Lemma lem6769633 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term570 A K f j neut) = ((f j) = neut).
Proof. exact (TRANS (@lem6769616 A K neut f j) (@lem6769632 A K f j neut)). Qed.
Lemma lem6769634 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769635 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term571 A K f j neut) = (term572 A K f j neut).
Proof. exact (MK_COMB (@lem6769634) (@lem6769633 A K f j neut)). Qed.
Lemma lem6769636 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term569 A K dom f j neut) = (term595 A K dom f j neut).
Proof. exact (MK_COMB (@lem6769612 A K dom f j) (@lem6769635 A K f j neut)). Qed.
Lemma lem6769639 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term426 A K f j dom neut) = (term595 A K dom f j neut).
Proof. exact (TRANS (@lem6769604 A K dom f j neut) (@lem6769636 A K dom f j neut)). Qed.
Lemma lem6769640 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769641 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term454 A K f j dom neut) = (term1557 A K dom f j neut).
Proof. exact (MK_COMB (@lem6769640) (@lem6769639 A K dom f j neut)). Qed.
Lemma lem6769657 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769658 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6769657 K P x). Qed.
Lemma lem6769659 {K : Type'} (k : K -> Prop) (j' : K) : (@IN K j' k) = (k j').
Proof. exact (@lem6769658 K k j'). Qed.
Lemma lem6769660 {K : Type'} (j' : K) (i : K) : (term38 K j' i) = (term38 K j' i).
Proof. exact (eq_refl (term38 K j' i)). Qed.
Lemma lem6769661 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term37 K i j' k) = (term39 K i k j').
Proof. exact (MK_COMB (@lem6769660 K j' i) (@lem6769659 K k j')). Qed.
Lemma lem6769664 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769665 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term2346 K i j' k) = (term41 K i k j').
Proof. exact (MK_COMB (@lem6769664) (@lem6769661 K i k j')). Qed.
Lemma lem6769667 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6769668 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term304 A x s t) = (term305 A s x t).
Proof. exact (@lem6769667 A s x t). Qed.
Lemma lem6769669 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term426 A K f j' dom neut) = (term569 A K dom f j' neut).
Proof. exact (@lem6769668 A dom (f j') (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6769673 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6769674 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6769673 A P x). Qed.
Lemma lem6769675 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term504 A K f j' dom) = (term591 A K dom f j').
Proof. exact (@lem6769674 A dom (f j')). Qed.
Lemma lem6769676 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6769677 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term573 A K f j' dom) = (term592 A K dom f j').
Proof. exact (MK_COMB (@lem6769676) (@lem6769675 A K dom f j')). Qed.
Lemma lem6769679 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6769680 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term36 A x y s) = (term37 A y x s).
Proof. exact (@lem6769679 A y x s). Qed.
Lemma lem6769681 {A K : Type'} (neut : A) (f : K -> A) (j' : K) : (term570 A K f j' neut) = (term593 A K neut f j').
Proof. exact (@lem6769680 A neut (f j') (@EMPTY A)). Qed.
Lemma lem6769687 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6769688 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6769687 A x). Qed.
Lemma lem6769689 {A K : Type'} (f : K -> A) (j' : K) : (term594 A K f j') = False.
Proof. exact (@lem6769688 A (f j')). Qed.
Lemma lem6769690 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term512 A K f j' neut) = (term512 A K f j' neut).
Proof. exact (eq_refl (term512 A K f j' neut)). Qed.
Lemma lem6769691 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term593 A K neut f j') = (term527 A K f j' neut).
Proof. exact (MK_COMB (@lem6769690 A K f j' neut) (@lem6769689 A K f j')). Qed.
Lemma lem6769693 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6769694 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term527 A K f j' neut) = ((f j') = neut).
Proof. exact (@lem6769693 ((f j') = neut)). Qed.
Lemma lem6769697 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term593 A K neut f j') = ((f j') = neut).
Proof. exact (TRANS (@lem6769691 A K f j' neut) (@lem6769694 A K f j' neut)). Qed.
Lemma lem6769698 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term570 A K f j' neut) = ((f j') = neut).
Proof. exact (TRANS (@lem6769681 A K neut f j') (@lem6769697 A K f j' neut)). Qed.
Lemma lem6769699 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769700 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term571 A K f j' neut) = (term572 A K f j' neut).
Proof. exact (MK_COMB (@lem6769699) (@lem6769698 A K f j' neut)). Qed.
Lemma lem6769701 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term569 A K dom f j' neut) = (term595 A K dom f j' neut).
Proof. exact (MK_COMB (@lem6769677 A K dom f j') (@lem6769700 A K f j' neut)). Qed.
Lemma lem6769704 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term426 A K f j' dom neut) = (term595 A K dom f j' neut).
Proof. exact (TRANS (@lem6769669 A K dom f j' neut) (@lem6769701 A K dom f j' neut)). Qed.
Lemma lem6769705 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2347 A K i k f j' dom neut) = (term658 A K i k dom f j' neut).
Proof. exact (MK_COMB (@lem6769665 K i k j') (@lem6769704 A K dom f j' neut)). Qed.
Lemma lem6769708 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term447 K ltle j' j) = (term447 K ltle j' j).
Proof. exact (eq_refl (term447 K ltle j' j)). Qed.
Lemma lem6769709 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2362 A K ltle j i k f j' dom neut) = (term2376 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6769708 K ltle j' j) (@lem6769705 A K i k dom f j' neut)). Qed.
Lemma lem6769712 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6769713 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2363 A K ltle j i k f j' dom neut) = (term2377 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6769712) (@lem6769709 A K ltle j i k dom f j' neut)). Qed.
Lemma lem6769716 {K : Type'} (j' : K) (j : K) : (j' = j) = (j' = j).
Proof. exact (eq_refl (j' = j)). Qed.
Lemma lem6769717 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2364 A K ltle i k f dom neut j' j) = (term2378 A K ltle i k dom f neut j' j).
Proof. exact (MK_COMB (@lem6769713 A K ltle j i k dom f j' neut) (@lem6769716 K j' j)). Qed.
Lemma lem6769720 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2365 A K ltle i k f dom neut j) = (term2379 A K ltle i k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6769717 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6769721 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769722 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2366 A K ltle i k f dom neut j) = (term2380 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769721 K) (@lem6769720 A K ltle i k dom f neut j)). Qed.
Lemma lem6769727 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2367 A K ltle i k f dom neut j) = (term2381 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769641 A K dom f j neut) (@lem6769722 A K ltle i k dom f neut j)). Qed.
Lemma lem6769730 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2368 A K ltle i k f dom neut j) = (term2382 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769598 K k j) (@lem6769727 A K ltle i k dom f neut j)). Qed.
Lemma lem6769733 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6769734 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2371 A K ltle i k f dom neut j) = (term2383 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769733) (@lem6769730 A K ltle i k dom f neut j)). Qed.
Lemma lem6769735 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2384 A K ltle i k f dom neut j) = (term2385 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769590 A K j ltle i k dom f neut) (@lem6769734 A K ltle i k dom f neut j)). Qed.
Lemma lem6769738 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term2385 A K ltle i k dom f neut j) = (term2384 A K ltle i k f dom neut j).
Proof. exact (SYM (@lem6769735 A K ltle i k dom f neut j)). Qed.
Lemma lem6769740 (p : Prop) : p = (term49 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6769741 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2385 A K ltle i k dom f neut j) = (term2386 A K ltle i k dom f neut j).
Proof. exact (@lem6769740 (term2385 A K ltle i k dom f neut j)). Qed.
Lemma lem6769742 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2386 A K ltle i k dom f neut j) = (term2385 A K ltle i k dom f neut j).
Proof. exact (SYM (@lem6769741 A K ltle i k dom f neut j)). Qed.
Lemma lem6769743 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2387 A K ltle i k dom f neut j) : term2387 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6769746 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2386 A K ltle i k dom f neut j) : term2386 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6769747 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2388 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2386 A K ltle i k dom f neut j => @lem6769746 A K ltle i k dom f neut j h0). Qed.
Lemma lem6769748 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2388 A K ltle i k dom f neut j) : term2388 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6769749 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2386 A K ltle i k dom f neut j) : term2386 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6769750 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2386 A K ltle i k dom f neut j) (h2 : term2388 A K ltle i k dom f neut j) : term2386 A K ltle i k dom f neut j.
Proof. exact (@lem6769748 A K ltle i k dom f neut j h2 (@lem6769749 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6769751 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2386 A K ltle i k dom f neut j) : term2389 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2388 A K ltle i k dom f neut j => @lem6769750 A K ltle i k dom f neut j h1 h0). Qed.
Lemma lem6769752 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2388 A K ltle i k dom f neut j) : term2388 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6769753 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2386 A K ltle i k dom f neut j) (h2 : term2388 A K ltle i k dom f neut j) : term2386 A K ltle i k dom f neut j.
Proof. exact (@lem6769751 A K ltle i k dom f neut j h1 (@lem6769752 A K ltle i k dom f neut j h2)). Qed.
Lemma lem6769754 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2388 A K ltle i k dom f neut j) : term2388 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2386 A K ltle i k dom f neut j => @lem6769753 A K ltle i k dom f neut j h0 h1). Qed.
Lemma lem6769755 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2390 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2388 A K ltle i k dom f neut j => @lem6769754 A K ltle i k dom f neut j h0). Qed.
Lemma lem6769758 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2388 A K ltle i k dom f neut j.
Proof. exact (@lem6769755 A K ltle i k dom f neut j (@lem6769747 A K ltle i k dom f neut j)). Qed.
Lemma lem6769759 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2388 A K ltle i k dom f neut j.
Proof. exact (@lem6769758 A K ltle i k dom f neut j). Qed.
Lemma lem6769789 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6769790 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2386 A K ltle i k dom f neut j) = (term2391 A K ltle i k dom f neut j).
Proof. exact (@lem6769789 (term2387 A K ltle i k dom f neut j)). Qed.
Lemma lem6769792 (t : Prop) : (term56 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6769793 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2391 A K ltle i k dom f neut j) = (term2385 A K ltle i k dom f neut j).
Proof. exact (@lem6769792 (term2385 A K ltle i k dom f neut j)). Qed.
Lemma lem6769796 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2386 A K ltle i k dom f neut j) = (term2385 A K ltle i k dom f neut j).
Proof. exact (TRANS (@lem6769790 A K ltle i k dom f neut j) (@lem6769793 A K ltle i k dom f neut j)). Qed.
Lemma lem6769859 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2392 A K i k dom f neut j) = (term2393 A K i k dom f neut j).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6769796 A K ltle i k dom f neut j)). Qed.
Lemma lem6769860 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6769861 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2394 A K i k dom f neut j) = (term2395 A K i k dom f neut j).
Proof. exact (MK_COMB (@lem6769860 K) (@lem6769859 A K i k dom f neut j)). Qed.
Lemma lem6769866 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2396 A K k dom f neut j) = (term2397 A K k dom f neut j).
Proof. exact (fun_ext (fun i : K => @lem6769861 A K i k dom f neut j)). Qed.
Lemma lem6769867 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769868 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2398 A K k dom f neut j) = (term2399 A K k dom f neut j).
Proof. exact (MK_COMB (@lem6769867 K) (@lem6769866 A K k dom f neut j)). Qed.
Lemma lem6769873 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2400 A K dom f neut j) = (term2401 A K dom f neut j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6769868 A K k dom f neut j)). Qed.
Lemma lem6769874 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6769875 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2402 A K dom f neut j) = (term2403 A K dom f neut j).
Proof. exact (MK_COMB (@lem6769874 K) (@lem6769873 A K dom f neut j)). Qed.
Lemma lem6769880 {A K : Type'} (f : K -> A) (neut : A) (j : K) : (term2404 A K f neut j) = (term2405 A K f neut j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6769875 A K dom f neut j)). Qed.
Lemma lem6769881 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6769882 {A K : Type'} (f : K -> A) (neut : A) (j : K) : (term2406 A K f neut j) = (term2407 A K f neut j).
Proof. exact (MK_COMB (@lem6769881 A) (@lem6769880 A K f neut j)). Qed.
Lemma lem6769887 {A K : Type'} (neut : A) (j : K) : (term2408 A K neut j) = (term2409 A K neut j).
Proof. exact (fun_ext (fun f : K -> A => @lem6769882 A K f neut j)). Qed.
Lemma lem6769888 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6769889 {A K : Type'} (neut : A) (j : K) : (term2410 A K neut j) = (term2411 A K neut j).
Proof. exact (MK_COMB (@lem6769888 A K) (@lem6769887 A K neut j)). Qed.
Lemma lem6769894 {A K : Type'} (j : K) : (term2412 A K j) = (term2413 A K j).
Proof. exact (fun_ext (fun neut : A => @lem6769889 A K neut j)). Qed.
Lemma lem6769895 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6769896 {A K : Type'} (j : K) : (term2414 A K j) = (term2415 A K j).
Proof. exact (MK_COMB (@lem6769895 A) (@lem6769894 A K j)). Qed.
Lemma lem6769901 {A K : Type'} : (term2416 A K) = (term2417 A K).
Proof. exact (fun_ext (fun j : K => @lem6769896 A K j)). Qed.
Lemma lem6769902 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769909 {A K : Type'} : (term2418 A K) = (term2419 A K).
Proof. exact (MK_COMB (@lem6769902 K) (@lem6769901 A K)). Qed.
Lemma lem6769910 {A K : Type'} (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : _88511 = (term706 A K).
Proof. exact (h1). Qed.
Lemma lem6769911 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6769912 {A K : Type'} (k : K -> Prop) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k) = (term707 A K k).
Proof. exact (MK_COMB (@lem6769910 A K _88511 h1) (@lem6769911 K k)). Qed.
Lemma lem6769913 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6769914 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term709 A K _88511 k) = (term709 A K _88511 k).
Proof. exact (eq_refl (term709 A K _88511 k)). Qed.
Lemma lem6769915 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term707 A K k)) = ((_88511 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6769914 A K _88511 k) (@lem6769913 A K k)). Qed.
Lemma lem6769916 {A K : Type'} (k : K -> Prop) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k) = (term708 A K k).
Proof. exact (EQ_MP (@lem6769915 A K _88511 k) (@lem6769912 A K k _88511 h1)). Qed.
Lemma lem6769917 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6769918 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom) = (term710 A K k dom).
Proof. exact (MK_COMB (@lem6769916 A K k _88511 h1) (@lem6769917 A dom)). Qed.
Lemma lem6769919 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6769920 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _88511 k dom) = (term712 A K _88511 k dom).
Proof. exact (eq_refl (term712 A K _88511 k dom)). Qed.
Lemma lem6769921 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term710 A K k dom)) = ((_88511 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6769920 A K _88511 k dom) (@lem6769919 A K k dom)). Qed.
Lemma lem6769922 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom) = (term711 A K k dom).
Proof. exact (EQ_MP (@lem6769921 A K _88511 k dom) (@lem6769918 A K k dom _88511 h1)). Qed.
Lemma lem6769923 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6769924 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom f) = (term713 A K k dom f).
Proof. exact (MK_COMB (@lem6769922 A K k dom _88511 h1) (@lem6769923 A K f)). Qed.
Lemma lem6769925 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6769926 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _88511 k dom f) = (term715 A K _88511 k dom f).
Proof. exact (eq_refl (term715 A K _88511 k dom f)). Qed.
Lemma lem6769927 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term713 A K k dom f)) = ((_88511 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6769926 A K _88511 k dom f) (@lem6769925 A K k dom f)). Qed.
Lemma lem6769928 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom f) = (term714 A K k dom f).
Proof. exact (EQ_MP (@lem6769927 A K _88511 k dom f) (@lem6769924 A K k dom f _88511 h1)). Qed.
Lemma lem6769929 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6769930 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom f neut) = (term716 A K k dom f neut).
Proof. exact (MK_COMB (@lem6769928 A K k dom f _88511 h1) (@lem6769929 A neut)). Qed.
Lemma lem6769931 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6769932 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _88511 k dom f neut) = (term717 A K _88511 k dom f neut).
Proof. exact (eq_refl (term717 A K _88511 k dom f neut)). Qed.
Lemma lem6769933 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term716 A K k dom f neut)) = ((_88511 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6769932 A K _88511 k dom f neut) (@lem6769931 A K k dom f neut)). Qed.
Lemma lem6769934 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (_88511 k dom f neut) = (term631 A K k dom f neut).
Proof. exact (EQ_MP (@lem6769933 A K _88511 k dom f neut) (@lem6769930 A K k dom f neut _88511 h1)). Qed.
Lemma lem6769982 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2378 A K ltle i k dom f neut j' j) = (term2378 A K ltle i k dom f neut j' j).
Proof. exact (eq_refl (term2378 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6769983 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2379 A K ltle i k dom f neut j) = (term2379 A K ltle i k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6769982 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6769984 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6769985 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2380 A K ltle i k dom f neut j) = (term2380 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6769984 K) (@lem6769983 A K ltle i k dom f neut j)). Qed.
Lemma lem6770004 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1557 A K dom f j neut) = (term1557 A K dom f j neut).
Proof. exact (eq_refl (term1557 A K dom f j neut)). Qed.
Lemma lem6770005 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2381 A K ltle i k dom f neut j) = (term2381 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770004 A K dom f j neut) (@lem6769985 A K ltle i k dom f neut j)). Qed.
Lemma lem6770010 {K : Type'} (k : K -> Prop) (j : K) : (term333 K k j) = (term333 K k j).
Proof. exact (eq_refl (term333 K k j)). Qed.
Lemma lem6770011 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2382 A K ltle i k dom f neut j) = (term2382 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770010 K k j) (@lem6770005 A K ltle i k dom f neut j)). Qed.
Lemma lem6770012 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6770013 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2383 A K ltle i k dom f neut j) = (term2383 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770012) (@lem6770011 A K ltle i k dom f neut j)). Qed.
Lemma lem6770015 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term631 A K k dom f neut) = (_88511 k dom f neut).
Proof. exact (SYM (@lem6769934 A K k dom f neut _88511 h1)). Qed.
Lemma lem6770016 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term631 A K k dom f neut) = (_88511 k dom f neut).
Proof. exact (@lem6770015 A K k dom f neut _88511 h1). Qed.
Lemma lem6770017 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6770018 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term632 A K k dom f neut) = (term718 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770017 K) (@lem6770016 A K k dom f neut _88511 h1)). Qed.
Lemma lem6770019 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6770020 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term633 A K k dom f neut) = (term719 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770019 K) (@lem6770018 A K k dom f neut _88511 h1)). Qed.
Lemma lem6770047 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6770048 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6770047 K k ltle j i)). Qed.
Lemma lem6770049 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770050 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6770049 K) (@lem6770048 K k ltle i)). Qed.
Lemma lem6770051 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770052 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6770051) (@lem6770050 K k ltle i)). Qed.
Lemma lem6770053 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term634 A K ltle i k dom f neut) = (term720 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770052 K k ltle i) (@lem6770020 A K k dom f neut _88511 h1)). Qed.
Lemma lem6770092 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6770093 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6770092 A K ltle k dom f neut j i)). Qed.
Lemma lem6770094 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770095 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6770094 K) (@lem6770093 A K ltle k dom f neut i)). Qed.
Lemma lem6770096 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770097 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6770096) (@lem6770095 A K ltle k dom f neut i)). Qed.
Lemma lem6770098 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term635 A K ltle i k dom f neut) = (term721 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770097 A K ltle k dom f neut i) (@lem6770053 A K ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770105 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6770106 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term636 A K ltle i k dom f neut) = (term722 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770105 K k i) (@lem6770098 A K ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770113 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6770114 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term1272 A K ltle i k dom f neut) = (term1311 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770113 A K dom f i) (@lem6770106 A K ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770125 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6770126 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term1274 A K ltle i k dom f neut) = (term1312 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770125 A K f i neut) (@lem6770114 A K ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770135 {K : Type'} (j : K) (i : K) : (term1213 K j i) = (term1213 K j i).
Proof. exact (eq_refl (term1213 K j i)). Qed.
Lemma lem6770136 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2373 A K j ltle i k dom f neut) = (term2420 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770135 K j i) (@lem6770126 A K ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770137 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6770138 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2375 A K j ltle i k dom f neut) = (term2421 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770137) (@lem6770136 A K j ltle i k dom f neut _88511 h1)). Qed.
Lemma lem6770139 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2385 A K ltle i k dom f neut j) = (term2422 A K _88511 ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770138 A K j ltle i k dom f neut _88511 h1) (@lem6770013 A K ltle i k dom f neut j)). Qed.
Lemma lem6770140 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2393 A K i k dom f neut j) = (term2423 A K _88511 i k dom f neut j).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6770139 A K ltle i k dom f neut j _88511 h1)). Qed.
Lemma lem6770141 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6770142 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2395 A K i k dom f neut j) = (term2424 A K _88511 i k dom f neut j).
Proof. exact (MK_COMB (@lem6770141 K) (@lem6770140 A K i k dom f neut j _88511 h1)). Qed.
Lemma lem6770143 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2397 A K k dom f neut j) = (term2425 A K _88511 k dom f neut j).
Proof. exact (fun_ext (fun i : K => @lem6770142 A K i k dom f neut j _88511 h1)). Qed.
Lemma lem6770144 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770145 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2399 A K k dom f neut j) = (term2426 A K _88511 k dom f neut j).
Proof. exact (MK_COMB (@lem6770144 K) (@lem6770143 A K k dom f neut j _88511 h1)). Qed.
Lemma lem6770146 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2401 A K dom f neut j) = (term2427 A K _88511 dom f neut j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770145 A K k dom f neut j _88511 h1)). Qed.
Lemma lem6770147 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770148 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2403 A K dom f neut j) = (term2428 A K _88511 dom f neut j).
Proof. exact (MK_COMB (@lem6770147 K) (@lem6770146 A K dom f neut j _88511 h1)). Qed.
Lemma lem6770149 {A K : Type'} (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2405 A K f neut j) = (term2429 A K _88511 f neut j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770148 A K dom f neut j _88511 h1)). Qed.
Lemma lem6770150 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770151 {A K : Type'} (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2407 A K f neut j) = (term2430 A K _88511 f neut j).
Proof. exact (MK_COMB (@lem6770150 A) (@lem6770149 A K f neut j _88511 h1)). Qed.
Lemma lem6770152 {A K : Type'} (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2409 A K neut j) = (term2431 A K _88511 neut j).
Proof. exact (fun_ext (fun f : K -> A => @lem6770151 A K f neut j _88511 h1)). Qed.
Lemma lem6770153 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770154 {A K : Type'} (neut : A) (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2411 A K neut j) = (term2432 A K _88511 neut j).
Proof. exact (MK_COMB (@lem6770153 A K) (@lem6770152 A K neut j _88511 h1)). Qed.
Lemma lem6770155 {A K : Type'} (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2413 A K j) = (term2433 A K _88511 j).
Proof. exact (fun_ext (fun neut : A => @lem6770154 A K neut j _88511 h1)). Qed.
Lemma lem6770156 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770157 {A K : Type'} (j : K) (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2415 A K j) = (term2434 A K _88511 j).
Proof. exact (MK_COMB (@lem6770156 A) (@lem6770155 A K j _88511 h1)). Qed.
Lemma lem6770158 {A K : Type'} (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2417 A K) = (term2435 A K _88511).
Proof. exact (fun_ext (fun j : K => @lem6770157 A K j _88511 h1)). Qed.
Lemma lem6770159 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770160 {A K : Type'} (_88511 : type835 A K) (h1 : _88511 = (term706 A K)) : (term2419 A K) = (term2436 A K _88511).
Proof. exact (MK_COMB (@lem6770159 K) (@lem6770158 A K _88511 h1)). Qed.
Lemma lem6770161 {A K : Type'} (_88511 : type835 A K) : term2437 A K _88511.
Proof. exact (fun h0 : _88511 = (term706 A K) => @lem6770160 A K _88511 h0). Qed.
Lemma lem6770162 {A K : Type'} : term2438 A K.
Proof. exact (fun _88511 : type835 A K => @lem6770161 A K _88511). Qed.
Lemma lem6770164 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6770165 {A K : Type'} (P : Prop) (c : type835 A K) (Q : type212 A K) : term741 A K P c Q.
Proof. exact (@lem6770164 (type835 A K) P c Q). Qed.
Lemma lem6770166 {A K : Type'} : term2439 A K.
Proof. exact (@lem6770165 A K (term2419 A K) (term706 A K) (term2440 A K)). Qed.
Lemma lem6770167 {A K : Type'} (_88511 : type835 A K) : (term2441 A K _88511) = (term2436 A K _88511).
Proof. exact (eq_refl (term2441 A K _88511)). Qed.
Lemma lem6770168 {A K : Type'} : (term2442 A K) = (term2442 A K).
Proof. exact (eq_refl (term2442 A K)). Qed.
Lemma lem6770169 {A K : Type'} (_88511 : type835 A K) : ((term2419 A K) = (term2441 A K _88511)) = ((term2419 A K) = (term2436 A K _88511)).
Proof. exact (MK_COMB (@lem6770168 A K) (@lem6770167 A K _88511)). Qed.
Lemma lem6770170 {A K : Type'} (_88511 : type835 A K) : (term746 A K _88511) = (term746 A K _88511).
Proof. exact (eq_refl (term746 A K _88511)). Qed.
Lemma lem6770171 {A K : Type'} (_88511 : type835 A K) : (term2443 A K _88511) = (term2437 A K _88511).
Proof. exact (MK_COMB (@lem6770170 A K _88511) (@lem6770169 A K _88511)). Qed.
Lemma lem6770172 {A K : Type'} : (term2444 A K) = (term2445 A K).
Proof. exact (fun_ext (fun _88511 : type835 A K => @lem6770171 A K _88511)). Qed.
Lemma lem6770173 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6770174 {A K : Type'} : (term2446 A K) = (term2438 A K).
Proof. exact (MK_COMB (@lem6770173 A K) (@lem6770172 A K)). Qed.
Lemma lem6770175 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6770176 {A K : Type'} : (term2447 A K) = (term2448 A K).
Proof. exact (MK_COMB (@lem6770175) (@lem6770174 A K)). Qed.
Lemma lem6770177 {A K : Type'} (_88511 : type835 A K) : (term2441 A K _88511) = (term2436 A K _88511).
Proof. exact (eq_refl (term2441 A K _88511)). Qed.
Lemma lem6770178 {A K : Type'} (_88511 : type835 A K) : (term746 A K _88511) = (term746 A K _88511).
Proof. exact (eq_refl (term746 A K _88511)). Qed.
Lemma lem6770179 {A K : Type'} (_88511 : type835 A K) : (term2449 A K _88511) = (term2450 A K _88511).
Proof. exact (MK_COMB (@lem6770178 A K _88511) (@lem6770177 A K _88511)). Qed.
Lemma lem6770180 {A K : Type'} : (term2451 A K) = (term2452 A K).
Proof. exact (fun_ext (fun _88511 : type835 A K => @lem6770179 A K _88511)). Qed.
Lemma lem6770181 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6770182 {A K : Type'} : (term2453 A K) = (term2454 A K).
Proof. exact (MK_COMB (@lem6770181 A K) (@lem6770180 A K)). Qed.
Lemma lem6770183 {A K : Type'} : (term2442 A K) = (term2442 A K).
Proof. exact (eq_refl (term2442 A K)). Qed.
Lemma lem6770184 {A K : Type'} : ((term2419 A K) = (term2453 A K)) = ((term2419 A K) = (term2454 A K)).
Proof. exact (MK_COMB (@lem6770183 A K) (@lem6770182 A K)). Qed.
Lemma lem6770185 {A K : Type'} : (term2439 A K) = (term2455 A K).
Proof. exact (MK_COMB (@lem6770176 A K) (@lem6770184 A K)). Qed.
Lemma lem6770186 {A K : Type'} : term2455 A K.
Proof. exact (EQ_MP (@lem6770185 A K) (@lem6770166 A K)). Qed.
Lemma lem6770187 {A K : Type'} : (term2419 A K) = (term2454 A K).
Proof. exact (@lem6770186 A K (@lem6770162 A K)). Qed.
Lemma lem6770189 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6770190 {A K : Type'} (s : type835 A K) (t : type835 A K) : (s = (term762 A K t)) = (term763 A K s t).
Proof. exact (@lem6770189 (type650 A K) (K -> Prop) s t). Qed.
Lemma lem6770191 {A K : Type'} (_88511 : type835 A K) : (_88511 = (term764 A K)) = (term765 A K _88511).
Proof. exact (@lem6770190 A K _88511 (term706 A K)). Qed.
Lemma lem6770192 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6770193 {A K : Type'} : (term764 A K) = (term706 A K).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770192 A K k)). Qed.
Lemma lem6770194 {A K : Type'} (_88511 : type835 A K) : (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511) = (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511).
Proof. exact (eq_refl (@eq ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511)). Qed.
Lemma lem6770195 {A K : Type'} (_88511 : type835 A K) : (_88511 = (term764 A K)) = (_88511 = (term706 A K)).
Proof. exact (MK_COMB (@lem6770194 A K _88511) (@lem6770193 A K)). Qed.
Lemma lem6770196 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770197 {A K : Type'} (_88511 : type835 A K) : (term766 A K _88511) = (term767 A K _88511).
Proof. exact (MK_COMB (@lem6770196) (@lem6770195 A K _88511)). Qed.
Lemma lem6770198 {A K : Type'} (k : K -> Prop) : (term707 A K k) = (term708 A K k).
Proof. exact (eq_refl (term707 A K k)). Qed.
Lemma lem6770199 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term709 A K _88511 k) = (term709 A K _88511 k).
Proof. exact (eq_refl (term709 A K _88511 k)). Qed.
Lemma lem6770200 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term707 A K k)) = ((_88511 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6770199 A K _88511 k) (@lem6770198 A K k)). Qed.
Lemma lem6770201 {A K : Type'} (_88511 : type835 A K) : (term768 A K _88511) = (term769 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770200 A K _88511 k)). Qed.
Lemma lem6770202 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770203 {A K : Type'} (_88511 : type835 A K) : (term765 A K _88511) = (term770 A K _88511).
Proof. exact (MK_COMB (@lem6770202 K) (@lem6770201 A K _88511)). Qed.
Lemma lem6770204 {A K : Type'} (_88511 : type835 A K) : ((_88511 = (term764 A K)) = (term765 A K _88511)) = ((_88511 = (term706 A K)) = (term770 A K _88511)).
Proof. exact (MK_COMB (@lem6770197 A K _88511) (@lem6770203 A K _88511)). Qed.
Lemma lem6770205 {A K : Type'} (_88511 : type835 A K) : (_88511 = (term706 A K)) = (term770 A K _88511).
Proof. exact (EQ_MP (@lem6770204 A K _88511) (@lem6770191 A K _88511)). Qed.
Lemma lem6770207 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6770208 {A K : Type'} (s : type650 A K) (t : type650 A K) : (s = (term771 A K t)) = (term772 A K s t).
Proof. exact (@lem6770207 (type793 A K) (A -> Prop) s t). Qed.
Lemma lem6770209 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term773 A K k)) = (term774 A K _88511 k).
Proof. exact (@lem6770208 A K (_88511 k) (term708 A K k)). Qed.
Lemma lem6770210 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6770211 {A K : Type'} (k : K -> Prop) : (term773 A K k) = (term708 A K k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770210 A K k dom)). Qed.
Lemma lem6770212 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term709 A K _88511 k) = (term709 A K _88511 k).
Proof. exact (eq_refl (term709 A K _88511 k)). Qed.
Lemma lem6770213 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term773 A K k)) = ((_88511 k) = (term708 A K k)).
Proof. exact (MK_COMB (@lem6770212 A K _88511 k) (@lem6770211 A K k)). Qed.
Lemma lem6770214 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770215 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term775 A K _88511 k) = (term776 A K _88511 k).
Proof. exact (MK_COMB (@lem6770214) (@lem6770213 A K _88511 k)). Qed.
Lemma lem6770216 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term710 A K k dom) = (term711 A K k dom).
Proof. exact (eq_refl (term710 A K k dom)). Qed.
Lemma lem6770217 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _88511 k dom) = (term712 A K _88511 k dom).
Proof. exact (eq_refl (term712 A K _88511 k dom)). Qed.
Lemma lem6770218 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term710 A K k dom)) = ((_88511 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6770217 A K _88511 k dom) (@lem6770216 A K k dom)). Qed.
Lemma lem6770219 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term777 A K _88511 k) = (term778 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770218 A K _88511 k dom)). Qed.
Lemma lem6770220 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770221 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term774 A K _88511 k) = (term779 A K _88511 k).
Proof. exact (MK_COMB (@lem6770220 A) (@lem6770219 A K _88511 k)). Qed.
Lemma lem6770222 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (((_88511 k) = (term773 A K k)) = (term774 A K _88511 k)) = (((_88511 k) = (term708 A K k)) = (term779 A K _88511 k)).
Proof. exact (MK_COMB (@lem6770215 A K _88511 k) (@lem6770221 A K _88511 k)). Qed.
Lemma lem6770223 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term708 A K k)) = (term779 A K _88511 k).
Proof. exact (EQ_MP (@lem6770222 A K _88511 k) (@lem6770209 A K _88511 k)). Qed.
Lemma lem6770225 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6770226 {A K : Type'} (s : type793 A K) (t : type793 A K) : (s = (term780 A K t)) = (term781 A K s t).
Proof. exact (@lem6770225 (type1413 A K) (K -> A) s t). Qed.
Lemma lem6770227 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term782 A K k dom)) = (term783 A K _88511 k dom).
Proof. exact (@lem6770226 A K (_88511 k dom) (term711 A K k dom)). Qed.
Lemma lem6770228 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6770229 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) : (term782 A K k dom) = (term711 A K k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770228 A K k dom f)). Qed.
Lemma lem6770230 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term712 A K _88511 k dom) = (term712 A K _88511 k dom).
Proof. exact (eq_refl (term712 A K _88511 k dom)). Qed.
Lemma lem6770231 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term782 A K k dom)) = ((_88511 k dom) = (term711 A K k dom)).
Proof. exact (MK_COMB (@lem6770230 A K _88511 k dom) (@lem6770229 A K k dom)). Qed.
Lemma lem6770232 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770233 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term784 A K _88511 k dom) = (term785 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770232) (@lem6770231 A K _88511 k dom)). Qed.
Lemma lem6770234 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term713 A K k dom f) = (term714 A K k dom f).
Proof. exact (eq_refl (term713 A K k dom f)). Qed.
Lemma lem6770235 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _88511 k dom f) = (term715 A K _88511 k dom f).
Proof. exact (eq_refl (term715 A K _88511 k dom f)). Qed.
Lemma lem6770236 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term713 A K k dom f)) = ((_88511 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6770235 A K _88511 k dom f) (@lem6770234 A K k dom f)). Qed.
Lemma lem6770237 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term786 A K _88511 k dom) = (term787 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770236 A K _88511 k dom f)). Qed.
Lemma lem6770238 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770239 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term783 A K _88511 k dom) = (term788 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770238 A K) (@lem6770237 A K _88511 k dom)). Qed.
Lemma lem6770240 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (((_88511 k dom) = (term782 A K k dom)) = (term783 A K _88511 k dom)) = (((_88511 k dom) = (term711 A K k dom)) = (term788 A K _88511 k dom)).
Proof. exact (MK_COMB (@lem6770233 A K _88511 k dom) (@lem6770239 A K _88511 k dom)). Qed.
Lemma lem6770241 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term711 A K k dom)) = (term788 A K _88511 k dom).
Proof. exact (EQ_MP (@lem6770240 A K _88511 k dom) (@lem6770227 A K _88511 k dom)). Qed.
Lemma lem6770243 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6770244 {A K : Type'} (s : type1413 A K) (t : type1413 A K) : (s = (term789 A K t)) = (term790 A K s t).
Proof. exact (@lem6770243 (K -> Prop) A s t). Qed.
Lemma lem6770245 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term791 A K k dom f)) = (term792 A K _88511 k dom f).
Proof. exact (@lem6770244 A K (_88511 k dom f) (term714 A K k dom f)). Qed.
Lemma lem6770246 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6770247 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term791 A K k dom f) = (term714 A K k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770246 A K k dom f neut)). Qed.
Lemma lem6770248 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term715 A K _88511 k dom f) = (term715 A K _88511 k dom f).
Proof. exact (eq_refl (term715 A K _88511 k dom f)). Qed.
Lemma lem6770249 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term791 A K k dom f)) = ((_88511 k dom f) = (term714 A K k dom f)).
Proof. exact (MK_COMB (@lem6770248 A K _88511 k dom f) (@lem6770247 A K k dom f)). Qed.
Lemma lem6770250 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770251 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term793 A K _88511 k dom f) = (term794 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770250) (@lem6770249 A K _88511 k dom f)). Qed.
Lemma lem6770252 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term716 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (eq_refl (term716 A K k dom f neut)). Qed.
Lemma lem6770253 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _88511 k dom f neut) = (term717 A K _88511 k dom f neut).
Proof. exact (eq_refl (term717 A K _88511 k dom f neut)). Qed.
Lemma lem6770254 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term716 A K k dom f neut)) = ((_88511 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6770253 A K _88511 k dom f neut) (@lem6770252 A K k dom f neut)). Qed.
Lemma lem6770255 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term795 A K _88511 k dom f) = (term796 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770254 A K _88511 k dom f neut)). Qed.
Lemma lem6770256 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770257 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term792 A K _88511 k dom f) = (term797 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770256 A) (@lem6770255 A K _88511 k dom f)). Qed.
Lemma lem6770258 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (((_88511 k dom f) = (term791 A K k dom f)) = (term792 A K _88511 k dom f)) = (((_88511 k dom f) = (term714 A K k dom f)) = (term797 A K _88511 k dom f)).
Proof. exact (MK_COMB (@lem6770251 A K _88511 k dom f) (@lem6770257 A K _88511 k dom f)). Qed.
Lemma lem6770259 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term714 A K k dom f)) = (term797 A K _88511 k dom f).
Proof. exact (EQ_MP (@lem6770258 A K _88511 k dom f) (@lem6770245 A K _88511 k dom f)). Qed.
Lemma lem6770261 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6770262 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (s = (term89 K t)) = (term798 K s t).
Proof. exact (@lem6770261 Prop K s t). Qed.
Lemma lem6770263 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _88511 k dom f neut).
Proof. exact (@lem6770262 K (_88511 k dom f neut) (term631 A K k dom f neut)). Qed.
Lemma lem6770264 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770265 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term799 A K k dom f neut) = (term631 A K k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770264 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770266 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term717 A K _88511 k dom f neut) = (term717 A K _88511 k dom f neut).
Proof. exact (eq_refl (term717 A K _88511 k dom f neut)). Qed.
Lemma lem6770267 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term799 A K k dom f neut)) = ((_88511 k dom f neut) = (term631 A K k dom f neut)).
Proof. exact (MK_COMB (@lem6770266 A K _88511 k dom f neut) (@lem6770265 A K k dom f neut)). Qed.
Lemma lem6770268 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770269 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term802 A K _88511 k dom f neut) = (term803 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770268) (@lem6770267 A K _88511 k dom f neut)). Qed.
Lemma lem6770270 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term801 A K k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term801 A K k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770271 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _88511 k dom f neut GEN_PVAR_272) = (term804 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770272 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut GEN_PVAR_272) = (term801 A K k dom f neut GEN_PVAR_272)) = ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6770271 A K _88511 k dom f neut GEN_PVAR_272) (@lem6770270 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770273 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term805 A K _88511 k dom f neut) = (term806 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770272 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770274 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770275 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term800 A K _88511 k dom f neut) = (term807 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770274 K) (@lem6770273 A K _88511 k dom f neut)). Qed.
Lemma lem6770276 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (((_88511 k dom f neut) = (term799 A K k dom f neut)) = (term800 A K _88511 k dom f neut)) = (((_88511 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _88511 k dom f neut)).
Proof. exact (MK_COMB (@lem6770269 A K _88511 k dom f neut) (@lem6770275 A K _88511 k dom f neut)). Qed.
Lemma lem6770277 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _88511 k dom f neut).
Proof. exact (EQ_MP (@lem6770276 A K _88511 k dom f neut) (@lem6770263 A K _88511 k dom f neut)). Qed.
Lemma lem6770278 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (eq_refl ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut))). Qed.
Lemma lem6770279 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _88511 k dom f neut) = (term806 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770278 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770280 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770281 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _88511 k dom f neut) = (term807 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770280 K) (@lem6770279 A K _88511 k dom f neut)). Qed.
Lemma lem6770282 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut) = (term631 A K k dom f neut)) = (term807 A K _88511 k dom f neut).
Proof. exact (TRANS (@lem6770277 A K _88511 k dom f neut) (@lem6770281 A K _88511 k dom f neut)). Qed.
Lemma lem6770283 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term796 A K _88511 k dom f) = (term808 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770282 A K _88511 k dom f neut)). Qed.
Lemma lem6770284 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770285 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term797 A K _88511 k dom f) = (term809 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770284 A) (@lem6770283 A K _88511 k dom f)). Qed.
Lemma lem6770286 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((_88511 k dom f) = (term714 A K k dom f)) = (term809 A K _88511 k dom f).
Proof. exact (TRANS (@lem6770259 A K _88511 k dom f) (@lem6770285 A K _88511 k dom f)). Qed.
Lemma lem6770287 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term787 A K _88511 k dom) = (term810 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770286 A K _88511 k dom f)). Qed.
Lemma lem6770288 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770289 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term788 A K _88511 k dom) = (term811 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770288 A K) (@lem6770287 A K _88511 k dom)). Qed.
Lemma lem6770290 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((_88511 k dom) = (term711 A K k dom)) = (term811 A K _88511 k dom).
Proof. exact (TRANS (@lem6770241 A K _88511 k dom) (@lem6770289 A K _88511 k dom)). Qed.
Lemma lem6770291 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term778 A K _88511 k) = (term812 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770290 A K _88511 k dom)). Qed.
Lemma lem6770292 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770293 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term779 A K _88511 k) = (term813 A K _88511 k).
Proof. exact (MK_COMB (@lem6770292 A) (@lem6770291 A K _88511 k)). Qed.
Lemma lem6770294 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((_88511 k) = (term708 A K k)) = (term813 A K _88511 k).
Proof. exact (TRANS (@lem6770223 A K _88511 k) (@lem6770293 A K _88511 k)). Qed.
Lemma lem6770295 {A K : Type'} (_88511 : type835 A K) : (term769 A K _88511) = (term814 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770294 A K _88511 k)). Qed.
Lemma lem6770296 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770297 {A K : Type'} (_88511 : type835 A K) : (term770 A K _88511) = (term815 A K _88511).
Proof. exact (MK_COMB (@lem6770296 K) (@lem6770295 A K _88511)). Qed.
Lemma lem6770298 {A K : Type'} (_88511 : type835 A K) : (_88511 = (term706 A K)) = (term815 A K _88511).
Proof. exact (TRANS (@lem6770205 A K _88511) (@lem6770297 A K _88511)). Qed.
Lemma lem6770299 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6770300 {A K : Type'} (_88511 : type835 A K) : (term746 A K _88511) = (term816 A K _88511).
Proof. exact (MK_COMB (@lem6770299) (@lem6770298 A K _88511)). Qed.
Lemma lem6770301 {A K : Type'} (_88511 : type835 A K) : (term2436 A K _88511) = (term2436 A K _88511).
Proof. exact (eq_refl (term2436 A K _88511)). Qed.
Lemma lem6770302 {A K : Type'} (_88511 : type835 A K) : (term2450 A K _88511) = (term2456 A K _88511).
Proof. exact (MK_COMB (@lem6770300 A K _88511) (@lem6770301 A K _88511)). Qed.
Lemma lem6770303 {A K : Type'} : (term2452 A K) = (term2457 A K).
Proof. exact (fun_ext (fun _88511 : type835 A K => @lem6770302 A K _88511)). Qed.
Lemma lem6770304 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6770305 {A K : Type'} : (term2454 A K) = (term2458 A K).
Proof. exact (MK_COMB (@lem6770304 A K) (@lem6770303 A K)). Qed.
Lemma lem6770306 {A K : Type'} : (term2442 A K) = (term2442 A K).
Proof. exact (eq_refl (term2442 A K)). Qed.
Lemma lem6770307 {A K : Type'} : ((term2419 A K) = (term2454 A K)) = ((term2419 A K) = (term2458 A K)).
Proof. exact (MK_COMB (@lem6770306 A K) (@lem6770305 A K)). Qed.
Lemma lem6770310 {A K : Type'} : (term2419 A K) = (term2458 A K).
Proof. exact (EQ_MP (@lem6770307 A K) (@lem6770187 A K)). Qed.
Lemma lem6770311 {A K : Type'} : (term2418 A K) = (term2458 A K).
Proof. exact (TRANS (@lem6769909 A K) (@lem6770310 A K)). Qed.
Lemma lem6770334 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2378 A K ltle i k dom f neut j' j) = (term2378 A K ltle i k dom f neut j' j).
Proof. exact (eq_refl (term2378 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6770335 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2379 A K ltle i k dom f neut j) = (term2379 A K ltle i k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6770334 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6770336 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770337 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2380 A K ltle i k dom f neut j) = (term2380 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770336 K) (@lem6770335 A K ltle i k dom f neut j)). Qed.
Lemma lem6770346 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1557 A K dom f j neut) = (term1557 A K dom f j neut).
Proof. exact (eq_refl (term1557 A K dom f j neut)). Qed.
Lemma lem6770347 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2381 A K ltle i k dom f neut j) = (term2381 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770346 A K dom f j neut) (@lem6770337 A K ltle i k dom f neut j)). Qed.
Lemma lem6770350 {K : Type'} (k : K -> Prop) (j : K) : (term333 K k j) = (term333 K k j).
Proof. exact (eq_refl (term333 K k j)). Qed.
Lemma lem6770351 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2382 A K ltle i k dom f neut j) = (term2382 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770350 K k j) (@lem6770347 A K ltle i k dom f neut j)). Qed.
Lemma lem6770352 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6770353 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2383 A K ltle i k dom f neut j) = (term2383 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770352) (@lem6770351 A K ltle i k dom f neut j)). Qed.
Lemma lem6770354 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _88511 k dom f neut) = (term719 A K _88511 k dom f neut).
Proof. exact (eq_refl (term719 A K _88511 k dom f neut)). Qed.
Lemma lem6770367 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term616 K k ltle j i).
Proof. exact (eq_refl (term616 K k ltle j i)). Qed.
Lemma lem6770368 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term618 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6770367 K k ltle j i)). Qed.
Lemma lem6770369 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770370 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term619 K k ltle i).
Proof. exact (MK_COMB (@lem6770369 K) (@lem6770368 K k ltle i)). Qed.
Lemma lem6770371 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770372 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term621 K k ltle i).
Proof. exact (MK_COMB (@lem6770371) (@lem6770370 K k ltle i)). Qed.
Lemma lem6770373 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _88511 k dom f neut) = (term720 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770372 K k ltle i) (@lem6770354 A K _88511 k dom f neut)). Qed.
Lemma lem6770392 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term608 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term608 A K ltle k dom f neut j i)). Qed.
Lemma lem6770393 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term610 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6770392 A K ltle k dom f neut j i)). Qed.
Lemma lem6770394 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770395 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term611 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6770394 K) (@lem6770393 A K ltle k dom f neut i)). Qed.
Lemma lem6770396 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770397 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term613 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6770396) (@lem6770395 A K ltle k dom f neut i)). Qed.
Lemma lem6770398 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _88511 k dom f neut) = (term721 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770397 A K ltle k dom f neut i) (@lem6770373 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6770403 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6770404 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _88511 k dom f neut) = (term722 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770403 K k i) (@lem6770398 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6770407 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6770408 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _88511 k dom f neut) = (term1311 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770407 A K dom f i) (@lem6770404 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6770413 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6770414 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _88511 k dom f neut) = (term1312 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770413 A K f i neut) (@lem6770408 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6770419 {K : Type'} (j : K) (i : K) : (term1213 K j i) = (term1213 K j i).
Proof. exact (eq_refl (term1213 K j i)). Qed.
Lemma lem6770420 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2420 A K j ltle i _88511 k dom f neut) = (term2420 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770419 K j i) (@lem6770414 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6770421 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6770422 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2421 A K j ltle i _88511 k dom f neut) = (term2421 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770421) (@lem6770420 A K j ltle i _88511 k dom f neut)). Qed.
Lemma lem6770423 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2422 A K _88511 ltle i k dom f neut j) = (term2422 A K _88511 ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6770422 A K j ltle i _88511 k dom f neut) (@lem6770353 A K ltle i k dom f neut j)). Qed.
Lemma lem6770424 {A K : Type'} (_88511 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2423 A K _88511 i k dom f neut j) = (term2423 A K _88511 i k dom f neut j).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6770423 A K _88511 ltle i k dom f neut j)). Qed.
Lemma lem6770425 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6770426 {A K : Type'} (_88511 : type835 A K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2424 A K _88511 i k dom f neut j) = (term2424 A K _88511 i k dom f neut j).
Proof. exact (MK_COMB (@lem6770425 K) (@lem6770424 A K _88511 i k dom f neut j)). Qed.
Lemma lem6770427 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2425 A K _88511 k dom f neut j) = (term2425 A K _88511 k dom f neut j).
Proof. exact (fun_ext (fun i : K => @lem6770426 A K _88511 i k dom f neut j)). Qed.
Lemma lem6770428 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770429 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2426 A K _88511 k dom f neut j) = (term2426 A K _88511 k dom f neut j).
Proof. exact (MK_COMB (@lem6770428 K) (@lem6770427 A K _88511 k dom f neut j)). Qed.
Lemma lem6770430 {A K : Type'} (_88511 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2427 A K _88511 dom f neut j) = (term2427 A K _88511 dom f neut j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770429 A K _88511 k dom f neut j)). Qed.
Lemma lem6770431 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770432 {A K : Type'} (_88511 : type835 A K) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2428 A K _88511 dom f neut j) = (term2428 A K _88511 dom f neut j).
Proof. exact (MK_COMB (@lem6770431 K) (@lem6770430 A K _88511 dom f neut j)). Qed.
Lemma lem6770433 {A K : Type'} (_88511 : type835 A K) (f : K -> A) (neut : A) (j : K) : (term2429 A K _88511 f neut j) = (term2429 A K _88511 f neut j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770432 A K _88511 dom f neut j)). Qed.
Lemma lem6770434 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770435 {A K : Type'} (_88511 : type835 A K) (f : K -> A) (neut : A) (j : K) : (term2430 A K _88511 f neut j) = (term2430 A K _88511 f neut j).
Proof. exact (MK_COMB (@lem6770434 A) (@lem6770433 A K _88511 f neut j)). Qed.
Lemma lem6770436 {A K : Type'} (_88511 : type835 A K) (neut : A) (j : K) : (term2431 A K _88511 neut j) = (term2431 A K _88511 neut j).
Proof. exact (fun_ext (fun f : K -> A => @lem6770435 A K _88511 f neut j)). Qed.
Lemma lem6770437 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770438 {A K : Type'} (_88511 : type835 A K) (neut : A) (j : K) : (term2432 A K _88511 neut j) = (term2432 A K _88511 neut j).
Proof. exact (MK_COMB (@lem6770437 A K) (@lem6770436 A K _88511 neut j)). Qed.
Lemma lem6770439 {A K : Type'} (_88511 : type835 A K) (j : K) : (term2433 A K _88511 j) = (term2433 A K _88511 j).
Proof. exact (fun_ext (fun neut : A => @lem6770438 A K _88511 neut j)). Qed.
Lemma lem6770440 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770441 {A K : Type'} (_88511 : type835 A K) (j : K) : (term2434 A K _88511 j) = (term2434 A K _88511 j).
Proof. exact (MK_COMB (@lem6770440 A) (@lem6770439 A K _88511 j)). Qed.
Lemma lem6770442 {A K : Type'} (_88511 : type835 A K) : (term2435 A K _88511) = (term2435 A K _88511).
Proof. exact (fun_ext (fun j : K => @lem6770441 A K _88511 j)). Qed.
Lemma lem6770443 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770444 {A K : Type'} (_88511 : type835 A K) : (term2436 A K _88511) = (term2436 A K _88511).
Proof. exact (MK_COMB (@lem6770443 K) (@lem6770442 A K _88511)). Qed.
Lemma lem6770445 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770446 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6770445 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770447 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6770448 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770447 K) (@lem6770446 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770451 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term804 A K _88511 k dom f neut GEN_PVAR_272) = (term804 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term804 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770452 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6770451 A K _88511 k dom f neut GEN_PVAR_272) (@lem6770448 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770453 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _88511 k dom f neut) = (term806 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770452 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770454 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770455 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _88511 k dom f neut) = (term807 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770454 K) (@lem6770453 A K _88511 k dom f neut)). Qed.
Lemma lem6770456 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _88511 k dom f) = (term808 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770455 A K _88511 k dom f neut)). Qed.
Lemma lem6770457 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770458 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _88511 k dom f) = (term809 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770457 A) (@lem6770456 A K _88511 k dom f)). Qed.
Lemma lem6770459 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _88511 k dom) = (term810 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770458 A K _88511 k dom f)). Qed.
Lemma lem6770460 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770461 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _88511 k dom) = (term811 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770460 A K) (@lem6770459 A K _88511 k dom)). Qed.
Lemma lem6770462 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term812 A K _88511 k) = (term812 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770461 A K _88511 k dom)). Qed.
Lemma lem6770463 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770464 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term813 A K _88511 k) = (term813 A K _88511 k).
Proof. exact (MK_COMB (@lem6770463 A) (@lem6770462 A K _88511 k)). Qed.
Lemma lem6770465 {A K : Type'} (_88511 : type835 A K) : (term814 A K _88511) = (term814 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770464 A K _88511 k)). Qed.
Lemma lem6770466 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770467 {A K : Type'} (_88511 : type835 A K) : (term815 A K _88511) = (term815 A K _88511).
Proof. exact (MK_COMB (@lem6770466 K) (@lem6770465 A K _88511)). Qed.
Lemma lem6770468 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6770469 {A K : Type'} (_88511 : type835 A K) : (term816 A K _88511) = (term816 A K _88511).
Proof. exact (MK_COMB (@lem6770468) (@lem6770467 A K _88511)). Qed.
Lemma lem6770470 {A K : Type'} (_88511 : type835 A K) : (term2456 A K _88511) = (term2456 A K _88511).
Proof. exact (MK_COMB (@lem6770469 A K _88511) (@lem6770444 A K _88511)). Qed.
Lemma lem6770471 {A K : Type'} : (term2457 A K) = (term2457 A K).
Proof. exact (fun_ext (fun _88511 : type835 A K => @lem6770470 A K _88511)). Qed.
Lemma lem6770472 {A K : Type'} : (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)) = (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop))). Qed.
Lemma lem6770473 {A K : Type'} : (term2458 A K) = (term2458 A K).
Proof. exact (MK_COMB (@lem6770472 A K) (@lem6770471 A K)). Qed.
Lemma lem6770628 {A K : Type'} : (term2418 A K) = (term2458 A K).
Proof. exact (TRANS (@lem6770311 A K) (@lem6770473 A K)). Qed.
Lemma lem6770629 {A K : Type'} : (term2458 A K) = (term2418 A K).
Proof. exact (SYM (@lem6770628 A K)). Qed.
Lemma lem6770630 {A K : Type'} (_88511 : type835 A K) (h1 : term815 A K _88511) : term815 A K _88511.
Proof. exact (h1). Qed.
Lemma lem6770631 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2420 A K j ltle i _88511 k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6770632 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2382 A K ltle i k dom f neut j.
Proof. exact (h1). Qed.
Lemma lem6770636 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term625 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term625 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770637 {K : Type'} (P : K -> Prop) : (term822 K P) = (term103 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6770638 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term824 A K GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6770637 K (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770639 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770640 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6770642 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term826 A K GEN_PVAR_272 k dom f neut j) = (term827 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6770640) (@lem6770639 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770643 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term828 A K GEN_PVAR_272 k dom f neut) = (term829 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6770642 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770644 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770645 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term824 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770644 K) (@lem6770643 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770646 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term823 A K GEN_PVAR_272 k dom f neut) = (term830 A K GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6770638 A K GEN_PVAR_272 k dom f neut) (@lem6770645 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770647 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term627 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6770636 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6770648 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6770649 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term629 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770648 K) (@lem6770647 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770651 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _88511 k dom f neut GEN_PVAR_272) = (term831 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770652 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _88511 GEN_PVAR_272 k dom f neut) = (term832 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770651 A K _88511 k dom f neut GEN_PVAR_272) (@lem6770649 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770654 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term833 A K _88511 k dom f neut GEN_PVAR_272) = (term833 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term833 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770655 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term834 A K _88511 GEN_PVAR_272 k dom f neut) = (term835 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770654 A K _88511 k dom f neut GEN_PVAR_272) (@lem6770646 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770656 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770657 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term836 A K _88511 GEN_PVAR_272 k dom f neut) = (term837 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770656) (@lem6770655 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770658 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term838 A K _88511 GEN_PVAR_272 k dom f neut) = (term839 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770657 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6770652 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770659 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term838 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem17784 (_88511 k dom f neut GEN_PVAR_272) (term629 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770660 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((_88511 k dom f neut GEN_PVAR_272) = (term629 A K GEN_PVAR_272 k dom f neut)) = (term839 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (TRANS (@lem6770659 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6770658 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770661 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term806 A K _88511 k dom f neut) = (term840 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770660 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770662 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770663 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term807 A K _88511 k dom f neut) = (term841 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770662 K) (@lem6770661 A K _88511 k dom f neut)). Qed.
Lemma lem6770664 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term808 A K _88511 k dom f) = (term842 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770663 A K _88511 k dom f neut)). Qed.
Lemma lem6770665 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770666 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term809 A K _88511 k dom f) = (term843 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770665 A) (@lem6770664 A K _88511 k dom f)). Qed.
Lemma lem6770667 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term810 A K _88511 k dom) = (term844 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770666 A K _88511 k dom f)). Qed.
Lemma lem6770668 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770669 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term811 A K _88511 k dom) = (term845 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770668 A K) (@lem6770667 A K _88511 k dom)). Qed.
Lemma lem6770670 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term812 A K _88511 k) = (term846 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6770669 A K _88511 k dom)). Qed.
Lemma lem6770671 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6770672 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term813 A K _88511 k) = (term847 A K _88511 k).
Proof. exact (MK_COMB (@lem6770671 A) (@lem6770670 A K _88511 k)). Qed.
Lemma lem6770673 {A K : Type'} (_88511 : type835 A K) : (term814 A K _88511) = (term848 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6770672 A K _88511 k)). Qed.
Lemma lem6770674 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6770675 {A K : Type'} (_88511 : type835 A K) : (term815 A K _88511) = (term849 A K _88511).
Proof. exact (MK_COMB (@lem6770674 K) (@lem6770673 A K _88511)). Qed.
Lemma lem6770693 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6770694 {K : Type'} (P : K -> Prop) (Q : K -> Prop) : (term850 K P Q) = (term851 K P Q).
Proof. exact (@lem6770693 K P Q). Qed.
Lemma lem6770695 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _88511 k dom f neut) = (term853 A K _88511 k dom f neut).
Proof. exact (@lem6770694 K (term854 A K _88511 k dom f neut) (term855 A K _88511 k dom f neut)). Qed.
Lemma lem6770696 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _88511 k dom f neut GEN_PVAR_272) = (term835 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770697 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770698 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term857 A K _88511 k dom f neut GEN_PVAR_272) = (term837 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770697) (@lem6770696 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770699 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _88511 k dom f neut GEN_PVAR_272) = (term832 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770700 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term859 A K _88511 k dom f neut GEN_PVAR_272) = (term839 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6770698 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6770699 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770701 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term860 A K _88511 k dom f neut) = (term840 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770700 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770702 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770703 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term852 A K _88511 k dom f neut) = (term841 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770702 K) (@lem6770701 A K _88511 k dom f neut)). Qed.
Lemma lem6770704 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770705 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term861 A K _88511 k dom f neut) = (term862 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770704) (@lem6770703 A K _88511 k dom f neut)). Qed.
Lemma lem6770706 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term856 A K _88511 k dom f neut GEN_PVAR_272) = (term835 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term856 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770707 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term863 A K _88511 k dom f neut) = (term854 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770706 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770708 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770709 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term864 A K _88511 k dom f neut) = (term865 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770708 K) (@lem6770707 A K _88511 k dom f neut)). Qed.
Lemma lem6770710 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770711 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term866 A K _88511 k dom f neut) = (term867 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770710) (@lem6770709 A K _88511 k dom f neut)). Qed.
Lemma lem6770712 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term858 A K _88511 k dom f neut GEN_PVAR_272) = (term832 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term858 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6770713 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term868 A K _88511 k dom f neut) = (term855 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6770712 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6770714 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6770715 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term869 A K _88511 k dom f neut) = (term870 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770714 K) (@lem6770713 A K _88511 k dom f neut)). Qed.
Lemma lem6770716 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term853 A K _88511 k dom f neut) = (term871 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770711 A K _88511 k dom f neut) (@lem6770715 A K _88511 k dom f neut)). Qed.
Lemma lem6770717 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term852 A K _88511 k dom f neut) = (term853 A K _88511 k dom f neut)) = ((term841 A K _88511 k dom f neut) = (term871 A K _88511 k dom f neut)).
Proof. exact (MK_COMB (@lem6770705 A K _88511 k dom f neut) (@lem6770716 A K _88511 k dom f neut)). Qed.
Lemma lem6770718 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term841 A K _88511 k dom f neut) = (term871 A K _88511 k dom f neut).
Proof. exact (EQ_MP (@lem6770717 A K _88511 k dom f neut) (@lem6770695 A K _88511 k dom f neut)). Qed.
Lemma lem6770823 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term842 A K _88511 k dom f) = (term872 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770718 A K _88511 k dom f neut)). Qed.
Lemma lem6770824 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770825 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _88511 k dom f) = (term873 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770824 A) (@lem6770823 A K _88511 k dom f)). Qed.
Lemma lem6770827 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6770828 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (@lem6770827 A P Q). Qed.
Lemma lem6770829 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _88511 k dom f) = (term875 A K _88511 k dom f).
Proof. exact (@lem6770828 A (term876 A K _88511 k dom f) (term877 A K _88511 k dom f)). Qed.
Lemma lem6770830 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _88511 k dom f neut) = (term865 A K _88511 k dom f neut).
Proof. exact (eq_refl (term878 A K _88511 k dom f neut)). Qed.
Lemma lem6770831 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770832 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term879 A K _88511 k dom f neut) = (term867 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770831) (@lem6770830 A K _88511 k dom f neut)). Qed.
Lemma lem6770833 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _88511 k dom f neut) = (term870 A K _88511 k dom f neut).
Proof. exact (eq_refl (term880 A K _88511 k dom f neut)). Qed.
Lemma lem6770834 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term881 A K _88511 k dom f neut) = (term871 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6770832 A K _88511 k dom f neut) (@lem6770833 A K _88511 k dom f neut)). Qed.
Lemma lem6770835 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term882 A K _88511 k dom f) = (term872 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770834 A K _88511 k dom f neut)). Qed.
Lemma lem6770836 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770837 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term874 A K _88511 k dom f) = (term873 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770836 A) (@lem6770835 A K _88511 k dom f)). Qed.
Lemma lem6770838 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770839 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term883 A K _88511 k dom f) = (term884 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770838) (@lem6770837 A K _88511 k dom f)). Qed.
Lemma lem6770840 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term878 A K _88511 k dom f neut) = (term865 A K _88511 k dom f neut).
Proof. exact (eq_refl (term878 A K _88511 k dom f neut)). Qed.
Lemma lem6770841 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term885 A K _88511 k dom f) = (term876 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770840 A K _88511 k dom f neut)). Qed.
Lemma lem6770842 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770843 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term886 A K _88511 k dom f) = (term887 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770842 A) (@lem6770841 A K _88511 k dom f)). Qed.
Lemma lem6770844 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770845 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term888 A K _88511 k dom f) = (term889 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770844) (@lem6770843 A K _88511 k dom f)). Qed.
Lemma lem6770846 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term880 A K _88511 k dom f neut) = (term870 A K _88511 k dom f neut).
Proof. exact (eq_refl (term880 A K _88511 k dom f neut)). Qed.
Lemma lem6770847 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term890 A K _88511 k dom f) = (term877 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6770846 A K _88511 k dom f neut)). Qed.
Lemma lem6770848 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6770849 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term891 A K _88511 k dom f) = (term892 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770848 A) (@lem6770847 A K _88511 k dom f)). Qed.
Lemma lem6770850 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term875 A K _88511 k dom f) = (term893 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770845 A K _88511 k dom f) (@lem6770849 A K _88511 k dom f)). Qed.
Lemma lem6770851 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term874 A K _88511 k dom f) = (term875 A K _88511 k dom f)) = ((term873 A K _88511 k dom f) = (term893 A K _88511 k dom f)).
Proof. exact (MK_COMB (@lem6770839 A K _88511 k dom f) (@lem6770850 A K _88511 k dom f)). Qed.
Lemma lem6770852 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term873 A K _88511 k dom f) = (term893 A K _88511 k dom f).
Proof. exact (EQ_MP (@lem6770851 A K _88511 k dom f) (@lem6770829 A K _88511 k dom f)). Qed.
Lemma lem6770965 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term843 A K _88511 k dom f) = (term893 A K _88511 k dom f).
Proof. exact (TRANS (@lem6770825 A K _88511 k dom f) (@lem6770852 A K _88511 k dom f)). Qed.
Lemma lem6770966 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term844 A K _88511 k dom) = (term894 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770965 A K _88511 k dom f)). Qed.
Lemma lem6770967 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770968 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _88511 k dom) = (term895 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770967 A K) (@lem6770966 A K _88511 k dom)). Qed.
Lemma lem6770970 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6770971 {A K : Type'} (P : type805 A K) (Q : type805 A K) : (term896 A K P Q) = (term897 A K P Q).
Proof. exact (@lem6770970 (K -> A) P Q). Qed.
Lemma lem6770972 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _88511 k dom) = (term899 A K _88511 k dom).
Proof. exact (@lem6770971 A K (term900 A K _88511 k dom) (term901 A K _88511 k dom)). Qed.
Lemma lem6770973 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _88511 k dom f) = (term887 A K _88511 k dom f).
Proof. exact (eq_refl (term902 A K _88511 k dom f)). Qed.
Lemma lem6770974 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770975 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term903 A K _88511 k dom f) = (term889 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770974) (@lem6770973 A K _88511 k dom f)). Qed.
Lemma lem6770976 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _88511 k dom f) = (term892 A K _88511 k dom f).
Proof. exact (eq_refl (term904 A K _88511 k dom f)). Qed.
Lemma lem6770977 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term905 A K _88511 k dom f) = (term893 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6770975 A K _88511 k dom f) (@lem6770976 A K _88511 k dom f)). Qed.
Lemma lem6770978 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term906 A K _88511 k dom) = (term894 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770977 A K _88511 k dom f)). Qed.
Lemma lem6770979 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770980 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term898 A K _88511 k dom) = (term895 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770979 A K) (@lem6770978 A K _88511 k dom)). Qed.
Lemma lem6770981 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6770982 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term907 A K _88511 k dom) = (term908 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770981) (@lem6770980 A K _88511 k dom)). Qed.
Lemma lem6770983 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term902 A K _88511 k dom f) = (term887 A K _88511 k dom f).
Proof. exact (eq_refl (term902 A K _88511 k dom f)). Qed.
Lemma lem6770984 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term909 A K _88511 k dom) = (term900 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770983 A K _88511 k dom f)). Qed.
Lemma lem6770985 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770986 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term910 A K _88511 k dom) = (term911 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770985 A K) (@lem6770984 A K _88511 k dom)). Qed.
Lemma lem6770987 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6770988 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term912 A K _88511 k dom) = (term913 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770987) (@lem6770986 A K _88511 k dom)). Qed.
Lemma lem6770989 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term904 A K _88511 k dom f) = (term892 A K _88511 k dom f).
Proof. exact (eq_refl (term904 A K _88511 k dom f)). Qed.
Lemma lem6770990 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term914 A K _88511 k dom) = (term901 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6770989 A K _88511 k dom f)). Qed.
Lemma lem6770991 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6770992 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term915 A K _88511 k dom) = (term916 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770991 A K) (@lem6770990 A K _88511 k dom)). Qed.
Lemma lem6770993 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term899 A K _88511 k dom) = (term917 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6770988 A K _88511 k dom) (@lem6770992 A K _88511 k dom)). Qed.
Lemma lem6770994 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term898 A K _88511 k dom) = (term899 A K _88511 k dom)) = ((term895 A K _88511 k dom) = (term917 A K _88511 k dom)).
Proof. exact (MK_COMB (@lem6770982 A K _88511 k dom) (@lem6770993 A K _88511 k dom)). Qed.
Lemma lem6770995 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term895 A K _88511 k dom) = (term917 A K _88511 k dom).
Proof. exact (EQ_MP (@lem6770994 A K _88511 k dom) (@lem6770972 A K _88511 k dom)). Qed.
Lemma lem6771116 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term845 A K _88511 k dom) = (term917 A K _88511 k dom).
Proof. exact (TRANS (@lem6770968 A K _88511 k dom) (@lem6770995 A K _88511 k dom)). Qed.
Lemma lem6771117 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term846 A K _88511 k) = (term918 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771116 A K _88511 k dom)). Qed.
Lemma lem6771118 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771119 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term847 A K _88511 k) = (term919 A K _88511 k).
Proof. exact (MK_COMB (@lem6771118 A) (@lem6771117 A K _88511 k)). Qed.
Lemma lem6771121 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6771122 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem6771121 (A -> Prop) P Q). Qed.
Lemma lem6771123 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term922 A K _88511 k) = (term923 A K _88511 k).
Proof. exact (@lem6771122 A (term924 A K _88511 k) (term925 A K _88511 k)). Qed.
Lemma lem6771124 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _88511 k dom) = (term911 A K _88511 k dom).
Proof. exact (eq_refl (term926 A K _88511 k dom)). Qed.
Lemma lem6771125 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771126 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term927 A K _88511 k dom) = (term913 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771125) (@lem6771124 A K _88511 k dom)). Qed.
Lemma lem6771127 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _88511 k dom) = (term916 A K _88511 k dom).
Proof. exact (eq_refl (term928 A K _88511 k dom)). Qed.
Lemma lem6771128 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term929 A K _88511 k dom) = (term917 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771126 A K _88511 k dom) (@lem6771127 A K _88511 k dom)). Qed.
Lemma lem6771129 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term930 A K _88511 k) = (term918 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771128 A K _88511 k dom)). Qed.
Lemma lem6771130 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771131 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term922 A K _88511 k) = (term919 A K _88511 k).
Proof. exact (MK_COMB (@lem6771130 A) (@lem6771129 A K _88511 k)). Qed.
Lemma lem6771132 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771133 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term931 A K _88511 k) = (term932 A K _88511 k).
Proof. exact (MK_COMB (@lem6771132) (@lem6771131 A K _88511 k)). Qed.
Lemma lem6771134 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term926 A K _88511 k dom) = (term911 A K _88511 k dom).
Proof. exact (eq_refl (term926 A K _88511 k dom)). Qed.
Lemma lem6771135 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term933 A K _88511 k) = (term924 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771134 A K _88511 k dom)). Qed.
Lemma lem6771136 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771137 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term934 A K _88511 k) = (term935 A K _88511 k).
Proof. exact (MK_COMB (@lem6771136 A) (@lem6771135 A K _88511 k)). Qed.
Lemma lem6771138 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771139 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term936 A K _88511 k) = (term937 A K _88511 k).
Proof. exact (MK_COMB (@lem6771138) (@lem6771137 A K _88511 k)). Qed.
Lemma lem6771140 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term928 A K _88511 k dom) = (term916 A K _88511 k dom).
Proof. exact (eq_refl (term928 A K _88511 k dom)). Qed.
Lemma lem6771141 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term938 A K _88511 k) = (term925 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771140 A K _88511 k dom)). Qed.
Lemma lem6771142 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771143 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term939 A K _88511 k) = (term940 A K _88511 k).
Proof. exact (MK_COMB (@lem6771142 A) (@lem6771141 A K _88511 k)). Qed.
Lemma lem6771144 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term923 A K _88511 k) = (term941 A K _88511 k).
Proof. exact (MK_COMB (@lem6771139 A K _88511 k) (@lem6771143 A K _88511 k)). Qed.
Lemma lem6771145 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((term922 A K _88511 k) = (term923 A K _88511 k)) = ((term919 A K _88511 k) = (term941 A K _88511 k)).
Proof. exact (MK_COMB (@lem6771133 A K _88511 k) (@lem6771144 A K _88511 k)). Qed.
Lemma lem6771146 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term919 A K _88511 k) = (term941 A K _88511 k).
Proof. exact (EQ_MP (@lem6771145 A K _88511 k) (@lem6771123 A K _88511 k)). Qed.
Lemma lem6771275 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term847 A K _88511 k) = (term941 A K _88511 k).
Proof. exact (TRANS (@lem6771119 A K _88511 k) (@lem6771146 A K _88511 k)). Qed.
Lemma lem6771276 {A K : Type'} (_88511 : type835 A K) : (term848 A K _88511) = (term942 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771275 A K _88511 k)). Qed.
Lemma lem6771277 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771278 {A K : Type'} (_88511 : type835 A K) : (term849 A K _88511) = (term943 A K _88511).
Proof. exact (MK_COMB (@lem6771277 K) (@lem6771276 A K _88511)). Qed.
Lemma lem6771280 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term850 A P Q) = (term851 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6771281 {K : Type'} (P : type686 K) (Q : type686 K) : (term920 K P Q) = (term921 K P Q).
Proof. exact (@lem6771280 (K -> Prop) P Q). Qed.
Lemma lem6771282 {A K : Type'} (_88511 : type835 A K) : (term944 A K _88511) = (term945 A K _88511).
Proof. exact (@lem6771281 K (term946 A K _88511) (term947 A K _88511)). Qed.
Lemma lem6771283 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term948 A K _88511 k) = (term935 A K _88511 k).
Proof. exact (eq_refl (term948 A K _88511 k)). Qed.
Lemma lem6771284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771285 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term949 A K _88511 k) = (term937 A K _88511 k).
Proof. exact (MK_COMB (@lem6771284) (@lem6771283 A K _88511 k)). Qed.
Lemma lem6771286 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term950 A K _88511 k) = (term940 A K _88511 k).
Proof. exact (eq_refl (term950 A K _88511 k)). Qed.
Lemma lem6771287 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term951 A K _88511 k) = (term941 A K _88511 k).
Proof. exact (MK_COMB (@lem6771285 A K _88511 k) (@lem6771286 A K _88511 k)). Qed.
Lemma lem6771288 {A K : Type'} (_88511 : type835 A K) : (term952 A K _88511) = (term942 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771287 A K _88511 k)). Qed.
Lemma lem6771289 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771290 {A K : Type'} (_88511 : type835 A K) : (term944 A K _88511) = (term943 A K _88511).
Proof. exact (MK_COMB (@lem6771289 K) (@lem6771288 A K _88511)). Qed.
Lemma lem6771291 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771292 {A K : Type'} (_88511 : type835 A K) : (term953 A K _88511) = (term954 A K _88511).
Proof. exact (MK_COMB (@lem6771291) (@lem6771290 A K _88511)). Qed.
Lemma lem6771293 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term948 A K _88511 k) = (term935 A K _88511 k).
Proof. exact (eq_refl (term948 A K _88511 k)). Qed.
Lemma lem6771294 {A K : Type'} (_88511 : type835 A K) : (term955 A K _88511) = (term946 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771293 A K _88511 k)). Qed.
Lemma lem6771295 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771296 {A K : Type'} (_88511 : type835 A K) : (term956 A K _88511) = (term957 A K _88511).
Proof. exact (MK_COMB (@lem6771295 K) (@lem6771294 A K _88511)). Qed.
Lemma lem6771297 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771298 {A K : Type'} (_88511 : type835 A K) : (term958 A K _88511) = (term959 A K _88511).
Proof. exact (MK_COMB (@lem6771297) (@lem6771296 A K _88511)). Qed.
Lemma lem6771299 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term950 A K _88511 k) = (term940 A K _88511 k).
Proof. exact (eq_refl (term950 A K _88511 k)). Qed.
Lemma lem6771300 {A K : Type'} (_88511 : type835 A K) : (term960 A K _88511) = (term947 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771299 A K _88511 k)). Qed.
Lemma lem6771301 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771302 {A K : Type'} (_88511 : type835 A K) : (term961 A K _88511) = (term962 A K _88511).
Proof. exact (MK_COMB (@lem6771301 K) (@lem6771300 A K _88511)). Qed.
Lemma lem6771303 {A K : Type'} (_88511 : type835 A K) : (term945 A K _88511) = (term963 A K _88511).
Proof. exact (MK_COMB (@lem6771298 A K _88511) (@lem6771302 A K _88511)). Qed.
Lemma lem6771304 {A K : Type'} (_88511 : type835 A K) : ((term944 A K _88511) = (term945 A K _88511)) = ((term943 A K _88511) = (term963 A K _88511)).
Proof. exact (MK_COMB (@lem6771292 A K _88511) (@lem6771303 A K _88511)). Qed.
Lemma lem6771305 {A K : Type'} (_88511 : type835 A K) : (term943 A K _88511) = (term963 A K _88511).
Proof. exact (EQ_MP (@lem6771304 A K _88511) (@lem6771282 A K _88511)). Qed.
Lemma lem6771442 {A K : Type'} (_88511 : type835 A K) : (term849 A K _88511) = (term963 A K _88511).
Proof. exact (TRANS (@lem6771278 A K _88511) (@lem6771305 A K _88511)). Qed.
Lemma lem6771444 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6771445 {K : Type'} (P : Prop) (Q : K -> Prop) : (term964 K P Q) = (term965 K P Q).
Proof. exact (@lem6771444 K P Q). Qed.
Lemma lem6771446 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _88511 GEN_PVAR_272 k dom f neut) = (term967 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (@lem6771445 K (term968 A K _88511 k dom f neut GEN_PVAR_272) (term627 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771447 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771448 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term969 A K GEN_PVAR_272 k dom f neut) = (term627 A K GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6771447 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771449 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6771450 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term970 A K GEN_PVAR_272 k dom f neut) = (term629 A K GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6771449 K) (@lem6771448 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771451 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _88511 k dom f neut GEN_PVAR_272) = (term831 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6771452 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term966 A K _88511 GEN_PVAR_272 k dom f neut) = (term832 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6771451 A K _88511 k dom f neut GEN_PVAR_272) (@lem6771450 A K GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771453 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771454 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term971 A K _88511 GEN_PVAR_272 k dom f neut) = (term972 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6771453) (@lem6771452 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771455 {A K : Type'} (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term825 A K GEN_PVAR_272 k dom f neut j) = (term625 A K GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term825 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771456 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (GEN_PVAR_272 : K) : (term831 A K _88511 k dom f neut GEN_PVAR_272) = (term831 A K _88511 k dom f neut GEN_PVAR_272).
Proof. exact (eq_refl (term831 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6771457 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term973 A K _88511 GEN_PVAR_272 k dom f neut j) = (term974 A K _88511 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6771456 A K _88511 k dom f neut GEN_PVAR_272) (@lem6771455 A K GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771458 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term975 A K _88511 GEN_PVAR_272 k dom f neut) = (term976 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6771457 A K _88511 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771459 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6771460 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term967 A K _88511 GEN_PVAR_272 k dom f neut) = (term977 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6771459 K) (@lem6771458 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771461 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term966 A K _88511 GEN_PVAR_272 k dom f neut) = (term967 A K _88511 GEN_PVAR_272 k dom f neut)) = ((term832 A K _88511 GEN_PVAR_272 k dom f neut) = (term977 A K _88511 GEN_PVAR_272 k dom f neut)).
Proof. exact (MK_COMB (@lem6771454 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6771460 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771462 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term832 A K _88511 GEN_PVAR_272 k dom f neut) = (term977 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (EQ_MP (@lem6771461 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6771446 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771463 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term855 A K _88511 k dom f neut) = (term978 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6771462 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771464 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771465 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _88511 k dom f neut) = (term979 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771464 K) (@lem6771463 A K _88511 k dom f neut)). Qed.
Lemma lem6771467 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6771468 {K : Type'} (P : type1402 K) : (term982 K P) = (term983 K P).
Proof. exact (@lem6771467 K K P). Qed.
Lemma lem6771469 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _88511 k dom f neut) = (term985 A K _88511 k dom f neut).
Proof. exact (@lem6771468 K (term986 A K _88511 k dom f neut)). Qed.
Lemma lem6771470 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _88511 k dom f neut GEN_PVAR_272) = (term976 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6771471 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6771472 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _88511 k dom f neut GEN_PVAR_272 j) = (term989 A K _88511 GEN_PVAR_272 k dom f neut j).
Proof. exact (MK_COMB (@lem6771470 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6771471 K j)). Qed.
Lemma lem6771473 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term989 A K _88511 GEN_PVAR_272 k dom f neut j) = (term974 A K _88511 GEN_PVAR_272 k dom f neut j).
Proof. exact (eq_refl (term989 A K _88511 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771474 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term988 A K _88511 k dom f neut GEN_PVAR_272 j) = (term974 A K _88511 GEN_PVAR_272 k dom f neut j).
Proof. exact (TRANS (@lem6771472 A K _88511 GEN_PVAR_272 k dom f neut j) (@lem6771473 A K _88511 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771475 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term990 A K _88511 k dom f neut GEN_PVAR_272) = (term976 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (fun_ext (fun j : K => @lem6771474 A K _88511 GEN_PVAR_272 k dom f neut j)). Qed.
Lemma lem6771476 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6771477 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term991 A K _88511 k dom f neut GEN_PVAR_272) = (term977 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (MK_COMB (@lem6771476 K) (@lem6771475 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771478 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term992 A K _88511 k dom f neut) = (term978 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6771477 A K _88511 GEN_PVAR_272 k dom f neut)). Qed.
Lemma lem6771479 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771480 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term984 A K _88511 k dom f neut) = (term979 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771479 K) (@lem6771478 A K _88511 k dom f neut)). Qed.
Lemma lem6771481 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771482 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term993 A K _88511 k dom f neut) = (term994 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771481) (@lem6771480 A K _88511 k dom f neut)). Qed.
Lemma lem6771483 {A K : Type'} (_88511 : type835 A K) (GEN_PVAR_272 : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term987 A K _88511 k dom f neut GEN_PVAR_272) = (term976 A K _88511 GEN_PVAR_272 k dom f neut).
Proof. exact (eq_refl (term987 A K _88511 k dom f neut GEN_PVAR_272)). Qed.
Lemma lem6771484 {K : Type'} (j : K -> K) (GEN_PVAR_272 : K) : (j GEN_PVAR_272) = (j GEN_PVAR_272).
Proof. exact (eq_refl (j GEN_PVAR_272)). Qed.
Lemma lem6771485 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _88511 k dom f neut j GEN_PVAR_272) = (term996 A K _88511 k dom f neut j GEN_PVAR_272).
Proof. exact (MK_COMB (@lem6771483 A K _88511 GEN_PVAR_272 k dom f neut) (@lem6771484 K j GEN_PVAR_272)). Qed.
Lemma lem6771486 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term996 A K _88511 k dom f neut j GEN_PVAR_272) = (term997 A K _88511 k dom f neut j GEN_PVAR_272).
Proof. exact (eq_refl (term996 A K _88511 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6771487 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) (GEN_PVAR_272 : K) : (term995 A K _88511 k dom f neut j GEN_PVAR_272) = (term997 A K _88511 k dom f neut j GEN_PVAR_272).
Proof. exact (TRANS (@lem6771485 A K _88511 k dom f neut j GEN_PVAR_272) (@lem6771486 A K _88511 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6771488 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term998 A K _88511 k dom f neut j) = (term999 A K _88511 k dom f neut j).
Proof. exact (fun_ext (fun GEN_PVAR_272 : K => @lem6771487 A K _88511 k dom f neut j GEN_PVAR_272)). Qed.
Lemma lem6771489 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771490 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1000 A K _88511 k dom f neut j) = (term1001 A K _88511 k dom f neut j).
Proof. exact (MK_COMB (@lem6771489 K) (@lem6771488 A K _88511 k dom f neut j)). Qed.
Lemma lem6771491 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1002 A K _88511 k dom f neut) = (term1003 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6771490 A K _88511 k dom f neut j)). Qed.
Lemma lem6771492 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6771493 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term985 A K _88511 k dom f neut) = (term1004 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771492 K) (@lem6771491 A K _88511 k dom f neut)). Qed.
Lemma lem6771494 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : ((term984 A K _88511 k dom f neut) = (term985 A K _88511 k dom f neut)) = ((term979 A K _88511 k dom f neut) = (term1004 A K _88511 k dom f neut)).
Proof. exact (MK_COMB (@lem6771482 A K _88511 k dom f neut) (@lem6771493 A K _88511 k dom f neut)). Qed.
Lemma lem6771495 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term979 A K _88511 k dom f neut) = (term1004 A K _88511 k dom f neut).
Proof. exact (EQ_MP (@lem6771494 A K _88511 k dom f neut) (@lem6771469 A K _88511 k dom f neut)). Qed.
Lemma lem6771496 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term870 A K _88511 k dom f neut) = (term1004 A K _88511 k dom f neut).
Proof. exact (TRANS (@lem6771465 A K _88511 k dom f neut) (@lem6771495 A K _88511 k dom f neut)). Qed.
Lemma lem6771497 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term877 A K _88511 k dom f) = (term1005 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6771496 A K _88511 k dom f neut)). Qed.
Lemma lem6771498 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6771499 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _88511 k dom f) = (term1006 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771498 A) (@lem6771497 A K _88511 k dom f)). Qed.
Lemma lem6771501 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6771502 {A K : Type'} (P : type1373 A K) : (term1007 A K P) = (term1008 A K P).
Proof. exact (@lem6771501 A (K -> K) P). Qed.
Lemma lem6771503 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _88511 k dom f) = (term1010 A K _88511 k dom f).
Proof. exact (@lem6771502 A K (term1011 A K _88511 k dom f)). Qed.
Lemma lem6771504 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _88511 k dom f neut) = (term1003 A K _88511 k dom f neut).
Proof. exact (eq_refl (term1012 A K _88511 k dom f neut)). Qed.
Lemma lem6771505 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6771506 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _88511 k dom f neut j) = (term1014 A K _88511 k dom f neut j).
Proof. exact (MK_COMB (@lem6771504 A K _88511 k dom f neut) (@lem6771505 K j)). Qed.
Lemma lem6771507 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1014 A K _88511 k dom f neut j) = (term1001 A K _88511 k dom f neut j).
Proof. exact (eq_refl (term1014 A K _88511 k dom f neut j)). Qed.
Lemma lem6771508 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K -> K) : (term1013 A K _88511 k dom f neut j) = (term1001 A K _88511 k dom f neut j).
Proof. exact (TRANS (@lem6771506 A K _88511 k dom f neut j) (@lem6771507 A K _88511 k dom f neut j)). Qed.
Lemma lem6771509 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1015 A K _88511 k dom f neut) = (term1003 A K _88511 k dom f neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6771508 A K _88511 k dom f neut j)). Qed.
Lemma lem6771510 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6771511 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1016 A K _88511 k dom f neut) = (term1004 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771510 K) (@lem6771509 A K _88511 k dom f neut)). Qed.
Lemma lem6771512 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1017 A K _88511 k dom f) = (term1005 A K _88511 k dom f).
Proof. exact (fun_ext (fun neut : A => @lem6771511 A K _88511 k dom f neut)). Qed.
Lemma lem6771513 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6771514 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1009 A K _88511 k dom f) = (term1006 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771513 A) (@lem6771512 A K _88511 k dom f)). Qed.
Lemma lem6771515 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771516 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1018 A K _88511 k dom f) = (term1019 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771515) (@lem6771514 A K _88511 k dom f)). Qed.
Lemma lem6771517 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1012 A K _88511 k dom f neut) = (term1003 A K _88511 k dom f neut).
Proof. exact (eq_refl (term1012 A K _88511 k dom f neut)). Qed.
Lemma lem6771518 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6771519 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _88511 k dom f j neut) = (term1021 A K _88511 k dom f j neut).
Proof. exact (MK_COMB (@lem6771517 A K _88511 k dom f neut) (@lem6771518 A K j neut)). Qed.
Lemma lem6771520 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1021 A K _88511 k dom f j neut) = (term1022 A K _88511 k dom f j neut).
Proof. exact (eq_refl (term1021 A K _88511 k dom f j neut)). Qed.
Lemma lem6771521 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) (neut : A) : (term1020 A K _88511 k dom f j neut) = (term1022 A K _88511 k dom f j neut).
Proof. exact (TRANS (@lem6771519 A K _88511 k dom f j neut) (@lem6771520 A K _88511 k dom f j neut)). Qed.
Lemma lem6771522 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1023 A K _88511 k dom f j) = (term1024 A K _88511 k dom f j).
Proof. exact (fun_ext (fun neut : A => @lem6771521 A K _88511 k dom f j neut)). Qed.
Lemma lem6771523 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6771524 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1025 A K _88511 k dom f j) = (term1026 A K _88511 k dom f j).
Proof. exact (MK_COMB (@lem6771523 A) (@lem6771522 A K _88511 k dom f j)). Qed.
Lemma lem6771525 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1027 A K _88511 k dom f) = (term1028 A K _88511 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6771524 A K _88511 k dom f j)). Qed.
Lemma lem6771526 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6771527 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1010 A K _88511 k dom f) = (term1029 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771526 A K) (@lem6771525 A K _88511 k dom f)). Qed.
Lemma lem6771528 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : ((term1009 A K _88511 k dom f) = (term1010 A K _88511 k dom f)) = ((term1006 A K _88511 k dom f) = (term1029 A K _88511 k dom f)).
Proof. exact (MK_COMB (@lem6771516 A K _88511 k dom f) (@lem6771527 A K _88511 k dom f)). Qed.
Lemma lem6771529 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1006 A K _88511 k dom f) = (term1029 A K _88511 k dom f).
Proof. exact (EQ_MP (@lem6771528 A K _88511 k dom f) (@lem6771503 A K _88511 k dom f)). Qed.
Lemma lem6771530 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term892 A K _88511 k dom f) = (term1029 A K _88511 k dom f).
Proof. exact (TRANS (@lem6771499 A K _88511 k dom f) (@lem6771529 A K _88511 k dom f)). Qed.
Lemma lem6771531 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term901 A K _88511 k dom) = (term1030 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6771530 A K _88511 k dom f)). Qed.
Lemma lem6771532 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6771533 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _88511 k dom) = (term1031 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771532 A K) (@lem6771531 A K _88511 k dom)). Qed.
Lemma lem6771535 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6771536 {A K : Type'} (P : type778 A K) : (term1032 A K P) = (term1033 A K P).
Proof. exact (@lem6771535 (K -> A) (type1411 A K) P). Qed.
Lemma lem6771537 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _88511 k dom) = (term1035 A K _88511 k dom).
Proof. exact (@lem6771536 A K (term1036 A K _88511 k dom)). Qed.
Lemma lem6771538 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _88511 k dom f) = (term1028 A K _88511 k dom f).
Proof. exact (eq_refl (term1037 A K _88511 k dom f)). Qed.
Lemma lem6771539 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6771540 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _88511 k dom f j) = (term1039 A K _88511 k dom f j).
Proof. exact (MK_COMB (@lem6771538 A K _88511 k dom f) (@lem6771539 A K j)). Qed.
Lemma lem6771541 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1039 A K _88511 k dom f j) = (term1026 A K _88511 k dom f j).
Proof. exact (eq_refl (term1039 A K _88511 k dom f j)). Qed.
Lemma lem6771542 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : type1411 A K) : (term1038 A K _88511 k dom f j) = (term1026 A K _88511 k dom f j).
Proof. exact (TRANS (@lem6771540 A K _88511 k dom f j) (@lem6771541 A K _88511 k dom f j)). Qed.
Lemma lem6771543 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1040 A K _88511 k dom f) = (term1028 A K _88511 k dom f).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6771542 A K _88511 k dom f j)). Qed.
Lemma lem6771544 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6771545 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1041 A K _88511 k dom f) = (term1029 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771544 A K) (@lem6771543 A K _88511 k dom f)). Qed.
Lemma lem6771546 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1042 A K _88511 k dom) = (term1030 A K _88511 k dom).
Proof. exact (fun_ext (fun f : K -> A => @lem6771545 A K _88511 k dom f)). Qed.
Lemma lem6771547 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6771548 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1034 A K _88511 k dom) = (term1031 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771547 A K) (@lem6771546 A K _88511 k dom)). Qed.
Lemma lem6771549 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771550 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1043 A K _88511 k dom) = (term1044 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771549) (@lem6771548 A K _88511 k dom)). Qed.
Lemma lem6771551 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1037 A K _88511 k dom f) = (term1028 A K _88511 k dom f).
Proof. exact (eq_refl (term1037 A K _88511 k dom f)). Qed.
Lemma lem6771552 {A K : Type'} (j : type792 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6771553 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _88511 k dom j f) = (term1046 A K _88511 k dom j f).
Proof. exact (MK_COMB (@lem6771551 A K _88511 k dom f) (@lem6771552 A K j f)). Qed.
Lemma lem6771554 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1046 A K _88511 k dom j f) = (term1047 A K _88511 k dom j f).
Proof. exact (eq_refl (term1046 A K _88511 k dom j f)). Qed.
Lemma lem6771555 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) (f : K -> A) : (term1045 A K _88511 k dom j f) = (term1047 A K _88511 k dom j f).
Proof. exact (TRANS (@lem6771553 A K _88511 k dom j f) (@lem6771554 A K _88511 k dom j f)). Qed.
Lemma lem6771556 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1048 A K _88511 k dom j) = (term1049 A K _88511 k dom j).
Proof. exact (fun_ext (fun f : K -> A => @lem6771555 A K _88511 k dom j f)). Qed.
Lemma lem6771557 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6771558 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1050 A K _88511 k dom j) = (term1051 A K _88511 k dom j).
Proof. exact (MK_COMB (@lem6771557 A K) (@lem6771556 A K _88511 k dom j)). Qed.
Lemma lem6771559 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1052 A K _88511 k dom) = (term1053 A K _88511 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6771558 A K _88511 k dom j)). Qed.
Lemma lem6771560 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6771561 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1035 A K _88511 k dom) = (term1054 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771560 A K) (@lem6771559 A K _88511 k dom)). Qed.
Lemma lem6771562 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : ((term1034 A K _88511 k dom) = (term1035 A K _88511 k dom)) = ((term1031 A K _88511 k dom) = (term1054 A K _88511 k dom)).
Proof. exact (MK_COMB (@lem6771550 A K _88511 k dom) (@lem6771561 A K _88511 k dom)). Qed.
Lemma lem6771563 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1031 A K _88511 k dom) = (term1054 A K _88511 k dom).
Proof. exact (EQ_MP (@lem6771562 A K _88511 k dom) (@lem6771537 A K _88511 k dom)). Qed.
Lemma lem6771564 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term916 A K _88511 k dom) = (term1054 A K _88511 k dom).
Proof. exact (TRANS (@lem6771533 A K _88511 k dom) (@lem6771563 A K _88511 k dom)). Qed.
Lemma lem6771565 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term925 A K _88511 k) = (term1055 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771564 A K _88511 k dom)). Qed.
Lemma lem6771566 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771567 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term940 A K _88511 k) = (term1056 A K _88511 k).
Proof. exact (MK_COMB (@lem6771566 A) (@lem6771565 A K _88511 k)). Qed.
Lemma lem6771569 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6771570 {A K : Type'} (P : type604 A K) : (term1057 A K P) = (term1058 A K P).
Proof. exact (@lem6771569 (A -> Prop) (type792 A K) P). Qed.
Lemma lem6771571 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1059 A K _88511 k) = (term1060 A K _88511 k).
Proof. exact (@lem6771570 A K (term1061 A K _88511 k)). Qed.
Lemma lem6771572 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _88511 k dom) = (term1053 A K _88511 k dom).
Proof. exact (eq_refl (term1062 A K _88511 k dom)). Qed.
Lemma lem6771573 {A K : Type'} (j : type792 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6771574 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _88511 k dom j) = (term1064 A K _88511 k dom j).
Proof. exact (MK_COMB (@lem6771572 A K _88511 k dom) (@lem6771573 A K j)). Qed.
Lemma lem6771575 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1064 A K _88511 k dom j) = (term1051 A K _88511 k dom j).
Proof. exact (eq_refl (term1064 A K _88511 k dom j)). Qed.
Lemma lem6771576 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (j : type792 A K) : (term1063 A K _88511 k dom j) = (term1051 A K _88511 k dom j).
Proof. exact (TRANS (@lem6771574 A K _88511 k dom j) (@lem6771575 A K _88511 k dom j)). Qed.
Lemma lem6771577 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1065 A K _88511 k dom) = (term1053 A K _88511 k dom).
Proof. exact (fun_ext (fun j : type792 A K => @lem6771576 A K _88511 k dom j)). Qed.
Lemma lem6771578 {A K : Type'} : (@ex ((K -> A) -> A -> K -> K)) = (@ex ((K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> A -> K -> K))). Qed.
Lemma lem6771579 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1066 A K _88511 k dom) = (term1054 A K _88511 k dom).
Proof. exact (MK_COMB (@lem6771578 A K) (@lem6771577 A K _88511 k dom)). Qed.
Lemma lem6771580 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1067 A K _88511 k) = (term1055 A K _88511 k).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771579 A K _88511 k dom)). Qed.
Lemma lem6771581 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771582 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1059 A K _88511 k) = (term1056 A K _88511 k).
Proof. exact (MK_COMB (@lem6771581 A) (@lem6771580 A K _88511 k)). Qed.
Lemma lem6771583 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771584 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1068 A K _88511 k) = (term1069 A K _88511 k).
Proof. exact (MK_COMB (@lem6771583) (@lem6771582 A K _88511 k)). Qed.
Lemma lem6771585 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (term1062 A K _88511 k dom) = (term1053 A K _88511 k dom).
Proof. exact (eq_refl (term1062 A K _88511 k dom)). Qed.
Lemma lem6771586 {A K : Type'} (j : type649 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6771587 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _88511 k j dom) = (term1071 A K _88511 k j dom).
Proof. exact (MK_COMB (@lem6771585 A K _88511 k dom) (@lem6771586 A K j dom)). Qed.
Lemma lem6771588 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1071 A K _88511 k j dom) = (term1072 A K _88511 k j dom).
Proof. exact (eq_refl (term1071 A K _88511 k j dom)). Qed.
Lemma lem6771589 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) (dom : A -> Prop) : (term1070 A K _88511 k j dom) = (term1072 A K _88511 k j dom).
Proof. exact (TRANS (@lem6771587 A K _88511 k j dom) (@lem6771588 A K _88511 k j dom)). Qed.
Lemma lem6771590 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1073 A K _88511 k j) = (term1074 A K _88511 k j).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6771589 A K _88511 k j dom)). Qed.
Lemma lem6771591 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6771592 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1075 A K _88511 k j) = (term1076 A K _88511 k j).
Proof. exact (MK_COMB (@lem6771591 A) (@lem6771590 A K _88511 k j)). Qed.
Lemma lem6771593 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1077 A K _88511 k) = (term1078 A K _88511 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6771592 A K _88511 k j)). Qed.
Lemma lem6771594 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6771595 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1060 A K _88511 k) = (term1079 A K _88511 k).
Proof. exact (MK_COMB (@lem6771594 A K) (@lem6771593 A K _88511 k)). Qed.
Lemma lem6771596 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : ((term1059 A K _88511 k) = (term1060 A K _88511 k)) = ((term1056 A K _88511 k) = (term1079 A K _88511 k)).
Proof. exact (MK_COMB (@lem6771584 A K _88511 k) (@lem6771595 A K _88511 k)). Qed.
Lemma lem6771597 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1056 A K _88511 k) = (term1079 A K _88511 k).
Proof. exact (EQ_MP (@lem6771596 A K _88511 k) (@lem6771571 A K _88511 k)). Qed.
Lemma lem6771598 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term940 A K _88511 k) = (term1079 A K _88511 k).
Proof. exact (TRANS (@lem6771567 A K _88511 k) (@lem6771597 A K _88511 k)). Qed.
Lemma lem6771599 {A K : Type'} (_88511 : type835 A K) : (term947 A K _88511) = (term1080 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771598 A K _88511 k)). Qed.
Lemma lem6771600 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771601 {A K : Type'} (_88511 : type835 A K) : (term962 A K _88511) = (term1081 A K _88511).
Proof. exact (MK_COMB (@lem6771600 K) (@lem6771599 A K _88511)). Qed.
Lemma lem6771603 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6771604 {A K : Type'} (P : type819 A K) : (term1082 A K P) = (term1083 A K P).
Proof. exact (@lem6771603 (K -> Prop) (type649 A K) P). Qed.
Lemma lem6771605 {A K : Type'} (_88511 : type835 A K) : (term1084 A K _88511) = (term1085 A K _88511).
Proof. exact (@lem6771604 A K (term1086 A K _88511)). Qed.
Lemma lem6771606 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1087 A K _88511 k) = (term1078 A K _88511 k).
Proof. exact (eq_refl (term1087 A K _88511 k)). Qed.
Lemma lem6771607 {A K : Type'} (j : type649 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6771608 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _88511 k j) = (term1089 A K _88511 k j).
Proof. exact (MK_COMB (@lem6771606 A K _88511 k) (@lem6771607 A K j)). Qed.
Lemma lem6771609 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1089 A K _88511 k j) = (term1076 A K _88511 k j).
Proof. exact (eq_refl (term1089 A K _88511 k j)). Qed.
Lemma lem6771610 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (j : type649 A K) : (term1088 A K _88511 k j) = (term1076 A K _88511 k j).
Proof. exact (TRANS (@lem6771608 A K _88511 k j) (@lem6771609 A K _88511 k j)). Qed.
Lemma lem6771611 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1090 A K _88511 k) = (term1078 A K _88511 k).
Proof. exact (fun_ext (fun j : type649 A K => @lem6771610 A K _88511 k j)). Qed.
Lemma lem6771612 {A K : Type'} : (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6771613 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1091 A K _88511 k) = (term1079 A K _88511 k).
Proof. exact (MK_COMB (@lem6771612 A K) (@lem6771611 A K _88511 k)). Qed.
Lemma lem6771614 {A K : Type'} (_88511 : type835 A K) : (term1092 A K _88511) = (term1080 A K _88511).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771613 A K _88511 k)). Qed.
Lemma lem6771615 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771616 {A K : Type'} (_88511 : type835 A K) : (term1084 A K _88511) = (term1081 A K _88511).
Proof. exact (MK_COMB (@lem6771615 K) (@lem6771614 A K _88511)). Qed.
Lemma lem6771617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771618 {A K : Type'} (_88511 : type835 A K) : (term1093 A K _88511) = (term1094 A K _88511).
Proof. exact (MK_COMB (@lem6771617) (@lem6771616 A K _88511)). Qed.
Lemma lem6771619 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (term1087 A K _88511 k) = (term1078 A K _88511 k).
Proof. exact (eq_refl (term1087 A K _88511 k)). Qed.
Lemma lem6771620 {A K : Type'} (j : type834 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6771621 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _88511 j k) = (term1096 A K _88511 j k).
Proof. exact (MK_COMB (@lem6771619 A K _88511 k) (@lem6771620 A K j k)). Qed.
Lemma lem6771622 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1096 A K _88511 j k) = (term1097 A K _88511 j k).
Proof. exact (eq_refl (term1096 A K _88511 j k)). Qed.
Lemma lem6771623 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) (k : K -> Prop) : (term1095 A K _88511 j k) = (term1097 A K _88511 j k).
Proof. exact (TRANS (@lem6771621 A K _88511 j k) (@lem6771622 A K _88511 j k)). Qed.
Lemma lem6771624 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) : (term1098 A K _88511 j) = (term1099 A K _88511 j).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6771623 A K _88511 j k)). Qed.
Lemma lem6771625 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6771626 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) : (term1100 A K _88511 j) = (term1101 A K _88511 j).
Proof. exact (MK_COMB (@lem6771625 K) (@lem6771624 A K _88511 j)). Qed.
Lemma lem6771627 {A K : Type'} (_88511 : type835 A K) : (term1102 A K _88511) = (term1103 A K _88511).
Proof. exact (fun_ext (fun j : type834 A K => @lem6771626 A K _88511 j)). Qed.
Lemma lem6771628 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6771629 {A K : Type'} (_88511 : type835 A K) : (term1085 A K _88511) = (term1104 A K _88511).
Proof. exact (MK_COMB (@lem6771628 A K) (@lem6771627 A K _88511)). Qed.
Lemma lem6771630 {A K : Type'} (_88511 : type835 A K) : ((term1084 A K _88511) = (term1085 A K _88511)) = ((term1081 A K _88511) = (term1104 A K _88511)).
Proof. exact (MK_COMB (@lem6771618 A K _88511) (@lem6771629 A K _88511)). Qed.
Lemma lem6771631 {A K : Type'} (_88511 : type835 A K) : (term1081 A K _88511) = (term1104 A K _88511).
Proof. exact (EQ_MP (@lem6771630 A K _88511) (@lem6771605 A K _88511)). Qed.
Lemma lem6771632 {A K : Type'} (_88511 : type835 A K) : (term962 A K _88511) = (term1104 A K _88511).
Proof. exact (TRANS (@lem6771601 A K _88511) (@lem6771631 A K _88511)). Qed.
Lemma lem6771633 {A K : Type'} (_88511 : type835 A K) : (term959 A K _88511) = (term959 A K _88511).
Proof. exact (eq_refl (term959 A K _88511)). Qed.
Lemma lem6771634 {A K : Type'} (_88511 : type835 A K) : (term963 A K _88511) = (term1105 A K _88511).
Proof. exact (MK_COMB (@lem6771633 A K _88511) (@lem6771632 A K _88511)). Qed.
Lemma lem6771636 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1106 A P Q) = (term1107 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6771637 {A K : Type'} (P : Prop) (Q : type210 A K) : (term1108 A K P Q) = (term1109 A K P Q).
Proof. exact (@lem6771636 (type834 A K) P Q). Qed.
Lemma lem6771638 {A K : Type'} (_88511 : type835 A K) : (term1110 A K _88511) = (term1111 A K _88511).
Proof. exact (@lem6771637 A K (term957 A K _88511) (term1103 A K _88511)). Qed.
Lemma lem6771639 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) : (term1112 A K _88511 j) = (term1101 A K _88511 j).
Proof. exact (eq_refl (term1112 A K _88511 j)). Qed.
Lemma lem6771640 {A K : Type'} (_88511 : type835 A K) : (term1113 A K _88511) = (term1103 A K _88511).
Proof. exact (fun_ext (fun j : type834 A K => @lem6771639 A K _88511 j)). Qed.
Lemma lem6771641 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6771642 {A K : Type'} (_88511 : type835 A K) : (term1114 A K _88511) = (term1104 A K _88511).
Proof. exact (MK_COMB (@lem6771641 A K) (@lem6771640 A K _88511)). Qed.
Lemma lem6771643 {A K : Type'} (_88511 : type835 A K) : (term959 A K _88511) = (term959 A K _88511).
Proof. exact (eq_refl (term959 A K _88511)). Qed.
Lemma lem6771644 {A K : Type'} (_88511 : type835 A K) : (term1110 A K _88511) = (term1105 A K _88511).
Proof. exact (MK_COMB (@lem6771643 A K _88511) (@lem6771642 A K _88511)). Qed.
Lemma lem6771645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6771646 {A K : Type'} (_88511 : type835 A K) : (term1115 A K _88511) = (term1116 A K _88511).
Proof. exact (MK_COMB (@lem6771645) (@lem6771644 A K _88511)). Qed.
Lemma lem6771647 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) : (term1112 A K _88511 j) = (term1101 A K _88511 j).
Proof. exact (eq_refl (term1112 A K _88511 j)). Qed.
Lemma lem6771648 {A K : Type'} (_88511 : type835 A K) : (term959 A K _88511) = (term959 A K _88511).
Proof. exact (eq_refl (term959 A K _88511)). Qed.
Lemma lem6771649 {A K : Type'} (_88511 : type835 A K) (j : type834 A K) : (term1117 A K _88511 j) = (term1118 A K _88511 j).
Proof. exact (MK_COMB (@lem6771648 A K _88511) (@lem6771647 A K _88511 j)). Qed.
Lemma lem6771650 {A K : Type'} (_88511 : type835 A K) : (term1119 A K _88511) = (term1120 A K _88511).
Proof. exact (fun_ext (fun j : type834 A K => @lem6771649 A K _88511 j)). Qed.
Lemma lem6771651 {A K : Type'} : (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)) = (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> K))). Qed.
Lemma lem6771652 {A K : Type'} (_88511 : type835 A K) : (term1111 A K _88511) = (term1121 A K _88511).
Proof. exact (MK_COMB (@lem6771651 A K) (@lem6771650 A K _88511)). Qed.
Lemma lem6771653 {A K : Type'} (_88511 : type835 A K) : ((term1110 A K _88511) = (term1111 A K _88511)) = ((term1105 A K _88511) = (term1121 A K _88511)).
Proof. exact (MK_COMB (@lem6771646 A K _88511) (@lem6771652 A K _88511)). Qed.
Lemma lem6771654 {A K : Type'} (_88511 : type835 A K) : (term1105 A K _88511) = (term1121 A K _88511).
Proof. exact (EQ_MP (@lem6771653 A K _88511) (@lem6771638 A K _88511)). Qed.
Lemma lem6771655 {A K : Type'} (_88511 : type835 A K) : (term963 A K _88511) = (term1121 A K _88511).
Proof. exact (TRANS (@lem6771634 A K _88511) (@lem6771654 A K _88511)). Qed.
Lemma lem6771656 {A K : Type'} (_88511 : type835 A K) : (term849 A K _88511) = (term1121 A K _88511).
Proof. exact (TRANS (@lem6771442 A K _88511) (@lem6771655 A K _88511)). Qed.
Lemma lem6771657 {A K : Type'} (_88511 : type835 A K) : (term815 A K _88511) = (term1121 A K _88511).
Proof. exact (TRANS (@lem6770675 A K _88511) (@lem6771656 A K _88511)). Qed.
Lemma lem6771658 {A K : Type'} (_88511 : type835 A K) (h1 : term815 A K _88511) : term1121 A K _88511.
Proof. exact (EQ_MP (@lem6771657 A K _88511) (@lem6770630 A K _88511 h1)). Qed.
Lemma lem6771668 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term1122 A K f j neut) = ((f j) = neut).
Proof. exact (@lem16933 ((f j) = neut)). Qed.
Lemma lem6771670 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1123 A K dom f j).
Proof. exact (eq_refl (term1123 A K dom f j)). Qed.
Lemma lem6771671 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1124 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (MK_COMB (@lem6771670 A K dom f j) (@lem6771668 A K f j neut)). Qed.
Lemma lem6771672 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1124 A K dom f j neut).
Proof. exact (@lem17045 (term591 A K dom f j) (term572 A K f j neut)). Qed.
Lemma lem6771673 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term596 A K dom f j neut) = (term1125 A K dom f j neut).
Proof. exact (TRANS (@lem6771672 A K dom f j neut) (@lem6771671 A K dom f j neut)). Qed.
Lemma lem6771675 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term360 K k j).
Proof. exact (eq_refl (term360 K k j)). Qed.
Lemma lem6771676 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1126 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6771675 K k j) (@lem6771673 A K dom f j neut)). Qed.
Lemma lem6771677 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1126 A K k dom f j neut).
Proof. exact (@lem17045 (k j) (term595 A K dom f j neut)). Qed.
Lemma lem6771678 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1128 A K k dom f j neut) = (term1127 A K k dom f j neut).
Proof. exact (TRANS (@lem6771677 A K k dom f j neut) (@lem6771676 A K k dom f j neut)). Qed.
Lemma lem6771680 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1129 K ltle j i).
Proof. exact (eq_refl (term1129 K ltle j i)). Qed.
Lemma lem6771681 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1130 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6771680 K ltle j i) (@lem6771678 A K k dom f j neut)). Qed.
Lemma lem6771682 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1130 A K ltle i k dom f j neut).
Proof. exact (@lem17045 (ltle j i) (term602 A K k dom f j neut)). Qed.
Lemma lem6771683 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1132 A K ltle i k dom f j neut) = (term1131 A K ltle i k dom f j neut).
Proof. exact (TRANS (@lem6771682 A K ltle i k dom f j neut) (@lem6771681 A K ltle i k dom f j neut)). Qed.
Lemma lem6771684 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6771685 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6771686 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1133 A K ltle i k dom f j neut) = (term1134 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6771685) (@lem6771683 A K ltle i k dom f j neut)). Qed.
Lemma lem6771687 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1135 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6771686 A K ltle i k dom f j neut) (@lem6771684 K j i)). Qed.
Lemma lem6771688 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1135 A K ltle k dom f neut j i).
Proof. exact (@lem17265 (term604 A K ltle i k dom f j neut) (j = i)). Qed.
Lemma lem6771689 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term608 A K ltle k dom f neut j i) = (term1136 A K ltle k dom f neut j i).
Proof. exact (TRANS (@lem6771688 A K ltle k dom f neut j i) (@lem6771687 A K ltle k dom f neut j i)). Qed.
Lemma lem6771690 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term610 A K ltle k dom f neut i) = (term1137 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6771689 A K ltle k dom f neut j i)). Qed.
Lemma lem6771691 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771692 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term611 A K ltle k dom f neut i) = (term1138 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6771691 K) (@lem6771690 A K ltle k dom f neut i)). Qed.
Lemma lem6771707 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term616 K k ltle j i) = (term1139 K k ltle j i).
Proof. exact (@lem17265 (k j) (term614 K ltle j i)). Qed.
Lemma lem6771708 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term618 K k ltle i) = (term1140 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6771707 K k ltle j i)). Qed.
Lemma lem6771709 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771710 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term619 K k ltle i) = (term1141 K k ltle i).
Proof. exact (MK_COMB (@lem6771709 K) (@lem6771708 K k ltle i)). Qed.
Lemma lem6771711 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _88511 k dom f neut) = (term719 A K _88511 k dom f neut).
Proof. exact (eq_refl (term719 A K _88511 k dom f neut)). Qed.
Lemma lem6771712 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771713 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term621 K k ltle i) = (term1142 K k ltle i).
Proof. exact (MK_COMB (@lem6771712) (@lem6771710 K k ltle i)). Qed.
Lemma lem6771714 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term720 A K ltle i _88511 k dom f neut) = (term1143 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771713 K k ltle i) (@lem6771711 A K _88511 k dom f neut)). Qed.
Lemma lem6771715 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6771716 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term613 A K ltle k dom f neut i) = (term1144 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6771715) (@lem6771692 A K ltle k dom f neut i)). Qed.
Lemma lem6771717 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term721 A K ltle i _88511 k dom f neut) = (term1145 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771716 A K ltle k dom f neut i) (@lem6771714 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6771719 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term600 K k i).
Proof. exact (eq_refl (term600 K k i)). Qed.
Lemma lem6771720 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term722 A K ltle i _88511 k dom f neut) = (term1146 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771719 K k i) (@lem6771717 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6771722 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term592 A K dom f i).
Proof. exact (eq_refl (term592 A K dom f i)). Qed.
Lemma lem6771723 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1311 A K ltle i _88511 k dom f neut) = (term1349 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771722 A K dom f i) (@lem6771720 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6771725 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1273 A K f i neut).
Proof. exact (eq_refl (term1273 A K f i neut)). Qed.
Lemma lem6771726 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1312 A K ltle i _88511 k dom f neut) = (term1350 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771725 A K f i neut) (@lem6771723 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6771728 {K : Type'} (j : K) (i : K) : (term1213 K j i) = (term1213 K j i).
Proof. exact (eq_refl (term1213 K j i)). Qed.
Lemma lem6771829 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2420 A K j ltle i _88511 k dom f neut) = (term2459 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771728 K j i) (@lem6771726 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6771830 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2459 A K j ltle i _88511 k dom f neut.
Proof. exact (EQ_MP (@lem6771829 A K j ltle i _88511 k dom f neut) (@lem6770631 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6771844 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term67 K i k j') = (term68 K i k j').
Proof. exact (@lem17160 (j' = i) (k j')). Qed.
Lemma lem6771848 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : (term1122 A K f j' neut) = ((f j') = neut).
Proof. exact (@lem16933 ((f j') = neut)). Qed.
Lemma lem6771850 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1123 A K dom f j') = (term1123 A K dom f j').
Proof. exact (eq_refl (term1123 A K dom f j')). Qed.
Lemma lem6771851 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1124 A K dom f j' neut) = (term1125 A K dom f j' neut).
Proof. exact (MK_COMB (@lem6771850 A K dom f j') (@lem6771848 A K f j' neut)). Qed.
Lemma lem6771852 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term596 A K dom f j' neut) = (term1124 A K dom f j' neut).
Proof. exact (@lem17045 (term591 A K dom f j') (term572 A K f j' neut)). Qed.
Lemma lem6771853 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term596 A K dom f j' neut) = (term1125 A K dom f j' neut).
Proof. exact (TRANS (@lem6771852 A K dom f j' neut) (@lem6771851 A K dom f j' neut)). Qed.
Lemma lem6771854 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6771855 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term70 K i k j') = (term71 K i k j').
Proof. exact (MK_COMB (@lem6771854) (@lem6771844 K i k j')). Qed.
Lemma lem6771856 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1149 A K i k dom f j' neut) = (term1150 A K i k dom f j' neut).
Proof. exact (MK_COMB (@lem6771855 K i k j') (@lem6771853 A K dom f j' neut)). Qed.
Lemma lem6771857 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1151 A K i k dom f j' neut) = (term1149 A K i k dom f j' neut).
Proof. exact (@lem17045 (term39 K i k j') (term595 A K dom f j' neut)). Qed.
Lemma lem6771858 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1151 A K i k dom f j' neut) = (term1150 A K i k dom f j' neut).
Proof. exact (TRANS (@lem6771857 A K i k dom f j' neut) (@lem6771856 A K i k dom f j' neut)). Qed.
Lemma lem6771860 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term1129 K ltle j' j) = (term1129 K ltle j' j).
Proof. exact (eq_refl (term1129 K ltle j' j)). Qed.
Lemma lem6771861 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2460 A K ltle j i k dom f j' neut) = (term2461 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6771860 K ltle j' j) (@lem6771858 A K i k dom f j' neut)). Qed.
Lemma lem6771862 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2462 A K ltle j i k dom f j' neut) = (term2460 A K ltle j i k dom f j' neut).
Proof. exact (@lem17045 (ltle j' j) (term658 A K i k dom f j' neut)). Qed.
Lemma lem6771863 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2462 A K ltle j i k dom f j' neut) = (term2461 A K ltle j i k dom f j' neut).
Proof. exact (TRANS (@lem6771862 A K ltle j i k dom f j' neut) (@lem6771861 A K ltle j i k dom f j' neut)). Qed.
Lemma lem6771864 {K : Type'} (j' : K) (j : K) : (j' = j) = (j' = j).
Proof. exact (eq_refl (j' = j)). Qed.
Lemma lem6771865 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6771866 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2463 A K ltle j i k dom f j' neut) = (term2464 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6771865) (@lem6771863 A K ltle j i k dom f j' neut)). Qed.
Lemma lem6771867 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2465 A K ltle i k dom f neut j' j) = (term2466 A K ltle i k dom f neut j' j).
Proof. exact (MK_COMB (@lem6771866 A K ltle j i k dom f j' neut) (@lem6771864 K j' j)). Qed.
Lemma lem6771868 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2378 A K ltle i k dom f neut j' j) = (term2465 A K ltle i k dom f neut j' j).
Proof. exact (@lem17265 (term2376 A K ltle j i k dom f j' neut) (j' = j)). Qed.
Lemma lem6771869 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2378 A K ltle i k dom f neut j' j) = (term2466 A K ltle i k dom f neut j' j).
Proof. exact (TRANS (@lem6771868 A K ltle i k dom f neut j' j) (@lem6771867 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6771870 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2379 A K ltle i k dom f neut j) = (term2467 A K ltle i k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6771869 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6771871 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6771872 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2380 A K ltle i k dom f neut j) = (term2468 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6771871 K) (@lem6771870 A K ltle i k dom f neut j)). Qed.
Lemma lem6771874 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1557 A K dom f j neut) = (term1557 A K dom f j neut).
Proof. exact (eq_refl (term1557 A K dom f j neut)). Qed.
Lemma lem6771875 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2381 A K ltle i k dom f neut j) = (term2469 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6771874 A K dom f j neut) (@lem6771872 A K ltle i k dom f neut j)). Qed.
Lemma lem6771877 {K : Type'} (k : K -> Prop) (j : K) : (term333 K k j) = (term333 K k j).
Proof. exact (eq_refl (term333 K k j)). Qed.
Lemma lem6771930 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2382 A K ltle i k dom f neut j) = (term2470 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6771877 K k j) (@lem6771875 A K ltle i k dom f neut j)). Qed.
Lemma lem6771931 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2470 A K ltle i k dom f neut j.
Proof. exact (EQ_MP (@lem6771930 A K ltle i k dom f neut j) (@lem6770632 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6771933 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6771934 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6771945 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771946 {A K : Type'} (f : type835 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6771945 (K -> Prop) (type650 A K) f x). Qed.
Lemma lem6771947 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) : (_88511 k) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511 k).
Proof. exact (@lem6771946 A K _88511 k). Qed.
Lemma lem6771948 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6771949 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_88511 k dom) = (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511 k dom).
Proof. exact (MK_COMB (@lem6771947 A K _88511 k) (@lem6771948 A dom)). Qed.
Lemma lem6771951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771952 {A K : Type'} (f : type650 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6771951 (A -> Prop) (type793 A K) f x). Qed.
Lemma lem6771953 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511 k dom) = (term1163 A K _88511 k dom).
Proof. exact (@lem6771952 A K (@I ((K -> Prop) -> (A -> Prop) -> (K -> A) -> A -> K -> Prop) _88511 k) dom). Qed.
Lemma lem6771954 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) : (_88511 k dom) = (term1163 A K _88511 k dom).
Proof. exact (TRANS (@lem6771949 A K _88511 k dom) (@lem6771953 A K _88511 k dom)). Qed.
Lemma lem6771955 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6771956 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_88511 k dom f) = (term1164 A K _88511 k dom f).
Proof. exact (MK_COMB (@lem6771954 A K _88511 k dom) (@lem6771955 A K f)). Qed.
Lemma lem6771958 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771959 {A K : Type'} (f : type793 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> A -> K -> Prop) f x).
Proof. exact (@lem6771958 (K -> A) (type1413 A K) f x). Qed.
Lemma lem6771960 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (term1164 A K _88511 k dom f) = (term1165 A K _88511 k dom f).
Proof. exact (@lem6771959 A K (term1163 A K _88511 k dom) f). Qed.
Lemma lem6771961 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) : (_88511 k dom f) = (term1165 A K _88511 k dom f).
Proof. exact (TRANS (@lem6771956 A K _88511 k dom f) (@lem6771960 A K _88511 k dom f)). Qed.
Lemma lem6771962 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6771963 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_88511 k dom f neut) = (term1166 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771961 A K _88511 k dom f) (@lem6771962 A neut)). Qed.
Lemma lem6771965 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771966 {A K : Type'} (f : type1413 A K) (x : A) : (f x) = (@I (A -> K -> Prop) f x).
Proof. exact (@lem6771965 A (K -> Prop) f x). Qed.
Lemma lem6771967 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1166 A K _88511 k dom f neut) = (term1167 A K _88511 k dom f neut).
Proof. exact (@lem6771966 A K (term1165 A K _88511 k dom f) neut). Qed.
Lemma lem6771969 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (_88511 k dom f neut) = (term1167 A K _88511 k dom f neut).
Proof. exact (TRANS (@lem6771963 A K _88511 k dom f neut) (@lem6771967 A K _88511 k dom f neut)). Qed.
Lemma lem6771970 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _88511 k dom f neut) = (term1168 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771934 K) (@lem6771969 A K _88511 k dom f neut)). Qed.
Lemma lem6771972 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771973 {K : Type'} (f : type672 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> K -> Prop) f x).
Proof. exact (@lem6771972 (K -> Prop) (K -> Prop) f x). Qed.
Lemma lem6771974 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1168 A K _88511 k dom f neut) = (term1169 A K _88511 k dom f neut).
Proof. exact (@lem6771973 K (@GSPEC K) (term1167 A K _88511 k dom f neut)). Qed.
Lemma lem6771975 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term718 A K _88511 k dom f neut) = (term1169 A K _88511 k dom f neut).
Proof. exact (TRANS (@lem6771970 A K _88511 k dom f neut) (@lem6771974 A K _88511 k dom f neut)). Qed.
Lemma lem6771976 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _88511 k dom f neut) = (term1170 A K _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6771933 K) (@lem6771975 A K _88511 k dom f neut)). Qed.
Lemma lem6771978 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771979 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6771978 (K -> Prop) Prop f x). Qed.
Lemma lem6771980 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1170 A K _88511 k dom f neut) = (term1171 A K _88511 k dom f neut).
Proof. exact (@lem6771979 K (@FINITE K) (term1169 A K _88511 k dom f neut)). Qed.
Lemma lem6771981 {A K : Type'} (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term719 A K _88511 k dom f neut) = (term1171 A K _88511 k dom f neut).
Proof. exact (TRANS (@lem6771976 A K _88511 k dom f neut) (@lem6771980 A K _88511 k dom f neut)). Qed.
Lemma lem6771988 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771989 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6771988 K (K -> Prop) f x). Qed.
Lemma lem6771990 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6771989 K ltle j). Qed.
Lemma lem6771991 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6771992 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6771990 K ltle j) (@lem6771991 K i)). Qed.
Lemma lem6771994 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6771995 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6771994 K Prop f x). Qed.
Lemma lem6771996 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6771995 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6771998 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6771992 K ltle j i) (@lem6771996 K ltle j i)). Qed.
Lemma lem6772005 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772006 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6772005 K (K -> Prop) f x). Qed.
Lemma lem6772007 {K : Type'} (ltle : type1402 K) (i : K) : (ltle i) = (@I (K -> K -> Prop) ltle i).
Proof. exact (@lem6772006 K ltle i). Qed.
Lemma lem6772008 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6772009 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (@I (K -> K -> Prop) ltle i j).
Proof. exact (MK_COMB (@lem6772007 K ltle i) (@lem6772008 K j)). Qed.
Lemma lem6772011 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772012 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772011 K Prop f x). Qed.
Lemma lem6772013 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (@I (K -> K -> Prop) ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6772012 K (@I (K -> K -> Prop) ltle i) j). Qed.
Lemma lem6772015 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (ltle i j) = (term1172 K ltle i j).
Proof. exact (TRANS (@lem6772009 K ltle i j) (@lem6772013 K ltle i j)). Qed.
Lemma lem6772016 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772017 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term1173 K ltle i j) = (term1174 K ltle i j).
Proof. exact (MK_COMB (@lem6772016) (@lem6772015 K ltle i j)). Qed.
Lemma lem6772018 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1175 K ltle j i) = (term1176 K ltle j i).
Proof. exact (MK_COMB (@lem6772017 K ltle i j) (@lem6771998 K ltle j i)). Qed.
Lemma lem6772025 {K : Type'} (i : K) (j : K) : (term38 K i j) = (term38 K i j).
Proof. exact (eq_refl (term38 K i j)). Qed.
Lemma lem6772026 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term614 K ltle j i) = (term1177 K ltle j i).
Proof. exact (MK_COMB (@lem6772025 K i j) (@lem6772018 K ltle j i)). Qed.
Lemma lem6772027 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772032 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772033 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772032 K Prop f x). Qed.
Lemma lem6772035 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6772033 K k j). Qed.
Lemma lem6772036 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6772027) (@lem6772035 K k j)). Qed.
Lemma lem6772037 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772038 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6772037) (@lem6772036 K k j)). Qed.
Lemma lem6772039 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1139 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (MK_COMB (@lem6772038 K k j) (@lem6772026 K ltle j i)). Qed.
Lemma lem6772040 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1140 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6772039 K k ltle j i)). Qed.
Lemma lem6772041 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6772042 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1141 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6772041 K) (@lem6772040 K k ltle i)). Qed.
Lemma lem6772043 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772044 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1142 K k ltle i) = (term1183 K k ltle i).
Proof. exact (MK_COMB (@lem6772043) (@lem6772042 K k ltle i)). Qed.
Lemma lem6772045 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1143 A K ltle i _88511 k dom f neut) = (term1184 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772044 K k ltle i) (@lem6771981 A K _88511 k dom f neut)). Qed.
Lemma lem6772050 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6772051 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6772056 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772057 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772056 K A f x). Qed.
Lemma lem6772059 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6772057 A K f j). Qed.
Lemma lem6772060 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6772061 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6772051 A) (@lem6772059 A K f j)). Qed.
Lemma lem6772062 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6772061 A K f j) (@lem6772060 A neut)). Qed.
Lemma lem6772063 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772064 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6772069 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772070 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772069 K A f x). Qed.
Lemma lem6772072 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6772070 A K f j). Qed.
Lemma lem6772073 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6772064 A dom) (@lem6772072 A K f j)). Qed.
Lemma lem6772075 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772076 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6772075 A Prop f x). Qed.
Lemma lem6772077 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6772076 A dom (@I (K -> A) f j)). Qed.
Lemma lem6772078 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6772073 A K dom f j) (@lem6772077 A K dom f j)). Qed.
Lemma lem6772079 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1189 A K dom f j) = (term1190 A K dom f j).
Proof. exact (MK_COMB (@lem6772063) (@lem6772078 A K dom f j)). Qed.
Lemma lem6772080 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772081 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1123 A K dom f j) = (term1191 A K dom f j).
Proof. exact (MK_COMB (@lem6772080) (@lem6772079 A K dom f j)). Qed.
Lemma lem6772082 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1125 A K dom f j neut) = (term1192 A K dom f j neut).
Proof. exact (MK_COMB (@lem6772081 A K dom f j) (@lem6772062 A K f j neut)). Qed.
Lemma lem6772083 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772088 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772089 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772088 K Prop f x). Qed.
Lemma lem6772091 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6772089 K k j). Qed.
Lemma lem6772092 {K : Type'} (k : K -> Prop) (j : K) : (term30 K k j) = (term1178 K k j).
Proof. exact (MK_COMB (@lem6772083) (@lem6772091 K k j)). Qed.
Lemma lem6772093 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772094 {K : Type'} (k : K -> Prop) (j : K) : (term360 K k j) = (term1179 K k j).
Proof. exact (MK_COMB (@lem6772093) (@lem6772092 K k j)). Qed.
Lemma lem6772095 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1127 A K k dom f j neut) = (term1193 A K k dom f j neut).
Proof. exact (MK_COMB (@lem6772094 K k j) (@lem6772082 A K dom f j neut)). Qed.
Lemma lem6772096 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772103 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772104 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6772103 K (K -> Prop) f x). Qed.
Lemma lem6772105 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6772104 K ltle j). Qed.
Lemma lem6772106 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6772107 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (@I (K -> K -> Prop) ltle j i).
Proof. exact (MK_COMB (@lem6772105 K ltle j) (@lem6772106 K i)). Qed.
Lemma lem6772109 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772110 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772109 K Prop f x). Qed.
Lemma lem6772111 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (@I (K -> K -> Prop) ltle j i) = (term1172 K ltle j i).
Proof. exact (@lem6772110 K (@I (K -> K -> Prop) ltle j) i). Qed.
Lemma lem6772113 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (ltle j i) = (term1172 K ltle j i).
Proof. exact (TRANS (@lem6772107 K ltle j i) (@lem6772111 K ltle j i)). Qed.
Lemma lem6772114 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1194 K ltle j i) = (term1195 K ltle j i).
Proof. exact (MK_COMB (@lem6772096) (@lem6772113 K ltle j i)). Qed.
Lemma lem6772115 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772116 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1129 K ltle j i) = (term1196 K ltle j i).
Proof. exact (MK_COMB (@lem6772115) (@lem6772114 K ltle j i)). Qed.
Lemma lem6772117 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1131 A K ltle i k dom f j neut) = (term1197 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6772116 K ltle j i) (@lem6772095 A K k dom f j neut)). Qed.
Lemma lem6772118 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772119 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1134 A K ltle i k dom f j neut) = (term1198 A K ltle i k dom f j neut).
Proof. exact (MK_COMB (@lem6772118) (@lem6772117 A K ltle i k dom f j neut)). Qed.
Lemma lem6772120 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1136 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (MK_COMB (@lem6772119 A K ltle i k dom f j neut) (@lem6772050 K j i)). Qed.
Lemma lem6772121 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1137 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6772120 A K ltle k dom f neut j i)). Qed.
Lemma lem6772122 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6772123 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1138 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6772122 K) (@lem6772121 A K ltle k dom f neut i)). Qed.
Lemma lem6772124 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772125 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1144 A K ltle k dom f neut i) = (term1202 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6772124) (@lem6772123 A K ltle k dom f neut i)). Qed.
Lemma lem6772126 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1145 A K ltle i _88511 k dom f neut) = (term1203 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772125 A K ltle k dom f neut i) (@lem6772045 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6772127 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772133 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772132 K Prop f x). Qed.
Lemma lem6772135 {K : Type'} (k : K -> Prop) (i : K) : (k i) = (@I (K -> Prop) k i).
Proof. exact (@lem6772133 K k i). Qed.
Lemma lem6772136 {K : Type'} (k : K -> Prop) (i : K) : (term30 K k i) = (term1178 K k i).
Proof. exact (MK_COMB (@lem6772127) (@lem6772135 K k i)). Qed.
Lemma lem6772137 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772138 {K : Type'} (k : K -> Prop) (i : K) : (term600 K k i) = (term1204 K k i).
Proof. exact (MK_COMB (@lem6772137) (@lem6772136 K k i)). Qed.
Lemma lem6772139 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1146 A K ltle i _88511 k dom f neut) = (term1205 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772138 K k i) (@lem6772126 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6772140 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6772145 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772146 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772145 K A f x). Qed.
Lemma lem6772148 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6772146 A K f i). Qed.
Lemma lem6772149 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1187 A K dom f i).
Proof. exact (MK_COMB (@lem6772140 A dom) (@lem6772148 A K f i)). Qed.
Lemma lem6772151 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772152 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6772151 A Prop f x). Qed.
Lemma lem6772153 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1187 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6772152 A dom (@I (K -> A) f i)). Qed.
Lemma lem6772154 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term591 A K dom f i) = (term1188 A K dom f i).
Proof. exact (TRANS (@lem6772149 A K dom f i) (@lem6772153 A K dom f i)). Qed.
Lemma lem6772155 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772156 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term592 A K dom f i) = (term1209 A K dom f i).
Proof. exact (MK_COMB (@lem6772155) (@lem6772154 A K dom f i)). Qed.
Lemma lem6772157 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1349 A K ltle i _88511 k dom f neut) = (term1353 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772156 A K dom f i) (@lem6772139 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6772158 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772159 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6772164 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772165 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772164 K A f x). Qed.
Lemma lem6772167 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6772165 A K f i). Qed.
Lemma lem6772168 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6772169 {A K : Type'} (f : K -> A) (i : K) : (term1185 A K f i) = (term1186 A K f i).
Proof. exact (MK_COMB (@lem6772159 A) (@lem6772167 A K f i)). Qed.
Lemma lem6772170 {A K : Type'} (f : K -> A) (i : K) (neut : A) : ((f i) = neut) = ((@I (K -> A) f i) = neut).
Proof. exact (MK_COMB (@lem6772169 A K f i) (@lem6772168 A neut)). Qed.
Lemma lem6772171 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term572 A K f i neut) = (term1208 A K f i neut).
Proof. exact (MK_COMB (@lem6772158) (@lem6772170 A K f i neut)). Qed.
Lemma lem6772172 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772173 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1273 A K f i neut) = (term1354 A K f i neut).
Proof. exact (MK_COMB (@lem6772172) (@lem6772171 A K f i neut)). Qed.
Lemma lem6772174 {A K : Type'} (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1350 A K ltle i _88511 k dom f neut) = (term1355 A K ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772173 A K f i neut) (@lem6772157 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6772183 {K : Type'} (j : K) (i : K) : (term1213 K j i) = (term1213 K j i).
Proof. exact (eq_refl (term1213 K j i)). Qed.
Lemma lem6772184 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term2459 A K j ltle i _88511 k dom f neut) = (term2471 A K j ltle i _88511 k dom f neut).
Proof. exact (MK_COMB (@lem6772183 K j i) (@lem6772174 A K ltle i _88511 k dom f neut)). Qed.
Lemma lem6772185 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2471 A K j ltle i _88511 k dom f neut.
Proof. exact (EQ_MP (@lem6772184 A K j ltle i _88511 k dom f neut) (@lem6771830 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772190 {K : Type'} (j' : K) (j : K) : (j' = j) = (j' = j).
Proof. exact (eq_refl (j' = j)). Qed.
Lemma lem6772191 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6772196 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772197 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772196 K A f x). Qed.
Lemma lem6772199 {A K : Type'} (f : K -> A) (j' : K) : (f j') = (@I (K -> A) f j').
Proof. exact (@lem6772197 A K f j'). Qed.
Lemma lem6772200 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6772201 {A K : Type'} (f : K -> A) (j' : K) : (term1185 A K f j') = (term1186 A K f j').
Proof. exact (MK_COMB (@lem6772191 A) (@lem6772199 A K f j')). Qed.
Lemma lem6772202 {A K : Type'} (f : K -> A) (j' : K) (neut : A) : ((f j') = neut) = ((@I (K -> A) f j') = neut).
Proof. exact (MK_COMB (@lem6772201 A K f j') (@lem6772200 A neut)). Qed.
Lemma lem6772203 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772204 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6772209 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772210 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772209 K A f x). Qed.
Lemma lem6772212 {A K : Type'} (f : K -> A) (j' : K) : (f j') = (@I (K -> A) f j').
Proof. exact (@lem6772210 A K f j'). Qed.
Lemma lem6772213 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term591 A K dom f j') = (term1187 A K dom f j').
Proof. exact (MK_COMB (@lem6772204 A dom) (@lem6772212 A K f j')). Qed.
Lemma lem6772215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772216 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6772215 A Prop f x). Qed.
Lemma lem6772217 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1187 A K dom f j') = (term1188 A K dom f j').
Proof. exact (@lem6772216 A dom (@I (K -> A) f j')). Qed.
Lemma lem6772218 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term591 A K dom f j') = (term1188 A K dom f j').
Proof. exact (TRANS (@lem6772213 A K dom f j') (@lem6772217 A K dom f j')). Qed.
Lemma lem6772219 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1189 A K dom f j') = (term1190 A K dom f j').
Proof. exact (MK_COMB (@lem6772203) (@lem6772218 A K dom f j')). Qed.
Lemma lem6772220 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772221 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) : (term1123 A K dom f j') = (term1191 A K dom f j').
Proof. exact (MK_COMB (@lem6772220) (@lem6772219 A K dom f j')). Qed.
Lemma lem6772222 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1125 A K dom f j' neut) = (term1192 A K dom f j' neut).
Proof. exact (MK_COMB (@lem6772221 A K dom f j') (@lem6772202 A K f j' neut)). Qed.
Lemma lem6772223 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772228 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772229 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772228 K Prop f x). Qed.
Lemma lem6772231 {K : Type'} (k : K -> Prop) (j' : K) : (k j') = (@I (K -> Prop) k j').
Proof. exact (@lem6772229 K k j'). Qed.
Lemma lem6772232 {K : Type'} (k : K -> Prop) (j' : K) : (term30 K k j') = (term1178 K k j').
Proof. exact (MK_COMB (@lem6772223) (@lem6772231 K k j')). Qed.
Lemma lem6772241 {K : Type'} (j' : K) (i : K) : (term1213 K j' i) = (term1213 K j' i).
Proof. exact (eq_refl (term1213 K j' i)). Qed.
Lemma lem6772242 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term68 K i k j') = (term1214 K i k j').
Proof. exact (MK_COMB (@lem6772241 K j' i) (@lem6772232 K k j')). Qed.
Lemma lem6772243 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772244 {K : Type'} (i : K) (k : K -> Prop) (j' : K) : (term71 K i k j') = (term1215 K i k j').
Proof. exact (MK_COMB (@lem6772243) (@lem6772242 K i k j')). Qed.
Lemma lem6772245 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1150 A K i k dom f j' neut) = (term1216 A K i k dom f j' neut).
Proof. exact (MK_COMB (@lem6772244 K i k j') (@lem6772222 A K dom f j' neut)). Qed.
Lemma lem6772246 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772253 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772254 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6772253 K (K -> Prop) f x). Qed.
Lemma lem6772255 {K : Type'} (ltle : type1402 K) (j' : K) : (ltle j') = (@I (K -> K -> Prop) ltle j').
Proof. exact (@lem6772254 K ltle j'). Qed.
Lemma lem6772256 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6772257 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (ltle j' j) = (@I (K -> K -> Prop) ltle j' j).
Proof. exact (MK_COMB (@lem6772255 K ltle j') (@lem6772256 K j)). Qed.
Lemma lem6772259 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772260 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772259 K Prop f x). Qed.
Lemma lem6772261 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (@I (K -> K -> Prop) ltle j' j) = (term1172 K ltle j' j).
Proof. exact (@lem6772260 K (@I (K -> K -> Prop) ltle j') j). Qed.
Lemma lem6772263 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (ltle j' j) = (term1172 K ltle j' j).
Proof. exact (TRANS (@lem6772257 K ltle j' j) (@lem6772261 K ltle j' j)). Qed.
Lemma lem6772264 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term1194 K ltle j' j) = (term1195 K ltle j' j).
Proof. exact (MK_COMB (@lem6772246) (@lem6772263 K ltle j' j)). Qed.
Lemma lem6772265 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772266 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term1129 K ltle j' j) = (term1196 K ltle j' j).
Proof. exact (MK_COMB (@lem6772265) (@lem6772264 K ltle j' j)). Qed.
Lemma lem6772267 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2461 A K ltle j i k dom f j' neut) = (term2472 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6772266 K ltle j' j) (@lem6772245 A K i k dom f j' neut)). Qed.
Lemma lem6772268 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772269 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2464 A K ltle j i k dom f j' neut) = (term2473 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6772268) (@lem6772267 A K ltle j i k dom f j' neut)). Qed.
Lemma lem6772270 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2466 A K ltle i k dom f neut j' j) = (term2474 A K ltle i k dom f neut j' j).
Proof. exact (MK_COMB (@lem6772269 A K ltle j i k dom f j' neut) (@lem6772190 K j' j)). Qed.
Lemma lem6772271 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2467 A K ltle i k dom f neut j) = (term2475 A K ltle i k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6772270 A K ltle i k dom f neut j' j)). Qed.
Lemma lem6772272 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6772273 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2468 A K ltle i k dom f neut j) = (term2476 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6772272 K) (@lem6772271 A K ltle i k dom f neut j)). Qed.
Lemma lem6772274 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6772275 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6772280 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772281 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772280 K A f x). Qed.
Lemma lem6772283 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6772281 A K f j). Qed.
Lemma lem6772284 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6772285 {A K : Type'} (f : K -> A) (j : K) : (term1185 A K f j) = (term1186 A K f j).
Proof. exact (MK_COMB (@lem6772275 A) (@lem6772283 A K f j)). Qed.
Lemma lem6772286 {A K : Type'} (f : K -> A) (j : K) (neut : A) : ((f j) = neut) = ((@I (K -> A) f j) = neut).
Proof. exact (MK_COMB (@lem6772285 A K f j) (@lem6772284 A neut)). Qed.
Lemma lem6772287 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term572 A K f j neut) = (term1208 A K f j neut).
Proof. exact (MK_COMB (@lem6772274) (@lem6772286 A K f j neut)). Qed.
Lemma lem6772288 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6772293 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772294 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6772293 K A f x). Qed.
Lemma lem6772296 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6772294 A K f j). Qed.
Lemma lem6772297 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1187 A K dom f j).
Proof. exact (MK_COMB (@lem6772288 A dom) (@lem6772296 A K f j)). Qed.
Lemma lem6772299 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772300 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem6772299 A Prop f x). Qed.
Lemma lem6772301 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1187 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6772300 A dom (@I (K -> A) f j)). Qed.
Lemma lem6772302 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term591 A K dom f j) = (term1188 A K dom f j).
Proof. exact (TRANS (@lem6772297 A K dom f j) (@lem6772301 A K dom f j)). Qed.
Lemma lem6772303 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772304 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term592 A K dom f j) = (term1209 A K dom f j).
Proof. exact (MK_COMB (@lem6772303) (@lem6772302 A K dom f j)). Qed.
Lemma lem6772305 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term595 A K dom f j neut) = (term1210 A K dom f j neut).
Proof. exact (MK_COMB (@lem6772304 A K dom f j) (@lem6772287 A K f j neut)). Qed.
Lemma lem6772306 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772307 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) (neut : A) : (term1557 A K dom f j neut) = (term2477 A K dom f j neut).
Proof. exact (MK_COMB (@lem6772306) (@lem6772305 A K dom f j neut)). Qed.
Lemma lem6772308 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2469 A K ltle i k dom f neut j) = (term2478 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6772307 A K dom f j neut) (@lem6772273 A K ltle i k dom f neut j)). Qed.
Lemma lem6772313 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6772314 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6772313 K Prop f x). Qed.
Lemma lem6772316 {K : Type'} (k : K -> Prop) (j : K) : (k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6772314 K k j). Qed.
Lemma lem6772317 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6772318 {K : Type'} (k : K -> Prop) (j : K) : (term333 K k j) = (term1211 K k j).
Proof. exact (MK_COMB (@lem6772317) (@lem6772316 K k j)). Qed.
Lemma lem6772319 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2470 A K ltle i k dom f neut j) = (term2479 A K ltle i k dom f neut j).
Proof. exact (MK_COMB (@lem6772318 K k j) (@lem6772308 A K ltle i k dom f neut j)). Qed.
Lemma lem6772320 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2479 A K ltle i k dom f neut j.
Proof. exact (EQ_MP (@lem6772319 A K ltle i k dom f neut j) (@lem6771931 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6772766 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2478 A K ltle i k dom f neut j.
Proof. exact (proj2 (@lem6772320 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6772768 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2476 A K ltle i k dom f neut j.
Proof. exact (proj2 (@lem6772766 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6772769 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1210 A K dom f j neut.
Proof. exact (proj1 (@lem6772766 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6772772 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1355 A K ltle i _88511 k dom f neut.
Proof. exact (proj2 (@lem6772185 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772774 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1353 A K ltle i _88511 k dom f neut.
Proof. exact (proj2 (@lem6772772 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772776 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1205 A K ltle i _88511 k dom f neut.
Proof. exact (proj2 (@lem6772774 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772778 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1203 A K ltle i _88511 k dom f neut.
Proof. exact (proj2 (@lem6772776 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772780 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1184 A K ltle i _88511 k dom f neut.
Proof. exact (proj2 (@lem6772778 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772781 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (proj1 (@lem6772778 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772783 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1182 K k ltle i.
Proof. exact (proj1 (@lem6772780 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6772876 {K : Type'} (j' : K) (j : K) : (j' = j) = (j' = j).
Proof. exact (eq_refl (j' = j)). Qed.
Lemma lem6772899 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term1216 A K i k dom f j' neut) = (term1358 A K i k dom f j' neut).
Proof. exact (@lem19699 (term2 K j' i) (term1178 K k j') (term1192 A K dom f j' neut)). Qed.
Lemma lem6772902 {K : Type'} (ltle : type1402 K) (j' : K) (j : K) : (term1196 K ltle j' j) = (term1196 K ltle j' j).
Proof. exact (eq_refl (term1196 K ltle j' j)). Qed.
Lemma lem6772903 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2472 A K ltle j i k dom f j' neut) = (term2480 A K ltle j i k dom f j' neut).
Proof. exact (MK_COMB (@lem6772902 K ltle j' j) (@lem6772899 A K i k dom f j' neut)). Qed.
Lemma lem6772910 {A K : Type'} (i : K) (ltle : type1402 K) (j : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2480 A K ltle j i k dom f j' neut) = (term2481 A K i ltle j k dom f j' neut).
Proof. exact (@lem19490 (term1362 A K i dom f j' neut) (term1195 K ltle j' j) (term1193 A K k dom f j' neut)). Qed.
Lemma lem6772911 {A K : Type'} (i : K) (ltle : type1402 K) (j : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2472 A K ltle j i k dom f j' neut) = (term2481 A K i ltle j k dom f j' neut).
Proof. exact (TRANS (@lem6772903 A K ltle j i k dom f j' neut) (@lem6772910 A K i ltle j k dom f j' neut)). Qed.
Lemma lem6772912 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6772913 {A K : Type'} (i : K) (ltle : type1402 K) (j : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (j' : K) (neut : A) : (term2473 A K ltle j i k dom f j' neut) = (term2482 A K i ltle j k dom f j' neut).
Proof. exact (MK_COMB (@lem6772912) (@lem6772911 A K i ltle j k dom f j' neut)). Qed.
Lemma lem6772914 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2474 A K ltle i k dom f neut j' j) = (term2483 A K i ltle k dom f neut j' j).
Proof. exact (MK_COMB (@lem6772913 A K i ltle j k dom f j' neut) (@lem6772876 K j' j)). Qed.
Lemma lem6772921 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2483 A K i ltle k dom f neut j' j) = (term2484 A K i ltle k dom f neut j' j).
Proof. exact (@lem19699 (term2485 A K ltle j i dom f j' neut) (term1197 A K ltle j k dom f j' neut) (j' = j)). Qed.
Lemma lem6772922 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j' : K) (j : K) : (term2474 A K ltle i k dom f neut j' j) = (term2484 A K i ltle k dom f neut j' j).
Proof. exact (TRANS (@lem6772914 A K i ltle k dom f neut j' j) (@lem6772921 A K i ltle k dom f neut j' j)). Qed.
Lemma lem6772923 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2475 A K ltle i k dom f neut j) = (term2486 A K i ltle k dom f neut j).
Proof. exact (fun_ext (fun j' : K => @lem6772922 A K i ltle k dom f neut j' j)). Qed.
Lemma lem6772924 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6772926 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2476 A K ltle i k dom f neut j) = (term2487 A K i ltle k dom f neut j).
Proof. exact (MK_COMB (@lem6772924 K) (@lem6772923 A K i ltle k dom f neut j)). Qed.
Lemma lem6772927 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2487 A K i ltle k dom f neut j.
Proof. exact (EQ_MP (@lem6772926 A K i ltle k dom f neut j) (@lem6772768 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6772977 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : (term1199 A K ltle k dom f neut j i) = (term1199 A K ltle k dom f neut j i).
Proof. exact (eq_refl (term1199 A K ltle k dom f neut j i)). Qed.
Lemma lem6772978 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1200 A K ltle k dom f neut i) = (term1200 A K ltle k dom f neut i).
Proof. exact (fun_ext (fun j : K => @lem6772977 A K ltle k dom f neut j i)). Qed.
Lemma lem6772979 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6772981 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : (term1201 A K ltle k dom f neut i) = (term1201 A K ltle k dom f neut i).
Proof. exact (MK_COMB (@lem6772979 K) (@lem6772978 A K ltle k dom f neut i)). Qed.
Lemma lem6772982 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1201 A K ltle k dom f neut i.
Proof. exact (EQ_MP (@lem6772981 A K ltle k dom f neut i) (@lem6772781 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773002 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (j : K) (i : K) : (term1180 K k ltle j i) = (term1180 K k ltle j i).
Proof. exact (eq_refl (term1180 K k ltle j i)). Qed.
Lemma lem6773003 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1181 K k ltle i) = (term1181 K k ltle i).
Proof. exact (fun_ext (fun j : K => @lem6773002 K k ltle j i)). Qed.
Lemma lem6773004 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6773006 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) : (term1182 K k ltle i) = (term1182 K k ltle i).
Proof. exact (MK_COMB (@lem6773004 K) (@lem6773003 K k ltle i)). Qed.
Lemma lem6773007 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1182 K k ltle i.
Proof. exact (EQ_MP (@lem6773006 K k ltle i) (@lem6772783 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773045 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2488 A K i ltle k dom f neut j _88523.
Proof. exact (@lem6772927 A K ltle i k dom f neut j h1 _88523). Qed.
Lemma lem6773046 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2488 A K i ltle k dom f neut j _88523) = (term2484 A K i ltle k dom f neut _88523 j).
Proof. exact (eq_refl (term2488 A K i ltle k dom f neut j _88523)). Qed.
Lemma lem6773047 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2484 A K i ltle k dom f neut _88523 j.
Proof. exact (EQ_MP (@lem6773046 A K i ltle k dom f neut _88523 j) (@lem6773045 A K _88523 ltle i k dom f neut j h1)). Qed.
Lemma lem6773048 {A K : Type'} (_88524 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2134 A K ltle k dom f neut i _88524.
Proof. exact (@lem6772982 A K j ltle i _88511 k dom f neut h1 _88524). Qed.
Lemma lem6773049 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2134 A K ltle k dom f neut i _88524) = (term1199 A K ltle k dom f neut _88524 i).
Proof. exact (eq_refl (term2134 A K ltle k dom f neut i _88524)). Qed.
Lemma lem6773050 {A K : Type'} (_88524 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1199 A K ltle k dom f neut _88524 i.
Proof. exact (EQ_MP (@lem6773049 A K ltle k dom f neut _88524 i) (@lem6773048 A K _88524 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773051 {A K : Type'} (_88525 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2489 K k ltle i _88525.
Proof. exact (@lem6773007 A K j ltle i _88511 k dom f neut h1 _88525). Qed.
Lemma lem6773052 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2489 K k ltle i _88525) = (term1180 K k ltle _88525 i).
Proof. exact (eq_refl (term2489 K k ltle i _88525)). Qed.
Lemma lem6773055 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2490 A K ltle i dom f neut _88523 j.
Proof. exact (proj1 (@lem6773047 A K _88523 ltle i k dom f neut j h1)). Qed.
Lemma lem6773075 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2 K j i.
Proof. exact (proj1 (@lem6772185 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773085 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term1199 A K ltle k dom f neut _88524 i) = (term2135 A K ltle k dom f neut _88524 i).
Proof. exact (@lem6769268 (term1195 K ltle _88524 i) (term1193 A K k dom f _88524 neut) (_88524 = i)). Qed.
Lemma lem6773086 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2136 A K k dom f neut _88524 i) = (term2137 A K k dom f neut _88524 i).
Proof. exact (@lem6769268 (term1178 K k _88524) (term1192 A K dom f _88524 neut) (_88524 = i)). Qed.
Lemma lem6773093 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2138 A K dom f neut _88524 i) = (term2139 A K dom f neut _88524 i).
Proof. exact (@lem6769268 (term1190 A K dom f _88524) ((@I (K -> A) f _88524) = neut) (_88524 = i)). Qed.
Lemma lem6773094 {K : Type'} (k : K -> Prop) (_88524 : K) : (term1179 K k _88524) = (term1179 K k _88524).
Proof. exact (eq_refl (term1179 K k _88524)). Qed.
Lemma lem6773097 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2137 A K k dom f neut _88524 i) = (term2140 A K k dom f neut _88524 i).
Proof. exact (MK_COMB (@lem6773094 K k _88524) (@lem6773093 A K dom f neut _88524 i)). Qed.
Lemma lem6773098 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2136 A K k dom f neut _88524 i) = (term2140 A K k dom f neut _88524 i).
Proof. exact (TRANS (@lem6773086 A K k dom f neut _88524 i) (@lem6773097 A K k dom f neut _88524 i)). Qed.
Lemma lem6773099 {K : Type'} (ltle : type1402 K) (_88524 : K) (i : K) : (term1196 K ltle _88524 i) = (term1196 K ltle _88524 i).
Proof. exact (eq_refl (term1196 K ltle _88524 i)). Qed.
Lemma lem6773102 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2135 A K ltle k dom f neut _88524 i) = (term2141 A K ltle k dom f neut _88524 i).
Proof. exact (MK_COMB (@lem6773099 K ltle _88524 i) (@lem6773098 A K k dom f neut _88524 i)). Qed.
Lemma lem6773104 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term1199 A K ltle k dom f neut _88524 i) = (term2141 A K ltle k dom f neut _88524 i).
Proof. exact (TRANS (@lem6773085 A K ltle k dom f neut _88524 i) (@lem6773102 A K ltle k dom f neut _88524 i)). Qed.
Lemma lem6773105 {A K : Type'} (_88524 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2141 A K ltle k dom f neut _88524 i.
Proof. exact (EQ_MP (@lem6773104 A K ltle k dom f neut _88524 i) (@lem6773050 A K _88524 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773119 {A K : Type'} (_88525 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1180 K k ltle _88525 i.
Proof. exact (EQ_MP (@lem6773052 K k ltle _88525 i) (@lem6773051 A K _88525 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773125 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2490 A K ltle i dom f neut _88523 j) = (term2491 A K ltle i dom f neut _88523 j).
Proof. exact (@lem6769268 (term1195 K ltle _88523 j) (term1362 A K i dom f _88523 neut) (_88523 = j)). Qed.
Lemma lem6773126 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2492 A K i dom f neut _88523 j) = (term2493 A K i dom f neut _88523 j).
Proof. exact (@lem6769268 (term2 K _88523 i) (term1192 A K dom f _88523 neut) (_88523 = j)). Qed.
Lemma lem6773133 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2138 A K dom f neut _88523 j) = (term2139 A K dom f neut _88523 j).
Proof. exact (@lem6769268 (term1190 A K dom f _88523) ((@I (K -> A) f _88523) = neut) (_88523 = j)). Qed.
Lemma lem6773134 {K : Type'} (_88523 : K) (i : K) : (term1364 K _88523 i) = (term1364 K _88523 i).
Proof. exact (eq_refl (term1364 K _88523 i)). Qed.
Lemma lem6773137 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2493 A K i dom f neut _88523 j) = (term2494 A K i dom f neut _88523 j).
Proof. exact (MK_COMB (@lem6773134 K _88523 i) (@lem6773133 A K dom f neut _88523 j)). Qed.
Lemma lem6773138 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2492 A K i dom f neut _88523 j) = (term2494 A K i dom f neut _88523 j).
Proof. exact (TRANS (@lem6773126 A K i dom f neut _88523 j) (@lem6773137 A K i dom f neut _88523 j)). Qed.
Lemma lem6773139 {K : Type'} (ltle : type1402 K) (_88523 : K) (j : K) : (term1196 K ltle _88523 j) = (term1196 K ltle _88523 j).
Proof. exact (eq_refl (term1196 K ltle _88523 j)). Qed.
Lemma lem6773142 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2491 A K ltle i dom f neut _88523 j) = (term2495 A K ltle i dom f neut _88523 j).
Proof. exact (MK_COMB (@lem6773139 K ltle _88523 j) (@lem6773138 A K i dom f neut _88523 j)). Qed.
Lemma lem6773144 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2490 A K ltle i dom f neut _88523 j) = (term2495 A K ltle i dom f neut _88523 j).
Proof. exact (TRANS (@lem6773125 A K ltle i dom f neut _88523 j) (@lem6773142 A K ltle i dom f neut _88523 j)). Qed.
Lemma lem6773145 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2495 A K ltle i dom f neut _88523 j.
Proof. exact (EQ_MP (@lem6773144 A K ltle i dom f neut _88523 j) (@lem6773055 A K _88523 ltle i k dom f neut j h1)). Qed.
Lemma lem6773514 {K : Type'} (x : K) (y : K) (z : K) : term2496 K x y z.
Proof. exact (@lem21385 K x y z). Qed.
Lemma lem6773544 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : @I (K -> Prop) k j.
Proof. exact (proj1 (@lem6772320 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773545 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1251 K k j.
Proof. exact (fun h0 : term1178 K k j => @lem6773544 A K ltle i k dom f neut j h1). Qed.
Lemma lem6773547 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773548 {K : Type'} (k : K -> Prop) (j : K) : (term1251 K k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6773547 (@I (K -> Prop) k j)). Qed.
Lemma lem6773549 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : @I (K -> Prop) k j.
Proof. exact (EQ_MP (@lem6773548 K k j) (@lem6773545 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773552 {K : Type'} (i : K) (j : K) (h1 : term2 K i j) : term2 K i j.
Proof. exact (h1). Qed.
Lemma lem6773553 {K : Type'} (i : K) (j : K) (h1 : term2 K i j) : term2143 K i j.
Proof. exact (fun h0 : i = j => @lem6773552 K i j h1). Qed.
Lemma lem6773555 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6773556 {K : Type'} (i : K) (j : K) : (term2143 K i j) = (term2 K i j).
Proof. exact (@lem6773555 (i = j)). Qed.
Lemma lem6773557 {K : Type'} (i : K) (j : K) (h1 : term2 K i j) : term2 K i j.
Proof. exact (EQ_MP (@lem6773556 K i j) (@lem6773553 K i j h1)). Qed.
Lemma lem6773559 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : @I (K -> Prop) k j.
Proof. exact (proj1 (@lem6772320 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773560 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1251 K k j.
Proof. exact (fun h0 : term1178 K k j => @lem6773559 A K ltle i k dom f neut j h1). Qed.
Lemma lem6773562 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773563 {K : Type'} (k : K -> Prop) (j : K) : (term1251 K k j) = (@I (K -> Prop) k j).
Proof. exact (@lem6773562 (@I (K -> Prop) k j)). Qed.
Lemma lem6773564 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : @I (K -> Prop) k j.
Proof. exact (EQ_MP (@lem6773563 K k j) (@lem6773560 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773566 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1188 A K dom f j.
Proof. exact (proj1 (@lem6772769 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773567 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1247 A K dom f j.
Proof. exact (fun h0 : term1190 A K dom f j => @lem6773566 A K ltle i k dom f neut j h1). Qed.
Lemma lem6773569 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773570 {A K : Type'} (dom : A -> Prop) (f : K -> A) (j : K) : (term1247 A K dom f j) = (term1188 A K dom f j).
Proof. exact (@lem6773569 (term1188 A K dom f j)). Qed.
Lemma lem6773571 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1188 A K dom f j.
Proof. exact (EQ_MP (@lem6773570 A K dom f j) (@lem6773567 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773573 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1208 A K f j neut.
Proof. exact (proj2 (@lem6772769 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773574 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2497 A K f j neut.
Proof. exact (fun h0 : (@I (K -> A) f j) = neut => @lem6773573 A K ltle i k dom f neut j h1). Qed.
Lemma lem6773576 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6773577 {A K : Type'} (f : K -> A) (j : K) (neut : A) : (term2497 A K f j neut) = (term1208 A K f j neut).
Proof. exact (@lem6773576 ((@I (K -> A) f j) = neut)). Qed.
Lemma lem6773578 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term1208 A K f j neut.
Proof. exact (EQ_MP (@lem6773577 A K f j neut) (@lem6773574 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6773581 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : term2 K j i.
Proof. exact (h1). Qed.
Lemma lem6773582 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : term2143 K j i.
Proof. exact (fun h0 : j = i => @lem6773581 K j i h1). Qed.
Lemma lem6773584 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6773585 {K : Type'} (j : K) (i : K) : (term2143 K j i) = (term2 K j i).
Proof. exact (@lem6773584 (j = i)). Qed.
Lemma lem6773586 {K : Type'} (j : K) (i : K) (h1 : term2 K j i) : term2 K j i.
Proof. exact (EQ_MP (@lem6773585 K j i) (@lem6773582 K j i h1)). Qed.
Lemma lem6773588 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6773589 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88524 : K) (i : K) : (term2141 A K ltle k dom f neut _88524 i) = (term2498 A K k dom f neut ltle _88524 i).
Proof. exact (@lem6773588 (term2140 A K k dom f neut _88524 i) (term1195 K ltle _88524 i)). Qed.
Lemma lem6773591 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6773592 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2499 A K k dom f neut _88524 i) = (term2500 A K k dom f neut _88524 i).
Proof. exact (@lem6773591 (term1178 K k _88524) (term2139 A K dom f neut _88524 i)). Qed.
Lemma lem6773594 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6773595 {K : Type'} (k : K -> Prop) (_88524 : K) : (term2185 K k _88524) = (@I (K -> Prop) k _88524).
Proof. exact (@lem6773594 (@I (K -> Prop) k _88524)). Qed.
Lemma lem6773596 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6773597 {K : Type'} (k : K -> Prop) (_88524 : K) : (term2186 K k _88524) = (term1211 K k _88524).
Proof. exact (MK_COMB (@lem6773596) (@lem6773595 K k _88524)). Qed.
Lemma lem6773599 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6773600 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2501 A K dom f neut _88524 i) = (term2502 A K dom f neut _88524 i).
Proof. exact (@lem6773599 (term1190 A K dom f _88524) (term2148 A K f neut _88524 i)). Qed.
Lemma lem6773602 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6773603 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88524 : K) : (term1379 A K dom f _88524) = (term1188 A K dom f _88524).
Proof. exact (@lem6773602 (term1188 A K dom f _88524)). Qed.
Lemma lem6773604 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6773605 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88524 : K) : (term2189 A K dom f _88524) = (term1209 A K dom f _88524).
Proof. exact (MK_COMB (@lem6773604) (@lem6773603 A K dom f _88524)). Qed.
Lemma lem6773607 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6773608 {A K : Type'} (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2503 A K f neut _88524 i) = (term2504 A K f neut _88524 i).
Proof. exact (@lem6773607 ((@I (K -> A) f _88524) = neut) (_88524 = i)). Qed.
Lemma lem6773609 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2502 A K dom f neut _88524 i) = (term2505 A K dom f neut _88524 i).
Proof. exact (MK_COMB (@lem6773605 A K dom f _88524) (@lem6773608 A K f neut _88524 i)). Qed.
Lemma lem6773610 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2501 A K dom f neut _88524 i) = (term2505 A K dom f neut _88524 i).
Proof. exact (TRANS (@lem6773600 A K dom f neut _88524 i) (@lem6773609 A K dom f neut _88524 i)). Qed.
Lemma lem6773611 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2500 A K k dom f neut _88524 i) = (term2506 A K k dom f neut _88524 i).
Proof. exact (MK_COMB (@lem6773597 K k _88524) (@lem6773610 A K dom f neut _88524 i)). Qed.
Lemma lem6773612 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2499 A K k dom f neut _88524 i) = (term2506 A K k dom f neut _88524 i).
Proof. exact (TRANS (@lem6773592 A K k dom f neut _88524 i) (@lem6773611 A K k dom f neut _88524 i)). Qed.
Lemma lem6773613 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6773614 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (_88524 : K) (i : K) : (term2507 A K k dom f neut _88524 i) = (term2508 A K k dom f neut _88524 i).
Proof. exact (MK_COMB (@lem6773613) (@lem6773612 A K k dom f neut _88524 i)). Qed.
Lemma lem6773615 {K : Type'} (ltle : type1402 K) (_88524 : K) (i : K) : (term1195 K ltle _88524 i) = (term1195 K ltle _88524 i).
Proof. exact (eq_refl (term1195 K ltle _88524 i)). Qed.
Lemma lem6773616 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88524 : K) (i : K) : (term2498 A K k dom f neut ltle _88524 i) = (term2509 A K k dom f neut ltle _88524 i).
Proof. exact (MK_COMB (@lem6773614 A K k dom f neut _88524 i) (@lem6773615 K ltle _88524 i)). Qed.
Lemma lem6773617 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88524 : K) (i : K) : (term2141 A K ltle k dom f neut _88524 i) = (term2509 A K k dom f neut ltle _88524 i).
Proof. exact (TRANS (@lem6773589 A K k dom f neut ltle _88524 i) (@lem6773616 A K k dom f neut ltle _88524 i)). Qed.
Lemma lem6773619 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2382 A K ltle i k dom f neut j) : term2504 A K f neut j i.
Proof. exact (conj (@lem6773578 A K ltle i k dom f neut j h2) (@lem6773586 K j i h1)). Qed.
Lemma lem6773620 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2382 A K ltle i k dom f neut j) : term2505 A K dom f neut j i.
Proof. exact (conj (@lem6773571 A K ltle i k dom f neut j h2) (@lem6773619 A K ltle i k dom f neut j h1 h2)). Qed.
Lemma lem6773621 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2382 A K ltle i k dom f neut j) : term2506 A K k dom f neut j i.
Proof. exact (conj (@lem6773564 A K ltle i k dom f neut j h2) (@lem6773620 A K ltle i k dom f neut j h1 h2)). Qed.
Lemma lem6773623 {A K : Type'} (_88524 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2509 A K k dom f neut ltle _88524 i.
Proof. exact (EQ_MP (@lem6773617 A K k dom f neut ltle _88524 i) (@lem6773105 A K _88524 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773624 {A K : Type'} (_88524 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2509 A K k dom f neut ltle _88524 i.
Proof. exact (@lem6773623 A K _88524 j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773625 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2509 A K k dom f neut ltle j i.
Proof. exact (@lem6773624 A K j j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773628 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : term1195 K ltle j i.
Proof. exact (@lem6773625 A K j ltle i _88511 k dom f neut h2 (@lem6773621 A K ltle i k dom f neut j h1 h3)). Qed.
Lemma lem6773629 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : term2510 K ltle j i.
Proof. exact (fun h0 : term1172 K ltle j i => @lem6773628 A K _88511 ltle i k dom f neut j h1 h2 h3). Qed.
Lemma lem6773631 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6773632 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term2510 K ltle j i) = (term1195 K ltle j i).
Proof. exact (@lem6773631 (term1172 K ltle j i)). Qed.
Lemma lem6773633 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : term1195 K ltle j i.
Proof. exact (EQ_MP (@lem6773632 K ltle j i) (@lem6773629 A K _88511 ltle i k dom f neut j h1 h2 h3)). Qed.
Lemma lem6773639 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773640 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term1180 K k ltle _88525 i) = (term2511 K k ltle _88525 i).
Proof. exact (@lem6773639 (i = _88525) (term1178 K k _88525) (term1176 K ltle _88525 i)). Qed.
Lemma lem6773656 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773657 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2512 K k ltle _88525 i) = (term2513 K k ltle _88525 i).
Proof. exact (@lem6773656 (term1172 K ltle i _88525) (term1178 K k _88525) (term1172 K ltle _88525 i)). Qed.
Lemma lem6773671 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6773672 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2514 K k ltle _88525 i) = (term2515 K ltle i k _88525).
Proof. exact (@lem6773671 (term1172 K ltle _88525 i) (term1178 K k _88525)). Qed.
Lemma lem6773678 {K : Type'} (ltle : type1402 K) (i : K) (_88525 : K) : (term1174 K ltle i _88525) = (term1174 K ltle i _88525).
Proof. exact (eq_refl (term1174 K ltle i _88525)). Qed.
Lemma lem6773679 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2513 K k ltle _88525 i) = (term2516 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773678 K ltle i _88525) (@lem6773672 K ltle i k _88525)). Qed.
Lemma lem6773683 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773684 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2516 K ltle i k _88525) = (term2517 K ltle i k _88525).
Proof. exact (@lem6773683 (term1172 K ltle _88525 i) (term1172 K ltle i _88525) (term1178 K k _88525)). Qed.
Lemma lem6773700 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2513 K k ltle _88525 i) = (term2517 K ltle i k _88525).
Proof. exact (TRANS (@lem6773679 K ltle i k _88525) (@lem6773684 K ltle i k _88525)). Qed.
Lemma lem6773701 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2512 K k ltle _88525 i) = (term2517 K ltle i k _88525).
Proof. exact (TRANS (@lem6773657 K k ltle _88525 i) (@lem6773700 K ltle i k _88525)). Qed.
Lemma lem6773702 {K : Type'} (i : K) (_88525 : K) : (term38 K i _88525) = (term38 K i _88525).
Proof. exact (eq_refl (term38 K i _88525)). Qed.
Lemma lem6773703 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2511 K k ltle _88525 i) = (term2518 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773702 K i _88525) (@lem6773701 K ltle i k _88525)). Qed.
Lemma lem6773714 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term1180 K k ltle _88525 i) = (term2518 K ltle i k _88525).
Proof. exact (TRANS (@lem6773640 K k ltle _88525 i) (@lem6773703 K ltle i k _88525)). Qed.
Lemma lem6773715 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6773716 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2519 K k ltle _88525 i) = (term2520 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773715) (@lem6773714 K ltle i k _88525)). Qed.
Lemma lem6773730 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773731 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2521 K k ltle _88525 i) = (term2522 K k ltle _88525 i).
Proof. exact (@lem6773730 (i = _88525) (term1178 K k _88525) (term1172 K ltle _88525 i)). Qed.
Lemma lem6773747 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6773748 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2514 K k ltle _88525 i) = (term2515 K ltle i k _88525).
Proof. exact (@lem6773747 (term1172 K ltle _88525 i) (term1178 K k _88525)). Qed.
Lemma lem6773754 {K : Type'} (i : K) (_88525 : K) : (term38 K i _88525) = (term38 K i _88525).
Proof. exact (eq_refl (term38 K i _88525)). Qed.
Lemma lem6773755 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2522 K k ltle _88525 i) = (term2523 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773754 K i _88525) (@lem6773748 K ltle i k _88525)). Qed.
Lemma lem6773766 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2521 K k ltle _88525 i) = (term2523 K ltle i k _88525).
Proof. exact (TRANS (@lem6773731 K k ltle _88525 i) (@lem6773755 K ltle i k _88525)). Qed.
Lemma lem6773767 {K : Type'} (ltle : type1402 K) (i : K) (_88525 : K) : (term1174 K ltle i _88525) = (term1174 K ltle i _88525).
Proof. exact (eq_refl (term1174 K ltle i _88525)). Qed.
Lemma lem6773768 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2524 K k ltle _88525 i) = (term2525 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773767 K ltle i _88525) (@lem6773766 K ltle i k _88525)). Qed.
Lemma lem6773772 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773773 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2525 K ltle i k _88525) = (term2526 K ltle i k _88525).
Proof. exact (@lem6773772 (i = _88525) (term1172 K ltle i _88525) (term2515 K ltle i k _88525)). Qed.
Lemma lem6773789 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773790 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2516 K ltle i k _88525) = (term2517 K ltle i k _88525).
Proof. exact (@lem6773789 (term1172 K ltle _88525 i) (term1172 K ltle i _88525) (term1178 K k _88525)). Qed.
Lemma lem6773806 {K : Type'} (i : K) (_88525 : K) : (term38 K i _88525) = (term38 K i _88525).
Proof. exact (eq_refl (term38 K i _88525)). Qed.
Lemma lem6773807 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2526 K ltle i k _88525) = (term2518 K ltle i k _88525).
Proof. exact (MK_COMB (@lem6773806 K i _88525) (@lem6773790 K ltle i k _88525)). Qed.
Lemma lem6773818 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2525 K ltle i k _88525) = (term2518 K ltle i k _88525).
Proof. exact (TRANS (@lem6773773 K ltle i k _88525) (@lem6773807 K ltle i k _88525)). Qed.
Lemma lem6773819 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : (term2524 K k ltle _88525 i) = (term2518 K ltle i k _88525).
Proof. exact (TRANS (@lem6773768 K ltle i k _88525) (@lem6773818 K ltle i k _88525)). Qed.
Lemma lem6773820 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : ((term1180 K k ltle _88525 i) = (term2524 K k ltle _88525 i)) = ((term2518 K ltle i k _88525) = (term2518 K ltle i k _88525)).
Proof. exact (MK_COMB (@lem6773716 K ltle i k _88525) (@lem6773819 K ltle i k _88525)). Qed.
Lemma lem6773822 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6773823 (x : Prop) : (x = x) = True.
Proof. exact (@lem6773822 Prop x). Qed.
Lemma lem6773824 {K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (_88525 : K) : ((term2518 K ltle i k _88525) = (term2518 K ltle i k _88525)) = True.
Proof. exact (@lem6773823 (term2518 K ltle i k _88525)). Qed.
Lemma lem6773825 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : ((term1180 K k ltle _88525 i) = (term2524 K k ltle _88525 i)) = True.
Proof. exact (TRANS (@lem6773820 K ltle i k _88525) (@lem6773824 K ltle i k _88525)). Qed.
Lemma lem6773826 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : True = ((term1180 K k ltle _88525 i) = (term2524 K k ltle _88525 i)).
Proof. exact (SYM (@lem6773825 K k ltle _88525 i)). Qed.
Lemma lem6773827 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term1180 K k ltle _88525 i) = (term2524 K k ltle _88525 i).
Proof. exact (EQ_MP (@lem6773826 K k ltle _88525 i) (@lem0)). Qed.
Lemma lem6773828 {A K : Type'} (_88525 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2524 K k ltle _88525 i.
Proof. exact (EQ_MP (@lem6773827 K k ltle _88525 i) (@lem6773119 A K _88525 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773830 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6773831 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) (_88525 : K) : (term2524 K k ltle _88525 i) = (term2527 K k ltle i _88525).
Proof. exact (@lem6773830 (term2521 K k ltle _88525 i) (term1172 K ltle i _88525)). Qed.
Lemma lem6773833 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6773834 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2528 K k ltle _88525 i) = (term2529 K k ltle _88525 i).
Proof. exact (@lem6773833 (term1178 K k _88525) (term2530 K ltle _88525 i)). Qed.
Lemma lem6773836 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6773837 {K : Type'} (k : K -> Prop) (_88525 : K) : (term2185 K k _88525) = (@I (K -> Prop) k _88525).
Proof. exact (@lem6773836 (@I (K -> Prop) k _88525)). Qed.
Lemma lem6773838 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6773839 {K : Type'} (k : K -> Prop) (_88525 : K) : (term2186 K k _88525) = (term1211 K k _88525).
Proof. exact (MK_COMB (@lem6773838) (@lem6773837 K k _88525)). Qed.
Lemma lem6773841 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6773842 {K : Type'} (ltle : type1402 K) (_88525 : K) (i : K) : (term2531 K ltle _88525 i) = (term2532 K ltle _88525 i).
Proof. exact (@lem6773841 (i = _88525) (term1172 K ltle _88525 i)). Qed.
Lemma lem6773843 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2529 K k ltle _88525 i) = (term2533 K k ltle _88525 i).
Proof. exact (MK_COMB (@lem6773839 K k _88525) (@lem6773842 K ltle _88525 i)). Qed.
Lemma lem6773844 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2528 K k ltle _88525 i) = (term2533 K k ltle _88525 i).
Proof. exact (TRANS (@lem6773834 K k ltle _88525 i) (@lem6773843 K k ltle _88525 i)). Qed.
Lemma lem6773845 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6773846 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (_88525 : K) (i : K) : (term2534 K k ltle _88525 i) = (term2535 K k ltle _88525 i).
Proof. exact (MK_COMB (@lem6773845) (@lem6773844 K k ltle _88525 i)). Qed.
Lemma lem6773847 {K : Type'} (ltle : type1402 K) (i : K) (_88525 : K) : (term1172 K ltle i _88525) = (term1172 K ltle i _88525).
Proof. exact (eq_refl (term1172 K ltle i _88525)). Qed.
Lemma lem6773848 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) (_88525 : K) : (term2527 K k ltle i _88525) = (term2536 K k ltle i _88525).
Proof. exact (MK_COMB (@lem6773846 K k ltle _88525 i) (@lem6773847 K ltle i _88525)). Qed.
Lemma lem6773849 {K : Type'} (k : K -> Prop) (ltle : type1402 K) (i : K) (_88525 : K) : (term2524 K k ltle _88525 i) = (term2536 K k ltle i _88525).
Proof. exact (TRANS (@lem6773831 K k ltle i _88525) (@lem6773848 K k ltle i _88525)). Qed.
Lemma lem6773851 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term2532 K ltle j i.
Proof. exact (conj (@lem6773557 K i j h1) (@lem6773633 A K _88511 ltle i k dom f neut j h2 h3 h4)). Qed.
Lemma lem6773852 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term2533 K k ltle j i.
Proof. exact (conj (@lem6773549 A K ltle i k dom f neut j h4) (@lem6773851 A K _88511 ltle i k dom f neut j h1 h2 h3 h4)). Qed.
Lemma lem6773854 {A K : Type'} (_88525 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2536 K k ltle i _88525.
Proof. exact (EQ_MP (@lem6773849 K k ltle i _88525) (@lem6773828 A K _88525 j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773855 {A K : Type'} (_88525 : K) (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2536 K k ltle i _88525.
Proof. exact (@lem6773854 A K _88525 j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773856 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2536 K k ltle i j.
Proof. exact (@lem6773855 A K j j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773859 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term1172 K ltle i j.
Proof. exact (@lem6773856 A K j ltle i _88511 k dom f neut h3 (@lem6773852 A K _88511 ltle i k dom f neut j h1 h2 h3 h4)). Qed.
Lemma lem6773860 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term2142 K ltle i j.
Proof. exact (fun h0 : term1195 K ltle i j => @lem6773859 A K _88511 ltle i k dom f neut j h1 h2 h3 h4). Qed.
Lemma lem6773862 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773863 {K : Type'} (ltle : type1402 K) (i : K) (j : K) : (term2142 K ltle i j) = (term1172 K ltle i j).
Proof. exact (@lem6773862 (term1172 K ltle i j)). Qed.
Lemma lem6773864 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term1172 K ltle i j.
Proof. exact (EQ_MP (@lem6773863 K ltle i j) (@lem6773860 A K _88511 ltle i k dom f neut j h1 h2 h3 h4)). Qed.
Lemma lem6773866 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6773867 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6773866 K x). Qed.
Lemma lem6773868 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6773867 K i). Qed.
Lemma lem6773869 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6773868 K i). Qed.
Lemma lem6773871 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773872 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6773871 (i = i)). Qed.
Lemma lem6773873 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6773872 K i) (@lem6773869 K i)). Qed.
Lemma lem6773875 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1188 A K dom f i.
Proof. exact (proj1 (@lem6772774 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773876 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1247 A K dom f i.
Proof. exact (fun h0 : term1190 A K dom f i => @lem6773875 A K j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773878 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6773879 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) : (term1247 A K dom f i) = (term1188 A K dom f i).
Proof. exact (@lem6773878 (term1188 A K dom f i)). Qed.
Lemma lem6773880 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1188 A K dom f i.
Proof. exact (EQ_MP (@lem6773879 A K dom f i) (@lem6773876 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773882 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1208 A K f i neut.
Proof. exact (proj1 (@lem6772772 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773883 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2497 A K f i neut.
Proof. exact (fun h0 : (@I (K -> A) f i) = neut => @lem6773882 A K j ltle i _88511 k dom f neut h1). Qed.
Lemma lem6773885 (p : Prop) : (term2144 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6773886 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term2497 A K f i neut) = (term1208 A K f i neut).
Proof. exact (@lem6773885 ((@I (K -> A) f i) = neut)). Qed.
Lemma lem6773887 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1208 A K f i neut.
Proof. exact (EQ_MP (@lem6773886 A K f i neut) (@lem6773883 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6773893 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773894 {A K : Type'} (i : K) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2495 A K ltle i dom f neut _88523 j) = (term2537 A K i ltle dom f neut _88523 j).
Proof. exact (@lem6773893 (term2 K _88523 i) (term1195 K ltle _88523 j) (term2139 A K dom f neut _88523 j)). Qed.
Lemma lem6773910 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773911 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2146 A K ltle dom f neut _88523 j) = (term2147 A K dom ltle f neut _88523 j).
Proof. exact (@lem6773910 (term1190 A K dom f _88523) (term1195 K ltle _88523 j) (term2148 A K f neut _88523 j)). Qed.
Lemma lem6773925 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773926 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2149 A K ltle f neut _88523 j) = (term2150 A K f neut ltle _88523 j).
Proof. exact (@lem6773925 ((@I (K -> A) f _88523) = neut) (term1195 K ltle _88523 j) (_88523 = j)). Qed.
Lemma lem6773942 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6773943 {K : Type'} (ltle : type1402 K) (_88523 : K) (j : K) : (term2151 K ltle _88523 j) = (term2152 K ltle _88523 j).
Proof. exact (@lem6773942 (_88523 = j) (term1195 K ltle _88523 j)). Qed.
Lemma lem6773951 {A K : Type'} (f : K -> A) (_88523 : K) (neut : A) : (term2153 A K f _88523 neut) = (term2153 A K f _88523 neut).
Proof. exact (eq_refl (term2153 A K f _88523 neut)). Qed.
Lemma lem6773952 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2150 A K f neut ltle _88523 j) = (term2154 A K f neut ltle _88523 j).
Proof. exact (MK_COMB (@lem6773951 A K f _88523 neut) (@lem6773943 K ltle _88523 j)). Qed.
Lemma lem6773963 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2149 A K ltle f neut _88523 j) = (term2154 A K f neut ltle _88523 j).
Proof. exact (TRANS (@lem6773926 A K f neut ltle _88523 j) (@lem6773952 A K f neut ltle _88523 j)). Qed.
Lemma lem6773964 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) : (term1191 A K dom f _88523) = (term1191 A K dom f _88523).
Proof. exact (eq_refl (term1191 A K dom f _88523)). Qed.
Lemma lem6773965 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2147 A K dom ltle f neut _88523 j) = (term2155 A K dom f neut ltle _88523 j).
Proof. exact (MK_COMB (@lem6773964 A K dom f _88523) (@lem6773963 A K f neut ltle _88523 j)). Qed.
Lemma lem6773969 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773970 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2155 A K dom f neut ltle _88523 j) = (term2156 A K neut dom f ltle _88523 j).
Proof. exact (@lem6773969 ((@I (K -> A) f _88523) = neut) (term1190 A K dom f _88523) (term2152 K ltle _88523 j)). Qed.
Lemma lem6773986 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6773987 {A K : Type'} (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2157 A K dom f ltle _88523 j) = (term2158 A K dom f ltle _88523 j).
Proof. exact (@lem6773986 (_88523 = j) (term1190 A K dom f _88523) (term1195 K ltle _88523 j)). Qed.
Lemma lem6774005 {A K : Type'} (f : K -> A) (_88523 : K) (neut : A) : (term2153 A K f _88523 neut) = (term2153 A K f _88523 neut).
Proof. exact (eq_refl (term2153 A K f _88523 neut)). Qed.
Lemma lem6774006 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2156 A K neut dom f ltle _88523 j) = (term2159 A K neut dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774005 A K f _88523 neut) (@lem6773987 A K dom f ltle _88523 j)). Qed.
Lemma lem6774017 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2155 A K dom f neut ltle _88523 j) = (term2159 A K neut dom f ltle _88523 j).
Proof. exact (TRANS (@lem6773970 A K neut dom f ltle _88523 j) (@lem6774006 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774018 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2147 A K dom ltle f neut _88523 j) = (term2159 A K neut dom f ltle _88523 j).
Proof. exact (TRANS (@lem6773965 A K dom f neut ltle _88523 j) (@lem6774017 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774019 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2146 A K ltle dom f neut _88523 j) = (term2159 A K neut dom f ltle _88523 j).
Proof. exact (TRANS (@lem6773911 A K dom ltle f neut _88523 j) (@lem6774018 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774020 {K : Type'} (_88523 : K) (i : K) : (term1364 K _88523 i) = (term1364 K _88523 i).
Proof. exact (eq_refl (term1364 K _88523 i)). Qed.
Lemma lem6774021 {A K : Type'} (i : K) (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2537 A K i ltle dom f neut _88523 j) = (term2538 A K i neut dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774020 K _88523 i) (@lem6774019 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774025 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774026 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2538 A K i neut dom f ltle _88523 j) = (term2539 A K neut i dom f ltle _88523 j).
Proof. exact (@lem6774025 ((@I (K -> A) f _88523) = neut) (term2 K _88523 i) (term2158 A K dom f ltle _88523 j)). Qed.
Lemma lem6774042 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774043 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2540 A K i dom f ltle _88523 j) = (term2541 A K i dom f ltle _88523 j).
Proof. exact (@lem6774042 (_88523 = j) (term2 K _88523 i) (term2164 A K dom f ltle _88523 j)). Qed.
Lemma lem6774073 {A K : Type'} (f : K -> A) (_88523 : K) (neut : A) : (term2153 A K f _88523 neut) = (term2153 A K f _88523 neut).
Proof. exact (eq_refl (term2153 A K f _88523 neut)). Qed.
Lemma lem6774074 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2539 A K neut i dom f ltle _88523 j) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774073 A K f _88523 neut) (@lem6774043 A K i dom f ltle _88523 j)). Qed.
Lemma lem6774085 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2538 A K i neut dom f ltle _88523 j) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774026 A K neut i dom f ltle _88523 j) (@lem6774074 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774086 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2537 A K i ltle dom f neut _88523 j) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774021 A K i neut dom f ltle _88523 j) (@lem6774085 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774087 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2495 A K ltle i dom f neut _88523 j) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6773894 A K i ltle dom f neut _88523 j) (@lem6774086 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774088 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6774089 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2543 A K ltle i dom f neut _88523 j) = (term2544 A K neut i dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774088) (@lem6774087 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774105 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774106 {A K : Type'} (i : K) (ltle : type1402 K) (j : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2485 A K ltle j i dom f _88523 neut) = (term2545 A K i ltle j dom f _88523 neut).
Proof. exact (@lem6774105 (term2 K _88523 i) (term1195 K ltle _88523 j) (term1192 A K dom f _88523 neut)). Qed.
Lemma lem6774122 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774123 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (j : K) (f : K -> A) (_88523 : K) (neut : A) : (term2546 A K ltle j dom f _88523 neut) = (term2547 A K dom ltle j f _88523 neut).
Proof. exact (@lem6774122 (term1190 A K dom f _88523) (term1195 K ltle _88523 j) ((@I (K -> A) f _88523) = neut)). Qed.
Lemma lem6774137 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6774138 {A K : Type'} (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2548 A K ltle j f _88523 neut) = (term2549 A K f neut ltle _88523 j).
Proof. exact (@lem6774137 ((@I (K -> A) f _88523) = neut) (term1195 K ltle _88523 j)). Qed.
Lemma lem6774146 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) : (term1191 A K dom f _88523) = (term1191 A K dom f _88523).
Proof. exact (eq_refl (term1191 A K dom f _88523)). Qed.
Lemma lem6774147 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2547 A K dom ltle j f _88523 neut) = (term2550 A K dom f neut ltle _88523 j).
Proof. exact (MK_COMB (@lem6774146 A K dom f _88523) (@lem6774138 A K f neut ltle _88523 j)). Qed.
Lemma lem6774151 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774152 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2550 A K dom f neut ltle _88523 j) = (term2551 A K neut dom f ltle _88523 j).
Proof. exact (@lem6774151 ((@I (K -> A) f _88523) = neut) (term1190 A K dom f _88523) (term1195 K ltle _88523 j)). Qed.
Lemma lem6774170 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2547 A K dom ltle j f _88523 neut) = (term2551 A K neut dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774147 A K dom f neut ltle _88523 j) (@lem6774152 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774171 {A K : Type'} (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2546 A K ltle j dom f _88523 neut) = (term2551 A K neut dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774123 A K dom ltle j f _88523 neut) (@lem6774170 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774172 {K : Type'} (_88523 : K) (i : K) : (term1364 K _88523 i) = (term1364 K _88523 i).
Proof. exact (eq_refl (term1364 K _88523 i)). Qed.
Lemma lem6774173 {A K : Type'} (i : K) (neut : A) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2545 A K i ltle j dom f _88523 neut) = (term2552 A K i neut dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774172 K _88523 i) (@lem6774171 A K neut dom f ltle _88523 j)). Qed.
Lemma lem6774177 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774178 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2552 A K i neut dom f ltle _88523 j) = (term2553 A K neut i dom f ltle _88523 j).
Proof. exact (@lem6774177 ((@I (K -> A) f _88523) = neut) (term2 K _88523 i) (term2164 A K dom f ltle _88523 j)). Qed.
Lemma lem6774208 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2545 A K i ltle j dom f _88523 neut) = (term2553 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774173 A K i neut dom f ltle _88523 j) (@lem6774178 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774209 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2485 A K ltle j i dom f _88523 neut) = (term2553 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774106 A K i ltle j dom f _88523 neut) (@lem6774208 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774210 {K : Type'} (_88523 : K) (j : K) : (term38 K _88523 j) = (term38 K _88523 j).
Proof. exact (eq_refl (term38 K _88523 j)). Qed.
Lemma lem6774211 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2554 A K ltle j i dom f _88523 neut) = (term2555 A K neut i dom f ltle _88523 j).
Proof. exact (MK_COMB (@lem6774210 K _88523 j) (@lem6774209 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774215 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774216 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2555 A K neut i dom f ltle _88523 j) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (@lem6774215 ((@I (K -> A) f _88523) = neut) (_88523 = j) (term2556 A K i dom f ltle _88523 j)). Qed.
Lemma lem6774258 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : (term2554 A K ltle j i dom f _88523 neut) = (term2542 A K neut i dom f ltle _88523 j).
Proof. exact (TRANS (@lem6774211 A K neut i dom f ltle _88523 j) (@lem6774216 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774259 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : ((term2495 A K ltle i dom f neut _88523 j) = (term2554 A K ltle j i dom f _88523 neut)) = ((term2542 A K neut i dom f ltle _88523 j) = (term2542 A K neut i dom f ltle _88523 j)).
Proof. exact (MK_COMB (@lem6774089 A K neut i dom f ltle _88523 j) (@lem6774258 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774261 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6774262 (x : Prop) : (x = x) = True.
Proof. exact (@lem6774261 Prop x). Qed.
Lemma lem6774263 {A K : Type'} (neut : A) (i : K) (dom : A -> Prop) (f : K -> A) (ltle : type1402 K) (_88523 : K) (j : K) : ((term2542 A K neut i dom f ltle _88523 j) = (term2542 A K neut i dom f ltle _88523 j)) = True.
Proof. exact (@lem6774262 (term2542 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774264 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : ((term2495 A K ltle i dom f neut _88523 j) = (term2554 A K ltle j i dom f _88523 neut)) = True.
Proof. exact (TRANS (@lem6774259 A K neut i dom f ltle _88523 j) (@lem6774263 A K neut i dom f ltle _88523 j)). Qed.
Lemma lem6774265 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : True = ((term2495 A K ltle i dom f neut _88523 j) = (term2554 A K ltle j i dom f _88523 neut)).
Proof. exact (SYM (@lem6774264 A K ltle j i dom f _88523 neut)). Qed.
Lemma lem6774266 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2495 A K ltle i dom f neut _88523 j) = (term2554 A K ltle j i dom f _88523 neut).
Proof. exact (EQ_MP (@lem6774265 A K ltle j i dom f _88523 neut) (@lem0)). Qed.
Lemma lem6774267 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2554 A K ltle j i dom f _88523 neut.
Proof. exact (EQ_MP (@lem6774266 A K ltle j i dom f _88523 neut) (@lem6773145 A K _88523 ltle i k dom f neut j h1)). Qed.
Lemma lem6774269 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6774270 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2554 A K ltle j i dom f _88523 neut) = (term2557 A K ltle i dom f neut _88523 j).
Proof. exact (@lem6774269 (term2485 A K ltle j i dom f _88523 neut) (_88523 = j)). Qed.
Lemma lem6774272 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6774273 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2558 A K ltle j i dom f _88523 neut) = (term2559 A K ltle j i dom f _88523 neut).
Proof. exact (@lem6774272 (term1195 K ltle _88523 j) (term1362 A K i dom f _88523 neut)). Qed.
Lemma lem6774275 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6774276 {K : Type'} (ltle : type1402 K) (_88523 : K) (j : K) : (term2181 K ltle _88523 j) = (term1172 K ltle _88523 j).
Proof. exact (@lem6774275 (term1172 K ltle _88523 j)). Qed.
Lemma lem6774277 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6774278 {K : Type'} (ltle : type1402 K) (_88523 : K) (j : K) : (term2182 K ltle _88523 j) = (term2127 K ltle _88523 j).
Proof. exact (MK_COMB (@lem6774277) (@lem6774276 K ltle _88523 j)). Qed.
Lemma lem6774280 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6774281 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2560 A K i dom f _88523 neut) = (term2561 A K i dom f _88523 neut).
Proof. exact (@lem6774280 (term2 K _88523 i) (term1192 A K dom f _88523 neut)). Qed.
Lemma lem6774283 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6774284 {K : Type'} (_88523 : K) (i : K) : (term69 K _88523 i) = (_88523 = i).
Proof. exact (@lem6774283 (_88523 = i)). Qed.
Lemma lem6774285 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6774286 {K : Type'} (_88523 : K) (i : K) : (term1377 K _88523 i) = (term1378 K _88523 i).
Proof. exact (MK_COMB (@lem6774285) (@lem6774284 K _88523 i)). Qed.
Lemma lem6774288 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6774289 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2562 A K dom f _88523 neut) = (term2563 A K dom f _88523 neut).
Proof. exact (@lem6774288 (term1190 A K dom f _88523) ((@I (K -> A) f _88523) = neut)). Qed.
Lemma lem6774291 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6774292 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) : (term1379 A K dom f _88523) = (term1188 A K dom f _88523).
Proof. exact (@lem6774291 (term1188 A K dom f _88523)). Qed.
Lemma lem6774293 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6774294 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) : (term2189 A K dom f _88523) = (term1209 A K dom f _88523).
Proof. exact (MK_COMB (@lem6774293) (@lem6774292 A K dom f _88523)). Qed.
Lemma lem6774295 {A K : Type'} (f : K -> A) (_88523 : K) (neut : A) : (term1208 A K f _88523 neut) = (term1208 A K f _88523 neut).
Proof. exact (eq_refl (term1208 A K f _88523 neut)). Qed.
Lemma lem6774296 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2563 A K dom f _88523 neut) = (term1210 A K dom f _88523 neut).
Proof. exact (MK_COMB (@lem6774294 A K dom f _88523) (@lem6774295 A K f _88523 neut)). Qed.
Lemma lem6774297 {A K : Type'} (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2562 A K dom f _88523 neut) = (term1210 A K dom f _88523 neut).
Proof. exact (TRANS (@lem6774289 A K dom f _88523 neut) (@lem6774296 A K dom f _88523 neut)). Qed.
Lemma lem6774298 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2561 A K i dom f _88523 neut) = (term2564 A K i dom f _88523 neut).
Proof. exact (MK_COMB (@lem6774286 K _88523 i) (@lem6774297 A K dom f _88523 neut)). Qed.
Lemma lem6774299 {A K : Type'} (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2560 A K i dom f _88523 neut) = (term2564 A K i dom f _88523 neut).
Proof. exact (TRANS (@lem6774281 A K i dom f _88523 neut) (@lem6774298 A K i dom f _88523 neut)). Qed.
Lemma lem6774300 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2559 A K ltle j i dom f _88523 neut) = (term2565 A K ltle j i dom f _88523 neut).
Proof. exact (MK_COMB (@lem6774278 K ltle _88523 j) (@lem6774299 A K i dom f _88523 neut)). Qed.
Lemma lem6774301 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2558 A K ltle j i dom f _88523 neut) = (term2565 A K ltle j i dom f _88523 neut).
Proof. exact (TRANS (@lem6774273 A K ltle j i dom f _88523 neut) (@lem6774300 A K ltle j i dom f _88523 neut)). Qed.
Lemma lem6774302 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6774303 {A K : Type'} (ltle : type1402 K) (j : K) (i : K) (dom : A -> Prop) (f : K -> A) (_88523 : K) (neut : A) : (term2566 A K ltle j i dom f _88523 neut) = (term2567 A K ltle j i dom f _88523 neut).
Proof. exact (MK_COMB (@lem6774302) (@lem6774301 A K ltle j i dom f _88523 neut)). Qed.
Lemma lem6774304 {K : Type'} (_88523 : K) (j : K) : (_88523 = j) = (_88523 = j).
Proof. exact (eq_refl (_88523 = j)). Qed.
Lemma lem6774305 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2557 A K ltle i dom f neut _88523 j) = (term2568 A K ltle i dom f neut _88523 j).
Proof. exact (MK_COMB (@lem6774303 A K ltle j i dom f _88523 neut) (@lem6774304 K _88523 j)). Qed.
Lemma lem6774306 {A K : Type'} (ltle : type1402 K) (i : K) (dom : A -> Prop) (f : K -> A) (neut : A) (_88523 : K) (j : K) : (term2554 A K ltle j i dom f _88523 neut) = (term2568 A K ltle i dom f neut _88523 j).
Proof. exact (TRANS (@lem6774270 A K ltle i dom f neut _88523 j) (@lem6774305 A K ltle i dom f neut _88523 j)). Qed.
Lemma lem6774308 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term1210 A K dom f i neut.
Proof. exact (conj (@lem6773880 A K j ltle i _88511 k dom f neut h1) (@lem6773887 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6774309 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2569 A K dom f i neut.
Proof. exact (conj (@lem6773873 K i) (@lem6774308 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6774310 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : term2570 A K ltle j dom f i neut.
Proof. exact (conj (@lem6773864 A K _88511 ltle i k dom f neut j h1 h2 h3 h4) (@lem6774309 A K j ltle i _88511 k dom f neut h3)). Qed.
Lemma lem6774312 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2568 A K ltle i dom f neut _88523 j.
Proof. exact (EQ_MP (@lem6774306 A K ltle i dom f neut _88523 j) (@lem6774267 A K _88523 ltle i k dom f neut j h1)). Qed.
Lemma lem6774313 {A K : Type'} (_88523 : K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2568 A K ltle i dom f neut _88523 j.
Proof. exact (@lem6774312 A K _88523 ltle i k dom f neut j h1). Qed.
Lemma lem6774314 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2382 A K ltle i k dom f neut j) : term2571 A K ltle dom f neut i j.
Proof. exact (@lem6774313 A K i ltle i k dom f neut j h1). Qed.
Lemma lem6774317 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K i j) (h2 : term2 K j i) (h3 : term2420 A K j ltle i _88511 k dom f neut) (h4 : term2382 A K ltle i k dom f neut j) : i = j.
Proof. exact (@lem6774314 A K ltle i k dom f neut j h4 (@lem6774310 A K _88511 ltle i k dom f neut j h1 h2 h3 h4)). Qed.
Lemma lem6774318 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : term2572 K i j.
Proof. exact (fun h0 : term2 K i j => @lem6774317 A K _88511 ltle i k dom f neut j h0 h1 h2 h3). Qed.
Lemma lem6774320 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6774321 {K : Type'} (i : K) (j : K) : (term2572 K i j) = (i = j).
Proof. exact (@lem6774320 (i = j)). Qed.
Lemma lem6774322 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : i = j.
Proof. exact (EQ_MP (@lem6774321 K i j) (@lem6774318 A K _88511 ltle i k dom f neut j h1 h2 h3)). Qed.
Lemma lem6774324 {K : Type'} (x : K) : x = x.
Proof. exact (@lem21386 K x). Qed.
Lemma lem6774325 {K : Type'} (x : K) : x = x.
Proof. exact (@lem6774324 K x). Qed.
Lemma lem6774326 {K : Type'} (i : K) : i = i.
Proof. exact (@lem6774325 K i). Qed.
Lemma lem6774327 {K : Type'} (i : K) : term93 K i.
Proof. exact (fun h0 : term86 K i => @lem6774326 K i). Qed.
Lemma lem6774329 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6774330 {K : Type'} (i : K) : (term93 K i) = (i = i).
Proof. exact (@lem6774329 (i = i)). Qed.
Lemma lem6774331 {K : Type'} (i : K) : i = i.
Proof. exact (EQ_MP (@lem6774330 K i) (@lem6774327 K i)). Qed.
Lemma lem6774349 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6774350 {K : Type'} (y : K) (x : K) (z : K) : (term2573 K x y z) = (term2574 K y x z).
Proof. exact (@lem6774349 (y = z) (term2 K x z)). Qed.
Lemma lem6774360 {K : Type'} (x : K) (y : K) : (term1364 K x y) = (term1364 K x y).
Proof. exact (eq_refl (term1364 K x y)). Qed.
Lemma lem6774361 {K : Type'} (y : K) (x : K) (z : K) : (term2496 K x y z) = (term2575 K y x z).
Proof. exact (MK_COMB (@lem6774360 K x y) (@lem6774350 K y x z)). Qed.
Lemma lem6774365 (q : Prop) (p : Prop) (r : Prop) : (term1366 p q r) = (term1366 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6774366 {K : Type'} (y : K) (x : K) (z : K) : (term2575 K y x z) = (term2576 K y x z).
Proof. exact (@lem6774365 (y = z) (term2 K x y) (term2 K x z)). Qed.
Lemma lem6774388 {K : Type'} (y : K) (x : K) (z : K) : (term2496 K x y z) = (term2576 K y x z).
Proof. exact (TRANS (@lem6774361 K y x z) (@lem6774366 K y x z)). Qed.
Lemma lem6774389 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6774390 {K : Type'} (y : K) (x : K) (z : K) : (term2577 K x y z) = (term2578 K y x z).
Proof. exact (MK_COMB (@lem6774389) (@lem6774388 K y x z)). Qed.
Lemma lem6774412 {K : Type'} (y : K) (x : K) (z : K) : (term2576 K y x z) = (term2576 K y x z).
Proof. exact (eq_refl (term2576 K y x z)). Qed.
Lemma lem6774413 {K : Type'} (y : K) (x : K) (z : K) : ((term2496 K x y z) = (term2576 K y x z)) = ((term2576 K y x z) = (term2576 K y x z)).
Proof. exact (MK_COMB (@lem6774390 K y x z) (@lem6774412 K y x z)). Qed.
Lemma lem6774415 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6774416 (x : Prop) : (x = x) = True.
Proof. exact (@lem6774415 Prop x). Qed.
Lemma lem6774417 {K : Type'} (y : K) (x : K) (z : K) : ((term2576 K y x z) = (term2576 K y x z)) = True.
Proof. exact (@lem6774416 (term2576 K y x z)). Qed.
Lemma lem6774418 {K : Type'} (y : K) (x : K) (z : K) : ((term2496 K x y z) = (term2576 K y x z)) = True.
Proof. exact (TRANS (@lem6774413 K y x z) (@lem6774417 K y x z)). Qed.
Lemma lem6774419 {K : Type'} (y : K) (x : K) (z : K) : True = ((term2496 K x y z) = (term2576 K y x z)).
Proof. exact (SYM (@lem6774418 K y x z)). Qed.
Lemma lem6774420 {K : Type'} (y : K) (x : K) (z : K) : (term2496 K x y z) = (term2576 K y x z).
Proof. exact (EQ_MP (@lem6774419 K y x z) (@lem0)). Qed.
Lemma lem6774421 {K : Type'} (y : K) (x : K) (z : K) : term2576 K y x z.
Proof. exact (EQ_MP (@lem6774420 K y x z) (@lem6773514 K x y z)). Qed.
Lemma lem6774423 (b : Prop) (a : Prop) : (a \/ b) = (term1370 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6774424 {K : Type'} (x : K) (y : K) (z : K) : (term2576 K y x z) = (term2579 K x y z).
Proof. exact (@lem6774423 (term2580 K y x z) (y = z)). Qed.
Lemma lem6774426 (a : Prop) (b : Prop) : (term1373 a b) = (term1374 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6774427 {K : Type'} (y : K) (x : K) (z : K) : (term2581 K y x z) = (term2582 K y x z).
Proof. exact (@lem6774426 (term2 K x y) (term2 K x z)). Qed.
Lemma lem6774429 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6774430 {K : Type'} (x : K) (y : K) : (term69 K x y) = (x = y).
Proof. exact (@lem6774429 (x = y)). Qed.
Lemma lem6774431 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6774432 {K : Type'} (x : K) (y : K) : (term1377 K x y) = (term1378 K x y).
Proof. exact (MK_COMB (@lem6774431) (@lem6774430 K x y)). Qed.
Lemma lem6774434 (a : Prop) : (term56 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6774435 {K : Type'} (x : K) (z : K) : (term69 K x z) = (x = z).
Proof. exact (@lem6774434 (x = z)). Qed.
Lemma lem6774436 {K : Type'} (y : K) (x : K) (z : K) : (term2582 K y x z) = (term2583 K y x z).
Proof. exact (MK_COMB (@lem6774432 K x y) (@lem6774435 K x z)). Qed.
Lemma lem6774437 {K : Type'} (y : K) (x : K) (z : K) : (term2581 K y x z) = (term2583 K y x z).
Proof. exact (TRANS (@lem6774427 K y x z) (@lem6774436 K y x z)). Qed.
Lemma lem6774438 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6774439 {K : Type'} (y : K) (x : K) (z : K) : (term2584 K y x z) = (term2585 K y x z).
Proof. exact (MK_COMB (@lem6774438) (@lem6774437 K y x z)). Qed.
Lemma lem6774440 {K : Type'} (y : K) (z : K) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6774441 {K : Type'} (x : K) (y : K) (z : K) : (term2579 K x y z) = (term2586 K x y z).
Proof. exact (MK_COMB (@lem6774439 K y x z) (@lem6774440 K y z)). Qed.
Lemma lem6774442 {K : Type'} (x : K) (y : K) (z : K) : (term2576 K y x z) = (term2586 K x y z).
Proof. exact (TRANS (@lem6774424 K x y z) (@lem6774441 K x y z)). Qed.
Lemma lem6774444 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : term2587 K j i.
Proof. exact (conj (@lem6774322 A K _88511 ltle i k dom f neut j h1 h2 h3) (@lem6774331 K i)). Qed.
Lemma lem6774446 {K : Type'} (x : K) (y : K) (z : K) : term2586 K x y z.
Proof. exact (EQ_MP (@lem6774442 K x y z) (@lem6774421 K y x z)). Qed.
Lemma lem6774447 {K : Type'} (x : K) (y : K) (z : K) : term2586 K x y z.
Proof. exact (@lem6774446 K x y z). Qed.
Lemma lem6774448 {K : Type'} (j : K) (i : K) : term2588 K j i.
Proof. exact (@lem6774447 K i j i). Qed.
Lemma lem6774451 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2 K j i) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : j = i.
Proof. exact (@lem6774448 K j i (@lem6774444 A K _88511 ltle i k dom f neut j h1 h2 h3)). Qed.
Lemma lem6774452 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2420 A K j ltle i _88511 k dom f neut) (h2 : term2382 A K ltle i k dom f neut j) : term2572 K j i.
Proof. exact (fun h0 : term2 K j i => @lem6774451 A K _88511 ltle i k dom f neut j h0 h1 h2). Qed.
Lemma lem6774454 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6774455 {K : Type'} (j : K) (i : K) : (term2572 K j i) = (j = i).
Proof. exact (@lem6774454 (j = i)). Qed.
Lemma lem6774456 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2420 A K j ltle i _88511 k dom f neut) (h2 : term2382 A K ltle i k dom f neut j) : j = i.
Proof. exact (EQ_MP (@lem6774455 K j i) (@lem6774452 A K _88511 ltle i k dom f neut j h1 h2)). Qed.
Lemma lem6774459 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6774461 {K : Type'} (j : K) (i : K) : (term2 K j i) = (term2589 K j i).
Proof. exact (@lem6774459 (j = i)). Qed.
Lemma lem6774464 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term2420 A K j ltle i _88511 k dom f neut) : term2589 K j i.
Proof. exact (EQ_MP (@lem6774461 K j i) (@lem6773075 A K j ltle i _88511 k dom f neut h1)). Qed.
Lemma lem6774467 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2420 A K j ltle i _88511 k dom f neut) (h2 : term2382 A K ltle i k dom f neut j) : False.
Proof. exact (@lem6774464 A K j ltle i _88511 k dom f neut h1 (@lem6774456 A K _88511 ltle i k dom f neut j h1 h2)). Qed.
Lemma lem6774468 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2420 A K j ltle i _88511 k dom f neut) (h2 : term2382 A K ltle i k dom f neut j) : term96.
Proof. exact (fun h0 : ~ False => @lem6774467 A K _88511 ltle i k dom f neut j h1 h2). Qed.
Lemma lem6774470 (p : Prop) : (term94 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6774471 : term96 = False.
Proof. exact (@lem6774470 False). Qed.
Lemma lem6774472 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2420 A K j ltle i _88511 k dom f neut) (h2 : term2382 A K ltle i k dom f neut j) : False.
Proof. exact (EQ_MP (@lem6774471) (@lem6774468 A K _88511 ltle i k dom f neut j h1 h2)). Qed.
Lemma lem6774473 {A K : Type'} (_88511 : type835 A K) (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term815 A K _88511) (h2 : term2420 A K j ltle i _88511 k dom f neut) (h3 : term2382 A K ltle i k dom f neut j) : False.
Proof. exact (ex_elim (@lem6771658 A K _88511 h1) (fun j' : type834 A K => fun h0 : term1120 A K _88511 j' => @lem6774472 A K _88511 ltle i k dom f neut j h2 h3)). Qed.
Lemma lem6774474 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _88511) (h2 : term2420 A K j ltle i _88511 k dom f neut) : term2590 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2382 A K ltle i k dom f neut j => @lem6774473 A K _88511 ltle i k dom f neut j h1 h2 h0). Qed.
Lemma lem6774475 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2590 A K ltle i k dom f neut j) = (term2383 A K ltle i k dom f neut j).
Proof. exact (@lem69 (term2382 A K ltle i k dom f neut j)). Qed.
Lemma lem6774476 {A K : Type'} (j : K) (ltle : type1402 K) (i : K) (_88511 : type835 A K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term815 A K _88511) (h2 : term2420 A K j ltle i _88511 k dom f neut) : term2383 A K ltle i k dom f neut j.
Proof. exact (EQ_MP (@lem6774475 A K ltle i k dom f neut j) (@lem6774474 A K j ltle i _88511 k dom f neut h1 h2)). Qed.
Lemma lem6774477 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2422 A K _88511 ltle i k dom f neut j.
Proof. exact (fun h0 : term2420 A K j ltle i _88511 k dom f neut => @lem6774476 A K j ltle i _88511 k dom f neut h1 h0). Qed.
Lemma lem6774482 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2424 A K _88511 i k dom f neut j.
Proof. exact (fun ltle : type1402 K => @lem6774477 A K ltle i k dom f neut j _88511 h1). Qed.
Lemma lem6774487 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2426 A K _88511 k dom f neut j.
Proof. exact (fun i : K => @lem6774482 A K i k dom f neut j _88511 h1). Qed.
Lemma lem6774492 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2428 A K _88511 dom f neut j.
Proof. exact (fun k : K -> Prop => @lem6774487 A K k dom f neut j _88511 h1). Qed.
Lemma lem6774497 {A K : Type'} (f : K -> A) (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2430 A K _88511 f neut j.
Proof. exact (fun dom : A -> Prop => @lem6774492 A K dom f neut j _88511 h1). Qed.
Lemma lem6774502 {A K : Type'} (neut : A) (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2432 A K _88511 neut j.
Proof. exact (fun f : K -> A => @lem6774497 A K f neut j _88511 h1). Qed.
Lemma lem6774507 {A K : Type'} (j : K) (_88511 : type835 A K) (h1 : term815 A K _88511) : term2434 A K _88511 j.
Proof. exact (fun neut : A => @lem6774502 A K neut j _88511 h1). Qed.
Lemma lem6774512 {A K : Type'} (_88511 : type835 A K) (h1 : term815 A K _88511) : term2436 A K _88511.
Proof. exact (fun j : K => @lem6774507 A K j _88511 h1). Qed.
Lemma lem6774513 {A K : Type'} (_88511 : type835 A K) : term2456 A K _88511.
Proof. exact (fun h0 : term815 A K _88511 => @lem6774512 A K _88511 h0). Qed.
Lemma lem6774518 {A K : Type'} : term2458 A K.
Proof. exact (fun _88511 : type835 A K => @lem6774513 A K _88511). Qed.
Lemma lem6774519 {A K : Type'} : term2418 A K.
Proof. exact (EQ_MP (@lem6770629 A K) (@lem6774518 A K)). Qed.
Lemma lem6774520 {A K : Type'} (j : K) : term2591 A K j.
Proof. exact (@lem6774519 A K j). Qed.
Lemma lem6774521 {A K : Type'} (j : K) : (term2591 A K j) = (term2414 A K j).
Proof. exact (eq_refl (term2591 A K j)). Qed.
Lemma lem6774522 {A K : Type'} (j : K) : term2414 A K j.
Proof. exact (EQ_MP (@lem6774521 A K j) (@lem6774520 A K j)). Qed.
Lemma lem6774523 {A K : Type'} (j : K) (neut : A) : term2592 A K j neut.
Proof. exact (@lem6774522 A K j neut). Qed.
Lemma lem6774524 {A K : Type'} (neut : A) (j : K) : (term2592 A K j neut) = (term2410 A K neut j).
Proof. exact (eq_refl (term2592 A K j neut)). Qed.
Lemma lem6774525 {A K : Type'} (neut : A) (j : K) : term2410 A K neut j.
Proof. exact (EQ_MP (@lem6774524 A K neut j) (@lem6774523 A K j neut)). Qed.
Lemma lem6774526 {A K : Type'} (neut : A) (j : K) (f : K -> A) : term2593 A K neut j f.
Proof. exact (@lem6774525 A K neut j f). Qed.
Lemma lem6774527 {A K : Type'} (f : K -> A) (neut : A) (j : K) : (term2593 A K neut j f) = (term2406 A K f neut j).
Proof. exact (eq_refl (term2593 A K neut j f)). Qed.
Lemma lem6774528 {A K : Type'} (f : K -> A) (neut : A) (j : K) : term2406 A K f neut j.
Proof. exact (EQ_MP (@lem6774527 A K f neut j) (@lem6774526 A K neut j f)). Qed.
Lemma lem6774529 {A K : Type'} (f : K -> A) (neut : A) (j : K) (dom : A -> Prop) : term2594 A K f neut j dom.
Proof. exact (@lem6774528 A K f neut j dom). Qed.
Lemma lem6774530 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2594 A K f neut j dom) = (term2402 A K dom f neut j).
Proof. exact (eq_refl (term2594 A K f neut j dom)). Qed.
Lemma lem6774531 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2402 A K dom f neut j.
Proof. exact (EQ_MP (@lem6774530 A K dom f neut j) (@lem6774529 A K f neut j dom)). Qed.
Lemma lem6774532 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (k : K -> Prop) : term2595 A K dom f neut j k.
Proof. exact (@lem6774531 A K dom f neut j k). Qed.
Lemma lem6774533 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2595 A K dom f neut j k) = (term2398 A K k dom f neut j).
Proof. exact (eq_refl (term2595 A K dom f neut j k)). Qed.
Lemma lem6774534 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2398 A K k dom f neut j.
Proof. exact (EQ_MP (@lem6774533 A K k dom f neut j) (@lem6774532 A K dom f neut j k)). Qed.
Lemma lem6774535 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (i : K) : term2596 A K k dom f neut j i.
Proof. exact (@lem6774534 A K k dom f neut j i). Qed.
Lemma lem6774536 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2596 A K k dom f neut j i) = (term2394 A K i k dom f neut j).
Proof. exact (eq_refl (term2596 A K k dom f neut j i)). Qed.
Lemma lem6774537 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2394 A K i k dom f neut j.
Proof. exact (EQ_MP (@lem6774536 A K i k dom f neut j) (@lem6774535 A K k dom f neut j i)). Qed.
Lemma lem6774538 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (ltle : type1402 K) : term2597 A K i k dom f neut j ltle.
Proof. exact (@lem6774537 A K i k dom f neut j ltle). Qed.
Lemma lem6774539 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : (term2597 A K i k dom f neut j ltle) = (term2386 A K ltle i k dom f neut j).
Proof. exact (eq_refl (term2597 A K i k dom f neut j ltle)). Qed.
Lemma lem6774540 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2386 A K ltle i k dom f neut j.
Proof. exact (EQ_MP (@lem6774539 A K ltle i k dom f neut j) (@lem6774538 A K i k dom f neut j ltle)). Qed.
Lemma lem6774542 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2386 A K ltle i k dom f neut j.
Proof. exact (@lem6769759 A K ltle i k dom f neut j (@lem6774540 A K ltle i k dom f neut j)). Qed.
Lemma lem6774543 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2387 A K ltle i k dom f neut j) : False.
Proof. exact (@lem6774542 A K ltle i k dom f neut j (@lem6769743 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6774544 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2387 A K ltle i k dom f neut j) : (term2387 A K ltle i k dom f neut j) = False.
Proof. exact (prop_ext (fun h2 : term2387 A K ltle i k dom f neut j => @lem6774543 A K ltle i k dom f neut j h1) (fun h2 : False => @lem6769743 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6774545 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) (h1 : term2387 A K ltle i k dom f neut j) : False.
Proof. exact (EQ_MP (@lem6774544 A K ltle i k dom f neut j h1) (@lem6769743 A K ltle i k dom f neut j h1)). Qed.
Lemma lem6774546 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2386 A K ltle i k dom f neut j.
Proof. exact (fun h0 : term2387 A K ltle i k dom f neut j => @lem6774545 A K ltle i k dom f neut j h0). Qed.
Lemma lem6774547 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (j : K) : term2385 A K ltle i k dom f neut j.
Proof. exact (EQ_MP (@lem6769742 A K ltle i k dom f neut j) (@lem6774546 A K ltle i k dom f neut j)). Qed.
Lemma lem6774549 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : term2384 A K ltle i k f dom neut j.
Proof. exact (EQ_MP (@lem6769738 A K ltle i k f dom neut j) (@lem6774547 A K ltle i k dom f neut j)). Qed.
Lemma lem6774550 {A K : Type'} (ltle : type1402 K) (neut : A) (j : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term2 K j i) (h6 : term29 K i k) (h7 : term504 A K f i dom) : term2371 A K ltle i k f dom neut j.
Proof. exact (@lem6774549 A K ltle i k f dom neut j (@lem6769274 A K ltle neut j k f i dom h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem6774551 {A K : Type'} (ltle : type1402 K) (neut : A) (j : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term2 K j i) (h6 : term29 K i k) (h7 : term504 A K f i dom) : term2358 A K ltle k f dom neut j i.
Proof. exact (EQ_MP (@lem6769258 A K ltle k f dom neut j i h5) (@lem6774550 A K ltle neut j k f i dom h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem6774553 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2257 A K ltle i k f dom neut j.
Proof. exact (EQ_MP (@lem6761101 A K ltle i k f dom neut j) (@lem6768909 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774554 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2358 A K ltle k f dom neut j i.
Proof. exact (or_elim (@lem6449481 K j i) (fun h0 : j = i => @lem6769102 A K ltle f dom neut k j i h5 h0) (fun h0 : term2 K j i => @lem6774551 A K ltle neut j k f i dom h1 h2 h3 h4 h0 h5 h6)). Qed.
Lemma lem6774555 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2598 A K ltle i k f dom neut j.
Proof. exact (conj (@lem6774554 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6774553 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774556 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term2598 A K ltle i k f dom neut j) = ((term1534 A K ltle i k f dom neut j) = (j = i)).
Proof. exact (@lem32 (term1534 A K ltle i k f dom neut j) (j = i)). Qed.
Lemma lem6774557 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term1534 A K ltle i k f dom neut j) = (j = i).
Proof. exact (EQ_MP (@lem6774556 A K ltle k f dom neut j i) (@lem6774555 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774558 {A K : Type'} (j : K) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term1533 A K ltle i k f dom neut j) = (j = i).
Proof. exact (EQ_MP (@lem6754097 A K ltle k f dom neut j i) (@lem6774557 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774563 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2599 A K ltle k f dom neut i.
Proof. exact (fun j : K => @lem6774558 A K j ltle neut k f i dom h1 h2 h3 h4 h5 h6). Qed.
Lemma lem6774564 {A K : Type'} (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term1511 A K ltle i k f dom neut) = i.
Proof. exact (@lem6754057 A K ltle k f dom neut i (@lem6774563 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774565 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term29 K i k) (h2 : (term1511 A K ltle i k f dom neut) = i) : (term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6602118 A K op ltle k f dom neut i h2) (@lem6754053 A K dom neut op ltle f i k h1)). Qed.
Lemma lem6774566 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : ((term1511 A K ltle i k f dom neut) = i) = ((term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h7 : (term1511 A K ltle i k f dom neut) = i => @lem6774565 A K op ltle k f dom neut i h5 h7) (fun h7 : (term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6774564 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774568 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term1529 A K ltle i k f dom neut) (h5 : term572 A K f i neut) (h6 : term29 K i k) (h7 : term504 A K f i dom) : (term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (@lem6602103 A K op ltle neut k f i dom h1 h2 h3 h5 h6 h7 (@lem6586905 A K ltle i k f dom neut h4)). Qed.
Lemma lem6774569 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term1529 A K ltle i k f dom neut) (h5 : term572 A K f i neut) (h6 : term29 K i k) (h7 : term504 A K f i dom) : (term1529 A K ltle i k f dom neut) = ((term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h8 : term1529 A K ltle i k f dom neut => @lem6774568 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6 h7) (fun h8 : (term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6586845 A K ltle i k f dom neut h4)). Qed.
Lemma lem6774570 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term1529 A K ltle i k f dom neut) (h5 : term572 A K f i neut) (h6 : term29 K i k) (h7 : term504 A K f i dom) : (term1515 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774569 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6 h7) (@lem6586845 A K ltle i k f dom neut h4)). Qed.
Lemma lem6774571 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1518 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1529 A K ltle i k f dom neut => @lem6774570 A K op ltle neut k f i dom h1 h2 h3 h0 h4 h5 h6). Qed.
Lemma lem6774572 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term1520 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774566 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6774564 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774573 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1523 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term1512 A K ltle i k f dom neut => @lem6774572 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6). Qed.
Lemma lem6774574 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term1526 A K i dom neut op ltle k f.
Proof. exact (conj (@lem6774573 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6774571 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774575 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term1264 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6586827 A K i dom neut op ltle k f) (@lem6774574 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774576 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2600 A K i dom neut op ltle k f.
Proof. exact (conj (@lem6586809 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6774575 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774577 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : term2601 A K i dom neut op ltle k f.
Proof. exact (conj (@lem6578200 A K ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6774576 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774578 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (@lem6574055 A K i dom neut op ltle k f (@lem6774577 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6774579 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term574 A K dom f i neut) : term572 A K f i neut.
Proof. exact (proj2 (@lem6555421 A K dom f i neut h1)). Qed.
Lemma lem6774580 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term574 A K dom f i neut) : term504 A K f i dom.
Proof. exact (proj1 (@lem6555421 A K dom f i neut h1)). Qed.
Lemma lem6774581 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term572 A K f i neut) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h7 : term572 A K f i neut => @lem6774578 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (fun h7 : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6555422 A K f i neut h4)). Qed.
Lemma lem6774582 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774581 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6555422 A K f i neut h4)). Qed.
Lemma lem6774583 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term504 A K f i dom) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h7 : term504 A K f i dom => @lem6774582 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (fun h7 : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6555423 A K f i dom h6)). Qed.
Lemma lem6774584 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (neut : A) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term572 A K f i neut) (h5 : term29 K i k) (h6 : term504 A K f i dom) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774583 A K op ltle neut k f i dom h1 h2 h3 h4 h5 h6) (@lem6555423 A K f i dom h6)). Qed.
Lemma lem6774585 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (neut : A) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term574 A K dom f i neut) (h6 : term504 A K f i dom) : (term572 A K f i neut) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h7 : term572 A K f i neut => @lem6774584 A K op ltle neut k f i dom h1 h2 h3 h7 h4 h6) (fun h7 : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6774579 A K dom f i neut h5)). Qed.
Lemma lem6774586 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (neut : A) (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term574 A K dom f i neut) (h6 : term504 A K f i dom) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774585 A K op ltle k neut f i dom h1 h2 h3 h4 h5 h6) (@lem6774579 A K dom f i neut h5)). Qed.
Lemma lem6774587 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term574 A K dom f i neut) : (term504 A K f i dom) = ((term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h6 : term504 A K f i dom => @lem6774586 A K op ltle k neut f i dom h1 h2 h3 h4 h5 h6) (fun h6 : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f) => @lem6774580 A K dom f i neut h5)). Qed.
Lemma lem6774588 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term574 A K dom f i neut) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774587 A K op ltle k dom f i neut h1 h2 h3 h4 h5) (@lem6774580 A K dom f i neut h5)). Qed.
Lemma lem6774589 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term578 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term574 A K dom f i neut => @lem6774588 A K op ltle k dom f i neut h1 h2 h3 h4 h0). Qed.
Lemma lem6774590 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term577 A K i dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6555420 A K i dom neut op ltle k f) (@lem6774589 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774591 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term426 A K f i dom neut) : (term567 A K op ltle i k f dom neut) = (term493 A K i dom neut op ltle k f).
Proof. exact (@lem6774590 A K op ltle f dom neut i k h1 h2 h3 h4 (@lem6555335 A K f i dom neut h5)). Qed.
Lemma lem6774593 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555436 A K i dom neut op ltle k f) (@lem6574050 A K op ltle f dom neut i k h1 h2 h3 h4 h5)). Qed.
Lemma lem6774594 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term540 A K f i dom neut) = ((term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f)).
Proof. exact (prop_ext (fun h6 : term540 A K f i dom neut => @lem6774593 A K op ltle f dom neut i k h1 h2 h3 h4 h5) (fun h6 : (term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f) => @lem6555305 A K f i dom neut h4)). Qed.
Lemma lem6774595 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term540 A K f i dom neut) (h5 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (@iterato A K dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774594 A K op ltle f dom neut i k h1 h2 h3 h4 h5) (@lem6555305 A K f i dom neut h4)). Qed.
Lemma lem6774596 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term557 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term540 A K f i dom neut => @lem6774595 A K op ltle f dom neut i k h1 h2 h3 h0 h4). Qed.
Lemma lem6774597 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term426 A K f i dom neut) : (term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555330 A K i dom neut op ltle k f) (@lem6774591 A K op ltle k f i dom neut h1 h2 h3 h4 h5)). Qed.
Lemma lem6774598 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term426 A K f i dom neut) : (term426 A K f i dom neut) = ((term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h6 : term426 A K f i dom neut => @lem6774597 A K op ltle k f i dom neut h1 h2 h3 h4 h5) (fun h6 : (term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f) => @lem6555288 A K f i dom neut h5)). Qed.
Lemma lem6774599 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) (h5 : term426 A K f i dom neut) : (term484 A K dom neut op ltle i k f) = (term493 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774598 A K op ltle k f i dom neut h1 h2 h3 h4 h5) (@lem6555288 A K f i dom neut h5)). Qed.
Lemma lem6774600 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term561 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term426 A K f i dom neut => @lem6774599 A K op ltle k f i dom neut h1 h2 h3 h4 h0). Qed.
Lemma lem6774601 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : term564 A K i dom neut op ltle k f.
Proof. exact (conj (@lem6774600 A K op ltle f dom neut i k h1 h2 h3 h4) (@lem6774596 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774602 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (term546 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555287 A K i dom neut op ltle k f) (@lem6774601 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774603 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (term545 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555269 A K i dom neut op ltle k f) (@lem6774602 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774604 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (term539 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555258 A K i dom neut op ltle k f) (@lem6774603 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774605 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (k : K -> Prop) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) (h4 : term29 K i k) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6555241 A K dom neut op ltle f i k h4) (@lem6774604 A K op ltle f dom neut i k h1 h2 h3 h4)). Qed.
Lemma lem6774606 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (or_elim (@lem6452320 K i k) (fun h0 : @IN K i k => @lem6491018 A K dom neut op ltle f i k h0) (fun h0 : term29 K i k => @lem6774605 A K op ltle f dom neut i k h1 h2 h3 h0)). Qed.
Lemma lem6774607 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term478 A K ltle k f dom neut i) : term479 A K ltle k f dom neut i.
Proof. exact (proj2 (@lem6452661 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774608 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term478 A K ltle k f dom neut i) : term480 A K k f dom neut.
Proof. exact (proj1 (@lem6452661 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774609 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term479 A K ltle k f dom neut i) : term481 A K ltle k f dom neut i.
Proof. exact (proj2 (@lem6452662 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774610 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term479 A K ltle k f dom neut i) : term482 K k ltle i.
Proof. exact (proj1 (@lem6452662 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774611 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : (term481 A K ltle k f dom neut i) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h4 : term481 A K ltle k f dom neut i => @lem6774606 A K op ltle i k f dom neut h1 h2 h3) (fun h4 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6452664 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774612 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774611 A K op ltle i k f dom neut h1 h2 h3) (@lem6452664 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774613 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : (term482 K k ltle i) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h4 : term482 K k ltle i => @lem6774612 A K op ltle i k f dom neut h1 h2 h3) (fun h4 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6452665 K k ltle i h2)). Qed.
Lemma lem6774614 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term481 A K ltle k f dom neut i) (h2 : term482 K k ltle i) (h3 : term480 A K k f dom neut) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774613 A K op ltle i k f dom neut h1 h2 h3) (@lem6452665 K k ltle i h2)). Qed.
Lemma lem6774615 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) (h3 : term479 A K ltle k f dom neut i) : (term481 A K ltle k f dom neut i) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h4 : term481 A K ltle k f dom neut i => @lem6774614 A K op ltle i k f dom neut h4 h1 h2) (fun h4 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6774609 A K ltle k f dom neut i h3)). Qed.
Lemma lem6774616 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term482 K k ltle i) (h2 : term480 A K k f dom neut) (h3 : term479 A K ltle k f dom neut i) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774615 A K op ltle k f dom neut i h1 h2 h3) (@lem6774609 A K ltle k f dom neut i h3)). Qed.
Lemma lem6774617 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term479 A K ltle k f dom neut i) : (term482 K k ltle i) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h3 : term482 K k ltle i => @lem6774616 A K op ltle k f dom neut i h3 h1 h2) (fun h3 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6774610 A K ltle k f dom neut i h2)). Qed.
Lemma lem6774618 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term479 A K ltle k f dom neut i) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774617 A K op ltle k f dom neut i h1 h2) (@lem6774610 A K ltle k f dom neut i h2)). Qed.
Lemma lem6774619 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term479 A K ltle k f dom neut i) : (term480 A K k f dom neut) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h3 : term480 A K k f dom neut => @lem6774618 A K op ltle k f dom neut i h1 h2) (fun h3 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6452663 A K k f dom neut h1)). Qed.
Lemma lem6774620 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term479 A K ltle k f dom neut i) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774619 A K op ltle k f dom neut i h1 h2) (@lem6452663 A K k f dom neut h1)). Qed.
Lemma lem6774621 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term478 A K ltle k f dom neut i) : (term479 A K ltle k f dom neut i) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h3 : term479 A K ltle k f dom neut i => @lem6774620 A K op ltle k f dom neut i h1 h3) (fun h3 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6774607 A K ltle k f dom neut i h2)). Qed.
Lemma lem6774622 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term480 A K k f dom neut) (h2 : term478 A K ltle k f dom neut i) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774621 A K op ltle k f dom neut i h1 h2) (@lem6774607 A K ltle k f dom neut i h2)). Qed.
Lemma lem6774623 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term478 A K ltle k f dom neut i) : (term480 A K k f dom neut) = ((term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f)).
Proof. exact (prop_ext (fun h2 : term480 A K k f dom neut => @lem6774622 A K op ltle k f dom neut i h2 h1) (fun h2 : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f) => @lem6774608 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774624 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (h1 : term478 A K ltle k f dom neut i) : (term484 A K dom neut op ltle i k f) = (term524 A K i dom neut op ltle k f).
Proof. exact (EQ_MP (@lem6774623 A K op ltle k f dom neut i h1) (@lem6774608 A K ltle k f dom neut i h1)). Qed.
Lemma lem6774625 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term2602 A K i dom neut op ltle k f.
Proof. exact (fun h0 : term478 A K ltle k f dom neut i => @lem6774624 A K op ltle k f dom neut i h0). Qed.
Lemma lem6774630 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term2603 A K i dom neut op ltle f.
Proof. exact (fun k : K -> Prop => @lem6774625 A K i dom neut op ltle k f). Qed.
Lemma lem6774635 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term2604 A K dom neut op ltle f.
Proof. exact (fun i : K => @lem6774630 A K i dom neut op ltle f). Qed.
Lemma lem6774636 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term2605 A K dom neut op ltle f.
Proof. exact (conj (@lem6452660 A K dom op ltle f neut) (@lem6774635 A K dom neut op ltle f)). Qed.
Lemma lem6774641 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term2606 A K dom neut op ltle.
Proof. exact (fun f : K -> A => @lem6774636 A K dom neut op ltle f). Qed.
Lemma lem6774646 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term2607 A K dom neut op.
Proof. exact (fun ltle : type1402 K => @lem6774641 A K dom neut op ltle). Qed.
Lemma lem6774651 {A K : Type'} (dom : A -> Prop) (neut : A) : term2608 A K dom neut.
Proof. exact (fun op : type1400 A => @lem6774646 A K dom neut op). Qed.
Lemma lem6774656 {A K : Type'} (dom : A -> Prop) : term2609 A K dom.
Proof. exact (fun neut : A => @lem6774651 A K dom neut). Qed.
Lemma lem6774661 {A K : Type'} : term2610 A K.
Proof. exact (fun dom : A -> Prop => @lem6774656 A K dom). Qed.
