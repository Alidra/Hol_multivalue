Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term42 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) := forall y0 : a0, (~ (@IN a0 y0 (@UNIV a0))) -> (x0 y0) = x1.
Definition term27 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 (@UNIV a0)) -> @IN a1 (y2 y3) (@UNIV a1)) /\ (forall y3 : a0, (~ (@IN a0 y3 (@UNIV a0))) -> (y2 y3) = y0)) y2)) (Nat.pow x0 x1).
Definition term58 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := fun y0 : a1 => @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 (@UNIV a0)) -> @IN a1 (y2 y3) (@UNIV a1)) /\ (forall y3 : a0, (~ (@IN a0 y3 (@UNIV a0))) -> (y2 y3) = y0)) y2)) (Nat.pow x0 x1).
Definition term46 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) := fun y0 : a0 -> a1 => @SETSPEC (a0 -> a1) x0 ((forall y1 : a0, (@IN a0 y1 (@UNIV a0)) -> @IN a1 (y0 y1) (@UNIV a1)) /\ (forall y1 : a0, (~ (@IN a0 y1 (@UNIV a0))) -> (y0 y1) = x1)) y0.
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a1 -> Prop) (x3 : nat) := (@HAS_SIZE a0 x0 x1) /\ (@HAS_SIZE a1 x2 x3).
Definition term59 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := fun y0 : a1 => @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term15 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := ((@HAS_SIZE a0 x1 x3) /\ (@HAS_SIZE a1 x0 x2)) -> forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 x1) -> @IN a1 (y2 y3) x0) /\ (forall y3 : a0, (~ (@IN a0 y3 x1)) -> (y2 y3) = y0)) y2)) (Nat.pow x2 x3).
Definition term35 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term8 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : nat) (x3 : nat) := (fun y0 : nat => forall y1 : a0 -> Prop, ((@HAS_SIZE a0 y1 y0) /\ (@HAS_SIZE a1 x0 x2)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y2 : a0 -> a1 => exists y3 : a0 -> a1, @SETSPEC (a0 -> a1) y2 ((forall y4 : a0, (@IN a0 y4 y1) -> @IN a1 (y3 y4) x0) /\ (forall y4 : a0, (~ (@IN a0 y4 y1)) -> (y3 y4) = x1)) y3)) (Nat.pow x2 y0)) x3.
Definition term18 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : a1 -> Prop, forall y1 : nat, forall y2 : a0 -> Prop, ((@HAS_SIZE a0 y2 y1) /\ (@HAS_SIZE a1 y0 x0)) -> forall y3 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y4 : a0 -> a1 => exists y5 : a0 -> a1, @SETSPEC (a0 -> a1) y4 ((forall y6 : a0, (@IN a0 y6 y2) -> @IN a1 (y5 y6) y0) /\ (forall y6 : a0, (~ (@IN a0 y6 y2)) -> (y5 y6) = y3)) y5)) (Nat.pow x0 y1).
Definition term5 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : nat) := forall y0 : a1 -> Prop, forall y1 : nat, forall y2 : a0 -> Prop, ((@HAS_SIZE a0 y2 y1) /\ (@HAS_SIZE a1 y0 x1)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y3 : a0 -> a1 => exists y4 : a0 -> a1, @SETSPEC (a0 -> a1) y3 ((forall y5 : a0, (@IN a0 y5 y2) -> @IN a1 (y4 y5) y0) /\ (forall y5 : a0, (~ (@IN a0 y5 y2)) -> (y4 y5) = x0)) y4)) (Nat.pow x1 y1).
Definition term34 (a0 : Type') := forall y0 : a0, True.
Definition term2 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => forall y1 : nat, forall y2 : a1 -> Prop, forall y3 : nat, forall y4 : a0 -> Prop, ((@HAS_SIZE a0 y4 y3) /\ (@HAS_SIZE a1 y2 y1)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y4) -> @IN a1 (y6 y7) y2) /\ (forall y7 : a0, (~ (@IN a0 y7 y4)) -> (y6 y7) = y0)) y6)) (Nat.pow y1 y3)) x0.
Definition term47 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 -> a1 => @SETSPEC (a0 -> a1) x0 True y0.
Definition term16 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : nat) (x2 : nat) := forall y0 : a0 -> Prop, ((@HAS_SIZE a0 y0 x2) /\ (@HAS_SIZE a1 x0 x1)) -> forall y1 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y2 : a0 -> a1 => exists y3 : a0 -> a1, @SETSPEC (a0 -> a1) y2 ((forall y4 : a0, (@IN a0 y4 y0) -> @IN a1 (y3 y4) x0) /\ (forall y4 : a0, (~ (@IN a0 y4 y0)) -> (y3 y4) = y1)) y3)) (Nat.pow x1 x2).
Definition term20 (a0 : Type') (a1 : Type') := (forall y0 : a1, forall y1 : nat, forall y2 : a1 -> Prop, forall y3 : nat, forall y4 : a0 -> Prop, ((@HAS_SIZE a0 y4 y3) /\ (@HAS_SIZE a1 y2 y1)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y4) -> @IN a1 (y6 y7) y2) /\ (forall y7 : a0, (~ (@IN a0 y7 y4)) -> (y6 y7) = y0)) y6)) (Nat.pow y1 y3)) -> forall y0 : nat, forall y1 : a1 -> Prop, forall y2 : nat, forall y3 : a0 -> Prop, ((@HAS_SIZE a0 y3 y2) /\ (@HAS_SIZE a1 y1 y0)) -> forall y4 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y3) -> @IN a1 (y6 y7) y1) /\ (forall y7 : a0, (~ (@IN a0 y7 y3)) -> (y6 y7) = y4)) y6)) (Nat.pow y0 y2).
Definition term51 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 True y1.
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) := (forall y0 : a0, (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x0 y0) (@UNIV a1)) /\ (forall y0 : a0, (~ (@IN a0 y0 (@UNIV a0))) -> (x0 y0) = x1).
Definition term63 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := (forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 (@UNIV a0)) -> @IN a1 (y2 y3) (@UNIV a1)) /\ (forall y3 : a0, (~ (@IN a0 y3 (@UNIV a0))) -> (y2 y3) = y0)) y2)) (Nat.pow x0 x1)) -> @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term55 (a0 : Type') (a1 : Type') (x0 : a1) := @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 (@UNIV a0)) -> @IN a1 (y1 y2) (@UNIV a1)) /\ (forall y2 : a0, (~ (@IN a0 y2 (@UNIV a0))) -> (y1 y2) = x0)) y1)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : nat) (x2 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : nat, forall y2 : a0 -> Prop, ((@HAS_SIZE a0 y2 y1) /\ (@HAS_SIZE a1 y0 x1)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y3 : a0 -> a1 => exists y4 : a0 -> a1, @SETSPEC (a0 -> a1) y3 ((forall y5 : a0, (@IN a0 y5 y2) -> @IN a1 (y4 y5) y0) /\ (forall y5 : a0, (~ (@IN a0 y5 y2)) -> (y4 y5) = x0)) y4)) (Nat.pow x1 y1)) x2.
Definition term31 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 => (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x0 y0) (@UNIV a1).
Definition term49 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := exists y0 : a0 -> a1, @SETSPEC (a0 -> a1) x0 True y0.
Definition term40 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a1) := False -> (x0 x1) = x2.
Definition term0 (a0 : Type') (x0 : a0) := (fun y0 : a0 => @IN a0 y0 (@UNIV a0)) x0.
Definition term39 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a1) := (~ (@IN a0 x1 (@UNIV a0))) -> (x0 x1) = x2.
Definition term29 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @IN a1 (x0 x1) (@UNIV a1).
Definition term25 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := (@HAS_SIZE a0 (@UNIV a0) x0) /\ (@HAS_SIZE a1 (@UNIV a1) x1).
Definition term54 (a0 : Type') := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 True y1).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : a1) (x3 : nat) (x4 : nat) := @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 x1) -> @IN a1 (y1 y2) x0) /\ (forall y2 : a0, (~ (@IN a0 y2 x1)) -> (y1 y2) = x2)) y1)) (Nat.pow x3 x4).
Definition term67 (a0 : Type') (a1 : Type') := forall y0 : nat, forall y1 : nat, ((@HAS_SIZE a0 (@UNIV a0) y0) /\ (@HAS_SIZE a1 (@UNIV a1) y1)) -> @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow y1 y0).
Definition term19 (a0 : Type') (a1 : Type') := forall y0 : nat, forall y1 : a1 -> Prop, forall y2 : nat, forall y3 : a0 -> Prop, ((@HAS_SIZE a0 y3 y2) /\ (@HAS_SIZE a1 y1 y0)) -> forall y4 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y3) -> @IN a1 (y6 y7) y1) /\ (forall y7 : a0, (~ (@IN a0 y7 y3)) -> (y6 y7) = y4)) y6)) (Nat.pow y0 y2).
Definition term17 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : nat) := forall y0 : nat, forall y1 : a0 -> Prop, ((@HAS_SIZE a0 y1 y0) /\ (@HAS_SIZE a1 x0 x1)) -> forall y2 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y3 : a0 -> a1 => exists y4 : a0 -> a1, @SETSPEC (a0 -> a1) y3 ((forall y5 : a0, (@IN a0 y5 y1) -> @IN a1 (y4 y5) x0) /\ (forall y5 : a0, (~ (@IN a0 y5 y1)) -> (y4 y5) = y2)) y4)) (Nat.pow x1 y0).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : nat) := forall y0 : nat, forall y1 : a0 -> Prop, ((@HAS_SIZE a0 y1 y0) /\ (@HAS_SIZE a1 x0 x2)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y2 : a0 -> a1 => exists y3 : a0 -> a1, @SETSPEC (a0 -> a1) y2 ((forall y4 : a0, (@IN a0 y4 y1) -> @IN a1 (y3 y4) x0) /\ (forall y4 : a0, (~ (@IN a0 y4 y1)) -> (y3 y4) = x1)) y3)) (Nat.pow x2 y0).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : nat, forall y1 : a1 -> Prop, forall y2 : nat, forall y3 : a0 -> Prop, ((@HAS_SIZE a0 y3 y2) /\ (@HAS_SIZE a1 y1 y0)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y4 : a0 -> a1 => exists y5 : a0 -> a1, @SETSPEC (a0 -> a1) y4 ((forall y6 : a0, (@IN a0 y6 y3) -> @IN a1 (y5 y6) y1) /\ (forall y6 : a0, (~ (@IN a0 y6 y3)) -> (y5 y6) = x0)) y5)) (Nat.pow y0 y2).
Definition term26 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := ((@HAS_SIZE a0 (@UNIV a0) x1) /\ (@HAS_SIZE a1 (@UNIV a1) x0)) -> forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 (@UNIV a0)) -> @IN a1 (y2 y3) (@UNIV a1)) /\ (forall y3 : a0, (~ (@IN a0 y3 (@UNIV a0))) -> (y2 y3) = y0)) y2)) (Nat.pow x0 x1).
Definition term32 (a0 : Type') := fun y0 : a0 => True.
Definition term50 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 (@UNIV a0)) -> @IN a1 (y1 y2) (@UNIV a1)) /\ (forall y2 : a0, (~ (@IN a0 y2 (@UNIV a0))) -> (y1 y2) = x0)) y1.
Definition term41 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) := fun y0 : a0 => (~ (@IN a0 y0 (@UNIV a0))) -> (x0 y0) = x1.
Definition term38 (a0 : Type') (x0 : a0) := imp (~ (@IN a0 x0 (@UNIV a0))).
Definition term21 (a0 : Type') (a1 : Type') (x0 : nat) := (fun y0 : nat => forall y1 : a1 -> Prop, forall y2 : nat, forall y3 : a0 -> Prop, ((@HAS_SIZE a0 y3 y2) /\ (@HAS_SIZE a1 y1 y0)) -> forall y4 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y3) -> @IN a1 (y6 y7) y1) /\ (forall y7 : a0, (~ (@IN a0 y7 y3)) -> (y6 y7) = y4)) y6)) (Nat.pow y0 y2)) x0.
Definition term56 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : nat) (x2 : nat) := @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 (@UNIV a0)) -> @IN a1 (y1 y2) (@UNIV a1)) /\ (forall y2 : a0, (~ (@IN a0 y2 (@UNIV a0))) -> (y1 y2) = x0)) y1)) (Nat.pow x1 x2).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := and (forall y0 : a0, (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x0 y0) (@UNIV a1)).
Definition term14 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 x1) -> @IN a1 (y2 y3) x0) /\ (forall y3 : a0, (~ (@IN a0 y3 x1)) -> (y2 y3) = y0)) y2)) (Nat.pow x2 x3).
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a1) := @SETSPEC (a0 -> a1) x0 ((forall y0 : a0, (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x1 y0) (@UNIV a1)) /\ (forall y0 : a0, (~ (@IN a0 y0 (@UNIV a0))) -> (x1 y0) = x2)).
Definition term45 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) (x2 : a0 -> a1) := @SETSPEC (a0 -> a1) x0 ((forall y0 : a0, (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x2 y0) (@UNIV a1)) /\ (forall y0 : a0, (~ (@IN a0 y0 (@UNIV a0))) -> (x2 y0) = x1)) x2.
Definition term53 (a0 : Type') (a1 : Type') := @GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 True y1).
Definition term52 (a0 : Type') (a1 : Type') (x0 : a1) := @GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 (@UNIV a0)) -> @IN a1 (y1 y2) (@UNIV a1)) /\ (forall y2 : a0, (~ (@IN a0 y2 (@UNIV a0))) -> (y1 y2) = x0)) y1).
Definition term28 (a0 : Type') (x0 : a0) := imp (@IN a0 x0 (@UNIV a0)).
Definition term1 (a0 : Type') (a1 : Type') := forall y0 : a1, forall y1 : nat, forall y2 : a1 -> Prop, forall y3 : nat, forall y4 : a0 -> Prop, ((@HAS_SIZE a0 y4 y3) /\ (@HAS_SIZE a1 y2 y1)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y5 : a0 -> a1 => exists y6 : a0 -> a1, @SETSPEC (a0 -> a1) y5 ((forall y7 : a0, (@IN a0 y7 y4) -> @IN a1 (y6 y7) y2) /\ (forall y7 : a0, (~ (@IN a0 y7 y4)) -> (y6 y7) = y0)) y6)) (Nat.pow y1 y3).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : nat) (x2 : nat) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => ((@HAS_SIZE a0 y0 x2) /\ (@HAS_SIZE a1 x0 x1)) -> forall y1 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y2 : a0 -> a1 => exists y3 : a0 -> a1, @SETSPEC (a0 -> a1) y2 ((forall y4 : a0, (@IN a0 y4 y0) -> @IN a1 (y3 y4) x0) /\ (forall y4 : a0, (~ (@IN a0 y4 y0)) -> (y3 y4) = y1)) y3)) (Nat.pow x1 x2)) x3.
Definition term10 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : nat) (x3 : nat) (x4 : a0 -> Prop) := (fun y0 : a0 -> Prop => ((@HAS_SIZE a0 y0 x3) /\ (@HAS_SIZE a1 x0 x2)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 y0) -> @IN a1 (y2 y3) x0) /\ (forall y3 : a0, (~ (@IN a0 y3 y0)) -> (y2 y3) = x1)) y2)) (Nat.pow x2 x3)) x4.
Definition term57 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term11 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0 -> Prop) (x2 : a1) (x3 : nat) (x4 : nat) := ((@HAS_SIZE a0 x1 x4) /\ (@HAS_SIZE a1 x0 x3)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y0 : a0 -> a1 => exists y1 : a0 -> a1, @SETSPEC (a0 -> a1) y0 ((forall y2 : a0, (@IN a0 y2 x1) -> @IN a1 (y1 y2) x0) /\ (forall y2 : a0, (~ (@IN a0 y2 x1)) -> (y1 y2) = x2)) y1)) (Nat.pow x3 x4).
Definition term60 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := forall y0 : a1, @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term22 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : nat, forall y2 : a0 -> Prop, ((@HAS_SIZE a0 y2 y1) /\ (@HAS_SIZE a1 y0 x0)) -> forall y3 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y4 : a0 -> a1 => exists y5 : a0 -> a1, @SETSPEC (a0 -> a1) y4 ((forall y6 : a0, (@IN a0 y6 y2) -> @IN a1 (y5 y6) y0) /\ (forall y6 : a0, (~ (@IN a0 y6 y2)) -> (y5 y6) = y3)) y5)) (Nat.pow x0 y1)) x1.
Definition term30 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (@IN a0 x1 (@UNIV a0)) -> @IN a1 (x0 x1) (@UNIV a1).
Definition term65 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := ((@HAS_SIZE a0 (@UNIV a0) x1) /\ (@HAS_SIZE a1 (@UNIV a1) x0)) -> @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : nat) := (fun y0 : nat => forall y1 : a1 -> Prop, forall y2 : nat, forall y3 : a0 -> Prop, ((@HAS_SIZE a0 y3 y2) /\ (@HAS_SIZE a1 y1 y0)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y4 : a0 -> a1 => exists y5 : a0 -> a1, @SETSPEC (a0 -> a1) y4 ((forall y6 : a0, (@IN a0 y6 y3) -> @IN a1 (y5 y6) y1) /\ (forall y6 : a0, (~ (@IN a0 y6 y3)) -> (y5 y6) = x0)) y5)) (Nat.pow y0 y2)) x1.
Definition term61 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := imp (forall y0 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 (@UNIV a0)) -> @IN a1 (y2 y3) (@UNIV a1)) /\ (forall y3 : a0, (~ (@IN a0 y3 (@UNIV a0))) -> (y2 y3) = y0)) y2)) (Nat.pow x0 x1)).
Definition term33 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0, (@IN a0 y0 (@UNIV a0)) -> @IN a1 (x0 y0) (@UNIV a1).
Definition term37 (a0 : Type') (x0 : a0) := ~ (@IN a0 x0 (@UNIV a0)).
Definition term64 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := (@HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1)) -> @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1).
Definition term9 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : nat) (x3 : nat) := forall y0 : a0 -> Prop, ((@HAS_SIZE a0 y0 x3) /\ (@HAS_SIZE a1 x0 x2)) -> @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y1 : a0 -> a1 => exists y2 : a0 -> a1, @SETSPEC (a0 -> a1) y1 ((forall y3 : a0, (@IN a0 y3 y0) -> @IN a1 (y2 y3) x0) /\ (forall y3 : a0, (~ (@IN a0 y3 y0)) -> (y2 y3) = x1)) y2)) (Nat.pow x2 x3).
Definition term66 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : nat, ((@HAS_SIZE a0 (@UNIV a0) x0) /\ (@HAS_SIZE a1 (@UNIV a1) y0)) -> @HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow y0 x0).
Definition term48 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a1) := exists y0 : a0 -> a1, @SETSPEC (a0 -> a1) x0 ((forall y1 : a0, (@IN a0 y1 (@UNIV a0)) -> @IN a1 (y0 y1) (@UNIV a1)) /\ (forall y1 : a0, (~ (@IN a0 y1 (@UNIV a0))) -> (y0 y1) = x1)) y0.
Definition term62 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := imp (@HAS_SIZE (a0 -> a1) (@UNIV (a0 -> a1)) (Nat.pow x0 x1)).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : nat) (x2 : nat) := (fun y0 : nat => forall y1 : a0 -> Prop, ((@HAS_SIZE a0 y1 y0) /\ (@HAS_SIZE a1 x0 x1)) -> forall y2 : a1, @HAS_SIZE (a0 -> a1) (@GSPEC (a0 -> a1) (fun y3 : a0 -> a1 => exists y4 : a0 -> a1, @SETSPEC (a0 -> a1) y3 ((forall y5 : a0, (@IN a0 y5 y1) -> @IN a1 (y4 y5) x0) /\ (forall y5 : a0, (~ (@IN a0 y5 y1)) -> (y4 y5) = y2)) y4)) (Nat.pow x1 y0)) x2.
