Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term11 (a0 : Type') (a1 : Type') := fun y0 : a1 => (@OUTR a0 a1 (@inr a0 a1 y0)) = y0.
Definition term5 (a0 : Type') (a1 : Type') := @ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y0 : type1278 a0 a1 => forall y1 : type1673, forall y2 : a1, (y0 y1 (@inr a0 a1 y2)) = y2) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))).
Definition term8 (a0 : Type') (a1 : Type') (x0 : a1) := @eq a1 (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y0 : type1278 a0 a1 => forall y1 : type1673, forall y2 : a1, (y0 y1 (@inr a0 a1 y2)) = y2) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (@inr a0 a1 x0)).
Definition term9 (a0 : Type') (a1 : Type') (x0 : a1) := @eq a1 (@OUTR a0 a1 (@inr a0 a1 x0)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => (@OUTR a0 a1 (@inr a0 a1 y0)) = y0) x0.
Definition term0 (a0 : Type') (a1 : Type') := (fun y0 : type1278 a0 a1 => forall y1 : type1673, forall y2 : a1, (y0 y1 (@inr a0 a1 y2)) = y2) (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y0 : type1278 a0 a1 => forall y1 : type1673, forall y2 : a1, (y0 y1 (@inr a0 a1 y2)) = y2)).
Definition term2 (a0 : Type') (a1 : Type') := (fun y0 : type1673 => forall y1 : a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y2 : type1278 a0 a1 => forall y3 : type1673, forall y4 : a1, (y2 y3 (@inr a0 a1 y4)) = y4) y0 (@inr a0 a1 y1)) = y1) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))).
Definition term12 (a0 : Type') (a1 : Type') := forall y0 : a1, (@OUTR a0 a1 (@inr a0 a1 y0)) = y0.
Definition term4 (a0 : Type') (a1 : Type') := forall y0 : a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y1 : type1278 a0 a1 => forall y2 : type1673, forall y3 : a1, (y1 y2 (@inr a0 a1 y3)) = y3) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (@inr a0 a1 y0)) = y0.
Definition term1 (a0 : Type') (a1 : Type') := forall y0 : type1673, forall y1 : a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y2 : type1278 a0 a1 => forall y3 : type1673, forall y4 : a1, (y2 y3 (@inr a0 a1 y4)) = y4) y0 (@inr a0 a1 y1)) = y1.
Definition term3 := @pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y0 : type1278 a0 a1 => forall y1 : type1673, forall y2 : a1, (y0 y1 (@inr a0 a1 y2)) = y2) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (@inr a0 a1 x0).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a1) := @OUTR a0 a1 (@inr a0 a1 x0).
Definition term10 (a0 : Type') (a1 : Type') := fun y0 : a1 => (@ε ((prod nat (prod nat (prod nat nat))) -> (Datatypes.sum a0 a1) -> a1) (fun y1 : type1278 a0 a1 => forall y2 : type1673, forall y3 : a1, (y1 y2 (@inr a0 a1 y3)) = y3) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (@inr a0 a1 y0)) = y0.
