require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term5 ≔ (∧ (∀ (λ y0 : El nadd, (nadd_eq y0 y0))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (nadd_eq y1 y0)))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (∀ (λ y2 : El nadd, (⇒ (∧ (nadd_eq y0 y1) (nadd_eq y1 y2)) (nadd_eq y0 y2)))))))) (∧ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0))))))));
symbol term9 ≔ (⇒ (∧ (∀ (λ y0 : El nadd, (nadd_eq y0 y0))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (nadd_eq y1 y0)))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (∀ (λ y2 : El nadd, (⇒ (∧ (nadd_eq y0 y1) (nadd_eq y1 y2)) (nadd_eq y0 y2)))))))) (∧ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0)))))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (= (mk_hreal (nadd_eq y0)) (mk_hreal (nadd_eq y1)))))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∀ (λ y1 : El nadd, (y0 (mk_hreal (nadd_eq y1))))) (∀ (λ y1 : El hreal, (y0 y1)))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∃ (λ y1 : El nadd, (y0 (mk_hreal (nadd_eq y1))))) (∃ (λ y1 : El hreal, (y0 y1)))))) (∀ (λ y0 : El hreal, (= (mk_hreal (nadd_eq ((@ε nadd) (dest_hreal y0)))) y0)))))));
symbol term8 (x0: El type926) (x1: El type1554) (x2: El type1546) ≔ (⇒ (∧ (∀ (λ y0 : El nadd, (x1 y0 y0))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (x1 y0 y1) (x1 y1 y0)))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (∀ (λ y2 : El nadd, (⇒ (∧ (x1 y0 y1) (x1 y1 y2)) (x1 y0 y2)))))))) (∧ (∀ (λ y0 : El hreal, (= (x0 (x2 y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (x1 y1)))) (= (x2 (x0 y0)) y0)))))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (x1 y0 y1) (= (x0 (x1 y0)) (x0 (x1 y1)))))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∀ (λ y1 : El nadd, (y0 (x0 (x1 y1))))) (∀ (λ y1 : El hreal, (y0 y1)))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∃ (λ y1 : El nadd, (y0 (x0 (x1 y1))))) (∃ (λ y1 : El hreal, (y0 y1)))))) (∀ (λ y0 : El hreal, (= (x0 (x1 ((@ε nadd) (x2 y0)))) y0)))))));
symbol term6 a0 a1 (x0: El (type862 a0 a1)) (x1: El (type1402 a1)) (x2: El (type1413 a0 a1)) ≔ (⇒ (∧ (∀ (λ y0 : El a1, (x1 y0 y0))) (∧ (∀ (λ y0 : El a1, (∀ (λ y1 : El a1, (= (x1 y0 y1) (x1 y1 y0)))))) (∧ (∀ (λ y0 : El a1, (∀ (λ y1 : El a1, (∀ (λ y2 : El a1, (⇒ (∧ (x1 y0 y1) (x1 y1 y2)) (x1 y0 y2)))))))) (∧ (∀ (λ y0 : El a0, (= (x0 (x2 y0)) y0))) (∀ (λ y0 : El (fun a1 bool), (= (∃ (λ y1 : El a1, (= y0 (x1 y1)))) (= (x2 (x0 y0)) y0)))))))) (∧ (∀ (λ y0 : El a1, (∀ (λ y1 : El a1, (= (x1 y0 y1) (= (x0 (x1 y0)) (x0 (x1 y1)))))))) (∧ (∀ (λ y0 : El (fun a0 bool), (= (∀ (λ y1 : El a1, (y0 (x0 (x1 y1))))) (∀ (λ y1 : El a0, (y0 y1)))))) (∧ (∀ (λ y0 : El (fun a0 bool), (= (∃ (λ y1 : El a1, (y0 (x0 (x1 y1))))) (∃ (λ y1 : El a0, (y0 y1)))))) (∀ (λ y0 : El a0, (= (x0 (x1 ((@ε a1) (x2 y0)))) y0)))))));
symbol term7 a0 a1 (x0: El (type1402 a1)) (x1: El (type1413 a0 a1)) (x2: El (type862 a0 a1)) ≔ (∧ (∀ (λ y0 : El a1, (x0 y0 y0))) (∧ (∀ (λ y0 : El a1, (∀ (λ y1 : El a1, (= (x0 y0 y1) (x0 y1 y0)))))) (∧ (∀ (λ y0 : El a1, (∀ (λ y1 : El a1, (∀ (λ y2 : El a1, (⇒ (∧ (x0 y0 y1) (x0 y1 y2)) (x0 y0 y2)))))))) (∧ (∀ (λ y0 : El a0, (= (x2 (x1 y0)) y0))) (∀ (λ y0 : El (fun a1 bool), (= (∃ (λ y1 : El a1, (= y0 (x0 y1)))) (= (x1 (x2 y0)) y0))))))));
symbol term10 ≔ (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (= (mk_hreal (nadd_eq y0)) (mk_hreal (nadd_eq y1)))))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∀ (λ y1 : El nadd, (y0 (mk_hreal (nadd_eq y1))))) (∀ (λ y1 : El hreal, (y0 y1)))))) (∧ (∀ (λ y0 : El (fun hreal bool), (= (∃ (λ y1 : El nadd, (y0 (mk_hreal (nadd_eq y1))))) (∃ (λ y1 : El hreal, (y0 y1)))))) (∀ (λ y0 : El hreal, (= (mk_hreal (nadd_eq ((@ε nadd) (dest_hreal y0)))) y0))))));
symbol term4 ≔ (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (nadd_eq y1 y0)))))) (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (∀ (λ y2 : El nadd, (⇒ (∧ (nadd_eq y0 y1) (nadd_eq y1 y2)) (nadd_eq y0 y2)))))))) (∧ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0)))))));
symbol term3 ≔ (∧ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (∀ (λ y2 : El nadd, (⇒ (∧ (nadd_eq y0 y1) (nadd_eq y1 y2)) (nadd_eq y0 y2)))))))) (∧ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0))))));
symbol term2 ≔ (∧ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0))) (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0)))));
symbol term0 ≔ (∀ (λ y0 : El hreal, (= (mk_hreal (dest_hreal y0)) y0)));
symbol term1 ≔ (∀ (λ y0 : El (fun nadd bool), (= (∃ (λ y1 : El nadd, (= y0 (nadd_eq y1)))) (= (dest_hreal (mk_hreal y0)) y0))));
